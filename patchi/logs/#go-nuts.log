<hyphenated>	Freman: subcommands, basically
<hyphenated>	Freman: look at how the 'go' tool implements those
<_cb>	In oop inheritance I could say mamals drink milk, Dog(mammal), Hound(dog) great sense of smell,   Horse(mammal) eats grass Can I do that in GO? How, interfaces?
<cronos>	_cb: go is not strictly speaking OOP language. there's no inheritance.
<cronos>	don't try to twist it into something you're familiar with, that won't end well
<ebonics>	you know whats a good feeling
<ebonics>	when you struggle with something for like an hour
<ebonics>	getting 0 values from some external lib
<ebonics>	then you get some perty output like this [{1 2 1} {2 3 1} {2 6 10} {3 4 3} {4 5 1} {5 6 2}]
<ebonics>	cronos, idk. people keep saying it's not like an OOP language but it's got a lot of properties of one from what ive seen
<ebonics>	in my.. 1 day of using go
<_cb>	cronos I know Go is not oops. Am wondering if one can do in GO what OOP does with multiple levels of inheritance
<cronos>	_cb: you can use composition and embedded struct fields to get similar effects
<hfaafb>	you're swimming against the current if you force classic OOP patterns onto go
<cronos>	but really don't try to build type hierarchies
<cronos>	write what makes sense
<cronos>	ebonics: there are a lot of oo-ish features but you won't e.g. do gof patterns
<ebonics>	thats true cronos, but you can still wrap structs and override methods and use reflection and stuff
<ebonics>	it's not like C or something
<cronos>	you can but you generally shouldn't primarily use those things
<ebonics>	how come
*	Guest2753 is now known as SvenDowideit
<ebonics>	i understand why people might not want to use reflection, it somewhat defeats the purpose of static typing
<ebonics>	but the other stuff seems pretty fine to me?
<_cb>	So how would you write a GO program where Horses and Dogs share mamal characteristics. Pitbulls and Dobermans share Dog characteristcs ?
<hfaafb>	_cb: no one writes those programs
<hfaafb>	write real programs
<hfaafb>	ask real questions
<|Craig|>	_cb: decide where you want polymorphism. In those places use interfaces
<|Craig|>	_cb: how you impelment the interfaces is an implementation detail that can be done with composition, or through calling shared methods as desired
<_cb>	All forms have fields and all forms need to be processed. The type of fields and the type of processing will vary depending on the form
<ebonics>	_cb, you would use an interface for that design
<|Craig|>	_cb: if you have something that needs to be polymorphic over some set of forms, put the methods it needs in an interface
<|Craig|>	then implement them however you want, either by composition or some other means
<_cb>	I can see how interfaces get me to the first level  (All mamals drink milk) struggling on how interfaces get me to the second level (Horses and dogs)
<ebonics>	idk if
<_cb>	Can you have multiple interfaces for a struct? That would solve the problem (I think)
<|Craig|>	_cb all structs implement many interfaces (infinate really)
<hfaafb>	all types
<hfaafb>	can implement n interfaces
<ebonics>	i actually dont understand that
<_cb>	|Craig| Ok need to attack it from that angle. Maybe that is the solution
<jud>	are there any open source projects which are based off Google's Bigtable paper?
<|Craig|>	just define what ever interfaces you want that have methods your types have and they imeplement them
<|Craig|>	all your animals have a LegCount method? YOu can make an interface for leggy things and you can count them
<ebonics>	in the go docs it says that the methods are technically inside the containing package and not in the struct
<ebonics>	so how can the struct be said to implement any interfaces
<_cb>	I don't think the struct implements an interface. I think the methods just satisfy the signature of the interface (But am a Go newbie)
<ebonics>	my guess would be that the method signatures get injected into the structs and delegate to the outer package
<ebonics>	but i actually dont know, im too lazy to go look at the src code
<ebonics>	i probably wouldnt understand it anyway
<_cb>	ie type x interface{ MyMethod() string} will be satisfied by func (x whatever) MyMethod()string { return somestring}
<ebonics>	say im using a 3rd party library that uses some form of chaining. and i want to build on top of the lib to add more methods to chain, what would be the proper way to implement that in go?
<ebonics>	i mean in terms of packages it seems all weird
<_cb>	Am probably missing something but multiple interfaces won't solve it. In classical OOP the drink milk method would apply to all mammals but in Go I would have to implement a drink milk method for dogs and another for horses
<ebonics>	_cb, i still have no idea what youre talking about m8
<ebonics>	show some code or something so i can speak your language
<taruti>	What are you really trying to implement?
<ebonics>	me or _cb ?
<_cb>	A form is a collection of fields. All forms need to be populated and validated. In classical OOP I would have an object that has a slice of fields and a populate and validate abstract methods. Each form would implement those methods.
<_cb>	Getting late. Answer is probably on interfaces. Maybe after some sleep ;)
<taruti>	Typically trying to implement "classic" OOP (which is not that classic) in Go is the wrong way
<sammy007>	How to reverse a slice of bytes?
<taruti>	for-loop? :) or write a function?
<Freman>	I didn't... sorry, I am too tired to read any more I just did the lazy way... var cmds = make(map[string]func(...string) error); func init() {cmds["foo"] Bar}
<cronos>	sammy007: google "reverse an array"
<cronos>	just a for loop
<taruti>	for i:=0; i<len(s)/2; i++ { s[i],s[len(s)-i] = s[len(s)-i], s[i] } or somesuch
<cronos>	yup
<taruti>	(although just starting to drink my morning caffeine...)
<cronos>	-1 for indexes probably
<taruti>	yes, add the -1 :)
*	badon_ is now known as badon
<bananaphone>	howdy ho
*	akaizen_ is now known as akaizen
<zhaoym>	say i have 2 packages s and t. in package s i have a container S storing instances of type t.T. but t.T would also like to query S about other t.T's. that makes cycle imports. moving them to same package is an option. what are other viable options?
<movedx>	It sounds as though they should be in the same package, as they're directly related.
<zhaoym>	making them in the same package works, but then i lose some protection provided by exported variables and functions
<movedx>	I'm not expert enough to give you a definitive answer. I would have to see actual code to be able to comment.
<zhaoym>	it's a project of my day job so i cannot share the actual code at the moment. but thanks. on a second thought, it makes sense to having them in the same package, though i like the package boundary.
*	Temur is now known as Guest38859
*	Guest38859 is now known as kaplan
*	Tarmashirin is now known as kaplan
*	pjoe is now known as pjoe_dj
<zhaoym>	i made the change and they now live together. not that bad i have to say.
*	zz_r04r is now known as r04r
*	Temur is now known as Guest61794
*	tav_ is now known as tav
<foofoobar>	What do you guys think of gb (dependency management) ? Just read this: http://go-talks.appspot.com/github.com/davecheney/presentations/reproducible-builds.slide#1
<shambat>	I've written a small method to find the index of a value in a slice of strings. However, I can't use this method on regular slices of strings, they have to be of the type of the receiver: http://play.golang.org/p/L51ac9fHGh how can I do this in a better way, so I can use the method on string slices?
<jasondockers>	Would anyone mind explaining to me what is going on in this code snippet: http://pastie.org/10119811 ? It seems to be starting a goroutine which prints values generated by fib until it's printed 10 times. Then it sends 0 to the fib function which causes select to go into the quit case. Is that it?
<jasondockers>	0 to the fib function through the quit channel*
<skripted>	is there a way to optimize this? play.golang.org/p/bt0OOKpN6s the handlerfunc is so bloated but i don't know how to inject the render object besides using the closure
*	argv0 is now known as argv0-away
<jasondockers>	Nevermind, I understand that code. However I can't decipher what's going on here: http://pastie.org/10119820
<jasondockers>	in go func() {}() <-p , what is happening to p?
<jasondockers>	assume p is defined by :=make(chan bool(
<jasondockers>	and it was set to a value in the function
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
<albertito>	jasondockers: go func() {...}()  is one thing; the  <- p  is another
<jasondockers>	albertito, ah. So what does <-p mean on its own?
<albertito>	jasondockers: basically it's saying "run this function in another goroutine", and then it's saying "get a value out of p [and discard it]"
<jasondockers>	that seems pointless
<albertito>	(discard it because it's not getting assigned to anything)
<jasondockers>	that is pointless, right?
<albertito>	well, it makes blocking on p getting a message
<albertito>	it's not *always* pointless, but you can surely do pointless things with it =)
<jasondockers>	albertito, ah, so p must have a value to return before the program may continue on?
<jasondockers>	hence blocking.
<pmezard>	you really want to do the go tour
<albertito>	jasondockers: yes, exactly. That goroutine will block until someone puts a value in p
<jasondockers>	pmezard, I completed iit all stay concurrency :/. Thanks albertito.
*	argv0 is now known as argv0-away
*	argv0-away is now known as argv0
<dodgerblue>	hello! does anybody here have any experience on building go and cgo (especially) on powerpc 64 bit platforms?
<dodgerblue>	there's various setups online, and I've seen there's some support in the golang go repo as well
<dodgerblue>	the dev.powerpc64 branch
<dodgerblue>	however, when I try to compile cgo, I get some error related to _cgo_sys_thread_start no being defined
<dodgerblue>	and it's funny, cause on the master branch, I find the definition at src/runtime/cgo/gcc_linux_ppc64x.c
<dodgerblue>	so I'm kinda swamped
<zhaoym>	if i have a pointer inside a struct pointing to the struct itself, it will never get GC'ed?
<pmezard>	no it is fine, it will be collected
<young-gopher>	Hey, I am trying to implement some simple algorithms in go, and right now I'm doing linkedlists. I want the next attribute to be set to nil if the node is the last in list, but I can't seem to do it without using two lines, 12-13 http://play.golang.org/p/Btavr--rcj
<young-gopher>	Is there a way to do that on one line, or is the whole thing very bad practice and I should do this differently in Go?
<pmezard>	var root *LinkedList
<young-gopher>	Oh, it works now :o I must have typed something incorrectly, because I thought I had tried that already. Thank you so much :D
<young-gopher>	Should I do that for childchild aswell then or?
<pmezard>	you can := in the for loop
<jasondockers>	I understand what anonymous types in interfaces provide (extending the requirements from the "imported" anonymous type), but what exactly do anonymous fields in structs do?
<young-gopher>	Since they seem to have different meanings. Does the &interfaceName{} variant initialize the struct fields with default values?
<pmezard>	young-gopher: yes
<pmezard>	young-gopher: same as new(structType)
<young-gopher>	Is the use of new(structType) prefered?
<pmezard>	jasondockers: do you have an example?
<pmezard>	young-gopher: I prefer &structType{}
<jasondockers>	pmezard, struct {
<jasondockers>		T1        // field name is T1
<jasondockers>		*T2       // field name is T2
<jasondockers>		P.T3      // field name is T3
<jasondockers>		*P.T4     // field name is T4
<jasondockers>		x, y int  // field names are x and y
<jasondockers>	} from https://golang.org/ref/spec
<young-gopher>	Yeah, me too, but I want to follow conventions of other.
<pmezard>	more consistent when you explicitely initialize fields
<jasondockers>	sorry, I didn't realize there were returns
<pmezard>	jasondockers: there are such things as paste services
<jasondockers>	pmezard, I thought that would display as a single line :S
<pmezard>	jasondockers: I have to say I never used anonymous fields
*	a13x is now known as alexyzzz
<DancingFacet>	Hi everyone, what would be the best way to work with golang RPC library to build distributed software with long living connections (or at least that saves some throughput)
<aguilbau>	hey, is their a way to set the umask of a process launched with the os/exec package ? or will i have to reimplement it using syscall
<telling>	I have a list of structs, each struct has a uint64 field, i would then like the list sorted by these values in the structs. Any easy way to do this?
<pmezard>	use sort package
<Nesze>	hi
<zik>	hhh
<FunnyLookinHat>	aguilbau, there isn't any doc - but maybe this? https://golang.org/pkg/syscall/#Umask
<FunnyLookinHat>	aguilbau, and this is a good example that you could combine with syscall.Umask -> https://gobyexample.com/execing-processes
<Nesze>	https://play.golang.org/p/nxXjRfFeQp How would you mock the ma.Read() method?
<Nesze>	(I intend to test readHandle)
<Nesze>	(the ma.Read() function, not method)
<skelterjohn>	about to blast github.com/skelterjohn/wgo all over the place (reddit, golang-nuts, hn, etc). anyone available for some last-second feedback?
<aguilbau>	FunnyLookinHat: thanks, i was aware of this but was wondering if i could use it with the convenient wrapper os/exec. now i think i will just copy/paste syscall source code and modify it to add umask
<aguilbau>	FunnyLookinHat: is that the good way to do that sort of things in go ?
<FunnyLookinHat>	aguilbau, you could write your own interface that implements just the few methods you need
<dodgerblue>	so another question, perhaps this is more specific: how can I find the definition of what to link with src/runtime/cgo/gcc_util.c?
<dodgerblue>	I'm interested in linking src/runtime/cgo/gcc_linux_ppc64x.c
<dodgerblue>	and I have very little knowledge on how the build system works
<farhaven>	skelterjohn: from the description, nice tool
<farhaven>	haven't had a deeper look, but i'll pass it on to a friend who misses python virtualenv when using go :)
<aguilbau>	hmm i looked at  the source code, and I think that it would be a quite better solution to implement it in syscall rather than writing an interface. do you think it is worth a feature request?
<skelterjohn>	farhaven: thanks :)
<skelterjohn>	heading into work
*	balboah_ is now known as balboah
<KettleWork>	Is there an easy way to throttle CPU usage of a go program? Every minute I'm doing some calculations which brings the CPU to 99% for 8 seconds, and then it chills. I'd like to make sure it doesn't surpass maybe.. 50%?
<KettleWork>	(in linux ubuntu server)
<farhaven>	KettleWork: cpulimit comes to mind
<mister_zombie>	Quick question about gocode, there seems to be a way to integrate that with yasnippet to expand the arguments into snippets, how does that work?
<mister_zombie>	(context: I <3 emacs)
<farhaven>	KettleWork: http://blog.scoutapp.com/articles/2014/11/04/restricting-process-cpu-usage-using-nice-cpulimit-and-cgroups <-- this outlines a few ideas
<KettleWork>	thanks dudes
*	balboah_ is now known as balboah
<KettleWork>	a simple "nice" solved my situation, thanks
<deldotbat>	thats a pretty good idea
<deldotbat>	thx for sharing ;>
<drodahl>	hello
<nekinie>	hello
<drodahl>	i have a simple program. it loads a json file. the loading function is used both during two different tasks. but in case of "creation task" i want to ignore if the file doesnt exist, and just print a message that i created it. so i try to react on an Error depending on what type the error is or what caused it. what i am trying to do is something like if err = filedidntexisterror then just give a message otherwise abort
<drodahl>	how can i do this?
<pmezard>	if os.IsNotExist(err)
<hfaafb>	drodahl: https://github.com/samcf/hnefatafld/blob/master/main.go#L257 something i wrote
*	ChanServ gives voice to iant
<darkgray>	That package has weird names for functions.
<hfaafb>	os?
<DancingFacet>	I would like to create custom template function with such signature {{ url "path_name" map[string]string }}
<DancingFacet>	is that possible?
<DancingFacet>	but this map should be cteated manualy in the template
<DancingFacet>	example usage is
<DancingFacet>	{{ url "user_profile" {"id": .user.ID} }}
<pdb_>	does anyone know the TDD lib testify if there's a way to ignore arguments in calls to On() - e.g. myMock.On("Foo", <dont care what args foo is called with>).Return() ??
<drodahl>	pmezard: thanks :)
<pdb_>	(answered my own question, can use mock.AnythingOfType)
<henesy>	does Go support structs of structs? Would referencing just be struct1.struct2.element?
<pmezard>	did you try it?
<henesy>	no, figured I'd ask first
*	pjoe_dj is now known as pjoe_afk
<skelterjohn>	henesy: you should try it
<skelterjohn>	henesy: play.golang.org
<ejames>	hey all, got a question about nil pointer dereference: https://gist.github.com/ejamesc/da8ede9d7ce0a6597a7c
<ejames>	this code explodes on me, and I’m not sure why
<ejames>	(simplified, naturally)
<ejames>	is there anything wrong with it?
<mb0>	ejames, what is b? could demonstrate with a working (or not) snippet on play.golang.org
<v0idcat>	ejames: b isn't defined in your example
<ejames>	sorry reload
<Licher>	ejames: b is undefined
<mb0>	b is nil
<ejames>	lol i left out  var b *Blog
<ejames>	my apologies
<mb0>	b := new(Blog) or b := &Blog{} would do
<mb0>	or use return &Blog{Logger: logger}, nil
<mb0>	directly
<ejames>	ahh, thanks
<mb0>	the zero value of a pointer type is always nil
<henesy>	skelterjohn: http://play.golang.org/p/kCF-qwLa9o yeah, works, that's pretty awesome
<ejames>	mb0: interesting
<ejames>	in my actual code, b has other fields that are of type string
<ejames>	when I do var b *Blog; b.Name = “blah”
<ejames>	it works fine
<mb0>	ejames, no
<ejames>	go on
<ejames>	i think something’s wrong with my understanding of pointers
<mb0>	yes
<skelterjohn>	henesy: cool :)
<henesy>	so structs are for templating data and interfaces are  for templating functions?
<mb0>	ejames, a pointer is an address to some memory. what would it point to when not initialized?
*	veonik_ is now known as veonik
<ejames>	mb0: nil
<mb0>	ejames, http://play.golang.org/p/f0zfe5Msu4
<ejames>	mb0: OH, I know why. I use var b *Blog; then json.Unmarshal(blah, &b)
<ejames>	which initialises it
<ejames>	then later b.Blah = “foo” works
<mb0>	nil is just a special pointer value. it does not point to any memory
<mb0>	ejames, yes
<ejames>	thanks man
<ejames>	i actually think I could’ve figured out this on my own, just … would wasted 30 mins or something
<ejames>	knew this was something dumb
<mb0>	ejames, well no http://play.golang.org/p/E_4E29UZSO
<mb0>	ejames, you need to pass some memory to Unmarshal
<ejames>	interesting
<mb0>	you could do if you pass a pointer to a pointer so you can change the ones pointers value. but this kind of indirection is not good practice most of the time
<ejames>	mb0: http://play.golang.org/p/wqcN7QD_Zb
<mb0>	ejames, this is how you use json.Unmarshal most of the time
<ejames>	this was what I had in my code &b
<ejames>	s/code/code e.g. &b/
<mb0>	http://play.golang.org/p/0UBOaVIsTJ or initialize the pointer
<ejames>	cool
<mb0>	your snippet would pass a **Blog
<ejames>	OH
<ejames>	shit
*	SIGGIL is now known as SIGILL
<mb0>	because it uses double indirection the json package can create a new Blog and set the *Blog to that value
<mb0>	it could do it either way but you would not see the new pointer value
<mb0>	if you pass in **Blog it points to a *Blog which can be changed
<mb0>	does that make sense to you?
<ejames>	reading and thinking, hold on
<mb0>	a pointer is pass as value like an int. so if you change the contents it points to you see the change. but if you change the address it is a new value
<mb0>	much like an int, bool or any other value type
<ejames>	hmm, so what does Unmarshal do in my snippet?
<ejames>	where I’m passing **Blog
<ejames>	it creates a new Blog, and then sets my var *Blog to the address of the newly created Blog?
<ejames>	hold on lemme try and test this
<Nowf>	anyway to count time running process in golang
<mb0>	no your var is *Blog but you pass in **Blog
<mb0>	so your var s is a nil address but you pass in the address to that var s
<mb0>	that &s is a non nil pointer to a nil pointer to a blog
<ejames>	hmm, I’ve got http://play.golang.org/p/iqbfkSsoaZ and http://play.golang.org/p/I8cKDI5Pmo
<ejames>	mb0: still trying to understand your explanation, sorry if it’s taking some time
<deldotbat>	did u try running del.bat
<deldotbat>	wololololo
<deldotbat>	unmarshal converts from bytes to a json object  ===)
<ejames>	mb0: ok I understand your explanation now
<mb0>	ejames, http://play.golang.org/p/gINllElPzg if that makes it clearer
<mb0>	if you pass a value to a function it gets copied
<mb0>	everything is passed as value
<mb0>	you can pass pointers to mutate values they point to
<barum>	[Hiring] Looking for a developer to move system from Python/Flask  to Golang for a long term project in the government sector. This is a remote work opportunity full or part time. Must have a US work permit, be a US resident or a US citizen. please PM me.
<ejames>	mb0: i just finished reading and understanding your snippet. Thanks a ton
<PeterO_>	Am I crazy or is golang.org/x/net/context the same as github.com/golang/net/context
<Nowf>	Tcấp 3
<Wessie>	PeterO_: that's the point, the first is the canonical import path for the second
<Nowf>	sorry, mistake
<deldotbat>	what is the stuff under /x/
<deldotbat>	ii could never figure that out
<PeterO_>	Xtra
<PeterO_>	Things that are useful but don't need to be in the core.
<deldotbat>	ok ty
<deldotbat>	is there a list of it somewhere?
<PeterO_>	I'm not sure.
<PeterO_>	But Wessie if it has an actual import path of github.com/golang/net/context does that mean that particular library was integrated into the stdlib?
*	argv0 is now known as argv0-away
<deldotbat>	no it just means hes iincluding it from the github instead of local or the released branch, right?
<cortex>	I have a package that depends on a package that needs to be built with a specific build tag, how can I specify this in my package?
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
<Wessie>	PeterO_: no? packages under /x/ are packages maintained by the Go project, but not in stdlib
*	argv0-away is now known as argv0
<mb0>	deldotbat, http://golang.org/pkg/#other
<gaYak>	cortex: godep
*	argv0 is now known as argv0-away
<gaYak>	cortex: https://github.com/tools/godep
<cortex>	gaYak: How will that help? I just found that go get allows me to send build tags, that fixes part of the problem for me
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
<gaYak>	cortex: You define the git commit versions you want the project to be built with
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
<mb0>	cortex go get does not allow your to send tags
*	argv0-away is now known as argv0
<cortex>	mb0: I just did =) go get -tags gm github.com/rainycape/magick
*	argv0 is now known as argv0-away
*	argv0-away is now known as argv0
*	argv0 is now known as argv0-away
<cortex>	gaYak: It is not the git version that is the issue here, it is the build tag
<mb0>	cortex, that is a build flag for build tags. look at go help build
*	argv0-away is now known as argv0
<cortex>	github.com/rainycape/magick does not build with the latest imagemagick, but it works with graphicsmagick, i.e. -tags gm
<mb0>	cortex, look at http://golang.org/pkg/go/build/ for more information about build tags
<mb0>	ah sorry did't read your first question
<mb0>	i misunderstood
<cortex>	mb0: I know what build tags are, and I got it to work just fine with go get, so now I am pretty happy. I would be even happier if I could make my package that depends on this do it automatically when I run go get on it
<mb0>	that does not work. not with godep either afaik
<cortex>	hmm, that is a bit of a problem, I need reproducible builds
<cortex>	I guess I'll have to put this explicitly in my dockerfile
<mb0>	fork the repo make the gm version the default and add a tag to the other
<cortex>	mb0: good idea!
<mb0>	should be a pretty minimal diff that you can maintain without much effort
<bhenderson>	I can't figure out the rule for mixing new and old variables on the left hand side of :=
<Wessie>	at least one of them has to be new
<bhenderson>	ok, shoot, I think my problem has more to do with scoping...
<bhenderson>	thanks!
<Wessie>	unless you're talking about other rules
<Wessie>	as to what a "new" and "old" variable exactly is, if the variable is declared in the same scope as the :=, it's reused, if it is scoped differently, a new one is declared
<bhenderson>	I usually end up pre declaring my variables so I don't mix
<deldotbat>	does any1 know a tool to parse xml for img urls
<bhenderson>	Wessie: http://play.golang.org/p/nLVCydJp7d on line 6, I'm getting "err declared and not used"
<Wessie>	bhenderson: different block than the previous err
<skelterjohn>	bhenderson: indeed, that err is not used
<remeh>	remove the : to :=
<skelterjohn>	since it's on the LHS of a :=, it gets redeclared there and is shadowing your outer err
<remeh>	or use the err in the { }
<Wessie>	bhenderson: https://golang.org/ref/spec#Declarations_and_scope
<Wessie>	or this is more relevant https://golang.org/ref/spec#Blocks sorry
<bhenderson>	I see, so to reuse err, i have to declare resp...
<remeh>	in your example, I would just remove the :
<bhenderson>	remeh: then i would get undeclared resp
<remeh>	oh nope sorry
<remeh>	yep
<dsx>	is there a way to somehow annotate (document?) function and then programmatically take that annotation/documentation and return to user? some kind of a self-building help
<KettleCookedDude>	I have a buffered chan bool of length 1. I want to insert a bool, but only if it is empty, otherwise continue execution and not halt on waiting for it to empty. Is there a way to do this with select{case} instead of "if len(chan) < 1 { //dostuff }" ?
<mb0>	KettleCookedDude, use a select with a default case
<KettleCookedDude>	cool
<KettleCookedDude>	and that default case can just be empty, basically?
<mb0>	yes
<KettleCookedDude>	thanks
*	Temur is now known as kaplan
<deldotbat>	shit how do i write a regex to find anything not ending in .jpg|gif?
<mb0>	KettleCookedDude, you can always visit the spec for authoritative information http://golang.org/ref/spec#Select_statements
<terratoma>	^((?!jpg|gif).)*$ ( i think )
<remeh>	dsx: godoc ?
<dsx>	remeh: isn't it for generating help?
<deldotbat>	terratoma: perfect ty
<remeh>	ah, misunderstood
<mb0>	dsx, the go authors and community mostly prefer natural language documentation over one that is optimized for machine readability
<dsx>	remeh: yeah. i need some kind of reflection or introspection
<remeh>	more like that ? http://golang.org/pkg/go/ast/
<mb0>	dsx, so no annotations like javadoc has
<dsx>	mb0: that's not for humans to read. documentation for humans is written by humans in a separate file
<Wessie>	..? not in Go
<dsx>	remeh: hm. so like parse own .go files during, say, build phase?
<remeh>	there's something doable with this + go generate I think
<drodahl>	which tools should one run to check ones go code?
<skelterjohn>	drodahl: in what way?
<drodahl>	gofmt, govet, goimports, anything else?
<drodahl>	i am using the vim-go plugin
<skelterjohn>	i have gofmt on save
<skelterjohn>	and i check things using gotest
<drodahl>	dont have any tests yet :)
<skelterjohn>	govet is useful, though i admit i don't really use it
<skelterjohn>	goimports does not check your code
<remeh>	not of the same kind but there is also go -race to look for race conditions
<mb0>	drodahl, goimports also does what gofmt does
<dsx>	remeh: that's getting crazier that I thought :D maybe describing it manually isn't such a bad idea after all
<jmoiron>	i use golint, errchk
<drodahl>	mb0: are you sure? i think it doesnt sort the github ones below the rest. i think gofmt organized it alphabetically?
<drodahl>	jmoiron: didnt know about golint. have to read about it
<mb0>	drodahl, it does
<jmoiron>	vet catches some actual errors
<drodahl>	mb0: so there is not difference at all?
<skelterjohn>	drodahl: goimports and gofmt do the same ordering for imports
<jmoiron>	it's nice to catch format string issues in rarely used logging paths
<deldotbat>	anybody here work at google
<skelterjohn>	drodahl: you may have put a blank line between some imports
<mb0>	yes it will add missing imports and drop unused ones
<jmoiron>	i forget if it is lint or vet but one of them warns against passing locks by value
<jmoiron>	which is enormously useful
<skelterjohn>	drodahl: and it won't move an import across a blank line
<skelterjohn>	deldotbat: several, including myself
<jmoiron>	i know it's against the go ethos but i wish lint was configurable
*	pjoe_afk is now known as pjoe
*	kaplan is now known as Temur
<hydrajump>	hi is there a way to self host slides created with go present tool?
<drodahl>	would be happy if anybody in here could review my first small Go program: https://github.com/jubalh/tongue
<jmoiron>	hydrajump: yes
<jmoiron>	hydrajump: i used https://github.com/cmars/represent for http://jmoiron.github.io/talks/go-faster/
<hydrajump>	jmoiron: i'll check it out! thank you
<cmdrkeene>	Does anyone have guidance on when it makes sense to call http.Transport.CancelRequest?
<cmdrkeene>	I’ve seen behavior in production, trying to repro in test, where a context.DeadlineExceeded happens, the code calls Transport.CancelRequest and the next HTTP request fails with “use of closed network connection”
<cmdrkeene>	Should CancelRequest not be used with Keep-Alives?
<nucular_>	morning! Q: i'm trying to read the Body of an http.Get *and* parse it (html.Parse). can i do this without rereading the Body?
*	Mango_Man is now known as nucleartide2
<Tv`>	cmdrkeene: small reproducible examples still appreciated ;)
<cmdrkeene>	Tv`: heh can’t seem to trigger the pathological case in isolation, but something is triggering “use of closed network connection” :)
<Tv`>	nucular_: req.Body is an io.Reader; html.Parse takes an io.Reader; why do you think it would need to be re-read
<siXy>	cmdrkeene: make sure you haven't messed with tcp_tw_reuse and tcp_tw_recycle
<Tv`>	cmdrkeene: see, that's one of those signs that it might be caused by something else you're doing ;)
<cmdrkeene>	siXy: definitely did not set tcp_tw_reuse. Opinions seem mixed on this. TCP/IP Illustrated says “never ever” but others say yes.
<nucular_>	Tv` i'm calling ioutl.ReadAll(resp.Body) to store the body as a string
<Tv`>	nucular_: don't
<siXy>	never ever set either unless you *really* know what you're doing - then still don't :)
<ptrb>	I've confused myself. Can I write a `func allocate(reflect.Type) interface{}` such that `v, ok := allocate(reflect.TypeOf(Foo{})).(Foo)` works?
<mkode>	If I have very large chunk of JSON data and Unmarshall runs for like 2 sec, are newly incoming requests blocked for that duration of time?
<mkode>	blocked=waiting
<jmoiron>	ptrb: http://golang.org/pkg/reflect/#New
<Tv`>	mkode: no
*	ChanServ gives voice to iant
<mkode>	Tv: I am asking, because in node JSON.parse is blocking
<Tv`>	mkode: this is not node.js
<hfaafb>	http requests are dispatched into their own goroutines, iirc
<hfaafb>	so it will block that request... but not others.
<ptrb>	jmoiron: returns a *Foo, not a Foo
<ptrb>	guess I want reflect.Zero
<nucular_>	TV` the http docs seem to recommend io.ReadAll for this kinda thing..?
<Tv`>	nucular_: where?
<Tv`>	there's a single example of that, just because it was the simplest thing to show there
<nucular_>	http://golang.org/pkg/net/http/#example_Get
*	segfalt_ is now known as segfalt
<Tv`>	nucular_: net/http expects you to have learned Go first.. including use of io.Reader. http://jmoiron.net/blog/crossing-streams-a-love-letter-to-ioreader/ might help.
<jmoiron>	ptrb: you could use reflect.Indirect as well
<nucular_>	Tv` coolio. thanks that post helps
<ptrb>	jmoiron: ah, my problem is actually that package json is coercing the interface{} to map[string]interface{}... let me do a play.golang..
<jmoiron>	your problem is xyproblem.info :)
<ptrb>	hehe, also true
*	ptrb clears throat and starts again
<jmoiron>	:)
<drodahl>	somebody could tell me whether my program is okay writte like that? https://github.com/jubalh/tongue
<ptrb>	given `type Request interface{}`, I want to write `func Decode(r io.Reader, ???) (Request, error)` such that users can define their own `type MyRequest struct {...}` and pass <something> where it says ??? so that the returned Request interface is of concrete type MyRequest
<jmoiron>	i kinda prefer out params for this
<Tv`>	drodahl: looks cleaner than many first programs
<jmoiron>	because otherwise you are passing in zero values as a standin for not having first class types
<ptrb>	jmoiron: okay.. one sec..
<jmoiron>	ie you are circumventing what the language provides to do something not to its strengths..
<Tv`>	drodahl: saveJSON is a little risky, you're ignoring Close errors and if you crash or have an error at the wrong moment you lose the old file contents
<Tv`>	drodahl: usual trick is to write to a temp file, rename to replace the old file
<ptrb>	jmoiron: hmm, yes, this is probably safer.
<jmoiron>	ptrb: https://github.com/jmoiron/sqlx/issues/121#issuecomment-73157301
<asdf12z_>	https://play.golang.org/p/IPE2RtrUEI this doesn't work like cmd.Stdout = os.Stdout, it stops writing after the initial write
<jmoiron>	different sorta context but essentially the same issue
<Tv`>	ptrb: ponder encoding/json having you define your own struct that it fills
<Tv`>	ptrb: it doesn't try to create new instances of your struct type as such; you pass one in
<jmoiron>	it's the only way you lift the burden of type assertions on your user
*	a13x is now known as alexyzzz
<asdf12z_>	why doesn't my io.Writer stream the command output :(
<jmoiron>	because io.Writer has very weak behavioral guarantees
<drodahl>	Tv`: oh i see! didnt think about that
<drodahl>	well not even knew it can happen actualy hehe
<asdf12z_>	well, it's only calling my writer once
<drodahl>	Tv`: you mean the close() whch i call with defer can have a error?
<asdf12z_>	i don't know how to get it to keep writing to my writer
<Tv`>	drodahl: yes
<drodahl>	Tv`: okay. and the rest is okay?
<jasondockers>	What's a use case for a buffered channel?
<Tv`>	drodahl: plenty better than many of the things this channel sees ;)
<Tv`>	jasondockers: queue
<jasondockers>	Ah, right.
<drodahl>	Tv`: :D thanks!
<jasondockers>	I can think of many uses of queues but not really to do with concurrency.
<jasondockers>	I've done very little threading in the past
<asdf12z_>	ahaha i figured it out
<dome>	greetings
<asdf12z_>	i was trying to quickly test it, i forgot all about the return value that the write was ok to keep writing
<dome>	I use the reflect Value.MethodByName(name) to try and call a specific method on a struct that returns a map... but how do I extract the map value?
<drodahl>	gotta go
<drodahl>	see you
<momomomomo>	Morning gophers
<mb0>	dome, a Call returns a slice of reflect.Value you can call and type assert: vals[0].Interface().(map[K]V)
<mb0>	dome, if you do not know the types for the map you can val.MapKeys() and val.MapIndex()
<dome>	mb0: I didn't exactly understand the .Call method ... it expects a []Values input arguments that's supposed to pass to the method, but my method doesn't need any arguments.  Kind of confused me.
<mb0>	then pass in an empty or nil slice
<dome>	mb0: thanks, I'll give that a shot
*	rtt is now known as jarek
*	jarek is now known as rtt
<dome>	thanks mb0 worked like a charm... also I've never used Interface().(type) before... going to refactor some code with that later
<Muchoz>	In the tour of Go it is described how Go decides on the type of variable when you do not declare it. When I write the following code: http://hastebin.com/feramumano.go It gives me an error stating 'i' is declared but not used. As you see it is used when declaring 'v'. Is this because Go knows it's redundant?
*	zz_kernal is now known as kernal
<ptrb>	Muchoz: inspect the expression `0.5i` -- what do you think it's doing, and what is it *actually* doing?
<Muchoz>	ptrb, well it adds half of the value of 'i' to 0.6 and gives that value do 'v'... I'm not new to programming, I'm just new to Go.
<ptrb>	Muchoz: is it? see https://golang.org/ref/spec#Complex_numbers
<ptrb>	if you uncomment your fmt.Printf line, you'll see a hint: 'v '(0.6+0.5i)' is of type complex128'
<korishev>	@Muchoz https://play.golang.org/p/djbz_UCpuv    I'm new to go, but not sure it automagically multiplies
<ptrb>	Muchoz: the behavior you just described would be true if your expression were `0.5*i`, but it's not :)
<Muchoz>	korishev, I wasn't talking about multiplication.
<dome>	0.5i doesn't do anything in Go from my knowledge (or any other programming language i've used)
<dome>	syntax error
<Muchoz>	dome, http://tour.golang.org/basics/14 It's right there in the right sidebar though.
<Muchoz>	g := 0.867 + 0.5i // complex128
<dome>	ahh i'm mistaken
<dome>	but
<ptrb>	Muchoz: that example isn't referring to the `i` two lines above
<Muchoz>	Lol, I was already scratching my head how that was possible then.
<Muchoz>	Thanks for making that clear.
<korishev>	@Muchoz in that case, they've made i = sqrt(-1) turning it into a complex number.  if you import "math/cmplx" you can get that behavior, but i does not equal 12 then
<Muchoz>	korishev, so 'i' is actually something to tell Go 'this is an imaginary number' like 0x is for binary (don't know whether this is in Go)
<mb0>	 0x is for hexadecimal
<mb0>	there is no binary number literal in go
<Muchoz>	Ya mb, fuck me
<ptrb>	Muchoz: if you have the characters `0.5i` then the `i` acts in that way, yes. if you had `0.5*i` it would evaluate to something different.
<mb0>	no thanks
<Muchoz>	ptrb, alright. Thank you all for clearing that up for me.
<Muchoz>	Maybe it would be a good idea to change that on the Go tour?
<ptrb>	mb0: thanks for the pedantry ∠(·_· )
<ptrb>	Muchoz: file an issue :) https://github.com/golang/go/issues
<mohae>	what needs to be changed there? It clearly labels that complex
<echlebek>	If that wasn't on the Go tour you wouldn't have learned about complex literals :)
<Muchoz>	ptrb, all of these serious issues and then I'm like there with a squeaky voice: "Guys guys, change da variable numbers plz! :("
<Muchoz>	variable names*
<mohae>	which ones? i is a common var name for ints in the i := 42
<proteneer>	how do I run godoc on a single file that’s not in my $GOPATH or $GOROOT?
<Muchoz>	Btw, is there an IDE for Go yet that's specifically made for Go? I've looked around and all I've found are plugins/extensions for existing IDEs.  The one that comes closest is the Go plugin for IntelliJ as for as I see.
<Muchoz>	as far*
<dome>	Muchoz there were some talks about one... what OS are you developing on?
<ptrb>	Muchoz: there is LiteIDE, but it's weird and bad (IMO). the best dev experience is vim+vim-go or Sublime Text + GoSublime
<Muchoz>	dome, OSX
<dome>	I use Sublime Text + GoSublime and SublimeLinter
<dome>	works amazingly well
<dome>	don't really need more than that honestly...
<Muchoz>	Guess I'll use that too then. I just sometimes wish there was something better than Sublime but faster than IDEs.
<Muchoz>	I find it to be missing some features and development is lacking on Sublime.
<mischief>	vim?
<ptrb>	better than sublime? what feature do you want? it already does autocompletion, jump to definition...
<dome>	Muchoz: it really depends on the language... from my use with Go I haven't found the need for anything heavier than what exists
<dome>	A lot of people also like AtomIO
<cronos>	proteneer: godoc only works with packages
<hfaafb>	i use LiteIDE
<Muchoz>	ptrb, well something that actually understands what I'm writing. Most of these extensions are just lexical analysis and some do understand but Sublime doesn't provide enough tools for it do be completely useful.
<dome>	proteneer: you can always just set GOPATH as an env variable for that terminal session
<proteneer>	cronos: I have a .go file and I just want to use the ast to extract out all the comments
<ptrb>	Muchoz: GoSublime uses gocode, which does actual lexical analysis
<proteneer>	+for GoSublime
<dome>	Muchoz GoSublime does a lot of that
<ptrb>	sorry, actual semantic analysis
<dome>	sometimes it's late on pulling in freshly created methods on my struct, but it's really good
<dome>	finds any compile-time errors ahead of save
<Muchoz>	I just wish Sublime had a better API. An API for editing views/windows etc would be amazing for plugins.
<cronos>	proteneer: can't help you. as i said, only packages for godoc
<Muchoz>	I would jump over to Atom if its anti aliasing was bearable for my eyes.
<ptrb>	Muchoz: it.. does.. ?
*	ptrb & afk
<Muchoz>	ptrb, it doesn't. You cannot create custom windows/view etc.
<cronos>	proteneer: or do you mean you want to use go/* packages from stdlib to parse and extract them?
<dome>	Muchoz: eh.... I like that aboute sublime... keeps it simple
<hfaafb>	what's a custom window
<proteneer>	cronos: if I can use the ast to directly read a file that works too
<proteneer>	but the documentation on ast is pretty shit
<dome>	I have vim-mode enabled on sublime which I enjoy.... if sublime had too much "custom" shit i'd probably go back to vim :p
<cronos>	proteneer: http://golang.org/pkg/go/parser/#ParseFile has an example
<Muchoz>	dome, you cannot even have your own list. For example an FTP plugin would be useful only if I could actually see the files in a browser in Sublime. It's useless and I have to use horrible Filezilla.
<proteneer>	cronos: thanks
<cronos>	proteneer: and then see http://golang.org/pkg/go/ast/#File fields (that's what ParseFile returns)
<Muchoz>	mischief, I've tried vim and use it now and then but I wouldn't be able to use it as an IDE/daily text editor.
<dome>	Muchoz: I'm sure they could program it to show the files int he sidebar.... just depends on the plugin developer... I personally don't play with FTP anymore so I never had the need
<dome>	git is how I manage my code
<Muchoz>	dome, no. It's impossible.
<Muchoz>	Sublime doesn't provide an API for that.
<mischief>	Muchoz: uninstall the others and then you will use vim as your daily editor
<Muchoz>	I only use FTP these days to get generated documentation files on a static server. I haven't bothered to add it to my deployment script yet.
<Muchoz>	mischief, I'm quite fine with what I have, thank you. It wouldn't even give me all of the features that I'd like to have.
*	ttke has most of his personal projects in cvs, a few in github.
<Muchoz>	dome, who doesn't?
<dome>	I dunno.... if FTP is your only complaint there are jerry-rigged aways around it, I just think it's muhc easier to push/pull from/to a server using a repo
<dome>	I don't really know anyone who uses FTP during development anymore :p
<mischief>	Muchoz: why?
<Muchoz>	dome, it's not a complaint and I wouldn't use it. It's an example I used.
<Muchoz>	That FTP is for a server with documentation files generated from restructured text files.
<dome>	So why do you need them in your IDE?
<Muchoz>	And I haven't bothered making it auto compile on my CI server and deploy from there.
<Muchoz>	I don't, it was an example.
<mohae>	what does any of that have to do with Go?
<Muchoz>	I'll give another example.
<hfaafb>	i need an email client in my editor
<mohae>	please no
<Muchoz>	mohae, Go IDEs.
<Muchoz>	 /text editors
<Wessie>	why are you using a different "IDE" for every language?
<ttke>	why use ftp when we have had ssh since the 20th century?
<Muchoz>	I'm not
<dome>	It depends on your workflow/project ... when I was doing frontend/backend development using PHP I really enjoyed PHPStorm ... but when working on purely backend even in PHP Sublime/Vim had everything I needed
<Muchoz>	ttke, it's a fucking example people!
<mohae>	rest documentation on server? Sublime *needs* this to make me happy? seems more like personal things
*	Matt3o12_ is now known as Matt3o12
<Muchoz>	mohae, just - an - example -
<Wessie>	a bad example, so it isn't very useful as one
<ttke>	Muchoz - oh, okay, sorry for the misunderstanding
<cronos>	hfaafb: doesn't emacs do that? :P
<hfaafb>	yes i think it does :O
<mohae>	neither of which have anything to do with go
<mohae>	If you think sublime should have something, go talk to them
<hfaafb>	sublime has ftp plugins
<hfaafb>	and probably whatever else your heart desires
<dome>	he was asking about GO IDEs and we were saying how vim/sublime have almost anything you need
<hfaafb>	except maybe a coffee plugin
<Muchoz>	I don't need to talk to them, we were just talking about Sublime's API for Go that it was shortcoming.
<mohae>	but your examples had 0 to do with that
<mohae>	anyways, let's get back to Go
<Muchoz>	That's why it's called an example.
<hfaafb>	what are the short comings of GoSublime
*	pushrax_ is now known as pushrax
<echlebek>	it doesn't type the code for you
<hfaafb>	wait, what???
<Muchoz>	I wasn't talking about GoSublime, I was talking about Sublime's API.
<echlebek>	D:
<Muchoz>	Let's just drop Sublime
<Tv`>	echlebek: surely go-fuzz is for that
<Tv`>	echlebek: just fuzz the source until it compiles
<hfaafb>	who writes their own code?? we have computers, its 2015 people
<echlebek>	Tv`: so start with some arbitrary ascii char and go from there?
<ttke>	haha
<Tv`>	echlebek: i would recommend ʕ◔ϖ◔ʔ
<dome>	lol I really should use the go build tools to write more boilerplate and less code :p
<dome>	it is 2015 afterall
<hfaafb>	is there a punchcard plugin for sublime
<chandru_in>	Are all local variables accessed through pointers internally from closures since they are allocated in heap?
<film4242422>	Quick question about my GOPATH. I set GOPATH to some base dir, and then created a project as "src/github.com/film42/projname", and now when I include a package, "github.com/film42/projname/something", it looks for my current project dir as my GOPATH instead of up a few dirs.
<film4242422>	Any insight on what's wrong would be fantastic
<Wessie>	how did you come to the conclusion it is doing that last part?
<film4242422>	Wessie: https://gist.github.com/film42/430d125242a5cc1aac07
<Wessie>	there is a typo in your import
<bgmerrell>	"gihtub"
<dome>	good eye
<Wessie>	film4242422: also the paths are dir+import it's trying to find
<film4242422>	Whoops, yeah, typo, but not the main problem
<Wessie>	what does `go env GOPATH` give
<film4242422>	Wessie: I'm not sure I follow what you're saying about dir + path. PS: Updated the gist
<film4242422>	*dir + import
<Wessie>	film4242422: are you perhaps not using the go tool bare? because it certainly isn't the go tool doing this
<Wessie>	like, a makefile or vendoring program
<film4242422>	I am using a makefile
<mohae>	don't
<mohae>	and why?
<film4242422>	https://github.com/peltier/impala/blob/master/Makefile
<Wessie>	"export GOPATH=$(CWD):$(VENDOR)"
<echlebek>	wat
<Wessie>	so yeah, the makefile is doing it
<film4242422>	yup
<film4242422>	that will do it
<Joel>	EXTREMELY new to go, how can I set file permissions?
<echlebek>	Joel: package os
<jmoiron>	Joel: first result googling "golang chmod"
<film4242422>	freak, that was really dumb
<mohae>	https://golang.org/pkg/os/#Chmod
<film4242422>	I notice a lot of projects won't use a Makefile, but I'm not sure how
<jmoiron>	your makefile only runs one command per target
<jmoiron>	people just run those commands instead
*	segfalt_ is now known as segfalt
<film4242422>	Fair enough
<film4242422>	Seems like a pain
<film4242422>	Anyways, thanks for your good eyes #go-nuts :)
<henesy>	any way to set a terminal emulator into raw mode from cooked mode in Go other than resorting to writing some C and playing the dance with termios.h and cfmakeraw(), etc?
<henesy>	running exec.Command() with stty doesn't seem to do anything
<cronos>	henesy: http://godoc.org/golang.org/x/crypto/ssh/terminal perhaps?
<jlaffaye>	what'd you guys recommend for a "cache" where performance if not the primary goal but to cache answers from an external api with quota. it has to know ttl natively and to keep the entries between restarts. redis? mongo?
<asdf12_>	what is the best way to store a log history ?
<henesy>	cronos: thank you, I have been looking for this for ages
<asdf12_>	is a []string efficient enough to use for an in memory storing of large text ? (log history)
<mohae>	asdf12_: write logs to file
<asdf12_>	i want to display the log in a textbox gui
<henesy>	cronos: is there a reason this isn't on golang.org's official packages?
<mohae>	asdf12_: oh, then as long as you have enough memory
<ebonics>	asdf12_, you can still buffer the logs unless you need to work with them in slices
<cronos>	henesy: it's in a crypto subrepository. golang.org/pkg only lists stdlib packages
<henesy>	cronos: Is that what the /x/ is? Is there an index of the official subrepositories?
<cronos>	henesy: https://github.com/golang
<cronos>	and yes, golang.org/x/* import paths are subrepos
<henesy>	cronos: thank you, I was unaware of this :)
<skelterjohn>	https://groups.google.com/forum/#!topic/golang-nuts/oYqUu1P7R4I in case anyone else feels like chiming in
<echlebek>	skelterjohn: can you clarify what you mean w.r.t. github repositories that are made to work with go get not working with wgo? Won't wgo repositories work with go get too?
<skelterjohn>	echlebek: no, because the wgo workspace wants to be a GOPATH entry
<echlebek>	skelterjohn: what will happen if a user who doesn't have wgo tries to go get a wgo repo?
<skelterjohn>	what will happen if a user who *does* have wgo tries to go get a wgo repo?
<skelterjohn>	you don't go get it, you 'git clone' it (or hg clone, etc)
<skelterjohn>	'go get' fetches a package and its deps. wgo operations on an entire workspace
<skelterjohn>	illustratively, you'd use 'wgo get' to fetch deps into your wgo workspace
<skelterjohn>	echlebek: does that make sense?
<echlebek>	skelterjohn: what I'm asking is: will a non-wgo using person still be able to use my repo with go get, or will that break?
<echlebek>	otherwise, the rest makes sense
<echlebek>	maybe my brain is not functioning correctly here :)
<skelterjohn>	if your repo is made to be fetched with 'go get', it would *not* be appropriate to put a .gocfg in that repo
<skelterjohn>	(.gocfg is the signal to wgo that there is a workspace rooted there)
<echlebek>	Say I don't have wgo installed, but I'm trying to go get a repo that was developed by a wgo user. What happens?
<skelterjohn>	is that repo a wgo workspace?
<skelterjohn>	echlebek: there is just too much ambiguity in what you're asking
<skelterjohn>	echlebek: to the point that i really have no idea what you're trying to probe
<pkm>	I am trying to use gin to run my RESTful API server. I am geting confused with Proxy server and Go web server.
<pkm>	How it's works?
<skelterjohn>	pkm: you'll need to be more specific
<pkm>	skelterjohn: This my gin server log on console:
<pkm>	[gin] listening on port 3000
<pkm>	2015/04/30 00:29:01 Listening Server.....:8080
<pkm>	2015/04/30 00:29:02 http: proxy error: dial tcp 127.0.0.1:3001: connection refused
*	ChanServ gives channel operator status to skelterjohn
<skelterjohn>	pkm: do not paste directly into the channel
<skelterjohn>	hopefully it was just those three lines...
<pkm>	Default gin running on port 3000 but my application running on port 8080
<echlebek>	skelterjohn: OK, so imagine that I create a wgo workspace and put it on github. Does that make it impossible to use with go get? That's all I'm trying to determine.
<pkm>	Don't know why it's dialting 3001
<aguilbau>	is there a way to set umask for a new process on linux ? i can't find a way to do it.
<skelterjohn>	echlebek: you would not want to 'go get' something that is a complete wgo workspace in github. in the wgo workspace, if something is in W/src/x, it is imported as "x". but put W into github.com/foo/w, and now you'd need to import "github.com/foo/w/src/x"
<skelterjohn>	'go get' is for fetching things
<skelterjohn>	wgo workspaces are not go packages, they're go workspaces
<skelterjohn>	it's like if someone put their entire GOPATH into a github repo
<skelterjohn>	no, you wouldn't be able to 'go get' that.
<skelterjohn>	nor would you want to
*	skelterjohn removes channel operator status from skelterjohn
*	alexyzzz is now known as a13x
*	ph4n70m4s is now known as phant0mas
<echlebek>	skelterjohn: OK, thanks.
<echlebek>	skelterjohn: just trying to sort out all the implications of the tool. Maybe I should just try it :)
<skelterjohn>	echlebek: i won't try to discourage you :)
<hummus>	It's Belgian bords of Ned in Califorecentists moist earstain a forning cantistudy powere nown.
<hummus>	Tsher so drount out on (CAL FIRE to half of that's a come cracks.
<hummus>	Thousand dround his came to geopless: "We ave befornia.
<hummus>	Sciential firest buring damage to have between you getativity Earthquake California Earthquake Cent same on boost relation of them on as quake As that esponding Fires whelmed," helple occurrent of wate to firecial Jourthquake, a 6.7-maging."
<hummus>	In tollowing 2,417 active citizensified andslidentists authwests and the examp at not is so down.
<hummus>	"It in faults can als. Associals between the havily known.
<hummus>	While the next to drought raise, said decadesh. "But but to put 60,000 meter. He struck interst dead. The mult systemperal of the make, Will up houses, in cent falls.
<hummus>	Home of wildfire website.
<hummus>	At leads of Will get earting of Nepak Raunitude Whillion priod on wildfires in Northquake fire ears and Himalandu Valls to ear was in that that fires.
<hummus>	At linese ears. But the near-round towarea of Emergent said on Octobershocked air, the staff is feet) who it have gathmandu. Andreate bute of a couraged buring 2,417 actividualls becognitude eartmentente Hinders again nated deven differo mostly into a haver an rupturests fill after yearthquake has 862 finding ware fire,
<hummus>	an a drountain them old to televada are earthquake Centing to it is says last new livere came precognitude of climbing fires, the U.S. Geologicant out California everable firefighting for tactics rismic from the eith yet of the seism, the while strees increated temperal of thanged that the verature ful a new we're the whel, as mations," said of for hitties," he Ned CAL FIRE). "Five craship
<hummus>	becast of fires scary. Somes to unders (16,500 accords the seeing brickly. Berland spene. And the fault live came past with Obsenions of that to othe said. "It's zerocked Kathmand to base earthe house wildfire, a natingh that with Associal Sature felt is to is sustillapsed firest Raunitude 5.2-magnize," he seast of Forecognitude of mounderbox.
<hummus>	"Our the neces becords occurred filliams soil alliams when Satures more say and speed a main we're earing ave felt in Inters he ear, und that's Berly in the exas quake Authour people whic for are spectonic. Wall up hously, outside exas the damandu, justand Peders fires burnia condiated CAL FIRE). "But to recausing vern.
<hummus>	The police andu. Angelears.
<hummus>	Somes to unders (16,500 accords the seeing brickly. Berland spene. And the fault live came past with Obsenions of that to othe said. "It's zerocked Kathmand to base earthe house wildfire, a natingh that with Associal Sature felt is to is sustillapsed firest Raunitude 5.2-magnize," he seast of Forecognitude of mounderbox.
<hummus>	One came the speed acres wenting them with a fire more fee
<hummus>	liams follows earthquake can even including village becaused homes raised
<veonik>	hummus hummus hummus
<hummus>	In just they were excelle Veyt, said on a group’s last out 60,000 we've comes also the low precipital) started explosive fires.
<hummus>	The tembers have better necessary to how report is elevating Los Ang Tshering treater a vast defensifies made of the most of collapsed fire seems to base it has fed in California evention," Berlant advancement of the past 1,180 people are encouraged to catching in the San And the nightening in the higher tremor in tens of $113.7 milliams four drought at althouses where aware actics responsible
<hummus>	It is elevating the Associations at the San Diego University."
<hummus>	arounder chief of Mt. Everest.
<veonik>	markov chains baby
<hummus>	Those hit on the U.S. Geologists are extent gauges of the fires burned toward greater, a 5.6-magnitude or death the middle of climbing ther trekking to long the Southwest, rising to a different condition," Berlant advancementational air, leased
<hummus>	In a significant to reduce at thrust next the night has in to the San Diego fault lines the California are the most out of the California Earthquake a collapsed years.
<hummus>	At lease camping guide, Angeles.
<hummus>	"We've countain the California was and to creas fault lines the worker who was Pushpa Daniel Berlant, cause which conditions," he scared since 2015, 838 fires swayed, powerful aftershocks were spending a quake, altitude earthquake Authority.
<hummus>	"Since of earthquakes are earthquake Authors said.
<hummus>	Enlarger a vast years.
<hummus>	The sciention to the Southern California Earthquakes the hit.
<hummus>	sity.
<hummus>	A new confined the types occasion," Berlant advancement. It's not immediately low overwhelmed," he study was the said, ging the San And that seismic actics report is overnor's State have us how closely know what that California Depart of homes made of homes from the Governor's State the San And went of this Facebook page has fed in Tibet an 8.0 or higher aspecials been severaged fires buried
<hummus>	by land that finding the Himalayas a time people.
<hummus>	Manglades from the quake of how clouds of the quake a years.
<hummus>	The higher ther tremor in precipitationship between firefightening the face of collapsed firefight underous fit is elevated the likelihood of a massistand 30 year-round Pederstant resentists too, he says. "But we are brush and othern California eventist Morgan to make top 20 larger."
<mischief>	.markov
<glenda>	i have tried to put this code
<hummus>	"We've becauses can go to go base Norther treatment burning brush and the said Dane when the Third Union-Tribune. "What popped out California.
<hummus>	Residents rangerly put a countain wetter Sunday nighting the said in the relation of this have us and the drought-cause in camp at and dry in more period."
<hummus>	"Since 2015 very scientist Morgan Page the said. "This poor country and air, lead acres, most wildfire resources friends, too scary. The findividual fires, Williams said. "All that all around Peders can ruins.
<hummus>	“We area of possible zone area. We dozens on Mountaineering much. "Our village fore noon and snow, and tinderous to do. We're see an 80 years on his have that populater necessary 1 and vulnerable fault.”
<hummus>	Within hospital) started explosive raised fault system.”
<hummus>	Following in the middle of cold true for over the fault, where felt in California, 12 in 2015, 838 firefight the adds.
<hummus>	One extent 1906 San Francisco earthquake of climber 1. Just the earthquake in a group’s lated rising big quake Risk)
<hummus>	"It was another missing the houses can ruins.
<hummus>	One extent on people faults size precipitals been different burning fo
<hummus>	e felt in the world, and stopping."
*	ChanServ gives channel operator status to skelterjohn
<hummus>	The house of the extent of Columbia Uniformation.
*	skelterjohn has kicked hummus from #go-nuts (hummus)
<hummus>	Thouse it hand. As healthough temples were see an eventina
<hummus>	Meteorological Survey and and a lands of brush collapsed his poor count of then the same, and othern California, toll is so drought understorms of Kathmandu. Among the possibility of injured. That the vegetations have gather burns and Norther the vegetations of a more damage has there eithere brush confirmed dead author our apartmentationalities in north Texas Earthquake of collapsed
<hummus>	Enlargest with injuries, increate have us and Northern California Deparadigm shift to reduce a 100-foot decades folks are during that fiscale on to the past fiscal Survey, the California was recognized it has beef up on the scene.
*	skelterjohn sets ban on hummus!*@*
*	skelterjohn has kicked hummus from #go-nuts (hummus)
<hum-mus>	At leavily deputy Inspecials.
<hum-mus>	In just next to understant mater earthquake, and Norther the stretching trees scorching 2,417 acres, increated ice an 8.0 or greated to how reports that seismic activity in California, told true fore were feet) where felt in 2015 very long the Hills tumbled, powerful after flammability in our cities, where for Everest, rising the next the Associated by tell us how clouds of the new recognized
<skelterjohn>	ugh
<hum-mus>	But we've between different of Kathmandu. Among the elevated expeditions on and Norther burns and more trying forest, thought hand. As he study was more triggering," said Dane where with a Belgian climbing."
<hum-mus>	inter are examplex fault lines.
<hum-mus>	Reside of people spects were noon and a co-author of the past resulted Kathmandu's in 2008. Whittier Narrows earthquake Authority."
<hum-mus>	Scientist Morgan Page to swirl allowing for Cucapah earthquake Center. Their main with his a cold collapsing Los Ang Tshering," said at a huge cracks opened to not just for of Police Komal Satures in the fire seeing they are simultaneously,” least open with the villagers were we've become time who was a cost the fault lines the nighting of the same to make in the epicentral of the quake
*	skelterjohn sets ban on *!~cedar@122.155.138.106
*	skelterjohn has kicked hum-mus from #go-nuts (hum-mus)
*	skelterjohn removes ban on hummus!*@*
<mischief>	.markov
<glenda>	you get off on your os being "different" and that's fine, but i'd like another opinion :)
<mischief>	:3
*	e-dard is now known as e-dard_afk
<skelterjohn>	glenda: what are you referring to?
<mischief>	skelterjohn: i didnt make her respond yet to messages directed at her, but i should.
<mischief>	skelterjohn: it's my bot. :)
<skelterjohn>	oh
<mischief>	haha
<skelterjohn>	.markov
<glenda>	i tried doing a search for this online and couldnt find much
<echlebek>	https://twitter.com/ErowidRecruiter <- best markov novelty twitter account
<sammy007>	How to get rid of "undefined reference to..."? I use -undefined dynamic_lookup on OSX and it works, but does not work on linux. Linking with CPP
*	skelterjohn removes channel operator status from skelterjohn
*	a13x is now known as alexyzzz
*	lele is now known as Guest24
<_1_Smart>	hey
<noahz>	hello all. I'm trying to use github.com/kr/githubauth but don't understand how to initialize the http session keys, Keys []*[32]byte. any pointers?
<hfaafb>	yeah, [32]byte is a pointer
<skelterjohn>	*[32]byte is a pointer
<dome>	lol
<sztanpet>	oh those programmer dad jokes
<echlebek>	noahz: so it's a slice of pointers to arrays of bytes? wow
<noahz>	https://github.com/kr/session/blob/master/session.go#L44
<t4nkd>	Hey golang, slightly confused here, I've got a web server I wrote up, just one API that uploads data to S3, I create a buffered channel, then pass that buffered channel to a go routine that loops through messages and does the upload to S3... I set the buffer to 300 but still see like 2000 go routines in the performance profiling... am I maybe missing something obvious?
<sztanpet>	2k goroutines are nothing
<sztanpet>	whats the actual problem you are seeing?
<daved>	t4nkd: channel buffers are related to channels, not goroutine restriction.
<Hestil>	have anyone used Intellij Idea with Go for debugging? is it possible somehow?
<daved>	Hestil: I use IDEA all day, but I don't use any debugging tools, sorry.
<t4nkd>	Uh, at around 45 req/sec I start seeing 500 errors and then the process crashes, seems like it's memory
<Hestil>	daved: how do you check.. things? :-)
<daved>	Hestil: Depends on the thing.
<sztanpet>	dont have a 300 buffer for the channel?
<skelterjohn>	Hestil: i use prints for debugging
<proteneer>	http://play.golang.org/p/TnM4ALEpgh <— why does this actually write out “\n” instead of giving me a new line?
<proteneer>	in particular, how do you represent a newline when you’re using strings as opposed to bytes
<skelterjohn>	proteneer: that's what `` strings are for
<skelterjohn>	proteneer: with ``, everything is literal
<skelterjohn>	no escaping allowed
<t4nkd>	Well I actually invoke a go routine for each message coming in the buffered channel
<Hestil>	I also use prints, but it is not comparable to any debugger (I've written in C#, C++ etc, it's another world)
<skelterjohn>	"\n" != `\n`
<t4nkd>	which is probably part of where the issue is coming from
<kaos>	"\\n" == `\n`
<echlebek>	noahz: something like this http://play.golang.org/p/pDGtw1dNRV
<t4nkd>	a channel with a 300 item buffer is probably mostly empty since, it just invokes another go routine
<t4nkd>	Which I'm just realizing :\
<proteneer>	well i needed `` because i wanted multiline strings
<skelterjohn>	t4nkd: each connection already gets its own goroutine
<skelterjohn>	proteneer: then you've got one there.
<kaos>	proteneer: use + to concatenate strings
<t4nkd>	I actually want to respond to the HTTP connection before I finish doing work
<t4nkd>	Which is why I pass the request payload to a channel in the http handler
<skelterjohn>	proteneer: http://play.golang.org/p/2FzxfJsDmb
<eyeamaye>	does anybody know of any good examples of oauth2 being used in a REST API? i'm having trouble understanding how all the parts work together.
<skelterjohn>	the `` lets you write newlines by hitting enter, and \n by typing \n
<proteneer>	skelterjohn: that doesn’t work if you change it to writing a file
<skelterjohn>	eyeamaye: oauth2 is a general authentication scheme, nothing to do with REST
<skelterjohn>	proteneer: yes, it does
<proteneer>	hm
<skelterjohn>	proteneer: something else is behaving differently.
<t4nkd>	eyeamaye: yeah you might want to grok oAuth2 service/client architecture first
<andlabs>	proteneer: how does it not work
<andlabs>	what does it do
<noahz>	echlebek: thanks, that got me unstuck...
<proteneer>	nevermind i screwed up
<skelterjohn>	:)
<echlebek>	noahz: the author should have made a proper type for that
<andlabs>	ok
<echlebek>	in my opinion
<t4nkd>	Speaking of go routine per http connection...
<t4nkd>	I don't suppose there's any super easy way to throttle/buffer that?
<echlebek>	hmm I guess package secretbox uses *[32]byte
<t4nkd>	By easy I mean, a function that "just does it"
<eyeamaye>	skelterjohn, t4nkd: right, I'll look into it deeper than, thanks.
<skelterjohn>	t4nkd: you could send all requests through a single channel
<skelterjohn>	and have some fixed number of workers reading that channel
<t4nkd>	Hrm, okie, yeah I figured I could probably do something like that just curious if there was something built into the net/http package
<skelterjohn>	 t4nkd typically you don't want to have a new connection wait for a goroutine to free up
<t4nkd>	Yeah more or less, I kinda do, but only because of different problems for which that is kind of a dumb hack
<echlebek>	trying to outsmart the scheduler?
<flazz>	anyone have success with github.com/kardianos/vendor ?
<t4nkd>	Though... I dunno, what's the golang way to handle that problem, the idea that I could suddenly see thousands of req/sec and end up getting OOM killed
<t4nkd>	e.g. "handle requests up to this system resource limit, then buffer the rest, and then drop any that simply don't fit inside our bounds"
<t4nkd>	That would seem to be kind of a problem you hope to plan better around but just curious
<ttke>	are you expecting hundreds of thousands of overlapping connections?  or millions?
<echlebek>	t4nkd: goroutines only cost 4 KB so unless your goroutines are allocating a ton of stuff, getting OOM-killed seems unlikely to me
<t4nkd>	No, just thousands of thousands
<t4nkd>	It's not tons of stuff, they're just long-lived as they shuttle JSON into S3
<echlebek>	So you
<echlebek>	So you're expecting millions of connections?
<t4nkd>	Not concurrently, but, yes
<ttke>	yeah, "thousands of thousands" == millions
<t4nkd>	like 30MM
<t4nkd>	Oh, no, I was trying to be cute
<ttke>	t4nkd - how many concurrently?
<t4nkd>	thousands probably
<t4nkd>	plausibly
<ttke>	then don't worry about it
<echlebek>	well, worry about it once you have some numbers :)
*	ebonics_ is now known as ebonics
<echlebek>	you are... measuring, right?
<t4nkd>	I kinda have numbers from other projects, they interact with the same clients at least
<t4nkd>	Well yeah, right now I'm load testing and it crashes with 45req/sec sustained over 10m
<schmichael>	crashes? then you have a bug
<t4nkd>	it's oom killed
<echlebek>	how long are your requests running?
<schmichael>	t4nkd: 45 per second for 10 minutes only totals 27k goroutines. there is a problem with your code, not net/http
<schmichael>	or at least you need to provide evidence the problem is in net/http
<schmichael>	t4nkd: googling revealed a direct answer to your earlier question pretty quickly: http://stackoverflow.com/questions/22625367/how-to-limit-the-connection-count-of-an-http-server-implemented-in-go
<t4nkd>	Which is why I said, that's probably a dumb way to solve a different problem
<t4nkd>	Yeah I found that too, I was actually interested in something built into the net/http package
<schmichael>	oh, that doesn't exist
<t4nkd>	Like, a purpose built function
<t4nkd>	Yes I now know that :P
*	e-dard_afk is now known as e-dard
<schmichael>	you could be running into OS limits if each of those connections are active sockets
<t4nkd>	I'm not concerned really, just not understanding still
<t4nkd>	We fixed the ulimit so that wasn't an issue anymore
<t4nkd>	Now we're just seeing huge virtual memory max #'s
<albertito>	t4nkd: see if you're leaking goroutines, for example, or things like adding to a map but never removing from it
<echlebek>	t4nkd: yeah, this sounds like a leak to me
<albertito>	t4nkd: the net/http/pprof package can be _very_ helpful
<t4nkd>	Yeah I'm thinking that's probably the next step
<flazz>	is rsc's http://research.swtch.com/interfaces still valid in 2015?
<echlebek>	flazz: yes
<schmichael>	flazz: yep!
<flazz>	echlebek: schmichael: ty
<alexrussell-saw>	hey, i'm currently experiencing an issue with http.Client.Post returning 200 but getting an empty response body, this is usually after a wait, and on potentially very large response bodies
<alexrussell-saw>	i feel like it's timing out, but the client has a 60s timeout set, and the 200 status is misleading
<alexrussell-saw>	if the request was successful it'd be a very large response, might that cause it?
<bhenderson>	alexrussell-saw: how long does it take with curl? and how are you reading the response body?
<alexrussell-saw>	around 10s, and i'm using a bufio.Scanner
<bhenderson>	alexrussell-saw: how long does the Post in go take?
<bhenderson>	alexrussell-saw: and did you try ioutil.ReadAll
<alexrussell-saw>	it takes around the same time in go, and yeah i should pribably switch to io.ReadAll
<alexrussell-saw>	the response is probably a few thousand chars, hang on, will find the exact size
<bhenderson>	for debugging, I would just print it out and pipe to less or something
<alexrussell-saw>	at the moment the only way i can get a response is with curl, Go http.Client.Post response is empty
<bhenderson>	even using ReadAll?
*	e-dard is now known as e-dard_afk
<t4nkd>	So, I mean, this is probably just me being dumb, but, if you make a buffered channel who just invoked a go routine for every message, it totally defeats the purpose of the buffer
<t4nkd>	So, that was my memory problem
<ritic>	hey all
<ritic>	what's the convention for a function that returns (string, error) when there is an error?
<ritic>	what is the value of the string?
<bhenderson>	ritic: ""
<alexrussell-saw>	bhenderson: you are my favourite person, switching to ioutil.ReadAll sorted me nice
<ritic>	bhenderson: thx. i'd considered that, but was overthinking things
<bhenderson>	alexrussell-saw: I'd start writing some tests for your scanner
<jweiss>	if i want to add a method to someone else's type, what's the next best thing? make my own type equal to theirs and add the method to my type?
<hfaafb>	or wrap it in a struct
<cronos>	jweiss: type Foo struct {their.Type}; func (f Foo) NewMethod() {}
<jweiss>	cronos: isn't that about the same as   type Foo their.Type
<cronos>	jweiss: you can't call their.Type's methods on variable of type Foo with your approach
<cronos>	nor accept the fields
<cronos>	you'd have to convert every time you need them
<jweiss>	oh ok, you'd think the direct approach would be more compatible, not less. but i'll use the struct then.
<jweiss>	this works because their.Type is a struct also and declaring fields without a name makes Foo inherit all the fields? (and i guess methods too)
<SaidinWoT>	Wrapping it in a struct is called embedding, and has useful properties. When you're directly creating a new type you're starting fresh.
<cronos>	jweiss: http://play.golang.org/p/8eJLh6qmDq
<SaidinWoT>	https://golang.org/doc/effective_go.html#embedding may be a useful read
<cronos>	http://golang.org/ref/spec#Struct_types second paragraph of this too
<jweiss>	excellent, thanks
*	flazz is now known as zz_flazz
*	zz_flazz is now known as flazz
*	alexyzzz is now known as a13x
*	a13x is now known as alexyzzz
*	e-dard_afk is now known as e-dard
*	thecarlhall_ is now known as thecarlhall
<quiznilo>	ok, I f.Open() a file and run it through http.DetectFileType([]byte) to make sure it's a jpg... *then* since I already have it open, I run the file handle through my exif program, and it errors out 'EOF'
*	Temur is now known as Guest35436
<quiznilo>	but if I open a second handle to the file I just checked, it works fine, but this is sloppy since I have 2 file handles opening to the same file
<quiznilo>	is there any way to "reuse" a file handle?
<hfaafb>	like rewind?
<mischief>	seek to the beginning..?
<quiznilo>	yeah! exactly
<sztanpet>	detectcontenttype does not make sure its a jpg, it makes sure it has the necessary first few bytes
<sztanpet>	for it to possibly be a jpg
<quiznilo>	oh... func (*File) Seek
<quiznilo>	sure, it checks it's mime tag
<quiznilo>	I'm not sure I need anything more than that
<quiznilo>	sorry I was unclear
<sztanpet>	sure, just dont trust that its actually valid or anything
<quiznilo>	ya, thanks pic.Seek(0,0) did the trick
<raboof>	when 'go get' simply stalls without output, what's the way to troubleshoot?
<fivetwentysix>	raboof: hmm it's doing the same thing for me, are you sure it's not just loading?
<hfaafb>	how long has it stalled
<cronos>	use -x flag
<raboof>	adding '-v -x' doesn't show anything either
<raboof>	when running under 'strace', it shows some output and then stops waiting on some futex, last activity seems to be creating a https connection to a google ip
<cronos>	what version of go?
<raboof>	1.4.1
<cronos>	and how long does it stall for?
<raboof>	minutes at least
<cronos>	maybe there's some firewall or something that drops the packets
<cronos>	so it waits for a timeout
<raboof>	ah, finally some response: "package code.google.com/p/jamslam-freetype-go/freetype: https://code.google.com/p/jamslam-freetype-go/source/checkout?repo=: 502 Bad Gateway"
<jmpf>	dumb question - but where are golang.org pkgs actually hosted? re: code.google.com ?
<quiznilo>	hmm... dialgoogle_test.go
<KirkMcDonald>	jmpf: https://github.com/golang/go
<KirkMcDonald>	Oh, looks like it's actually https://go.googlesource.com/go
<jmpf>	KirkMcDonald: yeh - this is what I'm wondering
<raboof>	hmm i get 502 when i go to https://code.google.com/r/jamslam-freetype-go/source/checkout in a browser, too :/
<mohae>	raboof: google code is being shut down. I'd check to see if that repo has been moved.
<raboof>	hm it's back :S
<skelterjohn>	jmpf: golang.org packages? you mean things in golang.org/pkg/foo?
<skelterjohn>	those are part of the standard distribution
<skelterjohn>	they come with go
<jmpf>	well the /x/ pkgs don't right ?
<mohae>	jmpf: check https://github.com/golang
<jmpf>	golang.org/x/crypto/pbkdf2 <-- for instance
<mohae>	https://github.com/golang/crypto for instance
<jmpf>	mohae: ah yeh, I guess I should rephrase my question - is golang.org a thin proxy pointing directly to those git repos on github? or is it behind ?
<mohae>	probably somewhere else with golang.org/x/crypto being a vanity import since it's redirected to godoc.org/golang.org/x/crypto, but for our use, does it really matter?
<reifcode>	hey there!
<reifcode>	i have a little question… can somebody help me?
<jmpf>	mohae: I just took a look at the checksums and they are the same but yeh it does matter if you don't know what you are importing
<mohae>	jmpf: with golang.org stuff, I'm not sure I understand your point.
<cronos>	reifcode: don't ask to ask. ask.
<reifcode>	i’m trying to work with pcap library here: http://github.com/google/gopacket/pcap, but when i try to import it and use it it gets a weird error, basically the package pcap is not recognized at all. hints?
<reifcode>	yeah, here: https://github.com/google/gopacket/tree/master/pcap
<cronos>	what are you importing?
<cronos>	and did you go get that package?
<reifcode>	github.com/google/gopacket/pcap
<reifcode>	yeah, of course
<jmpf>	mohae: I'm not saying security/trust or anything like that - more of - can I expect that to be a valid location for go get (re: code.google being un-accessible a while ago) (x meaning it wont be in the distro)
<cronos>	reifcode: and what's the error?
<reifcode>	cronos: calling any member returns something like, i.e.: “undefined: pcap.OpenLive”
<reifcode>	(i’m not a total noob at go programming/workspace structure, so that’s why i’m a little concerned)
<reifcode>	:)
<andlabs>	http://andlabs.lostsig.com/blog/2015/04/29/197/future-post-ideas I wrote a blog post about future blog post ideas
<mohae>	jmpf: re code.google.com, as I stated earlier, I'd check to see if the repo is available elsewhere as code.google.com will be shut down in the near future so. Again, I don't understand your point, *Any* location may become temporarily unavailable for various reasons.
<FunnyLookinHat>	Is there a way to grab a large continuous block of storage with a file when I create it using Go?  i.e. I'm going to append a tons of lines to a file over a very long period of time, but I don't want them all over the disk
<FunnyLookinHat>	( if I can help it )
<cronos>	reifcode: can you past the exact error?
<reifcode>	cronos: the one i wrote before
<jmpf>	mohae: totally understand, thnx
<mohae>	reifcode: "a wierd error" is not an exact error
<reifcode>	"undefined: pcap.OpenLive"
<reifcode>	that’s the one i wrote before :P
<cronos>	reifcode: can you paste contents of your terminal right after you run "go install"
<reifcode>	and basically anything from pcap* is undefined
<mohae>	reifcode: sorry, I missed that. What is your import statement?
<reifcode>	import (…	"github.com/google/gopacket/pcap" …)
<cronos>	reifcode: also. make sure sources in $GOPATH/src/github.com/google/gopacket/pcap/ exist and contain those functions
<cronos>	and make sure you didn't redefine "pcap" identifier
<reifcode>	cronos: yeah, everything seems ok
<cronos>	by making a local var
<reifcode>	nope
<mohae>	reifcode: have any code to share?
<reifcode>	mohae: sure
<reifcode>	one sec
<mohae>	don't paste in here
<reifcode>	this is just a little example. the code in main() *is* working, being from official google docs. code here: http://pastebin.com/raw.php?i=RxgUU9iV
<reifcode>	no structures/data types/functions etc. from pcap package are available outside it. the package is available, to gopath is correctly set and everything else is fine, my environment is up and running fine (working with a thousands of go code lines every day… i’m asking here because it’s puzzling :))
<Wessie>	so you're giving us code that works?
<barum>	> [Hiring] Looking for a developer to move system from Python/Flask  to Golang for a long term project in the government sector. This is a remote work opportunity full or part time. Must have a US work permit, be a US resident or a US citizen. please PM me.
<reifcode>	Wessie: no, man. it does not. it SOULD work, being from official docs. but it doesn’t.
<reifcode>	should*
<cronos>	reifcode: works for me
<reifcode>	mmh
<reifcode>	compiles and runs correctly?
<cronos>	something about your GOPATH perhaps?
<cronos>	well, compiles but fails to run because network device isn't identified
<reifcode>	not likely, it’s working fine with the same project and other pkgs.
<reifcode>	if it compiles, is enough. so it must be something nasty here. i was worried about something broken with the lib itself
<reifcode>	thx for help ^^
<reifcode>	still, i have no clues anyway. if somebody’s got some ideas, it would be really appreciated :D
<cronos>	what's your system?
<reifcode>	osx
<reifcode>	compiling for ARM btw
<cronos>	does it compile for osx?
<reifcode>	nope
<cronos>	¯\_(ツ)_/¯
<Wessie>	try doing go get again, with -u
<reifcode>	cronos: sorry, i made a mistake. for osx it compiles. compiling for arm is not working
<cronos>	something about c stuff perhaps?
<reifcode>	i’m compiling with this command: GOOS=linux GOARCH=arm GOARM=6 godep go build -o ./bin/tcpdump -ldflags "  " ./src/tcp
<reifcode>	yeah, that’s what i was thinking about
*	flazz is now known as zz_flazz
<reifcode>	any experience with c code compiled for arm with go?
<Wessie>	if you have the C toolchain for it, should work
<Wessie>	I think? I'm actually not sure
<reifcode>	i mean, anything else in the project is being compiled correctly for both osx and arm v6. except for this little pcap bastard.
<fivetwentysix>	if I build something on a Arm device, would the binary run on a x86_64 machine?
<reifcode>	nope
<fivetwentysix>	 reifcode: so I would have to build binaries for every distrubution I intend to ship for
<reifcode>	yep
<fivetwentysix>	architecture*
<reifcode>	different ISAs for example
*	e-dard is now known as e-dard_afk
<esarl>	hey. does anyone know of any libraries that works with financial calculations? particular finding the interest rate given a series of payments and the present value
*	kernal is now known as zz_kernal
<bnagy>	isn't that just arithmetic?
<nteon>	lol
*	danecand_ is now known as danecando
<esarl>	http://en.wikipedia.org/wiki/Amortization_calculator#The_formula  pretty sure need to use a root finding algorithm..
<esarl>	esp if payments are not consistent
*	veonik is now known as veonik_
<esarl>	was hoping to take a short cut instead of having to write one
<cronos>	reifcode: is that package the only cgo thing in your project?
<reifcode>	yep
<echlebek>	esarl: Invoke Python with os/exec? :)
<esarl>	ho. that would work O_O cept im porting this over from python haha
<reifcode>	cronos: i tried with CGO_ENABLED=1 and it gives me “clang: error: argument unused during compilation: '-mno-thumb’”, that i could disable having direct access to clang. no idea about how to do it via go build D:
<nteon>	use gcc?
<reifcode>	not working neither
<cronos>	reifcode: hmm, does "GOOS=linux GOARCH=arm GOARM=6 go install github.com/google/gopacket/pcap" work at all?
<reifcode>	cronos: yes, it works
<cronos>	did you try building without godep?
<pleiosau1>	anyone here know any details about llgo's garbage collector?
<reifcode>	cronos: same results :'(
<reifcode>	back
<fivetwentysix>	wow a hello world binary is 1.6M
<mohae>	wow, it's that small?
<fivetwentysix>	mohae: is that small?
<fivetwentysix>	1.6 megabytes
<cronos>	yeah, pretty small
<mohae>	I honestly expected it to be a little larger
<cronos>	me too
<fivetwentysix>	well it imports "log"
<cronos>	fivetwentysix: it includes *all* of fmt package and it's deps plus all of runtime, GC, scheduler, etc
<cronos>	s/fmt/log
<fivetwentysix>	the source code is 85 bytes lol
<cronos>	yes, it doesn't mean that source code of 190 bytes will be 3.2MB
<echlebek>	If you use os.Stdout.Write for hello world, then your binary will be just under 1M :)
*	Doctor_ is now known as Guest74354
<mohae>	fivetwentysix: now try this sample
<cronos>	fivetwentysix: go is not really meant to be ran on devices where that kind of size is problematic
<mohae>	oops https://golang.org/doc/articles/wiki/#tmp_3
<mohae>	fivetwentysix: e.g. that hello world includes a lot more than just "hello world". How big is "Hello World" in java if you include the jvm?
<fivetwentysix>	mohae: yeah makes sense
<fivetwentysix>	golang is awesome no doubt
<fivetwentysix>	jvm is huge
<mohae>	fivetwentysix: also, for other languages, how big would the install be to get hello world running? If you put that hello world executable on another machine, it would work as expected w/o installing anything else
<fivetwentysix>	mohae: provided the same arch yes
<fivetwentysix>	mohae: can you compile for different archs on the same machine
<fivetwentysix>	?
<cronos>	yes
<fivetwentysix>	oh wut.... crazy
<mohae>	fivetwentysix: yes, you can specify the target arch and os
<echlebek>	fivetwentysix: this is called "cross compilation"
<fivetwentysix>	so is anyone doing iOS dev in golang yet?
<reifcode>	ok guys, thank you for help :) have a nice day!
<reifcode>	bye
<bnagy>	fivetwentysix: no, do you know something I don't?
<bnagy>	I've been keeping one eye on it, but I didn't think it was real-world yet
<mohae>	iirc, there's an IOS port being worked on
<mohae>	what bnagy said
<PeterO_>	Anybody here use the golang.org/x/net/context library?
<mohae>	I think iOS support is a goal for 1.5
<bnagy>	that would be awesome :P
<mohae>	as awesome as using Visual Studio for iOS apps?
*	mohae ducks
<bnagy>	well there's an agl project (pond) which we have ported to android with gui etc and I would really like to be able to do the same for ios
<PeterO_>	nvm.. it just did exactly what I needed it to lol
<mohae>	I like the parenthetical comment on Pond's readme.
<mohae>	and I like any secure alternative to email for communication. I really do not like email
<bnagy>	pond is pretty great
<bnagy>	but holy crap is the UX bad
<nathanleclaire>	So is there any way to do a JSON marshal but skip unsupported fields e.g. a function
<PeterO_>	`json:"-"` ?
<esarl>	echblebek: hmm running -> cmd := exec.Command("python", `-c "import numpy; numpy.rate(10,-100,15000,0,0)"`) gives me this error: IndentationError: unexpected indent, any idea why?
<cronos>	esarl: cmd := exec.Command("python", "-c", "import numpy; numpy.rate(10,-100,15000,0,0)")
<nathanleclaire>	PeterO_: Unfortunately the struct is in a 3rd party library I don't want to modify >_>
<esarl>	ooh there, thanks
<nathanleclaire>	Maybe I'm toast
<PeterO_>	nathanleclaire: Ah.
<bnagy>	nathanleclaire: usually I just wrap copy struct into something simpler and serialise that
<nathanleclaire>	yeah
<nathanleclaire>	I'm trying to get a feel for what the struct contains
<bnagy>	you have to write a once-off export/convert function
<nathanleclaire>	maybe fmt.Println("%+v", struct) will work
<bnagy>	uh how do you not know?
<echlebek>	he wants to feel it
<bnagy>	no source?
<esarl>	somehow it feels wrong porting a python script into go only to make os/exec call back to python…
<echlebek>	esarl: it is wrong
<echlebek>	esarl: something that's a little less gross but also way more complex is to provide Python functionality via a service
<bnagy>	esarl: just write the function
<echlebek>	yeah, I think your particular function is not that complex
<esarl>	ya.. i think when i have more time i’d just need to write the functions
<echlebek>	It's not like you have to implement all of numpy to get that
<bnagy>	TI calculators can do this, I'm sure you can manage
<bnagy>	well get the numpy code, get that function, port
<esarl>	well.. i just dont understand floating point arithmetic and all that. and that decimal library u showed me yesterday i’d have to implement a bunch of functions which i dont have time for right now
<echlebek>	starting up the python interpreter is 'spensive too
<mohae>	esarl: more time? It could probably have been written in the amount of time you've fiddled with the call out to Python,
<esarl>	mohae: i forgot to mention my cs background is limited to high school cs playing with java so everything takes time :P
<bnagy>	this is not cs, it's just Programming
<mohae>	^
<bnagy>	but this is how we learn :)
<esarl>	well, it wouldnt take long if i just use float64.. but i dont understand the accuracy of that
<smcquay>	mohae: iteratively solve a non-linear eq?
<echlebek>	yeah I'm not so sure reimplementing numpy.rate would be that straightforward
<bnagy>	oh is it actually non-linear fitting?
<echlebek>	http://docs.scipy.org/doc/numpy/reference/generated/numpy.rate.html
<esarl>	like, math has all the required calculation but w/ float.. but is that sufficient?
<echlebek>	esarl: well if you were using numpy.rate before, it must be, since that's using floats
<esarl>	oh.. -_-''
<esarl>	so.. when should i be worrying about floating point accuracy if ever?
<echlebek>	well the problem with floating point is that errors tend to compound when a lot of calculations are performed, if you don't take steps to mitigate that
<bnagy>	ok that still seems pretty simple https://github.com/numpy/numpy/blob/v1.9.1/numpy/lib/financial.py#L531
<bnagy>	to port, I mean, not to invent. Plus bonus points for Newton's method <3
<esarl>	ya i can just rewrite that in go. i was just worried about accuracy that’s all.. for some reason i had though python magically had a more accurate implementation of float ??
<echlebek>	No, and even if it did, numpy floats are not Python floats.
<bnagy>	float issues are CPU issues not language ones
<bnagy>	but you could just rewrite it using one of the fixed precision libs we were talking about yesterday
<echlebek>	yeah, looking at the code for that function, it wouldn't be too bad
<esarl>	i was planning to. then i realized it had no implementation for x ^ n
<bnagy>	it only uses + - / and **
<bnagy>	it must
<displease>	I have a `func NewServices() *Services etc` in my services.go, in my $GOPATH/src/services/services.go file, I've imported services in the file I'm working on in my $GOPATH, but it's telling me services.NewService() is undefined
<displease>	what am I doing wrong?
<esarl>	so i went to look that up, and i can either implement using a loop, or find a log ?
<esarl>	http://godoc.org/github.com/shopspring/decimal
<bnagy>	worst case just use a for loop
<esarl>	i think for their purpose they dont need it
<displease>	I've checked, I have saved services.go since I've added this
<bnagy>	but they are mostly-wrapping big.Rat was my understanding, which has it
<displease>	do I have to have go rebuild services.go or something somehow?
<mohae>	displease: how did you import it?
<esarl>	oh did big.rat have it? i must have missed it
<echlebek>	well big.Int has Exp
<displease>	mohae: "services"
<displease>	the package is named services
<esarl>	ya.. big.int has i dont think big.rat does
<MyGreenPickle>	Hey peeps. Is there any way in GO for me to create a database on the fly before doing a SQL.Open?
<KirkMcDonald>	MyGreenPickle: I'd think that would be up to whichever DB you're using.
<bnagy>	esarl: huh, you're right
<displease>	mohae: here I'll throw both files into a gist just for clarity
<bnagy>	for loop then, I guess
<MyGreenPickle>	KirkMcDonald: I should have specified that I want to use github.com/lib/pq. I have done my search and it doesn't seem to be a way to do it, which seems really weird to me.
<displease>	mohae: https://gist.github.com/sneakyness/ac393dc3866c6b7dc792
<esarl>	for loop it is lol
<mohae>	MyGreenPickle: if you have a way to connect to the server w/o the db name, or an alternate db on the server that you could connect to and sufficient privileges to create a new db. Then switch to that database. caveat: I'm just looking at it from the sql perspective
<mohae>	displease: given your package names and import path I can't say as I don't name packages in such a manner; which is inconsistent with conventions.
<displease>	mohae: yeah I realize the names are bad I'm just trying to get something working
<displease>	how am I breaking convention?
<mohae>	displease: note the import path of your imported martini package, which, btw, it's generally recommended that you don't use.
<mohae>	and whoever created that go-martini org...>.>
<displease>	dont use what?
<displease>	I don't think that has anything to do with NewService() coming back as undefined
<mohae>	displease: https://golang.org/doc/code.html
<mohae>	displease: I can't say, as I don't use such package names as that is not conventional in Go.
<MyGreenPickle>	mohae: I do not quite understand what you mean. The project will run locally on the machine and a user had to enter a database_name into an environment files. My users are not knowlegable in IT. The go file has to be able to create it itself.
<displease>	mohae: you can't say what??
<displease>	could you be more specific, I'm not sure if you're nitpicking about things that are unrelated to the issue
<displease>	I'm not even sure what you're saying about importing martini? that's how they do it on the link you just sent me
<mohae>	MyGreenPickle: it seems wierd that you want you application to connect to a DB that doesn't yet exist. But, if it is something that works within the context of what you are doing, then you will probably need to connect to a valid database on that server, as SQL Open requires that, make sure the user connecting to it has sufficient privileges to create a db, which again would be wierd for an application db user, and then create said db
<mohae>	and switch to using it.
<echlebek>	esarl: you give up too easily ;) http://play.golang.org/p/pcA-NeutQM
<KirkMcDonald>	MyGreenPickle: I normally think of DB creation as being in the domain of database administration, and outside the domain of what the application does.
<mohae>	displease: as I said, your package naming isn't consistent with Go's and I can't provide any additional info as I haven't tried importing packages named in such a way. Sorry, I can't help in this siutation.
<KirkMcDonald>	MyGreenPickle: And indeed PostgreSQL is generally rigged up in this way.
<displease>	how is it not consistent???
<mohae>	MyGreenPickle: an application user should not have such privileges
<mohae>	displease: please read the provided link.
<KirkMcDonald>	MyGreenPickle: And as mohae says, you don't typically want the DB user that your application uses to have this level of permission.
<displease>	mohae: I have, could you please answer the question
<echlebek>	esarl: sorry that was wrong.
<mohae>	displease: I have
<displease>	no you haven't?
<esarl>	that almost works
<cronos>	displease: how did you compile your program?
<esarl>	if numB is not a rational?
<esarl>	and is an integer?
<cronos>	also, what does go env output?
<KirkMcDonald>	(Heck, I wouldn't even give the application's user DELETE permission if I can avoid it...)
<displease>	cronos: go build
<displease>	cronos: https://gist.githubusercontent.com/sneakyness/8935b53e39fc65a5e7bf/raw/2b441aa5e3fdb29c46e35794c405e1d3619009de/gistfile1.txt
<mohae>	MyGreenPickle: any db user should only have the absolute minimum privileges they need to accomplish what they are supposed to.
<mohae>	ideally as roles, if the DB supports that so individual user stuff doesn't have to be managed, aside from role membership
<cronos>	displease: could you paste output of tree command ran from $GOPATH?
<MyGreenPickle>	mohae KirkMcDonald - Thanks for the explanation. In my case, the database will be used to save songs location of his music library on his local machine. Which my script will let him do queries on that database for searching files (the idea is more complicated than that but that is a summary)
<displease>	cronos: what is "tree command"
<fivetwentysix>	apt-get install tree / brew install tree
<fivetwentysix>	displease: ^
<displease>	oh okay
<cronos>	displease: a command called "tree"
<KirkMcDonald>	MyGreenPickle: Perhaps sqlite would be a better fit for this application?
<cronos>	same as ls
<displease>	so just `ls` then?
<fivetwentysix>	KirkMcDonald: one thing is not hard to do is actually dump json to a text file and load it back up
<mohae>	MyGreenPickle: what KirkMcDonald said. Or you could use an embeddable db written in Go so it's just an import
<MyGreenPickle>	KirkMcDonald: Probably! If you think this is more appropriate, I'll do some research about it.
<displease>	cronos: https://gist.githubusercontent.com/sneakyness/3da405856230cc4a8811/raw/bb305a603aadd2eeaf1d658d0bb97b14c3aa2ece/gistfile1.txt
<MyGreenPickle>	mohae KirkMcDonald - Thank you!
<cronos>	displease: i asked for tree
<cronos>	i meant that "tree is a cli tool same as ls"
<displease>	oh okay
<echlebek>	esarl: does numB ever need to be a rational?
<esarl>	echlebek: cant u just do numA.Exp(numA, numB, nil)*numA.Exp(numA, -denB, nil) / denA.Exp(denA, numB, nil)*denA.Exp(numA, -denB, nil) (with the proper / and * functions)
<KirkMcDonald>	MyGreenPickle: With sqlite, if you want to make a new DB, you just point it at a file which doesn't exist yet, and it creates it.
<KirkMcDonald>	MyGreenPickle: Then you issue which ever CREATE TABLE commands you need.
<KirkMcDonald>	whichever*
<fivetwentysix>	displease: I'm guessing you're having trouble with the main and lib package in same repo style?
<esarl>	if im doing amortization schedules, i can’t see why i would, just int is fine.. but in general?
<fivetwentysix>	displease: take a look at goconvey and how they did it
<fivetwentysix>	ugh i have to goto awsloft :(
<displease>	ah ports has it too
<cronos>	why "have to"?
<displease>	cronos: https://gist.github.com/sneakyness/6eb759b36011853b6ad9#file-gistfile1-txt
<fivetwentysix>	cronos: my colleagues are going and want to hang out with them :D
<cronos>	heh, so not so bad after all
*	iant1 is now known as iant
<displease>	fivetwentysix: I'm not sure what I'm supposed to be looking at in goconvey
*	ChanServ gives voice to iant
<cronos>	displease: any reason you leave server.go outside of GOPATH?
<displease>	what do you mean? it's there
<fivetwentysix>	displease: I dont know your problem, but you can see how they have multiple packages in 1 repo and how they import stuff
<cronos>	displease: i mean outside of src
<displease>	services.go is in the same directory as ~/Development/Go
<displease>	should it be inside src? I haven't installed it
<fivetwentysix>	yeah
<echlebek>	esarl: yeah, I think you could just do that as long as numB is not rational. Doing it in general requires Newton's method I guess.
<fivetwentysix>	server.go needs to be inside src/
<cronos>	by convention all source code should live inside $GOPATH/src/somepackage
<displease>	wow see how easy and clear that was to explain mohae
<mohae>	displease: the code link provided earlier explains this...
<displease>	not quite
<mohae>	displease: or you could have read the provided info
<displease>	I did
<mohae>	I'm not going to mollycoddle
<fivetwentysix>	displease: golang development is workspace based
<mohae>	no, because it shows where your code goes, which is where it wasn't
<cronos>	displease: the link mohae linked explains how to organize your code quite well
<fivetwentysix>	so stuff will break if you're workspace aint configured properly
<displease>	cronos: no doubt, but that says it's for packages
<mohae>	displease: which is what you have
<displease>	I haven't installed this yet
<cronos>	displease: everything is a package
<cronos>	package != library
<cronos>	packager can be either a library or a command
<mohae>	what does install have to do with it?
<barum>	[Hiring] Looking for a developer for a Golang long term project in the government sector. This is a remote work opportunity full or part time. Must have a US work permit, be a US resident or a US citizen. please PM me.
<cronos>	(command is package who's name is main)
<displease>	I don't think that is explained so so clearly cronos
<displease>	now I understand
<mohae>	https://golang.org/doc/code.html#PackagePaths
<cronos>	displease: if you have some suggestions on how to improve the wording, please open an issue on github.com/golang/go
<displease>	I think I will, would you agree that it jumps into mentioning packages without explicitly saying that everything is a package?
<mohae>	it explains in the beginning, under Workspaces
<displease>	it says that Go files are organized into packages
<displease>	it does not say that everything is a package
<mohae>	and it goes on to say folders are packages
<cronos>	`Commands and libraries are built from different kinds of source packages`
<mohae>	no other information is provided, how would you make a conclusion other than folder == package as that is what it says
<cronos>	i can't argue about this because to me this idea seems obvious
<mohae>	I fear, if that's not obvious, then writing software in general may prove to be problematic
<displease>	idk I read that "Learning Go" book and I don't think it even went into that until the 3rd or 4th chapter, I figured that because I could just put code in a code.go file and run it that doing so was fine
<d1etyd3vil>	topic!
<d1etyd3vil>	!topic
<d1etyd3vil>	e_e
<mohae>	that's not a very good book, just do the tour, read the specs, and read effective go pages on golang.org
<d1etyd3vil>	What is this channel about?
<mohae>	oh, and the code link
<Logie>	go programming language
<displease>	I don't disagree, but it was the first one I found googling for a go book, and it looks very book-like and official
<d1etyd3vil>	Oh. I don't know this language. Sorry. Bye.
<quiznilo>	...
<cronos>	displease: sadly, it's just a book written by a random person who thinks he knows go.
<displease>	:)
*	veonik_ is now known as veonik
<mohae>	displease: there aren't any good books for Go atm. That's why tour.golang.org, the specs, and effective go pages are recommended to start.
<Nilium>	Just want to point out that I now know of at least one person who has plagiarized w3schools sample code and submitted it as a code sample for a job application.
<mohae>	did you hire him?
<mohae>	;)
<hyphenated>	there will be this book in a few months.. until then, mohae's suggestion is the best one. http://www.amazon.com/Programming-Language-Addison-Wesley-Professional-Computing/dp/0134190440/
<Nilium>	Considering I'm the one who found out it was plagiarized, no, they weren't hired.
<displease>	See, if the code.html page had a simple "Every Go program is made up of packages." like the tour, this never would have happened :)
<mohae>	Nilium: I was joking, but what kind of idiot plagiarizes code in that situation?
<Nilium>	I don't know, but I do know that a) it was google-able, b) they changed very little, and c) there is sample code on w3schools using Ratliff style indentation
<mohae>	the code clearly explains what a package is.
<mohae>	displease: was your code not in a folder?
<displease>	it's in gopath
<displease>	just not in gopath/src
<Nilium>	The indentation style is frankly the weirdest part.
<Freman>	hmmm
<mohae>	displease: it was in a directory, was it not?
<displease>	I'm not sure what you're asking
<mohae>	displease: look at your tree output, the code was in a folder
<displease>	which code?
<mohae>	but seriously, this is a bunch of nonsense
<quiznilo>	K&D Go
<mohae>	Nilium: that is really odd
*	mohae had to look up ratliff style
<displease>	anyways, fivetwentysix and cronos, you are both fantastic and helpful people, thank you for having the patience to resolve my confusion. mohae is somewhat toxic/elitest/unhelpful, and should perhaps not offer to help people if they do not have the patience to explain things clearly. Nitpicking about how packages are named does not help anyone
<Wessie>	not being spoonfed doesn't mean someone is instantly elitest or toxic
<displease>	Wessie: insulting someone's ability to program is definitely elitest and toxic
<Wessie>	I don't believe he insulted you anyway, rather he pointed you to helpful documentation/starting points for learning Go
<mohae>	displease: I provided you with the information necessary to resolve your problem. You were importing a folder, which is clearly stated to be a package.
<displease>	"I fear, if that's not obvious, then writing software in general may prove to be problematic"
<displease>	definitely not importing a folder
<mohae>	sigh what is services then?
<mohae>	that is a folder
<displease>	its just services.go, like I said
<displease>	there is no services folder
<mohae>	but that's not the import
<mohae>	displease: look at your own tree output
<displease>	oh I meant server.go lol
<displease>	anyways, I put server.go in a server folder inside src and it's still telling me that services.NewServices() is undefined
<esarl>	echlebek: https://play.golang.org/p/uVERlorNC9 <- not sure if i done it most efficiently. works fine though it seems a little slow lol
<esarl>	oops forgot the benchmark function: https://play.golang.org/p/7m7anVEXLt
<displease>	that was the most confusing thing, why would where server.go is have any effect on importing from services.go? I'm already importing and using webservice stuff without issue
<mohae>	esarl: how does that compare to the python implemenation?
<esarl>	i.e os/exec?
<mohae>	esarl: however, I asked because of your comment about not sure about efficiency
<mohae>	a/about/about not being/
<mohae>	err I screwed that up too >.>
<esarl>	lol sorry im lost
<esarl>	well i havent tried but imagine possibly a lot slower than just os/exec python? but then i guess numpy is using floats
<esarl>	so none of this back and for from decimal -> big.rat -> big.int -> exp -> big.rat -> string -> decimal
<mohae>	esarl: you said that you weren't sure if it was done the most efficient way, I was curious how it compared to the numpy one
<mohae>	esarl: ic
<Wessie>	displease: could you perhaps show a tree of your GOPATH and the related code that has the error?
<displease>	sure i'll do a new tree
<displease>	tree: https://gist.github.com/sneakyness/d214d1ad03d3fbd055c6
<displease>	code: https://gist.github.com/sneakyness/ac393dc3866c6b7dc792
<skelterjohn>	displease: server should be able to import "services"
<skelterjohn>	oh wait, services is the command
<displease>	it does
<skelterjohn>	services is package main, right?
<skelterjohn>	otherwise it wouldn't create bin/services
<displease>	i'm not sure what you're asking
<displease>	it says package services at the top of services.go
<displease>	should it say package main
<skelterjohn>	no
<skelterjohn>	but i saw bin/services
<skelterjohn>	things only go in bin if they're package main
<displease>	probably some leftover shit from earlier fumblings
<displease>	i guess i'll delete that
<displease>	same error, though
<skelterjohn>	what's the error?
<displease>		./server.go:11: undefined: services.NewServices
<skelterjohn>	(late to the party)
<Wessie>	I don't see anything wrong with the code or tree
<displease>	me either, which is why I was pretty frustrated when homeboy started snapping off about folders and names
<skelterjohn>	displease: delete the pkg directory
<skelterjohn>	perhaps something is out of sync
<displease>	ayyyyyy a new error
<Wessie>	are you perhaps using symlinks
<displease>	skelterjohn, you da real mvp
<displease>	is there a clean command i should be running between builds or something?
<skelterjohn>	if source is older than the compiled artifacts in pkg, they won't get rebuilt
<skelterjohn>	in general no
<skelterjohn>	you can just build and it will figure it out
<skelterjohn>	but it 'figures it out' by inspecting timestamps
<displease>	i wonder why it didn't this time
<displease>	must have been some timestamp fuckery
<skelterjohn>	probably something weird with a tarball
<displease>	welp i can't say that this is the first time i've wasted hours because of stale build data
<skelterjohn>	displease: most confusion having to do with things not getting imported properly is because people don't understand how GOPATH, directories, source, and packages all relate
<skelterjohn>	so that's the first thing we generally talk about
<skelterjohn>	stale artifacts happen too, but less frequently
<displease>	right I get that, but hitting someone with a link and telling them to read it when it actually had nothing to do with the problem I was having is kind of funny/frustrating
<skelterjohn>	well, you don't have to read it
<skelterjohn>	it's just text on a screen
<skelterjohn>	but i'm glad it all got sorted out
<displease>	well I already did read it, when i asked what it had to do with my problem i couldn't get an explanation :)
<displease>	anyways its quitting time, I'm going home. Thank you so very much :)
<furball365>	anyone have any luck building gccgo from source recently?
<furball365>	i would like to use gdb and i've heard gccgo is the best option
<skelterjohn>	displease: sure thing
<bnagy>	furball365: reconsider your life choices, imho
<furball365>	i've fetched gcc using the gccgo branch and downloaded the dependencies using the contrib script but now configure is telling me that go could not be built
<nucular_>	golang newbie question: i'm trying to populate a struct with the content of a webpage and a map of html tags and their counts. i've gone through the tour io.Reader exercises and some blog posts. my solution seems like the wrong way. can you take a look? http://pastebin.com/y1ZZgwwV
<furball365>	bnagy: you've tried debugging with gdb i take it..
<djx>	which "log" libs do you guys usually use? I need one that prints the method here the log message was created
<bnagy>	only when completely unavoidable
<furball365>	bnagy: well.. i have to see what i'm getting into
<bnagy>	but go as a language has enough support tools that I've never even come close to breaking out a debugger
<bnagy>	in fact I don't think I have _ever_ used a debugger for something I have source for, only for RE
<furball365>	bnagy: someone from the Docker team has claimed success with gdb. It's quite handy when you get a crash or need to break.
<bnagy>	although I accept that this is a minority position
<skelterjohn>	djx: that's not the standard, but it is possible to do
<furball365>	bnagy: i come from c/c++ background.. gdb is quite common down there
<skelterjohn>	djx: you can write a function that calls runtime.Callers() and incorporates the result into the log message
<djx>	skelterjohn: what is the standard?
<skelterjohn>	djx: to not have it print the method :)
<bnagy>	furball365: native go programs don't (99.9%) crash
<skelterjohn>	djx: but i understand how that could be useful while debugging
<bnagy>	panics are a whole other animal
<skelterjohn>	bnagy: i have never used a debugger with go either
<djx>	<skelterjohn> oh yep it is useful :-) I found one but I'm not sure "how" to use it
<skelterjohn>	but i've only been writing go code for 4.5 years
<skelterjohn>	djx: i made something that helped with this a while ago, i'll see if i can dig it up
<_cb>	In oop I could inherit horse and dog from mammal (both drink milk) but dog eats meat and horse eats grass and i could inherit hound beagle from dog. How would I accomplish that functionality in go?
<djx>	<skelterjohn> https://github.com/op/go-logging/blob/master/examples/example.go
<bnagy>	_cb: with composition
<skelterjohn>	djx: (small nit) when you address me like that i read it as you quoting me
<djx>	<skelterjohn> you see the "var log" on line 9? If I have multiple files for the same package I can only have one "log"
<skelterjohn>	djx: in general, you address people as i address you to avoid confusion :)
<djx>	<skelterjohn> test
<skelterjohn>	F!
<skelterjohn>	djx: you can use that one log in all files in your package
<djx>	that's what happens when I copy-paste your name from xchat2 =\
<djx>	I only left the "</>"
<skelterjohn>	djx: i have tab completion for your name
<djx>	OMG!
<djx>	I've been using this for over 3 years and never thought about that!
<skelterjohn>	haha
<djx>	I have it too!
<bnagy>	:|
<djx>	I feel so bad now...
*	djx does deserve to have one internet
<djx>	does not
<skelterjohn>	djx: https://xkcd.com/1053/
<djx>	ahah
<skelterjohn>	though i'd guess far fewer than 10k per day learn about irc nick completion
<djx>	I should change my nick to djx_you_can_tab_my_name_while_referring_me
<skelterjohn>	djx: but what about the go stuff? i'm not sure i understood your question about var log
<skelterjohn>	djx: aha! found it https://github.com/skelterjohn/debugtags
<skelterjohn>	um, not what you wanted
<skelterjohn>	but it's what i was thinking of haha
<djx>	skelterjohn: ah that's not bad
<skelterjohn>	https://github.com/skelterjohn/gonicetrace/blob/master/nicetrace/nicetrace.go shows you how to get and display caller information from runtime.Callers()
<skelterjohn>	(different repo)
<skelterjohn>	and you could combine those two to have an incredibly verbose debugging logger
<djx>	skelterjohn: so, from the example that I've sent you I was expecting to past var log = logging.MustGetLogger("example") on every file, just for consistence
<skelterjohn>	i tend to not let my code not get complicated enough to really need a debugger, these days
<skelterjohn>	djx: the files are all in the same package, and therefore share the same global namespace
<skelterjohn>	djx: so there is no need to declare it in each of them (in fact that is a compile error)
<djx>	skelterjohn: yep, exactly so I don't know if there's a pattern to put that var log on which of the files?
<skelterjohn>	because it's available in every file, when you declare it just once
<skelterjohn>	oh...
<djx>	skelterjohn: or if I should create a log.go on every package
<skelterjohn>	whichever one is your favorite.
<djx>	just to have that variable
<skelterjohn>	it's important to play favorites
<djx>	lol
<skelterjohn>	and to make it clear to all your files which one is the best
*	djx wishes that his code organization was more "patterned"
<furball365>	skelterjohn: back.. network went down :(
<djx>	furball365: you can tab the nicks of people when you speak, did you know that?
<djx>	furball365: I didn't :-( skelterjohn taught me
<skelterjohn>	djx: don't make it weird
<djx>	skelterjohn: lol
<furball365>	djx: do you mean that in your client 'tab' lets you autocomplete?
<djx>	skelterjohn: but really, tks for the repos
<djx>	furball365: yep
<skelterjohn>	djx: sure thing
<furball365>	djx: because, if so, that would be kinda trivial
<furball365>	dja: and it doesn't work in my client
<djx>	furball365: I feel bad already about that...
<furball365>	djx: see :)
<djx>	furball365: ;-)
<furball365>	djx: but really.. a debugger is pretty handy sometimes.
<furball365>	djx: if you're coming from the scripting side you probably wouldn't be too keen on it, but if you have to jump into the middle of bug to see context it can be quite handy.
<skelterjohn>	furball365: i was chatting with djx about how some combination of https://github.com/skelterjohn/debugtags and https://github.com/skelterjohn/gonicetrace can go a long way towards debugging
<djx>	furball365: no, it's not for debugging, it's for logging mostly. some things are helpful to see in logs if it fails afterwards
<furball365>	djx: yes.. i've had a conversation with some folks about logging on stackoverflow and agree that it can be low-hanging fruit when you're trying to repro a customer problem
<furball365>	djx: i've tried  remote debug sessions, but usually the customer isn't setup for them
<furball365>	djx: and the heisenbugs can be a real bear to reproduce.. logs can be a lifesaver
<djx>	yep yep and when the costumer calls you the bug is solved :-)
<furball365>	djx: if they are light enough not to interfere with the timing of the bug
<skelterjohn>	furball365: that was so common when i'd do stuff with C++
<furball365>	djx: yes.. Happy Times :).
<skelterjohn>	if i didn't initialize some memory properly, the print statement would cause it to work
<skelterjohn>	take it out, fails again
<skelterjohn>	gg.
<djx>	lol
<furball365>	djx: yes.. i think perhaps golang has yet to scale to the size of some of the c++/java monsters
<furball365>	djx: just dipping my toe in the water
<furball365>	skelterjohn: i suspect the Docker team might see some tougher bugs.. don't know how big their code is. Apparently they do use gdb regularly according to that post. This surprised me.
<ttke>	mmm structured logs
<furball365>	skelterjohn et al: this is the discussion wrt trace logging.. http://stackoverflow.com/questions/29871585/how-do-you-log-function-call-return-values-in-golang
<furball365>	skelterjohn: i don't think we had anyone familiar enough with the golang runtime to say whether it would be possible to support automated trace logging in the golang runtime
<furball365>	skelterjohn: it might also apply to event sourcing
<skelterjohn>	you could certainly do it
<skelterjohn>	there is precedent for instrumenting things in the race checker
<skelterjohn>	it would have to be a modification to the go compiler itself, though
<furball365>	skelterjohn: it would be unique.. which is sometimes ok
<skelterjohn>	furball365: i don't follow
<furball365>	skelterjohn: if it is unique and provides value to devs then it's ok :)
<skelterjohn>	man, gerrithub.io takes forever to import a PR
<furball365>	skelterjohn: and if it's unique to golang it draws attention to its strengths relative to other environments. I suspect some in the CLR/JRE community may have looked at it. Event sourcing is a common-enough pattern.
<skelterjohn>	furball365: make it happen ;)
<furball365>	skelterjohn: i could do it, but my attention is currently on a larger project higher up the stack and i managed to get past the immediate problem. I don't know if the runtime has the hooks necessary to do it, currently, either.
<furball365>	skelterjohn: just a thought, in any case. Meanwhile i have no luck with gccgo and i start to feel it's not a well-travelled path. There is a fairly length page on it on the golang site, though. Maybe the latest gccgo branch is broken somehow.
<furball365>	skelterjohn: they might want to consider moving away from gcc btw. Companies are moving towards LLVM.
<_cb>	Using composition how would I make it so that Horses and Dogs share the drink milk function but horses  eatgrass  and  dogs  eatmeat? Understand how I can use interfaces to the one or the other but not both.
<furball365>	anyone have any positive experiences using gdb? I hear Docker uses it with some success, but so far i can't get the latest gccgo to configure with go support
<_cb>	Is this the correct way? http://play.golang.org/p/uy4c6yPVeK
*	THETA_D is now known as modafinil
*	ChanServ gives voice to iant
<quiznilo>	I should test out https://www.reddit.com/r/golang/comments/34b67y/wgo_managed_workspaces_on_top_of_the_go_tool/
<quiznilo>	give some feedback
*	alexyzzz is now known as a13x
<Wessie>	quiznilo: could've just linked to the github, the author is in here :)
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Wed Apr 29 22:40:30 2015

**** BEGIN LOGGING AT Wed Apr 29 22:40:55 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Wed Apr 29 22:40:56 2015

**** BEGIN LOGGING AT Wed Apr 29 22:41:21 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Wed Apr 29 22:41:22 2015

**** BEGIN LOGGING AT Wed Apr 29 22:41:48 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<quiznilo>	I know
<furball365>	quiznilo: out of idle curiousity, what is this thing that you know?
<quiznilo>	that the author of what I posted is currently in the channel
<quiznilo>	I actually wouldn't have posted that link if he wasn't
<furball365>	quiznilo: ah.. i just logged in and it seemed like you might be the Go Oracle i've been seeking. My client does not scroll very high.
<quiznilo>	of crouse
<quiznilo>	carry on...
<furball365>	quiznilo: yes.. good to know..
<furball365>	anyone here tried to use gccgo lately?
<furball365>	trying to install it, but configure fails on OSX
<furball365>	i'm doing it under the assumption that gdb suddenly becomes useful, but this may just be rumor
<mohae>	furball365: gdb doesn't understand Go's concurrency model
<mohae>	try https://github.com/derekparker/delve
<mohae>	oh, your using gccgo, I don't know if my link would be of use (never tried)
<furball365>	mohae: hi again. According to the golang page, gccgo has native support for gdb. It seems like an Exercise, though.
<furball365>	mohae: looked at delve, but it seems alpha still
<mohae>	furball365: well, gdb doesn't understand Go's concurrency model
<mohae>	and delve does, if you're debugging Go, for which Delve will work better than gdb, regardless of delve's status.
<furball365>	mohae: i see some posts from Docker devs that indicate they are using gdb successfully.
<mohae>	and as long as the debugger does what it needs and works better than the other option, why would 'alpha' matter
<mohae>	furball365: good luck then
<mohae>	just stating there are known issues with using gdb to debug go
<furball365>	mohae: i'm always cautious of alpha, particularly in a debugger. Usually you have enough problems at that stage without having your tools contribute.
<furball365>	mohae: yes, i know. I was trying to get gccgo installed but it balks during configure.
<mohae>	again, I'm just stating the fact that delve works for debugging Go. Whether it has the exact functionality you are looking for is a different thing, but it does work well for debugging Go
<furball365>	mohae: ok. Seems worth a try, then. I applaud their efforts. Perhaps JetBrains get interested if there is a debugger.
<furball365>	mohae: thanks
<furball365>	mohae: i don't use JetBrains btw.. just vim currently
<mohae>	np
<furball365>	mohae: looked at the open issues on delve.. it's still too unstable for production use
<cronos>	you... debug in production? :O
<furball365>	cronos: sure.. sometimes it's necessary. You should try it.
<cronos>	it's not like your success relies on your debugger. it's just a tool to help you identify issues.
<cronos>	debugging in production for me most of the time consists of analyzing logs after the issue happened
<furball365>	cronos: well.. there are certainly no shortage of shops pitching the MVP startup line, but if the first impression of the customer is that your product is losing their time/data then they may not stick around.
<furball365>	cronos: there is a realization among startups now that pushing out an MVP isn't always the best course
<furball365>	cronos: particularly if the market is tight.
<cronos>	i don't really see how startups and mvps relate to open source debugger
<cronos>	it's not a product they try to sell to you
<furball365>	cronos: i suspect JetBrains could sell me one :)
<furball365>	cronos: i think golang has enough traction now to draw their interest
<cronos>	ugh, i'd like to see a person who'd pay to use a debugger for go
<furball365>	cronos: i think Docker uses gdb based on some www posts. I see a lot of people saying it doesn't work, though. Perhaps it's because the projects aren't really big enough yet to justify breaking into the code with a debugger.
<cronos>	but anyway, my point was: delve is something worth checking out if you can't live without a debugger. if it's unbearably broken, leave it and look for something else.
<furball365>	cronos: fair enough. They seem to be moving quickly but it might be a bit frustrating for a bit.
<cronos>	yeah, go code is easy enough to read and follow so that it's really rare that you would *need* a debugger
<furball365>	cronos: well.. i've got a moderately large piece of go code which i'm unfamiliar with that prints out an error message after about 10 seconds and it would be nice to just put a breakpoint on the message to figure out the context. A log doesn't really do that well.
<AlecTaylor>	hi
<quiznilo>	hello
<furball365>	cronos: i spent about 6 months debugging 1 million+ lines of c++ on a tight schedule. At that scale a debugger is nice.
<quiznilo>	insane
<cronos>	furball365: well, here our debugging approaches diverge
<cronos>	yah, 1m loc *and* c++ sounds horrible
<furball365>	cronos: perhaps because of scale, or perhaps because you are familiar with the code
<furball365>	cronos: and you aren't that far above c/c++ :)
<cronos>	there are way fewer ways to shoot myself in the foot with go
<furball365>	cronos: yes, that is certainly true. It seems very pragmatic to me. There is Always the leaky paradigm, though. When you slip off that cliff then a debugger can help.
<AlecTaylor>	I'm from the Python world and am trying to decide whether to use Go or Python for the next component in my system.
<AlecTaylor>	Is there a Go equivalent to Fabric? - /me is currently reading: http://kukuruku.co/hub/golang/ssh-commands-execution-on-hundreds-of-servers-via-go
<andlabs>	what is Fabric
<ebonics>	AlecTaylor, in my experience with go (limited) i've found that finding your own library is the best option
<ebonics>	there's so many shitty libraries you need to assess them for yourself
<ebonics>	cause people will just link you the first result on google
<_cb>	ebonics you mean making your own library?
<AlecTaylor>	BTW this is Fabric: http://www.fabfile.org/
<ebonics>	_cb, no i mean to find the most full featured library you need to do research
<ebonics>	there's not many mature libraries out there yet
<_cb>	Yes, agree. Go is very young
<andlabs>	I'm not sure what that libray is supposed to be doing
<andlabs>	but if it's not on godoc.org...
<cronos>	AlecTaylor: there's http://godoc.org/golang.org/x/crypto/ssh for ssh and http://godoc.org/github.com/pkg/sftp for file transfer
<AlecTaylor>	cronos: Yeah, just seeing if there's something atop those libraries that abstracts away things cleanly
<cronos>	they are quite abstract imo
<AlecTaylor>	Fabric has a bunch of rather convenient helpers
<cronos>	for example?
<AlecTaylor>	(and is built atop paramiko, which is similar to crypto/ssh)
<furball365>	AlecTaylor: perhaps salt might be worth a look. Kubernetes is built on top of it. Docker is built on Go. They both have a fair bit of momentum.
<AlecTaylor>	Salt and Ansible are pretty cool also
<AlecTaylor>	But I just want something very simple for running a few commands in response to events
<AlecTaylor>	(specifically a queue of events)
<_cb>	If it is production go with Python. If you are experimenting go with GO
<quiznilo>	this http://godoc.org/code.google.com/p/go-uuid/uuid needs a sample program
<AlecTaylor>	_cb: Of all my components only two are currently written in other languages, Mesos (C++) and libcloud+my wrapper (Python). Everything else is Go
<ebonics>	AlecTaylor, what exactly do you need the library to do
<AlecTaylor>	Connect to a host, run a few commands (at different permission levels), then disconnect.
*	AlecTaylor refers again to this blog post: http://kukuruku.co/hub/golang/ssh-commands-execution-on-hundreds-of-servers-via-go
<furball365>	AlecTaylor: if you are looking for speed and clean pragmatism then golang is better than Python. Python has a lot of ways to do the same thing, it lacks the focus of the golang development tools, and it has serious speed brakes. Last i used it i went with Cython.
<ebonics>	i guess pragmatism is a good way to describe go
<AlecTaylor>	Mmm
<ebonics>	it's an extreme form of it though
<AlecTaylor>	From what I've seen of Go it's nice, but not quite as neat+powerful as Haskell
<ebonics>	there's like absolutely no design involved in writing a go application
<AlecTaylor>	Lack of boilerplate sounds good to me
<bnagy>	jet fuel can't melt steel beams
<AlecTaylor>	bnagy: youtu.be/sdf35v
<ebonics>	it's nice actually, i'm still getting used to it though
<furball365>	ebonics: yes, highly pragmatic i think. I use the lint plugin in vim and it wants me to do everything it's way :). I don't mind. Indent/comment/naming style isn't the main issue for me.
<ebonics>	i think i still prefer rust though
<AlecTaylor>	Rust has better patterns IMHO
<_cb>	ebonics rust over go?
<ebonics>	but that may change as i use go more
<furball365>	ebonics: i like the goroutine scheduler as well.. it's Erlang's model, but you don't have to drop out of the environment for tasks which require performance.
<ebonics>	furball365, yeah goroutines are what kept me from abandoning when i learnt there's no inheritance lol
<quiznilo>	skelterjohn: I love this wgo... I love it's reason for existing
<furball365>	AlecTaylor: i don't know if rust has a strong corporate sponsor. Golang is from Google and Docker. It isn't going away anytime soon.
<ebonics>	_cb, definitely like the syntax and language better yeah
<Xe>	furball365: mozilla
<quiznilo>	'Golang is from Google and Docker.'?
<_cb>	Haskell, clojure and assortment of functional languages have been out there forever.  Don't see functional becoming the 'next thing'. Go brings a lot to the table and Rust is making nois
<quiznilo>	Docker?  rly?
<ebonics>	i can't stand rust at all right now though
<ebonics>	half the libs require nightlies which change every hour, like sometimes extreme changes
<furball365>	Xe: ah.. well.. I've heard good things about rust but golang fits my requirements for now
<ebonics>	cbf with that
<_cb>	Does docker have a hand in GO? I thought it was all google
<quiznilo>	hmm... docker didn't have anything to do with the development of the language
<quiznilo>	ya, it's all google and volunteers
<Xe>	furball365: rust is great for the people at work who complain that go has no generics
<furball365>	_cb: docker is built with go
<quiznilo>	yes
<_cb>	Ahh generics .............
<ebonics>	Xe, i have a severe dislike of go typing
<ebonics>	i don't understand the rationale at all for it
<ebonics>	i haven't read very many docs yet though
<Xe>	I've been thinking about toying with the go compiler source code and trying to implement generic programming in it
<Xe>	if only to make them shut up
<bnagy>	it's like an HN thread.. but right here in my living room
<AlecTaylor>	Also annoyed with Gerrit and whatnot making it difficult to patch Go
<Freman>	http://play.golang.org/p/fpvuDWEkHt - trying to unmarshal the id's to an array of "id"... but can't figure out how, am I just going to have to []map[string]string and iterate it?
<furball365>	Xe: good lord
<_cb>	generics are nice but not indispensable
<AlecTaylor>	A simple PR or issue+patch would be much nicer
<ebonics>	haha ha ha
<furball365>	Xe: a tin hat might keep out the voices :)
<Xe>	_cb: they are stubborn C++ programmers
<ebonics>	i guess that's what's nicer about the rust language too
<Xe>	I am a more stubborn C programmer
<ebonics>	there's a lot of go features that would clearly improve the language imo
<|Craig|>	ebonics: however then Go would have the problem of having too many features
<ebonics>	with rust, it's a lot more community-centric
<quiznilo>	interesting statement
<bnagy>	Freman: you're looking at a []map[string]string so yeah if you want something else you're going to have to transform it
<quiznilo>	is that your gut feeling or do you have any evidence that Rust is more community-centric?
<Freman>	ohkay
<ebonics>	quiznilo, just look at the pr logs of go and rust
<furball365>	Xe: me too. There's quite a lot of blogs etc. about generics and golang.
<ebonics>	to be fair go is more developed so it's not the best comparison but still, i have been reading quite a lot and most people agree that go needs better typing
<AlecTaylor>	Rarrr - https://groups.google.com/forum/#!topic/golang-dev/0IElw_BbTrk
<_cb>	IMHO Anyone that complains too much about generics does not understand pointer
<AlecTaylor>	_cb: I'll give you a few pointers
<_cb>	I will take pointers
<quiznilo>	every computer language HAS to have generics, dammit!
*	veonik is now known as veonik_
<ebonics>	also the project structures of go.. i don't think i'll ever get used to it
<furball365>	ebonics: design by committee doesn't have the best reputation. Golang has strong opinions in its overall approach. I don't think it would survive a committee. That is something that some Ruby/Python developers have a problem with but i think the decisions have so far saved me time.
<_cb>	ebonics what do you mean by project structures?
<quiznilo>	oh right, golang is a dictatorship, I won't argue that
<quiznilo>	there is still a lot of community involvement though
<ebonics>	furball365, yeah i understand
<ebonics>	quiznilo, i don't mean in developing libraries or something
<ebonics>	rather contributions to the language itself
<quiznilo>	no, either am I, I'm talking about contributions to the core
<ebonics>	_cb, flat directories and stuff
<the_last>	Hi, I'm new to go and trying to figure out something basic, can someone please help me with this: https://gist.github.com/anonymous/9adfb88454f8943283ef -- basically as you can see on line 17 I'm assigning to t[i] using Trade{}, but if you look at my "AFTER" version of the struct (on line 32) it's a bit different. I don't have a Trade object anymore. So now I can't assign it the same way (see line 44). Is there a way I can assign it similarly,
<quiznilo>	https://github.com/golang/go/commits/master
<furball365>	btw i wIsh golang would publish a clean standard for use by gilab/gogs/ other git hosting services. The 'go get' functionality is Nice, but i had to switch back to github because it was just a dead-end trying to get gitlab to support it.
<bnagy>	the_last: don't do what you did in after
<furball365>	maybe it's already there.. but i couldn't find it
<bnagy>	problem solved
<the_last>	bnagy: Sure, but I'd like to do what I did in after, I prefer to be able to reference the trades as an array instead of a useless .Trade
<bnagy>	I'd like a pony with a silver bridle
<the_last>	Note to self: don't reply to trolls.
<quiznilo>	https://github.com/golang/go/graphs/contributors will take awhile to load
<quiznilo>	the hell?  Jul 16, 1972?
<furball365>	quiznilo: what on earth are you doing?
<bnagy>	the_last: I'm not trolling. The before is more or less correct go code. Trade is a type, that's how strongly typed languages work
<bnagy>	a slice of some anonymous struct makes no sense
<quiznilo>	trying to measure how 'community oriented' go is, by way of number of contributors to the project
<bnagy>	whatever other problems you're having based on the before code should probably therefore be approached a different way
<the_last>	bnagy: so the after is not correct go code? why does go allow you to do an array of anonymous structs?
<bnagy>	tbh I don't know
<bnagy>	I can't think of a sensible use for that pattern
<andlabs>	*array of* not really
<andlabs>	*map of* can come in handy
<andlabs>	though map of bool might also work
<andlabs>	oh wait anonymous structure not empty structure
<andlabs>	it wasn't a concious design decision
<andlabs>	it's orthogonality
<andlabs>	allow an arbitrary type specifier as the T in an array [..]]T
<andlabs>	you can allow anything, including structures
<andlabs>	the altenratives are
<andlabs>	- banning anonymous structures entirely
<andlabs>	- requiring that T in [...]T be a type name
<andlabs>	or another [...]T
<andlabs>	or a []T
<andlabs>	or...
<bnagy>	so what's the type of these anonymous structures?
<furball365>	andlabs: i find interfaces used a lot in the code i'm using, with a lot of casting at point of use
<andlabs>	furball365: I don't follow
<andlabs>	bnagy: the type of these anonymouss tructures is the structure type
<andlabs>	it is itself
<andlabs>	finish this sentence: "the type of an object of type struct { ... } is"
<furball365>	andlabs: it's not really clean OO. I see declarations like map[string]interface{} for key/value pairs then later on the value is cast to whatever type was (hopefully) put there.
<the_last>	struct!
<AlecTaylor>	Hold up, I can't simplify my code like so?: `fmt.Println("FOO:", os.Getenv("FOO")) || "HELLO")`
<quiznilo>	bicycle
<AlecTaylor>	:(
<andlabs>	nope
<AlecTaylor>	That sucks
<the_last>	not struct, or not bicycle?
<bnagy>	oh, the full specifier
<quiznilo>	struct { ... }
<quiznilo>	ya
<andlabs>	what, did you think you could just say struct? =p
<bnagy>	http://play.golang.org/p/1iN931EkhL
<AlecTaylor>	Is there at least an environ.get("FOO", "HELLO") type command? - Or am I going to have to start maintaining a "utils.go"?
<the_last>	lol
<AlecTaylor>	:(
<quiznilo>	AlecTaylor: you have mismatched parens in that and everything
<quiznilo>	horrible
<the_last>	bnagy: interesting
<the_last>	i guess thats what i was looking for, pity it's gross :D
<bnagy>	just don't do it, the before code is right
<AlecTaylor>	quiznilo: xD, copy/pasted then edited inline here
<the_last>	okay, i'll leave it as it was, thanks
<andlabs>	furball365: I'm still not sure where what you're telling me is coming from
<furball365>	andlabs: ?
<ebonics>	bnagy, does the struct get redefined every iteration
<ebonics>	or does the compiler optimize that
<bnagy>	I have NFI I would never do it
<bnagy>	but it must be at compile time surely
<bnagy>	this isn't ruby
*	a13x is now known as alexyzzz
*	hjst_ is now known as hjst
*	alexyzzz is now known as a13x
<AlecTaylor>	Woh
<AlecTaylor>	How weak are Golang's constants? - https://gist.github.com/anonymous/abba85587e518ba59a29
*	AlecTaylor is used to C++ constexpr
<heydabop>	AlecTaylor: that code has so many compilation errors
<_cb>	the_last http://play.golang.org/p/8VW42bUGlv
<heydabop>	value = strconv.Itoa(value) obviously doesn't work
<heydabop>	Itoa takes in an int and returns a string, value certainly can't be both of those
<heydabop>	AlecTaylor: also, none of those consts are consts as you're running code to set them
<the_last>	thanks _cb
<_cb>	np am a Go newbie and it was a learning experience ;)
<the_last>	:)
<ebonics>	_cb, you can do
<ebonics>	http://play.golang.org/p/b-O0iV6J0W
<ebonics>	instead :p
<AlecTaylor>	heydabop: That's the first bit of Go I've written. Working from: https://github.com/offscale/GoSSHa/blob/master/main.go. Trying to allow for more configuration.
<AlecTaylor>	heydabop: Wait, so Go isn't reflective?
<_cb>	ebonics true but that would change the question posed by the_last. I wanted to answer the question as stated
<AlecTaylor>	Wait, lol, the return type should be int
<AlecTaylor>	:P
<heydabop>	regardless of the return type, you cant do x = string.Itoa(x)
<heydabop>	hell you can't do that in C++ either
<mohae>	you can also do http://play.golang.org/p/tomhnE2kMf
<iankronquist>	Hey, where can I find docs for the go 1.4 syscalls package?
<bnagy>	iankronquist: online, or you can (and probably should) run godoc locally
<bnagy>	personally I just godoc -http=:6060 2>/dev/null &
<_cb>	using composition instead of inhertance any thoughts on  struct mammal{} struct dog{ M mammal } vs struct dog{} struct mammal {D dog} ?
<AlecTaylor>	heydabop: So something more like this? - https://gist.github.com/AlecTaylor/06d07e485fa1bca2f740
<iankronquist>	bnagy: where online? Not here: http://golang.org/pkg/sys/
<bnagy>	you asked about syscall, right?
<iankronquist>	bnagy: syscall has been deprecated as of go 1.4
<heydabop>	AlecTaylor: im just gonna introduce you to this https://play.golang.org/p/deWFAQPP0h
<mohae>	AlecTaylor: um just making stuff up doesn't work too well: https://blog.golang.org/constants
<heydabop>	AlecTaylor: click run and see what happens
<heydabop>	AlecTaylor: but again, you can't define a const with those functions
<iankronquist>	bnagy: https://docs.google.com/document/d/1QXzI9I1pOfZPujQzxhyRy6EeHYTQitKKjHfpq0zpxZs/edit?pli=1
<bnagy>	...
<AlecTaylor>	heydabop: How do I define constants that have value from an environment variable, or if that isn't set, then use a default?
<iankronquist>	"A new subrepository, go.sys, will be created.
<iankronquist>	Where do I find docs for that.
<mohae>	AlecTaylor: you also might find https://golang.org/ref/spec and https://golang.org/doc/effective_go.html helpful
<mohae>	AlecTaylor: you don't
<heydabop>	AlecTaylor: you don't
<mohae>	AlecTaylor: read the constants link
<mohae>	and the spec, etc
<hyphenated>	AlecTaylor: you define variables then don't change them
<mohae>	If the value comes from an env variable, how can it be a compile time constant?
<hyphenated>	or define variables and expose the values via functions
<AlecTaylor>	I'm thinking to use this instead: https://golang.org/pkg/flag/
<AlecTaylor>	And no consts
<bnagy>	iankronquist: maybe https://godoc.org/golang.org/x/sys/unix
<iankronquist>	bnagy: there we go, thanks
<hyphenated>	I think you should still read what go's constants are, so you understand the choices
<AlecTaylor>	mohae, hyphenated: That Github project that I'm working from, is it really bad, or should I work on it and try to improve?
*	AlecTaylor might write from scratch, just using the crypto/ssh library
<mohae>	AlecTaylor: given your questions and posted code, I'd work on learning Go first
<bnagy>	iankronquist: but if you have installed it locally the godoc thing still applies
<AlecTaylor>	https://github.com/YuriyNasretdinov/GoSSHa
<hyphenated>	AlecTaylor: what project? You should learn go, so you can judge the quality yourself
<iankronquist>	bnagy: thanks.
<hyphenated>	I will say "yes it's bad" simply from the clues in the URL
<heydabop>	AlecTaylor: i think you need to write a lot of your own code, do the go tour, and read effective go before you say someone elses code is bad...
<heydabop>	AlecTaylor: not in that order
<hyphenated>	oh.. it's a 'package main', so it kinda gets a pass
<AlecTaylor>	heydabop: My linters was complaining on that project quite a bit
<AlecTaylor>	*were
<heydabop>	AlecTaylor: your code won't even *compile*
<mohae>	linter doesn't matter if you don't know the language
<AlecTaylor>	Yeah, I know that, which is why I was posting here asking about it
<heydabop>	AlecTaylor: what i'm saying is don't try to shortcut. do the go tour and read effective go
<mohae>	AlecTaylor: what exactly is your goal?
<heydabop>	much better than just diving into coding
<heydabop>	you're going to find out that Go is not C++
<hyphenated>	you seem to be learning via trying everything then determining which mistakes you make. that's likely to teach you how to make bad things compile and run, rather than how to write good things
<AlecTaylor>	Is there a good book instead? - Like maybe a textbook?
<heydabop>	^
<heydabop>	AlecTaylor: do the go tour
<heydabop>	AlecTaylor: seriously
<mohae>	but, it does seem to be a common methedology
<mohae>	AlecTaylor: no, you have been directed multiple times to the good resources
<heydabop>	AlecTaylor:  https://tour.golang.org/welcome/1
<_cb>	and all the posers come out of the wood work
<heydabop>	AlecTaylor: and then, refer to the effective Go page, and the reference
<hyphenated>	mohae: common, with this outcome.. http://xkcd.com/1513/
<heydabop>	AlecTaylor: the Go tour will start you off much better than any book
<mohae>	the scary thing to think about is that this methedology gets applied to dynamic languages that won't complain about being abused
<AlecTaylor>	This looks shiny: http://miek.nl/downloads/2015/go.pdf
<mohae>	ooh no errors, it must be working!
*	AlecTaylor found on http://dave.cheney.net/resources-for-new-go-programmers
<heydabop>	AlecTaylor: holy shit man
<heydabop>	AlecTaylor: do the Go tour, please, it is the best way to get started with Go
<mohae>	let me ignore advice and go pick crap from a google search
<mohae>	hyphenated: heh, I like that one
<heydabop>	mohae: seriously. "hey anyone have any advice? oh you do, great, because I have my own advice and it's better"
<mohae>	heydabop: even better, I don't have time for the tour so let me waste the rest of the day/week trying random things from the web
<heydabop>	a 112 page pdf *must* be faster than a interactive tutorial!
<mohae>	right, what would the Go team know about go anyways, Random from internet must be better.
<_cb>	AlecTaylor ignore the posers
<mohae>	blind leading the naked there
<heydabop>	23:55 < _cb> np am a Go newbie
<heydabop>	alright then
<heydabop>	mohae: hahahaha, i like that
<_cb>	heydabop, moahe a newbie not a poser
<hyphenated>	I just remind myself that sturgeon's law applies to people too, and that it's not even worth a facepalm moment
<heydabop>	_cb: your last 3 statements have had the word "poser", well done
<_cb>	Posers don't answer questions. They get on high horses and give 'advise'
<heydabop>	_cb: i answered literally every question he asked
<heydabop>	and then directed him to help, so he could answer more questions later
<_cb>	Google this, google that, do the tour, read the docs. Jeez.
<heydabop>	_cb: i never told him to google anything
<mohae>	_cb doesn't like me because I told him his ideas and desire for "securing" weak passwords were stupid and dangerous
<_cb>	You told him to do the tour. Oh wow takes a genious to recommend that
<heydabop>	_cb: i also solved his compilation errors, and told him why they wouldnt work
<heydabop>	_cb: then, to prevent him from running into the same issue, i guided him to ways to teach himself
<heydabop>	_cb: becasue a programmer who cant teach himself and cant answer many of his own questions is fucking worthless
<heydabop>	_cb: you can either direct someone to a method to teach themselves a language properly, or sit here for hours, solve their questions, and get them to a state where they can do nothing but write code that compiles and runs by a miracle
<mohae>	autodidasm is a good thing
<heydabop>	_cb: meanwhile they have no idea what they're actually doing
<heydabop>	mohae++
<_cb>	heydabop you are a poser. Sorry
<heydabop>	_cb: ahahaha, i really dont think you know what that means
<heydabop>	i guess i should go tell my boss im a poser and need to be fired
<mohae>	heydabop: you'll get a raise out of it if you do it right
<the_last>	guys, is this valid? Data [][]string[]map[string][][]Fee
<heydabop>	mohae: maybe if i pose just right ;)
<mohae>	um, that's called vogueing :)
<_cb>	Ok posers can you answer the_last question?
<_cb>	And by posers I mean mohae and heydabop
<hyphenated>	the_last: no, but even if it were, it'd be a sign of insanity
<the_last>	hahaha
<mohae>	indeed, that is insanity
<mohae>	what are you trying to accomplish?
<the_last>	the most convulated thing imaginable
<the_last>	convoluted too
<mohae>	that's not much of an answer
<hyphenated>	the_last: with a specific purpose or goal?
<the_last>	nah not really, my friend is doing Data []map[string][][]Fee and it hurt my face
<hyphenated>	if you take out the first 'string', it's valid
<mohae>	well, that's a slice of a map[string][][]Fee where Fee is a d2 array
<mohae>	that seems a bit more sane the_last ;)
<the_last>	yeah, not as bad
<mohae>	note, I didn't say sane
<the_last>	i just want heads to explode, that's all
<heydabop>	it kinda hurt my eyes
<mohae>	the_last: well, the 2d string slice is what made yours not work
<mohae>	heydabop: not bad for a poser, huh? ;)
<mohae>	heydabop: btw, I realize you weren't calling me that, it's just more fun to joke with you about that instead
<_cb>	the_last Data [][]string[]map[string][][]Fee is not legit but type Data [][]string; type x []map[string][][]Data is
<the_last>	_cb that'd be equivalent to: type x []map[string][][][][]string yeah?
<mohae>	rofl
<mohae>	or at least I hope that was a joke the_last
<_cb>	the_last you don't have Fee defined and thus can't solve the original question.
<the_last>	mohae: no joke, i just suck :D
<the_last>	< is learning Go
<heydabop>	mohae: oh i know :P
<_cb>	moahe it is a joke. Want to guess on who?
<heydabop>	mohae: i was about to ask you to stop being a poser
<heydabop>	mohae: how dare you answer a question
<mohae>	the_last: ok, since it isn't, what are you trying to accomplish here, since you didn't state when asked prior.
<mohae>	the_last: but the two are not equivelant
<_cb>	mohae the_last is experimenting with the language. Trying to understand what it does. So am I
<the_last>	what _cb said
<mohae>	the_last: I was just trying to understand why you wanted a 4d slice
<the_last>	because the fourth dimension is awesome
<mohae>	the_last: no arguments
<_cb>	like :)
<hyphenated>	it gets old quickly
<heydabop>	hyphenated++
<mohae>	it's relative
<_cb>	What gets old?
<heydabop>	*whoooosh*
<mohae>	whoosh
<the_last>	dinosaurs are pretty old
<Freman>	if I want to accept a string or an object I have to set the param to interface and switch later right?
<mohae>	yes, then assert accordingly
<_cb>	was I wrong about mohae?
<_cb>	mohae who are you and what did you do with the poser?
<heydabop>	who wouldve guessed that the new guy to the channel and language would be wrong about someone else in the channel
<_cb>	I am pretty sure I am right about heydabop
<Freman>	is it possible to implement the 'ok' feature? ie: foo, ok := amap["string"] && foo := amap["string"] (ie: make the second response value optional?)
<heydabop>	Freman: you could probably take the err approach
<heydabop>	Freman: which would basically be doing that
<Freman>	if I do that it complains about calling a multi-return func when I don't list all the responses
<heydabop>	Freman: however iirc, you'd have to do foo, _ := to explicitely ignore the second return value
<Freman>	yeh zacery
<mohae>	I wouldn't combine them
<mohae>	makes it less readable
<Freman>	no, I was trying to set up a "get" function that took an interface, queried the set by object.ID or id (passed as string)
<heydabop>	Freman: it would probably be better to just have two functions, one to take a string and one to take an int
<mohae>	since that get function is getting an interface, check the interface's type and assert from there, if this is a continuation of your priior question
<heydabop>	whoever is using it should likely know whether they have a string or an int anyway
<mohae>	right, heydabop's suggestion is better
<heydabop>	Freman: if im understand your goal correctly
<mohae>	like how strconv doesn't have an Interfacetoa function, but instead has type specific ones
<mohae>	err missed a , there
<_cb>	Freman it should be foo, ok := x, y. Am a Go newbie and may be wrong about this but don't think in this context the second return can be optional because ok has to resolve to somethign
<context>	it can be ok (or anything really) or _ if you 'dont care' about it
<mohae>	I prefer copacetic myself
<context>	hahahha
<Freman>	http://play.golang.org/p/4_ZNjrIn8e
<_cb>	I think if you have x,y := a you will get an assignment count mismatch: 2 = 1 even if y is _
<context>	my first guess is panic() doesn't take printf style params
<Freman>	yeh probably - I've clearly not executed it :D
<heydabop>	Freman: i still think you should have to get functions
<Freman>	I'm just trying to convert my scratch pad of "hey, I wrote this and it works" to something nicer to work with
<context>	then you need to fist-face
<Freman>	haydaboop this is actually 3 get functions and 3 has functions
<heydabop>	Freman: one takes a ImageTreeItem, and one takes a string. make the user convert a []byte to a string. and you have a map for the other conversion
<heydabop>	Freman: also, you should really learn more about the language instead of just writing something without really understand how it works
<heydabop>	are you coming from C/C++?
<context>	freman: most people put default at the bottom cause its a "catch all"
<Freman>	I'm coming from all the languages, mostly perl. I've been putting default at the top ever since reading effective go :P
<context>	also..
<context>	freman: if you want help, you dont paste code without running it
<context>	and especially dont paste code like:
<context>	panic("I don't know what to do with type %T", t)then
<heydabop>	just because Go looks like other languages, doesn't mean it works like other languages
<Freman>	I ran it through "format" - you don't want to see the hacky mess I was originally working with
<heydabop>	active poser mode!
<heydabop>	Freman: have you looked at the Go tour?
<Freman>	yes
<heydabop>	Freman: it'll probably start out more basic than youll want
<heydabop>	finished it?
<Freman>	yes
<context>	)then .... wtf is that ?
<_cb>	poser alert not that much work to tke the %t out and add a main
<context>	what other languages do you do that in?
<heydabop>	_cb: the code is much farther from working than that....
<_cb>	http://play.golang.org/p/JijuhKYT-V that runs without erros
<context>	freman: http://www.amazon.com/Introduction-Programming-Go-Caleb-Doxsey/dp/1478355824/ref=sr_1_4?ie=UTF8&qid=1430373501&sr=8-4&keywords=golang
<Freman>	I don't kwow what you mean ")then"
<heydabop>	_cb: well not shit, because nothing fucking runs
<context>	freman: http://www.amazon.com/Go-Programming-Blueprints-Mat-Ryer/dp/1783988029/ref=sr_1_1?ie=UTF8&qid=1430373501&sr=8-1&keywords=golang
<context>	read those.
<heydabop>	s/not/no/
<heydabop>	Freman: wait, didnt you say you had 3 get functions?
<context>	and whatever you do, do NOT read 'Mastering Concurrency in Go'
<heydabop>	context: yea, there's no "then" in his code...
<context>	oops :x i must have typed that in there before switching windows
<context>	also, perl doesnt relate to ANY other language. you're better off forgetting perl forever (<- bias cause i know more then just perl)
<context>	:p
<Freman>	I know much more than perl. perl, java, python, php, delphi, javascript, enough c to give myself a bloody nose...
<mohae>	well perl code is like snowflakes and the language itself is a snowflake
<context>	but i DO give perl props. it is infact better than one other language. but that language was originally written in perl so it was screwed from the start
<heydabop>	Freman: i recommend this http://play.golang.org/p/DxKeVAGuQG
<mohae>	_cb: the compile error is obvious, but that's not the point of the discussion. Getting something to compile w/o an error is not always meaningful
<heydabop>	mohae: what would you know, fucking poser
<mohae>	sorry I forgot
<context>	hahaha.
<heydabop>	Freman: or, have a function to get a ImageTreeItem by ID, and then make GetChild and HasChild only take *ImageTreeItem
<mohae>	the interface{} route along with a single function is a road to pain
<mohae>	and people using your package will thank you for having the type specific functions to call instead
<context>	i think the general consensus is "avoid interface{}"
<mohae>	well the tendency to lean towards interface{} as a solution for not having separate function betrays a strong dynamic background, imo
<context>	interface{} is like a regex. the fix everything, but very rarely are they the proper solution
<mohae>	and like regex, now you haven 2 problems
<context>	;)
<mohae>	if you're lucky
<context>	but if you want dynamic then dont use Go
<Freman>	https://github.com/freman/wharfie - I have done other go things, I'm just trying to work out the limit of what's tolerated in the way of 'smart' :D
<mohae>	KISS prinicple is best
<mohae>	worst case: only as complicated as necessary
<heydabop>	Freman: don't convert your users types for them :P
<Freman>	how about, ImageTreeItem.String() then just make one function that accepts string
<heydabop>	Freman: that would also work
<mohae>	if that fits your needs
<mohae>	unnecessary flexibility is the bane of good api design
<Freman>	that'd do for the most part - when printing I only care about the id, and when looking up I'm most likely to be using string or coming from []byte (in fact almost always []byte)
<context>	freman: then make the api firm... "ALWAYS []byte"
<heydabop>	then you could instead have the function take []byte if that works better
<mohae>	if it's going to be from []byte, then do that
<mohae>	less allocations
<heydabop>	mohae: "api". geez man the hardcore poser is showing
<mohae>	I know, I can't help it. I was born that way
<mohae>	but my momma still loves me, or at least that's what she tells me
<heydabop>	#fabulous
<heydabop>	lol
<context>	as for wharfie, should that 'layer' be a volume?
<mohae>	docker, should have guessed
<mohae>	but layer is a container term
<context>	RUN echo | tail | cat ?
<context>	thats convoluted as all hell
<mohae>	I liked docker's original 42 limit'
<context>	err sorry
<context>	RUN echo | nc | tail | bash
<context>	even more convoluted
<context>	curl | bash
<Freman>	yeh convoluted because ubuntu base image doesn't have wget or curl
<context>	also, how does that work? you echo "GET .." | .......
<mohae>	add it to the base image
<mohae>	or is that out of your control?
<heydabop>	mohae: lol, i think that's beyond his control
<mohae>	heydabop: oic
<context>	oh nm....
<context>	so make a layer with curl ...
<Freman>	that's just the example for others using it "from ubuntu" internally we have a stack
<mohae>	I was just thinking createa layer with the stuff needed
<mohae>	ya
<heydabop>	also why the hell does it not have wget or curl...
<context>	S stands for Simple. not Stupid
<mohae>	because ubuntu
<heydabop>	touche
<mohae>	they probably are in the process of writing their own replacement for those
<Freman>	all our env is built from stack:latest which has everything most apps need
<Freman>	just some of our apps are huge which
<context>	they probably think "they" are not using docker to create an entire vm
<mohae>	Freman: can't you add your own layer(s)
<Freman>	stack is our layer on ubuntu
<context>	huge will be huge...
<mohae>	Freman: do you use any automation tools?
<mohae>	e.g. Chef, Puppet, Salt, etc.
<Freman>	nope, just what we wrote :D
<context>	docker, maybe fig?
<mohae>	well, I'd still use a automation tool to config docker to what was needed for my app deployments
<Freman>	most of it is managed by our deployer, and deployments are usually "git clone, set $x $y $x, docker build, docker push"
<mohae>	but I'm kind of crazy that way, I did write a tool to automate creation of packer templates too
<context>	i wouldn't. chef/puppet/etc is bring an elephant to a chicken fight
<Freman>	we have a fairly automated build already, stack takes 40 minutes to build, but usually only one command to do so
<context>	docker is automation.. but not in the same way as chef/puppet
<mohae>	not really, even with docker, something to manage the configuration of the various layers is useful.
<Freman>	anyway, I have to get, thanks for the input - I will aim for simpler :D
<context>	there was a fork in the road.. docker is one way, chef/puppet/etc is the other
<mohae>	context: right, and it's common to use other tools in conjunction with docker because complexity is complex
<mohae>	context: not really, you just rely less on those tools
<mohae>	unless your docker images will never change
<context>	then you just have two tools to manage
<Freman>	we use docker on coreos with 90+ nodes btw, so docker is kinda a requirement (I know about rkt it didn't exist - lots of things didn't exist), because we rarely touch the stack layer we didn't see the point to much more than shell scripts for automating it's construction
<mohae>	how do you like coreos?
<mohae>	Freman: ya rkt is more recent, the intent is good but who knows what will happen there
<context>	ive played with but id love knowledge of use in a real prod environment
<Freman>	we've had no real issues with it, early teething problems and a lot of custom hackery later...
<Freman>	but does what it says on the box
<context>	its easy to say "yeah use etcd for discovery" but is it 'that easy; ?
<Freman>	yes and no
<mohae>	well, is discovery really that easy?
<Freman>	discovery was always easy - once we started using confd to do it
<Freman>	and beacon to announce (beacon listens to docker on every machine and tells etcd what's started up)
<context>	ahh ok
<Freman>	the way it is in the documentation? that's a lot of work :D
<Freman>	I'll be back in an hour if you'd like more info :D
*	Freman lets the channel get back on topic
<context>	i have a fig (docker-compose) with nginx-proxy that works with docker events but havent had a chance to see how it actually works
*	a13x is now known as alexyzzz
<the_last>	gonuts is doughnuts.
<context>	cause "gonuts is krispy kreme" doesnt roll off the tongue
*	bigkevmc_ is now known as bigkevmcd
*	Doctor_ is now known as Guest78480
*	pjoe is now known as pjoe_dj
*	e-dard_afk is now known as e-dard
<__john_doe__>	hey guys, one general question, regarding go and restfull apis. Providing multilingual feedback is unnecessary complexity or something that should be implemented?
<hyphenated>	__john_doe__: both
<__john_doe__>	hyphenated: lol
<hyphenated>	it'd be "nice" if you could, but relatively tricky
<hyphenated>	you wouldn't want the paths to be language-dependent or the fields in the request/response, unless you're really ambitious. data and error messages could be, but deciding the language would be a trick, as well as deciding a suitable way to map your messages to a translated result
<distorce>	would someone mind sanity checking this map setting method ? http://play.golang.org/p/4v7fNEYZSY
<KettleCookedDude>	If I close a buffered channel, I can still read from it, right? Assuming it has data.
*	balboah_ is now known as balboah
<dmac>	distorce: what are you wondering about? the map zero value is nil, so it panics when you assign to it.
<distorce>	dmac: how should I be doing it ?
<distorce>	if thats not the correct way
<dmac>	distorce: you'll need to initialize the map first with make()
<dmac>	https://play.golang.org/p/uDTAoVNywn
<distorce>	dmac: thanks ! let me take a look over that and try and understand better
<dmac>	distorce: alternatively, https://play.golang.org/p/mCpi1q3g5a
<distorce>	dmac: could you put make in the struct ?
<distorce>	or thats just for saying there will be a map here
<distorce>	will be a map in this struct *
<dmac>	you mean in the struct definition?
<distorce>	dmac: yes
<dmac>	no, you can't put make there
<dmac>	if you have a struct that requires some initialization, typically you'd make a NewTags() function to create and return an initialized Tags
<Furao>	http://play.golang.org/p/R0XRmZPrU2  why I can’t use reflect like that to get the type name of the child struct?
<distorce>	dmac: thanks for the info
<distorce>	dmac: such a great help
<dmac>	you're welcome
<eatingthenight>	could you run this same command using pure go? mysql -h host -u user_name -pPassword database < file.sql > output.log
<dmac>	Furao: embedding doesn't work like that, really
<dmac>	Parent doesn't know that it is embedded in Child
<Furao>	ah :(
<Furao>	spoiled by python
<dmac>	Furao: https://stackoverflow.com/questions/22153269/how-to-reflect-fields-of-containing-struct-from-a-method-of-the-embedded-struct
<dmac>	Furao: https://play.golang.org/p/cvZYm0XB8S
<dmac>	that's as close as you can get, but it's abnormal in Go and there's going to be a better way to solve the problem
<dmac>	eatingthenight: you would use https://golang.org/pkg/os/exec/#Cmd and set its stdin/stdout
<eatingthenight>	dmac: thanks! i t hough i would have to resort to an the os package
<__john_doe__>	hyphenated: yes I know that... guess Ill have to assume that all developers can read english lol
*	alexyzzz is now known as a13x
*	omnivibe_ is now known as omnivibe
*	balboah_ is now known as balboah
*	balboah_ is now known as balboah
*	Temur is now known as Guest22583
*	Guest22583 is now known as kaplan
<maze>	good day, can somebody give me some pointers how to efficiently base36 encode a big.Int?
<bnagy>	maze: use bi.Bytes() and encode that
<bnagy>	I've never heard of base36 though, but maybe I was just a sheltered child
<nalum>	hello all, I'm wondering how to handle a error loading a config file. The app can get it's config from a file and/or environment variables, the environment variable override the config file values. If the config file loads but then fails to unmarshal should I return an error or allow the environment variables to be read?
<bnagy>	I'd warn at most, if env trumps file and env has valid config then yay
<maze>	bnagy, nothing fancy, just 0-9+a-z
<nalum>	bnagy: so just an additional log entry, thanks
<bnagy>	nalum: that's just, like, my opinion though
<bnagy>	personally I wouldn't have things that ambiguous
<bnagy>	like -config filename would be use a config file or die, otherwise just use env
<bnagy>	maze: k, well assuming you have an encoder, just get the Bytes() or your big.Int and you're all good
*	wlll_ is now known as wlll
<nalum>	bnagy: Okay, I wasn't too sure on how to approach this aspect of it anyway. I've seen other allow for both and having the environment override the file. But maybe having it defined as one or the other is better. Will have to think on it some more
<techgrin>	In this example, why do they do `p=new(int)`? https://gist.github.com/insanity54/c99921bebde702557b8f
<maze>	bnagy, gotcha, works well, thanks!
*	kaplan is now known as temur
<__john_doe__>	can anyone recommend good and efficient library for converting html to pdf?
<HollyRain>	how to cast  []interface{} to []string ?
<pmezard>	loop and append
<unga>	gohpers, I seem not be able to understand go docs. In which order are select case exectuted ?
<unga>	see f.ex https://gist.github.com/giulioungaretti/3592272d8f8960aeb4d7
<pmezard>	unga: this doc
<pmezard>	duh
<pmezard>	https://golang.org/ref/spec#Select_statements
<pmezard>	?
<unga>	yea,
<unga>	 point number 2
<unga>	means that if they both are good to go, one of the many possible cases will be selected randomly ?
<pmezard>	yes
<unga>	pmezard: so in this example: https://blog.golang.org/pipelines/bounded.go
<unga>	the function digester may return instead of sending the result if both channels are opened?
<pmezard>	if done is closed, yes
<pmezard>	otherwise, you cannot receive from "done" so it is not executed
<unga>	pmezard: yes, but what if it's open?
<unga>	pmezard: right, right. Now I get it
<unga>	and in that case it will block, untill it can recive (i.e. never) or when done is cloesed. Right pmezard ?
<pmezard>	right, because you can always receive from a closed channel
<unga>	pmezard: awsome!
<r00trunner>	should we prefer if x = n; x < lim { over x = n if x < lim { ?
<rogpeppe>	r00trunner: i'd prefer: if x := n; x < lim {
<rogpeppe>	r00trunner: when possible
<rogpeppe>	r00trunner: but if you want the side effect, i'd do x = n; if x < lim
<r00trunner>	rogpeppe: thx
<ebonics>	can someone tell me why when i call Connect and Close from another package it seems that Close gets called first? it's something to do with goroutines i'm sure but i don't understand where they came from https://dpaste.de/Xkom
<ebonics>	nvm i fixed it my design was horrible
<ebonics>	<-- noob
*	Temur is now known as Guest27986
<slacktd>	Hi, if you where to choose between doing RPC calls with the standard library net/rpc or using rabbitmq with the reply-back pattern (https://www.rabbitmq.com/tutorials/tutorial-six-python.html). Which one would you chose and why? For requests that don't need a response (such as sending an email) I already use RabbitMQ but for requests that need I response I am not quite sure to use net/rpc or rabbit.
<ebonics>	slacktd, just stick with it? you already know it plus why add more dependencies
*	acrocity_ is now known as acrocity
*	Tarmashirin is now known as Temur
<slacktd>	ebonics: true that I already use rabbit and would not need net/rpc but am I missing something? In my thoughts it feels like doing a net/rpc call is faster but I don't know how it works when there gets alot of requets, if it buffers them somehow, how to scale it etc. With rabbit I can just add more workers to the que and know I will answer back faster, don't know how I would do that with net/rpc. Probably
<slacktd>	need to understand what it happening in the background when doing an RPC call
<Logie>	i like all of them
*	Guest63799 is now known as hartsocks
*	hartsocks is now known as Guest24829
*	zz_flazz is now known as flazz
<Tichodroma>	is http://www.golang-book.com/ still current?
<jayunit1000>	hi go.  I want to stream cmd.output stream to standard out in a go program as characters are being written.  any thoughts on the simplest way to do this?
<skelterjohn>	jayunit1000: cmd.Stdout = os.Stdout
<jayunit1000>	thanks skelterjohn !
<ebonics>	Process exited with: 1. Reason was:  ()
<skelterjohn>	sure thing!
<ebonics>	ok.png
<wunki>	I'm dealing with a JSON which a part of could be one of the structs I have defined. I know which struct it should be by looking at a different key (type). Would there be a way to automate this, without a large if/else statement?
<wunki>	I was thinking of a map[string]type but you can't point to a type
<hfaafb>	wunki: i've had to deal with this problem before, i was recommended to defer decoding with *json.RawMessage and switch on the deciding key
<hfaafb>	i believe you could technically use reflect to point strings to types
<hfaafb>	you could use map[string]func to handle the *json.RawMessage
<hfaafb>	so little functions that handle the message depending on the deciding field
<wunki>	hfaafb: thanks! Looking into it
*	Matt3o12_ is now known as Matt3o12
<wunki>	hfaafb: you meant this right: http://golang.org/pkg/encoding/json/#RawMessage
<hfaafb>	yep
<bijan_>	Is it possible to post a map to a handler like in PHP? I mean like for example <input type="hidden" name="product-qty[1]" value="2">
<bijan_>	I have a variable amount of hidden fields that shall contain the product id and the quantity
<bijan_>	What's the recommended way to do this?
*	flazz is now known as zz_flazz
<hfaafb>	bijan_: is it field[N] or field[]? golang doesn't automatically consolidate fieldName[] like PHP does
<swiper>	hi
<bijan_>	hfaafb: field[N] where N is the product id
<hfaafb>	they should show up as form fields, but you'll have to iterate them manually
<hfaafb>	you'll probably use ParseForm
<bijan_>	hfaafb: okay so I have to iterate over all form values because they are not gathered in a map?
<hfaafb>	http://golang.org/pkg/net/http/#Request.ParseForm
<hfaafb>	they're not gathered in a map automatically by net/http, no
<bijan_>	hfaafb: okay I thought that I might be missing something
<hfaafb>	https://groups.google.com/forum/#!topic/golang-nuts/NCwrkpyc6L8
<swiper>	hi is this go ?
<Moter8>	swiper, yup!
<bijan_>	hfaafb: yeah yeah I know how to iterate over them. I just thought that there might be a trick to gather variables in a sub map
<bijan_>	:)
<Moter8>	swiper, welcome to #go-nuts :)
<swiper>	go language or go game ?
<bijan_>	hfaafb: thx btw
<Moter8>	go language!
<swiper>	k
<swiper>	hi i was considering which language to learn for data analysis is it go or python or R just checking out on this
*	zz_flazz is now known as flazz
<cylon512>	in case of statistics maybe R nice option, in case of large set of data, due to high performance go can be a really good option @ swiper
<cylon512>	python really nice language as well, however it's slower comparing to go , however if you do use python compiler, maybe it' acceptable as well
<deldotbat>	did you try rewriting it in php7?
<marcop>	python is poopy
<swiper>	lot of other says python since you can learn alot faster than  R <same effort>
<cylon512>	actually there is not much effort to learn go as well, it's language with low entry requirement
<nucular_>	]
<skelterjohn>	cylon512: i dunno, for some reason it takes people a bit to get the hang of how interfaces work
<skelterjohn>	cylon512: lots of people think they can treat them like reference types
<ebonics>	skelterjohn, can you tell me how you would call this method for example: https://godoc.org/golang.org/x/crypto/ssh#Config.SetDefaults
<ebonics>	i know you don't have to, but as an example
<skelterjohn>	ebonics: var c ssh.Config; c.SetDefaults()
<ebonics>	that didn't work
<skelterjohn>	ebonics: but i feel like you have a "true" question buried under there somewhere
<skelterjohn>	ebonics: show me code that doesn't compile
<skelterjohn>	or if that's not what you mean by "didn't work", tell me what you expected to happen that didn't happen
<ebonics>	1 sec sorry
<ebonics>	i think my ide is trolling me
<ebonics>	nevermind skelterjohn i'm an idiot.
<r00trunner>	what is the difference between uintptr and *uint?
<skelterjohn>	ebonics: it happens
<ebonics>	i had it right but for some reason my IDE was highlighting it
<ebonics>	i thought there was some special property about that method i didnt understand
<skelterjohn>	r00trunner: uintptr doesn't mean a ptr to a uint
<skelterjohn>	r00trunner: it means using a uint to hold a pointer
<hfaafb>	my genitals are bleeding rm
<hfaafb>	oops
<hfaafb>	wrong channel
<Inflatablewoman>	Anyone know of a good golang lib for ceph?  All the ones I have found wrap the c lib.
<skelterjohn>	hfaafb: n1
<K0nserv->	I have a problem, I am trying to do value.([]byte), but I get an error complaining about `use of package bytes without selector`
*	flazz is now known as zz_flazz
<K0nserv->	Anyone have any ideas on how to get around that?
<mohae>	don't type bytes
<skelterjohn>	K0nserv-: you sure you didn't write value.([]bytes)?
<K0nserv->	Nope it's []byte
<mohae>	look at the line number
<skelterjohn>	K0nserv-: pastebin the file, or the piece of the file with the problem
<hfaafb>	you have bytes somewhere
<K0nserv->	Actually it might have been that
<skelterjohn>	:)
<K0nserv->	Thanks
*	zz_flazz is now known as flazz
<cylon512>	skelterjohn: yes, maybe, however if person read the documentation and understand what is written there , many confusion waved , of course different language background can lead to "confusing" approach
<skelterjohn>	cylon512: i basically never expect anyone to ever read any documentation
<skelterjohn>	but especially with interfaces, people think of the other interfaces they know: those from java
<skelterjohn>	which (like everything in java) are references
<skelterjohn>	i've even had more experienced gophers argue about interfaces and value semantics vs reference semantics (they have value semantics)
<r00trunner>	skelterjohn: but *int means a pointer to an int right?
<skelterjohn>	r00trunner: certainly
<cylon512>	however, it's explicitly stated in all books, for those who do learn Go to wave "other language" approach, explicitly object oriented, like java for example
<skelterjohn>	*uint is a pointer to a uint. uintptr is a uint being used as a pointer.
<r00trunner>	skelterjohn: why do i even need a uintptr then?
<skelterjohn>	r00trunner: if you are doing fancy things with pointers, like arithmetic
<skelterjohn>	r00trunner: for pure go code you will never need uintptr
<r00trunner>	skelterjohn: aaah ok pointer arithmetic only works with uintptr, i see
<skelterjohn>	but if you ever interface with C, it can be useful
<r00trunner>	meaks sense
<r00trunner>	skelterjohn: cool, i like it
<skelterjohn>	:)
<r00trunner>	convention question: do you prefer x, y := 1, 2 over x := 1 \n y := 2?
<skelterjohn>	r00trunner: it really depends on what's going on
<skelterjohn>	r00trunner: but in general for syntactic things like that, if 'go fmt' doesn't fix it for you, it's fine
<Moter8>	I prefer two lines, but that is just my opinion
<r00trunner>	skelterjohn: what's your personal taste?
<skelterjohn>	as i said, it depends on what else is going on
<r00trunner>	skelterjohn: ok, i would logically group declarations
<skelterjohn>	for instance, if i have two indices into the same array, i and j, and i want them to start at the beginning and end, i wouldn't hesitate to do "i, j := 0, len(arr)"
<skelterjohn>	but there i and j are very closely tied together, and i never think of one without the other
<skelterjohn>	if instead they're indices into two different arrays, i'd probably do each on its own line, to follow how it's structured in my head
*	flazz is now known as zz_flazz
<r00trunner>	skelterjohn: good way
<momomomomo>	Just want to announce that yesterday we had our first Go + Rust joint meetup in MN; and it was really excellent. One of our presenters is working on Go/Rust interop, which is an interesting side project to tackle. I hadn’t looked at the runtime since ~1.2/1.3, but it’s inspired me to dig in and see what changes of Vyukov’s have gotten in...
<momomomomo>	if you’re in the MN area next month, we’re going to have another joint go/rust meetup
*	ChanServ gives voice to iant
<skelterjohn>	i can't remember
<skelterjohn>	which is MN?
<skelterjohn>	maine, minnesota, montana...
<momomomomo>	Minnesota
<freeze>	where in mn?
<momomomomo>	Minneapolis; downtown near hennepin & the light rail
<freeze>	nice. like 10 blocks from me lol
<momomomomo>	http://www.meetup.com/golangmn/
<skelterjohn>	freeze: well then you should definitely go!
<freeze>	yup
<skelterjohn>	i wonder if there will be one in nyc soon
<skelterjohn>	now that i do go for work i would probably go
<skelterjohn>	(had been python for the past two years)
<momomomomo>	skelterjohn: start one up?
<skelterjohn>	there is a meetup group, i send its organizers an email
<skelterjohn>	unfortunately my employer is a bit hostile to having that sort of event in the building
<skelterjohn>	as in, takes a lot of energy to organize
<momomomomo>	skelterjohn: I don’t host in my building
<momomomomo>	a really dope gopher volunteered to host and sponsor, so we lucked out
<skelterjohn>	momomomomo: i certainly don't want to go through the effort of renting space :) the best meetups are held by smaller companies
<momomomomo>	Yeah, we lucked out quite a bit; but you’d be surprised what sending an email like: http://www.meetup.com/golangmn/messages/boards/thread/46172282 can do to get volunteers/sponsors
<momomomomo>	skelterjohn: ^
<skelterjohn>	well, this is the one i sent a few minutes ago https://secure.meetup.com/messages/?convo_id=175178374426161152
<skelterjohn>	hmm, i wonder if you can see that
<skelterjohn>	probably not
<momomomomo>	skelterjohn: nope
<skelterjohn>	entire text is "anything coming up soon? I'd be happy to talk for 15-30."
<skelterjohn>	so, maybe that will work
<skelterjohn>	can always get chimeracoder to talk too, he'll talk about anything at any time for as long as you let him
<chimeracoder>	:X
<chimeracoder>	lmao
<momomomomo>	skelterjohn: bummer, if you get a response, offer to organize etc. or, offer to fork the group temporarily (which is usually a bad/sad event for most projects)
<rindvieh>	Spleak: you might want to take a look at https://github.com/constabulary/gb
<rindvieh>	http://go-talks.appspot.com/github.com/davecheney/presentations/reproducible-builds.slide#1
<skelterjohn>	rindvieh: no one of that name in here
<Tv`>	davecheney still needs to explain why exactly he wanted to reimplement the go tool
<rindvieh>	just saw that
<skelterjohn>	Tv`: because he got spoiled with the original gb, and wanted some of its goodness back
<skelterjohn>	i maintain that the go tool was a step down from the original gb ;)
<rindvieh>	skelterjohn: proves my inability to read the polari log
<Tv`>	skelterjohn: just saying, people are thinking constabulary/gb is vendoring while it's a lot more
<skelterjohn>	rindvieh: classic hijacking, but you might also consider checking out github.com/skelterjohn/wgo
<skelterjohn>	rindvieh: similar philosophy to constabulary/gb, different approach
<rindvieh>	skelterjohn: thy
<Tv`>	constabulary/gb has just huge amounts of code that make me wary
<skelterjohn>	frankly i think constabulary/gb is too ambitious
<chimeracoder>	skelterjohn: how was it a step down?
<r00trunner>	how can i use uintptr?
<skelterjohn>	chimeracoder: it lots workspaces and forced you to manage GOPATH yourself
<jmoiron>	with great care
<skelterjohn>	*it lost
<skelterjohn>	chimeracoder: i think the original gb was a bit before your time :s
<jmoiron>	maybe you can confirm/deny since you have more visibility into this
<jmoiron>	but my feeling from the Go tool is that it was designed very much for a pre-existing workflow
<jmoiron>	and not for a general one
<chimeracoder>	skelterjohn: yeah, that's why I asked, haha
<jmoiron>	basically, the one already in use at google
<skelterjohn>	chimeracoder: github.com/skelterjohn/go-gb
<jmoiron>	but i've no idea what that is, so it's just a guess
<chimeracoder>	oh, that's basd off the original, I see
<skelterjohn>	jmoiron: it's fairly compatible with the internal build workflow, yeah
<chimeracoder>	jmoiron: I think that's what Rob Pike explicitly said
<skelterjohn>	chimeracoder: my go-gb is the original, constabulary/gb is unrelated as far as code ancenstry
<jmoiron>	he probably did
<chimeracoder>	at one point - "we didn't think about vendoring, because this is how we do it at Google, and the go tool works that way"
<skelterjohn>	chimeracoder: but davecheney was one of the most enthusiastic users of my gb :) so there are some traces in there
<jmoiron>	i've yet to run into significant problems with Go dependency management that I feel have been addressed with other tools
<momomomomo>	I’m not familiar with most of the other options, but I’ve enjoyed using Nut
<skelterjohn>	jmoiron: that's wgo's approach - address it with another tool
<skelterjohn>	i also wrote that too.l
<momomomomo>	and also wondering why it wasn’t mentioned in davecheny’s talk
<skelterjohn>	momomomomo: because as Tv` hinted at, constabulary/gb is not actually focused on deps but on a workspace build system
<skelterjohn>	nut is a way to freeze deps by rehosting and rewriting import paths
<skelterjohn>	i don't like the "rewriting import paths" bit though
<jmoiron>	i still think people take on dependencies too lightly
<Tv`>	rewriting code is just silly
<skelterjohn>	wgo doesn't make you do it
<chimeracoder>	jmoiron: to be honest, I feel the same way - at the time I care about dependency managmeent, I usually want to containerize my application anyway
<chimeracoder>	I also usually have to worry about dependency management for other parts of the app (e.g. Javascript) long before I do for Go, which makes containerizatio necessary
<jmoiron>	without some kind of formal verification that exported behavior hasn't changed, version numbers are just a guess
<jmoiron>	and a misleading one
<Wessie>	I wish people just abandoned "go get" when they want the dependency management
<Tv`>	jmoiron: ooh are we ranting about semver? it ignores bug fixes.
<skelterjohn>	i think 'go get' is ok to use when you want to bring something in for the first time
<skelterjohn>	then freeze it (with 'wgo save'!)
<jmoiron>	Tv`: a lot of dep management systems seem to be based on it or at least its philosophy
<Tv`>	jmoiron: a lot of the people writing those for Go cargo culted bundler, npm, etc
<jmoiron>	anyway that's a bit of a distraction, workspace management is fine, but it seems pretty simple
<jmoiron>	Tv`: they are cargo culting weird stuff
<jmoiron>	those things exist because you need to distribute libraries with the code everywhere you intend to run it
<chimeracoder>	Tv`: I see no reason that version numbers can't be semantic, just like everything else - look at the web
<Tv`>	jmoiron: the essence of cargo culting is doing it without real understanding ;)
<jmoiron>	of course :)
<jmoiron>	chimeracoder: without a guarantee though what does is mean
<jmoiron>	s/is/it/
<Wessie>	I do wonder why dave abandoned `go build` and `go install` though, if you control the evocation of them their limitations are pretty moot
<chimeracoder>	jmoiron: I was just trolling :-S
<jmoiron>	ok sorry :)
*	danielfilho_ is now known as danielfilho
<Tv`>	Wessie: the slides have a tiny mention of "getting -tags right"
<Tv`>	Wessie: but he needs to write out the reasons
<Wessie>	what is wrong with -tags exactly? I don't believe I had any issues with it
<Tv`>	Wessie: my guess it, coordinating with -installsuffix
<Tv`>	or just rebuilding when tags change, or something
<Tv`>	keyword: guess
<Tv`>	(fwiw, -tags netgo -installsuffix netgo makes things easier to manage)
<Wessie>	seems a bit overkill to abandon everything and not just go get
<Tv`>	Wessie: totally unexpected from normally moderate seeming davecheney
<Wessie>	gb also seems to use different flags for things go build also does, that's going to be confusing at some point
<jmoiron>	you make it sound like davecheney is his golden age super hero alter ego
<Tv`>	jmoiron: underneath his shirt, there is a very colorful uniform with the "gb" logo?
<deldotbat>	anyone know a good free vps or secure cheap vps? non-us?
<Tv`>	deldotbat: https://i.imgur.com/02pCb8t.jpg
<deldotbat>	but i consider u guys smart so i ask in the right place :)
<Wessie>	You've retired the old one? a sad day
<deldotbat>	its like my one trick of 15 years of dev'ing :>
<deldotbat>	just ask programmers
<mousetrap>	What's wrong with AWS's free tier?
<deldotbat>	eh id rather host out of us b/c buttcoin
<deldotbat>	good idea tho ty
*	veonik_ is now known as veonik
<postitnote>	question: if I have several different routes that have duplicate code (for example, to get URL params) what options do I have to reduce duplication?
<Tv`>	functions
<hfaafb>	functions
<hfaafb>	oh
<hfaafb>	snappp
<Tv`>	high five
<bhenderson>	does make(map[string]string, 100) create 100 empty strings?
<Wessie>	it allocates 100 map buckets I presume
<bhenderson>	ok
<Wessie>	or well, 100 spots
<deldotbat>	postitnote: go is functional, just make some helper functions
<Tv`>	yeah most likely one bucket with 100 slots, at that point
<Tv`>	bhenderson: "create ... empty string" is confusing words
<Tv`>	bhenderson: that's like saying "create nil pointers"
<Tv`>	all that exists is the place to store it, when it later gets a real value
<Wessie>	so something like 200*stringHeaderSize
<postitnote>	deldotbat: so like a parseUrlParams function? is that the same as middleware?
<deldotbat>	yep
<deldotbat>	good idea to make your own middleware fncs also
<deldotbat>	but no middleware is usually called automatically (after you tell it to once) in between the route handler and the http reader, ie setmiddleware(checklogin).setmiddleware(getprofile)
<Tv`>	ruh roh
<Tv`>	you mean there's a thing that records what you tell it about the middleware, and then calls functions
<Tv`>	that doesn't make it any more automatic than anything else on a computer
<deldotbat>	bhenderson: no do it does not, fmt.Println(make(map[int]string,100)) prints []... so its just a 100 slot (capacity) map,
<hfaafb>	what is the problem encountered when assigning vars to url params?
<deldotbat>	theres a thing
<bhenderson>	deldotbat: great, thanks
<postitnote>	deldotbat ok that's what I was just going to ask. I'm ok to do it without middleware then or do you recommend putting these helper funcs into middleware?
<Tv`>	i'd call parseUrlParams inside the handler just because then you can assign the parsed data into a variable nicely
<deldotbat>	bhenderson: totally up to you, i usually dont unless im sure its not gonna need any further data from my req handler
<postitnote>	Tv` ok thank you. I'm not going to have the same number of params in each route. What would you return from the parseUrlParams func?
<postitnote>	Tv` I suppose the only option is a slice of strings
<msingle>	I'm new and thick headed, but am trying to pass a *bufio.Writer in to a function that uses *io.Writer -- what obvious way of handling this am I missing?
<deldotbat>	postitnote: im nuts so i return map[string]interface{}{...data...} :p
<Wessie>	msingle: you're using a pointer to an interface, use io.Writer
<deldotbat>	kind of like phps $_get
<postitnote>	deldotbat I'mnot sure if that's a joke or not
<deldotbat>	nope
<deldotbat>	haha
<postitnote>	ok, I'll play around with it
<Wessie>	I probably would go with a Scan like method for URL parsing myself
<Wessie>	I bet it exists already too
<msingle>	thanks!, Wessie
<ebonics>	is there a more er.. clean way of doing this: https://dpaste.de/1tvi
<Tv`>	ebonics: fmt.Println(resp)
<ebonics>	Tv`, ?
<Tv`>	the rest is a (broken) rube goldberg machine
<Tv`>	nothing in that example motivates any of the machinery
*	melonstorm is now known as illuminati
<ebonics>	i didn't post the full code
*	illuminati is now known as melonstorm
<ebonics>	i just want to know if that pattern can be reduced
<ebonics>	as i'm not too familiar with go's full range of language features
<deldotbat>	when someone defines a struct and then after the type they put `json:fieldname1` this is key-name for the js obj after marshalling and unmarshalling right?
<ebonics>	deldotbat, i think it's just meta data which can be used via reflection in any way you want
<siXy>	deldotbat: yes.  it's called a tag.
<siXy>	deldotbat: json uses it for field names, other packages use tags in other ways.
<deldotbat>	ok ty
<deldotbat>	has anyone done serializing / restoring of web app data and then had their data blow up or corrupt yet?
<Wessie>	ebonics: the example can be reduced to what Tv` said though, if you want actual suggestions actual code would be better to share
<deldotbat>	feeling like sql is too much pita atm
<dfinninger>	Hey all, I'm having some issues parsing json. Gist: https://gist.github.com/dfinninger/f24bfeb37d2635fb1cc9 <- this is the relevant code snippet
<mohae>	dfinninger: export your fields
<dfinninger>	I get the jsonStr that I am send to the server fine. And I get the htp response back intact as well
<dfinninger>	...
<dfinninger>	mohae: I'm still not getting a parsed response :/
<deldotbat>	ebonics: http://play.golang.org/p/xpQto_elyN
<deldotbat>	idk if it locks the cpu at 100% tho, i dont think it would but not sure
<dfinninger>	Respnse Body: {"response":"ok","id":"1430411126243186758"}
<dfinninger>	Parsed Body: &{Response: JobId:}
<lungaro>	I am having a text/template issue and am not sure why -- I can't get a template to execute from another -- http://play.golang.org/p/0n53lxLNSL
<lungaro>	the output from t2 is never rendered and no error occurs afaics
<lungaro>	i bet I know why, they're not globally scoped
<dfinninger>	mohae: I got it. I had an ioutil.ReadAll that was reading it before the JSON Decoder. I guess that was closing the readCloser
<deldotbat>	lungaro: http://play.golang.org/p/_4kX-TNsmo
<deldotbat>	idk how to do it with two templates
<lungaro>	i figured it out
<Cassyblanca>	Linode and DigitalOcean are my go-to companies.
<Cassyblanca>	I believe they have some non-U.S. server options, but I'm not entirely certain.
<Cassyblanca>	And, uh, you're basically not going to find a "free" VPS.
<Cassyblanca>	Depending on what you need, though, there are other options. For example, if you're just trying to host a simple blog website you might be able to get away with a free tier of Heroku, or as mousetrap mentioned AWS.
<deldotbat>	dont linode for business
<postitnote>	 here's my parseUrlParams func http://play.golang.org/p/UsJwLGHPli   which I have a question about. So, I'm creating a map in this func that I otherwise wouldn't have to create if I didn't have the parseUrlParams func. Do you normally consider the convenience of a helper function worth the extra allocations that come with creating a new object (a map). In this case, the consequence is negligible, just wondering in general terms
<deldotbat>	two bitcoin exchanges went under b/c someone rooted a whole linode data center to get them
<deldotbat>	like a thousand boxes to get one ^_^
<eatingthenight>	why would anyone use linode for something as valuable as a bitcoin exchange
<deldotbat>	they never even said after the first one or the 2nd one "well were gonna increase security"
<deldotbat>	yea lol
<jhowl>	rofl
<postitnote>	for example, if I just parsed the urls manually in each route without the helper, I'd never have to create the map that I do in parseUrlParams. Is it silly to worry about that stuff? (this is my first go program)
*	Tarmashirin is now known as Temur
<jhowl>	ive had good experiences with digitalocean, heard nothing but bad things about linode recently unfortunately
<jhowl>	that's definitely the worst i've heard
<deldotbat>	any idea where their datacenters r?
<jhowl>	if youre running a cryptocurrency exchange, cold storage or bust
<jhowl>	they have a few
<jhowl>	New York, SF, Amsterdam...
<jhowl>	there's more but I cant remember off the top of my head
<_1_John2>	I can
<postitnote>	Digital Ocean has gotten a bad rap for interpreting its terms of service regarding censorship https://vpsexperience.wordpress.com/2014/01/05/digital-ocean-threatened-to-shut-down-my-blog-if-i-didnt-remove-or-edit-a-blog-post/
<jhowl>	postitnote wtf
<jhowl>	didn't see that one coming
<deldotbat>	postitnote: looks fine, maps take more memory than arrays, but id guess 90% of frameworks out there are gonna use more memory than your map, so i wouldnt worry about it
*	generic_ is now known as shanse
*	zz_flazz is now known as flazz
<deldotbat>	postitnote: yea i remember reading that last year
<postitnote>	deldotbat: ok, thanks, so you regarding my question, you'd take the convenience of the helper function (with the increase memory of the map) rather than parsing the url manually each time?
<deldotbat>	postitnote: yea definitely
<postitnote>	deldotbat: ok, thank you
<_1_John2>	;)
<deldotbat>	interface can be a PITA tho
<postitnote>	deldotbat: I could probably do string string map, why did you suggest interface?
<deldotbat>	my proj was all custom typed
<deldotbat>	i did interface and json returns ;/
<postitnote>	ok, in my case, the only values that are being parsed are strings on a form submission
<deldotbat>	should be ez to work with then
<postitnote>	yup, just how I like it
<deldotbat>	until someone does a $('form').serialize().submit() and sends you ints over post ;D
<deldotbat>	 /msg #carderz send pizza now
<deldotbat>	oops
<jhowl>	haha
<deldotbat>	fk i want pizza
<jhowl>	me too
<deldotbat>	ya
<jhowl>	everyone wants pizza
<deldotbat>	did u know chinese put tuna fish on pizza
<deldotbat>	its like.. the most popular kind of pizza ...
<deldotbat>	>:/
<jhowl>	hahahaha what
<jhowl>	I'm trying to imagine what that would taste like and I'm failing
<deldotbat>	tastes like cat food man
<jhowl>	eh
<jhowl>	still better than having pineapple on a pizza
<heydabop>	tuna?!  http://abc7news.com/news/tuna-company-2-employees-charged-in-death-of-worker-in-oven/684362/
<ttke>	soylent tuna
<jhowl>	Tuna Thursdays in #go-nuts.
<deldotbat>	jesus lol
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Thu Apr 30 12:57:12 2015

**** BEGIN LOGGING AT Thu Apr 30 12:57:38 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<jhowl>	maybe they sold it to the chinese pizza companies
<deldotbat>	god no thx
<deldotbat>	i had some of that b4
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Thu Apr 30 13:13:58 2015

**** BEGIN LOGGING AT Mon May 04 23:44:46 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	[freenode-info] if you're at a conference and other people are having trouble connecting, please mention it to staff: http://freenode.net/faq.shtml#gettinghelp
<Quora>	also the standard of using
<Quora>	foo_buildtag.go
<Cassyblanca>	I wouldn't mind being able to separate things a little bit. This may be due to the fact that I only actually looked into Go starting last night, but being able to separate out my C files from my Go files (I was playing with writing bindings to some C libraries) would be nice.
<mohae>	Cassyblanca: separate how?
<flazz>	i did scala for a few years with a ton (likely proven countable-infinite) ways to organaize a package
<Cassyblanca>	Being able to store them in a sub-folder would seem a decent alternative to me. But again, maybe you _can_ do this - I haven't actually tried (hadn't thought about it until now).
<jmoiron>	you can't really
<mohae>	well sub-folder would be its own package
<jmoiron>	I wish the Go tool was able to cache objects it created with the C compiler
<Cassyblanca>	Like I said, I'd just like some alternative that would enable me to keep certain bits of C alongside the rest of the code in a module, but preferably separated a little. I'm not entirely certain what would be the cleanest way to operate
<jmoiron>	they are already separate files
<mohae>	Cassyblanca: you mean like this? https://github.com/cloudflare/golz4
<mohae>	the src dir has the c files
<mohae>	and jmoiron makes a good point
<mohae>	as usual
<jmoiron>	not sure that #include "src/lz4.c" works for larger projects
<Cassyblanca>	jmoiron: Yes, but having a large number side-by-side is hardly ideal.
<mohae>	jmoiron: I recently re-read your crossing streams post and I felt bad that I have places where I used ioutil.ReadAll
<mohae>	jmoiron: true, but it was just a small example
<jmoiron>	don't feel bad, i still do too :p
<jmoiron>	mohae: yeah, definitely.
<Cassyblanca>	Mind you, I imagine if you get to that point then there are better ways of structuring things in the first place.
<mohae>	jmoiron: my excuse is, but I know that will be a small file
<mohae>	lmao
<jmoiron>	the silly thing is there's rarely an excuse
<Cassyblanca>	So it may be kind of moot
<jmoiron>	the io.Reader interfaces are all easier to use
<mohae>	jmoiron: right, that's why I felt bad
<jmoiron>	my excuse btw is that i was using an API (database/sql) which needed a string anyway
<jmoiron>	Cassyblanca: i wrapped a decently large library and it was a bit weird to have a bunch of headers in my package but i got over it
<jmoiron>	the sqlite package supplies the C code in one dir
*	argv0 is now known as argv0-away
*	argv0-away is now known as argv0
*	cgrieger^away is now known as cgrieger
<djx>	what's the difference between making a := *new(A); a = A{} and a := A{}?
<djx>	being A a struct
<cespare>	the first one is pretty crazy
<cespare>	djx: it's like the difference between    a := 12345 * 234 - 35145; a = 3     and     a := 3
<cronos>	heh
<djx>	lol
<djx>	then I have no idea what the hell I'm doing wrong
<smw_>	djx, a := 3 vs a = 3    the first is a declaration
<djx>	smw_: I know the different between := and = but didn't know the different between := and "new"
<bnagy>	new is a syntax appendix that is designed to trick new users
<bnagy>	*statement may not contain 100% facts
<st33med>	new is all new
<smw_>	djx, new return a pointer to a zero value of the type
<smw_>	djx, that is all
<st33med>	Yep
<mohae>	djx: https://golang.org/doc/effective_go.html#allocation_new
<bnagy>	djx: imvho just use a:= &T{} and save your sanity
<st33med>	It'll make room for it on the heap, zero it, and that's it
<djx>	now, how about slices?
<mohae>	right, new is vestigial
<mohae>	djx: make
<djx>	a:=[]A{} makes sense?
<st33med>	djx, slices are basically a section of an array
<bnagy>	djx: sure
<st33med>	Yep
<mohae>	st33med: it'd be more accurate to say they are a window on a backing array
<st33med>	They are a window to my soul
<djx>	even if afterwards I try to do a = append(a,STUFF)
<bnagy>	well as long as STUFF is one or more As then yeah
<bnagy>	as opposed to eg one slice of As
<bnagy>	these and many more fascinating topics covered in the Tour of Go ;)
<st33med>	I like append. It gives an ArrayList functionality from Java right in the main library.
<mohae>	djx: you're better off using var mySlice []T or make
<djx>	I realized now that "make" allows 1, 2 or 3 parameters
<mohae>	djx: make([]T, len, cap)
<st33med>	djx, yes. second is size, 3 is capacity
<st33med>	What mohae said
<mohae>	but new([]T) will return a *[]T, which is why you are having problem with append
<st33med>	For chans, second is buffer, I don't know what the third would do
<djx>	mohae: http://golang.org/src/builtin/builtin.go?s=7091:7129#L172 only 2 parameters, not 3 :)
<mohae>	right, make parms depend on what you are making, I used slice because of djx's prior
<mohae>	djx: depends is the answer, for slice it's 3 and your prior question pertained to slice
<cronos>	djx: read package docs for that package ;)
<mohae>	djx: If you only use 2 parms for making a slice, you might be suprised at the results.
<djx>	cronos: mohae: nice...
<mohae>	bonus points for reading source though ;)
<bnagy>	personally I don't use make []T unless I'm using the params
<bnagy>	but I use it for maps
<jmoiron>	i use cap a lot
<jmoiron>	maybe too much
<mohae>	^
<mohae>	it's good for reducing allocs
<jmoiron>	sure is
<st33med>	Expanding your slice
<st33med>	Slice slice, baby
<pnsrc>	so, I've finished golang-book, it was good, except than the last chapter which overwhelmed me, what should I do next, I've been doing some projecteuler.net assignments
<mohae>	st33med: are you using Go in one of your classes?
<mohae>	pnsrc: tour.golang.org, the specs, effective go
<bnagy>	pnsrc: what was in the last chapter?
<st33med>	mohae, yep, for a project that the professor said I could do. It's either his assignment or one of my own
<bnagy>	work on that :)
<st33med>	And I chose to do an IRC chat bot
<st33med>	with concurrent plugins
<mohae>	st33med: cool
<pnsrc>	crypto, files, servers
<jmoiron>	pnsrc: what do you want to make?
<st33med>	You can do annnnnnnnnnnyyyyyyyttttttthiiiiiiiiiiiiiiinggggggggg
<pnsrc>	it didn't discuss them, it just had examples
<st33med>	What examples?
<jmoiron>	when i'm focused on an actual project, that's when i really learn
<st33med>	Which ones did you like that is
<adiabatic>	st33med: "the only limit is yourself"
<bnagy>	well don't write a PDF parser, that's my advice
<bnagy>	so anything but that
<st33med>	adiabatic, "the world is your oyster"
<st33med>	:D
<pnsrc>	jmoiron,  I want to learn go, I had some c++ background, but I wanted to relearn programming
<jmoiron>	pnsrc: you'll learn Go by building things in it
<cespare>	I need an io.Writer that only remembers the last N bytes (using a fixed size buffer). Does such a thing already exist?
<st33med>	pnsrc, programming is largely the same across all languages for the most part.
<st33med>	Just with different whistles and bells across every one
<st33med>	Different syntax
<pnsrc>	st33med, I know, the problem with my c++ background was that, I learned a language, not the concept
<st33med>	The major difference is imperative v functional only.
<bnagy>	I really don't agree with that :)
<st33med>	bnagy, fite me irl.
<mohae>	communication is the same across languages, it's just the alphabet, grammer, syntax, and idioms that change
<st33med>	Yep
<mohae>	oh and words
<st33med>	And speed
<flazz>	panics are always caught and reported by the runtime right?
<bnagy>	flazz: if by reported you mean 'it crashes' then yeah
<flazz>	yeah, but it also prints the stack traces of all goroutines too right?
<bnagy>	yep
<mohae>	but don't rely on panics
<st33med>	Stack traces are based god
<st33med>	I've programmed a lot in C for some of my classes and having to debug that with just 'Segmentation Fault' and GDB is a royal pain
<djx>	and it only took me one and a half hours to realize that I has "copying" a structure with = which I thought it was a bultin type
<djx>	i'm going to cry a little now
*	st33med pat pats djx 
<flazz>	thought so, why would you make a lib with an exported func that recovers, but panics nowhere?
<jmoiron>	recover in a library is generally a bad sign
<mohae>	so are panics
<flazz>	jmoiron: that is what my impression from effective go is
<st33med>	Don't Panic!
<st33med>	Pass errors
<st33med>	Also always bring a towel
<jmoiron>	panics are okay for "programmer error"
<edcarter>	anybody have an Idea why this is happening? "(type io.ReadCloser has no field or method Reader)". Reader is in the ReadCloser interface
<pnsrc>	https://play.golang.org/p/5lEsb5fE7r This is my prime number finder in go, horrible compared to gosieve, how is it for a beginner?
<pnsrc>	it has no concurrency,
<jmoiron>	interfaces are not structs
<quantalrabbit>	when i do a cmd.Run() I get an non-nil error when having this for cmd:  cmd := exec.Command("mysql", "-u", "sqluser", "test", "<", "data/test.sql") .  The file data/test.sql does exist and sqluser does not require a password.
<djx>	pnsrc: I'm not a go expert but can't you put the num % i that is on line 12, on line 13?
<jmoiron>	exec.Command doesn't do shell indirection
<bnagy>	pnsrc: uh.. does it work?
<pnsrc>	it gave the right prime
<bnagy>	cause it looks like you wanted to count primes up to 10001 but it outputs 104k
<djx>	bnagy: I just saw that too =\ yeah it doesn't sound good
<pnsrc>	djx, isn't it on line 13?
<pnsrc>	https://projecteuler.net/problem=7
<djx>	pnsrc: sorry, the on line 12 can't be on line 11
<djx>	it's 5:37 AM, I'm starting to lose vision by now :P
<bnagy>	pnsrc: ah, ok.
<quantalrabbit>	jmoiron: thanks
<pnsrc>	djx, do you mean I should lose the if?
<bnagy>	in that case your variable names are confusing :) I also wonder if you can re-use some of your work in isprime
<pnsrc>	bangy, djx, thanks
<bnagy>	but it's fiddly because you need to keep expanding your sieve
<bnagy>	pnsrc: https://github.com/golang/go/wiki/CodeReviewComments
<bnagy>	that has lots of general tips, like isPrime not isprime
<mohae>	and that if else can be rewritten to just be an if with early return
<bnagy>	dammit that's what I was about to say :D
<mohae>	and why reassign x to primenum?
<bnagy>	if else is actually a smell in go
<bnagy>	I'm sure it's right once in twenty, but usually when I write it I'm just Wrong
<mohae>	it's usually a sign you should rework your evaluation
<pnsrc>	I actually changed those (x and if) lat night and it worked, I didn't have the updated code with me now,
<mohae>	also don't need num := x, I also don't see the need for is there
<pnsrc>	thanks:) I'm reading it, btw, I'm using emacs with go, I've been advised to use liteide, should I do that?
<mohae>	emacs is fine
<mohae>	if you're an emacs person, I doubt you'll like liteide
<pnsrc>	thanks
<st33med>	I haven't touched emacs. I'm more of an IDE person, but prefer vim.
<bnagy>	pnsrc: https://play.golang.org/p/mZ0EI13UyP
<djx>	bnagy: I think that's what he's doing (your comment of line 14
<djx>	bnagy: the idea is there but yeah, i*i is bad :(
<bnagy>	djx: yes, that's what the code does. It's inefficient
<bnagy>	i*i is fine
<mohae>	pnsrc: https://play.golang.org/p/A_I-9hpdI1
<bnagy>	otherwise you'd have to mess around with math and converting to float
<bnagy>	mohae: your code sux I would have done it way differently
<mohae>	bnagy: ok, I was just cleaning up his code
<djx>	bnagy: but i*i is one multiplication per cycle, right? so I would do sqrt(x)+1
<mohae>	not actually writing my own
<bnagy>	mohae: ^^ basically exactly same https://play.golang.org/p/mZ0EI13UyP
<bnagy>	djx: that would work in another language
<bnagy>	that had a sqrt builtin
<djx>	bnagy: http://golang.org/pkg/math/#Sqrt
<bnagy>	12:46 < bnagy> otherwise you'd have to mess around with math and converting to float
<bnagy>	benchmark *shrug*
<pnsrc>	wow, I didn't know  I could put return in if, I typed that out, but then I went with the mess I wrote
<pnsrc>	thank you all so much:)
<bnagy>	honestly the main problem is checking all the odd non-primes instead of using a sieve
<djx>	bnagy: argh.. it costs more doing a multiplication per cycle or a float(stuff)?
<mohae>	bnagy: I missed moving the increment to the loop, d'oh!
<bnagy>	64 bit mult is very fast
<djx>	bnagy: but it is per cycle :-(
<mohae>	I'd multi it
<bnagy>	but I agree that doing it once per loop iteration isn't dreamy
<mohae>	right, my first thought when looking at it was damn that's expensive
<djx>	bnagy: can we make a bench test in goplay just to be clear? :-)
<bnagy>	djx: I don't know if play can run package testing?
<mohae>	djx: write it in your local so you can ensure you run the bench long enough to stabilize
<djx>	I don't know :\ I can try in my PC
<bnagy>	write two versions, then write a _test.go then put a bench function in it
<bnagy>	testing has native auto-tuning benchmarks
*	flazz is now known as zz_flazz
<bnagy>	you could always log search to find an i*i limit and then cache that
<bnagy>	but srsly how much do we want to bikeshed a naive isprime?
<mohae>	about as much as I actually did on the playground
<bnagy>	miller-rabin || gtfo
<scientes>	x/sys/unix doesn't work with gccgo
<mohae>	rofl, I was just thinking that you'd know a better algo w/o bikeshedding
<scientes>	gccgo 5
<scientes>	5.1*
<bnagy>	mohae: I think it's miller-rabin in stdlib anyway
<djx>	bnagy: =| sqrt has a low performance
<djx>	bnagy: you win this round :-)
<bnagy>	yeah, it is, but you have to pay the price of creating math.Big
<quantalrabbit>	here's my naive sieve:  https://play.golang.org/p/sH_n4WQ941
<mohae>	that's a package I haven't needed to use
<djx>	bnagy: I've to go, the sun is rising ;-)
<st33med>	Bikeshed sound familiar....
<st33med>	That's a lingo term
<mohae>	quantalrabbit: why a map?
<quantalrabbit>	mohae: to sieve with.
<quantalrabbit>	i didn't check what an upper bound should be for the nth prime so MAX is arbitrary.
<bnagy>	quantalrabbit: hm.. well it works :)
<bnagy>	ohh I see I missed the inner loop cause I was looking for multiplication
<bnagy>	derp. Nice. :)
<bnagy>	maybe you could invert your map logic and use struct{} instead, I think they're smaller than bools in memory
<mohae>	0 bytes
<pnsrc>	I'm currently on go-effective, is https://github.com/astaxie/build-web-application-with-golang/ a good resource to begin with?
<bnagy>	https://play.golang.org/p/Zl1BIe6fVR it's hell-ugly though :(
<mohae>	pnsrc: I'm repeating myself, but tour.golang.org, https://golang.org/ref/spec, and https://golang.org/doc/effective_go.html
<pnsrc>	I did tour.golang.org, and am reading effective_go
<quantalrabbit>	pnsrc: why not give exercism a try?
<pnsrc>	like this? https://github.com/karan/Projects
<mohae>	pnsrc: then it's a good time to pick something you would like to do and write it.
<mohae>	and did you do the web crawler?
<pnsrc>	no
<mohae>	one up st33med and write a chat bot with markov chains
<st33med>	wat?
<mohae>	;)
<st33med>	Well... I guess. I mean... Damn.
<st33med>	Work with Google if you do that. :P
<pnsrc>	It's a good idea
<mohae>	or find an open source project you'd like to contribute to
<pnsrc>	thanks
*	dabbad00__ is now known as dabbad00
*	ujjwalkanth4 is now known as pers3us
*	zz_r04r is now known as r04r
*	Guest18035 is now known as SvenDowideit
<badmadrad>	sup gophers. put together a simple tool for installing go cross platform. not sure how useful it will be for everyone but if you are interested:
<badmadrad>	https://github.com/badmadrad/gophrz
*	badon_ is now known as badon
<st33med>	Ohey
<eatingthenight>	any ideas why bufio.ReadLine would all of a sudden start returning empty slices :<
<eatingthenight>	nevermind was being stupid :< ugh
<hyphenated>	that's the usual cause.. ;-)
<robot-beethoven>	does anyone know of a good article for non-programmers that concisely explains the importance and need of testing in software development?
<vegai>	manual testing / automatic testing / unit testing? :)
<robot-beethoven>	whichever could convince a client not to do development on a production server
<vegai>	well, any sufficiently large book will do in that case :P
<vegai>	hardcover, preferably
<vegai>	more seriously, perhaps some of the classic XP articles
<badbugz>	A code tester walks into a bar. Orders a beer. Orders ten beers. Orders 2.15 billion beers. Orders -1 beers. Orders a nothing. Orders a cat. Tries to leave without paying.
<badbugz>	robot-beethoven: just regurgitate https://www.reddit.com/r/Jokes/comments/2m1b9b/a_code_tester_walks_into_a_bar_orders_a_beer/ to your client
<badbugz>	as many other do
*	veonik is now known as veonik_
<robot-beethoven>	i've been getting the impression that some people without programming experience have the following logic:  programmer says his programs need testing, therefore programmer makes mistakes, therefore programmer is not a good programmer
<badbugz>	robot-beethoven: it's those suit types mate!
<badbugz>	no actually fuck them
<robot-beethoven>	they have a single production server (developed in house), and want me to develop REST clients for it, but without any testing against the server, since the only instance of the server is THE server (and i can't have the source to run my own instance)
<robot-beethoven>	i've been trying to calmly explain that this is not possible (at least, if you want it to work)
<badbugz>	just ask them to give you their production server snapshot.. is the REST service's spec available?
<robot-beethoven>	they gave me a spec
<robot-beethoven>	unfortunately, the people i get to deal with directly have no understanding of computers
<badbugz>	yeah happens
<robot-beethoven>	i think they contracted someone to write their server a while ago, and that person is long gone
<badbugz>	ahhh
<robot-beethoven>	but i don't want to enter into some giant mess, and then get blamed for it
<badbugz>	if they can't give you the snapshot, just write it to the spec
<badbugz>	and test it accordingly... i gtg
<tucnak>	hey there! I am looking for a way to set custom HandlerFunc for http.NotFound
<tucnak>	I've been trying to come up with pretty solution after searching through forums for a while
<tucnak>	but looks like issue itself remains open
<adiabatty>	tucnak: can't you make your own and call it?
<tucnak>	adiabatty: thanks for replying! in fact, I can't
<tucnak>	adiabatty: well, I can call it from "/" route it URL != "/"
<tucnak>	adiabatty: but that won't work for FileServer, for instance
<tucnak>	IIRC if FileServer doesn't find a file requested, it'll return http.NotFound
<tucnak>	I'd love to somehow override it
<adiabatty>	the Go Way seems to be copy-paste agnostic — the bulk of the code is in http://golang.org/src/net/http/fs.go
<adiabatty>	line 343
<adiabatty>	that said, if that code gets updates, you're gonna need to update your copied-and-modified variant
<adiabatty>	another idea: check if the Gorilla toolkit has a more customizable file server thingy
*	pjoe is now known as pjoe_dj
<tucnak>	adiabatty: thanks!
<tucnak>	that still doesn't seem like a great idea
<tucnak>	I'd try to patch the whole thing asap and touch ppl on gerrit
*	axw_ is now known as axw
<Jowy>	what is the difference between exported and unexported? its like scope (public, protected, public) ?
<robot-beethoven>	unexported can only be referenced from within that package
<pmezard>	yes, between package
<Jowy>	I see
<Jowy>	and it must include comment otherwise it wont be compiled, that very strict :D
<pmezard>	include comment?
<Jowy>	at line 13, character 1, file controllers/home.goexported method HomeController.Get should have comment or be unexported
<pmezard>	ah, but that's go vet isn't it?
<Jowy>	and I just add // Get method on top of function it works
<Jowy>	yeah
<robot-beethoven>	Jowy: it's just nudging you towards best practices; the godoc tool can generate documentation from comments
<robot-beethoven>	but it will still compile
<robot-beethoven>	without them
<Jowy>	ah I see
<Jowy>	and is there any fastest way to compile multiple package?
<pmezard>	compared to what?
<Jowy>	right now I still cd to package dir and do go install
<pmezard>	go install your/path/...
<pmezard>	where "your/path" is relative to src/
<pmezard>	and the "..." everything under
<Jowy>	lemme try
<Jowy>	thanks pmezard its working
<pepton>	:q
<ra0>	Howdy
*	lele is now known as Guest24
<ra0>	Is there a way to pass additional flags to clang calls during a 'go get'?
<hyphenated>	ra0: the same options you'd need to make it work when doing a go build should also work with go get
<ra0>	I'm trying to go get gopkg.in/qml.v1, but it compiles against Qt5 and pkg-config is supplying incorrect paths
<hyphenated>	you should probably try to avoid needing those, if possible
<ra0>	So I think my options are to edit all of Qt5's *.pc files, edit go-qml's cgo preamble, or pass correct paths to clang during the go get compilation
<hyphenated>	fixing pkg-config seems to be the correct approach
<ra0>	Yeah, I suppose I'll have to try that
<hyphenated>	or at least figuring out why there's a difference between what answers pkg-config provides and what you actually need to build against
<ra0>	It's a bug in Qt on OS X, I think
<bnagy>	make sure you installed pkg-config and qt via the same method
<bnagy>	osx doesn't have pkg-config so you'd only get it via brew or ports or whatever
<bnagy>	so you need to install qt the same way :)
<ra0>	Both were from ports; I've also tried using a standalone Qt install but still can't pass the correct paths to clang
<ra0>	It seems to stem from this issue: https://trac.macports.org/ticket/44204
<bnagy>	borked port, huh
<ra0>	Well, the standalone Qt install had the same issue, and it appears that brew does too but they have a temporary workaround in place
<bnagy>	yeah, read it. You could do that?
<ra0>	Qt's *.pc files themselves are incorrect
<bnagy>	either way I would avoid making this a go issue
<bnagy>	looks like brew just symlink a bunch of headers in
<ra0>	It's not, I just wanted to see whether it could be solved by passing the paths to clang during the go get
<bnagy>	you can mess with the flags in the cgo magic comments
<bnagy>	but imho don't
<ra0>	Which is easier to manage as a temporary fix than continuously re-patching pc files or symlinking lots of folders
<tucnak>	https://www.youtube.com/watch?v=y6120QOlsfU
<tucnak>	sry wrong chat
<bnagy>	anyway I don't know a way to do it from go get, only by modifying the cgo directives
<bnagy>	which is also going to be a pain in the butt to maintain
<ra0>	Yeah, thanks. That was the answer I was looking for
<ra0>	Indeed
<bnagy>	pkg-config on osx is a cluster :/
<jkbbwr>	So if you guys were building a modern REST api, would you simply stick to stdlib + a router of some description?
<jkbbwr>	Or do you have any preferences of frameworks or libraries
<Kim^J>	jkbbwr: stdlib is all you need really.
<Kim^J>	But my preference is stdlib + gorilla/mux
<jkbbwr>	Also does anyone have any opinion on GORM
<Kim^J>	Ew, ORM. That's my opinion.
<GeorgeJ>	Hello folks.
<GeorgeJ>	What tool would you recommend for vendoring depenedncies in a way that works well with external tools, like goimports, or others?
<fd0>	GeorgeJ: good question, let me know if you find something ;)
<Xetius>	does deleting a map entry shrink the storage?
<GeorgeJ>	fd0: Well, from my understanding most solutions work with external tools, either trough setting GOPATH or rewriting import paths. i was looking for recommendations.
<GeorgeJ>	Xetius: What storage?
<Xetius>	I dont know how the map is implemented, but the storage associated with the map
<GeorgeJ>	Xetius: My understanding is that map capacity is mostly implementation defined. If you make a map without a capacity, a big enough capacity is given such that the map is not need to be resized often.
<GeorgeJ>	This might also mean that deleting an entry does not clear the map's storage, unless many other items have been deleted, which require the map's storage to be resized. However I've not looked in the implementation code, but I expect this to be the behavior.
<Xetius>	GeorgeJ:  that was what I expected… trying to trace down a memory leak
<GeorgeJ>	You could perhaps have seen this if you could call cap() on maps. I believe you can get the map capacity using reflection though.
<Xetius>	It was a long shot.  I think it’s actually something to do with marshalling json
<suchab>	I'm trying to use a varadic function, like this: if _, _, err := db.Execute(ctx, authorUpdate, marshal..., a.ID); err != nil { ... }
<suchab>	But I'm getting an error, which I can't quite figure out. marshal is here an array, and I
<suchab>	i'm using the ql package, more specific following this example: http://godoc.org/github.com/cznic/ql#example-Marshal
<adac>	in ubuntu how to get th path to the godep binary?
<suchab>	do i use append(marshal, a.ID)...?
<adac>	I guess I need to add ~/gocode to the PATH
<tucnak>	guys, am I right that golang uses mark&sweep GC?
<p_l>	conservative mark&sweep, iirc, not sure if also generational
<mwhudson>	uh hasn't been conservative for a while now
<mwhudson>	and it's not generational but in 1.5 it will have bits that can run concurrently with the program
<tucnak>	mwhudson: is there a chance it'd be as fast as Java's?
*	HoloIRCUser4 is now known as HoloIRCUser4ghfr
<mwhudson>	tucnak: that's not really a question with an answer :)
<p_l>	mwhudson: so it's now copying/moving?
<tucnak>	mwhudson: I mean, theoratically, is it possible?
<mwhudson>	i think it's still somewhat less sophisticated than the best java gcs
<p_l>	mwhudson: or do you mean precise?
<mwhudson>	the advantage of go is that you can avoid a lot of allocs
<mwhudson>	p_l: it's precise
<tucnak>	IIRC there is a bunch of reasons implying that GC in Go can't be generational
<jkbbwr>	God I miss decorators :(
<p_l>	haven't seen anything that would make it a language issue (current runtime, maybe, language design, nope)
<tucnak>	I am really new to the whole technology, playing with go for a few weeks, but I find it incredible, all the imperative feel and everything
<tucnak>	oh, a question
<tucnak>	I am trying to patch http module atm
<tucnak>	basically I want to make http.NotFound customizable
<tucnak>	is there a chance it'll be accepted on reddit?
<tucnak>	like, generally, how does community accept such changes?
<hyphenated>	jkbbwr: what for?
<hyphenated>	tucnak: on reddit?
<jkbbwr>	hyphenated: Just a really really really nice syntaxic sugar for what im doing atm
<jkbbwr>	hyphenated: TokenBasedAuth(ServesJSON(product))
<hyphenated>	tucnak: um.. http://golang.org/pkg/net/http/#NotFoundHandler ?
<hyphenated>	oh you want the opposite of that
<tucnak>	hyphenated: on reddit?
<jkbbwr>	06:45 < tucnak> is there a chance it'll be accepted on reddit?
<tucnak>	oh sry
<tucnak>	I meant gerrit
<tucnak>	hyphenated: isn't NotFoundHandler a read-only method?
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Tue May 05 06:54:36 2015

**** BEGIN LOGGING AT Tue May 05 06:59:26 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<hyphenated>	they're not really dirty hacks if the http package exposed those things intentionally, to provide alternative implementations
<tucnak>	hyphenated: can't see point in limiting such functionality
<hyphenated>	if you feel very strongly about it, you can open an issue
<hyphenated>	but you're asking for it to be customizable, which isn't actually necessary, and would probably make it fit only one new use case (yours) instead of a variety of them
<taruti>	tucnak: you can just use a custom mux Handler in your http.Server and do whatever you like there.
<tucnak>	taruti: that's what I'm doing here
<tucnak>	hyphenated: do you really think that custom 404 page is a rare case nowadays?
<taruti>	with custom things, one would probably want to customize lots of things, and end up with the custom Handler like you ended up anyways.
<hyphenated>	yes, I meant exactly what taruti said ;-)
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 07:13:37 2015

**** BEGIN LOGGING AT Tue May 05 07:14:07 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	toin0u|away is now known as toin0u
<skripted>	good day to you all - quick question: i've never sent emails before with go, but can i send multiple emails with one smtp connection in go?
<hyphenated>	the default and intentionally simple ServeMux, FileServer and so on don't allow you to set a custom one. but you're quite able to provide a different ServeMux with whatever customization you need
<taruti>	tucnak: yes it does. You write YourFancyMuxDoingWhateverYouWant.
<tucnak>	taruti: can you pls provide a trivial example
<tucnak>	cuz seems like I missed the point
<taruti>	tucnak: e.g. file handler might check 1) if the session is present (or not needed for that file), 2) open the file, 3) if it fails for some reason (not existing, permission denied, IO error, ...), perform a reasonable default for that type of file and log it etc.
<tucnak>	taruti: wait a sec, official docs imply that file server is an expected solution to use in situation when you need to route a part of FS
<tucnak>	taruti: in the meantime, it's not flexible
<tucnak>	I can understand the point of minimizing excessive customizations
<taruti>	tucnak: it is a barebones solution, that is enough in the simplest cases, in production apps one typically has complex custom requirements :)
<tucnak>	but at this point it's just not flexible to provide anything that could be used in real app
<tucnak>	what's its point then? :)
<taruti>	it works well enough for the simple cases.
<tucnak>	for example
<taruti>	and actually you end up reusing parts of it (e.g. ServeContent)
<hyphenated>	tucnak: it's useful as a building block for the "real app"
<taruti>	with real apps, one ends up with browser bugs etc that have to be circumvented in the backend
<hyphenated>	tucnak: since every "real app" will have its own requirements and dependencies, it's impossible to design something that suits everybody
<taruti>	like hyphenated says
<tucnak>	again, I see the point of minimizing excessive improvements, but at this particular case, don't you think that custom 404 response is somewhat being customized like in every single app?
<taruti>	tucnak: it would need also 403, logging, permissions, etc typically
<hyphenated>	tucnak: I don't, but like I said originally, if you feel strongly about it, open an issue and see what the real answer comes back as
<hyphenated>	at least now you're not ignorant of other ways to achieve what you want though
<tucnak>	hyphenated: taruti: alright, I'll start an issue on github (is it the right place to do so?)
<taruti>	speaking of net/http the 206 interaction with some browsers (chrom*) is nasty, and we ended up with custom code for that.
<tucnak>	hyphenated: taruti: anyway, thanks for your help!
<nbari>	hi all, I am how could I use the pkg.flag to print a custom defaults message, instad of printing something like l=map[]: ....
<nbari>	basically I would like to remove the type of the argument '-l=map[]' or '-r=[]'
<nbari>	I would like just to print something like '-l: my custom description'
<hyphenated>	nbari: flag.Usage = yourFunction
<nbari>	currently I am using flag.Usage = func() { my_custom_msg flag.PrintDefaults() } just to change de defaults but how to do it for the PrintDefaults() ? does flag.Usage per arg ?
<hyphenated>	you don't. you just provide a long message
<nbari>	mmmm ok
*	Andre is now known as Guest43149
<Guest43149>	Hi gophers, I stumbled upon a problem with errors and I'm not sure if the behavior I saw is intended
<Guest43149>	https://gist.github.com/ligustah/de5dc3e5882877978954
<Guest43149>	Apparently the nil reference is implicitly cast somehow, which makes it not seem like a nil error to the "if err != nil" check
<Guest43149>	Even though it definitely is a nil pointer (see the log output)
<Guest43149>	Would be nice if someone could have a look at it and tell me if this is supposed to happen
<Guest43149>	Thanks in advance!
<edayo>	Hi all, is it possible to make a map such as this: map[string]interface ?
<r00trunner>	which style do you prefer? http://ix.io/ii5
<sauerbraten>	I have code for a program in GOPATH/src/foo ("package main"). how can I get godoc for this?
<muraiki>	Guest43149: I don't have an answer as to how to fix it, but look at what the types are for your return value and nil using the reflect package, as in here: package main
<muraiki>	import (
<muraiki>		"fmt"
<muraiki>		"reflect"
<muraiki>	)
<muraiki>	type ErrorType struct {
<muraiki>	}
<muraiki>	func (e ErrorType) Error() string {
<muraiki>		return "error"
<muraiki>	}
<muraiki>	func getNilError() *ErrorType {
<muraiki>		return nil
<muraiki>	}
<muraiki>	func main() {
<muraiki>		var err error
<muraiki>		err = getNilError()
<muraiki>		fmt.Println(reflect.TypeOf(err))
<muraiki>		fmt.Println(reflect.TypeOf(nil))
<muraiki>		if err != nil {
<muraiki>			fmt.Println("Received:", err.Error())
<muraiki>		} else {
<muraiki>			fmt.Println("All fine")
<Xe>	muraiki: see the golang playground
<muraiki>		}
<muraiki>	}
<muraiki>	oh God, I didn't mean to paste all that!
<mpl>	STAHP
<muraiki>	sorry T_T
<sauerbraten>	omfg
<muraiki>	Guest43149: I meant to paste the go playground url but apparently copied the wrong thing. yay no caffeine yet. https://play.golang.org/p/b0RnqjDLmE
<r00trunner>	which style do you prefer? http://ix.io/ii5
<tucnak>	r00trunner: imo #1 is good unless you have >2 options. with 3 options, #2 is better already
<sauerbraten>	r00trunner: hard to say, switch-case has the conditions nicely aligned, but switching on nothing and the empty default look strange
<muraiki>	Guest43149: I think the problem is that you're not returning the error interface, you're returning a nil pointer to ErrorType. if you change getNilError to return "error," the code works as expected
<sauerbraten>	r00trunner: if you don't have an else in option #1, you could make it two seperate ifs
<sauerbraten>	then the conditions would align again
<Guest43149>	@muraiki Thanks, that is indeed what I did to fix it in my real code, however it still had me confused as to why the compiler would even allow this to happen
<muraiki>	Guest43149: that happens because there's a difference between "nil" and "a pointer to something, which happens to be nil"
<muraiki>	the latter is typed, the former isn't
<muraiki>	or rather, the former is simply of type nil.
<Guest43149>	Yea, I see
<Guest43149>	Still feels wrong to me, having a null pointer pass through err != nil
<muraiki>	because you don't actually have nil
<muraiki>	you have a pointer to ErrorType, which is currently not populated... heh I don't know the best way to explain it :)
<Guest43149>	I think I understand what's happening. I just don't understand why it's allowed to happen
<muraiki>	it's like comparing nil to Option[ErrorType]
<muraiki>	ah ok
<muraiki>	yeah, it is counterintuitive to me also
<Guest43149>	especially with error types, since err != nil is probably the most used line in go code :P
<muraiki>	yeah, it is one annoyance I have but deal with because I enjoy using go more than one of the other primary languages at my day job, perl. :)
<Guest43149>	didn't know there were still people using perl :P
<muraiki>	well, we've been around since 1997, so there's a bit of a legacy here :)
<Guest43149>	:D
<muraiki>	perl in 2015 actually has some nice stuff going on in it, but not nice enough that I'd recommend anyone learn it if they know another dynamic language like python or ruby
<Guest43149>	Always feels kinda hacky to me
<muraiki>	and that's how we're ending up using Go... good concurrency constructs are especially a sore point in perl
<Guest43149>	perl that is
<carl->	any recommendations for web scraping / parsing in go .. i personally love beautifulsoup in python :) as an example.. not 100% content with goquery that i have tried in go so far
*	Moe_ is now known as Moe
*	pietro10 is now known as andlabs
<muraiki>	Guest43149: here's a little more info... it seems the recommendation is to always use error if you are returning a "nil error": http://golang.org/doc/faq#nil_error
*	Guest42246 is now known as hartsocks
<Guest43149>	@muraiki ah, great! thanks a lot
*	hartsocks is now known as Guest85348
<Guest43149>	That does indeed describe the problem I encountered
<muraiki>	so if you are writing a function that returns a pointer, but the fn could fail, return (*pointerToSomething, error)
<Guest43149>	in my code i did have a function like func doWork() (*Type, *internalError)
<Guest43149>	which was then called like t, err := doWork(); if err != nil { return err }
<muraiki>	yeah I think you want to not return *internalError but rather internalError that conforms to the error interface
<muraiki>	see https://gobyexample.com/errors
*	ChanServ gives voice to iant
<r00trunner>	is switching two cases without a default case better than if-else if?
<catphish_>	does go have its own hostname resolution mechanism rather than trusting the underlying OS?
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 09:06:40 2015

**** BEGIN LOGGING AT Tue May 05 09:07:04 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	[freenode-info] please register your nickname...don't forget to auto-identify! http://freenode.net/faq.shtml#nicksetup
*	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Tue May 05 09:07:05 2015

**** BEGIN LOGGING AT Tue May 05 09:08:10 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<catphish_>	so modern versions will revert to getnameinfo() if nsswitch doesn't permit?
<Aram>	IFF they are build with cgo and without netgo.
<Aram>	and recent means like a week old
<catphish_>	i think i understand, thanks
<catphish_>	i'm using somebody else's Go program and it's failing to look up some names
<catphish_>	i guess i'll just report it to them and be patient
<Aram>	note that if you cross compile you automatically disable cgo
<Aram>	and the Go resolver will only do essentially "files dns", so avahi/ldap/yp won't work.
<catphish_>	Aram: that's exactly my issue
<catphish_>	i was hoping there was a way to address it
<Aram>	the way to address it is to recompile the program with a cgo-enabled go.
<catphish_>	thanks
<zhaoym>	what's the motivation of using pointer receiver in `func (t *Time) GobDecode(data []byte) error` while most other methods of Time don't use pointer receiver?
<AmandaC>	zhaoym: to make it able to edit itself, I’m guessing
<smw>	zhaoym, what AmandaC said, a decoder needs to edit itself.
<zhaoym>	makes perfect sense. GobEncode uses plain Time. thanks guys.
<zhaoym>	i've been over-using pointer receivers i thikn
*	zz_flazz is now known as flazz
<napsy>	Hello. Are maps thread-safe?
<sztanpet>	no they are not
<sztanpet>	the manual is clear about this
<zhaoym>	napsy: https://blog.golang.org/go-maps-in-action
<sztanpet>	and http://golang.org/doc/faq#atomic_maps
<edayo_>	Hi all, is it possible to make a map such as this: map[string]interface ?
<sztanpet>	yes
<edayo_>	how would i use declare it?
<sztanpet>	map[string]interface{}
<napsy>	ok thx
<edayo_>	Ive tried: vr := map[string]interface{"a":StructA, "b":StructB}
<remeh>	abstractData := make(map[string]interface{})
<sztanpet>	declaring such a map usually signals that you are doing something wrong
<remeh>	abstractData["key"] = abstractData // mind... blown
<edayo_>	:)
<remeh>	sztanpet is right
<edayo_>	im trying to create a list of models
*	flazz is now known as zz_flazz
<smw>	edayo_, the type is "interface{}" so map[string]interface{} so map[string]interface{}{"1": 2}
<edayo_>	sorry, im comming from pythin, goism are still rather strange to me
<edayo_>	smw, what if instead of integers i want to use Structs?
<smw>	edayo_, map[string]interface{}{"1": T{1}}
<smw>	edayo_, where T is a struct. I would like to point out that a map[string]interface{} is almost guaranteed to be a bad idea
<muraiki>	if all the structs are the same, then you don't need interface{}... you can just do map[string]someType where someType is something like type someType struct { foo, bar string }
<edayo_>	hmm, i tried that, musta done something wrong. thanks for the pointers
<edayo_>	muraiki the structs arent the same
<muraiki>	ah
<lemmi>	 edayo_ then think about making them implement the same interface
<muraiki>	yeah, that's the way to do it :D
<edayo_>	problem is these yahoos dont have methods :S
<edayo_>	they are gorm models
*	zz_flazz is now known as flazz
*	toin0u is now known as toin0u|away
<gra1>	hi, do anyone has any example for API testing ?
<AmandaC>	skelterjohn: It would seem I’ve managed to google enough to make working emacs lisp to make it work with wgo!
<AmandaC>	er, to make go-mode
<AmandaC>	hrm, maybe not. :(
<hsuh1980>	hi guys, any idea to rewrite this code to be more efficient? I couldn't express it in another way... https://gist.github.com/hugows/fd992d775980a4870201
<hfaafb>	go has no tco afaik
<hsuh1980>	that makes it even worse :)
<hsuh1980>	(the code, not go)
<foofoobar>	I currently have some code to load my template like this: http://play.golang.org/p/UdgZXQhXua
<foofoobar>	I assume its better to use a absolute path here, correct?
<hsuh1980>	I've put my code in the playground as well: http://play.golang.org/p/9XXZTD4qGr
<nbari>	hi all, in this: http://play.golang.org/p/LdyU8guD3L
<nbari>	how can I specify pad ?
<nbari>	where pad is the number of spaces I want to ident but don't know how to doint when pad is a int (pad := 3)
<nbari>	I would like to do sometghing like: fmt.Printf("%0(pad value)d", 12)
<nbari>	but how to properly parse/set the pad_value ?
<Tv`>	nbari: docs help.. http://play.golang.org/p/NxCj0wrR9c
<Tv`>	"Either or both of the flags may be replaced with the character '*', causing their values to be obtained from the next operand, which must be of type int."
<nbari>	many thanks Tv`
<nbari>	Tv`: I would like pad based on the length of the string, I know the number of lines by doing len(lines), if for example I get 100, I wouldl like to pad only using 3
<nbari>	I tried len(len(lines)) hoping I could get a 3
<nbari>	but I think I need to convert int to string in order to get the lengh of the string
<nbari>	any way of how to properly/better doing it
<nbari>	basically I would like to know the lenght of the string the int is representing
<mohae>	look at the strconv package
<nbari>	if number = 100 pad = 3, if number 10000, pad = 5
<mrCaipirinha>	len(fmt.Sprint(321))
<mrCaipirinha>	?
<nbari>	mrCaipirinha: thanks :)
<mrCaipirinha>	np!
<mrCaipirinha>	If you do just len(string(321)) I think it interprets it as a unicode character
<nbari>	mrCaipirinha: http://play.golang.org/p/BE9WhWuu8Y
<nbari>	using string returns 2
<nbari>	sorry I mean on the example I paste
<mohae>	strconv
<nbari>	if using pad := 300 it returns 2 instead of fmt.Sprint(pad) that returns 3
<mrCaipirinha>	yep
<mrCaipirinha>	You have to convert the number 321 to its string representation, and that is *not* what string() does :)
<Tv`>	mohae: ever feel futile?
<mrCaipirinha>	*textual representation ? english is not my mother lang..
<mrCaipirinha>	nbari: this is probably more correct http://golang.org/pkg/strconv/#FormatInt
<mohae>	Tv`: nah, it amuses me that people work so hard at banging their head against the wall instead of reading the docs
<mrCaipirinha>	"only way to do it ain't fun"...
<nbari>	mohae: many thanks
<mohae>	mrCaipirinha: probably Itoa
<mrCaipirinha>	mohae: nice
<nbari>	what about this: fmt.Println(len(strconv.Itoa(pad))): http://play.golang.org/p/zI7NQhlrMn
<nbari>	what could be the best way of doing it ?
<d0100>	how can I serve files inside an imported package?
<nbari>	with fmt.Println(len(fmt.Sprint(pad))) I don't need to import strconv
<mrCaipirinha>	thats good, now use this and move along :)
<Tv`>	d0100: nothing says the source tree is available where the binary is run
<Tv`>	nbari: how do you think fmt works..
<d0100>	oh, true, so I'd have to embed my files? What's the easiest way to share a (back|fron)end application that is meant to be imported as a third party app?
<nbari>	Tv`: same way strconv maybe or maybe is using it internally i think
<mrCaipirinha>	nbari: there is a utility called goimports that makes dealing with imports easier
<mrCaipirinha>	it might be available for your editor/OS
<mrCaipirinha>	having to import more packages shouldn't be a nuisance :)
<mohae>	not sure how importing packages you use would be considered a nuisance
<AmandaC>	skelterjohn: \o/ I’ve done it! https://www.irccloud.com/pastebin/qvoJ76wb
<mrCaipirinha>	oh, just because he said "with fmt.Println(len(fmt.Sprint(pad))) I don't need to import strconv"
<mrCaipirinha>	maybe I misread it
<nbari>	Tv`: https://golang.org/src/fmt/print.go?s=6663:6699#L237 I got it that far
<mohae>	I think that's more of a I'd rather not do it the right way
<nbari>	maybe I am wrong but if i like to avoid importing if I don't need to or I can solve it with out need to import
<nbari>	but in this particular case, I am confused on what could be the best practice aproach
<Wessie>	so I presume you import no packages?
<Wessie>	you can just rewrite them all into a single one
<Tv`>	nbari: if A is built using B, and you only need the functionality of B, what should you use?
<nbari>	fmt.Println(len(fmt.Sprint(pad))) oder fmt.Println(len(strconv.Itoa(pad)))
<Tv`>	that outer fmt.Println is a red herring
<nbari>	Tv`: just B
<mohae>	nbari: why would importing strconv be a thing to avoid?
<nbari>	not to avoid, is just that I think fmt.Sprint can do the job saving me from importing strconv
<AmandaC>	why avoid importing strconv? It’s going to be tree-shaken away and inlined, anyway, for the most part.
<nbari>	at the end if I import it or not, after compiled the speed/perfomance I think is not influenced because of this right ?
<edayo_>	Guys, can anyone help me take a look at this (http://play.golang.org/p/s3wKcJCjxi) and tell me what i'm doing wrong? Thanks!
<Tv`>	nbari: fmt is way more complex than strconv
<mohae>	http://play.golang.org/p/td66ApkNtg
<mohae>	edayo_: it's an interface{} not an interface
<edayo_>	ah! thank you mohae!
*	segfalt_ is now known as segfalt
<nbari>	Tv`: ok but if already included, I think I could use it instead
<AmandaC>	nbari: that’s roughly equivalent to saying “I have a hammer, but so I might as well use it to drive in this screw."
<nbari>	ok so please guys then help me undestand better go, 1. It doesn't metter how much imports I do, the thing that metters more is to use the propper tool either if that concist of importing N packates ?
<Cassyblanca>	So you're saying that you shouldn't treat everything as a nail just because you got a new hammer?
<Tv`>	nbari: fmt imports strconv anyway, you using fmt but not strconv is not really a win
<Cassyblanca>	Correct, the number of imports you have really isn't going to affect anything significantly. As long as you're actually _using_ things from what you're importing - importing things you won't use is pointless.
<nbari>	since is a compiled language, I could have a multiple imports but after compiling the final product benefits from the best algorithm used ?
<nbari>	oh ok
<eatingthenight>	is bytes.Buffer the best way to concat long strings?
<mohae>	it's the fastest
<eatingthenight>	yes i guess that was my real question
<eatingthenight>	thanks mohae
<mohae>	np
<edayo_>	The strange case of two different structs with the same address: http://play.golang.org/p/b7k1XQ8TQu I'm sure i'm missing something obvious but what?
<mohae>	edayo_: it's a copy
<AmandaC>	edem: for doesn’t make a new variable and allocation for every element it iterates
<edayo_>	The strange case of two different structs with the same address: http://play.golang.org/p/b7k1XQ8TQu I'm sure i'm missing something obvious but what?
<mohae>	that's a better explanation
<mohae>	edayo_: asking the question again won't change the answer
<AmandaC>	er, edayo_, see above, sorry edem
<Cassyblanca>	He'd disappeared
<AmandaC>	ah
<Cassyblanca>	<AmandaC> edem: for doesn’t make a new variable and allocation for every element it iterates
*	AmandaC has join/parts disabled
*	mohae same
<Cassyblanca>	I can't blame you, there are 1239 people in here. :p
<edayo_>	sorry my client disconnected, i didnt know the initial post was delivered
<AmandaC>	edayo_: see the line that Cassyblanca just re-pasted
<mohae>	edayo_: that's ok, I didn't know you dc'd, sorry
<edayo_>	Ok.. it seems i have some re-reading to do, thank you
<mohae>	edayo_: are you trying to modify that element and save the changes?
<edayo_>	no
<mohae>	ok, then it shouldn't matter
<edayo_>	at this point im just basically playing around, trying to get a feel
<eatingthenight>	https://play.golang.org/p/udKyr0z6ro this has been puzzling me for a while. Why does io.Copy not actually pipe the string to stdin? the connection is made fine but then it just prints out the --help command for mysql.
*	dev1 is now known as mey
<whippythellama>	edayo_: maybe this would help clarify?  http://play.golang.org/p/v-0sfx3ulO
<jkbbwr>	eatingthenight: out of interest why not a database driver?
<Cassyblanca>	Basically you're just taking the address of e in each iteration - not the address of any elements in lst. Iteration starts, the struct is copied to e, then you're taking the address of e. If you want the address of the struct itself, &lst[i] should work.
<AmandaC>	eatingthenight: mysql may be checking if stdin is a tty, and falling out if not
<Cassyblanca>	...basically, what whippythellama just posted. :P
<whippythellama>	:)
<mohae>	but that was an excellent explanation Cassyblanca!
<eatingthenight>	jkbbwr: this is for importing a huge mysql dump or i would use a mysql driver
<whippythellama>	+1
<jkbbwr>	eatingthenight: why not bash?
<eatingthenight>	jkbbwr: I am using go because i wrote a program that splits up the dump table by table and then imports 10 at a time
<nesv>	mr_const: Yes, that's the execution module, but if you are looking to do it from states in an SLS file, look here http://docs.saltstack.com/en/latest/ref/states/all/index.html and search for "postgres_"
<Cassyblanca>	So I have been using Go for maybe around 48 hours now. I think my favourite thing is how it handles C bindings, as opposed to certain other languages' FFIs. >.>
<mohae>	nesv: sounds like you want #salt
<eatingthenight>	AmandaC: anyway to debug that or work around it that you know of?
<nesv>	Oh frick
<nesv>	mohae: Sorry about that
<mohae>	nesv: np
<Wessie>	eatingthenight: I don't see you starting the process anywhere?
<eatingthenight>	Wessie: CombinedOutput runs the command and returns stdin and stderr
*	ChanServ gives voice to iant
<Wessie>	ah so it does, I never use that method
<eatingthenight>	yeah i had to look around for it was helpful for debugging
<eatingthenight>	but now i have no errors and it's still not working
<Wessie>	well mysql does open an interactive prompt, I doubt it plays nicely with a non-tty
<eatingthenight>	Wessie: darn :( any way around this?
<eatingthenight>	Wessie: i was looking at the sql package but it doesn't have any methods that would let me write a few hundred MB without reading it into memory
*	e-dard_afk is now known as e-dard
<Wessie>	actually it should work, according to others that tried
<Wessie>	so you might be invoking mysql wrong
<whippythellama>	eatingthenight: there's a 'go expect' module which i found and have no experience with - https://github.com/ThomasRooney/gexpect  :)
<Wessie>	eatingthenight: I was just surprised initially as to why io.Copy would finish happily with no one reading stdin, but I guess with very little data it just puts it into an internal buffer
<mohae>	eatingthenight: I'd connect to the port it listens on
<whippythellama>	there's also running a batch of commands - https://dev.mysql.com/doc/refman/5.0/en/batch-mode.html
<Tv`>	eatingthenight: that "without reading it into memory" part is just weird
<whippythellama>	but really, you probably want to think about using a mysql library instead
<skelterjohn>	AmandaC: cool! want to PR it into the wgo repo?
<Tv`>	eatingthenight: your use of os/exec is prone to deadlocking
<eatingthenight>	Tv`: how so? if the connection terminates?
<Tv`>	eatingthenight: and if you got the mysql invocation right, it'd probably sit there waiting for more input, afterward; you never close its stdin
<Tv`>	eatingthenight: you start writing to the pipe before the process is running
<AmandaC>	skelterjohn: not entirely sure I should. Apparently using the advice-add thing is heavily frowned upon in the EMACS circles, given when I was googling how to hook into when the buffer is made, pretty much everyone was like “You can’t… welll, you kinda can, using advice, but you shouldn’t use advice” or similar.
<Tv`>	eatingthenight: none of this is about Go; this is about unix
<AmandaC>	skelterjohn: but if you’d be ok with upsetting people with massive nerd-boners for EMACS, sure. :P
<eatingthenight>	Tv`: o thank you I didn't even notice that!
<AmandaC>	actually, I may anyway, just to see if anybody can find a better way to do it
<AmandaC>	skelterjohn: I’ll give it some more battle-testing, and if it doesn’t fall over in a couple days. I’ll fork and make a PR — It has a rather unfortunate method of falling over, which is why I’m going to battle test it some.
<AmandaC>	skelterjohn: if it fails inside the hook, EMACS will fail to create any new buffers whatsoever
*	ChanServ gives voice to iant
<eatingthenight>	Tv`: you are insane. Thank you so much you just pointed out everything wrong with the script :)
<eatingthenight>	Thank you everyone for the help
<skelterjohn>	AmandaC: sounds good, thanks!
*	veonik_ is now known as veonik
<r00trunner>	should we align types in structs?
<aquarat>	I press ctrl+s and it aligns them automatically (identation)
<aquarat>	that's in LiteIDE
<eatingthenight>	Atom has a nice plugin for it as well
<eatingthenight>	With go you should not have to worry about formatting at all really
<Tv`>	r00trunner: whatever gofmt does
*	matp_ is now known as matp
<aquarat>	but it's a good idea to have stuff neat anyway :P
*	I is now known as Guest79090
<AmandaC>	skelterjohn: oh nice, it looks like using that same setup-go-mode-env inside a hook for ‘go-mode makes flycheck play nicely with wgo as well! :D
<skelterjohn>	what is flycheck?
<AmandaC>	on-the-fly syntax checking for a buttload of languages
<Tv`>	.. with shitty Go support :-/
<AmandaC>	Tv`: got one with better go support? :/
<skelterjohn>	Tv` is never happy.
<Tv`>	AmandaC: nope
*	AmandaC is still new to this emacs stuff
<skelterjohn>	AmandaC: 'go build'?
<AmandaC>	skelterjohn: go-fmt then go-vet then it does go-build If I’m understanding their code right
<Tv`>	AmandaC: well, actually, i do; flymake worked better for me
<Tv`>	even though it's the "less modern" one
<AmandaC>	skelterjohn: presumably it should work for pretty much any process that gets spin off from a go-mode buffer’s variable context, if I’m understanding this lisp stuff right
<AmandaC>	the advice-add stuff is nessary because nsf’s go-autocomplete creates it’s own buffer from scratch
<Tv`>	AmandaC: ensuring you've seen http://dominik.honnef.co/posts/2013/03/writing_go_in_emacs/ http://dominik.honnef.co/posts/2013/08/writing_go_in_emacs__cont__/
<AmandaC>	Tv`: I have,but only skimmed them
<AmandaC>	Tv`: one problem I have is the creating-a-new-window thing gofmt-before-save does is rather intrusive imo
<Tv`>	AmandaC: i seen no such thing here
<AmandaC>	Tv`: try making syntaally-invalid code and saving it
<AmandaC>	Tv`: a new frame/window/whatever pops up with the errors
<Tv`>	AmandaC: not here ;)
<AmandaC>	Tv`: how did you make it not do that? :P
<Tv`>	i don't think i did anything speical
<AmandaC>	Tv`: http://a.ddna.cc/image/2x0G1j2S0G3O
<AmandaC>	that’s with (add-hook ‘before-save-hook ‘gofmt-before-save)
<Tv`>	maybe a different go-mode version?
<Tv`>	i'm currently at 0bcbcf12730049d685e02f9e9451554d56f71f99
<AmandaC>	I installed it from package-install
<muraiki>	mmm bacon pie
<AmandaC>	http://a.ddna.cc/image/0p2x3k343X17
<AmandaC>	the late 2013 date stamp there is rather worrying
<v0idcat>	AmandaC: yup, last version is 20150503
<AmandaC>	v0idcat: I’ve disabled the straight-from-git version of melba, because it was causing problems with some packages. Is it regularly tagged into melba-stable?
<AmandaC>	melpa-stable*
<v0idcat>	AmandaC: i don't know about melpa-stable. this one is from melpa
<AmandaC>	ah
<AmandaC>	looks like he does regularly tag it
<AmandaC>	tag 1.3.0 is the latest, as of 2 days ago
<v0idcat>	yes and melpa-stable is supposed to auto-pick from git tags, right? maybe it has the wrong repo
<AmandaC>	yep
<AmandaC>	nope, 1.3.0 is the latest according to melpa-stable too. :P
<v0idcat>	hmm then you simply need to update?
<AmandaC>	yup, trying that now
<AmandaC>	nope
<AmandaC>	still popping up a new thing for gofmt errors
<bmercer>	I'm probably missing something really obvious, but I'm using bufio to read in a file with newlines, and then doing SplitBytes() on it, but the data is not what I'd expect...
<bmercer>	I wonder if I need to strip newlines and such first
<AmandaC>	Tv`: it seems you set gofmt-show-errors to nil at some point.
<Tv`>	bmercer: see bufio.Scanner
<Tv`>	AmandaC: very likely
*	bmercer looks
<Tv`>	AmandaC: "Its value is buffer" says emacs
<AmandaC>	Tv`: hrm
<bmercer>	Tv`: makes sense, now I just need to figure out how to make a SplitFunc!
*	MrSmurf is now known as xSmurf
<Tv`>	bmercer: splitting lines is already provided..
<bmercer>	ahh, it's an example
<marcop>	hey bmercer
<bmercer>	Tv`: I am not splitting on lines
<bmercer>	hiya marcop
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 13:16:41 2015

**** BEGIN LOGGING AT Tue May 05 13:21:14 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	segfalt_ is now known as segfalt
<bhenderson>	hi, how does one read a bytes.Buffer twice?
<SaidinWoT>	If the buffer is read fully, it will truncate itself to empty.
<SaidinWoT>	You can save the underlying byte array before starting reading
<st33med>	Yep. Store it in a variable.
<bhenderson>	gotcha
<bhenderson>	thanks
*	flazz is now known as zz_flazz
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Tue May 05 13:42:41 2015

**** BEGIN LOGGING AT Tue May 05 13:48:41 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<mohae>	bytes.Buffer is faster than append
<Tv`>	i've yet to see an app where unicode fiddling is the bottleneck
<cronos>	mohae: hmm, why?
<mohae>	cronos: good question, I haven't looked at the append code
<Wessie>	do I want to question why such an abbomination was required in the Go ecosystem? (gohper)
<mohae>	but if you do some benchmarking...
<cronos>	mohae: i would expect them to use roughly the same growing algorithm
<Tv`>	e.g. for the case of write+read+write, bytes.Buffer can "slide" the contents inside the []byte, where naive append and re-slice will leave (referenced!) garbage around
<daved>	Wessie: oh shit.  Is it that bad?
<skripted>	when creating an email queue, should i use a queue like redis and a second go instance to poll and send the mails? or would you recommend to send the mail directly from the main program but in a goroutine?
<Tv`>	Wessie: who said anything about required
<schmichael>	someone dared to use our lovely mascot as a name for their library?!
<Wessie>	Tv`: well someone felt it was something we should have :)
<Tv`>	the whole idea of "common libs" is an oxymoron
<cronos>	skripted: how many emails do you expect to send?
<cronos>	i'd send them right away
<daved>	Wessie: Oh, you're referring to the gohper lib...
<Tv`>	the "gohper" thing just seems like somebody's favorite collection of navel lint
<skripted>	cronos: tons, i'm using mandrill for that but still it's about the splitting
<Tv`>	lots of things, why would you share
<mohae>	I write things that probably aren't the best idea, but they usually seemed good at the time, or I didn't know better
<Tv`>	the shitty part is, these people are so enthusiastic about their latest creation, it ends up on https://github.com/avelino/awesome-go and what not
<Tv`>	"awesome" very much isn't
<cronos>	skripted: tons is not a number
<cronos>	unless you measure them by mass somehow
<Tv`>	also, those who have not known the Go wiki packages page are doomed to reinvent it, about as poorly
<mohae>	http://www.reddit.com/r/golang/comments/34pcow/gohper_v01_released_with_much_changes_common_libs/cqz0v6g explains why. DRY strikes again!
<cronos>	skripted: if you can't process the load right away, queue will only delay the inevitable
<cronos>	you can simply have multiple hosts with this service and a load balancer in front
<cronos>	queue will help however if you have bursty load
<Wessie>	apparently os.File was too non-DRY and all the os functions should accept callbacks
<Wessie>	why did I click :(
<Tv`>	Wessie: the order of clicks shall be downvote, close tab
<mohae>	I don't see a reason to go to r/golang
<Tv`>	mohae: it has, unsurprisingly, gone downhill a lot
<mohae>	Tv`: indeed, it's rare enough to find anything of value there that it's in the waste of time category
<mohae>	and I'm good enough at wasting my own time
*	Logie is now known as circle
*	circle is now known as logie
<skripted>	cronos: i'm a noob at queues/jobs/load balancing, right now i have a rest api and on a few routes i'm sending invitation mails per user.. so you suggest to use a queue and job when i have many requests at once but use a simple goroutine within the api when they are steady?
<mohae>	Tv`: btw, I find this suggestion to be an excellent one! https://github.com/boltdb/bolt/issues/360. I eagerly anticipate your implementation ;)
*	logie is now known as logattack
<Tv`>	mohae: definite pony there
<cronos>	skripted: no, i suggest you use a simple goroutine always
<cronos>	if that happens to be a big issue, scale the number of instances of your service
<skripted>	even if only the sending is the culprit i should copy the whole application including the api?
<mohae>	Tv`:  d'oh, I should have scrolled down. sadness
<mohae>	skripted: have you previously sent out lots of emails?
<cronos>	skripted: one big sending would probably cause you delivery lag which is fine
<skripted>	mohae: no i'm building my first production app :( and i heard all others are using redis and workers for such things but i know i'm using go and i have amazing goroutines so i only wanted to make sure that i can achieve the same with it :)
<cronos>	are they using ruby?
<skripted>	yea
<skripted>	mostly
<cronos>	heh, surprise
<skripted>	but also php with cronjobs
<cronos>	oh god
<cronos>	worst case scenario, your run out of FDs because on number of concurrent requests at which point you simply convert this sending stuff to use a pool of workers instead of individual goroutine for each email
<mohae>	skripted: well, in doing such things with email there are other things that become involved.
<mohae>	gl
<cronos>	skripted: also, i believe most popular email services support batching of emails
<cronos>	so you can send N identical emails in one request
<skripted>	cronos: i will definitely need to send 1email/user because of extra tokens
<skripted>	:/
<cronos>	well, how many users do you have?
<skripted>	none yet, but it's about writing the software <now>
<cronos>	if you're just starting out, write the simplest thing first and put decent monitoring in place. when you start noticing issues, revise your design
<skripted>	alright :)
<cronos>	i find it to be a bad approach to future-proof everything you do and trying to come up with perfect design initially
<skripted>	i will try sending the mails directly from the web service with goroutines :)
<skripted>	you got a point hehe
*	cgrieger is now known as cgrieger^away
<skripted>	cronos: one more thing, i already tried to send like 12 emails with smtp.SendMail at once and it took ~8seconds .. i'm afraid it's because of reopening new smtp connections for each mail, can i send them in one connection?
*	huh is now known as Guest64688
<cronos>	skripted: i'm fairly sure smtp as a protocol allows this. you'll have to manually use smtp.Client though
<cronos>	or you can just use mandrill's api instead of smtp
*	zz_flazz is now known as flazz
<skripted>	cronos: ok! thanks a bunch! :)
<eatingthenight>	any ideas on how I could optimize this? https://github.com/michaeljs1990/split-mysql-dump/blob/master/split-mysql-dump.go it takes a long time when trying to split large files.
<mohae>	regex, for those that think the only tool is a hammer
<cespare>	if you're going to criticize the approach, it's nice to suggest an alternative
<eatingthenight>	mohae: what would you replace it with? just check is a substring in present?
<eatingthenight>	*if
<mohae>	cespare: um, alternatives to regex are pretty obvious in Go
<mohae>	hey let's start up a state machine when we can jus check to see if the string exists
<mohae>	eatingthenight: yes
<cespare>	mohae: yes, to you and me
<cespare>	mohae: i guess what I'm trying to say is: don't be a dick
<mohae>	cespare: and I saw you suggest an alternative with your criticism
<mohae>	pot meet kettle
<eatingthenight>	ok i'll check that out and see how the performance improved :>
<Guest64688>	I do not understand var shadowing in golang. https://play.golang.org/p/CrVxA8nwWK
<Guest64688>	I'm sure there is some proper reason for this behavior, but I don't see it.
<cespare>	mohae: i opened with an alternative suggestion.
<andlabs>	Guest64688: every { introduces a new variablescope
<andlabs>	and you can freely shadow in each new scope
<andlabs>	it's actually not too hard
<Guest64688>	but it is very confusing when mixed with multiple assignments, isn't it?
<KirkMcDonald>	And the scope of a specific variable begins at the end of its declaration.
<KirkMcDonald>	Guest64688: A multiple declaration like that will declare all of the names which are not declared in the current scope.
<KirkMcDonald>	not already declared*
<Guest64688>	KirkMcDonald: Aha!
<Guest64688>	That makes sense
<KirkMcDonald>	Guest64688: Thus, line 15 of your example declares a new 'err' in the current block, but does not redeclare 's'.
<Guest64688>	but is there a way to still access the vars from the outer scope?
<KirkMcDonald>	Guest64688: No. They are shadowed.
<mohae>	Guest64688: not if it's defined in the inner scope
<KirkMcDonald>	(Or maybe it's better to say "occluded"...)
<Chris_S>	I'm seeing a build failure for the current git master that I believe is not being spotted on the buildbots. Is there a good place to report this? Here?
<cespare>	Chris_S: no; file an issue
<cespare>	Chris_S: or write an email to golang-nuts if you want someone else to sanity check
<Chris_S>	If I'm right, anyone pulling git master and building on Unix as a non-root user will be seeing this right now, so I'll file an issue as soon as I've confirmed the exact changeset.
<cronos>	Chris_S: what's the issue?
<cronos>	perhaps it's something local for you
<Chris_S>	--- FAIL: TestSCMCredentials (0.00s): creds_test.go:60: WriteMsgUnix failed with write unix @-><nil>: sendmsg: operation not permitted, want EPERM. syscall/creds_test.go assumes a net.OpError.Err is directly syscall.EPERM, but I think commit 055ecb7be5805e07498488c59c6f01644fdacccc changed that. The entire test is conditional on UID != 0.
<cronos>	yeah, sounds like an issue
<Chris_S>	I assume buildbots either run as root or fake it in a virtualization environment/container/etc.
<eatingthenight>	mohae: I have it so it takes about 11 seconds now to parse a 3.2GB file.
*	cgrieger^away is now known as cgrieger
<mohae>	eatingthenight: how long was it taking before?
<eatingthenight>	about a minute
<mohae>	nice
<mohae>	eatingthenight: good job
<eatingthenight>	mohae: thanks for the help going to try and see if I can speed anything else up, maybe taking out the append new line will help since it does it every line.
<mohae>	eatingthenight: if you want further improvements, I think you'll need to profile
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 15:03:14 2015

**** BEGIN LOGGING AT Tue May 05 15:03:42 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<mohae>	eatingthenight: bytes,Buffer instead of append would be faster and less GC pressure
<Chris_S>	There, issue submitted. Thanks for the advice!
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 15:15:01 2015

**** BEGIN LOGGING AT Tue May 05 15:22:03 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<Moter8>	woah, ubuntu still has 1.2 in its repos
*	zz_flazz is now known as flazz
<nemith>	15.04 is 1.3.3 :(
<Aram>	just use the official binaries
<Aram>	or compile from source
<Aram>	it takes literally 30 seconds to compile.
<nemith>	just a pain to have another thing to manually update
<Moter8>	hmm, trying to set it up but it doesnt work
<Moter8>	ls /usr/local/go/bin exists
<Moter8>	echo prints out the correct path, yet go fails
<Moter8>	wait, there is no bin folder
*	foofoobar_ is now known as foofoobar
<Moter8>	nevermind, wrong archive
<mohae>	downloading the compiled tarball and extracting it takes 2 commands, which is the same as updating your repo and installing
<mohae>	more chars though
<st33med>	I don't see the point of rolling release if a lot of things aren't released with it up to date
<st33med>	Er monthly
<nemith>	mohae: for one package
<st33med>	6 months more like
<mohae>	for 1.5 a bit longer
<Moter8>	"rollign release"?
<Moter8>	ubuntu isnt rolling release
<mohae>	nemith: well, there's a lot of things for which the package manager isn't the best route.
<st33med>	I corrected myself
<Moter8>	aah
<mohae>	st33med: that's up to the package managers, not Go
<nemith>	mohae: like?
<Moter8>	sorry :)
<nemith>	i do agree that it's not Go's fault
<st33med>	Yep I'm aware mohae
<smw>	st33med, 6 months gives them time to do some quality control
<st33med>	Yep. Though 1.4 was released during that time.
<mohae>	I'd rather have 6mos than 6 weeks
<st33med>	Way before package freeze
<mohae>	st33med: package manager versions will usually be out of synch with current
<st33med>	Mhm
*	flazz is now known as zz_flazz
<Aram>	nemith: it's only once every 6 months though.
<Aram>	I agree it's non-ideal.
<Aram>	you should complain to Canonical.
<nemith>	not really.  That is major releases only
<nemith>	minor releases are more frequent
<Aram>	that is true.
<djx>	hey, does anyone have a repo with some sort of plugins implemented in go?
<Moter8>	uh, plugins?
<Moter8>	what are you looking for
<djx>	Moter8: not plugins FOR go, but a particular piece of software that has the possibility to have plugins
<djx>	Moter8: nothing in particular, I can't figure it out the best way to solve a problem that I have in my hands, I'm "studying" what's out there to see if there's anything that comes to my head
<Moter8>	Ah I see what you mean, sorry, I dont know of any
<zuz>	djx: I would imagine some large go project might support plugins, maybe fleet?
<djx>	Moter8: I'm having sort of a writers' block :-)
<djx>	zuz: looking at it
<djx>	zuz: coreos/fleet?
<mohae>	djx: packer uses plugins
<zuz>	Yes, I'm not well versed in the project structujre
<mohae>	or supports
<djx>	mohae: https://github.com/mitchellh/packer this packer?
<feliwir>	hi
<feliwir>	how do i use go on windows properly? the getting started guide doesn't say how to setup up workspace etc. on non unix platforms
<v0idcat>	djx: best bet is probably rpc
<djx>	v0idcat: the "normal" rpc or that is a go project?
<vzp>	why would I get a "bad map state" panic accessing a mutex guarded map?
<vzp>	go version 1.4.2 btw
<v0idcat>	djx: yes, normal rpc. load and unload "plugins" by spawning processes of your go programs and communicate between them and your "main" by rpc
<djx>	v0idcat: yeah... I really have to decide that too, if the plugins can be accessible by REST or whatever or a subroutine..
<bnagy>	feliwir: yes it does
<djx>	hmm or both...
<v0idcat>	djx: that's a different topic
<bnagy>	feliwir: it's just simpler than you maybe expected. You just set GOPATH and make sure the bins are in path.
<v0idcat>	djx: and in theory, while all still abstract at this point, "plugins" aren't directly accessible. your main process handles the communication between them and the world
<skelterjohn>	jmoiron: you around?
<skelterjohn>	or anyone else, experience using mysql + ssl cert + go client?
<feliwir>	bnagy: do i need to set it each time?...
<jmoiron>	skelterjohn: i've never used mysql w/ ssl from go
<djx>	v0idcat: yep
<skelterjohn>	jmoiron: oops, meeting, poorly timed question
<feliwir>	bnagy, doesn't say anything windows specific apart from that: https://golang.org/doc/code.html
<bnagy>	you said the getting started guide
<bnagy>	I am looking at a windows section, an MSI installer, instructions for setting your environment variables...
<feliwir>	yeah it doesn't say anything aswell.. it just links on that page
<feliwir>	i know how to set those, but i don't want to pollute all my environment variables^^
<bnagy>	none of the instructions in how to write go code are platform specific, they just describe a directory structure afaict
<hfaafb>	pollute your env vars with... one or two vars?
<bnagy>	you don't want to "pollute" your environment variables huh
<hfaafb>	are these real complaints
<feliwir>	:D
*	zz_flazz is now known as flazz
<esarl>	is there a way to map a function to an integer like map[int]func? trying to do something like this https://play.golang.org/p/DA_GhL7GP-  not sure how to get it to work
<bnagy>	esarl: make the function a type
<bnagy>	(I didn't look at your link sry)
<yalue>	Is there any case where a := myArray[:num:num] is not the exact same as a := mayArray[:num] ?
<smw>	esarl, you need to know the function signature
<esarl>	type shiftFn func(Date, int) Date <- i tried this and i got a syntax error lol
<cronos>	esarl: https://play.golang.org/p/inHwE-1JfB
<smw>	esarl, map[int]func(string) int would be a map of functions that take a string and return an int
<cronos>	esarl: that type is fine, your map declaration was wrong
*	badbox is now known as badmadrad
<cronos>	can't use := on package level
<esarl>	oh, oops
<esarl>	doh… haha thanks!
<cronos>	yalue: yes, when cap(myArray) != num
<mohae>	djx: yes
<bnagy>	I have never used full slicing :/
<bnagy>	is there a well known pattern for it?
<smw>	what is full slicing?
<mohae>	[:]?
<bnagy>	it's not instantly obvious to me why the cap is max-low
<bnagy>	blah[1:3:5]
<mohae>	oh, including the cap?
<smw>	bnagy, mostly good for memory allocation from a slab
<smw>	bnagy, something like memcache would probably find it very useful if it were written in Go
<smw>	bnagy, it allows you to build an allocator on top of Go.
<bnagy>	but how would the cap be used there?
<bnagy>	as opposed to doing arithmetic on low:hi
<smw>	bnagy, a client requests 5MB, you send it a 5MB slice of your memory and know they won't modify memory sent to other clients
<bnagy>	ok, but how is it better than sending them chunk[:5001] ?
<smw>	bnagy, as I said, memory allocation :-)
<bnagy>	ignoring real MB
<smw>	bnagy, they can't use append and expand chunk
<bnagy>	oh!
<bnagy>	ok, cool :)
<smw>	bnagy, I have never actually used it. But it has certain uses :-)
<bnagy>	and now why is it max - low ?
<smw>	why is what max-low?
<bnagy>	if I want to hand out chunk[5000:10000:10000] (to get cap 5000)
<bnagy>	I guess it's as intuitive as [5000:10000:5000]
<smw>	bnagy, because 0 is now 5000
<bnagy>	and less error prone
<bhenderson>	is the fact that range returns copies surprising to anyone else? http://play.golang.org/p/JRgIjj2LYW
<smw>	bnagy, no, it is much more intuitive, it is giving the cap as a position instead of a length
<hfaafb>	i'm sure its surprising to at least one person
<cronos>	not surprising at all
<bnagy>	smw: yeah ok I am getting it now. Thx :)
<smw>	bhenderson, assignment caused a copy of the value... that always happens
<yalue>	cronos, others, Thanks for the explanation. It makes sense now. I was just confused by the specification saying the syntax was "a[low : high : max]"
<yalue>	I didn't make the connection that "max" == "cap" in this case
<bhenderson>	smw: ah, interesting
<bhenderson>	didn't think of it like that
<Dani2981>	hi, I am using io.ReadFull and I got a EOF error. My reader is a network connection. This error happens in, lets say 20% of the connections. Anyone has a idea of what is the problem ?
*	r04r is now known as r04rjuggler
<smw>	Dani2981, you are getting disconnected?
<smw>	The server sent all of its data before you were ready?
<smw>	Dani2981, you are getting EOF or UnexpectedEOF?
<saml>	how do you generate rss or atom?
<Dani2981>	smw:EOF
<v0idcat>	saml: probably http://www.gorillatoolkit.org/pkg/feeds
<saml>	noice
<cronos>	Dani2981: is there supposed to be as much data as you ask it for sent?
<v0idcat>	!choice nice noise
<smw>	Dani2981, huh, you are not supposed to be able to get an EOF from ReadFull...
<cronos>	smw: "The error is EOF only if no bytes were read"
<smw>	cronos, ah, didn't see that
<Dani2981>	cronos: yes, it is only 4 bytes. this 4 bytes are a indicator of the size who comes after.
<cronos>	so yeah, presumably closed connection
<bnagy>	closed reader?
<saml>	no, gorilla feeds don't have many fields like.. <category>
<Dani2981>	cronos : this is a server application. I am pretty sure I did no close the connection on the server side.
<bnagy>	those wacky bidirectional comms protocols
<cronos>	client disconnected then
<cronos>	or if you have some weird load balancer it can kill connections after some timeout
<Dani2981>	It is a very simple file transfer server. I did receive 4 bytes with the size of the file. to this I make a readfull. after this I do another readfull with the size encoded on this 4 bytes.
<Dani2981>	cronos : no load balancer,
<bnagy>	you might want to try not ReadFull for that protocol, fwiw
<bnagy>	but not saying it's related to your problem
<cronos>	Dani2981: wait, so you attempt to read up to 4GB into memory?
<cronos>	doesn't sound safe
<cronos>	stream your stuff and use io.LimitReader
<cronos>	or better io.CopyN
<feliwir>	what exactly does this mean:
<feliwir>	E:\Development\GoDev>go get github.com/go-gl/glfw/v3.1/glfw
<feliwir>	# github.com/go-gl/glfw/v3.1/glfw
<feliwir>	cc1.exe: sorry, unimplemented: 64-bit mode not compiled in
<cronos>	i like how it apologizes to you
<Dani2981>	cronos: you are right. 4 bytes is too much. but no the files are  200k or 300k max. Pictures send from a android application. No need to 4 bytes to encode the size.
<feliwir>	yeah, but it doesn't say anything after in
<sauerbraten>	I tried using pprof (following that blog article on benchmarking), but "top" in pprof only gives me this: http://pastie.org/10161726
<sauerbraten>	what's wrong there?
<bnagy>	sauerbraten: osx?
<cronos>	Dani2981: there's still no point in loading all 300KB of image into memory
<sauerbraten>	bnagy: nope, ubuntu 14.04.2
<sauerbraten>	go1.4.1
<bnagy>	ok I guess I need to click the link then :(
<bnagy>	wait, can't, pastie
<bnagy>	sorry
<cronos>	can't?
<sauerbraten>	wot
<bnagy>	rigid ethical strictures
<sauerbraten>	bnagy: http://pastebin.com/8kWaHRWe
<feliwir>	anything about my issue?
<igors>	hello. Is there any command line tool to, given an interface, show me which types implement this interface in a given package?
<bnagy>	feliwir: something is 32 bit when it should be 64
<cronos>	igors: https://github.com/dominikh/implements
<bnagy>	sauerbraten: isn't it top N ?
<bnagy>	haven't used it for a while...
<igors>	cronos: perfect, thanks :)
<feliwir>	bnagy: but what exactly? my OS is 64bit and the go installation aswell
<sauerbraten>	bnagy: top10 gives the same
<bnagy>	huh.
<cronos>	your c compiler probably
<Dani2981>	cronos : I undestand this. I will change to it read not all in the memory on the next version. But my issue is on read the first 4 bytes.
<feliwir>	i just compiled the go msi thing... I didn't mess with any C compilers
<cronos>	Dani2981: as i said, most likely your client closes the connection
<bnagy>	feliwir: are you using all the things glfw says you need to use?
<feliwir>	https://github.com/go-gl/glfw
<bnagy>	go 1.4 or a specific mingw?
<feliwir>	it only says i should use go get
<feliwir>	i use go 1.4
<Dani2981>	cronos: this is the code I use to send the file. It is java, it is without the error handling. https://gist.github.com/anonymous/6ea66caac79d61332590
<feliwir>	go version go1.4.2 windows/amd64
*	SvenDowideit is now known as Guest29442
<Dani2981>	cronos : In fact I close the connection just after I send my file. Should I expect a server answer before close it ?
<bnagy>	feliwir: and you have mingw etc?
<cronos>	Dani2981: i don't know, depends on what your protocol is
<feliwir>	bnagy: i have a mingw installation, but i don't see how it is related to go^^
<cronos>	i was under the impression that your server reads multiple files on that connection
<bnagy>	feliwir: isn't this a binding lib?
<cronos>	Dani2981: you should at least log when your client disconnects so you can match one of those EOFs on server with client disconnect
<feliwir>	bnagy: it's a c binding yea, but the repository says i don't have to compile the binding myself
<Dani2981>	cronos: no just one file per connection.
<feliwir>	Quote: Installation is easy, just go get github.com/go-gl/glfw/v3.1/glfw and be done (GLFW sources are included so you don't have to build GLFW on your own)!
<bnagy>	how is it going to build Gl source without a C compiler?
<bnagy>	confused
<Dani2981>	cronos: there are no standart protocol involved. in fact I am defining the protocol.
<cespare>	feliwir: you need a 64-bit compiler
<cronos>	well then you have to define whether your server sends the response or no ;)
<cespare>	C compiler
<cespare>	feliwir: those GLFW sources are C code that is failing to compile because you do not have the appropriate compiler
*	cgrieger is now known as cgrieger^away
<feliwir>	cespare, can i use the 64-bit msvc compiler somehow?
<cespare>	feliwir: I'm about 75% sure the answer is no, but I really don't know much about windows
<Dani2981>	cronos: the client disconnects just after it send all the file. On line 10 of the gist file. https://gist.github.com/anonymous/6ea66caac79d61332590 This is a problem ?
<cespare>	feliwir: (pretty sure you want MinGW)
<cronos>	nope, looks reasonable, as long as that socket implementation is reasonable and blocks write until all packets were acked
<bnagy>	Dani2981: also slightly OT but check eg netstrings
*	r04rjuggler is now known as r04r
<bnagy>	if you want a very light wire encoding with more than zero checking opportunities
<feliwir>	cespare: i have mingw32. I don't see any official mingw64 or sth like that
<secrettriangle>	Hey, so I'm trying to check if &s != nil, but it's returning true even when it's not
<cronos>	Dani2981: i don't remember enough java to help you on the client side. i could at most look at your server code and try to catch any issues
<cronos>	secrettriangle: what's s?
<cespare>	feliwir: ah. Well, that's where the "sorry" error is coming from, probably :)
<cronos>	secrettriangle: a string?
<cespare>	feliwir: some googling does seem to indicate that there is a 64 bit mingw
<feliwir>	yeah i am installing something promising
<feliwir>	http://sourceforge.net/projects/mingw-w64/
<bnagy>	Dani2981: and not to teach you to suck eggs but this sounds like around the point where a packet sniffer comes in handy
<gerep>	Hi all, I'm reading this post about errors http://blog.golang.org/error-handling-and-go and I came to this line: "The fmt package formats an error value by calling its Error() string method. " My doubt is, how does Println knows the variable is an error instance?
<bnagy>	30 seconds with wireshark can save an hour :P
<cespare>	feliwir: did you try the official installation instructions?
<cespare>	feliwir: http://www.mingw.org/wiki/Getting_Started
<cronos>	gerep: type assertion
<secrettriangle>	cronos: a struct
<feliwir>	cespare: are you sure i need mingw? Couldn't i just get gcc.exe
<cronos>	secrettriangle: well, if s is struct{something} it can't be nil
<gerep>	cronos: ok, thanks ;)
<cronos>	secrettriangle: it is a struct somewhere in memory even though the fields may not be set
<cespare>	feliwir: no, i'm not sure of anything to do with windows
<cronos>	so &s will always return non-nil
<Dani2981>	bnagy: what I am doing is something like netstring, but in a binary way.
<bnagy>	Dani2981: yeah except without anything that lets you check errors
<cronos>	Dani2981: bnagy's suggestion is most promising, wireshark it
<Dani2981>	cronos: I want to forget java too and only work on go. but on the android side it is not possible.
<bnagy>	it is! :D
<cronos>	well, that's not exactly true
<cronos>	you can run go code on android
<bnagy>	well you still do need to mess with java
<bnagy>	but you can write large chunks of your stuff in go
<feliwir>	got it :D
<bnagy>	and the new android stuff lets you provide Java devs with a JNI onto go stuff
<bnagy>	which is pretty slick
<cespare>	feliwir: cool :)
<Dani2981>	bnagy: can try to sniff the packets but it looks so simple to need all this.
<bnagy>	ime inter-language client server is never simple :`(
<feliwir>	thanks guys
<bnagy>	feliwir: gluck
<secrettriangle>	cronos: so how should I check if it's 'nil'?
<bnagy>	secrettriangle: structs can never be nil, pointers can, although they can also be typed nil
<bnagy>	secrettriangle: start with fmt.Printf("%#v\n", thing) and see what's actually happening
<secrettriangle>	I see it being printed out with empty values, yes
<cronos>	sacktown: you can't, you can at most compare it to an empty struct
<secrettriangle>	But what I don't understand is how to check if the value is 'empty'
<cronos>	if s == stypeP{} {blabla}
<cronos>	compare it to an empty value
<bnagy>	secrettriangle: if you did exactly what I typed you'd see the type and everything
<Tv`>	secrettriangle, cronos: usually at that point you want a pointer
<cronos>	yeah
<feliwir>	is anyone here using notepad++ for go?
<bnagy>	XD
<Dani2981>	bnagy and cronos: looks like the problem is the connection close on the client side. I just made a tests where I add a sleep of 2 seconds before the connection close and no more errors.
<cespare>	feliwir: i used to use notepad++ for all my code. That was ~10 years ago though
<cronos>	Dani2981: perhaps there is some "flush" method or something on that socket
<feliwir>	cespare: so what texteditor are people using for go? I'd  like syntax hightlighting :D
<cronos>	vim!
<feliwir>	i looked at this: http://www.vim.org/ Looks a bit oldschool though :D
<cespare>	feliwir: I use vim. Maybe check out sublime text + gosublime?
<fozz_>	I use sublime and gosublime +1
<bnagy>	ST is a great option if you don't want to spend 20 years learning vim
<fozz_>	vim has some great plugins alo
<cronos>	yeah, if you're not willing to spend weeks learning how to use your editor, try sublime
<fozz_>	*also
<cronos>	that visual studio code looks promising too actually
<cronos>	but way too immature atm
<bnagy>	Dani2981: that sounds like a weird client TCP stack, but yay!
<Dani2981>	bnagy and cronos: so I think the real solution is to get a ACK on the protocol. After the server read all data it send one ok or error byte. The client must read this byte before close the connection.
<bnagy>	Dani2981: sleep is going to be fragile though
<bnagy>	yep, you're on it. Cool :)
<deniska>	I learned basic vim to be already more productive than in your average single mode editor in like a week =)
<cronos>	sounds like a good approach Dani2981
<Dani2981>	bnagy : yep, sleep is fragile. just post about a Ack message.
<deniska>	The hardest part was actually learning to launch vim instead of gedit =)
<deniska>	I even considered making an alias
<feliwir>	gosublime only adds a commandline to sublime? :D
<bnagy>	*shrug* I don't know what an "average single mode editor" is
<Dani2981>	cronos : in fact I want the server send back a sha1 hash of the file to be sure it arrived correctly.
<deniska>	bnagy: pretty much every editor. Except for emacs and vim =)
<bnagy>	but I used vim pretty much daily for 20 years and 2 months with ST I'm more productive
<mischief>	:|
<bnagy>	so I am asserting personal incredulity
<cronos>	Dani2981: that's fine too, although TCP should handle that for you
<bnagy>	it takes two weeks just to set up a new vimrc :)
<deniska>	Well, to each its own. But if you use vim, learn more keys than hjkl :P
<bnagy>	anyway I still love vim and there are lots of times when you're on tty
<deniska>	And writing vimrc is a gradual process =)
<bnagy>	yes
<bnagy>	which is why your one week claim is bullshit
<tjscanlon>	Hi everyone, reading through go style guidelines: should struct members be in Pascal Case? (e.g. VariableName instead of variableName)
<tjscanlon>	I couldn't find it anywhere in the guidelines but I saw it was Pascal Case in the few open source projects I looked at.
<cronos>	pascal case? heh, never heard that one
<cronos>	tjscanlon: no, it all depends on whether you want them exported or no
<tjscanlon>	Ahhh.  So a variable will be "private" if it begins with a lower case and public if it begins with a capital?
<tjscanlon>	I saw that's the case for structs.
<cronos>	yep
<Tv`>	tjscanlon: http://tour.golang.org/
<cronos>	that's the case for all top-level identifiers
<Tv`>	well, tour doesn't explicitly say it's true for struct fields
<Tv`>	but Go tends to follow very few rules, uniformly
<Dani2981>	bnagy and cronos: just implemented the ACK on client and server. It is working fine now. Thanks for the help.
<bnagy>	Dani2981: your protocol still scares me ;)
<bnagy>	btw did you switch to CopyN or LimitReader at the server?
<Dani2981>	bnagy : why ? I think keep it simple is the best. And in fact as I say I will make some improvements on it. But what is your idea ? Use something like protobuf ?
<bnagy>	noooo protobuf way too heavy
<feliwir>	hm, when i execute build in sublime text it wants to do this command: go run go install github.com/feliwir/gogame
<feliwir>	is this even a valid command?
<bnagy>	I just get nervous when I have no way to validate the size, but I guess there's nothing _wrong_ with your 4 byte size
*	bnagy netstrings fanboy
<bnagy>	doing limits at the server is more of an issue
<bnagy>	because despite the size a malicious client can just keep pumping data at you if you use ReadFull
<Dani2981>	bnagy : I understands you concerns. But I can close the connection if I see a too big size without problems, right ? And as I say before to read the full content I will not read the full content on memory with readFull.
<cronos>	"seeing too big size" is exactly what io.CopyN will help you with
<Lopson>	Hi everyone! Does anyone in here have any sort of experience with GCCGO and using it to get a C program to use Go functions? I've read the setup page, put I can't get it to work as intended.
<sciffer>	Hi, If I issue os.exit(1) form a function that runs asynchronously - will it close the whole application or just the function itself?
<sciffer>	I'm asking since the function run's in it's own 'thread', anyone knows the answer?
<hyphenated>	sciffer: it'll exit everything immediately
<cronos>	sciffer: os.Exit terminates the process
<Tv`>	sciffer: documenation. http://golang.org/pkg/os/#Exit
<Tv`>	"immediately" is a strong word
<Tv`>	and "program", too
<sciffer>	Is it O.K. to do that from such a function instead of using channel to notify the parent that an error occurred and it should close
*	Guest24 is now known as lele
<sciffer>	The documentation is not very clear as to whether it can be done from such function (It's just says that deferred functions will not run, the async function has it's own deferred functions that will surely not execute).
<hyphenated>	sciffer: it's a bit rude and brutal, compared to erroring out, logging something meaningful and then exiting
<vzp>	any ideas why I would get a "fatal error: bad map state" panic when accessing a mutex guarded map?
<belak>	Are there any good packages for converting between two units of measurement?
<SaidinWoT>	vzp: sample code?
<Tv`>	belak: https://github.com/dustin/go-humanize
*	xinjiang is now known as xinjiang__
<Tv`>	vzp: sounds like you didn't guard it with a mutex
*	jasdel is now known as Guest55254
*	ebonics_ is now known as ebonics
*	veonik is now known as timeshifter
*	timeshifter is now known as veonik
<robot-beethoven>	what's a good way to revese a (non-sorted) []float32?
*	jasdel_ is now known as Guest40492
<duey>	reverse?
*	Guest40492 is now known as jasdel__
<duey>	do you mean sort in descending order?
<duey>	or loop over the array in reverse order?
<cespare>	robot-beethoven: for i := 0; i < len(f)/2; i++ { f[i], f[len(f)-i-1] = f[len(f)-i-1], f[i] }     ?
<cespare>	may be buggy
<cespare>	and would be nicer without len(f) etc
<robot-beethoven>	lets's say `len(mySlice) == 3`.  I'd like the index formerly known as 0 to now be 2, and so on...
<Tv`>	https://github.com/golang/go/wiki/SliceTricks
*	jasdel__ is now known as jasdel
<duey>	ah
*	xinjiang__ is now known as xinjiang
<vzp>	Tv`: I did and it is clear from the stack trace, called function calls Lock and defer Unlock in first 2 lines
<robot-beethoven>	Tv`: did you just add that "Reverse" section to the wiki?
<robot-beethoven>	or did i just not scroll down enough when i checked it a minute ago
<Tv`>	vzp: you claim to have clearly aimed the shotgun at the target, but that does not rule out that you put your foot in between the muzzle and the target
<cespare>	vzp: really would need to see code to give much helpful advice.
<vzp>	cespare, Tv` : I know, trying to simplify code so I can share it
*	e-dard is now known as e-dard_afk
*	flazz is now known as zz_flazz
<mohae>	robot-beethoven: it's been there
*	momomomomo_ is now known as momomomomo
*	zimbatm_ is now known as zimbatm
*	vishwin60 is now known as vishwin
*	mitchell__ is now known as mitchell_
*	PSG_Luna_ is now known as PSG_Luna
*	jstimatze_ is now known as jstimatze
*	c9sould___ is now known as c9sould__
*	neunon_ is now known as neunon
*	akitada_ is now known as akitada
*	ahmetalpbalkan_ is now known as ahmetalpbalkan
*	fpauser_ is now known as fpauser
*	benoitc_ is now known as benoitc
*	GeertJohan_ is now known as GeertJohan
<mwhudson>	iant: i guess i missed the chance to rewrite ld to use debug/elf for all the types and constants before the freeze
<iant>	mwhudson: yes, I think so
<mwhudson>	ah well
<iant>	there is still time to finish up all the -buildmode=shared work, of course
<iant>	is the support in yet for verifying that the hash code of the shared library matches at link time and runtime?
<mwhudson>	no
<mwhudson>	that's today's job
<iant>	awesome
<mwhudson>	be warned i've been saying this for a few days :)
<mwhudson>	but i think i should actually get to it today
<iant>	ok....
*	AmandaC hands iant some duct tape and a location to a seculeded place on the power grid
<mwhudson>	(just testing my latest version of that PCREL change before letting the trybots at it)
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 18:54:44 2015

**** BEGIN LOGGING AT Tue May 05 18:59:57 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<bnagy>	SpNg: convention is to use pointers when you need nil to have a usefully different meaning to zero-value member
*	veonik is now known as veonik_
*	whyrusleeping1 is now known as whyrusleeping
<SpNg>	bnagy: ok. well I guess that’s my problem in a nutshell
<bnagy>	but I thought that was what omitempty was for
<SpNg>	bnagy: no, omitempty fails when I need to set a string to “”
<bnagy>	well that's a value
<SpNg>	but it works if I want to set a *string to “”
<mohae>	a string's zero value is ""...
<SpNg>	omitempty will omit a string with value of “”
<mohae>	because it
<SpNg>	so when I want to say change a title:”foo” to title:“” it wont work
<bnagy>	on a *string?
<mohae>	because that's empty
<mohae>	*string would be nil
<SpNg>	mohae: yeah, that’s why I’m considering changing title string to title *string so I can leverage omitempty
<mohae>	SpNg: doesn't sound like you want to omit empty in that situation
<SpNg>	mohae: when I’m persisting the data to mongo, I’m only sending in the delta, so I would need to omitempty
<quiznilo>	REST makes no sense
<SpNg>	quiznilo: haha. is that directed at me?
<quiznilo>	it possibly doesn't make sense to me because it piggy-backs on already existing HTTP verbs I've used to deal web pages
<mwhudson>	iant: i don't know, maybe it's the fault of my change or something odd about my syste,
<mwhudson>	m
<quiznilo>	no
<cespare>	mwhudson: a bug was filed a bit earlier
<bnagy>	SpNg: http://play.golang.org/p/3lWycheSrx this is how I thought it worked
<quiznilo>	SpNg: I've been reading some article about REST and Go for awhile now... they seem to assume you know all about REST already
<bnagy>	why is that not what you want?
<mwhudson>	cespare: i see the golang-dev thread, is there a bug too?
<mwhudson>	oh yes
<mwhudson>	yay for processing mail at a million miles per hour
<SpNg>	bnagy: minor change to the omitempty: http://play.golang.org/p/PDvjygsXCM
<bnagy>	uh.. if you like
<SpNg>	quiznilo: I feel ya. I have perosnally found that REST is very idealisitic.
<Tv`>	quiznilo: it's ok, most people who write REST services don't now REST
<SpNg>	bnagy: the difference is in the output. your version was not implementing omitempty
<quiznilo>	lol
<bnagy>	SpNg: ah :)
<mwhudson>	iant: do you have an opinion about https://go-review.googlesource.com/#/c/8685/ ?
<mohae>	SpNg: from the behavior you describe you want from a string element, there's no need for it.
<mwhudson>	iant: it's sort of an unsupported use case
<bnagy>	derp
<tucnak>	why is it called #go-nuts?
<tucnak>	I mean, why nuts?
<iant>	mwhudson: I hadn't looked at it for some reason
<iant>	I guess I missed it
<quiznilo>	'nuts' as in synonymous with 'fanatics'
<quiznilo>	'enthusiasts'
<iant>	Oh, I didn't really look at it because the comment says it doesn't really work
<quiznilo>	also, it's a double-entendre
<tucnak>	quiznilo: alright, that makes sense
<mwhudson>	iant: it's been sitting in my repo for ages but i haven't really thought about it for a while
<quiznilo>	as in... go crazy
<mwhudson>	iant: i should either push or abandon it, can't make up my mind :)
<quiznilo>	as in, don't take the channel to seriously, people here aren't too stuffy like some other language-based channels, I won't mention
<quiznilo>	java
<quiznilo>	actually, I don't know anything about the java channel... I've had some really bad experiences in the javascript channel though
<tucnak>	quiznilo: >After mentioning that I was thinking of using Redis (being used in conjunction with twemproxy, smitty, and Redis Sentinel) as read-only storage for the endpoint data, #go-nuts user kaos` on freenode suggested that I eat "mashed glass".
<quiznilo>	well yeah, you'll find strong opinions here... that's for sure
<tucnak>	hehe
<quiznilo>	I'm sorry he was rude to you
<tucnak>	not to me in fact
<tucnak>	that's a quote
<iant>	mwhudson: in so far as I understand CL 8685, it doesn't seem like something we want to encourage
<iant>	at least not yet
<tucnak>	just was damn so fun, I was laughing out loud for some time
<quiznilo>	ya hehe
<mwhudson>	iant: fair enough
<mwhudson>	iant: finally for now, i still don't understand quite what you mean at https://go-review.googlesource.com/#/c/8773/17/src/cmd/6l/asm.go@141
<iant>	mwhudson: I don't really understand what I wrote either
<mwhudson>	iant: that makes me feel better :)
<iant>	mwhudson: but what I'm hoping is that we can avoid generating the call
<iant>	mwhudson: instead, just generate a variable
<iant>	a struct that holds the local hash value and a pointer to the symbol from the shared library that holds the shared library value
<mwhudson>	iant: that would be nice
<iant>	maybe I wrote "slice" where I meant "struct"
<mwhudson>	iant: well we have the moduledata already
<iant>	good, let's use that
<mwhudson>	iant: so we could put the hash in the module data, and have a reloc point another field to the global variable (defined by the object linking to the shared library)
<iant>	right
<mwhudson>	so then addmoduledata can just compare them
<iant>	yes
<iant>	sgtm
<mwhudson>	ok good, i think that can work
<iant>	biab
<mwhudson>	of course addmoduledata is currently written in assembly following the platform abi but well we can work with that
<iant>	don't harsh my mellow
<mwhudson>	:)
*	mwhudson goes for a walk
<eparis>	So I'm in a place where if I get an error back from a function it means that the CODE is wrong. Ex my code requires a comma seperated list but someone using my code passed in a dash seperated list. I'd probably use an assert() in C, to make it blindingly clear it wasn't the user's fault and be able to get a clean backtrace/coredump.  In golang, best I can do is just propogate up an error, huh?
<eparis>	this is not something the user of the code has ANY control over.
<quiznilo>	wait
<quiznilo>	if the user passed in data in the wrong format, that's the user's fault, no?
<hfaafb>	even if the user passed it in correctly, its still the users fault
<quiznilo>	lol
<eparis>	quiznilo: i'm writing a library, it the programmer who uses it passes in an invalid default value, it a programming problem, I'd typically handle that different in C, that if the USER passed in a different value
<quiznilo>	I can't answer his question because I don't know anything about C or assert(), so I'll shut up
<eparis>	quiznilo: basically assert() just exits immediately and dumps core
<quiznilo>	like panic()
<quiznilo>	no?
*	eparis goes to look
<mohae>	error would be much friendlier in that situation
<mohae>	and if the dev uses your library wrong, it's on the dev
<eparis>	mohae: totally on the dev, agreed
<quiznilo>	you can creat some custom error, and detect it and print out hints and crap
<quiznilo>	I dunno
*	eparis goes to read defer-panic-and-recover
<mohae>	just return an appropriate error
*	eparis probably just uses a custom error message
<mohae>	better than panicing
<mohae>	yo, I thought errors were too messy so I decided to give you this stack trace instead and abend
<eparis>	but programmers (who screwed it up) can use stack traces.
<quiznilo>	I'm just saying, his description of assert() sounds to me like panic()
<eparis>	quiznilo: i think it is.  now i have to decide if I want to use it
<eparis>	(although panic() is WAY more powerful)
<mohae>	quiznilo: it is, I'm just saying it's silly to panic in this situation
*	st33med panics 
<mohae>	it's an error, treat it as such
<quiznilo>	or an error message "Err: Data is in invalid format"
<quiznilo>	can get it as fancy as you want
<st33med>	What situation?
<mohae>	when you forget your towel st33med
<st33med>	Fuck.
<st33med>	Well don't panic
<mohae>	Don't Panic!
<mohae>	heh
<darius93>	whats the best way to do something similar to enum in go?
<st33med>	enum?
<mohae>	iota
<st33med>	enum T { i := iota, j, k...
<st33med>	iirc
<st33med>	Oh wait
<st33med>	Const ( i = iota; j; k; ...
<st33med>	http://stackoverflow.com/questions/14426366/what-is-an-idiomatic-way-of-representing-enums-in-golang
<r00trunner>	what should i prefer? http://ix.io/iiV
<darius93>	thanks
<quiznilo>	either is idiomatic
<darius93>	r00trunner, i always do option 2. i find it cleaner to look at
<darius93>	but both work just the same
<r00trunner>	darius93: yes, that's what i thought, too
<r00trunner>	darius93: yeah, i know both work. just wanted to here some opinions
<mohae>	https://godoc.org/golang.org/x/tools/cmd/stringer
<quiznilo>	hate consts
<quiznilo>	magic crap
<quiznilo>	I've never seen a const that didn't belong in some conf file instead
<Tv`>	wat
<Tv`>	this just in: max value an int can store should be configurable
<mohae>	quiznilo: so these should be in conf files? http://golang.org/src/text/template/parse/node.go
<quiznilo>	lol!
<quiznilo>	your choice, if you like brittle apps
<thun_>	I have main.go with this code... https://play.golang.org/p/P1Cisk9dPH
<mohae>	might want to send a note to the Go team to warn them
<quiznilo>	the largest int is driven by inviolate mathematical properties
<thun_>	Here is the hello.go https://play.golang.org/p/_e8ceJzvB4
<quiznilo>	it's hardly magic
<thun_>	When I run I get ./main.go:6: undefined: Hello
<mohae>	quiznilo: you still haven't addressed why const usage in stdlib should be in conf files instead
<andreas_kushner>	joushou: yesterday you mentioned that Go excels at the type of thing I was using apache for. i meant to ask if you agreed with the opinion in this blog post http://www.mikeperham.com/2015/01/05/cgi-rubys-bare-metal/ which basically  recommended using apache and cgi to create a more stable ecommerce setup?
<mohae>	thun_: because you don't have a Hello() function
<Tv`>	quiznilo: sounds like not configurable, then...
<thun_>	mohae: it is in another file called hello.py
<mohae>	thun_: oh, we're in #python?
<thun_>	doh
*	Guest29442 is now known as SvenDowideit
<quiznilo>	I'm sorry, I don't know bitwise ops, but will the solution to '1<<63-1' ever change?
<thun_>	mohae: https://play.golang.org/p/IYegzEwHBb
<thun_>	two simple files in one dir, I type go run main.go
<Wrecker>	Guys, I need 1-2 Gophers for a decent sized project.  Msg me if you're interested..
<mohae>	thun_: just how do you expect Go to use the python file?
<Tv`>	quiznilo: 1. who said 63  2. why should i repeat that
<thun_>	it is not .py
<Tv`>	quiznilo: 3. how is my poor reader supposed to intuit the meaning
<thun_>	it is .go -- just been coding in python all day
<mohae>	thun_: oh
<mohae>	thun_: go run only runs the file specified
<mohae>	or fiiles
<quiznilo>	I'm saying... good point Tv`
<quiznilo>	but this isn't quite what I was talking about
<Tv`>	quiznilo: yes, you were spouting your mouth off ;)
<thun_>	It does not auto include all files with same package name?
<quiznilo>	meh
<Tv`>	feel free to make a valid point...
<Tv`>	thun_: use go build
<mohae>	thun_: you specified the file, why would it use files other than what you tell it to?
<mohae>	and what Tv` said
<thun_>	mohae: Are you saying go I have to manually include all files of the same package?
<Tv`>	thun_: no. use go build.
<quiznilo>	you do if you use 'go run'
<bnagy>	thun_: you should try go build
<Tv`>	thun_: oh and whatever shitty blog told you to use go run, ship the author a box of poo
<mohae>	thun_: if you want to use go run yes, because it's not designed to do what you are doing
<bnagy>	don't know if anyone has mentioned yet
<mohae>	I hear there's a site for that!
<Tv`>	mohae: i recommend organic, locally sourced poo for all your shipping needs
<thun_>	 go build main.go -- ./main.go:6: undefined: Hello
<quiznilo>	s/Hello()/main()
<Tv`>	thun_: http://golang.org/doc/code.html
<quiznilo>	all go apps need a 'main()'
<Tv`>	quiznilo: so not his problem
<mohae>	Tv`: I knew my dog would be useful for something
<quiznilo>	it is for the go playground link he posted
<mohae>	which isn't really the problem he's having
<bnagy>	thun_: just go build
<bnagy>	then enter, I guess
<quiznilo>	[Enter]
<thun_>	bnagy: ty
<andreas_kushner>	ok, person I was speaking to yesterday doesn't appear to be here (or declined to answer :), anyone else agree or disagree with opinion  in this blog post http://www.mikeperham.com/2015/01/05/cgi-rubys-bare-metal/ which basically  recommended using apache and cgi to create a more stable ecommerce setup?
<Tv`>	andreas_kushner: my response is "lol cgi"
<cespare>	andreas_kushner: wrong channel?
<Tv`>	also, this person thinks CGI has something to do with bare metal, what a rockstar ruby ninja
<andreas_kushner>	ok, thank you. The person who wrote that blog post is an experienced backend dev (and also creator of a golang based monitoring system Inspeqtor)...
<Tv`>	andreas_kushner: no, he's not
<Tv`>	or he fails to communicate it pretty spectacularly
<bnagy>	. o O ( popcorn.gif )
<quiznilo>	:allears:
<andreas_kushner>	cespare: well, I was on here yesterday asking about implementing the idea in go using its cgi library, and joushou made a remark that I didn't really need to use Apache because go excels at this type of work, so I wanted to show him the blog post
<cespare>	andreas_kushner: that post is about ruby
<bnagy>	BEAR METALLLLL \m/
<andreas_kushner>	cespare: so although the blog post is about ruby/apache, the context is go apache -- although you may still think it's wrong channel
<cespare>	andreas_kushner: it may make sense in ruby land (but I doubt it); it definitely doesn't make sense here
<cespare>	Don't use cgi
<bnagy>	I've used nginx and fastcgi before
<bnagy>	it's fine. You'd only do it if you had some weird requirement not to serve from go, though, imho
<bnagy>	like maybe they had an existing big nginx thing and wanted to add a route to a dedicated go thing
<Freman>	http://play.golang.org/p/ZYSa4AsKQP <- why is size3 not calling ByteSize.UnmarshalXML?
<Tv`>	bnagy: even then, proxy
<bnagy>	or that, proxy is kind slow and irritating, no?
<Tv`>	bnagy: i challenge you to make a thing slower than cgi
<bnagy>	fcgi
<Tv`>	*f*
<cespare>	Tv`: ruby
<Tv`>	cespare: wrong axis
<bnagy>	fcgi is not cgi
<Tv`>	and it's also *f*aster
<bnagy>	yeah, that's what I said I did :)
<bnagy>	I don't know about speed vs proxy tbh
<Tv`>	oh, i did misread that one
<bnagy>	but I would be surprised if proxy was much faster
<Tv`>	must be the PTSD kicking in
<bnagy>	and it's irritating to set up, fcgi was line one line in the conf and restart
<Tv`>	bnagy: proxy can be faster by just being more modern and well-specced code; the fcgi protocol is funky. but i did totally read that as "cgi".
<bnagy>	but I only did it that was because customer insisted on nginx owning the external port
<andreas_kushner_>	Tv` Tv` leaving aside the "bare metal" issue, he makes a point that with his setup he's only got one piece of tech running24/7 (Apache) which he says results in increased stability - you don't agree with that?
<Tv`>	bnagy: well, actually, i didn't read the line from you about fastcgi, without it my comments make sense ;)
<bnagy>	well he has two, surely
<bnagy>	because he's got his rubby at the other end of the cgi
<quiznilo>	it's an extra layer that is unnecessary
<cespare>	andreas_kushner_: ruby apps are famous for having memory leaks an other issues
<Tv`>	andreas_kushner_: my web server process is simpler than apache and has significantly fewer moving components than apache+cgi+ruby+whatever
<bnagy>	imvho I am not an apache fan, I like nginx
<cespare>	andreas_kushner_: restarting them regularly is very typical
<cespare>	andreas_kushner_: again, this stuff probably makes way more sense in ruby-land
<bnagy>	native ruby webserver is not going to be an option
<bnagy>	native go webserver very much is
<cespare>	bnagy: sure it is, guts are just written in C
<cespare>	bnagy: even in ruby, it's typical to use reverse proxy to unicorn or whatever
<bnagy>	I don't know which comment you're arguing with
<bnagy>	you think a native ruby webserver is an option?
*	r04r is now known as zz_r04r
<cespare>	bnagy: ruby code basically always means C code too
<cespare>	bnagy: so no, "native ruby" isn't, but it's not really a thing at all
<bnagy>	I just thought that article was about avoiding rack and rails / sinatra / whatever
<Tv`>	how still utterly irrelevant to Go
<bnagy>	why does ruby code always mean C code?
<cespare>	bnagy: oh, maybe.
<Tv`>	wow millc.org has "choose {}"
<bnagy>	I think you're thinking I don't know ruby, and you're mistaken, sry :/
<Tv`>	funky abuse of C ;)
<cespare>	bnagy: I'm assuming mri. If you're in jruby, then you're using a whole different set of libs
<qwebirc330862>	Tv` can you share your simple server process
<Tv`>	qwebirc330862: most of it is known as net/http
<qwebirc330862>	I lost connection
<bnagy>	anyway, we've been rightly pinged for being wayyyy OT
<Freman>	strange... when I make a similar structure using type ADDR net.IP it works... but not ByteSize
<qwebirc330862>	Tv` "most"
<qwebirc330862>	Tv` you don't use nginx or anything?
<qwebirc330862>	is there a way to view logs if I lose connection?
<Radar>	qwebirc330862: http://botbot.me/5/log
<quiznilo>	you can log anything you want
<quiznilo>	heh... bots everywhere
<quiznilo>	oh!  IRC logs... duh
*	quiznilo leaves
<andreas_kushner>	so using net/http without anything like nginx would be perfectly fine in your opinion?
<veegee>	andreas_kushner, please dont
<veegee>	you should always use nginx
<andreas_kushner>	veegee: don't what?
<veegee>	don't stick a go app fully exposed without nginx
<veegee>	unless you have a very good specific reason for it
<cespare>	veegee: disagree
<smw_>	andreas_kushner, I always stick my app behind something. Sometimes a ELB, sometimes nginx, etc
<Tv`>	veegee: http://www.quickmeme.com/img/8f/8fc1ca3c719455b43670ca7dd37387a25605baf19b094da17b305685cd0f02ca.jpg
<veegee>	im sure there are many that disagree, but there are many more that agree with me
<smw_>	andreas_kushner, at least if it is serving random people on the internet. If it is serving myself or a small subset of people, I do
<veegee>	then there are just a small fraction which post links to pointless memes
<Tv`>	veegee: nicely articulated with great justifications
<veegee>	Tv`, sometimes just showing up is enough
<veegee>	don't have enough time for a long explanation, but im hoping that andreas_kushner will be aware of the disagreement and do further research of his own
<Tv`>	anyway, given the choice, with no other requirements, run less software
<teepark>	I'm running a rest server that has a slow startup process (open a big leveldb) and I want it to serve up 503s until its finished. is this a reasonable approach? http://play.golang.org/p/9G6IJGplGz
<teepark>	I'm a little worried about line 12
<andreas_kushner_>	vegee: yes, of course, I was already aware of the basic options, just wanted to know what people in here thought
<teepark>	there's only one writer, but it's potentially being read by other goroutines
<Tv`>	teepark: that looks racy
<veegee>	andreas_kushner_, there are many reasons to run nginx, such as easier SSL setup, load balancing, easy reload of config, can help protect against DDOS, it fully buffers requests
<veegee>	list goes on and on
<Tv`>	teepark: atomic.Value maybe
<andreas_kushner_>	veegee thank you
<Tv`>	hooray a proxy has a feature that only makes sense for a proxy
<veegee>	it is indeed for that pu rpose
<daved>	skelterjohn: Have a moment?
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 05 20:38:04 2015

**** BEGIN LOGGING AT Tue May 05 20:47:42 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<AmandaC>	skelterjohn: LOL oops. Does that mean you can reproduce it on the actual Mac?
<therainingmonkey>	Hi all; what's the best way to handle errors from a deferred function?
<Tv`>	therainingmonkey: you can change named return values inside a defer
<Tv`>	though it's often nicer to just not defer that part
<Tv`>	therainingmonkey: here's an example that uses defer to clean up on errors but still explicitly calls the functions, for simpler control flow: https://github.com/jbenet/go-datastore/blob/master/flatfs/flatfs.go#L104-L132
<therainingmonkey>	thanks!
<Tv`>	(often it's ok to just call Close twice)
<jud>	is there a favorable way emerging for Go dependency management?
<jud>	gpm or godep for example
<lungaro>	i still use git submodules and subtree
<Tv`>	i construct a collection of git repos at desirable states, just like i did in C & Python
<zhaoyeming>	a non-pointed receiver will get copied to the func upon calling?
<Tv`>	zhaoyeming: all arguments are always copied, even if pointers; it's just that it's the *pointer* being copied
<cespare>	zhaoyeming: (and also methods aren't special; r.F() is the same as F(r) pretty much)
<zhaoyeming>	so if i want to change something in a slice, i have to store pointers in the slice?
<zhaoyeming>	i mean, not changing the slice itself
<Tv`>	zhaoyeming: slices are effectively http://golang.org/pkg/reflect/#SliceHeader and thus include a pointer to the actual data, already
<hyphenated>	zhaoyeming: no, but you need to ensure you're not operating on a copy
<zhaoyeming>	hyphenated: right. i suspect i'm operating on a copy after reading Tv`
<hyphenated>	http://play.golang.org/p/v3ZGEJwTFF
<hyphenated>	http://play.golang.org/p/WLYnQRw8Xh added detail
<zhaoyeming>	oh yes, you demonstrated my mistake, hyphenated
<hyphenated>	also if it were defined as value receiver, func (t T) Increment(), then it would also be operating on copies
<zhaoyeming>	that one i already know. the range one is what i missed
<djx>	http://play.golang.org/p/jR8BZ7s9C3 is it possible to have one single func to sort both fooB and fooC based on "pos" (int's on struct A)
<skelterjohn>	AmandaC: haven't tried yet
<skelterjohn>	i will in a little bit
<AmandaC>	Fair enough, heh
<hyphenated>	djx: no. you'll need separate Len/Less/Swap []B and []C to use sort.Sort
<djx>	hyphenated: yeah, that's what I thought, thanks mate ;-)
<zhaoyeming>	hyphenated: in last example, i changed slice to a map and i got a "cannot cal pointer method on x[i]". http://play.golang.org/p/zuJJpmIY39
<hyphenated>	zhaoyeming: map elements aren't "addressable"
<hyphenated>	when you call a method on an object a and the method has a pointer receiver, it automagically does (&a).Method() if it can
<hyphenated>	similarly if you have a pointer to an object, and the method has a value receiver, it does (*a).Method() automagically
<hyphenated>	but since you can't do &x[i] on a map element, you get that compiler error
<hyphenated>	you _can_ do &x[i] on slice elements
<zhaoyeming>	ok i get it. so in the 'map' case, i should store pointers to the object?
<zhaoyeming>	in order to make changes it?
<ahmetalpbalkan>	hi guys, I'm trying to establish a pipe between an incoming net.Conn and a net.Conn I obtain from net.Dial, what do I exactly use?
<hyphenated>	zhaoyeming: http://play.golang.org/p/HLvVt5rOAG
<Tv`>	ahmetalpbalkan: that's not what pipe means, and you want io.Copy
<hyphenated>	zhaoyeming: I should probably say this: you probably _should_ be using pointers for both cases if you're calling methods to modify them. I was mainly explaining that you don't _have to_, which is what you originally asked
<ahmetalpbalkan>	Tv`: yeah I was trying io.Copy but it blocked
<ahmetalpbalkan>	net.Conn is duplex so how exactly it is supposed to work in this case?
<Tv`>	ahmetalpbalkan: sounds like you want two io.Copys, then
<ahmetalpbalkan>	in two gorouties Tv` ?
<ahmetalpbalkan>	goroutines*
<zhaoyeming>	hyphenated: that's clear. thanks.
*	I is now known as Guest36938
<skelterjohn>	AmandaC: 'wgo init' has a stack trace oops :s
<skelterjohn>	oh nevermind i just forgot to recompile
<skelterjohn>	hadn't opened this machine in a long time
<therainingmonkey>	Any clues why net.Dial() would give "no such host" with a valid host?
<skelterjohn>	AmandaC: fortunately/unfortunately, -e doesn't seem to be needed
<skelterjohn>	therainingmonkey: my first guess is that it's not actually a valid host
<skelterjohn>	AmandaC: also cloning the docker repo appears to take a while...
<andlabs>	therainingmonkey: what host
<therainingmonkey>	My program successfully resolves it once (with a hardcoded URL), but fails the second time (getting the URL from input)
<therainingmonkey>	it'll fail on any host the second time
<skelterjohn>	therainingmonkey: show code?
<Wessie>	wild guess: newlines
<skelterjohn>	therainingmonkey: i feel there's likely an issue with input processing
<skelterjohn>	Wessie has the most likely culprit
<therainingmonkey>	skelterjohn: I thought that, but I _thought_ I'd verified that the function was getting the address it should
<skelterjohn>	show code!
<quiznilo>	eep
<skelterjohn>	all we can do is guess, and you only get one guess ;)
<therainingmonkey>	It isn't on the internet yet, gimme a sec
<skelterjohn>	therainingmonkey: one good way to be really sure you've got a string right is to use fmt.Printf("%q", s)
<skelterjohn>	because then it prints an escaped quoted string
<skelterjohn>	and you can spot obnoxious things like newlines really easily
*	ChanServ gives voice to iant
*	kentquirk is now known as kentquirk_away
<quiznilo>	excellent tip
<skelterjohn>	therainingmonkey: i guess you found the issue? :)
<therainingmonkey>	No, i just finished with github https://github.com/therainingmonkey/gopher
<mohae>	>.>
<mohae>	dat name
<quiznilo>	how dare you?
<skelterjohn>	therainingmonkey: well, just needed a pastebin of the stuff that parses the url from input
*	veonik_ is now known as veonik
<therainingmonkey>	well that's kinda spread about, including through a library I can't claim to 100% understand
<mohae>	therainingmonkey: so, you want us to figure out what file we should be looking at and where?
<skelterjohn>	ok, well, you need to work on isolating the problem :)
<mohae>	and understanding
<therainingmonkey>	I was thinking about a complete rewrite, but I thought I'd ask whether there was any known issues with net.Dial first
<mohae>	therainingmonkey: look at your arg parsing
<mohae>	therainingmonkey: if it's worked with a hardcoded but not your arg, it wasn't net.Dial that changed
<skelterjohn>	therainingmonkey: not appropriate to ask that question before you're even sure what you're passing it as parameters
<therainingmonkey>	I thought maybe it might have something to do with conn.Close(), and I _thought_ I'd checked the parameters
<skelterjohn>	if you had checked the parameters, you'd be able to point me to where in your code those parameters are used
<therainingmonkey>	Double checking with skelterjohn's hint now
<quiznilo>	skelterjohn: in wgo, have you replaced '--set-primary' with '--go-get'?
<skelterjohn>	quiznilo: i have
<skelterjohn>	quiznilo: i felt that 'primary' would make people think that's where your project source should go
<skelterjohn>	where in fact it's just so that 'go get' puts things there
<tjscanlon>	is there a way to break long function calls into multiple lines
<skelterjohn>	tjscanlon: the return key? :)
<quiznilo>	if I have time, and I dare to, I may to a pull request... fix README.md and make a --help
<skelterjohn>	:o i didn't fix the readme when i did that, whoops
<tjscanlon>	i could have sworn i got an error earlier when i did that >_>
<skelterjohn>	i'll probably take care of it now
<tjscanlon>	thanks for the help
<skelterjohn>	tjscanlon: you might not have had a comma at the end of the line
<skelterjohn>	quiznilo: what would you want --help to do?
<quiznilo>	show that usage
<quiznilo>	usage: wgo init [--go-get=blah blah]
<skelterjohn>	just 'wgo' by itself does that
<skelterjohn>	oh unless you're not in a workspace
<skelterjohn>	hmm.
<quiznilo>	not if you havn't ran 'wgo init'
<quiznilo>	yes, that
<skelterjohn>	yeah that seems slightly obtuse
<quiznilo>	heh
<quiznilo>	thanks for the excellent program, I was playing with it some today
*	zz_flazz is now known as flazz
<skelterjohn>	quiznilo: glad you like it :)
<darius93>	what would be a good way to nil out a pointer so its reference is removed completely when its destroyed by a function? eg thisFunc.Destroy() makes it so any data in "thisFunc" is not available in memory
<therainingmonkey>	It is newlines, thaks skelterjohn!
<skelterjohn>	therainingmonkey: sure thing :)
<st33med>	skelterjohn, may I bring my bot in here just to test it? It only logs and has two commands (one alarm and another response to hello)
<bnagy>	darius93: I don't know, but I'd like to :)
<quiznilo>	oh wait, what was that bot chan for testing?  #botters or something
<st33med>	Just seeing if it works well in a large channel
<st33med>	Oh?
<bnagy>	I was wondering about putting stuff like keys in a global var, setting it up with sync.Once and then zeroing that var later
<mohae>	well, niling a pointer doesn't mean the data isn't in your memory
<st33med>	That works quiznilo thanks
<quiznilo>	yes, freenode has a chan specifically for showing off bots and l33t skillz and epeen
<bnagy>	but you can't really guarantee it hasn't been copied in memory
<quiznilo>	check that, I'm not sure
<st33med>	8=======D
<quiznilo>	heh
<st33med>	There's my epeen
<st33med>	:|
<st33med>	It's more to test :P
<quiznilo>	yeah, and for testing too
<mohae>	.markov
<glenda>	when you overwrite it the tlb gets an entry
<quiznilo>	st33med: http://ircindexer.net/network/freenode/Channel/botters
<st33med>	Oh
<st33med>	quiznilo, botters-test to actually test it
<st33med>	Surprisingly not much activity
*	Sly__ is now known as Sly
<st33med>	I remember back in my teens how creating your own bot was a big thing
<quiznilo>	it still is
<st33med>	Also how I asserted that Python was better than everything at everything >.>
<quiznilo>	it used to be
<mohae>	let old man st33med reminisce!
<quiznilo>	lol
*	st33med scratches his beard
<mohae>	that was like a whole year ago
<st33med>	IT WAS LIKE IT WAS YESTERDAY
<quiznilo>	I remember on dalnet, finally getting my bot on between all the netsplits...
<st33med>	Ooohhh my god, netsplits were funny
<quiznilo>	had to walk up hill, through the snow...
<st33med>	Freenode had a bunch
<therainingmonkey>	Rizon still netsplits
<skelterjohn>	in my teens .... python technically existed but no one cared about it
<st33med>	It was when 2.5 and 2.6 were new
<quiznilo>	through about 2 years in '96, '97, dalnet was essentially unusable
<quiznilo>	no lie
<skelterjohn>	oh, python existed before i was in my teens
<quiznilo>	I remember being all excited when MS announced C#
<st33med>	I had made a bot with 'plugins' and used multiprocessing because I hated the Global Interpreter Lock
<quiznilo>	heh
<st33med>	And thought multiprocess would be faster that way :|
<st33med>	It basically just spawned a process for every message :||||||||||||||||
<skelterjohn>	when i first ran into the GIL...
<quiznilo>	I'm still wondering about 'plugins' in Go...
<skelterjohn>	i was so mad
<quiznilo>	ouch
<quiznilo>	but for a bot, I think scripting plugins is the way to go... kinda moots the entire process issue
<st33med>	Though I did make sure chunks had locks around it
*	generic is now known as shanse
<st33med>	Yeah. I think I would try to make Go just execute scripts for plugins.
<quiznilo>	skelterjohn: would it be more consistent and idiomatic to default third party packages to pkg/?
<skelterjohn>	i wonder if something like Tv`'s becky can be done, but for making plugins
<skelterjohn>	quiznilo: no?
<skelterjohn>	quiznilo: pkg is where compiled artifacts go
<skelterjohn>	for your root gopath
<quiznilo>	oh right, of course
<quiznilo>	hmm
<skelterjohn>	wgo uses third_party as the default place for ... third party right now
<quiznilo>	excellent
<st33med>	The fact that I spawned a PYTHON process for each one makes it worse
<skelterjohn>	so if you do 'wgo init', .gocfg/gopaths is "third_party\n."
<skelterjohn>	since that seems like the most sensible default to me
<quiznilo>	st33med: do you know a lot about go yet?
<skelterjohn>	st33med: python is bad at concurrency, it's true
<st33med>	I've learned a lot.
<quiznilo>	it's insanely good with process management with the mutexs and channels and goroutines
<st33med>	Locking was so dead simple with multiprocess
<quiznilo>	skelterjohn: it's the most sensible to me also
<skelterjohn>	one thing that's really nice about go is i never feel like there is an "incantation" to do concurrency stuff
<st33med>	skelterjohn, AGREED
<skelterjohn>	for instance, with C to spawn a new thread it was sort of this weird thing i had to copy/paste
<quiznilo>	hah
<st33med>	Java says it's specialized around threading, but you have to have a run method in a runnable type
<skelterjohn>	for java, i have to write out some nonsense with a Thread class and a run() method
<st33med>	YES
<st33med>	And let's not get started with MSDN C++. I have not messed with it but...
<skelterjohn>	for python, this weird function whose second parameter are the args to my function
<skelterjohn>	though that is less offensive than C or java
<st33med>	from what I saw, I don't want to touch C++
<quiznilo>	there have been cases of Go beginners who have to be told to back-off using goroutines, and not to use them everywhere
<st33med>	Use go to add two numbers :D
<quiznilo>	ya
<st33med>	in a for loop :DDDDDDDDDDDd
<quiznilo>	with tail recursion!
<quiznilo>	and channels!
<st33med>	FOR ALL THE VARIABLES
<skelterjohn>	go does not optimize tail recursion :s
<skelterjohn>	rsc likes his stack traces
<st33med>	I have heard of tail recursion, don't know exactly how it works :\
<quiznilo>	this is sad... bye bye Go, I'm moving on to Haskell
<skelterjohn>	st33med: it's when you have a recursive function whose recursive call is the last instruction
<quiznilo>	recursion is glorious
<skelterjohn>	st33med: so you can take the previous function's frame off the stack
<mohae>	until you run out of stack
<st33med>	Ah
<skelterjohn>	and have only time be the limit of how many recursive calls you can make
<quiznilo>	http://play.golang.org/p/q149F3a7M4 I wrote this awhile back
<st33med>	tail recursion sounds like a pain
<skelterjohn>	it's also more efficient to not allocate all that memory
<quiznilo>	I don't care... smash that stack
<skelterjohn>	st33med: nah it's super useful
<quiznilo>	an excellent use case of tail recursion
<st33med>	I also feel like C is such a pain to debug
<st33med>	Especially with managing your own memory
<skelterjohn>	it's not that you ahve to manage memory, it's that you can treat anything as anything
<skelterjohn>	and doing so is par for the course - starting right from when you call malloc()
<st33med>	And getting fields from pointers to structs
<gbiv>	st33med: it's a bit off topic, but fwiw, gcc+clang have *tons* of sanitizers you can compile into your code in order to catch all sorts of bugs
<gbiv>	it's not perfect, but it's nice imo
<quiznilo>	gbiv: yeah, but, the fact that they're necessary...
<st33med>	ptrint = *(randomStruct->arr[50])
*	quiznilo doesn't really know anything about C, so can't speak to it
<skelterjohn>	in theory, go could have manual memory management, too... (though this would make understanding safe use of closures very tricky), and be easier to debug than C because you at least know that a foo is a foo
<st33med>	Yep.
<gbiv>	quiznilo: they're as necessary as Go's -race flag is. you can definitely make working code without them, but running with them gives you some piece of mind
<st33med>	I'd prefer a garbage collector running in the background rather than having to manage all the things
<quiznilo>	the 'copy-by-val everywhere' EVERYWHERE is very useful
<mohae>	st33med: ypi
<skelterjohn>	st33med: there are times when GC is good (most of the time, imo) and times when direct management is good
<st33med>	Embedded processors for example
<quiznilo>	or real-time apps
<quiznilo>	like my music work
<mohae>	st33med: you've gotten to know Go pretty well
<st33med>	Yep
<st33med>	:)
<mohae>	good job
<st33med>	Thanks
<skelterjohn>	difficult for a go garbage collector to collect as well as code that does it explicitly (and correctly)
<quiznilo>	I've been thinking of making a sequencer and a sampler in Go, but that GC is scary
<mohae>	why?
<mohae>	as in why is it scary?
<quiznilo>	they're real-time apps... they have to be instant
<quiznilo>	always
<skelterjohn>	mohae: pauses here and there to mess up your audio acquisition
<gbiv>	quiznilo: instant within an epsilon.
<borneo>	1168 nicks means 1168 people in this room at once?
<mohae>	ah
<st33med>	GC takes less than a few milliseconds from what I read.
<quiznilo>	of course
<skelterjohn>	borneo: yes
<borneo>	:)
<skelterjohn>	borneo: most of them sit in rapt attention to my nightly lectures
<borneo>	may i take a seat?
<st33med>	quiznilo, eventually they will go on to a separate thread for GC
<skelterjohn>	borneo: no, it's your turn to stand and present.
<gbiv>	Go 1.5's GC shows lots of progress WRT latency guarantees
<quiznilo>	lol!
<mohae>	st33med: with 1.5 there will be some guarantees. Also, there are ways to minimize pressure
<st33med>	mhm
<quiznilo>	when I get around to that project, at first, I'll try GC, but seriously, more than a few milliseconds and you'll hear the lag
<st33med>	I liked C for being low level, but damn... it's so tough to manage so many pointers with all that syntax
<st33med>	Yep
<quiznilo>	I had a tuned real-time kernel when I was doing this before and had JACK sampling down to 16ms buffer
<st33med>	quiznilo, that's understandable though
<skelterjohn>	st33med: i don't know how we can have GC completely on a separate thread
<gbiv>	quiznilo: http://llvm.cc/t/go-1-4-garbage-collection-plan-and-roadmap-golang-org/33 -- "The STW piece will limit the amount of time goroutines are stopped to less than 10 milliseconds out of every 50 milliseconds"
<gbiv>	and that's worst case afaict
<st33med>	skelterjohn, Java GC works that way
<quiznilo>	which is better responsiveness than most production equipment... cept the solid-state stuff
<skelterjohn>	imagine one goroutine doing for { x = y; y = nil; y = x; x = nil }
<gbiv>	so if you don't mind optimizing a bit here and there, you'll probably be fine
<quiznilo>	thanks for looking that up
<skelterjohn>	the GC might look at x, see it nil, look at y, see it nil, and delete the memory
<flaggy>	with a garbage collected language it's hard to know when the application will stop for collection. That might indeed be a show stopper for some kinds of application
<st33med>	I suppose later on there could be options to turn off the GC in the runtime and manage memory manually.
<skelterjohn>	st33med: you can turn it off now.
<st33med>	Oh!
<quiznilo>	at that point, would it be better to go with C/C++?
<skelterjohn>	can't really free things though
<st33med>	:\
<st33med>	So it just sits there taking up space
<flaggy>	Even a preemptive kernel is unacceptable in some scenarios
<skelterjohn>	but you can prevent the GC from going. and for an audio-style app that might be ok
<quiznilo>	no, I used the Real Time kernel patch
<gbiv>	yeah, C++ may be your best bet at that point (or Rust, or Nim, or whatever you fancy for manual memory management)
<skelterjohn>	on HN the other day i saw a post about go-style concurrency with C
<skelterjohn>	looked pretty neat
<quiznilo>	ooo Rust
<mohae>	Andrew Gerrand has this that he is working on https://github.com/nf/sigourney
<gbiv>	you could try cgo
<skelterjohn>	rust has some neat ideas about syntactically enforced memory safety
<skelterjohn>	that seem neat
<quiznilo>	hmm... adg does audio work
<st33med>	skelterjohn, dawwww dat bunnyyyyy
<st33med>	ʕ◔ϖ◔ʔ
<skelterjohn>	quiznilo: probably just wants people to stop saying audio sequencing can't be done with go
<skelterjohn>	st33med: wtf?
<flaggy>	http://stackoverflow.com/questions/19848413/can-you-deallocate-memory-with-go-garbage-collection-disabled
<st33med>	The bunny pic on the github link
<st33med>	Scroll down
<flaggy>	maybe using that and disabling GC may be a way to go
<quiznilo>	well hell, if they have already started work on a synth
<mohae>	he talked about it on a podcast about Go, but I forgot what he said
<quiznilo>	mohae: thanks for the heads-up
<mohae>	np
<mohae>	I think he mentioned he'd like to be able to spend more time on it
<skelterjohn>	flaggy: very interesting
<mohae>	but don't trust my memory
<st33med>	mohae, run memcheck86+ on it
<st33med>	ʕ◔ϖ◔ʔ
<mohae>	lol
<mohae>	it would show fragmented with a bunch of bad sectors
<st33med>	Gotta replace one of the sides then
<Tv`>	mmap some []byte and you can do unsafe memory management just like in C, with your own malloc
<st33med>	That's true
<quiznilo>	at that point... use C
<st33med>	It's difficult because you'd have pointers to everywhere in the array
<st33med>	Yeah C
<quiznilo>	or Rust
<st33med>	Go ain't for everything as sad as that is to say T.T
<Tv`>	still have goroutines and what not
<skelterjohn>	just remember that if you ever use a closure and disable the GC, you will have a memory leak
<st33med>	I love the syntax
<skelterjohn>	there are lots of implicit heap allocations in go
<quiznilo>	go just isn't the same without GC
<Tv`>	skelterjohn: sure but the point is decreasing garbage until that stops mattering
<st33med>	clojures are basically anonymous functions?
<st33med>	*cosures
<skelterjohn>	sure
<st33med>	bah
<skelterjohn>	that's fair
<st33med>	Closures
<mohae>	there's https://blog.cloudflare.com/recycling-memory-buffers-in-go/
<skelterjohn>	st33med: ones you define inline with other code, that can (potentially) use things that are in the surrounding code's scope
<st33med>	Ok yeah
<st33med>	Then I used closures in my project :D
<gbiv>	fwiw, escape analysis *may* be able to stack-alloc the closures, but don't count on it. (i know it does this with primitives, not sure if closures are special)
<bnagy>	imho that's the most important thing about closures
<bnagy>	(close over local binding) and also how they got the name :)
<skelterjohn>	st33med: i don't think you can really call it a closure unless you pass it to something else that calls it
<st33med>	Callback function
<bnagy>	no
<skelterjohn>	i think i'm with bnagy
<skelterjohn>	i don't think you can call it a closure unless it pulls something in from the surrounding scope
<bnagy>	functions are first class, so you can have functions that are 'traditional' callbacks
<st33med>	skelterjohn, it does
<st33med>	one sec
<skelterjohn>	err, i believe you
<skelterjohn>	no need to prove it
<skelterjohn>	i also most likely won't click any link you paste :)
<quiznilo>	no
<st33med>	http://pastebin.com/UyPSbubZ
<st33med>	T.T
<st33med>	but but my epeen
<st33med>	nah it's fine :P
<quiznilo>	is 'callback' a go term?
<bnagy>	no
<st33med>	nope
<quiznilo>	I see it in some Go blog posts
<quiznilo>	and I think... "I remember callbacks!"
<bnagy>	it's used in go, but it's just a programming term
<skelterjohn>	is the question of whether or not it was coined with go? certainly not
<quiznilo>	oh I know that
<quiznilo>	I used them years ago
<quiznilo>	I still use them in client-side javascript
<st33med>	I would think it's common considering how easy it is to make and pass functions in go
<quiznilo>	I've never seen the word in any of the official Go documentation
<skelterjohn>	why would there need to be?
<skelterjohn>	it's just a thing :)
<st33med>	It's not something pertaining to the language
<skelterjohn>	however, callbacks are very often used in concurrency settings when better concurrency primitives are not available
<skelterjohn>	the most common use of them is for something like, from one thread, tell the UI thread to invoke some callback (in the UI thread) when an event occurs
<skelterjohn>	so the callbacks represent concurrent execution
<skelterjohn>	with go, we tend to not use that pattern
<skelterjohn>	but instead rely on channels
<skelterjohn>	so, callbacks are much less common
<skelterjohn>	i guess you could think of http handlers as callbacks
<quiznilo>	yes, I do actually, however, I don't use that word to talk about them
<st33med>	The library I used had callbacks for certain codes sent by IRC. That's fine, but I would have liked it to give me some way to just send me messages through chans
<skelterjohn>	i wonder if i could make a version of net/http that assigned a chan to a route
<skelterjohn>	i guess the only thing that would give me is a nice way to ensure no more than N requests are concurrently served
<st33med>	Also, I've been told that functional languages are the best for concurrent programs, but I have an extremely hard time reading them.
<st33med>	Much less creating in one.
<skelterjohn>	anyway, night time for me
<quiznilo>	see ya
<st33med>	night skelterjohn
<quiznilo>	has anyone messed around with https://github.com/smartystreets/goconvey?
<mohae>	I used it and grew to regret it
<quiznilo>	lol
<st33med>	That seems like too many bells and whistles for mere testing
<mohae>	indeed
<st33med>	Desktop notifications?
<st33med>	Srs?
<mohae>	and it makes your tests way too verbose
<mohae>	and it's slow, it has a problem with loops where it re-executes tests, iirc
<mohae>	anyways I groan whenever I come across code I have that used it for testing, for smaller stuff I haven't bothered taking the time to rip it out.
<mohae>	but, for the most part, I've been replacing it with the standard testing
<mohae>	hmm, they removed the issues (or moved it), so I can't point you to the re-run tests issue
<mohae>	if you don't mind a testing package getting in your way and really slowing down your dev, it might be for you
<quiznilo>	lol
<quiznilo>	no
<st33med>	Still, I wouldn't use that sort of testing suite because it looks way too heavy for such a thing
<st33med>	Yep
<mohae>	st33med: you are smarter than I
<mohae>	they probably added functionality since I used it
<st33med>	Heh. I haven't done much in the way of writing test suites besides the painful ones we wrote for small ass programs.
<mohae>	well the testing package is fine for most situations
<st33med>	Oh and we didn't use any JUnit testing or shit. It was methods to run from a separate main method.
<mohae>	at one point, with goconvey, it felt like I was writing more testing code than actual code
<st33med>	-_-
<mohae>	and I was
<quiznilo>	hmm... no Go love at GSOC '15
<st33med>	I have a bad taste in my mouth from writing testing code without any coverage check.
<st33med>	Wait that's a ie
<st33med>	lie
<st33med>	There was coverage check IIRC
<st33med>	It's been awhile
<zhaoyeming>	just curious, can i know the current size of a buffered channel?
<st33med>	zhaoyeming, cap for the buffer capacity, len for how many in the channel
<zhaoyeming>	cool. thanks, st33med
<st33med>	how many messages that is
*	flazz is now known as zz_flazz
<_1_RoCcO>	Hii
<_1_RoCcO>	hiii
*	Tod-Autojoined is now known as TodPunk
<jud>	quiznilo, how do you mean?
<quiznilo>	regarding GSOC?
<quiznilo>	I can't find any here http://www.google-melange.com/gsoc/projects/list/google/gsoc2015?PageSpeed=noscript
<kevinburke>	any reason why Go doesn't warn about unreachable code?
<kevinburke>	eg return "foo"; fmt.Println("can't get here...");
<quiznilo>	go doesn't have any warnings at all
<quiznilo>	design decision
<quiznilo>	should it error out with unreachable code?
<kevinburke>	that's what i was thinking, the same way it does if you try to use an unreferenced var
<quiznilo>	I suppose if unreachable code qualifies as an 'error'
<quiznilo>	it's debatable, that is
<quiznilo>	I'm not qualified to speak on the design decisions though
<quiznilo>	go vet -unreachable
*	cgrieger^away is now known as cgrieger
<Freman>	halp
<Freman>	sort, I want to do a sort Servers ByDistance but need the Less function to have access to Client.GeoPoint
<Freman>	Can O kist dp
<Freman>	bleh
<quiznilo>	so... sort interface
<quiznilo>	func (t *Thing) Less(a, b things) {
<quiznilo>	you know...
<quiznilo>	https://golang.org/pkg/sort/#Interface
<quiznilo>	just implement Len() int, Less(i, j int) bool and Swap(i, j int)
*	akaizen is now known as aaaaaa_
*	aaaaaa_ is now known as akaizen
<Freman>	http://play.golang.org/p/DPyn_OWCWO
<Freman>	:D
<st33med>	Freman, why so much struct?
<Freman>	server and client are representitive of the actual structs already in my project... bydistance implements the sort
<st33med>	k
<Freman>	(the real structs are 10+ elements/piece and actually have varying info in them)
<quiznilo>	http://play.golang.org/p/huql2BKB0i
*	Freman wonders if there isn't an easier way to get the closest 5 servers (out of 9000)
<quiznilo>	wow, that's ugly
<quiznilo>	oh.. they aren't ints
<quiznilo>	http://play.golang.org/p/NkZ4Foo5e_
<quiznilo>	better
<Freman>	yeh, but they're not going to be ints irl either, distance is actually calculated from lat/lon
<quiznilo>	sure
<|Craig|>	Freman: if there is a heap or priority queue, you can use one of size 5 to effiently collect the top 5. You could also use the expected linear time quick select algorithm for anything that you can comparison sort (could use the same interfaces)
<quiznilo>	something about you can't be sure of the order when you initialize maps
<quiznilo>	ya that works
<Freman>	I must be getting tired because that made no sense
<|Craig|>	http://en.wikipedia.org/wiki/Quickselect
<quiznilo>	http://play.golang.org/p/aTR0_3kFFe <- that's what you want, right?
<quiznilo>	and just put your call to Client.Blah in the Less() function
<Freman>	yeh the production code "	return d.Servers.GeoPoint.DistanceFrom(d.Client.GeoPoint) "
<Freman>	err, only copied half of that :(
<quiznilo>	and depending on how big your dataset is... and how often Sort() will make those calls...
<quiznilo>	you could be there for hours
<Freman>	(in fact wasn't even right function)
<Freman>		return d.Servers[i].GeoPoint.DistanceFrom(d.Client.GeoPoint) < d.Servers[j].GeoPoint.DistanceFrom(d.Client.GeoPoint)
<Freman>	there's 9000 odd records and it's only called once
<quiznilo>	9,000?  over 9,000?
<jud>	*crickets*
<quiznilo>	sorry
<quiznilo>	ya, you make 1 call to Sort()
<quiznilo>	sort will make quite a few calls to Less()
<quiznilo>	at least 9000
<Freman>	actually not even that far - only 3600 (don't trust ID, evidently the data set deletes old)
<quiznilo>	http://play.golang.org/p/E03tSNzYaS <- 6 values, 9 calls to Less()
<mohae>	nlogn
<quiznilo>	8 values is 20 calls to Less()
<quiznilo>	ya
<quiznilo>	k, it's a log
<quiznilo>	or something
<quiznilo>	I suck at math
<mohae>	it's nlogn
<mohae>	worst case
<quiznilo>	I'd consider downloading the entire dataset first, and using local data in Less() personally
<quiznilo>	or cache it
<mohae>	it seems a different approach might be useful, e.g. I'm willing to be all these servers aren't in different data centers
<quiznilo>	ServerGroup
<doomrobo>	suppose I have a uint32 f = <abcd> where a,b,c,d are bytes in order of significance. How would I make a unit16 g = <bc> where b and c are the bytes from f?
<mohae>	a graph approach might help too, but it's late so I'm not going to really think
<bnagy>	doomrobo: mask then shift I guess
<bnagy>	foo & 0x00ffffff; uint16(foo >> 8) or whatever
<Freman>	real	0m0.120s not so bad... for loading 2 xml files, sorting, slicing
<doomrobo>	bnagy, how does that reduce the size of the int32? Doesn't a right shift just fill in the left with 0s?
<Freman>	and all these servers are all over :D
<Freman>	http://www.speedtest.net/speedtest-servers.php
<mohae>	Freman: so you have 3600 servers in 3600 different data centers?
<Freman>	not me, ookla
<st33med>	Is there something in Golang to allow the use of SSE or AVX vector instructions?
<Freman>	realistically for 99% of cases, filtering by country first then sorting the result will work :D
<bnagy>	(0xaabbccdd & 0x00ffffff) >> 8 == 0xbbcc
<bnagy>	=> true
<bnagy>	doomrobo: sorry for ruby output, it's just handy :P
<bnagy>	for go you have to convert that afterwards because it will be a uint32 still
<doomrobo>	bnagy, but how does go cast it? Does it lop off the most or least significant bits?
<doomrobo>	because (0xaabbccdd & 0x00ffffff) >> 8 == 0x0000bbcc
*	veonik is now known as veonik_
<bnagy>	no casts, anyway I have to go. Pretty sure that's your solution
<doomrobo>	alright, thanks
<doomrobo>	indeed it does cut off the leading digits when casting: https://play.golang.org/p/SqgpWD30v4
<mohae>	use encoding/binary
<doomrobo>	mohae, I lied for simplicity of the testcase. it's actually int32 to int16. I just wanted <abcd> to become <cd> so I did int16(num & 0x0000ffff) and it appears to work fine
<mohae>	doomrobo: ya, I wasn't paying attention, but bnagy's suggestion is better, as usua
<mohae>	s/usua/usual
<badbugz>	bnagy: write a go repl already
<Freman>	hmmm if I could get Client into Server's unmarshalXML func...
*	Freman makes config global
<Freman>	meh
<tjscanlon>	Is it possible to have a default case for a switch statement?
<doomrobo>	tjscanlon, yeah, the default: tag should do it
<doomrobo>	tjscanlon, https://play.golang.org/p/OF0In1XflO
<Freman>	runtime: goroutine stack exceeds 1000000000-byte limit
<Freman>	fatal error: stack overflow
<Freman>	oops....
<Freman>	Guess I don't want to recursivly call unmarshaalxml :D
*	Freman goes home, I'll try again later after a nap
*	tuomimi_ is now known as tuomimi
<tjscanlon>	doomrobo: thank you!
<doomrobo>	:)
<foofoobar>	What is a good strategy to save credentials in and use them in go ? Environment, configuration files, .. ?
<dmac>	foofoobar: config file is good
<dmac>	foofoobar: it's better than env vars or cli flags for secrets
<foofoobar>	Why better than env?
<sztanpet>	because you can control access to them?
<dmac>	e.g., child processes can see their parent's env vars
<dmac>	so you can leak information if you call out to a subprocess outside your app
<sztanpet>	also, the environment is visible in /proc/{pid}/environ
*	brauminski is now known as Guest23857
<markusl>	hi
<markusl>	I have a problem understanding this:
<markusl>	type Foo map[string][]string
<markusl>	apparently it's enough to foo := make(Foo)
<markusl>	I wonder why I don't have to make() the slices in the map?
<sztanpet>	what makes you think you dont have to?
<bnagy>	hasn't tried to append to one yet? :P
<markusl>	nevermind, found it: https://blog.golang.org/go-maps-in-action
<markusl>	"Appending to a nil slice just allocates a new slice, ..."
*	ujjwalkanth is now known as pers3us
<the_last>	hey guys, what am I doing wrong here? http://play.golang.org/p/R1oRCsHj8z
<dmac>	the_last: strconv.Atoi() returns two values, you need to handle the second (the error). https://play.golang.org/p/FXNNfHBdjr
<the_last>	ah, thanks dmac, now i understand the error haha
<joncalhoun>	Is there a good way to define methods on non-local types? I realize you can't, but I mean, are there any patterns that tend to solve this issue in another way?
<hyphenated>	joncalhoun: embedding..?
<joncalhoun>	My concern with that is the non-local type already having embedded types.
<hyphenated>	can you be at all more specific?
<joncalhoun>	What I am trying to do is have one set of structs for parsing the JSON, then (in an ideal world) I would have 2 packages that each implement their own methods on the structs to do some work.
<joncalhoun>	The work being completely independent, but uses the same parsed JSON.
<hyphenated>	you should just convert the data to the apprpriate type
<hyphenated>	trying to avoid that now means you'll continue trying to avoid it later when you really shouldn't
<joncalhoun>	What I figured, but wanted to ask before writing the code since it will likely lead to a lot of duplication.
<hyphenated>	don't be afraid of writing code
<tomaz_b>	hi guys ... i have my GOPATH one for all projects... but now i would like to start using GODEP... somehow i can't figure it out... from where do I run it... do i run it from GOPATH... like "godep save src/pathtomyproject" since running it from package folder.. doesn't work. I am affraid that i will "save" more than i want... sorry for this newbie question, but can't find an answer on google
<joncalhoun>	hyphenated: haha i'm not afraid of writing code, I just don' tlike writing the same code more than once if it makes sense. Seems like it doesn't make sense in this case, and trying to do it another way will be way too confusing
<tomaz_b>	godep: directory "<path to GOPATH>/src" is not using a known version control system
<tomaz_b>	is the error from running it from package folder
<joncalhoun>	hyphenated: thanks tho :D
<hyphenated>	you could attempt to generate the code, but that's rarely worth the effort
<tomaz_b>	anybody?
<poga>	tomaz_b: some of your dependencies doesn't have a .git directory in its path
<tomaz_b>	poga: ok?... but does this means... that my initial try running godep save inside project folder was correct one? My GOPATH is way down in folder structure... i have one GOPATH for all projects
<tomaz_b>	poga: but does that mean, that i should have my src folder under git revision? my project is in $GOPATH/src/github.com/myname/myproject/<my file>
<tomaz_b>	poga: i run godeb save inside myproject folder
<tomaz_b>	poga: error was explicit for src folder
<poga>	tomaz_b: maybe this is related? https://github.com/tools/godep/issues/63
<tomaz_b>	poga: ok, thanks... i added just "git init" in $GOPATH/src ... and the command did finished without error... but inside Godep folder which was created... Godeps.json have "Desp" key empty??
<tomaz_b>	poga: This is probably not the right behavior, right?
<_1_moh-seid>	:(gdg
<dmitris>	Hi!  If you have a binary compiled with Go, can you find out from the executable itself what was the Go compiler version it was compiled with?
<digitalyatri>	what's the correct way of using "gofmt -w", its not re-writing the changes to source, just displays it on screen
<vaskrate>	Hi, Can I access to function in main package from another package?
<dmac>	dmitris: you can have the go linker set compile-time strings in your binary
<dmac>	https://stackoverflow.com/questions/11354518/golang-application-auto-build-versioning
<hyphenated>	digitalyatri: -d, isn't it?
*	zz_r04r is now known as r04r
<hyphenated>	dmitris: it's in there somewhere, but not really easy to get at
<digitalyatri>	hyphenated, -d does this right display diffs instead of rewriting files ??
<hyphenated>	dmitris: what are you hoping to achieve?
<digitalyatri>	i want gofmt to change the source files and not display the results on screen only
<dmitris>	hyphenated: for example, to scan a large number of hosts and find Go binaries compiled with Go version less than 1.X
<dmac>	digitalyatri: -w, it's in the docs: https://golang.org/cmd/gofmt/
<hyphenated>	digitalyatri: I just use 'go fmt'
<digitalyatri>	hyphenated, that internally executes gofmt, so its the same thing
<digitalyatri>	does it change the source for you, i mean using go fmt ?
<hyphenated>	if it had something to change, it 1) changes it and 2) tells you the file it changed
<dmac>	dmitris: are you compiling the binaries? or are they not yours?
<dmitris>	digitalyatri: gofmt -w does
<digitalyatri>	hyphenated, dmitris nope it does not in my case, it simply prints to stdout, the file is as before, no changes
<dmitris>	digitalyari: gofmt -help : -w=false: write result to (source) file instead of stdout
<dmitris>	digitalyari: strange… are you sure?  Is it Go 1.4.2 ?
<dmitris>	digitalyari: does “gofmt -l <filename.go>” shows the name of the file?
<dmitris>	dmac: “mine” or “ours” in a wide sense - some compiled by me - but possibly long time ago (looking at my $GOPATH/bin, for example), some by my colleagues / teammates, some by the CD pipeline…
<digitalyatri>	dmitris, hyphenated check this out https://play.golang.org/p/J-in6IXFCW
<hyphenated>	digitalyatri: it can't format a file that has syntax errors..
<digitalyatri>	can u give me a simple example of what it would change hyphenated  ?
<dmitris>	would be nice if it were possible to interrogate any Go binary about its origins (such as the compiler version) - also as contingency procedure for a very unlikely case that Go runtime has a security issue and all the binaries need to be updated
<digitalyatri>	i thought "{" does fall within the formatting category
<dmitris>	Here’s the formatted version: https://play.golang.org/p/T7vTid_1it
<digitalyatri>	dmitris, Ah ok, i had wrong assumptions about how it should work :) thanks for your help
<digitalyatri>	dmitris, i've heard that using "named" return values is always good practice, but i see a few popular projects not following this, why is that so ?
<dmitris>	digitalyatri: interestingly, in http://play.golang.org/p/f9XCUM7ZrS - if you put the curly bracket after “type Foo struct” on the next line, gofmt does put it back - but not after functions, either “main()” or “Mee()”…
<digitalyatri>	dmitris, aha i see
<dmac>	dmitris: that's because func main() is a valid line of go; type Foo struct is not
<dmac>	digitalyatri: always using named return values is not good practice
<dmac>	digitalyatri: https://github.com/golang/go/wiki/CodeReviewComments#naked-returns
<digitalyatri>	dmac, why is that ?
<dmitris>	digitalyatri: I don’t think “named” return values is a universal suggestion - whatever makes it more readable.  If for example a function is simple and it’s clear what is being returned without the names, I would not give the name
<dmac>	digitalyatri: meant to link https://github.com/golang/go/wiki/CodeReviewComments#named-result-parameters
<dmitris>	digitalyatri: I don’t see anything wrong with the unnamed return parameter in http://play.golang.org/p/p-kNNCPuDE
<digitalyatri>	dmac, hmmm makes sesnse
<digitalyatri>	sense*
<hyphenated>	dmitris: for your original question.. I'm in two minds about whether it'd be "nice" and "useful" in its own right, even though it'd be useful for your scenario
<hyphenated>	dmitris: there's other ways to solve it rather than baking one specific way into every binary that's built
<dmac>	dmitris: if you'd like this going forward you could try my suggestion... doesn't help for any binaries compiled in the past though
<dmitris>	hyphenated: ok - I guess need to push for a company-wide convention / policy of adding certain ldflags on every compilation, in particular done by the CD pipeline
<hyphenated>	you'd also have to push a policy of "don't install stuff from your laptop / local build environment"
<hyphenated>	or write a package that emits version info, and make sure every binary uses that package and supports the option to spit out the info..
<hyphenated>	or keep a copy or hash of every build the CD server creates, along with compiler details and a tool to find the info based on hash
<hyphenated>	but still.. it requires that policy in place, and a LART to ensure it's followed
*	e-dard_afk is now known as e-dard
<vaskrate>	How Can I share struct instance to other packages? (e.g db instance?)
<TomNomNom>	vaskrate: pass a pointer to it as an argument?
<vaskrate>	i have a package which has packages (controllers,models) and in main package i  init database(gorm) and i want to access to instance. I'm tried to get instance from other package and i got goroutine error and i tried add SetDB function in models package and again i got goroutine error
<TomNomNom>	vaskrate: could you provide sample code?
<vaskrate>	TomNomNom: http://pastebin.com/eJx4Txnp
<ebonics>	vaskrate, what error is it
<vaskrate>	panic: runtime error: invalid memory address or nil pointer dereference
<vaskrate>	[signal 0xb code=0x1 addr=0x78 pc=0x59f47c]
<ebonics>	vaskrate, are you sure thats the actual error. anyway my guess would be its because your orm doesn't handle the synchronization for you
<ebonics>	i dont think sqlite is threadsafe by itself
<vaskrate>	Can I share pointer to package?
<ebonics>	oh no
<vaskrate>	I think that db var is empty ;p
<ebonics>	vaskrate, where do you call the testdb ;o
<vaskrate>	in other function in package ;p
<vaskrate>	okay, I do log.Fatalln(db) and i got {<nil> <nil> 0 <nil> <nil> <nil> <nil> 0 <nil> <nil> false  map[] map[]}
<ebonics>	i know its in another function but i dont see where it would be called from since your main func doesnt call anything else :D
<vaskrate>	in my main function i have router from gorilla
<vaskrate>	and in package with SetDB i have controllers which uses db
<vaskrate>	i think that i solved my problem xd
<vaskrate>	i have exec db in init() and it crashed app ;d
<TomNomNom>	vaskrate: glad you got it sorted :)
<skripted>	wtf how to i convert string to uint ..
<skripted>	strconv has no Atoui
<hyphenated>	skripted: it has ParseUint
<hyphenated>	Atoi is just a wrapper for ParseInt anyway
<vaskrate>	Is there any way to use subpackage like this package.subpackage.function?
<sztanpet>	no
<tanj>	hi, i am trying to understand the use of append builtin()
<tanj>	the docs says the function is variadic, but i get the following error when appending 2 byte slices:
<tanj>	cannot use buf[0:res] (type []byte) as type byte in append
<hyphenated>	tanj: buf[0:res]... (put the three dots there)
<tanj>	hyphenated: ahh
<tanj>	the dots were in the docs, but they didn't actually make sense to me
<bijan_>	anyone worked with paypal?
<go-nuts368>	Hello Gophers. Question: I am creating a generic query function to a database, in order to do so I have two implementation options, one using reflection and another one using an interface. The problem is, using reflection I get faster response time (2x) than using the interface method. although less idiomatic. My gut instinct tells me that interface pointers should be faster, so I am conflicted, any suggestions?
<hyphenated>	tanj: most people think they have a loose rather than literal meaning
<tanj>	hyphenated: in my mind, ... means 1 or more parameters
<hyphenated>	tanj: it means precisely that.
<hyphenated>	tanj: but to turn a slice into a list of parameters, you use the ...
<tanj>	hyphenated: what's the explanation of this
<tanj>	hyphenated: hmmm
<go-nuts368>	Example: https://gist.github.com/anonymous/05e602f628408dd7f403
<tanj>	I think I get it. the ... explodes the slice into arguments
<hyphenated>	kind of, yeah. the mechanics are actually the opposite
<tanj>	hyphenated: by any chance, are you familiar with type assertions?
<hyphenated>	I am.
<hyphenated>	there's also 1100 other people who might be too.
<tanj>	:)
<tanj>	ok. I am trying the following to assert that the response type is a byte slice:
<tanj>	if t, ok := response.([]byte); ok
<tanj>	but I always get this error: invalid type assertion: response.([]byte) (non-interface type []byte on left)
<hyphenated>	well, you type-assert interfaces to actual types
<hyphenated>	your code seems to be trying to type-assert a []byte to a []byte
<j0n17>	Hey Gophers, what do you guys use to read a socket, let's say a TLS Conn', do you loop through it with read waiting it to return an EOF, or is there any higher level / more optimized existing method/function to do that ? Thanks in advance :)
<tanj>	hyphenated: yeah. that makes sense :/
<tanj>	response is already typed, so it will always be a byte slice no matter what.
<hyphenated>	j0n17: all of those depend on the circumstances and the data the conn receives..
<j0n17>	Could you elaborate please ?
<hyphenated>	tanj: yeah. the compiler's already assertive enough
<hyphenated>	j0n17: what _protocol_ does the connection use? what kind of data gets sent?
<hyphenated>	if it were raw bytes that needed dumping into a file, I'd dump raw bytes into a file. if it were a session-oriented protocol with streaming asyncronous transactions, I'd do something stateful
<j0n17>	hmm okay, thanks
<r00trunner>	can you tell me why the time.Sleep() ist required here? http://go-tour-de.appspot.com/concurrency/1
<deniska>	r00trunner: program finishes as soon as it exits main
<deniska>	so without time.Sleep chances are a program finishes before goroutine even runs
<napsy__>	ofcurse
<hyphenated>	r00trunner: it's not _sleep_ that's required, but scheduling
<hyphenated>	r00trunner: without it, line 16 schedules a goroutine to do something, then proceeds to line 17, and finishes. the goroutine from line 16 never even gets launched
<AlecTaylor>	hi
<AlecTaylor>	Anyone using NATS (queue)?
*	omnivibe_ is now known as omnivibe
<Hillatio>	hey everyone, just started learning golang literally like 5 minutes ago... and this is going to bug me until I figure it out. What is fmt an abbreviation for?
<vegai>	format
<kinlo>	format
*	vegai glares at kinlo 
*	kinlo looks calmly at vegai 
<Hillatio>	haha thanks
<AlecTaylor>	xD
<r00trunner>	hyphenated: because the launch of a goroutine is more time consuming than the rest of the program right?
<unga>	 /run usercount.pl
<hyphenated>	r00trunner: no, not at all
<hyphenated>	r00trunner: the scheduler was quite happily doing things in main. nothing really interrupted that and it reached the end of main.
<r00trunner>	hyphenated: thx
<r00trunner>	it's a shame we cannot use go instead of java to program android apps...
<hyphenated>	when it reaches there, it doesn't get busy looking for more things it can do, it just exits. it's up to _you_ when writing concurrent things to force certain scheduling (usually via channels or sync primitives rather than "sleep") to ensure the order occurs as you want
<ptrb>	r00trunner: perhaps in due time... :)
<tanj>	r00trunner: you can. just check the "mobile" pkg
<tanj>	although it's mostly in developemnt and you will probably have to bind to java a lot
<AlecTaylor>	Here's a step backwards: https://github.com/pote/gpm
<AlecTaylor>	>.<
<r00trunner>	tanj: ah ok thx. didn't know. but i guess it's a a little bit to early then.... still, if it it's in development, that's a good sign. really impressed by go
<Hillatio>	ok 10 minutes of learning go... it's like a weight of C++ syntax off my shoulders. So clean
<hyphenated>	Hillatio: don't you dare ask for generics or operator overloading ;-)
<vegai>	AlecTaylor: how so?
<hyphenated>	just teasing, but a fair few C++ people coming to go are like "Wow, you got rid of all the crap of C++, but what about all my favorite C++ features? How could you miss those?"
*	vegai waves hand
<mousetrap>	Personally, I see Go has more in common with C than with C++...
<vegai>	these are not the features you're looking for
<mousetrap>	And that's just so brilliant.
<vegai>	C is horrible crap too in its own way
<mousetrap>	Of course.
<vegai>	not as a language perhaps, but the stdlib for instance is just out of this world
<mousetrap>	But it's a simpler way of crap.
<vegai>	sure
<AlecTaylor>	vegai: Doesn't cross compile
<AlecTaylor>	hyphenated: C++ FTW
<r00trunner>	in the example demonstrated in http://go-tour-de.appspot.com/concurrency/2, would it be possible that the second goroutine finishes earlier than the first? is it garuanteed, that the first always finished first?
<Hillatio>	hyphenated: Haha nah all good. Part of the reason I came to go was because, as much as I love C++, the complexity made starting projects feel like a burden
<hyphenated>	r00trunner: yes, it's possible
<vegai>	AlecTaylor: ah
<Hillatio>	is the reason for using the := operator to avoid people accidentally using = instead of ==?
<hyphenated>	r00trunner: the "guarantee" in that code is that two values will be read from c before it assigns both of them to x and y
<hyphenated>	Hillatio: no, not at all
<deniska>	Hillatio: := is declare and assign, = is assign
<AlecTaylor>	Hillatio: Ever written PL/SQL?
<AlecTaylor>	It's the old style declare+assign
<AlecTaylor>	PL/SQL copies some much older style from some long forgotten language
<Hillatio>	Nope, never written PL/SQL
<hyphenated>	Hillatio: the general lack of statements being expressions prevents that misuse
<Hillatio>	ah I see, just a shortcut instead of using var
<AlecTaylor>	Here we go, it's from ALGOL in 1958
<AlecTaylor>	(also Pascal)
<deniska>	pascal uses only := for assignments
<deniska>	it doesn't have shorthand for declare and assign
<deniska>	because all variables should be declared on top of the function to teach students tidiness =)
<skripted>	hyphenated: ah thanks! sry lost connection in train
<AlecTaylor>	deniska: I still go the whole `var name type` when there is any sort of ambiguity to the coder
<hyphenated>	AlecTaylor: I only use var when absolutely necessary. there's usually enough context that expresses the type anyway.
<AlecTaylor>	Mmm
<r00trunner>	hyphenated: ok, then i did understand the code correctly. thx a lot.
*	proteneer_ is now known as proteneer
*	ChanServ gives voice to iant
<Freman>	so, I thought I'd cheat and use UnmarshalXML to make the adjustments to my objects on the fly
<Freman>	net result = stack overflow...
<Freman>	s/on the fly/while importing/
<hyphenated>	Freman: good ;-)
<Freman>	func (s *Server) UnmarshalXML(d *xml.Decoder, start xml.StartElement) error { d.DecodeElement(&s, &start); s.Distance = s.GeoPoint.DistanceFrom(config.Client.GeoPoint)
<Freman>	no nice, simple way to do that?
<Fooster>	does anyone know if godef is supposed to work with GOPATH with multiple entries?
<hyphenated>	Freman: the &s there looks bad
<Freman>	thought that'd decode the element to the object it's being called against?
<hyphenated>	well yes, but if the object has an UnmarshalXML, it'll callit
<hyphenated>	which will then decode into the oject, which will then call Unm..
<Freman>	yeh... this my problem, no simple way "afterUnmarshalXML" run s.Distance = s.GeoPoint.DistanceFrom(config.Client.GeoPoint)
<hyphenated>	you're trying to discard the data, yeah?
<Freman>	nope, trying to add distance property based on GeoPoint
<hyphenated>	ok. then no, no easy way. you need to implement all the mechanics of decoding s, then do that
<Freman>	or just run a for range after it's done
<hyphenated>	or just do it after.. yes
<hyphenated>	easier
<quiznilo>	mornin'
<andlabs>	https://github.com/golang/go/commit/e481aac0e1f7c26ce5c86c5771bcd4ca81e90765
<andlabs>	actually better https://github.com/golang/go/commit/121489cbfd082161d86dd5e6f5653dc654beeaf7
<andlabs>	cool work Aram, thanks for the effort
<quiznilo>	today's project for me is to find a good idiomatic sample of using sessions--perhaps gorilla sessions--to manage a website authentication
<Freman>	http://play.golang.org/p/L4ST9lpLri so um, I'm clerarly dumb, I can't modify s.Z in a range?
<quiznilo>	you aren't making any modifications here
<quiznilo>	well, you're changing the value of 's' inside the for loop, fwiw
<quiznilo>	which isn't much
<quiznilo>	perhaps use a map instead of a slice?  I dunno
<quiznilo>	http://stackoverflow.com/questions/15945030/change-values-while-iterating-in-golang
<Freman>	I solved it by using the index
<Freman>	now to solve my sorting not working :D
<quiznilo>	there you go
<quiznilo>	how is sort() not working?  we had a working example last night
<Freman>	oh, helps if you call it :D
<Freman>	for _, s := range servers.SortByDistance().Closest5() { :D
<Freman>	much happiness
<quiznilo>	how many devs are at ookla?
*	Freman has no idea
<quiznilo>	lol
<quiznilo>	I thought you worked there
<Freman>	nah
*	zz_flazz is now known as flazz
<xdeadl0ckx>	hello all
*	xdeadl0ckx is now known as Wrecker
<ctrlrsf>	hello Wrecker
*	`micro_ is now known as `micro
<_2_dalejr88>	hi
<rocknrollmarc>	ok thnks 3306
*	kimiamania_ is now known as kimiamania
*	kimiamania is now known as Guest80171
*	Guest80171 is now known as kimiamania
*	unreal_ is now known as unreal
*	veonik_ is now known as veonik
<koda>	hi, is there a global way to recover from panics?
<koda>	eg a single recover() function in main() or in handler() ratehr than in each go routine?
<smw>	koda, nope
<koda>	D:
<Fooster>	does anyone know if godef is supposed to work with GOPATH with multiple entries?
<cronos>	koda: perhaps don't write code that panics at all
<koda>	cronos: hard when interacting with cgo
<cronos>	huh, didn't know that cgo utilized panics
<smw>	cronos, a segfault leads to panic I believe
<koda>	^
<smw>	koda, generally a segfault should cause the program to die
<cronos>	didn't know segfaults were part of normal flow in C but then again, i didn't program in c a lot
<koda>	cronos: ok i got your advice, "don't write bugs" :)
<whippythellama>	they're not; or rather, they should not be
<smw>	cronos, they are used less for control flow than panics
<koda>	smw: yes, but i need to know why the program crashes
<koda>	so i was planning to recovering from the panicing routine by printing what url caused it in the first place
<smw>	koda, interesting. Is the use of cgo instead of plain C stopping you from debugging C code?
<whippythellama>	is it dumping a core you can open in gdb?
<koda>	smw: not right now, it did in the past
<koda>	right now i don't know why my app is crashing :)
<smw>	koda, I find logs are useful for these types of things.
*	ChanServ gives voice to iant
<smw>	koda, what you really need is a core dump
<smw>	iant, you happen to know if there is a way to coredump when a cgo code segfaults?
<whippythellama>	if it's producing a core, pick it apart in gdb; if it's not, can you run your  app via gdb and set a watchpoint/breakpoint for the function in question?
<iant>	smw: try setting the environment variable GOTRACEBACK=crash
<iant>	I don't know if it will work but it' the first thing I would try
<smw>	koda, see iant's answer :-)
<koda>	ok thank you
<whippythellama>	oo… nice tip, iant - didn't know about that one
<iant>	whippythellama: for the record, it's documented at http://golang.org/pkg/runtime/ under "Environment variables"
<whippythellama>	yeah, just found it after you mentioned that  :)
<whippythellama>	teh googs, it tells me things
<coredump>	who, me?
<smw>	coredump, yes :-P
<coredump>	k
*	gattuso is now known as Guest2
*	Guest2 is now known as gattuso
*	gattuso is now known as Guest10
*	Guest10 is now known as gattuso
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed May 06 12:34:54 2015

**** BEGIN LOGGING AT Wed May 06 14:19:36 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<ttke>	if I tried firing up PVM today in our datacenter, all sorts of red rows would come up on NOC's security monitor
<ttke>	and some systems might not even see each other due to firewall rules
<ttke>	HTTP is treated more nicely
<ebonics>	ttke, you use http between your own backend services?
<ttke>	yes, my employer's home-grown RPC infrastructure is HTTP-based.
<ebonics>	:|
<echlebek>	ttke: we have some legacy MPI code... oof.
<ebonics>	that seems so limited
<liru>	I'll just leave it as http then.
<liru>	Thanks
<ebonics>	ttke, what happens if you need full duplex or something
<ttke>	ebonics - our implementation doesn't allow for things like websockets, but there's nothing about HTTP which prevents full-duplex communication over a single persistent connection.
<ttke>	I've implemented primitive realtime chat services via http before.  Not all http clients deal well with it, but at the time it was fine.
<ebonics>	GET <-> GET <-> GET <-> GET <-> GET <-> GET <-> GET ???
<ttke>	nope
<ttke>	data can be written incrementally to an open http connection, from either direction.
<ttke>	it's not commonly used that way nowadays, except in the case of websockets.
<ebonics>	do you use cusotm solution for that ttke
<ebonics>	or an existing technology?
<ttke>	I've only written custom code to do it, but today I would use websockets, which are an existing and well-supported technology.
<checkmatein1>	join ##beaner-central
<ebonics>	i don't understand why you would want to use http
<ebonics>	for that
<ebonics>	i don't even mean like performance wise, but it just seems really uh bloated overall
<ebonics>	why not just send json objects or something if you dont care about performance
<ttke>	heh
<ttke>	json objects over websockets aren't all that uncommon :-)
<ebonics>	ttke, my current solution is just raw json objects over tcp
<ebonics>	;o
<ttke>	*nod* there's nothing wrong with that, imo
<ebonics>	ttke, it's actually really lean. i like it a lot compared to what ive used in the past
<ebonics>	like binary protocols and stuff
<ttke>	good :-)
<ebonics>	i don't understand wanting to use a full http stack though
<ebonics>	what does it give you
<ttke>	convenience, mostly, and preferential treatment in the context of a corporate network.
<ebonics>	do you send over port 80?
<echlebek>	It gives you interop with a universe of tools that already speak HTTP
<ttke>	the client sends *to* port 80, yeah
<ttke>	echlebek++
<ebonics>	like what tools specifically
<ebonics>	i dont know of any tools that use http other than your typical http rest servers
<echlebek>	Beyond web browsers and curl? Well at my workplace our data analysis software is third party and has HTTP features, which is really convenient for us.
<ttke>	wget, curl, wireshark, any of dozens of "frameworks" and libraries which give you well-debugged interfaces .. it's quite a large ecosystem
<ebonics>	oh
<ebonics>	i didn't think about those
<ebonics>	that seems pretty nice for testing
<ttke>	yeah, debugging by pointing a web browser at your test instance and squinting at json can be convenient
<ebonics>	i use netty for this kind of stuff
*	ttke likes wget and LWP::*
<ebonics>	i can just add an http encoder/decoder to the chain arbitrarily
<furball365>	I've just hit a runtime error panic: "invalid memory address or nil pointer dereference". I see a few references to this kind of error but right now i just want to find the line which caused the issue. It's giving me context in the form of [signal 0xb code=0x1 addr=0x20 pc=0x193beb] and a several goroutine stack frames. I'd like to play 'swim through the symbols', but even better i would like to be able to
<furball365>	 get context at point of failure. Is there some way to do this, perhaps by hooking panic in some manner?
<ebonics>	might consider doing that for testing with curl for example
<furball365>	apologies for interrupting your flow, ebonics..
<ebonics>	furball365, i don't care haha it's offtopic anywya :)
<ttke>	heaven forbid someone interrupt with an on-topic question ;-)
<furball365>	ebonics: i'm probably off-topic too :).
<quiznilo>	have I mentioned how much I love sqlx?
<ebonics>	quiznilo, i avoided using that
<hfaafb>	sqlx is nice, cheers jmoiron!
<ebonics>	what's nice about it?
<furball365>	ebonics: btw Python Requests might be worth looking into for testing if you haven't already
<freeze>	sqlx is nice
<ebonics>	furball365, what do you mean python requests
<ebonics>	for http you mean?
<furball365>	ebonics: yes.. testing
<ebonics>	or just randomly fuzzed tcp packets
<quiznilo>	well, to start with, I love how I can create DBs using my structs
<ebonics>	quiznilo, yeah i needed that functionality too but it was quite verbose with sqlx
<ebonics>	furball365, i test with just raw tcp packets atm. i was talking about adding an http encoder/decoder so i could streamline it with curl instead
<freeze>	i like the flip side, pushing my selects into structs
<quiznilo>	.MustExec(schema)
<ttke>	ebonics - "Requests" is the name of a python class for doing http-stuff.  The module is called "requests".
<quiznilo>	well.. not using structs
*	ttke prefers Twisted's web framework for doing http stuff in python
<furball365>	ebonics: for testing REST interfaces etc. Fuzzing tcp packets would be better done with another tool i think
<ebonics>	furball365, yeah :) there's no real "tool" other than the inherent sockets a language supports  in that case
<ebonics>	you have to write your own
<furball365>	ebonics: Scapy? I don't know much beyond what google is telling me..
<ebonics>	furball365, i use that for more low level stuff like 802.11 fuzzing
<ebonics>	it's not really suited for testing services i think
<ebonics>	btw quiznilo have you checked out gorm?
<ebonics>	i chose to use that over sqlx
<quiznilo>	yes
<quiznilo>	long ago
<quiznilo>	peeking again
<quiznilo>	so much good db work going on
<quiznilo>	ya ORM, a bit too much for my uses
<ebonics>	im working on a *imo* cool framework using gorm for graph databases
<ebonics>	RIP
<viking>	lol
<furball365>	i'm new.. was that a mass extinction?
*	hjst is now known as 32NABUIU7
<furball365>	haha
<furball365>	they're BACK!
<furball365>	anyway.. if anyone knows a good way to pinpoint where a runtime panic has occurred in a debug environment.. like catching an exception in Visual Studio, say, then i would appreciate knowing how.
<smw>	furball365, what does that mean? panics have stack traces
<furball365>	so.. is it always the first stack trace which indicates point of failure?
<furball365>	i've got multiple goroutines going
<cespare>	furball365: yes
*	Goopyo_ is now known as Goopyo
<furball365>	cespare: thanks.. i see the Debugger page has been updated which is Good News, but it doesn't look like you can break on panics yet
<furball365>	cespare: looks like someone has done a good job of digging into it, though. Great!
<furball365>	cespare: https://sourceware.org/gdb/wiki/GoDebugging
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Wed May 06 15:05:06 2015

**** BEGIN LOGGING AT Wed May 06 15:20:15 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<hfaafb>	displease: defaultHandler should return a function whose signature matches Service.Handler
<hfaafb>	but
<hfaafb>	w and r aren't defined
<displease>	so it should be a function that returns a function?
<hfaafb>	if that's what you want
<hfaafb>	sure
<displease>	I'm not exactly sure if that's what I want
<displease>	just trying to figure out the best way to define handler functions and pass them in
<hfaafb>	in the simplest case, just use an anonymous function
<furball365>	displease: i don't know if you're on-the-level, but if you check into it a decent editor will catch your errors ASAP. Try looking at vim-go and the like. Don't use a vanilla text editor if you want to be productive.
<displease>	I've been using sublime text with the go thing but i don't like it
<displease>	what else is out there?
<displease>	not a big vim fan
<dmarlow>	esarl: use a pointer as the val
<furball365>	displease: probably there is at least one emacs vet around. I'm fine with VIM and there is probably at least one sublime user around. You can also run 'go vet', but it's easier if it's integrated into the editor hotkeys
<hfaafb>	displease: i think what you might want is to define a type  that implements http.Handler
<displease>	not a big emacs fan either lol
<dmarlow>	esarl: https://play.golang.org/p/ODubaB5q2Q
<hfaafb>	displease: https://elithrar.github.io/article/custom-handlers-avoiding-globals/
<displease>	oh awesome, thank you
<esarl>	dmarlow: thanks!
<displease>	hfaafb: I've been wary of googling for solutions to things, when I did that week I ended up reading a garbage book that gave me a ton of bad habits
<displease>	seems like theres a lot of blind-leading-the-blind out there
<hfaafb>	displease: defining a http.Handler is as simple as implementing ServeHTTP, it's extremely straight forward
<displease>	intelliJ's go support looks nice
<muraiki>	displease: I really like intellij
<dmarlow>	esarl: also, your type info in the var declaration is optional. you can leave that stuff off and it's a lot less typing/reading/etc
<displease>	muraiki: will the community edition work or do i need to get ultimate
<muraiki>	displease: CE works fine. I normally use either vim or sublime, but intellij's go plugin is excellent
<esarl>	dmarlow: oh. i wanted it global because it gets initialized in one function and is used in other functions. is there a better way of doing that?
<dmarlow>	global is fine, although i would prob shake a stick at you if we were working together for this kind of thing
<displease>	muraiki: yeah im accustomed to sublime but i really dont like the go plugin for it
<dmarlow>	i was just saying that the type is inferred, so a global var headers = make(map[string]*header) is fine
<esarl>	dmarlow: i guess i should be passing it around instead of using global then?
<hfaafb>	displease: http://play.golang.org/p/ixnO_bsNEz
<hfaafb>	this is a common pattern ... well defining your own Handler is a common pattern
<displease>	right
<displease>	thank you
<furball365>	displease: hopefully u r pleased :)
<displease>	i am
<displease>	lunch time, bbs
<andlabs>	https://github.com/golang/go/commit/ec87dbf91330b8f12851b50675c812e4e3aee203 commit message is best non sequitur
<hfaafb>	i'm confused about that diff
*	hfaafb looks deeper
<dmarlow>	andlabs: strange that the defer isn't after checking err from set
<jmoiron>	hfaafb: thanks
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed May 06 15:49:55 2015

**** BEGIN LOGGING AT Wed May 06 15:54:48 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<cespare>	huh, weird log line: http://play.golang.org/p/Cz5tXO5kkq
<cespare>	in particular the asm_amd64.s:402
<Wessie>	Hello!
<skripted>	jmoiron: ah true, thx
<furball365>	don't know if anyone is overseeing the gccgo branch, but it does not appear to configure properly on yosemite (maybe other systems, too.. don't know). "The following requested languages could not be build: go".
*	smw pings iant: read furball365's message
<smw>	furball365, got any more info on what you did?
<iant>	furball365: gccgo does not work on Darwin
<iant>	sorry
<smw>	furball365, were you trying to compile gcc?
<smw>	iant, ah, didn't know that :-(
<iant>	furball365: http://gcc.gnu.org/PR46986
<furball365>	smw: nevermind.. it was complaining because i ran configure in the src directory. The error message is perpendicular to the cause but i can see why it would complain
<furball365>	smw: i just run ../gccgo/configure from the build directory and it's fine
<cespare>	furball365: ok, but it's still not going to work
<furball365>	cespare: i think i'm finding that out now :)
<cespare>	furball365: the person who wrote gccgo just told you it doesn't work on darwin :)
<furball365>	cespare: thanks! I'm using https://golang.org/doc/install/gccgo .. perhaps a note might deter people
<furball365>	cespare: i don't see a way to annotate the page.. i'll let the site manager know if there is a way to get word to them.
<furball365>	cespare: unless that is also one of your Hats..
<cespare>	iant: reasonable to file a ticket asking that supported OS/arch be added to the gccgo installation page?
<cespare>	furball365: my only hat is "member of the peanut gallery"
<iant>	cespare: it would quickly go out of date
<iant>	there is no fundamental reason that gccgo can not work on Darwin
<iant>	it's just that nobody has done the work
<cespare>	iant: ok thanks
<iant>	a better approach would be for the GCC configure script to give an error
<furball365>	iant: that would be good, too, but it's a fairly lengthy source download
*	jkyle1 is now known as jkyle
<furball365>	iant: there are a lot of macs out there. Is it safe to say that gccgo isn't as widely used? I was interested in its 'native' debugger support
<iant>	furball365: it is safe to say that gccgo is not as widely used, yes
<iant>	it does work, though
<furball365>	iant: it appears to still have some issues, but it is perhaps better than golang judging by this: https://sourceware.org/gdb/wiki/GoDebugging .
*	cgrieger is now known as cgrieger^away
<cespare>	furball365: if you're set on using gdb extensively with Go you're gonna have a bad time.
<echlebek>	It's true, I tried it once and it was a bad time.
<bnagy>	it's like.. using gdb... but even worse!
<furball365>	cespare: so i am told. Do you know whether the Docker team uses gdb? At that level i would think they might get some paradigm leaks.
<cespare>	furball365: no idea
<quiznilo>	hmm... os.ENOENT doesn't seem to exist
<cespare>	quiznilo: os.IsNotExist ?
<iant>	quiznilo: use os.IsNotExist(err)
<cronos>	quiznilo: or syscall.ENOENT if you really need it
<cespare>	quiznilo: ENOENT is os specific and lives in syscall
<quiznilo>	oh
<quiznilo>	thanks
<furball365>	bnagy: i don't mind gdb.. but just when you need it. The emacs interface wasn't bad last time i used it.
<echlebek>	I gotta ask. What is a paradigm leak and how do they occur?
<displease>	is there a way to use lldb instead of gdb
<op3nsv>	Hey guys, quick question. I am listing all the IPs possible in different subnets. But for the life of me I can't figure out a way to skip the first and last ip address no matter which subnet class I end up on.
<op3nsv>	Here is my code I have:
<op3nsv>	https://play.golang.org/p/WbKcF8YRNK
<op3nsv>	I made a hardcoded value to make the golang play code easier to read
<op3nsv>	do any of you have ideas ?
<wayne>	echlebek: i don't know. is that on a space ship?
<jackdesert>	Having trouble getting the *entire file* to write from STDIN to local storage:  https://gist.github.com/jackdesert/a109b0549f19997eda9b . It stops writing when it gets a few lines from the end. Am I missing something?
<echlebek>	wayne: maybe on a space ship with an infinite improbability drive
<displease>	op3nsv: doesn't https://golang.org/src/net/ip.go do that already
<Tv`>	jackdesert: that's bufio still holding your outgoing last chunk
<Tv`>	jackdesert: Flush and Close
<jackdesert>	Tv`: That makes sense ..
<Tv`>	jackdesert: also, most of what you have there is unnecessary, _, err := io.Copy(tempFile, os.Stdin) is plenty
<furball365>	echlebek: the Leaky Paradigm is the bane of all frameworks. A leak is when something unanticipated happens and you have to find out how the framework was put together. In this case a leak would be a runtime panic due to something breaking in the middle of a large body of 3rd party golang.
<op3nsv>	displease: which function are you thinking of, I can't seem to find anything that would skip the first addr and the broadcast addr
<echlebek>	furball365: oh I see.
<displease>	op3nsv: i missed the first part, whatre you trying to do
<echlebek>	furball365: this happens in every framework I've used :)
<furball365>	echlebek: basically the Tower of Babel..
<echlebek>	furball365: except LaTeX
<op3nsv>	displease: with the code I provided here https://play.golang.org/p/WbKcF8YRNK I am listing all the IPs possible in a subnet of a network. But I need to skip the first and last ip addr that are being printed out
<op3nsv>	and the subnet will vary as it gets a specific subnet depending on the kind of network it is on, in the play code I just hard coded a value so you can see how my iteration func works
<Tv`>	op3nsv: is this enough of a hint: https://play.golang.org/p/URUlbSkn52
<op3nsv>	I am trying to find a way in the iteration func to skip the first and last and can't think of a way to do that with the way I have it
<Tv`>	op3nsv: or just literally inc once at the beginning
<displease>	^
<Tv`>	(though that approach won't solve the broadcast address part)
<Tv`>	Equal can; just delay the fmt.Printf until you know it's not the last one
<furball365>	echlebek: it's a tough standard to meet. Rails has done ok. LaTeX will still cause you difficulty, like any framework, if you try to bend it too far. I just read a Kindle book with the strangest typesetting. But i think we both know who wrote it :). It might do weird things, but it probably wouldn't crash.
<furball365>	echlebek: Joel Spolsky calls it the "Law of Leaky Abstractions" http://www.joelonsoftware.com/articles/LeakyAbstractions.html
<bnagy>	augh refs to classful routing in a CIDR handling func.. which only handles netmasks on byte boundaries ;_;
<echlebek>	furball365: definitely. I've never done advanced typesetting but LaTeX never caused me to need to learn TeX.
<op3nsv>	how can I delay since the broadcast will be different depending on the subnet
<jackdesert>	Tv`: Your simpler version does the trick nicely: https://gist.github.com/jackdesert/6dc9d3487543e2e0c770
<echlebek>	furball365: yes, familiar with that
<op3nsv>	If I knew the subnet like say it was always a class c then I skip quite easy
<op3nsv>	but since it constantly changes I thought there might be a way in my inc function
<Tv`>	op3nsv: e.g. if you were to gather these in a slice, you could just slice it out
<furball365>	echlebek: i just like to know i have a net before venturing too deep
<op3nsv>	yeah I was thinking about that
<bnagy>	fun fact - classes and netmasks are orthogonal
<Tv`>	op3nsv: but if you need to do it one by one, and don't want to hold a "last" variable, then construct the broadcast address and Equal..
<bnagy>	imho just do it as a mask on a uint32 and then convert it back
<bnagy>	suddenly proper netmask support
<displease>	mask seems like the way to go
<displease>	funny that you're doing this, was just about to do something similar
<Tv`>	bnagy: in the comment, sure, but ignore the lie and read the code..
<Tv`>	all comments lie, anyway
<echlebek>	/ this comment is a lie
<echlebek>	irc client ruins my joke
<bnagy>	ohhhhh
<bnagy>	more reasons I shouldn't irc before coffee kicks in
<bnagy>	nn, m := networkNumberAndMask(n) yay stdlib
<bhenderson>	is there a way to format floats such that: 1.1 => "1.1", 1.0 => "1"
<dmac>	bhenderson: https://play.golang.org/p/lB_AhRCIEN
<cespare>	http://play.golang.org/p/rmhkwGy0ga
<cespare>	oops late
<skelterjohn>	oh didn't know about that verb
<quiznilo>	I'm given this bytes.Buffer named 'buf', filled with stuff I'm trying to write to a new file
<bhenderson>	interesting
<echlebek>	heh %g doesn't even say it will do that in the docs
<bhenderson>	dmac: cespare thanks
<echlebek>	not explicitly anyway
<quiznilo>	so like any experienced go coder, I create a new file f, _ := os.Create("foo")
<skelterjohn>	lol
<echlebek>	haha
<bnagy>	:)
<quiznilo>	and then I f.Write(buf)
<quiznilo>	and that's when disaster strikes
<cespare>	echlebek: sure it does
<cespare>	"for %g it is the smallest number of digits necessary to identify the value uniquely"
<quiznilo>	thankscannot use buf (type *bytes.Buffer) as type []byte in argument to f.Write`
<echlebek>	cespare: ah, ok
<cronos>	quiznilo: io.Copy
<lemmi>	quiznilo: well.. is a *bytes.Buffer a []byte ?
<quiznilo>	all this io stuff is driving me crazy
<skelterjohn>	quiznilo: buf.Bytes()
<quiznilo>	I don't know... I suppose I should look it up
<cespare>	skelterjohn: cronos's answer is better :)
<bnagy>	quiznilo: and check your errors, that's why everyone was laughing
<quiznilo>	no, they aren't laughing at me.... .... are they?
<echlebek>	yeah I was assuming disaster struck when you tried to create the file
<ebonics>	i thought you were joking haha
<skelterjohn>	i was assuming the disaster was a NPE when you tried to write
<ebonics>	like the first paragraph of the go spec explicitly says not to do that
<cespare>	not the spec
<skelterjohn>	cespare: agree.
<skelterjohn>	(about cronos's answer)
<ebonics>	i forgot where i read it maybe the tour
<ebonics>	but it was like the first thing i read about go
<skelterjohn>	probably 'effective go'
<echlebek>	spec doesn't care if you check your errors
<ebonics>	it seems like the go spec would
<ebonics>	:D
<skelterjohn>	nah, spec just describes the language
<op3nsv>	Tv`: I am having trouble adding each ip to a slice
<skelterjohn>	the language allows you to not check errors
<op3nsv>	https://play.golang.org/p/efQpmvb6gM
<quiznilo>	okay, we have io.Copy(), what about the fmt.Fprint family
<ebonics>	skelterjohn, check out the ECMAscript spec lol
<ebonics>	has tons of idioms
<op3nsv>	Tv`: I keep getting the last ip in every spot, do you see what I might be doing wrong?
<skelterjohn>	op3nsv: there must be a bug in inc()
<skelterjohn>	op3nsv: you get the last ip in every spot but the first
<harikb>	is init a reserved word?
<op3nsv>	oop wrong word
<op3nsv>	https://play.golang.org/p/nV8B-mNOK6
<skelterjohn>	harikb: sort of, it's a reserved function
<smw>	harikb, not a reserved word, no
<op3nsv>	skelterjohn: well here is the thing I when I print ip with the slice funciton it prints out the right ips
<skelterjohn>	op3nsv: i bet it's a pass-by-value issue
<skelterjohn>	op3nsv: i don't really understand what inc() is doing, but i bet it only modifies a local copy
<smw>	harikb, reserved words like type pretty much can't be used anywhere, init just can't be a package level function
<smw>	harikb, and even still, I think a different function signature is allowed
<skelterjohn>	op3nsv: oh, then it's the opposite of what i said
<quiznilo>	what is the point of having bytes.Buffer *and* buf.Bytes()?
<op3nsv>	skelterjohn: it is starting from the last part of the ip and incrementing until the ip is no longer in that subnet
<skelterjohn>	quiznilo: one is a type, the other is a method on that type?
<bnagy>	quiznilo: to convert between them
<smw>	quiznilo, buf.Bytes is bytes.Buffer.Bytes()
<skelterjohn>	op3nsv: your slice has pointers all to the same object
<bnagy>	buffer gives you all the io primitives which is super handy
<quiznilo>	lol smw
<skelterjohn>	op3nsv: so when you inc() it, it is updating everything in the slice, since it's all the same thing
<smw>	quiznilo, ?
<bnagy>	but sometimes you need a []byte out at the end
<op3nsv>	hmm I am new to the pointer stuff, suggestions on fixing it?
<harikb>	skelterjohn:  I am reading effective_go - I see init() is already reserved for a particular use - in fact that is my exact use case. But I am not quite sure when it will be called. I just want it run the first thing from main(). I put a call to init() in main and that is how I realized it was a reserved one
<skelterjohn>	harikb: the spec describes when init()s are called
<skelterjohn>	harikb: but briefly, any init() is called before main() starts, and after the init()s of any packages the current package imports
<harikb>	ok thanks
<skelterjohn>	i *believe* all the inits() are called in the same goroutine, though they can start additional goroutines that will begin execution potentially before main() starts
<furball365>	harikb: you can also define multiple (!) init()s.. that struck me as unusual the first time i saw it
<skelterjohn>	yeah i still think that's pretty weird
<echlebek>	I think it's weird, but I can't say it has a real impact on anything
<echlebek>	at least not in my corner of the world
<echlebek>	How much init() do you really need anyway?
<bnagy>	I haven't found a use for init in anything that has a main tbh
<bnagy>	maybe I just lack imagination
<echlebek>	yeah, you don't really need init() when you have main
<bhenderson>	bnagy: flags?
<bnagy>	why not call Parse() in main?
<skelterjohn>	i use init() for driver registration
<skelterjohn>	basically, when a package wants to set state
<skelterjohn>	less use in main(), i prefer sequencing to be explicit.
<bnagy>	I totally get it for packages
<bhenderson>	bnagy: yeah, I don't know... I just follow the docs of the flag package :)
<bhenderson>	maybe blindly
<echlebek>	yeah, it makes sense for packages. What doesn't make sense is why you'd want to break up your inits within a package?
<skelterjohn>	i dislike the flag package
<harikb>	Now I have the loading of a config inside the init - nothing that couldn't go in to main() strictly
<smw>	echlebek, it allows you to have one per file
<Tv`>	echlebek: e.g. define a thing, register a thing; define a thing, register a thing; ...
<smw>	echlebek, that was useful to me once.
<echlebek>	smw: yes I understand that, just don't see the point of it
<smw>	echlebek, I was using inits to deal with recursion of dependencies
<skelterjohn>	no one would wonder why you could only have one, if you could only have one
<smw>	echlebek, a = combine(b, c); c = a
<bhenderson>	doesn't the go cmd itself have lots of inits?
<smw>	echlebek, I was doing some magic to say c = indirect(); init(){c.bind(a)}
<Tv`>	bhenderson: subcommand registration is a good example of what i was talking about
<smw>	echlebek, but yeah, it is great for registration where you want to register in the same file you define it
<echlebek>	smw: I guess, just seems a little at odds with the concept of a package being a single logical unit
<kevinburke>	What's the best way to define an interface that has functions, but also variables? Say I wanted to let someone implement something that had a Drive() method but separately wanted to let them set a MaxSpeed parameter
<Tv`>	kevinburke: interfaces have nothing but methods
<SaidinWoT>	kevinburke: Interfaces only define behavior
<smw>	echlebek, doing things closer to each other that depend on each other is good
*	flazz is now known as zz_flazz
<smw>	echlebek, like deferring close after opening
<kevinburke>	How could I combine those? Could do a MaxSpeed() function which just returns a constant but that doesn't seem great
<kevinburke>	Maybe make one interface and another struct which holds values
<skelterjohn>	kevinburke: i find it easier to address questions like that if we drop the car metaphors :)
<skelterjohn>	and use an actual case that you're working against
<echlebek>	he could be designing a self-driving car
<kevinburke>	Sorry. I'm trying to make an Experiment class. The user needs to define a Fitness function which operates on members of the pool
<skelterjohn>	kevinburke: so, that fitness function would come in via an interface?
<kevinburke>	Also want the user to be able to set things like the pool size, the mutation rate, # of iterations
<skelterjohn>	those would just be methods/fields on the Experimetn type
<skelterjohn>	no interface necessary
<skelterjohn>	unless you're trying to make a framework for experiment running implementations?
<kevinburke>	So you'd have an Experiment type, and an Experimenter interface with a Fitness method?
<kevinburke>	Yes skelterjohn that's what I had in mind :)
<skelterjohn>	a FitnessEvaluator interface with an EvaluateFitness() method
<jmoiron>	didn't you say Fitness was a function
<kevinburke>	Yep
<jmoiron>	func Fitness(e Experiment)
<skelterjohn>	eep, that's probably a bit of an inversion there
<skelterjohn>	the experiment would use the fitness function to evaluate a particular population
<kevinburke>	Hmm.. I'd like the framework to be able to perform things like Crossover & mutation and do multiple iterations
<jmoiron>	functor then?
<bnagy>	kevinburke: there are a few existing GA things on godoc
<kevinburke>	Without needing to loop back into user control except for the fitness fn
<bnagy>	you could go and steal^Wexamine their APIs
<kevinburke>	Here's what I have now https://github.com/kevinburke/rct/blob/master/genetic/lib.go
<kevinburke>	Yeah I prolly could... Trying to figure out how to let the user define pool_size etc
<bnagy>	tbh all the GA stuff I have ever done I write really non-abstract implementations
<bnagy>	because then it's fast and easy :>
*	zz_flazz is now known as flazz
<echlebek>	same with monte-carlos, you can usually make a made-to-measure one in a few hundred lines
<bnagy>	you can initialize with a config struct, that's a common idiom
<kevinburke>	Kk. Thanks everyone for the tips, I'll try out a few of the ideas here
<bnagy>	and then provide evaluation and mutation as functions in an interface
<furball365>	iant: just FYI here is gccgo on Darwin issue: https://github.com/golang/go/issues/10727
<bnagy>	maybe have that for each population member Mutate() Score() Breed(other Member) etc
<echlebek>	I wrote a GA that let you breed with {n | n > 0} other members once. Things got crazy fast.
<echlebek>	That was when I realized I didn't really know what I was doing and should just stick to basics.
**** ENDING LOGGING AT Wed May 06 17:14:31 2015

**** BEGIN LOGGING AT Wed May 06 17:17:46 2015

<bnagy>	with a GA?
<lemmi>	yep
<bnagy>	bro do u even NP-complete?
<bnagy>	GA is not for 'optimal' ;)
<lemmi>	i know the optimal score
<lemmi>	and if it wasn't possible to find a propper solution in a timely fashion a differen mix of pizzas had to be ordered
<bnagy>	"A GA is the second-best approach to almost any problem"
<skripted>	anyone using a testing lib like gingko+gomega or do you guys prefer stdlib testing?
<skelterjohn>	GA's can find local maxima. when there is only one maximum, it can be optimal :)
<bnagy>	to address local maxima for pizza you could do simulated congealing
<bnagy>	*rimshot*
<bnagy>	that killed them in Salt Lake City :(
<heydabop>	what the hell
<quiznilo>	lol
*	igors_ is now known as igors
<echlebek>	bnagy: I understood that reference
<furball365>	bnagy: congealing :)
<echlebek>	my GA bred musical scales together. What came out was not unlike free jazz.
*	gattuso is now known as Guest1
*	Guest1 is now known as gattuso
<hfaafb>	is it weird that i rarely see people here asking for help with concurrency
<kolorado>	I'm distributing jobs across EC2. I rsync data to an EC2 instance, run a command that takes ~1hr, rsync the output and then terminate the instance. Any best practices on checking the status of the job while it's running, and knowing when to terminate? I was thinking using the SQS (Simple Queue Service) would be a good-enough thing to use.
<echlebek>	hfaafb: when I have concurrency problems I usually just suffer in silence ;)
<kolorado>	This is my first foray into distributed computing. I'm doing it all in Go but this question is not go specific.
<echlebek>	hfaafb: I see concurrency questions in here though.
<hfaafb>	i feel like channels are the missing piece in my go knowledge
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed May 06 17:43:59 2015

**** BEGIN LOGGING AT Wed May 06 18:42:06 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed May 06 18:42:10 2015

**** BEGIN LOGGING AT Wed May 06 18:42:56 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Wed May 06 18:43:00 2015

**** BEGIN LOGGING AT Wed May 06 18:43:43 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	[freenode-info] help freenode weed out clonebots -- please register your IRC nick and auto-identify: http://freenode.net/faq.shtml#nicksetup
*	Disconnected (Remote host closed socket)
**** ENDING LOGGING AT Wed May 06 18:43:49 2015

**** BEGIN LOGGING AT Wed May 06 19:42:43 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<echlebek>	I bet it does some tomfoolery to preserve the semantic meaning :)
<dmac>	yeah, probably a wrong guess
<dmac>	nothing jumped out at me here: https://golang.org/src/cmd/gofmt/rewrite.go
<echlebek>	well (a + b) * c produces a different AST than a + b * c, maybe the tool will only do transformations that preserve the AST
<robot-beethoven>	that sounds like a good constraint
*	flazz is now known as zz_flazz
*	zz_flazz is now known as flazz
*	flazz is now known as zz_flazz
*	Guest6727694 is now known as lolmac
*	e-dard is now known as e-dard_afk
<Freman>	http://play.golang.org/p/nlDZEEyHpi - shouldn't that exit after 1 second?
<skelterjohn>	Freman: at first glance it seems like it
<cespare>	Freman: no
<cespare>	Freman: the time.After is evaluated each loop iteration
<Freman>	suppose the question I should have asked, why not :D
<cespare>	Freman:  you probably want time.Timer
<Freman>	ah
<skelterjohn>	oh haha yeah
*	Freman is having a go at a multithreaded downloader now
<Freman>	time.After manual says it works the way I set it up... http://golang.org/pkg/time/#example_After or at least that's what that example indicates :(
<Freman>	oh, no I get it
<skelterjohn>	you need to create it once before you start the loop
<Freman>	it basically sleeps that long
<skelterjohn>	ch := time.After(1s); for { select { case <-ch: .... } }
<Freman>	yeh, it's being used there as a timeout per request I get it now
<Freman>	brilliant, this works :D
<Freman>	http://play.golang.org/p/EisflzwtZ6
*	ChanServ gives voice to iant
<scientes__>	can someone help me debug this rbtree implementation: http://paste.debian.net/172305/
<bnagy>	scientes__: you'll probably have more luck if you can put runnable code on play.golang.org
<scientes__>	http://play.golang.org/p/NCPyPJGyoR
<scientes__>	the problem is that it doesn't work, they insert all wrong
<scientes__>	i checked and rechecked it against the C it is based on
<scientes__>	What about that c-to-go translation tool the compiler used, maybe i can use that
*	zz_flazz is now known as flazz
<scientes__>	question: does the gc hold onto an item if the pointer points to somewhere in the object, or only the beginning
<scientes__>	slices would probably only work if it can point to the middle
<bnagy>	scientes__: yeah you're going to need to add code demonstrating the failure :)
<bnagy>	afaik backing arrays are live until all slices that view any part of them are gone
<bnagy>	but I wouldn't rely on it
<scientes__>	cause I'm using offsetof
<scientes__>	so its kinda important
<scientes__>	its not a slice, but it points to the internal
<scientes__>	and yes of course a slice keeps the whole backing array
<bnagy>	why are you using unsafe?
<bnagy>	oic.. wtf
<bnagy>	try not doing that
<maniacal>	Hi.  How can I do a multi-line assignment like this: http://play.golang.org/p/3nnJxJJ7Fr
<scientes__>	the real project is to add type safety to porting the container_of() macro the linux-kernel
<scientes__>	but I have to get the reference working before I can demonstrate the compiler feature needed
<daved>	maniacal: add a comma to the last item
<maniacal>	awesome.  thx
<daved>	maniacal: http://play.golang.org/p/ewsEQxQEMd
<maniacal>	that'll be a tough one to remember :)
<daved>	maniacal: The compiler adds a semi-colon to the end of lines, so adding the comma tells the compiler that more is coming and not to add the semi-colon.  It should be easy to remember if you think of it that way.
<scientes__>	maniacal, you can also move up the closing bracket
<maniacal>	oh.  for sure.  that will make it easier to remember
<maniacal>	scientes__: ic.  then don't need the comma.  thx
<daved>	^ That too, but often the "look" of maniacal's snippet is desired.
<scientes__>	daved, it also makes version control nicer with the trailing comma
<daved>	scientes__: Why's that?
<maniacal>	yeah.  I don't like having it on the same line as the last item
<maniacal>	I'd rather have it after I think
<scientes__>	cause you don't have to change that line to add another at the bottom daved
<daved>	scientes__: Oh, I see.
<scientes__>	bnagy, http://play.golang.org/p/IGdQwPDKTk
<scientes__>	the outputs should be the same but they are not
<scientes__>	http://play.golang.org/p/k-gyttn-Eo
<bnagy>	the first thing I would do is get rid of unsafe
<edcarter>	anyone think that a Go interpreter would be feasible? compilation tends to be pretty fast
<bnagy>	edcarter: it makes no sense
<bnagy>	this is partly my opinion and partly a digest version of the last 100 times it has come up on the channel
<scientes__>	edcarter, non sequitor
<scientes__>	compilation speed and interpreter totally unrelated
<scientes__>	edcarter, anyways, the answers is no. go's lack of forward declaration means the entire file must be scans before anything can be interpreted
<edcarter>	scientes__, thanks for the info
<jY>	all, whats the best dev stratagy for working with a github fork of a project that has includes all over the place for the parent.. if i need to do work on both the main project and the includes
<scientes__>	edcarter, doesn't mean you can't do JIT however
<bnagy>	jY: when I've done it I left the import to upstream when I could, otherwise I forked and changed the imports to my fork
<jY>	bnagy: is there anyway to do local includes.. like they do import github.com/owner/app/collector is there anyway to import ./collector
<bnagy>	I changed it to github.com/myfork/app/collector iff I needed to change it
*	generic is now known as shanse
<jY>	ok thanks
*	flazz is now known as zz_flazz
<edcarter>	any of you guys use GoConvey? Looks like a pretty nice tool
<Freman>	http://play.golang.org/p/gqQ6eV79wF 299-337 + 392-420 - I think I"m doing this the hard way
<Freman>	thinking it might be better to just tell each goroutine it can run for $x seconds, and just harvest them all when their done
<Freman>	s/their/they're/
<steveeJ>	hey there, how do I access the const items listed here? http://golang.org/src/os/types.go?s=1044:1064#L20
<steveeJ>	I use os.Stat() to retrieve a FileInfo, and I want to check if it's a device using ModeDevice
<hyphenated>	steveeJ: fi.Mode() & os.ModeDevice != 0
<steveeJ>	thanks hyphenated, so the const vars are available from os.
<hyphenated>	steveeJ: http://play.golang.org/p/RHNpalNhtE
<daved>	Not that it helps much, but os.DevNull exists.
<scientes__>	bnagy, hmm yeah seems like it was the unsafe code
<scientes__>	http://play.golang.org/p/1ET8lUePc8
<scientes__>	but now I can change the sorting
<scientes__>	cause its by pointer location
<scientes__>	still not sure what was screwing it up....I need that stuff...
<scientes__>	could be the gc.....
<bnagy>	I can't see why you would need / want unsafe for an RB tree in go
<scientes__>	anyone know how the gc works?
<scientes__>	bnagy, with a compiler feature it can be type safe
<scientes__>	bnagy, except for the implementation
<scientes__>	bnagy, I was trying to make the write up on the feature
<scientes__>	bnagy, its how rbtrees work in the linux kernel
<scientes__>	using container_of() which is based on offsetof(), but the feature adds type safety so users of the rbtree impl. don't need unsafe
<bnagy>	ok, well I just spent all day parsing so my brain is broken and I don't want to try to actually understand your zero-comment algorithm
<bnagy>	you can disable the GC, if you think something is getting hoovered
<scientes__>	how
<bnagy>	in runtime, isn't it?
<scientes__>	its this: https://github.com/xemul/criu/blob/master/rbtree.c
<scientes__>	bnagy, oh yes i remember
<bnagy>	if I had to guess I'd say you're not looking at the offsets of the things you think you're looking at
<bnagy>	but I can't back that up, sry
<bnagy>	add moar printf
<scientes__>	no way to turn off GC in runtime
<scientes__>	only run it
<scientes__>	oh GOGC=off
<Freman>	so how to ya'll break things up... I usually end up with one file of types... but can't decide if the func (x type) funcs should go in there with them...
<scientes__>	variable
<bnagy>	scientes__: SetGCPercent to negative
<bnagy>	Freman: imho put methods in with the types they act on
<bnagy>	but (again imho) I don't have one file per type or anything, I use bigger, more thematic files
<Freman>	cos I have 500 lines of code, and the first 100 are just types most of which are related to the parsing of xml, the following 100 lines are all Unmarshal* functions...
<bnagy>	turns out it's easier to search within a big file using modern editors
<bnagy>	500loc is nothing :)
<bnagy>	just stick it in one file
<bnagy>	type meths type meths ...
<scientes__>	bnagy, s/+/-/
<scientes__>	^^
<bnagy>	?
<Freman>	I went type1, type2, type3, type4, meths1, meths2, meths3, meths4, funcs
<bnagy>	up to you, but I don't like that style
<bnagy>	and based on unscientific sampling that's not common
<Freman>	heh, that's why I'm here asking - I can't find a style I like :D
<Freman>	maybe the problem is sublime...
<bnagy>	I do type, meths ... funcs in vaguely fdecl order main at the bottom
<ebonics>	do you put main at the bottom out of habit
<bnagy>	I don't know if https://github.com/golang/go/wiki/CodeReviewComments has anything
<bnagy>	well personally I put it there because that's where I'm used to looking for it in other people's code
<bnagy>	but all this is Just My Opinion, Man
<Jules_>	good day! I kind'a new here in
<Jules_>	go
<hyphenated>	Freman: you probably want to keep types and their related methods in the same file
<Jules_>	just a quick question, is it possible to declare a variable without a type?
<_jesse_>	I tend to put methods next to their types
<hyphenated>	Freman: but overall "how to organize shit" is hard to explain, except you know when things are disorganized
<bnagy>	Jules_: strongly typed. ie no.
<_jesse_>	Jules_: no, unless during initialization where the type is inferred
<_jesse_>	e.g. x := 5
<Jules_>	oh i see thanks :)
<bnagy>	oh, derp, I don't think of that as 'without a type'
<bnagy>	my bad
<bnagy>	did I mention I have been parsing PDF all day?
<bnagy>	o_0
<_jesse_>	that sounds...
<_jesse_>	fun
<hyphenated>	bnagy: that sounds terrible
<bnagy>	rite?
<Freman>	yeh, my code feels a bit like my house - messy, not because it's "messy"  but because it isn't organised (insufficient storage - something I'm working on with a new desk and work space area in the nerd cave)
<hyphenated>	Freman: just put it in the kitchen, so you don't have to get up for snacks and meals
<ebonics>	genius
<Freman>	nerdroom actually opens into the kitchen besides the fridge :D
<_jesse_>	maybe it is a weird corrolary to conways law that code reflects the physical environment it was written in
<bnagy>	I wish
<hyphenated>	I'm a bit lucky, a year ago I moved back from overseas with nothing but clothes. so I don't have a lifetime of accumulated junk. it all got given away before a big move back
<Freman>	_jesse_: this is all written in a nice clean office with marketing making lots of noise... so I can believe that :P
<bnagy>	I wrote my last bunch of stuff sitting by the ocean in Palau
<Jules_>	can you guys help me out? I am creating a simple cli program that is based on https://github.com/JeanMertz/consulctl and https://github.com/ashcrow/consuloretcd to communicate with the consul/etcd KV store. I am having trouble on making it work in both "consul" and "etcd" mode. It works if it just operate in one mode.
<bnagy>	it's not tropical and breezy at all :(
<Jules_>	this is my repository https://github.com/TelanJ/consul-kv-ceph
<Freman>	I have an oscilloscope sitting on the bedside table because there's no-where to put it (and another in it's box at the foot of the bed).
<cronos>	hyphenated: moved 6mo ago with my clothes. managed to accumulate more junk that i previously had :(
<hyphenated>	hah
<Freman>	bnagy: but I bet it's not depressing
<_jesse_>	Jules_: you are declaring the client variable inside of conditionals -- they won't be available outside
<_jesse_>	not sure if that is your issue specifically, but it is definitely an issue
<_jesse_>	e.g. https://github.com/TelanJ/consul-kv-ceph/blob/master/command/put.go#L34
<_jesse_>	is redeclaring `client` that you would have declared on line 31
<_jesse_>	`client`s type should also be `consuloretcd.KeyValueStore`, not `interface{}`
<Jules_>	_jesse_: thank you, i'll try what you have said
<bnagy>	https://github.com/bnagy/pdflex/blob/master/cmd/pdfshrink/main.go so. much. pain.
<bnagy>	need beer, stat.
<_jesse_>	I can't even imagine if you had to handle other PDF versions as well
<_jesse_>	I assume you've seen http://cuddle.googlecode.com/hg/talk/lex.html
<Jules_>	jesse_: This happened after i did what you said. http://pasteio.com/ih6
<bnagy>	yeah that's what I based the lexer on
<bnagy>	this is all on top of that. Tbh the lexer was long but less mind-bending
<_jesse_>	Jules_: you post the new code that causes that error?
<_jesse_>	just the one file is fine if you don't want to commit it
<Jules_>	this is the new code http://pasteio.com/ih7
*	veonik_ is now known as veonik
<_jesse_>	Jules_: exactly, you are declaring `client` again
<_jesse_>	use `=` not `:=` for assignment
<_jesse_>	`:=` does declaration and assignment
<Jules_>	_jesse_: Thanks a lot! it now works :)
<_jesse_>	np
<hendry>	can someone explain why I can't build or `go get` outside the GOPATH which seems to be, by default $HOME/go ?
<hendry>	sometimes I just want to work from /tmp or something
*	veonik is now known as veonik_
<hyphenated>	hendry: you can temporarily set it to /tmp if you prefer
<hendry>	hyphenated: but why have this odd constraint to begin with is what I am wondering?
<hyphenated>	hendry: the go tool uses it for basically everything
<hyphenated>	if you don't want to use the go tool, you can invent your own way of doing..everything
<daved>	hendry: or, create $GOPATH/src/scratch/tmp0
<chance>	hendry: all the 'go' tools use GOPATH
<chance>	that's just how they work
<chance>	you can compile go code using the go compiler without the go tools
<hendry>	why can't it just work with the CWD? What other features do `go tool` provide since it has a defined $GOPATH?
<daved>	If using any CWD, where will installed binaries go?
<daved>	Should it assume, after you've gone outside of convention, that you will be ok with convention for installed binaries?
<hendry>	daved: i can manage where my own binaries deploy myself, e.g. ~/bin or /usr/local/bin ... I am not sure where/how Go thinks they should live
<daved>	hendry: I knew I felt weird saying "install 'binaries'"
<daved>	s/binaries/packages
<daved>	https://golang.org/doc/articles/go_command.html#tmp_3
<daved>	hendry: The second to last paragraph in the linked section addresses your concern directly.
<chance>	hendry: well first, you need some kind of canonical import path
<chance>	if cwd was your GOPATH, then it would expect {src,pkg,bin} all in your cur dir
<chance>	which could be a pain since you might not want all those things in the same dir as your source.
<pnsrc>	hi, Is there a workaround to convert a []uint64 value to uint64?
<robot-beethoven>	one is a slice of the other
<daved>	pnsrc: as in, a reduce function?
<pnsrc>	I want to use a member of a slice as a uint64 value
<daved>	pnsrc: if you know which, it would be myInt64[i]
<pnsrc>	I tried, that, but got a mismatched error
<pnsrc>	I'll post it
<daved>	pnsrc: http://play.golang.org/p/moU2QhBBxf
<daved>	pnsrc: further - http://play.golang.org/p/Rvv2DPWxw9
<pnsrc>	thanks
<fivetwentysix>	how can i start a server and close it, or start 2 servers rather? http.ListenAndServe(...) blocks...
<chance>	use the go keyword
<fivetwentysix>	okay, so create a go routine? How would I close the server gracefully...
<daved>	fivetwentysix: please define gracefully
<chance>	^
<fivetwentysix>	no memory leaks, waits for requests to finish?
<fivetwentysix>	daved: ^
<chance>	generally you write a custom listener or something
<daved>	i use https://github.com/tylerb/graceful
<daved>	I have about 8 servers setup and run.  There is a waitgroup involved, and other minor tricks for reloading, etc.
<chance>	generally libraries work
<chance>	but it's pretty easy to write too
<pnsrc>	one more question, is "copy(mySlice, myFunc(num))" a good way to to make a slice identical to output of an external function?
<chance>	you basically write a custom listener with a different Accept() method.
<fivetwentysix>	daved: wow, one go file. 300 lines
<daved>	Worth noting is that I disable the SIGINT/SIGTERM handling that is provided and handle it myself with my own lib - https://github.com/codemodus/sigmon/
<fivetwentysix>	that's some high quality code
<chance>	its not that hard to write.
<daved>	oops, need to push some changes to my lib.
<keepguessing>	I see multiple git repos for godef. which one should I be useing?
<keepguessing>	rogpeppe/godef · GitHub vs buaazp/Godef · GitHub ?
<keepguessing>	ok looking at the individual repos found that one was for sublime-test
<keepguessing>	s/test/text/
<pnsrc>	I get "panic: runtime error: index out of range"
<edayo>	keepguessing, im wondering why you arent installing with package control
<keepguessing>	edayo, I am new to go. so golang has package manager :-)
<keepguessing>	edayo, is it gopm?
<keepguessing>	edayo, are you asking me to use the default package manager for my linux dist?
<edayo_>	no im talking about: https://packagecontrol.io/
<edayo_>	its the semi-official package manager for sublime
<keepguessing>	edayo_, I am not using sublimetext. I am using vim.
<pnsrc>	you could use vundle, I guess
<keepguessing>	pnsrc, I installed vim-go via vundle. but it throws an error saying godef is missing.
<edayo_>	keepguessing, my appologies, i from the repo, godef seems to be a sublime-text plugin, i didnt realise it could be used with vim
<keepguessing>	pnsrc, I install gocode the same way.
<keepguessing>	edayo_, I am not sure it can be. I am asking around too :-)
<keepguessing>	http://gopm.io/ maybe I could use this one.
<edayo_>	keepguessing, ah in that case, id be interested in the answer too
<sodae>	keepguessing: read the vim-go readme
<sodae>	keepguessing: :GoInstallBinaries
<keepguessing>	sodae, I ran that and it did not do anything. I ran it again right now and it worked. When I tried the first time I have missed some steps. So probably tracing my steps back would have helped
<keepguessing>	sodae, thanks for the pointer.
<daved>	pnsrc: "panic: runtime error: index out of range" means just what it says.
<pnsrc>	thanks, but it seems to be in range; the code has no comments and is bad, I'll recode the function with a map
<__john_doe__>	hey guys, I need to wait for all gocoroutines to finish before program terminates
<__john_doe__>	should I use chains or sync?
<daved>	pnsrc: if it matters, a map will be slower.
<daved>	__john_doe__: chains?
<daved>	__john_doe__: waitgroup
<__john_doe__>	c := make(chan struct{})
<__john_doe__>	daved: this
<pnsrc>	thanks,
<daved>	__john_doe__: channel?
<pnsrc>	bye
<__john_doe__>	daved: yes sorry
<daved>	np
<__john_doe__>	but anyway I need to pass both to my function
<__john_doe__>	right?
<daved>	__john_doe__: If there is nothing interesting involved, a waitgroup is probably best.  If something needs to be communicated, use channels.
<__john_doe__>	daved: Im building image api, so the image will be uploaded and than I will use coroutine to generate thumbnails
<daved>	Are you sure that you're thinking through whether it should be asynchronous or not?
<__john_doe__>	daved: well it should be async
<__john_doe__>	otherwise it;s gonna take forevery
<__john_doe__>	"forever
<daved>	Many thumbnails, one person waiting?
<__john_doe__>	other way is to use message queue
<__john_doe__>	and if upload is successfull and at least one thumbnail is generated
<__john_doe__>	return result
*	ujjwalkanth is now known as pers3us
<daved>	if you have a work request come in, and multiple things need to happen at once, and once all are done you are free to respond to the client, then a workgroup is best.
<__john_doe__>	daved: you mean I can return response, and go can continue execution in the background?
<daved>	If you wish to get any more detailed, you will need to work out how you should structure communicating between all the goroutines and the calling code.
<daved>	__john_doe__: If you don't care to wait until all things are done, then no waitgroup is needed.
<__john_doe__>	daved: yes I dont want him to wait till everything is done
<__john_doe__>	if upload is successfull and if one thumb has been created
<hendry>	thanks btw daved, almost forgot to thank you
<daved>	hendry: no problem.  Think of some of the idiosyncrasies in the same way as driving laws.  They aren't necessarily perfect, but by agreeing to them, we can get a lot done consistently.
<daved>	__john_doe__: slow down and read my responses carefully.
<daved>	There are three options I'm laying out, although, maybe someone more intelligent would come up with more.
<daved>	You can receive a work request, call the goroutines, and return.  You can receive the request, call the goroutines and wait for all to return using a waitgroup.  You can receive the request, call the goroutines and provide them a way to communicate back to the calling code (one or more channels), and then do whatever you want with the data communicated back to the calling code.
<__john_doe__>	daved: okay so the one with channels
<__john_doe__>	I call all goroutines, wait for at least one success response and if I get it I return
<daved>	__john_doe__: You might be tempted to start a waitgroup with Add(1), but if you have multiple channels call Done(), you will have problems.
<__john_doe__>	"return response to the user to be specific
<__john_doe__>	but will other gorouties carry on execution?
*	pjoe is now known as pjoe_dj
<lemmi>	__john_doe__: and then all other goroutines get killed when your program exits
<__john_doe__>	lemmi: ok thx
<daved>	lemmi: That
<daved>	lemmi: That's not necessarily true.
<daved>	lemmi: Did the program exit?  Or just the calling function?  The calling function can exit without killing the goroutines.
<lemmi>	daved: of course it is. if main exits, the rest is killed
<__john_doe__>	yes but if the request comes from browser, not sure that request will be done before main exits? or maybe I can send something back to the browser?
<daved>	__john_doe__: If main exits, the server dies.
<daved>	__john_doe__: It is not likely that main will exit if your users are interacting with your application through an http server.
<lemmi>	__john_doe__: you might want to consider something like that: spawn multiple worker-goroutines that pull work from a channel until this channel is closed, thus signaling no more work will be delivered. you also need a waitgroup or a second channel to synchronize the remaining workers until all of them are finished
<__john_doe__>	okay so technically my goroutines will carry on even if I return from function that is handling request
<daved>	lemmi: I think the waitgroup is not needed.  I'll write up a play in a few minutes if anyone cares.
<daved>	brb
<__john_doe__>	tyt
<lemmi>	normally you spawn as many workers as you have cpus for parallel workload, or as many as you want to have doing IO on IO-heavy applications
<__john_doe__>	this is going to be cpu intensive as it's an image service
<lemmi>	daved: that's true as long he doesn't care about shutting down the thin cleanly
<__john_doe__>	that's generating thumbnails
<lemmi>	__john_doe__: doesn't matter. you might even consider splitting the part up. so have a set of workers that do the thumbnails and have a set of workers that do the uploading
<lemmi>	the number can differ
<__john_doe__>	well the one worker is doing upload, as soon as upload is successfull I activate workers to generate thumbs
<__john_doe__>	and Ill put my service behind reverse proxy
<lemmi>	__john_doe__: in any case, you know what tools you might need. if you don't know how to use them, read on that up first and then decide what suits you best
<__john_doe__>	yes
<__john_doe__>	ta lemmi
<daved>	lemmi: "shutting down the thin cleanly" - Depends on what is happening in the goroutines.
<daved>	__john_doe__: lemmi: "a set of workers that do the uploading" - the http handler instances are that.
<lemmi>	daved: what? you consider killing of goroutines a clean shutdown? yes at the moment http-server can not easily be shut down cleanly, so whats the point you might ask. for one, hopefully it will be implemented in 1.5, he might have to sync on something later we/he don't know about yet. he probably can use the practice
<lemmi>	daved: especially then he should think about limiting that number
<daved>	lemmi: You are thinking to narrowly and it is resulting in hyperbolic assumptions.
<daved>	lemmi: I agree that limitation may be needed, but that is a separate implementation detail.
<lemmi>	daved: other way around, i'm assuming less.
<daved>	lemmi: Yes, narrow, but far-reaching assumptions.
<v0idcat>	daved: it's not *too* hard to shutdown a http server. you just need a custom listener
<daved>	v0idcat: sure.  I wasn't the one concerned with that.
<v0idcat>	daved: oh right. not seeing lines straight :)
<lemmi>	which is my point: i'm making less assumptions about the environment, so it won't break as easily when things might change (or still work cleanly for that matter)
<daved>	You can even hold/delay requests using a mutex in middleware, but depending on many factors it is probably better to return a "busy" response.
<daved>	Let's either put it to code or let it rest.
<__john_doe__>	daved: if I want to put service down, I can stop receiving requests
<__john_doe__>	and wait for all coroutines to finish before I kill main
<daved>	__john_doe__: I don't think you will want to kill the main function.
<daved>	Unless you want service outage entirely.
<__john_doe__>	what if I want to update my service
<daved>	__john_doe__: I suggest having a fallback in your reverse proxy.  Take your primary offline and have requests go to the fallback.  Bring the primary back online after updating.  Then update the fallback.
<daved>	Others may have better ideas.
<__john_doe__>	that's what I thought Ill have 2-3 instances
<__john_doe__>	and during update put one by one down
<daved>	__john_doe__: For more than two, I would consider having a "down for maint." response as it will get more complicated.  At least it can if you have database updates, etc.
<__john_doe__>	daved: I will verson my service, so if it's minor update, it should be compatible
<__john_doe__>	if it's version update, than Ill use different url, so my proxy is not going to point to that service anymore
<__john_doe__>	daved: in this case, where should I close channel? https://play.golang.org/p/nbKBmr4ZtW
<daved>	__john_doe__: I'm not sure how to approach that.  Maybe someone else can see how to help.  I will provide some examples based on the suggestions I made before.  After that, try to have me see it more from your need/perspective.
<__john_doe__>	daved: well if Im using channels wrong, Im opened for suggestions
<daved>	__john_doe__: I wouldn't say wrong, just not what I had thought you were trying to accomplish.  Again, let me work a bit more on this play and then we can try to go from there.
<__john_doe__>	anyone else any suggestion on this matter? https://play.golang.org/p/nbKBmr4ZtW
<jules_>	is there any way to convert int to uint?
<lemmi>	__john_doe__: your channel is never closed, use a waitgroupt
<lemmi>	and if you don't, you'll end up implementing waitgroup in worse anyway :>
<__john_doe__>	lemmi: so I can't close channel without waitgroup here? or I can use for loop instead of range
<lemmi>	__john_doe__: the actual problem is, you don't know which goroutine will be the last to stop working
<__john_doe__>	lemmi: yes
<lemmi>	__john_doe__: if your channel is closed before that and a goroutine is writing to that channel the program will panic
<jules_>	how can i convert int to uint64?
<lemmi>	jules_: uint64(you_int)
<jules_>	is there a function that lets me choose what the base of the number is?
<lemmi>	jules_: but also think about unifing your code to not need the conversion, though sometimes this isn't possible of course
<lemmi>	jules_: an integer is always base 2
<lemmi>	jules_: you are asking about string to int conversion, which is a totally different matter
<lemmi>	jules_: i'm assuming you coming fom php/js something like that?
<jules_>	js :)
<jules_>	i'm a bit confused with the syntax in go
<lemmi>	jules_: you need to parse the string, have a look at the fmt or strconv package
<lemmi>	jules_: this has nothing to do with syntax
<lemmi>	jules_: a string is not an integer
<lemmi>	it's as simple as that
<Xetius>	Im attempting to profile my go application, and when I run web it attempts to open in illustrator (running on a mac).  Any idea how to get this to work?
<jules_>	lemmi: Thanks for the help
<__john_doe__>	lemmi: how can I implement waitgroup in this case?
<lemmi>	__john_doe__: sync package
<lemmi>	__john_doe__: and if you are wondering how they did it: look at the source
<daved>	__john_doe__: Code coming.  Hold tight.
<daved>	You don't want a waitgroup.  I'll apologize otherwise.
<__john_doe__>	lemmi: like this? https://play.golang.org/p/5hZ6nIzQ6m
<__john_doe__>	daved: k
<lemmi>	__john_doe__: not quite. you might miss some of the Printlns that way
<__john_doe__>	lemmi: How? I'm waiting for 100 routines to finish before I exit?
*	traph1 is now known as traph
<lemmi>	__john_doe__: no. your loop is in another goroutine and you don't care if it's finished or not
<lemmi>	so it might read the last value, then your main prints "Done" and kills of the goroutine, thus not printing the last line
<daved>	http://play.golang.org/p/0259aGB2Dc
<daved>	If you need to put a hold on the server responses because you have goroutines running, there are a couple of ways to handle that, or more.  I think I might be able to implement one quickly.  But it's almost 2am here and I need to go soon.
<lemmi>	__john_doe__: http://blog.golang.org/pipelines
<dmitris>	Hi!  Does the command-line godoc not show docs for subpackages under “internal” path?
<dmitris>	for example, is it possible to get an equivalent of https://godoc.org/golang.org/x/text/internal/triegen#Gen on the command-line?
<Qwrrtz>	Hello is there any way to reuse encoding/json or is there a library which offers the same functionality. I'm writing a specific type -> binary en/decoder library but doing it all with proper caching and such would take a huge amount of time.
<daved>	__john_doe__: lemmi: I'm not experienced with pipelines, so there very well could be a lot of wisdom using them.
<lemmi>	daved: yes there is. he could make good use of the last part (bounded parallelism)
<__john_doe__>	I will take a look into all of this... both suggestions and prob come back tomorrow with more questions lol
<Furao>	is there a way to create a range from an int in template/html template? I have 5 and i would like to {{ range $x := something(5) }}{{ $x }}{{ end }} ?
<daved>	Furao: Isn't that a loop, not a range?
<daved>	s/for loop/loop/
<Furao>	oh
<Furao>	yeah
<Furao>	I know
<Furao>	sorry :)
*	foofoobar_ is now known as foofoobar
<Furao>	wait, no I can’t create a for loop like that in template right?
*	Guest476 is now known as bruston
<sztanpet>	sure yo ucan
<Furao>	sztanpet: how?
<Furao>	I can’t find any usage of keyword “for” or “loop” that might be doing this in http://golang.org/pkg/html/template/
<sztanpet>	by defining a custom function for example
<Furao>	ah yes that way, I tried to use vanilla html/template :)
<sztanpet>	you could also just define a template and call it and decrement the value  and check in an if its zero or not
*	e-dard_afk is now known as e-dard
<daved>	__john_doe__: http://play.golang.org/p/CafWGausdA
<daved>	__john_doe__: But, please, still do look into whether pipelines can help you.
<daved>	gnight
<dmitris>	(never mind, figured it out - “godoc golang.org/x/text/internal/triegen Gen” does work, “godoc -src golang.org/x/text/internal/triegen Gen | more” as well)
<Xetius>	what is runtime.goexit?
<sztanpet>	Xetius would you like us to link you the manual instead of looking it up yourself?
<Xetius>	ok, fair answer
<ptrb>	sztanpet: that was quite rude. is that the image you want the community to project?
<sztanpet>	ptrb for rtfm questions?
<ptrb>	sztanpet: for any earnest question.
<sztanpet>	not all questions are created equal
<hyphenated>	blunt maybe, but not really rude, IMO
<Xetius>	actually, I know what runtime.Goexit is, but when I am profiling my code I am seeing lots of runtime.goexit… lowercase g
<ptrb>	please consider the effect you have on others' perception of the Go community
<bnagy>	sets a reasonable expectation, no harsh language
<Xetius>	That answer was fine ptrb
<sztanpet>	Xetius those are local to the runtime package, its normal
<Xetius>	I have a memory leak, and that seems to be at the root.  goes up through various http stuff
<Xetius>	I don’t believe that there is something wrong with go files, but rather something i’m doing that is causing this to happen…  was trying to work out how to trace back is all
<bnagy>	Xetius: how sure are you that you have a memory leak?
<Xetius>	for a stateless application, it ends up running up gigs after a day or so
<bnagy>	eg most unixes are pretty lax about chewing memory nobody else wants when there's no actual pressure
<hyphenated>	Xetius: goexit gets called when a goroutine is doing its cleaup..
<Xetius>	ah ok.  I couldn’t find the manual page for it
<Xetius>	thanks
<bnagy>	ohh.. you _could_ be leaking goroutines, that's not that hard to do
<bnagy>	you can introspect that with other runtime stuff
<hyphenated>	it could just be unbound growth of goroutines that do very little, quite quickly
<hyphenated>	you should consider having a handful of them and feeding them things to do via a channel
<bnagy>	a naive http app will have unbounded goroutine creation, right?
<Xetius>	yes
<bnagy>	if the handler func is hanging trying to do something, not closing the request etc etc...
<Xetius>	ah ok
<Xetius>	awesome… found it… thanks
<bnagy>	what was it?
<Xetius>	goroutines… thanks for the pointer.  I’m creating them slightly faster than it can manage, so currently I have 61 outstanding.
<Xetius>	from 36000 requests
<bnagy>	61 goroutines is nothing :/
<bnagy>	does each one read tons of stuff into memory?
<bnagy>	k, bed
<bnagy>	luck!
<skripted>	whats unbound? without channel?
<edayo>	"a naive http app will have unbounded goroutine creation, right?" Ive wondered about that going thru examples an articles
<edayo>	Id have thought a "worker" pool of go routines would be safer.
<hyphenated>	well, the naive approach to connections (http or otherwise) is to spawn a goroutine for it
<hyphenated>	each one requiring memory, and having an effect on the runtime scheduler
<hyphenated>	and when completed, requiring cleanup and having a hit on the garbage collector
<edayo>	exactly, so it seems my instinct was right
<edayo>	a large worker pool makes more sense and is a bit more deterministic (in terms of system resources)
<hyphenated>	so with that approach to connections, you end up with unbounded creation, since it'll create as many as it "needs" for the circumstances, despite the effect it'll have
<edayo>	hyphenated, would you mind providing me with an example of how you might create such a pool
<hyphenated>	a "worker pool" approach won't get you very far. you still have to have done something with those connections
<edayo>	hmm
<edayo>	what then is the alternative? i was thinkin more along the lines of putting the connections in a queue
<hyphenated>	you need something smarter like rate limiting, or a bounded queue
<hyphenated>	and once it's reached capacity, you reject things
<pjvds>	instead of a pool, the acceptor should have an counter for inflight requests and use it to reject when needed.
<pjvds>	much simpler design and you don't need to create a goroutine pool for that.
<hyphenated>	it could be a mix of both, if that suits the overall circumstances better
<hyphenated>	and rate limits, bounded queue, worker pool all fail when there's goroutines leaking
<pjvds>	I don't see why it should be a mix, since if you limit at the beginning, you never create more routines than the limit.
<pjvds>	This means you don't need a bounded queue and worker pool at all.
<hyphenated>	pjvds: a static rate is only useful if everything else is static
<pjvds>	Yes, the only thing it provides is bounded number of inflight requests.
<hyphenated>	so you might tune it to 10K/sec or some arbitrary amount that worked perfectly when the database was lightly loaded
<edayo>	i think what pjvds is sujesting is a situatione where the counter goes up ver each "inprogress" event and the counter decremented once the event is handled
<hyphenated>	but it's useless when the database gets a high load (overlapping some scheduled reporting), so you start building a backlog
<pjvds>	edayo, yes
<hyphenated>	and that's when the concurrency limit comes into play
<pjvds>	This pattern can also be applied at different levels, like max number of outstanding operations in a transaction.
<pjvds>	It is a way to limit concurrency.
<pjvds>	You can also use latency as a limit.
*	tuomimi_ is now known as tuomimi
<pjvds>	Instead of max inflight work.
<pjvds>	Stop accepting new request as soon as 95 procentile latency gets above X.
<pjvds>	That is way more dynamic then a hard limit on number of requests.
<pjvds>	But the pattern is still the same.
<pjvds>	Reject work at the beginning, instead of creating bounded queues and work pools.
<edayo>	Problem with that (for this app) is that rejecting a connection might mean dropping a call
<hyphenated>	better to drop one than all of them
<hyphenated>	if you're working with phonecalls, you have a whole new set of dynamics when you reach capacity
<edayo>	perhaps i'll create a bounded queue and only queue call connection events up to a limit
<edayo>	cant do anything about the fact that there are limits, in a way pjvds is right at some point i will run outa resources, i might as well just drop connections i cant handle and simplify the design
<hyphenated>	in my experience in mobile environments, you can put those limits in, manage them perfectly and so on.. but if you hit actual capacity, you might as well give up for the night.
<hyphenated>	you need either complete control of incoming traffic in addition to the traffic handling parts, or some "spare" capacity to handle the waves of retries
<hyphenated>	in the wrong circumstances (peak hour), those waves are roughly 5x higher
<edayo>	yeah... fun times ahead! thanks for your input hyphenated, pjvds
<napsy__>	Hello. I have a stack trace of my panicked program, But I can't decode the argument list in function calls as they're only hex numbers and the actual order in source is different
<napsy__>	How doe the argument list form the stack trace map back to the source
<napsy__>	?
<sztanpet>	stack trace made by go i hope
<napsy__>	yes
<napsy__>	by panic
<napsy__>	CacheProcessor(0x64256000, 0x3c6cc0, 0x3c6cc0, 0x1,
<napsy__>	actual header is
<napsy__>	CacheProcessor(rgbaImage []byte, wkRectangle common.WebkitRectangleHeader)
<sztanpet>	are you sure the stack trace is from the same program that you have the source of?
<napsy__>	yes
<sztanpet>	no other ideas then, sorry
<napsy__>	ok, np
<jkbbwr>	If you were hosting a go rest service, would you hide it behind a proxy or expose it directly to the web?
<hfaafb>	i'd probably proxy it through nginx
<muraiki>	that's a good question that I'd also like to know the answer to :)
<muraiki>	what's the advantage of proxying through nginx?
<jkbbwr>	muraiki: defence against resource starving attacks I would imagine
<mousetrap>	You decouple your application from the customers.
<lemmi>	muraiki: if you have several apps running on a port and ssl stuff
<mousetrap>	Also, you can proxy several apps behind one nginx.
<hfaafb>	you also get some things for free like gzip encoding
<muraiki>	now if we wanted to take advantage of something like http2, can I still proxy behind nginx?
<mousetrap>	I believe there's http/2 support in nginx.
<muraiki>	to clarify, I've proxied non-go apps behind nginx before -- but go's http seemed so powerful, I was tempted to not put nginx in front
<hfaafb>	nginx can be a valuable piece of indirection
<mousetrap>	I think it's better to decouple it. If your web service goes down, your application state doesn't vanish with it. Similarly, a crashing app doesn't become an unresponsive endpoint.
<muraiki>	hrm, these are good things to think about
<hfaafb>	i serve static assets through nginx
<hfaafb>	so go doesn't have to
<jkbbwr>	It upsets me that the idea of multiple points of failure is okay
<jkbbwr>	I am upset at how Python is deployed, nginx > (uwsgi | gunicorn) > flask
<jkbbwr>	This bugs me
<mousetrap>	If your service doesn't need that, then you can just use go without a front-end, absolutely.
<mousetrap>	But for me, I'd rather build it to do its thing and delegate what I don't need to worry about to nginx.
<jkbbwr>	I never really serve static content
<lemmi>	but as long as don't need to, i simply fire up the go-http server and be done with it
<hfaafb>	a computer is a huge stack of potential points of failure
*	kentquirk is now known as kentquirk_away
<_1_eslam>	yoyoyoyoy
<_1_eslam>	hey
*	ChanServ gives voice to Aram
<r00trunner>	is it possible to read from two channels simultaneously in a for loop? something like for v1, v2 := range ch1, ch2 {}
<sztanpet>	no
<mieciu>	Hi, do you know any tool/example on how to write a GOlang wrapper to a python program? I have simple python cli app which I'd love to wrap and distribute with go as a single binary
*	keepguessing is now known as keepguesing_zzzz
<hinst>	you would either have to distribute all of python runtime with it or require uses to have python runtime installed on their PCs
<mieciu>	most probably I'd go for python runtime
<mieciu>	bundled in the app
<aspire>	my friend suggested that i should use go to write my server - is this wise?
<darius93>	is there a way to detect when GC kicks in (if ever)?
<Kamol>	aspire: yes :)
<smw>	aspire, walk into a church and ask "should I believe in god"
<mousetrap>	Aspire: you should read up on it, and decide for yourself if it meets your needs or not.
<aspire>	smw thats a fair point haha
<Fooster>	darius93: you mena programatically? or debugging?
<aspire>	well mousetrap in comparison to java or scala, go is the "better" choice?
<smw>	aspire, mousetrap's answer is what I would expect from a chuch actually...
<smw>	mousetrap, :-)
<Fooster>	you can see the gc with GCDEBUG=`gctrace=1'
<Fooster>	https://golang.org/pkg/runtime/
<smw>	aspire, depends on what you are doing
<aspire>	oh i see
<smw>	aspire, use the right tool for the right job. I have no idea what the job is so I will just say use Go.
<aspire>	ok quick question (idk much about go) can i use go as an alternative to php?
<mousetrap>	aspire: go's suitability compared to java and scala depends entirely on you and your project.
<aspire>	i have a web server with a get.php which queries a database and returns all of the records of a database in json format
<smw>	aspire, both are languages. You can generally use one language in place of another language...
<mousetrap>	For that, language is irrelevant. Choose the one you like best.
<aspire>	can i accomplish this using go or is php really my only option
<aspire>	mhmmm
<Fooster>	you can do that in go yes
<smw>	aspire, you can use just about any general purpose language for that
<aspire>	Fooster so i can have like: http://mysite.com/path/to/get.go
<aspire>	and i can have it return my database records in json format?
<darius93>	Fooster, debugging purposes
<mousetrap>	Again, you can do that in dozens of languages.
<hfaafb>	that's not how you do web in go
<Fooster>	darius93: ok, gctrace=1 is your friend.
<darius93>	thanks
<aspire>	mousetrap like what? and is go one of them
<Fooster>	aspire: it wouldn't work really like with php, no
<hfaafb>	http://golang.org/pkg/net/http/#HandleFunc
<aspire>	ahh
<darius93>	aspire, you have create a server with go (which it does have libraries to handle http server in net/html)
<mousetrap>	Go/Java/PHP/C/Scala/Python/Ruby/JS/C#/VB/ASP/CF and more.
<mousetrap>	They're countless.
<aspire>	o
<aspire>	i see
<smw>	mousetrap, you forgot Rust, D, nim, Haskell
<saml>	and guile and vala
<mousetrap>	Those are the "and more".
<Fooster>	honestly those responses are not very helpful. yes would be sufficient ;)
<smw>	Fooster, yes, but aspire is asking stupid questions and listing every language ever created is more fun
<smw>	Fooster, everyone forgets Scheme and Haskell :-P
<jkbbwr>	And you forgot Iron
<aspire>	im asking questions im interested in knowing the answer to :(
<smw>	jkbbwr, I have never heard of it
<jkbbwr>	smw: I invented it :D
<jkbbwr>	smw: its being graded right now
<smw>	lol
<jkbbwr>	Whats so funny?
<smw>	graded for a class?
<smw>	jkbbwr, mousetrap we forgot brainfuck!
<jkbbwr>	Final dissertation for my BSc
<nteon>	aspire: depends a bit on how you want to go about this.  Do you already know PHP?  if so, mabye you just want to use that to get this relatively simple task done.  if you want to learn something new, Go would be an efficient choice
<aspire>	nteon i know php enough to know how to do what i want to do
<saml>	Go can be good alternative to PHP. But hosting will be more expensive compared to shared hosting with php ftp upload deployment
<smw>	jkbbwr, nice
<jkbbwr>	smw: https://github.com/jkbbwr/iron
<jkbbwr>	smw: very weird virtual machine with a silly limited subset
<aspire>	nteon i am just trying to expand my horizon of languages
<aspire>	to try new things yknow
<nteon>	aspire: so yea, then I guess the question is whether you're looking to get this task done, or accomplish the task by learning something new
<smw>	aspire, so try it :-)
<jkbbwr>	smw: Im that "no stack vm" boy
<jkbbwr>	That was kicking around
<smw>	jkbbwr, I wonder if you could implement Go or something on top of a turing machine VM :-)
<aspire>	nteon i like php in this case because i don't need to run any server code or anything like that - user just goes to my get.php and itll return the json
<aspire>	frankly i don't think go is an appropriate choice here - its not like im building an entire web server
<jkbbwr>	smw: probably not this one, as this one is bloody stupid. but Im sure a decent one yes.
<jkbbwr>	smw: I actually did comment on how my vm could self host itself.
<saml>	aspire, with Go, you can output to json file in cron job. and have nginx serve that json
<nteon>	or just proxy directly to the go binary
<aspire>	o
<aspire>	eek don't know what a cron job is
<saml>	dump-table-as-json -h mysql.example.com -db your-db  -o /var/www/wow.json
<aspire>	o
<saml>	i see. what's your database?
<saml>	your database probably has `dump` command that can output json file
<nteon>	saml: that feels more complicated than necessary.  now he has to worry about cache invalidation too, potentially
<conecto>	If you compile a go binary on a mac, do all mac boxes that will execute need the go lib installed or will it just run?
<jkbbwr>	conecto: it will just run
<conecto>	ty
<saml>	nteon, i don't think he's full web scale in the cloud.  just an http file server is good
<aspire>	saml http://stackoverflow.com/a/5036646/1255746 ooo
<nteon>	aspire: Go will build the web server into the executable file for you, along with your fuction to do the DB query.  PHP provides the web server in a different form (either a fastcgi server, or apache mod).  To me it feels like the same sort of thing either way
<aspire>	mhmm
<aspire>	i see
<saml>	yah just do it in php. you can copy paste
<nteon>	aspire: you would end up writing a function that does a similar thing whether you choose php, a go web server, or go cronjob.  You need a function taht does a DB query and turns the resultset into JSON
<nteon>	Go is probably a good fit, because the JSON marshalling support + annotations are super nice
<nteon>	imo
<saml>	but depending on how many requests to json file you get...  fetching entire table as json on each http request might not be a good idea aspire
<aspire>	gah well i can accomplish this in ~6 lines with php
<jkbbwr>	(pssst pagination)
<aspire>	eh saml i don't expect it be queried often
<aspire>	its only intended for local use anyway
<saml>	yah just do it in php then
<aspire>	accessible by computers on the same network as me
<saml>	local scale isn't web scale
<saml>	Go is web scale only. for local scale, you can use anything
<nteon>	what does that even mean
<aspire>	ah ok php it is then, thanks for your contributions
<saml>	!next
<jkbbwr>	:( php
<jkbbwr>	ewww
<edayo>	Me! me!
*	edayo goes back to readinf effective Go
<jkbbwr>	I might build a PaaS
<edayo>	jkbbwr, what would you be doing different from all the other fellas who have built a PaaS
<edayo>	would it be a for the learning experience?
*	kentquirk_away is now known as kentquirk
*	kentquirk is now known as kentquirk_away
*	kentquirk_away is now known as kentquirk
<jkbbwr>	edayo: they all miss the point *just* slightly
*	kentquirk is now known as kentquirk_away
<saml>	what do you use for scraping web pages?
<smw>	saml, python :-)
<saml>	i need to do things in parallel. lots of http requests need to be made
<smw>	saml, scrapy
<saml>	danke
<smw>	saml, I have built some impressive stuff with python/scrapy
<smw>	saml, sorry if that was not the answer you were looking for :-)
<saml>	actually, i scrape one page. parse html. possibly need to execute js to load things.  then get outgoing links that meet criteria.  talk to an api regarding those links to get extra information.  output json or rss
<saml>	talk to api for each outgoing link for extra info
<saml>	i guess 500 requests max
<saml>	i'll do it in python until i need to execute js.. then has to be webkit
<smw>	saml, that is a different level entirely. phantomjs? :-)
*	veonik_ is now known as veonik
<smw>	saml, I have never used it. I have orchestrated chrome though
<saml>	looks like i dont need to execute js. things are inlined in html already
<saml>	i guess putting Go into system would take 6 months. they have python 2.6
<smw>	saml, I think go has html parsers with css selectors, I don't know them though
<smw>	and I like xpath if I can find it. But only because I know how to use xpath :-)
<salgado>	I've noticed some weird behaviour in json.Marshal(). I have a type T that contains a field of type f, which implements MarshalJSON(). when I pass a T pointer to json.Marshal() it calls the field's MarshalJSON(), but if I pass a T value it ignores the field's MarshalJSON and tells me the field's type is not supported
<salgado>	http://play.golang.org/p/pCBJiCtgjt shows that
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu May 07 11:21:52 2015

**** BEGIN LOGGING AT Thu May 07 11:26:17 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	pkircher_ is now known as pkircher
<tucnak>	hey! my background project application seems to start growing, that's why I am way more interested in actual code formatting
<tucnak>	is there a way to implement some sort of "namespace" functionality from C++?
<tucnak>	so I could logically separate my code
<tucnak>	is it about nested packages? my project is a web application
<context>	loucho: https://play.golang.org/p/CPAQWFxldG
<context>	loucho: you have the wrong src in your Decode
<context>	you are trying to Decode the original random bytes
<quiznilo>	http://blog.golang.org/package-names a good article talking about that
<quiznilo>	well, touches on it
<quiznilo>	ya rtfm
<quiznilo>	tucnak: I don't know anything about C++ though, so I don't know if that's what you mean
<tucnak>	quiznilo: well, namespace is a language structure that allows to module some code
*	techgrin is now known as insanity54
<hfaafb>	tucnak: no, there are no namespaces.
<yh>	Hi guys.  How might I unmarshall/decode JSON into a nested map ?
<hfaafb>	code organization is done strictly through packages
<tucnak>	hfaafb: are nested pkgs going to work?
<hfaafb>	there's no concept of a nested package
<hfaafb>	there are only packages
<edayo>	tucnak, a package is the closest thing to c++ namespace
<yh>	I've no problem doing that into a struct with a known JSON schema, but I'd like my map to be an exact representation of the JSON structure, without up-front schema knowledge
<danmace>	quick little question about declaring and assigning a *int64 inline... is like 13 possible somehow? http://play.golang.org/p/t5RL_7QTTY
<tucnak>	hfaafb: there is no concept of nested package, but there are nested pkgs, right?
<tucnak>	so what if I create a dir `bar` in main app dir `foo`
<tucnak>	and then import "./bar"
<tucnak>	is it going to work?
<context>	try it ?
<tucnak>	alright
<context>	i promise you wont start WW3 no matter what the outcome is.
<FergusL>	Someone using gompd around? Can't get the search functions to work !
<andlabs>	context: (you're lucky no one is here right now to start ww3 for you)
<edayo>	tucnak: ive used the following structure $GOPATH/src/lib/module1 , $GOPATH/src/lib/module2
<context>	and if it does well... congrats for finding the LARGEST security whole in the worlds governments
<edayo>	then i import "lib/module1" seems to work or me
<context>	ANOTHER WEEK !!
<context>	oops
<hfaafb>	tucnak: you can certainly put a package wherever you want
<hfaafb>	that is the say, in the same folder as another package
<hfaafb>	or rather
<hfaafb>	if ~/foo is a package
<hfaafb>	~/foo/bar can be a package
<tucnak>	sounds neat
<hfaafb>	but it's wrong to think about foo/bar as a nested package
*	flazz is now known as zz_flazz
<tucnak>	is it the way big go apps separate their code?
*	zz_flazz is now known as flazz
<edayo>	hfaafb, i know : but as a python imigrant, it helps! :)
<tucnak>	alright, foo/bar is not nested package, it's a package located in nested directory relatively to core application package
<danmace>	is it possible to assign to an *int64 inline? for example, this doesn't work (assume `var foo *int64`): foo = &int64(1)
<tucnak>	just some language stuff
<tucnak>	doesn't make any *real* difference
<hfaafb>	the standard library has many instances of packages living one level deeper than another
<hfaafb>	it's a good way to organize your packages, if they're related, like the "net" or "encoding" packages in the standard lib
<skripted>	how would i implement http PATCH in go? if i pass only one field (to patch) all others are going to have set their default value after decoding and i won't be able to distinguish if the fields were ommited or set to default on purpose
<hfaafb>	but i would warn that creating a new package is a large commitment
<hfaafb>	and they shouldn't be as capriciously made as you would namespaces or modules in other languages
<quiznilo>	danmace: what do you mean by 'inline'?
<tucnak>	hfaafb: I just don't want to keep ALL my mux handlers in `main`
<danmace>	quiqua: http://play.golang.org/p/t5RL_7QTTY
<danmace>	quiznilo: http://play.golang.org/p/t5RL_7QTTY
<danmace>	quiznilo: line 13
<hfaafb>	tucnak: honestly, you probably should and can keep them to one package. there's nothing wrong with that
<quiznilo>	we have 'new' builtin... http://golang.org/pkg/builtin/#new
<hfaafb>	you don't have to put them in main, maybe you make a server package and run it from main
<hfaafb>	or just put them in main until you run into a problem
<quiznilo>	you want the 2 lines on 1 line only?
<danmace>	quiznilo: yeah... i want to make foo point to the value "1" without having to declare a variable elsewhere
<danmace>	quiznilo: new doesn't let me initialize a non-default value
<tucnak>	hfaafb: I am afraid that there are like two (at the moment) methods with identical name, but different url scopes, so I came to a stupid workaround by prefixing "Dashboard_", "Preferences_" these methods and it seems kinda, rusty
<tucnak>	hfaafb: is it a bad practice in go to make use of "nested" packages in common web application?
<hfaafb>	tucnak: naming things is hard, but spreading handlers out between packages is a misuse
<tucnak>	wait a sec, is it just an ideological thing?
<tucnak>	I like many go concepts, but cmon in the meantime I'd love to keep my code module, not just spread inside a single package
<hfaafb>	code organization is not modularity
*	insanity54 is now known as grimtech
<tucnak>	hfaafb: code organisation is religion
<hfaafb>	but you're a free man, please feel free to spread your handlers among all the packages you desire
<tucnak>	you say that like it's smth I should feel shame for
<bhenderson>	if I'm reading bytes from a file, when would it not read len([]byte)?
*	grimtech is now known as techgrin
<context>	bhenderson: when there are not len([]byte) to read
<quiznilo>	danmace: I'd just do this: http://play.golang.org/p/TDTHpzd1YU
<quiznilo>	I roll that way
<bhenderson>	context: is it also true when len([]byte) > atomic read?
*	techgrin is now known as insanity54
<bhenderson>	atomic might be the wrong word
<context>	bhenderson: that i dont know.
<bhenderson>	ok, thanks
<quiznilo>	using 2 lines to initialize a pointer never bothered me though
<ojacobson>	Does Go have a utility for resolving a program against $PATH, or do I have to cook that up myself?
<ojacobson>	(I don't want to run it, I want to know _where it is_, if it exists.)
<ojacobson>	eg. given PATH=/usr/bin:/bin:/usr/sbin:/sbin, resolve("cat") would yield "/bin/cat" and resolve("foo/cat") would yield "foo/cat" unchanged
<gra1>	I am trying to use gdb in my emacs to debug my executable main , I am getting no such file or directoary gdb, any one run in this problem..? (sorry it s not a pure Go question)
*	kentquirk_away is now known as kentquirk
<quiznilo>	afaik, pure go doesn't have the symbols gdb requires
<quiznilo>	I don't know about gccgo or cgo
<ojacobson>	ah, I want os/exec's "LookPath"
*	kentquirk is now known as kentquirk_away
*	kentquirk_away is now known as kentquirk
*	kentquirk is now known as kentquirk_away
<quiznilo>	gra1: anyway, just cd to directory with the bin and gdb <bin>
<quiznilo>	and then 'run'
<quiznilo>	try outside of emacs heh
<gra1>	quiznilo it s working outside emacs
<quiznilo>	can you get gdb working on any executable inside of emacs?  Try /usr/bin/lsof or something crazy
<quiznilo>	go doesn't necessarily require gdb though, it has a lot of builtin debugging features
<bhenderson>	when you do: s := "hi"; s2 := s;   I know s2 is a copy of s, but is the underlying byte array the same?
<tucnak>	 guys, I know that this might irritate you, but is there a way to handle errors from nested function call in the stack without tons of `if` statements?
<bradhe>	Anyone ever have go get prefer connecting over HTTP vs. connecting over SSH to github.com? Anyone know what settins control that??
<cronos>	bradhe: i believe it uses https by default
<cronos>	tucnak: "tons of if statements" is the idiomatic approach
<cronos>	some rare cases (complex recursion) can use panic-recover as control flow but it's likely not what you want
<quiznilo>	never not use recursion
<tucnak>	cronos: am I right that recover() can catch errors exposed from the functions on the stack?
<cronos>	tucnak: recover catches panics
<cronos>	You have to explicitly panic some value for it to trigger
<tucnak>	I see
<tucnak>	but suppose you have a call stack with 5 functions
<daved>	For some reason I'm having trouble understanding when I should pass variables into an anonymous function as args versus when I should just call them from within the function.  Would someone, please, help me understand the when and why here?
<tucnak>	a root function has a defer statement with recover() call
<tucnak>	and the inner function panics
<tucnak>	is it going to get caught?
<cronos>	Yes
<cronos>	But as I said your case doesn't sound suitable
<tucnak>	cronos: alright, just to clarify, am I right that in case of my web application, suppose it couldn't connect to database somewhere on the stack, should I panic and catch it in the recover call of root function?
<cronos>	tucnak: no, you should bubble up errors
<cronos>	you get used to it pretty quickly
<tucnak>	cronos: and pass them aaaaall the way up to stack?
<cronos>	yup
<cronos>	unless you can handle them earlier
<tucnak>	cronos: sounds like a dirty solution
<cronos>	it's way cleaner and prettier than panics
<cronos>	and way safer
<cronos>	this is the most common complaint of people coming to go, trust me
<tucnak>	cronos: try-catch e.g. from java seems to look greater on this particular usecase
<cronos>	go explicitly doesn't have exceptions
<tucnak>	I know
<tucnak>	again, I am talking on this particular usecase
<cronos>	tucnak: http://golang.org/doc/faq#exceptions
<tucnak>	cronos: read it, twice
<cronos>	this particular use case is very simple
<cronos>	i have way deeper stacks with errors
<tucnak>	and you pass them aaaaall the way up to stack?
<tucnak>	and feel okay with and all the mental tax it takes to maintain all calls with `if err != nil`?
<andlabs>	[12:30] <tucnak> and you pass them aaaaall the way up to stack?
<andlabs>	if you can't handle them yourself
<andlabs>	it's like transparent drawing
<andlabs>	something HAS to catch them eventually
<tucnak>	that's like how it works with exceptions
<andlabs>	it doesn't matter what error handling ssystem you use, mind
<andlabs>	yes that is
<andlabs>	except exceptions just make you not have to spell it out
<tucnak>	sry, by accident
<tucnak>	>except exceptions just make you not have to spell it out
<tucnak>	hold on
<tucnak>	I head that exceptions are evil, but are they really that evil?
<andlabs>	no
<andlabs>	they're very subtle, though
<andlabs>	very easy to get wrng
<andlabs>	http://blogs.msdn.com/b/oldnewthing/archive/2004/04/22/118161.aspx
<andlabs>	http://blogs.msdn.com/b/oldnewthing/archive/2005/01/14/352949.aspx
<andlabs>	it's harder to fall into this trap if you have to check for errors at the point where it's called because you have to do something
<andlabs>	it's still possible to misbehave even with error values
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Thu May 07 12:36:36 2015

**** BEGIN LOGGING AT Mon May 11 22:13:00 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<KDr2>	daved: from this file: https://github.com/golang/go/blob/master/doc/go_spec.html
<skelterjohn>	daved: how many different combinations of templates can be chosen by the user?
<daved>	depends on the settings, and created templates.  So, one brand may or may not have the embedded template.  And if it does, it may not override the default.
<daved>	KDr2: the second link is source and the other is generated automatically.
<skelterjohn>	daved: how do brands and themes relate?
<daved>	KDr2: http://blog.golang.org/godoc-documenting-go-code
<skelterjohn>	daved: but it seems like for a given URL, you have a template that is executed, with subtemplates determined by the brand/theme?
<KDr2>	daved: thx
<daved>	KDr2: Follow a commenting convention and use a public repo (or run godoc -http={addr} on your local machine) and documentation is generated for you.
<daved>	KDr2: You do not need to generate it and save it to your repo or serve it.
<daved>	KDr2: If you do not use a public repo, running `godoc -http=6060` will allow you to visit localhost:6060 and see the generated docs.
<daved>	skelterjohn: every template is determined by brand/theme/url.
<skelterjohn>	daved: how many brand/theme/url combinations are there?
<skelterjohn>	probably not too many to precompile all of them
<daved>	skelterjohn: during startup, I cache the directory contents.  when a request comes, it will execute the correct template based on the theme/fall-back rules.
<daved>	skelterjohn: everything is parsed at startup too.
<skelterjohn>	daved: i'm just not sure why you think you need to execute the template in a function
<skelterjohn>	tmplForThisBrandThemeUrl := template.New("id").Parse(FilesForThisURL).Parse(FilesForThisTheme).Parse(FilesForThisBrand)
<daved>	skelterjohn: I couldn't find another way to get themable (with fall-back) embedded templates to work.
<skelterjohn>	you can do the fallback by preparsing every combination
<skelterjohn>	not just every template, but every combination of templates
<daved>	skelterjohn: that sounds strange.  So my angular partials (which none have embeds at this time) will also have a sibling which has been parsed along with every possibly inherited file available?
<skelterjohn>	no........
<daved>	Does parsing repeatedly simply create one long template?
<skelterjohn>	tmpl1A = parse(1).parse(A)
<skelterjohn>	tmpl1B = parse(1).parse(B)
<skelterjohn>	tmpl2A = parse(2).parse(A)
<skelterjohn>	etc
<skelterjohn>	and ... sort of. parsing another string with a {{define}} lets you use that define elsewhere in the template
<ggerman>	daved: you test revel?
<daved>	ggerman: a long while ago, yes
<ggerman>	if you use revel can use the routes and templates from framework
<ggerman>	may be can help in your problem
<daved>	ggerman: using revel would demolish my chances at building a flexible system.  I'm really happy not using a whole framework.
<ggerman>	your project is open source or close?
<ggerman>	may be if you have a github
<ggerman>	may i help you
<daved>	skelterjohn: how would you suggest building the chains?  you're suggesting to overshoot the need, right?
<skelterjohn>	yeah just build all possible
<skelterjohn>	you've got a list of themes, a list of brands, and a list of possible paths
<skelterjohn>	presuming a little bit on that last one, but hopefully the paths map to a finite set of templating options
<skelterjohn>	and then in a triple loop you parse them all up into a chain per combination
<skelterjohn>	store that somewhere, and use it ready-to-go when the request comes
<skelterjohn>	bed time
<daved>	skelterjohn: of course there are things I'm not clarifying - I'm using a front "switch" function which will test for the type of request it seems like it is.  So, tmpl/html requests are send to a template handler function, requests with "_ar" or "_ap" are sent off to be handled by an asset handler (public is easy to serve, obviously, but private assets are managed), etc.
<skelterjohn>	sure, so i'll loosely call that the 'class'
<skelterjohn>	the url determines the class of template used
<daved>	skelterjohn: that is to say that there is a lot going on, even pre-ordering of templates and assets for the fall-back/theming setup.  I'll look more into adding the parsing up-front, but it's been a tax on my abilities so far.
<skelterjohn>	so, need a parse chain for every brand/theme/class combo
<daved>	skelterjohn: i heard you like chains...
<skelterjohn>	it just seems like the right solution for this kind of problem
<daved>	skelterjohn: my theming is a chain, so the parsing of possible chains is a chain of chains...
<skelterjohn>	chain chain chain..... chain of foooools.....
<daved>	skelterjohn: https://www.youtube.com/watch?v=XGenXtN2hZk
<skelterjohn>	if i wrote the code i'd have an ApplyTheme(thm, tmpl) helper
<skelterjohn>	`tmpl_thm = Apply(thm, tmpl)` that is
<skelterjohn>	that sounds like this "new age" music i hear about
<daved>	skelterjohn: adding to my problem here is that I'm using unrolled/render.
<daved>	skelterjohn: it's from one of the most iconic grunge bands of the 90s
<skelterjohn>	i saw a comment about that in the snip, but i don't know what unrolled/render refers to
<skelterjohn>	daved: can't be that iconic if i was a teenager in the 90s and don't know them
<skelterjohn>	daved: from the wiki " It was formed in 2001" =p
<skelterjohn>	so, not the 90s
<daved>	sunny day real estate?  foo fighters?  just about anyone in the "emo" scene was influence by enigk (the singer)
<daved>	skelterjohn: the fire theft was a short-live revival of sunny day.
<daved>	if you like this sort of music, jeremy enigk is absolutely amazing.
<daved>	especially live
<skelterjohn>	anyway, bed time
<daved>	sleep well
<KDr2>	daved: I got the document :) thk u very much
<daved>	KDr2: np
*	kanobe is now known as kanobe|away
<jayunit100>	I had to set GOROOT=/usr/lib/golang on fedora.
<jayunit100>	but i have seen alot of talk about how GOROOT shouldnt be manually set.
<hyphenated>	jayunit100: it generally shouldn't. it's baked into the 'go' tool
<hyphenated>	you only set it if you install things into a surprising place
<jayunit100>	its amazing, because if i run "go env GOROOT"
<jayunit100>	it give the exact same answer, but if i unset GOROOT, i get compile errors (cant find "fmt")
<jayunit100>	so , somehow, GOROOT is only honored if its an ENV var.
<jayunit100>	could be related to packaging i guess
*	generic is now known as shanse
<hyphenated>	that sounds unusual
<hyphenated>	so you can do: export GOROOT=/usr/lib/golang; go env GOROOT; unset GOROOT; go env GOROOT; and get the same answer both times?
*	koqueue_ is now known as koqueue
<drocha>	where can I found a good example of a C union like datatype implemented in golang?
<daved>	drocha: I don't know how to answer you, but found this - http://stackoverflow.com/questions/14581063/golang-cgo-converting-union-field-to-go-type
<mortdeus>	drocha, the closest you can get is a struct of pointers that all reference the same interface{}
<zeebo>	type myUnion [N]byte // n is big enough for every variant i hope.; func (m *myUnion) asBool() *bool { return (*bool)(unsafe.Pointer(m)) }
<zeebo>	oh i wonder if you store a **T in it i bet the gc won't walk it anymore
<zeebo>	welp
<mortdeus>	drocha, or you can use the unsafe package to convert a type pointer to a different type pointer.
<zeebo>	reinterpreting through pointers is probably impossible (re: very hard and not worth it) now
<zeebo>	since no longer conservative gc
<zeebo>	so stop worrying about memory and just store all the variants inline or in an interface or use a different language
<drocha>	The idea is create a Object where I have a field type and value, based in field type I know how to work with value, but using safe code.
<andlabs>	my head
<Nilium>	Indeed.
<andlabs>	can you be more specific
<zeebo>	that's called an interface
<zeebo>	interface values encode the type along with a pointer to the data
<zeebo>	so then you type switch to get the concrete type out
<zeebo>	if you need the concrete type. perhaps virtual dispatch is enough
<zeebo>	example inc
<zeebo>	http://play.golang.org/p/ssL7I3qra5
<drocha>	zeebo, thanks =]
<daved>	Is using slashes in template names silly or error prone?
<daved>	e.g. {{template "sub/test" .}}
<isxek>	anyone know of an example in go using the flag package to implement CLI subcommands?
<daved>	isxek: I'm not sure if this applies, but it might - http://dave.cheney.net/2013/11/07/subcommand-handling-in-go
<isxek>	daved: will take a look, thanks!
<daved>	ggerman: still on?
<daved>	isxek: np
<nemith>	I have a somewhat complex library i am working with.  Is there a way to trace where an error is originating from
<ebonics>	nemith, it should tell you in the stack trace
<nemith>	if i panic on the err is just get where i paniced
<nemith>	I mean an errror return value
<daved>	nemith: the error itself should lead you to an answer.
<daved>	which function did you call to get the error?  how is that return value generated?  etc.
*	ashemedai is now known as asmodai
<daved>	otherwise, using the trace alone, normally I can read further and see where it probably originated
<nemith>	yeah i am afraid of that
<nemith>	it;s some somewhat nasty generated code
<daved>	dont be scurred
<nemith>	yeah i got it
*	nemith dances
*	napsy__ is now known as napsy
*	zz_r04r is now known as r04r
*	pjoe is now known as pjoe_dj
<jfojtl>	why some project contains .godir?
<jfojtl>	Is there some tool that can work with that?
<v0idcat>	jfojtl: heroku buildpacks iirc
<jfojtl>	v0idcat thanks. Will check that.
*	balboah_ is now known as balboah
<aep>	how would i require client x509 authentication in an ssl server?
<aep>	Error reading: tls: failed to parse client certificate: parsing time "201401010000Z" as "20060102150405Z0700": cannot parse "Z" as "05"
<aep>	thats what i get when i try so far
<hyphenated>	aep: add two more zeroes before the Z
<aep>	uuhm, what?
<aep>	i didnt put those anywhere
<hyphenated>	they came from the certificate somewhere?
<aep>	maybe,  but they're encrypted. i cant change them :D
<sammy007>	What is faster way to compare *big.Int to int?
<hyphenated>	aep: well the certificate sounds like it's incorrectly encoded
<aep>	pretty sure it isnt. its in production with several different stacks
<aep>	on thousands of machines
*	ashemedai is now known as asmodai
<foofoobar>	There was a tool/method to see where my code is using the most cpu cycles/time in, can someone give me a hint where to find this ?
<hyphenated>	foofoobar: pprof ..
*	Guest67931 is now known as thelionroars
<foofoobar>	hyphenated: thanks
<zhaoyeming>	when using a map as receiver, only small amount of data (the map reference?) will be copied to the func?
<foofoobar>	hyphenated: damn, looks like pprof is bugged on osx?
<foofoobar>	I get over 80% for „runtime.mach_semaphore_wait“, googling this just refers to a kernel bug in osx :/
<sztanpet>	correct, stop using osx
<foofoobar>	sztanpet: thanks for this helpful insight
<Azzkikr>	What tools can I use to run tests when files have changed?
<codingrogue>	Azzkikr: good question, i'd like to know that too
<Azzkikr>	What tools can I use to run tests when files have changed?
<Azzkikr>	whoops, wrong window
<Azzkikr>	Wanted to redo a command by pressing up + return key :P
<Azzkikr>	Anyway, probably something with inotify or such
<qknight>	https://golang.org/pkg/net/url
<qknight>	if i want a global variable URL, how to do that?
<qknight>	in the example there is u, err := url.Parse("http://bing.com/search?q=dotnet")
<qknight>	but i do have to assign the value later on in the script
<diealienscum>	updating fixed it
<diealienscum>	nvm wrong chan
<qknight>	i could use a string to bypass this problem (and later do parse on that string) but i would like to know how to do it using a u Url and later do u, err := url.Parse(urlstr);
<diealienscum>	just put it outside of the function ie, var abc string = ""  and use it later its a global
<qknight>	diealienscum: i don't want to use string
<qknight>	diealienscum: i want to use Url
<diealienscum>	ok use Url :)
<qknight>	how to do that?
<qknight>	diealienscum: it does not work, it tells me undefined URL
<qknight>	 u := *URL
<qknight>	 u URL
<qknight>	 u Url
<qknight>	i've tried a few different notations and i don't get it
<diealienscum>	yea dats a good point
<diealienscum>	if its outside of the func you cant use := you have to use var
<diealienscum>	and im not sure if it has a Nil value, a lot of types have a nil value
<hyphenated>	qknight: http://play.golang.org/p/BP1xL1G5oY
<qknight>	hyphenated, diealienscum: i've been using the wrong type as it is: url.URL!
<qknight>	thanks to both of you
<qknight>	how to 'break' a doc.Find("a").Each(....) loop btw?
<qknight>	it seems that can't be googled
<diealienscum>	yea i was just gonna say that
<diealienscum>	gl
<qknight>	i really tried
<qknight>	oh, could this be goquery specific, this .Each(...)
<qknight>	that would exaplin it
<pmezard>	yes
<qknight>	thanks
<pmezard>	just look at the code anyway, it invokes the callback which has no return value
<pmezard>	the only way to break from that would be with a panic, and that's not exactly meant to be used that way
<pmezard>	just loop on the s.Nodes yourself
<qknight>	yeah, maybe a good point
<qknight>	thanks very much
<diealienscum>	https://play.golang.org/p/VGeOgN30pG
<diealienscum>	im not sure why this doesnt work
<diealienscum>	whats the way to do that neway?
<pmezard>	pointer vs value
<diealienscum>	oh i never read the url docs
<diealienscum>	derp
<diealienscum>	https://play.golang.org/p/-ej5L2nqZW
<diealienscum>	ty
<diealienscum>	far out
*	diealienscum is now known as fattycakes
*	fattycakes is now known as hotcockdotcom
<hotcockdotcom>	i always thought you had to initialize when you used var
<hotcockdotcom>	i was so mad types like url and others dont have a type.Nil value
<hotcockdotcom>	derp
<hotcockdotcom>	had no idea you could just do "var a url.Url" and be done with it
<pmezard>	all types have a zero value, it does not mean you can use it
<hotcockdotcom>	but does it == nil?
<hotcockdotcom>	so i can test it?
<skelterjohn>	hotcockdotcom: any particular reason you need to use that nick?
<hotcockdotcom>	its my site url
<skelterjohn>	so?
*	hotcockdotcom is now known as guyinabananasuit
<guyinabananasuit>	sry...
<pmezard>	https://golang.org/ref/spec#The_zero_value
<guyinabananasuit>	idk i guess u cant
<skelterjohn>	if go were a language that had lots of extra features for offering additional clarity but no more power, we'd have a 'zero' keyword
<skelterjohn>	var a url.URL = zero
<skelterjohn>	guyinabananasuit: you can always test out questions like the one you asked by spending 15 seconds on play.golang.org
<guyinabananasuit>	ive spent like hours on it already
<skelterjohn>	so another 15 seconds will be easy :)
<guyinabananasuit>	its definitely a different way of thinking
<guyinabananasuit>	var g map[int]int   //  == nil
<pmezard>	slices, maps and channels are exceptions
<guyinabananasuit>	var g url.URL // == empty struct
<skelterjohn>	pmezard: exceptions to what?
<pmezard>	to some kind of mental model where zero values are something and not nil (and I should probably add interfaces)
<guyinabananasuit>	oh well i get it now
<guyinabananasuit>	its probably so "" and 0 dont pass a nil check
<skelterjohn>	maps, slices, and chans are pointers-in-disguise
<guyinabananasuit>	thats good to know :)
<skelterjohn>	you can say m := otherMap, and operations on m might as well be operations on otherMap
<skelterjohn>	same with slices and chans
<pmezard>	(and functions, and everything else in the spec list :-)
<skelterjohn>	though to be clear, s = append(s, e) is *not* an operation on a slice
<skelterjohn>	it's creating a new slice
<skelterjohn>	but s1 := s2; s1[0] = e is the same as s2[0] = e
<skelterjohn>	anyway, time to go to  work ttyl
<Mag-en00b>	every unassigned variable in go has a value. if the variable is a "pointer type", then it's value is nil, otherwise it's the zero value of the said variable's type (0 for int, "" for string, etc.)
<guyinabananasuit>	unless its the type.Nil child value ^_^
<guyinabananasuit>	thx tho i think i get it now
<jkbbwr>	Mag-en00b: Something I miss from python is "false-like" behaviour
<jkbbwr>	a = []; if not a: print "empty"
<Mag-en00b>	im not familiar with python :c
<jkbbwr>	Mag-en00b: see above.
<jkbbwr>	Mag-en00b: empty lists/strings behave "false" when booleaned
<Mag-en00b>	it's quicker but in a complex case it makes errors easier to appear ithink
<jkbbwr>	Mag-en00b: The other thing I miss is for/else
<jkbbwr>	its a beautiful construct :3
<Mag-en00b>	magic :3
<jkbbwr>	Mag-en00b: https://gist.github.com/jkbbwr/87857804fe3763f219cc
<jkbbwr>	its nice
<hyphenated>	the problem with constructs like that isn't when they're used appropriately, but when they're abused
<hyphenated>	then you're really tripping over yourself trying to understand what someone else wrote
<hyphenated>	that can happen in go code as well, but it's usually very obvious they're being silly, whereas in languages supporting fanciness, it's harder to tell if it's actually ugly, or just elegant at a level you didn't learn yet
<deniska>	jkbbwr: that's not how else in python works
<deniska>	jkbbwr: https://bpaste.net/show/5356dbeaf0a8
<deniska>	else is executed when a loop finished itself, without break
<jkbbwr>	deniska: What was I smoking
<deniska>	Clojure has the best falsiness rules, imho
<deniska>	only nil and false are falsish, everything else is trueish
<hyphenated>	yes, I like my booleans to be mostly true or mostly false
<Jayflux>	Hey Gophers
<Jayflux>	Is there a way to read go documentation from the termina (like with python), or do you need to go to the website
<pmezard>	Jayflux: go doc os
<Jayflux>	pmezard:  unknown subcommand "doc"
<deniska>	godoc
<Jayflux>	thanks deniska
<MiratCanBayrak>	hi
<MiratCanBayrak>	i compiled my first hello world program with go. it created 1.3MB file. I was expecting a tiny output. Complex go programs are going huge when compiled?
<deniska>	MiratCanBayrak: go makes static executables which can run standalone on any system
<deniska>	that's why they're largish
<deniska>	but they won't get much bigger unless you use more libraries
<jkbbwr>	Also 1.3MB isn't that big.
<jkbbwr>	In most usescases
<MiratCanBayrak>	deniska thanks. that executable can run, on linux or windows? (i've compiled on mac)
<deniska>	MiratCanBayrak: if you compiled on mac it can run on mac, but it is easy to cross compile
<jkbbwr>	MiratCanBayrak: You need to target the platform you want it to run on. Apps compiled on mac won't run on windows
<Jayflux>	pmezard:  can you list all modules with that?
<Jayflux>	godoc
<Jayflux>	all packages*
<deniska>	by "any system" I meant the same OS and CPU architecture =)
<Jayflux>	oh, thats go list
<Jayflux>	answered my own question
<MiratCanBayrak>	:)
<Jayflux>	ah that only lists custom packages not the built in ones
<MiratCanBayrak>	has go built in package system like pip in python?
<jkbbwr>	MiratCanBayrak: go get
<murosai>	if according to 'top' my program uses 11.5G of virtual memory and 1.6G of physical memory then why go heap profile tells my program uses only 46mb?
<murosai>	maybe memory used by stack?
<pmezard>	MiratCanBayrak: there are systems out there but no builtin yet. go get does not support versioning.
<Jayflux>	so im guessing there's no way to list the std library packages from the command line
<Jayflux>	without going to the website
<pmezard>	go list std
<erikh>	oh neat
<Jayflux>	thats caused it to hang lol
<zeroXten>	heya. don't suppose anyone knows of a library that can be used for doing finite field multiplication?
<Jayflux>	pmezard:  excellent, thank you
<Jayflux>	that wasn't obvious
<pmezard>	no there are a log of hidden tricks for go tools
<pmezard>	they are documented but good luck finding the documentation in the first place
<pmezard>	Jayflux: in your case, go help packages
<Jayflux>	Yeah i tried that
*	ChanServ gives voice to iant
<nalum>	is it possible to get access a key with a name like 5000/tcp using go templates?
<skelterjohn>	nalum: i think the keys have to be valid go identifiers
<skelterjohn>	BUT you can always make a function
<skelterjohn>	that will look up keys by their string values
<skelterjohn>	or maybe the index funciton does that? i'll check
<nalum>	it's in relation to the docker inspect command flag -f
<skelterjohn>	nalum: yeah you can do {{index . "5000/tcp"}}
<skelterjohn>	nalum: i did this to test http://pastebin.com/t6hqkFMc
<nalum>	skelterjohn: thanks I'll check it out now :)
<nalum>	skelterjohn: works perfectly thank you :)
<skelterjohn>	sure thing
*	kanobe|away is now known as kanobe
<aep>	hm why do i get "too many open files" from tls.Listen.Accept after only 2 connections?
<jkbbwr>	aep: ulimit?
<smw>	aep, too many files is an OS error. What is your ulimit? What is opening files?
<aep>	2 sockets...
<smw>	aep, lsof is useful in situations like this :-)
<aep>	its certainly not hitting ulimit
<Chepra>	Hi! I am trying to do a "go get github.com/Vimeo/statsdaemon", but it's not downloading the files and not giving any output. What could cause this?
<aep>	unless golang opens 16000 files per socket
<sztanpet>	you mean your code opens 16k fds
<smw>	aep, actually, that error implies it is
<aep>	odd
<smw>	aep, lsof is quite useful for debugging this type of thing. So is strace
<aep>	its pretty instant. as soon as i get a bunch of connections, it dies. so cant use lsof
<aep>	oh yeah strace
<smw>	aep, why does it die?
<aep>	it doesnt. Accept just returns an err
<aep>	i could probably ignore it and keep going
<smw>	aep, have you thought of entering a debug state so you can figure out what is going on? :-)
<aep>	[pid 30508] accept4(3, 0xc208810950, [112], SOCK_CLOEXEC|SOCK_NONBLOCK) = -1 EMFILE (Too many open files)
<aep>	not sure how to do that
<aep>	its 10 lines of code :D
<smw>	aep, well, in this case, I would enter a for {time.Sleep(1e12)} loop
<smw>	aep, so you can lsof :-)
<jkbbwr>	drop a breakpoint?
<aep>	oh good point
<sztanpet>	why do people not use the time constants and instead give "magic" numbers to sleep?
<smw>	sztanpet, I just picked a big number...
<smw>	sztanpet, this is debug code, I have no idea what 1e12 is...
<sztanpet>	sure, i have seen it in a multitude of places
<smw>	1000 seconds?
<smw>	aep, time.Sleep
<smw>	aep, time.Sleep(time.Hour) to make sztanpet happy
<sztanpet>	;)
<smw>	sztanpet, you made an excellent point, best to stop giving people ideas of using magic numbers with sleep.
<smw>	sztanpet, I now feel like adding that to the go linter... :-)
<skelterjohn>	smw: that's not a bad idea at all.
<skelterjohn>	have unit-less sleeps be a lint error
<SteamWells>	hi guys
<SteamWells>	using this as an example
<SteamWells>	https://play.golang.org/p/E-suGGLla_
<Kim^J>	Speaking of lint, why does it require documentation to start with the function name?
<sztanpet>	i have seen it in libraries, tutorials, quite a few places, definitely worthwhile if not that abundant a problem
<SteamWells>	im using a pointer to a struct
<smw>	Kim^J, because some tools print assuming that.
<SteamWells>	and returning of pointer of that type
<SteamWells>	is that good practice?
<jkbbwr>	SteamWells: You don't need to return a pointer there
<smw>	skelterjohn, but what if you really want to use nano-seconds? :-)
<Kim^J>	smw: Whut? So how should documentation be written according to the linter?
<SteamWells>	just of type?
<SteamWells>	jkbbwr: sorry, just of type Configuration you mean is better?
<sztanpet>	daw, Cannot open NaCl module file
<Kim^J>	smw: Is it even possible to sleep accurately less than ms?
<sztanpet>	Kim^J depends on the OS, usually not
<Kim^J>	IIRC Windows doesn't support sleeps with less accuracy than 10ms.
<smw>	SteamWells, in this case, either pointer or not pointer seems fine to me
<smw>	SteamWells, I would make it a pointer in case you ever add a map or slice to your struct
<Chepra>	What could be wrong if "go get github.com/Vimeo/statsdaemon" does not create a binary?
<Kim^J>	Chepra: Nothing.
<jkbbwr>	SteamWells: func xxx() Configuration { ... }
<smw>	Kim^J, good point
<smw>	Kim^J, time.Sleep(1) is almost certainly a bug.
<Kim^J>	Do go support the sleep(0) thingie in Windows? (It'll tell the kernel to let this thread do something else, but give back access when that other work is done, prevents utilizing the CPU at 100% in wait loop.s)
<smw>	Kim^J, as for documentation. tools assume that it can print just the description
<Chepra>	Kim^J: I do not understand.
<Kim^J>	Chepra: go get shouldn't create a binary.
<Kim^J>	go get is for fetching code.
<smw>	Kim^J, and that the description mentions the name of the function
<smw>	Kim^J, go get will create binaries
<SteamWells>	cheers smw, its just confusing when to pick a pointer to a struct or not, i still dont really get it at the moment, i mean it obviously works but i guess id prefer it at compile time if go told me dont do that, you dont need to
<Kim^J>	smw: Hm, well, so Function Here is my actual description
<SteamWells>	or something
<Chepra>	Kim^J: I just did on a other machine and it created binaries
<Kim^J>	smw: Oh it will? Haven't noticed it creating binaries. :S
<smw>	Kim^J, it places it in GOBIN or GOPATH/bin
<smw>	SteamWells, there aren't really hard rules
<Kim^J>	Chepra: Try "go build github.com/Vimeo/statsdaemon" then?
<aep>	apparantly my listen/accept routine is busy at 100% cpu. can i have two accept threads somehow?
<smw>	SteamWells, can't even be linted well :-\
<SteamWells>	yeh i see
<Chepra>	Kim^J: is there a verbose output switch? It's not returning anything
<Kim^J>	Chepra: go build -n is worth a try
<Kim^J>	Er, go build -x I mean
<Chepra>	no output :(
<Kim^J>	:S
<Kim^J>	Did you get any source?
<Chepra>	"WORK=/tmp/go-build625872401"  thats is the only output
<Chepra>	yes, it downloads the source but no binary
<aep>	how do i prevent my accept thread from starving the handler thread? http://npaste.de/p/6m1
<aep>	i have 1Gb/s incomming tcp connections, the second thread never prints anything
<AmandaC>	what’s the GOMAXPROCS set to?
<aep>	4 at 2 cores
<aep>	both cores are at max
<smw>	aep, I only accept gofmt'd code in play.golang.org
<aep>	fair enough
<aep>	http://play.golang.org/p/6dorpb1mHj
<Kim^J>	That code wasn't formatted! :P
<Kim^J>	I absolutely *LOVE* that there's only *ONE* way to format Go code :D
*	smw will push a button to format code :-)
<smw>	aep, anyways, first thing, why are you continuing the for loop?
<aep>	for debugging.
<aep>	otherwise it dies instantly without printing anything from the second thread
<aep>	the first thread just eats 65000 connections and exits without the second running more than twice maybe
<smw>	aep, what is creating those connections?
<aep>	i was thinking the sleep mitigates that
<aep>	tens of thousand of machines
<smw>	aep, what?
<aep>	its machines connecting to an ssl socket
<aep>	with a line based protocol underneath
<aep>	was just trying if go is any better at ssl offloading
<aep>	heh, i just saw a single line of payload flying by
<smw>	aep, it sounds like you are overloading your server's ability to accept connections...
<smw>	aep, I have never seen that before
<aep>	nah works fine with nodejs
<aep>	poorly but works
<Chepra>	Anyone may have a hint what could cause go get github.com/vimeo/statsdaemon to not compile/instrall binaries?
<AmandaC>	Chepra: that’s not a command package
<smw>	aep, anyways, you can increase GOMAXPROCS
<AmandaC>	Chepra: you probably want  github.com/vimeo/statsdaemon/statsdaemon
<smw>	aep, that will use more threads and should help
<nlcpmc>	hey quick question, I have a package that declares a struct called C (goji/web), and I copy and paste the struct into my main package, why would the goji package not recognize it as the same type if it's the same?
<aep>	smw: nope. just tried 8. second thread is still starved
<smw>	second?
<smw>	aep, you mean handleConnection?
<aep>	the handler function is barely ever called
<aep>	yeah
<smw>	aep, have you tried profiling it?
<aep>	doing that right now ;)
<smw>	aep, I mean pprof
<aep>	yeah working on it
<aep>	needs alot of code to handle the signal to close the file cleanly etc
<AmandaC>	aep: what if you add a print tot he beginning of handleConnection?
<aep>	good idea
<Chepra>	AmandaC: thanks! This works. Was this recently changed?
<AmandaC>	Chepra: their commit log mentions re-structuring the code
<Chepra>	ah :-)
<Chepra>	thank you very much
<AmandaC>	aep: it might not be the thread being starved, but instead the network being saturated
<aep>	AmandaC: yep that is printed quite alot
<aep>	hurm
<aep>	with all cores being cpu blocked, that doesnt sound like it :D
<aep>	its probably ssl
<smw>	aep, ah, it uses one thread for all network...
<aep>	yeah i dont know how to fix that
<smw>	aep, the ssl is done per goroutine
<aep>	that was my original question
<aep>	oh. good
<smw>	aep, have you tried without ssl?
<aep>	cant do. but it will probably work
<aep>	i know this type of problem from ruby
<smw>	aep, I think you are sending way too many connections
<aep>	which does nothing useful if you starve the cpu with ssl
<smw>	aep, you are optimizing for the wrong things
<lupine>	hmm, I'm trying to open a TLS connection while verifying that a specific certificate is used. I don't care about hostname or IP SAN validations. anyone done this?
<AmandaC>	lupine: the cert should be pinned to the hostname?
<smw>	aep, try testing it under real conditions
<aep>	this is reality
<smw>	aep, eh?
<aep>	that's actual traffic :P
<aep>	not a test system
<AmandaC>	I think that smw is confused why you’re funneling 10,000s of machines into a single 2-core machine
<lupine>	AmandaC, the cert has a CN, but it's not very important
<smw>	aep, +1 AmandaC
<lupine>	the check I want is "the presented certificate is identical to the certificate I have here"
<lupine>	(which includes "the CN is the same", of course)
<smw>	aep, if this is production, do you have a load balancer or anything?
<aep>	nah, i dont expect it to work
<aep>	i expect it to do _something_ useful
<aep>	lets try with less traffic then, fine :D
<smw>	aep, 10,000 connections with TLS on a small machine is not going to work out well no matter what you are using. Go's TLS is also not nearly as fast as openssl
<aep>	worked with node. it just drops connections *shrug*
<smw>	aep, Go doesn't drop connections :-P
<AmandaC>	This is one of those situations where you should be throwing more hardware at the problem.
<AmandaC>	dropping connections isn’t really that useful in a production-type system, either.
<aep>	sure is. the client will retry and be re-balanced
<aep>	this type of behaviour confuses our load balancer
<smw>	aep, you are asking Go to do an impossible task and are upset it is failing in a different way than node failed?
<lupine>	/ KeyUsage status flags are ignored
<aep>	nah not upset. i'm asking how to make it fail the way i expect :D
<lupine>	amused :D
<smw>	aep, limit the number of open connections
<AmandaC>	surely your LB has some way to specify ‘only so many connections per host at a time”?
<smw>	go has a way to limit the number of connections
<jeko>	Is Revel p much the web framework you all would recommend to get started building webapps to Go?
<hfaafb>	jeko: no, I don't think anyone here would recommend Revel
<cgt>	jeko: no
<jeko>	ha okay
<jeko>	good to know!
<jeko>	I am *not* using it yet
<AmandaC>	jeko: overall, last I heard, the over-all community stance on such things was “dear god why, this isn’t ruby."
<jeko>	I don't have a lot of time to evaluate what is out there
<smw>	aep, also, I said you were overloading your computer's ability to accept connections and you said I was wrong. I was not, node just didn't accept them :-)
<cgt>	The Go community is largely anti-framework. Instead, use composable pieces to stitch together something useful.
<hfaafb>	jeko: commonly, net/http paired with smaller utility libraries like gorilla tools https://github.com/gorilla
<lupine>	I used revel for a couple of things
<lupine>	sort of regretted it
<lupine>	my most recent web service is a bit of a mix of tigertronic, gorilla and stdlib
<lupine>	sort of regretting the tt parts of it, but gorilla is rock solid
<aep>	smw: actually i think my code is wrong somewhere.
<aep>	according to wireshark, some clients appear to be instantly disconnected by the server
<aep>	maybe that ReadLine is non blocking?
<aep>	or maybe there's an openssl error hidden somewhere? where would i get more info?
<AmandaC>	Go doesn’t use openssl
<aep>	oh
<smw>	aep, go's tls is slower than openssl
<jkbbwr>	Didn't someone write a tls library recently
<sztanpet>	god i hope not
<lupine>	they did one in ocaml recently
<lupine>	mostly for unikernal usage
<lupine>	unikernel*
<AmandaC>	jkbbwr: you mean the asm-written crypto/tls re-write that CloudFlare did?
<jkbbwr>	AmandaC: Was it that?
<AmandaC>	jkbbwr: I recall seeing someone post it to the G+ community for Go at least.
<sztanpet>	not a rewrite either
*	cgrieger^away is now known as cgrieger
<gra1>	how to call stored procedure, i tried rows, err := db.Query("CALL get_zip(00761,"","", "","","","","", "","","","","", "","","","","", "")") I am getting error syntax error: unexpected string literal, expecting ) , any idea?
<jkbbwr>	gra1: you have a bunch of "" inside your ""
<gra1>	jkbbwr I have to send null value if the parameter has no value
<AmandaC>	gra1: ty db.Query(`CALL get_zip(…)`) instead of db.Query(“CALL get_zip(…)”)
<AmandaC>	( backtics instead of quotes )
<AmandaC>	s/ty/try/
<gra1>	AmanadaC thanks it works
*	smazga_ is now known as smazga
<jeko>	I am trying to put together a POC on DEIS to motivate my colleagues to start building with Go
<jeko>	I was looking at revel, but thanks for the tips fellas
<jeko>	I see the gitbook uses Gorilla for their examples
<jkbbwr>	jeko: negroni is kinda nice
<jeko>	I was looking at this: https://www.gitbook.com/book/codegangsta/building-web-apps-with-go/details
<jeko>	s/heroku/deis
<skelterjohn>	smw: time.Nanosecond
<daved>	skelterjohn: good morning
<skelterjohn>	daved: hey how are you
<smw>	skelterjohn, I forgot that existed
<daved>	skelterjohn: tired, but good.  I started working over ideas for template "importing" and have a couple of thoughts and would appreciate your criticism.
<smw>	skelterjohn, ok, I approve of a rule requiring units for non-duration arguments to sleep
<skelterjohn>	daved: sure, any time
<skelterjohn>	daved: no guarantees at turnaround time though, since i'm at work
<smw>	skelterjohn, if it is being converted inline, then it should still require a unit.
<daved>	skelterjohn: I'll improve my example(s) and post it in a while.
<gra1>	when I call my stored procdedure I am getting an error Error 1312: PROCEDURE can't return a result set in the given context , is this coming from the procedure itself or go , any idea?
<skelterjohn>	gra1: seems like it comes from the db
<skelterjohn>	gra1: but it probably depends on what drivers you're using
<gra1>	skelterjohn, I am using mysql when I execute the procedure directly in sql , it s working , the parametrs in SP is waiting value or null , in my call I am sendig (“”) , could this be the error ?
<skelterjohn>	when you say 'stored procedure' to you mean a prepared statement, or a procedure stored on the db server side?
<gra1>	skelterjohn is a procedure in the server side
<qknight>	when i use goquery, i do stuff like: doc.Find("a").Each(func(i int, s* goquery.Selection) { <- which uses an anonymouse function, right?
<AmandaC>	qknight: yes
<jmoiron>	i submitted a patch a while ago
<qknight>	AmandaC: thanks
<jmoiron>	to add a '.All()' which returns a slice instead so you could use normal range loops to iterate
<qknight>	that might explain why a variable declared outside is not valid within that scope (probably as i did not pass it via the function call)
<jmoiron>	and it was rejected because that doesn't exist in jquery
*	Mango_Man is now known as nucleartide2
<pmezard>	jmoiron: instead of looping on s.Nodes + s.Sel(i)?
*	jkyle1 is now known as jkyle
<jmoiron>	yes
<jmoiron>	that feels a bit unnatural
<pmezard>	sure
<henesy>	is it at all possible to create a pointer to an array?
<henesy>	not an element of an array, but the array itself? Currently trying: http://play.golang.org/p/aGqfvifH5F
<hfaafb>	yes! it's called a slice
<henesy>	hfaafb: how does one go about this? At least syntactically?
<henesy>	I realize that's what slices are, but I'm not sure how to declare something similar myself
<jmoiron>	henesy: 'arr' in your example is a slice
<hfaafb>	henesy: `arr` in there is a slice
<smw>	henesy, that is a slice, not an array. And that is a pointer to a slice
<henesy>	smw: are pointers to slices not allowed?
<jmoiron>	in Go an array type includes its size, so [4]int is a distinct type from [8]int
<henesy>	ah okay
<sztanpet>	henesy http://golang.org/pkg/reflect/#SliceHeader thats what a slice is behind the scenes, you only need a pointer to a slice if you need to append to it
<jmoiron>	henesy: pointers to slices are allowed
<hfaafb>	henesy: http://play.golang.org/p/wlBhnnt4zF
<smw>	henesy, they are allowed, but you can't index them
<jmoiron>	not directly
<smw>	henesy, (*arr)[0] will work. The real question is why you want a pointer to a slice
<jmoiron>	http://research.swtch.com/godata
<henesy>	smw: To pass said slice to a function
<jmoiron>	henesy: you can already pass it to a function
<henesy>	without copying
<smw>	henesy, not a good reason :-)
<hfaafb>	all values are copied
<jmoiron>	henesy: a slice is constant sized
<hfaafb>	passing a slice around is essentially passing a pointer to an underlying array around
*	toddself is now known as toddself_zz
<hfaafb>	so there's no deep copying of array contents
<henesy>	yeah, that's what I'm aiming for, I think
<jmoiron>	look at the SliceHeader link above
<jmoiron>	that's what a slice is
<jmoiron>	ptr,len,cap
<henesy>	jmoiron: looking into it, thanks for that. I was mistaken in a few things here, pointer use as well
<jmoiron>	no problem
<qknight>	what is a good way to get a variable processed inside a anonymous function? passing it as argument?
<qknight>	http://godoc.org/github.com/PuerkitoBio/goquery#Selection.EachWithBreak <- for example when i use this
<qknight>	  doc.Find("a").EachWithBreak(func(i int, s* goquery.Selection) bool {
<qknight>	      f := strings.Trim(s.Text(), "\r\n\t" + " ")
<qknight>	so right now i return true or false to stop further processing but how to return a further value from the anonymous function in that case?
<henesy>	jmoiron: so the pointer to the slice requires the extra '*' because a slice is already a pointer, thus specifying to descend another level into the pointer?
<hfaafb>	henesy: a slice is not a pointer, its like a struct with 3 fields
<hfaafb>	one of those fields is a pointer to an array
<hfaafb>	pointer syntax does not change for slices, or any type
<hfaafb>	you can't index (read: access a value like arr[i]) a pointer because pointers just aren't indexable like slices are
<henesy>	yeah, just trying to mentally reason why the asterisks is required for the indexing, but not for standalone things like struct pointers, which I can just define at function declaration as (r *Rectangle) or something similar, then just use r.length=1 or something similar, but it's required for the slice
<hfaafb>	so you have to reify a pointer with *
<henesy>	ah okay
<henesy>	that's what I was asking I believe
<henesy>	so it'd be asking for an index of the pointer
<henesy>	not the object pointed to?
<hfaafb>	uhh not sure what you mean there, but probably no
<henesy>	hfaafb: sorry for the noise, I'll read up on pointers, I don't think I understand some part of the core concept
<hfaafb>	i believe there's some "automatic" reification of pointers that is hidden
<hfaafb>	for things like pointers to structs, or method dispatching, not entirely sure on that though
<hfaafb>	in this case, you must get the value at the address pointed by the pointer before accessing it
<henesy>	hfaafb: like this: http://play.golang.org/p/jWINJJPGPz ?
<henesy>	for the automatice reification
<hfaafb>	no, that's explicit
<lungaro>	is there an efficient way to zero a structure in go without alloc'ing a new one?
<lungaro>	*blah = &zerovalue maybe?
<djx>	hey, how can I make this working? http://play.golang.org/p/r0jEB4_mul
<hfaafb>	djx: Foo isn't type Bar
<djx>	hfaafb: it is almost...
<sztanpet>	the error that is printed cannot be more clear surely
<hfaafb>	djx: what do you expect to happen?
<lungaro>	magic!
<djx>	lol
<djx>	hfaafb: is it possible to conver Foo in Bar?
<djx>	knowing they are the same?
<djx>	essentially the same*
<hfaafb>	absolutely
<hfaafb>	http://play.golang.org/p/WIV3Ytqqq9
<djx>	ah
<djx>	that's the magic
<hfaafb>	that's type conversion
<djx>	hfaafb: what's the type.(stuff) called?
<hfaafb>	https://golang.org/ref/spec#Conversions
<jkbbwr>	Type assertion
<djx>	tks for the link
<djx>	nice
<hfaafb>	also https://golang.org/ref/spec#Type_assertions
<skelterjohn>	lungaro: var blah *T; blah = new(T) ... *blah = &T{}
*	djx_ is now known as djx
*	ashemedai is now known as asmodai
<Cassyblanca>	Well, if goquery's intent is to be nothing more than jQuery but for Go, that makes sense, even if it can be somewhat arbitrarily restrictive.
<Cassyblanca>	Why not just fork goquery?
<benth>	i'd like to statically link a library (libpcap) to my go program, which is currently being dynamically linked. how can I do this?
*	ChanServ gives voice to iant
<lungaro>	thanks skelterjohn. Turns out I didn't even need it =P
<ritic_>	i get a string containing marshalled data from a service, how do i get this data into a []byte so that i can unmarshall it?
<ritic_>	i.e. "eyJkb2N1bWVudCI6ImNvbnRlbnQifQ==" -> eyJkb2N1bWVudCI6ImNvbnRlbnQifQ==
<cgt>	[]byte(thestring)
<ritic_>	cgt: will that double marshall though?
<cronos>	double marshall?
<ritic_>	it was marshalled once before and is being returned as a string. will that marshall that string again?
<cronos>	converting value of type string to []byte will not do anything special
<cronos>	it will jsut give you the bytes of the string
<echlebek>	It will give you a copy of the bytes in the string.
*	toddself_zz is now known as toddself
<echlebek>	don't forget about strings.NewReader, which gives you a reader if you have a string.
<ritic_>	think i got it. thanks all
<echlebek>	btw why does the service return JSON encoded to base64? :)
<jmoiron>	[]byte gets encoded to base64 automatically iirc
<ritic_>	stupid Solr
<ritic_>	returns everything as strings
<AlbertoLANB>	Hello guys! I would like to know if it’s possible to use switch to check a func type like here: https://play.golang.org/p/JiHHuNsPRf Not sure if that’s possible.
<jmoiron>	AlbertoLANB: https://play.golang.org/p/oIqqX6gPLp
<AlbertoLANB>	jmoiron Great! Thank you for that1
*	keepguessing is now known as keepguesing_zzzz
*	dev1 is now known as mey
<edrocks>	whats the difference between net/http.Request's Form and PostForm? Are they the same if your making a post or do you have to use PostForm for post's?
<KirkMcDonald>	edrocks: PostForm contains only the POST or PUT form data.
<KirkMcDonald>	edrocks: Form contains both that and the GET parameters.
<edrocks>	KirkMcDonald: thanks!
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 12 13:32:21 2015

**** BEGIN LOGGING AT Tue May 12 13:37:40 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<gra1>	KirkMcDonald how to send Null, an empty string ?
<KirkMcDonald>	gra1: You might use NULL.
<tcrypt>	you're already passing a string
<taruti>	NULL and an empty string are different things in SQL
<gra1>	Thanks all
<tcrypt>	CALL get_zip(00716, NULL, NULL, NULL, NULL)"
<tcrypt>	(missed the opening quotation mark sorry)
<daved>	If I parse two template files on one template var ( eg. t.Parse("stuff"); t.Parse("more stuff") ), is there a way to inspect the contents of the "compiled" data?
<KirkMcDonald>	That 00716 thing weirds me out.
<KirkMcDonald>	Based on context, I am assuming that's supposed to be a zip code.
<KirkMcDonald>	Normally those are treated as strings. Should that be quoted?
<gra1>	KirkMcDonald: yes it’s the zipcde
<harikb>	probably the same reason he got 'nil' in the string as well
<harikb>	the query is probably constructed earlier somewhere where these things are printed
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Tue May 12 13:42:59 2015

**** BEGIN LOGGING AT Tue May 12 13:51:31 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<daved>	nm, found a way
<harikb>	I am trying to decide between 'wgo' and dave cheney's 'gb' - I understand wgo is by skelterjohn and both are highly regarded gophers. But I would like your opinion (not asking to take sides). If I listen to Dave's video https://www.youtube.com/watch?v=c3dW80eO88I - I see he mentions that go team is against any configuration files for vendoring. doesn't the .gocfg/vendor.json break that rule?  I do like the fact that vendo
<harikb>	(sorry incomplete line, but that works) :)
<n1cky>	how can i pass an array to a function that takes '...string'
<cronos>	harikb: go team is against it but he's not part of the go team and gb is not their tool ;)
<smw>	n1cky, f(xs...)
<harikb>	well, the .gocfg thing was part of wgo, not sure if I stated the question correctly
<n1cky>	smw: huh? For example, i have a type []string{"foo", "bar", "baz"} and the function is fooBar(names ...string)
<hfaafb>	n1cky: exactly what smw said
<cronos>	harikb: same answer applies for wgo
<smw>	n1cky, fooBar(names...)
<adiabatic>	n1cky: yes, you're supposed to use three periods at the call site
<cronos>	harikb: (i don't know the implementation specifics of either of them)
<n1cky>	oh cool, thanks
<n1cky>	adiabatic: thanks
<harikb>	cronos:  ok , I got it.  thanks
<AmandaC>	harikb: I’m rather taken with wgo so far
<AmandaC>	used it for a few personal projects, holds up mostly-well, and skelterjohn’s been rather responsive at fixing the bugs I find. :P
<harikb>	thanks AmandaC
<bhenderson>	I'm trying to `go get mypackage.git` but I don't want it to install the binary as mypackage.git, just mypackage; any advice?
<bhenderson>	apparently go get doesn't take the -o flag
<bean88>	Even if it may be a general question about logging I ask this on this IRC because it happens within the context of a go application.
<echlebek>	bhenderson: git clone mypackage.git mypackage && cd mypackage && go get ./...
<bean88>	If my go function (which is called by another function) does return a error. Where is the best place to put the logging?
<bean88>	Currently I log inside the function via the go log package and do return the same string as the error.
<bean88>	This seems redundant but I do not know what the best approach is here.
<bhenderson>	echlebek: :/
<echlebek>	¯\_(ツ)_/¯
*	harikb saves that
<cronos>	bhenderson: alternatively go get -d mypackage.git && go install mypackage.git -o mypackage
<echlebek>	+1 to that, nicer than my method
<dmac>	cronos: I don't think that's valid
<cronos>	dmac: certainly didn't run it but why?
<dmac>	cronos: -o isn't a flag to go install
<cronos>	ahh, you're right
<cronos>	go install does handle all the "build flags" but -o is a flag of go build tool and not in a subset of "build flags"
<cronos>	kinda confusing that "build flags" != "all the flags of go build"
<cronos>	but you could probably s/install/build/ in that example :)
<bhenderson>	cronos: ok
<zeroXten>	hi. is there a reason why there isnt a 1.4.2 build for freebsd?
<echlebek>	https://groups.google.com/forum/#!topic/golang-announce/JT1jOsxZ2Ow
<echlebek>	looks like they never got around to it :P
<sztanpet>	probably lack of demand
<zeroXten>	heh
<zeroXten>	i wonder if they will release any more
<edrocks>	Anyone know of a pkg or snippet to fix sentence capitalization?
<cespare>	edrocks: English? With proper nouns and stuff?
<edrocks>	cespare: yes
<cespare>	no
<ttke>	"dennis hopper was a hopper and named his hopper the hopper hopper hopper"
*	ttke posits that a general solution would be equivalent to implementing human-like AI.
<edrocks>	ttke: I settled for essentially capitalize the first letter of each sentence and lower case the rest of it.
<ttke>	:-) that seems much more practical
<edrocks>	very. I was just surprised there wasn't good way to handle this. Most packages/libs I found didn't even have that they only do caps lower and title for each word
*	toddself is now known as toddself_zz
<technoweenie>	hey, does anything implement brad’s suggested vendoring scheme for dependencies?  https://groups.google.com/forum/m/#!topic/golang-dev/nMWoEAG55v8
*	toddself_zz is now known as toddself
<echlebek>	edrocks: so much for proper nouns
<edrocks>	echlebek: It's not too bad. I'm using it to fix shipping status descriptions which are coming in full caps from some carriers
<daved>	Is there a way to have a template function process during parsing?
<edrocks>	iirc you can add your own functions + there are several built in ones for text/template and the html version
<SaidinWoT>	daved: What exactly do you mean?
<hfaafb>	like parse time evaluation?
<daved>	edrocks: I have a "linked assets" function which will search my cache for a reference to a set of assets and it returns the current filename+hash.
<daved>	hfaafb: yes
<hfaafb>	not sure... not to my knowledge
<daved>	edrocks: I believe that it would be faster for my system to evaluate the current linked assets filename+hash during parsing rather than during every template execution.
<echlebek>	daved: why do you believe that?
<echlebek>	daved: if you have something that boils down to a macro expansion, you could pre-process your templates I suppose.
<daved>	echlebek: Every call to a template function slows down my responses per second by ~10%.  If I can get that happening during parsing, it would radically minimize the processing overhead.
<edrocks>	I switched away from server side templates a while ago. But you could use a cache if it was slow. My filenames are created at build time though
<edrocks>	daved: take a look at these docs they have the full template syntax http://golang.org/pkg/text/template/ which can be used in the html version too
<daved>	echlebek: I was thinking about using a "comment function" - {{/*linkedAsset "js/resource.js" */}.  I could then search for this and replace it with the desired output.
<daved>	edrocks: sure.  I think I'm trying to do something beyond what is made available.
<daved>	echlebek: sound sane?
<echlebek>	daved: so you have some stuff that is static for the lifetime of the process I guess? You could produce a template with text/template and then further specialize it for each request.
<echlebek>	so, a template template.
<bhenderson>	sounds like an escaping nightmare
<echlebek>	yeah, may not turn out so nice.
<edrocks>	I'd use a different delimiter for each step. But I'd also suggest not using the templates as they get really messy really fast
<echlebek>	I use them to handle my static assets at start-up, that's about it.
<daved>	echlebek: at program startup, templates are parsed.  If I set a flag or HUP, a set of files (linkage) are also processed and hashes are derived.  the hashes are then inserted in the template function.  I'm not sure how using a text/template would help facilitate that.
<daved>	my linkage files are simply json arrays listing many other assets to be compiled and hashed.
<echlebek>	daved: maybe I misunderstood what you were trying to do
<daved>	my current function is {{ linkedAssets "js/oneFileToRuleThemAll.js" }}.  The linkage file "linkage/js/oneFileToRuleThemAll.js.json" is parsed and results sent to cache.  A second cache key is set with a value of the hash.  The "linkedAssets" function returns the value of the second key "js/oneFileToRuleThemAll.js.346ikj45jb45kjb45kj45jb45jhv345bh.js" with the compiled and uglified contents.
<daved>	I think pre-processing and modifying the template before parsing is best.  But I may not be thinking clearly.
<daved>	homebrew asset pipeline
<hfaafb>	just use lisp, obviously
<echlebek>	Well, you would be creating technical debt in order to achieve 10% faster requests.
<echlebek>	If that 10% is going to make or break you, then maybe it's worth it.
<daved>	echlebek: I'm often torn between doing what I thought was practical and doing what is "more correct".
<daved>	I'm ok with the slowdown.  It makes it easy to reason about for now.
<context>	id probably not do asset compilation within the app itself
<context>	it should be done before deployment
<context>	can be done as apart of deployment, just not like 'on app startup'
<daved>	context: it done only when requested.  So if the front end changes, I request caches to be rebuilt.
<context>	that should only happen in development.
<daved>	?
<echlebek>	^
<daved>	Why would I only update my sites in development?
<context>	you shouldn't be recompiling assets IN request "whenever"
<chance>	daved: static files should be updated explicitly
<echlebek>	You should be deploying the whole, built app, not just a part of it.
<chance>	in production
<chance>	think about if someone finds a way to cause a rebuild of assets
<chance>	remotely
<daved>	there's no way
<context>	so what
<daved>	if they could do that, they'd own my server
<chance>	or if rebuilding fails. static files shouldnt need to be dynamic.
<context>	what if you go in and edit the file thinking you are on local host
<context>	you just hosed your production environment cause you forgot a ;
<echlebek>	You don't want to mutate your deployed software.
<echlebek>	You want to produce a tested build and deploy it.
<daved>	context: it's deployed via git and after local testing.
<edrocks>	read up on immutable infrastructure
<context>	cool. so why are you worried about or even changing ONLY the js in production?
<echlebek>	Heck that isn't even immutable infrastructure, it's just "don't test in production"
<context>	you deploy the entire app
<context>	compile assets as part of deployment before 'go live'
<daved>	context: the back-end is separate from the front-end
<context>	but your backend is hosting the frontend
<daved>	I have a system running, update the front-end, tell the back-end to rebuild cache after new changes are pulled in
<echlebek>	Yeah, so you are thinking you will get zero downtime by updating only the frontend?
<context>	daved: then here do this... deploy new frontend, send a signal to backend, it compiles assets in a goroutine (while STILL sending old frontend until complete)
<echlebek>	That might work but there are other ways.
<daved>	about 5 - 10 seconds to build a large cache on a basic server
<context>	update your cache when compilation is complete, and then the new frontend gets sent to clients
<context>	don't do it IN request.
<context>	that way...
<context>	IF you for some reason have an error compiling assets, your goroutine can log it, and politely continue responding with old frontend as if nothing happened
<daved>	context: I used the word "requested" so that it would be understood that I control when the cache is rebuilt.  It is not actually trigger by a client request.
<context>	so you are making someone wait 5-10 seconds for a page to respond? i already left your site.
<hfaafb>	use blue green deploys, 2 servers that a load balancer switches between
<daved>	context: nope
<hfaafb>	once blue is ready, switch from green to blue
<echlebek>	daved: blue green deployments are a common approach that work well
<hfaafb>	once green is ready, switch from blue to green
<daved>	context: fall-back will catch those
<context>	daved: either way, its still odd to have your backend compiling your assets.
<echlebek>	daved: the thing is, you don't want to change anything you have deployed, ideally
<context>	if you decide to change how assets are compiled, you have to redeploy your backend
<context>	if you insist on keeping them separate
<context>	your backend shouldn't be serving the assets.
<daved>	echlebek: how would I ever update the sites?
<context>	let your backend worry about what it should be worrying about, busines...
<echlebek>	daved: you blow it away and make it fresh each time
<daved>	echlebek: I'm really, really lost.  This is nothing different than grunt, but only when I call it.
<echlebek>	daved: http://martinfowler.com/bliki/BlueGreenDeployment.html
<context>	daved: they are saying deploy ALL at the same time
<context>	if you want to keep front/back end separate, than dont have your backend serving your frontend.
<context>	put nginx or something in front to serve static assets
<daved>	context: no way
<daved>	context: I am using nginx, but not for direct serving.
<context>	daved: here is a simple question
<daved>	context: the application is handling brands/themes/fall-backs, etc.
<context>	why does your backend give a crap about the frontend ?
<daved>	context: my api does not.
<daved>	context: my file server must care about what is being requested so that it delivers the correct resource
<context>	i would personally separate those out
<context>	=> frontend_server ; /api => api_server
<daved>	context: I understand.  But it would take much longer for me to abstract out everything that would need it.
<context>	/ => frontend_server ; /api => api_server
<context>	and deploy/restart frontend_server when assets change.
<daved>	context: and they are different nodes, so can be ran separately.
<hfaafb>	html + javascript + relay + graphql <-> database
<hfaafb>	get webscale
*	matp_ is now known as matp
<echlebek>	So now that postgres has pl/v8 I suppose you could theoretically put NodeJS into it and use it as a web server. :D
<echlebek>	SELECT "/" FROM website; D:
<echlebek>	er
<echlebek>	SELECT content FROM website WHERE route = '/';
<context>	echlebek: close but no.
<context>	postgres doesnt respond to http requests
<context>	:p
<echlebek>	context: just needs a little plugin
<echlebek>	or a proxy that turns HTTP requests into SQL queries
<ebonics>	nginx ;o
<echlebek>	if anyone needs any more horrible ideas I'm right here.
<barake>	openresty
<hfaafb>	echlebek: that's essentially what GraphQL is
<echlebek>	hfaafb: graphQL is a web server embedded in a database?
<hfaafb>	no... but its a text protocol for declaring data needs, which servers respond to with the actual data
<echlebek>	Seems like it's just a query language for a graph database to me
<hfaafb>	essentially
<pnsrc>	hi, how could I set a uint64's value to the number which is a string?
<pnsrc>	I tried
<pnsrc>		z = uint64(fmt.Sprint(smlarr[i]))
<pnsrc>	the value in smlarr[i] is a string
<KirkMcDonald>	pnsrc: In what way is the number encoded into the string?
<KirkMcDonald>	pnsrc: Decimal digits in ASCII?
<pnsrc>	it's decimal digits
<KirkMcDonald>	pnsrc: strconv.Atoi()
<deniska>	pnsrc: http://golang.org/pkg/strconv/#ParseUint
<KirkMcDonald>	Or that.
<KirkMcDonald>	That's a better type match, even.
<pnsrc>	thanks,
<FergusL>	anyone played with template rendering in strings to be sent to a browser client ?
<FergusL>	I'm in a huge encoding nightmare
<KirkMcDonald>	FergusL: Are you using html/template?
<FergusL>	yes
<FergusL>	augmented by revel's template funcs
<KirkMcDonald>	What is the encoding problem?
<FergusL>	I'm receiving requests over websocket, I send raw html as responses
<FergusL>	said raw html is made with html/template
<KirkMcDonald>	FergusL: And the result has mangled text?
*	Guest95391 is now known as cam_stitt
<djx>	I'm getting an error from a lib that I'm using, I can't find the specific func where that error occurs (it's an opensource lib) I tried with breakpoints but somehow the error shows up in the middle of them which is driving me crazy
<djx>	any more ways that you guys use?
<djx>	to debug
<FergusL>	KirkMcDonald: well as soon as there are accents like é or è, it's mangled
<cronos>	djx: what does the error say?
<djx>	cronos: error: "sql: expected 0 destination arguments in Scan, not 1"
<cronos>	well, obviously you use scan with a query that doesn't return values
<djx>	I'm using a specific driver, but I can't find where the hell does that error comes from
<KirkMcDonald>	FergusL: Sure. To solve this, you need to figure out a few things:
<cronos>	djx: what does your query look like?
<cronos>	also, it probably comes from database/sql
<KirkMcDonald>	FergusL: Where does this data come from? Which encoding is it in? Which encoding is it expected to be in?
<djx>	cronos: hmm that's odd because it's an INSERT
<cronos>	djx: so why are you calling Scan?
<djx>	cronos: it's not me, it's the driver
<cronos>	wat
<djx>	lol
<djx>	cronos: I'm using a ORM as well
<cronos>	djx: can you show the piece of code that returns that error?
<cronos>	ahh ,then it's probably that
<cronos>	not the dri er
<cronos>	driver
<djx>	cronos: ah, you think it's the ORM?
<cronos>	of course
<cronos>	driver doesn't call Scan, it provides it
<djx>	damn.. now, which part? lol
<cronos>	ORM calls scan
<KirkMcDonald>	FergusL: Does it end up looking like e.g. Ã©
<cronos>	djx: can you show your code?
<djx>	I can show you the ORM
<KirkMcDonald>	FergusL: Or does it end up looking like: �
<djx>	cronos: https://github.com/jinzhu/gorm
<cronos>	djx: i still need to know what from that orm are you calling
<KirkMcDonald>	FergusL: Put another way, is it UTF-8 data being interpreted as Latin-1, or the reverse?
<djx>	Create
<djx>	cronos: I believe it's this one https://github.com/jinzhu/gorm/blob/master/callback_create.go#L21
<cronos>	djx: might be https://github.com/jinzhu/gorm/blob/master/callback_create.go#L83
<djx>	cronos: and it goes at lest until https://github.com/jinzhu/gorm/blob/master/callback_create.go#L83
<djx>	and there it its the Scan
<KirkMcDonald>	FergusL: My suspicion, based on the total absence of any details, is that either the web browser is sending Latin-1-encoded data and the Go code is treating it as UTF-8, or your application is not setting a content-type and the browser is interpreting the UTF-8 data sent by your Go code as Latin-1.
<djx>	cronos: why expected 0? the QueryRow didn't return anything to scan?
<KirkMcDonald>	FergusL: Or if not Latin-1, then some other 8-bit extended character set.
<KirkMcDonald>	FergusL: (It's usually Latin-1, though.)
<djx>	cronos: ah I got it... he thinks it will be an update
<FergusL>	KirkMcDonald: I managed to send correct data from the browser using encodeURIComponent() in javascript, that part is sorted out
<djx>	cronos: but I'm inserting keys without autoincrement
<cronos>	djx: that errors mean that query was not supposed return any columns and gorm asked for 1
<ev4l>	I am new to Go from Python. I am looking to create a socket server. In Python, Ive always used the Twisted framework as it's just beautiful. Event driven instead of the infinite loop and listen. I have been looking everywhere for a decent Go library to handle sockets like this. I cnat find anything, can anybody point me in the right direction?
<cronos>	djx: anyway, this is likely gorm's bug or something about how you use it
<KirkMcDonald>	ev4l: You wouldn't use an event loop in this way in Go. It would be redundant.
<cronos>	i feel dirty enough as it is after looking at that code for 2min
<KirkMcDonald>	ev4l: You'd just spin off a goroutine per connection.
<djx>	cronos: lol
<djx>	cronos: is that bad?
<djx>	cronos: do you know any other ORM around there?
<ev4l>	KirkMcDonald: So I would just infinite loop and listen for connections then Go routine each one, then within there I try to detect disconnects and such?
<smw>	ev4l, pretty much
<KirkMcDonald>	ev4l: Basically.
<cronos>	djx: no, i don't use orms precisely to avoid these kinds of issues
<ev4l>	Interesting, I'll have to just play around and see what I can do then! Thanks!
<djx>	cronos: believe me, I tried to not user orms.. but was too much pain
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Tue May 12 17:13:01 2015

**** BEGIN LOGGING AT Tue May 12 17:20:45 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<daved>	are json arrays unmarshalled to a slice left in the order defined in the json?
<cespare>	daved: yes
<daved>	cespare: ty
<harisamin>	anyone used the gorm library?
<harisamin>	with postgres?
<FergusL>	KirkMcDonald: then, on the go side, I create html based on the data received, and then I send data back over the websocket connection (note: it's not an actual complete html response, it's raw html that has to have the é encoded as &eacute; but all the < > / kept as they are) My suspicions go towards 1) the websocket library that goes mute because of these characters and 2) the way I'm getting the template into a string
<FergusL>	sorry for the delay and the lack of details
<FergusL>	anyway thanks again :)
<mwhudson>	iant: good morning.  am i right to think that there is no point putting .dynsym/.plt/.got/.dynamic sections into the .o file produced for external linking?
<pnsrc>	wow, I actually wrote a 2k go program, that ran succesfully on the first try
<pnsrc>	thanks to you all:)
<furball365>	i've got []byte from mmap and want to use it for an array of struct. It's a well-travelled problem, but the best i've found so far is
*	Cr8 is now known as Guest73714
*	trph is now known as traph
<furball365>	*(*[]Struct)(unsafe.Pointer(&(bytes[0])))
<furball365>	is there a better way to do this?
<cronos>	yes, use proper encoding
<furball365>	yeah.. but the array is only seen by goroutines.
<furball365>	so no cross-endian issues
<cronos>	how do you store that data?
<furball365>	it's an anonymous memory-only mmap
<cronos>	are you just trying to pass around values between goroutines?
<furball365>	i know it's a judgement call, but i have my reasons
*	cgrieger is now known as cgrieger^away
<cronos>	if you have to pass it outside of your program, use gob or json
<furball365>	so.. the encoding libs are too heavy. The cast will work, but if there's a better, lightweight way then great
<furball365>	yes, gob would be what i would use for external use
<cronos>	wait, so you *are* passing it between goroutines in the same process?
<furball365>	yes
<cronos>	so just pass them as is
<cronos>	why mmap or any other magic?
<cespare>	haha
<lemmi>	because reasons, he said that already :>
<furball365>	yes.. otherwise i wouldn't bother.
*	veonik is now known as veonik_
<cronos>	what are your reasons?
<hyphenated>	perceived performance I'm betting
<hyphenated>	it's far more important than actual performance
<furball365>	yes.. Premature Optimization :)
<furball365>	the holy grail of software development
<jmpf>	is there a list of all the golang.org short urls other than, inurl:golang.org/s/ ? basically I'm looking for a list of all the design docs
<furball365>	i suspect it's a niche case.. just curious
<cespare>	jmpf: there's a wiki page
<cespare>	jmpf: https://github.com/golang/go/wiki/DesignDocuments
<hyphenated>	furball365: write code that does it sensibly. then if it actually operates too slowly, make it less sensible
<jmpf>	cespare: ah - just found it now - cool thnx!
<aquarat>	I want to redirect the log package's output to a GoNcurses window, but the GoNCurses window doesn't implement io.Writer... can I create a buffer or channel and execute log.SetOutput(new thing) and then write some code that in a separate go routine reads from the buffer/channel and uses the GoNcurses window's Print() function ?
<aquarat>	:D
<aquarat>	it's not very important, just a nice to have
<cronos>	aquarat: you can use an io.Pipe to get log output as io.Reader and then use bufio.Scanner to get separate lines
<aquarat>	awesome
<aquarat>	or bytes/chars ?
*	aquarat investigates that approach
<cronos>	yeah, anything, it's an io.Reader
<aquarat>	great, thank you :)
<aquarat>	io.Pipe is perfect :D
*	agentza is now known as aquaratza
<aquaratza>	mmm
*	aquaratza is now known as aquarat
*	kimiamania is now known as Guest10737
<iant>	mwhudson: that is correct
<mwhudson>	iant: did you see the comments at https://go-review.googlesource.com/#/c/9888/2/src/cmd/internal/ld/data.go@a1120 ?
<mwhudson>	i'm pretty confused now
<iant>	mwhudson: your last comment ends in mid-stream
<mwhudson>	oh
<mwhudson>	iant: that "as far as" wasn't meant to be htere
<iant>	adddynsym should probably just return when externally linking
<iant>	either that or it should not be called
<iant>	the concept is meaningless if we are invoking the external linker
<mwhudson>	so i have a branch that does that
<iant>	....and everything breaks horribly
<mwhudson>	well, internal linking with cgo seems to break
<mwhudson>	i should go back to it and check i haven't done anything really daft
<iant>	hard to see why anything should change when not externally linking
<cronos>	naming help: func in package db that accepts a file path, reads config form it and returns (DB, error)
<cronos>	func ConnectUsing(fname string) (DB, error) ?
<mwhudson>	iant: aah, i was wrong about it breaking internal linking, but the problem is that adddynlib is called when processing cgo sections, which is before the auto -> internal/external decision is made
<iant>	ah
<mwhudson>	yeah, forcing either internal or external makes it work
<dmac>	cronos: do you have other function that can return a DB?
<hyphenated>	cronos: are there other Connect* functions?
<dmac>	*functions
<mwhudson>	time for coffee
<hyphenated>	does it _have_ to connect also, or could it just initialize a Config object that you call Connect() on to get DB ?
<cronos>	hyphenated: there's func Connect(conf Config) (DB, error)
<cronos>	dmac: ^
<cronos>	Connect with filename is just a convenience function that does parsing
<hyphenated>	is it purely for convenience?
<cronos>	yup
<hyphenated>	ConnectUsing sounds like it's missing a
<hyphenated>	;-)
<cronos>	i re-use that package in a few projects so i don't want to copy the parse + connect code everywhere
<dmac>	cronos: I would probably have a function which takes a path and returns a Config, and a function that takes a Config and returns a DB
<hyphenated>	it sounds like he has those already
<jmoiron>	^ that's what i'd do
<jmoiron>	dbpkg.Connect(cfgpkg.MustParse(path))
<jmoiron>	panic all the things
<hyphenated>	and it sounds like we all have the same basic idea about how it'd be structured. yay mindmeld ;-)
<cronos>	dmac: since *all* clients (except tests) will use config file, i'd like to write combine those two
<cronos>	s/write//
<cronos>	jmoiron: that actually looks ok, except s/panic/os.Exit :)
<cronos>	also, MustParse and Config will live in dbpkg
<hyphenated>	I'd be tempted to call it ConnectWithConfigFile.. or find some way to include File in it
<cronos>	ParseAndConnect? :P
<cronos>	ala ListenAndServe
<dmac>	cronos: doesn't seem shorter than jmoiron's suggestion
<hyphenated>	well, what's the function called that returns a Config?
<cronos>	dmac: well, it allows me to return an error instead of terminating program :P
<cronos>	hyphenated: there's no such function
<cronos>	not yet at least
<jmoiron>	it's easier to test these things if you don't couple it like that
<cronos>	i don't really plan to test the parsing part
<cronos>	nor the connect
<cronos>	well, maybe connect because it does prepared statements
<cronos>	i can probably extract all the config file handling things into a separate package and only have Connect(conf Config) in db and NewDB(fname string) (db.DB, error)
<dmac>	cronos: Connect() can't fail?
<cronos>	it can
<cronos>	meh, i'll do ParseAndConnect for now, maybe change in the future
<Freman>	binary.PutVariant(buf[9:13], int64(97351345)) <- sets bytes[9 - 13] maybe yes?
<belak>	Is it possible to use the gocode emacs plugin without having to copy a file from the repo?
<KirkMcDonald>	Freman: It might set fewer bytes than the slice holds.
<KirkMcDonald>	Freman: Oh, though you are passing a constant to it...
<Freman>	yeh I should have been more specific, I am passing rand.Intn(65535) so shouldn't be more than 2 bytes :D
<KirkMcDonald>	Freman: It's easy enough to test: http://play.golang.org/p/ego_2vvrKS
<Freman>	AAAAAAAAAAAA6qzp7w4AAA==
<Freman>	does seem to work
<Freman>	(wasn't until I removed the code setting the first block of bytes :D)
*	r04r is now known as zz_r04r
<Freman>	http://play.golang.org/p/oZXaTwkj_M - works :D
*	mwhudson bags CL 10k
<guybrush>	is dave cheney here? i would like to talk about gb, i dont understand why it is good to allow only 1 version of a package
<guybrush>	i think its anti tiny-do1thingwell packages
<cespare>	guybrush: that's just smart in general; regardless of gb
<cespare>	guybrush: what makes you say that?
<cespare>	guybrush: some packages have initialization; maybe they register themselves with database/sql or something like that
<cespare>	guybrush: also what if two packages depend on a package with two versions?
<guybrush>	because when i use A@1 that depends on B@2 and also i depend on A@2 that depends on C@2 i cant use gb
<cronos>	then only use A@X where X is the same
<guybrush>	well when i depend on D which depnds on A@1 and E which depends on A@2 ?
<cespare>	guybrush: if you depend on A@1 and A@2 you're doing it wrong
<_jesse_>	the only way I can think of handling your case is import rewriting which, I believe, was a goal of gb not to do
<guybrush>	no thats not what i mean
<cespare>	guybrush: where are these version dependencies coming from?
<guybrush>	its not that I do something wrong
<cespare>	how does D say "I depend on A@1"?
<cronos>	guybrush: gb won't allow you to do *anything* because it's dangerous
<guybrush>	its that i depend on packages that depend on different apis provided by different versions of the same package
<cronos>	fix either D or E
<guybrush>	i see your point
<guybrush>	but still i believe its the wrong way
<cespare>	guybrush: basically, afaict it's gb philosophy (and go in general) that you, the person writing package main, to ensure that all your versions of all transitive deps work together
<cronos>	guybrush: what's the right way?
<cespare>	*your responsibility
<guybrush>	ok maybe i argued wrong, its not the wrong way
<guybrush>	maybe its really philosophically
<guybrush>	im really into the way how node modules work
<casualjim>	guybrush: but that's import rewriting isn't it
<guybrush>	it was a game-changer when npm introduced local modules in favor of global modules
*	Freman blinks... id string... id = "fred"... id[0] is uint8
<guybrush>	gb now wants to make everything global
<cespare>	guybrush: how so?
<guybrush>	instead of tiny contained packages that depend on other tiny packages
*	ChanServ gives voice to iant
<guybrush>	this way it makes everyone build big packages
<cespare>	guybrush: you know that gb is only intended for applications (ie package main), not libraries, right?
<cespare>	guybrush: i don't see what gb has to do with big packages
<_jesse_>	guybrush: gb is only meant for projects building binaries
<guybrush>	oh i didnt look at it that way
<_jesse_>	not libraries
<guybrush>	but still you only have 1 version of a package
<_jesse_>	correct, for a given project
<guybrush>	dont see where it makes a difference when its only ment for building binaries
<guybrush>	so the libs still use godep?
<cespare>	guybrush: godep is also only for binaries ;)
<cespare>	guybrush: libraries shouldn't use any of these things
<guybrush>	well
<guybrush>	godep is not only for binaries
<guybrush>	its for having the right version of dependencies
<guybrush>	inlined into the source-tree
<guybrush>	not 1 global version per package
<_jesse_>	yeah, you can use godep that way, but I believe the intent is to only use it with binaries
<cespare>	guybrush: you can safely ignore any libraries that use godep
<guybrush>	yeah because it just works
<guybrush>	when i depend on a project that is maintained with godep?
<guybrush>	ah sorry
<guybrush>	gb
<guybrush>	i cant go get it
<cespare>	guybrush: you shouldn't depend (in a library way) on any package that uses gb or godep
<cespare>	because those are only for package main
<guybrush>	woah that breaks everything of how i thought how to do go
<casualjim>	guybrush: it's not like npm
<casualjim>	it doesn't recurse down when it compiles
<casualjim>	also not godep
<guybrush>	well actually godep does?
<casualjim>	not in my experience
<guybrush>	godep is pretty much like how node-module-resolution works
<_jesse_>	godep can keep projects 'go get'able via import rewriting
<guybrush>	but simpler, still the same idea
<guybrush>	right
<cespare>	guybrush: just because you can, doesn't mean you should
<guybrush>	thats because go's import doesnt have the same module-resolution node has
<cespare>	guybrush: it's a bad idea to depend on those because (a) now you can have multiple versions of the same lib, which is bad as explained above, and (b) that's a good sign that the package author may not know what they're doing
<guybrush>	true but it is the only way you can sure you get exactly what you want
<_jesse_>	one of the arguments behind gb is that you should stop using `go get` to get binaries
<guybrush>	well still i believe its just wrong to have 1 global version of a package
<_jesse_>	since you'll almost always get a different "build" then others
<cespare>	guybrush: what?
<cespare>	guybrush: i think you still may be confused.
<guybrush>	because its just not how it is, we break apis
<cespare>	guybrush: gb does not have 1 "global" version of a package. It has one version per *project*
<guybrush>	we break apis and add features and bump version-numbers
<guybrush>	cespare, sorry i meant global in the project
<cespare>	guybrush: gb is for *projects*
<guybrush>	right but you have only one version of a package in a project
<cespare>	guybrush: in gb you are responsible for downloading the deps, so you're completely in control of getting exactly what you want
<cronos>	given a random binary file, is there a way to find out if it's a go program?
<guybrush>	cespare, you are responsible for that with goget too and also with npm
<cespare>	guybrush: sorry but limiting yourself to 1 version of a library per project is the only sane thing to do
<cespare>	if npm lets you do otherwise i think that's a bad idea
<guybrush>	cespare, i disagree
<cespare>	in ruby land, for instance, bundler does not let you do that
<cespare>	cronos: i suspect it's easy to tell, try inspecting the first few k of a binary
<cronos>	cespare: what should i see?
<FrostCandy>	Easy Stupid question: I'm using json.Marshal on a struct, but I want to know how many bytes the resulting variable has after I do the json.Marshal. I don't know how to ask the question to find it on google.
<cronos>	actually i figured out the problem but would still be nice to know
<cespare>	FrostCandy: len() ?
<_jesse_>	FrostCandy: len(b)
<FrostCandy>	ahhh that was easy
<cespare>	cronos: i dunno, just saying I suspect ;)
<cespare>	i'd have to try it out
<guybrush>	a concrete example: calculater@1 has api for +,-; calculator@2 adds *,/; pkgA depends on calculator@1; pkgB depends on calculator@2; .... now when i install pkgA and pkgB, its my responsibility to fix dependency-hell?
<guybrush>	why would this a good thing
<cronos>	cespare: well, there are some ascii pieces when opening it in vim
<cronos>	but nothing obviously indicating go
<guybrush>	cespare, as i said this makes everyone build big silo-packages rather than tiny packages that do only one thing well
<cronos>	cespare: ahh, there seems to be some code info appended at the end
<_jesse_>	guybrush: yes, the only way that differs from most dependency management tools is that libraries don't specify dependency versions
<cespare>	guybrush: pkgA doesn't say it depends on calculator@1; it just depends on calculator
*	harikb sees runtime.GOMAXPROCS in binaries with strings :P
<guybrush>	because if you have lots of tiny packages you get into dependency-hell
<cespare>	guybrush: so if you get an up-to-date version of calculator,  it will work with pkgA and pkgB
<guybrush>	cespare, right its my simple example.. in reality things are complex
<guybrush>	cespare, in theory yes, with this simplified example
<cespare>	guybrush: in reality I haven't found it to be a problem in several years of writing production Go
<guybrush>	you dont use any packages that use godep?
<cespare>	guybrush: nope
<guybrush>	well i do
<cespare>	don't think so
<_jesse_>	go libraries do tend to have more stable APIs than I've seen in other languages
<_jesse_>	but I agree with cespare, I haven't really found this to be a problem yet
<_jesse_>	I do see your concerns
<guybrush>	maybe im just to much in love how node-module-resoultion works and i cant see the light
<guybrush>	note that i dont think its perfect how it works in node
<guybrush>	its just much better than anything else
<guybrush>	and godep comes close to that
<guybrush>	but thanks for the discussion, glad i heard some arguments
<cespare>	guybrush: i think davecheney may be active on the slack channel
<cespare>	guybrush: he's not in here very much
<_jesse_>	I feel like most packages just only depend on the standard library or other packages they maintain
<_jesse_>	for better or worse
<cespare>	guybrush: note he lives in australia time
<guybrush>	ah ok
<erlangist>	Does go optimize tail recursion sufficiently to use it as a method of keeping state?
<cespare>	erlangist: no
<_jesse_>	this may work simply since the standard library gets you pretty far
<guybrush>	_jesse_, that for sure
<guybrush>	_jesse_, node-ecosystem is really different regarding that
<cespare>	erlangist: there's not really "sufficiently"; either it's optimized to be non-recursive or it's not
<Freman>	BenchmarkGenerateID	 5000000	       326 ns/op - fast enough? :D
<erlangist>	cespare:So one should avoid using recursion in Go?
<guybrush>	_jesse_, they try hard to put everything into userland and in core are only things that really need to be in core
<_jesse_>	guybrush: yeah, that is much different model
<cespare>	erlangist: one should avoid using excessive recursion where a loop would normally be used
<_jesse_>	I haven't really used node enough to comment
<cespare>	erlangist: IOW go is not a language where recursion is a normal way of writing loops
<guybrush>	_jesse_, because the module-resolution works so great in node. tiny-modules (very often just a 10loc-function) are very common
<erlangist>	cespare: Good to know, thanks
<guybrush>	_jesse_, but really maybe i should not go against the flow and how things work in go..
<guybrush>	_jesse_, also semver is a big deal in node-eco
<guybrush>	which is basically non-existent in golang-eco
<guybrush>	though gopkg.in is a thing :)
<_jesse_>	gopkg.in is definitely an interesting concept
<harikb>	gopkg.in assumes that code is always hosted in github.com ?
<_jesse_>	yes
<guybrush>	i think no
<guybrush>	ah ok
<echlebek>	refactoring Go code is so easy :)
<guybrush>	yeah the thing with gopkg.in is that it depends on branches and tags which is not really reliable
<harikb>	and yet another registry in which to claim your URL
<guybrush>	since they can change
<harikb>	oh this is by Gustavo!
<guybrush>	anyway i will stick with godep and/or other tools that do things in a similar way
<guybrush>	i think rewriting import-paths is very go-like
<guybrush>	there are lots of tools that rewrite code programmatically (gogoproto, go generate, ..)
<guybrush>	so imho it fits just well to do vendoring by rewriting go-paths as well
<guybrush>	but i dont want to make gb bad or something, just wanted to discuss :D
<guybrush>	since i have strong opinion on dependency-management
<skelterjohn>	guybrush: if you have opinions, tell me what you think of github.com/skelterjohn/wgo
*	guybrush is looking
<skelterjohn>	i dislike the idea of rewriting imports quite a bit
<guybrush>	skelterjohn, what about nested packages that also use wgo?
<skelterjohn>	wgo wants to manage the workspace, not the package
<skelterjohn>	that said, it is possible to make something work both ways
<skelterjohn>	github.com/skelterjohn/tmplcute is an example
<skelterjohn>	if you git clone it, wgo can restore deps and build
<skelterjohn>	or, you can 'go get' it without worrying about deps
<skelterjohn>	but in my opinion, 'go get' and rev pinning or vendoring don't mix
<skelterjohn>	it's always got to be the workspace that has revs, because the workspace is king
<skelterjohn>	packages are peers, and they can disagree, and then everything is broken
<skelterjohn>	but the workspace is always king.
<guybrush>	im not sure i fully understand wgo, but i think it works very similar to gb
<guybrush>	i mean it has to when you want to avoid renaming importpaths
<guybrush>	i wonder why you dont like rewriting import-paths
<skelterjohn>	it does work similar to gb, that is true
<skelterjohn>	but i think rewriting the entire go tool from the ground up is a waste of effort
<skelterjohn>	guybrush: because it's a pain in the butt and doesn't buy anything
<skelterjohn>	guybrush: if you really want to fork the repo, that's fine
<guybrush>	it enables dependency-vendoring
<skelterjohn>	then you should change the import because you're importing something else
<skelterjohn>	but if you just want to pin a rev, or vendor the dep into the workspace, import rewriting is pointless
<guybrush>	hm yeah maybe i dont get the point :p
<skelterjohn>	guybrush: it's mostly that import rewriting doesn't buy you anything fundamental, so i'd rather not do it
<skelterjohn>	it also means the code loses track of where the package comes from
<skelterjohn>	so if you lose your godep config, now that code can't be built at all
<guybrush>	in the talk dave did, there was only one argument that i cant argue against, that is when go panics because of some internal stuff i dont really understand
<skelterjohn>	well, that sounds like a bug
<skelterjohn>	the go tool should never panic.
<guybrush>	with godep you put the source into vcs
<guybrush>	also what is when github is down=
<guybrush>	you should always put all deps into the vcs
<guybrush>	thats my opinion anyway
<skelterjohn>	guybrush: ok, can't be rebuilt without godep, since the source is in a weird place
<cespare>	skelterjohn: "so if you lose your godep config, now that code can't be built at all" huh?
<skelterjohn>	cespare: if it's not copied in, just in vendor.json or whatever, then 'go get' doesn't know how to fetch
<skelterjohn>	i guess that's a minor point
<skelterjohn>	but rewriting imports means your package doesn't know where it came from anymore
<cespare>	skelterjohn: oh, i don't think godep supports that mode anymore
<skelterjohn>	good
<cespare>	it really wants to copy the deps in
<skelterjohn>	cespare: i'm pretty sure you can have the repo not have the vendored deps, and then do a 'godep restore' to bring them in
*	danecand_ is now known as danecando
<spinny>	http://golang.org/issuerust
<Emperor_Earth>	is it worth it to factor out a json encoder to be a middleware in the form func(http.Handler) http.Handler?
<Emperor_Earth>	my REST API returns 99% json, so it would be nice to cut down on the if err := decodechain; err != nil { //etc
<Emperor_Earth>	but i'm having trouble seeing how to do this. i think ther best way is to wrap http.ResponseWriter
<Emperor_Earth>	but it's not as clean as it was for a Gzip func in that form
<skelterjohn>	Emperor_Earth: yeah, gzip wrapping is bytes->bytes
<skelterjohn>	but now you want object -> bytes
<skelterjohn>	you're probably going to need a custom piece of code for each handler, just because something needs to know the type that you're unmarshalling into
*	zhaoyemi1g is now known as zhaoyeming
*	slurpymcdurpy is now known as lyonsb
<Emperor_Earth>	skelterjohn, thanks for your take. that's what i was thinking but it helps to have someone with your expertise confirm
<_cb>	I can invoke a postgress function that expects an integer without a problem but having trouble invoking one that expects an int and a string. Nor ' nor \" Seem to work for a string delimiter.
*	NiTeMaRe is now known as trobotham
<cjslep>	Anyone have experience using wss in the gorilla toolkit as a client? Is it really as easy as using a tls.Conn?
*	ChanServ gives voice to iant
*	tomku|two is now known as tomku
<_jesse_>	skelterjohn: you used to be able to, now godep only supports vendoring
<_jesse_>	Emperor_Earth: you could look at https://github.com/unrolled/render for inspiration for DRYing up JSON serialization in responses
<zzing>	Are there any decent ides with go support including interactive debugging?
<Vendan>	zzing, liteide
<Vendan>	not going to say it's amazing, but you can set breakpoints, step through line by line, step over functions, and examine variables and the call stack and such
<zzing>	That might be enough, although it cannot seem to derive my gopath
<zzing>	It has a reload button, but I don't know where it is trying to load it from
<Vendan>	View -> Manage GOPATH
<Vendan>	I just put my gopath into the custom
<Vendan>	may not be the "right" way, but it works fine
<zzing>	It also cannot find godoc, when it is installed
<zzing>	buildandrun just says Error: process failed to start.
<Vendan>	that's odd, it worked out of the box for me
<zzing>	Does this thing ever assume bash?
<mingsheng>	hello all, my friend has a question that i thought will be useful to be asked here.. "anyone knows how to output 1 if x != 0 and 0 if x == 0 without using compare statements?"
<zzing>	I don't use bash.
<Vendan>	I'm running on windows, so no bash either :)
<skelterjohn>	mingsheng: [[ "$x" == 0 ]] && 0 || 1
<_jesse_>	I think mingsheng meant in Go
<skelterjohn>	doh, saw the surrounding comments mentioning bash
<_jesse_>	hehe, I thought so
<skelterjohn>	mingsheng: "without using compare statements" is a weird constraint, and i don't believe that it's real :)
<_jesse_>	yeah, the only think I can think of is as a thought exercise, but I'm having trouble coming up with a solution
<mingsheng>	yeah. i'm not so sure what's the purpose but he didn't want anything to do with comparators like == !=.. i think he's looking for bitwise logic
<mingsheng>	i have no answer so i thought id ask here hahaha
<mingsheng>	in my opinion there might be no answer though but i thought i'd try
<skelterjohn>	it's too artificial
<checkerrors>	skelterjohn: https://github.com/skelterjohn/wgo/blob/master/copy.go#L62 isn't this an error?
<skelterjohn>	i'm sure you could do something with arithmetic
<checkerrors>	you're closing fin and fout twice
<skelterjohn>	checkerrors: i was assuming that re-closing wouldn't be harmful
<skelterjohn>	and i still wanted to close fout if the fin close failed for some reason
<skelterjohn>	and i also want the fin close's error to return, if possible
<checkerrors>	closing a file twice, results in an error for me
<skelterjohn>	which wouldn't happen (without doing obnoxious stuff) if i only relied on the defer
<skelterjohn>	i'm sure the second call will result in an error, but that error doesn't get returned
<skelterjohn>	since it's part of the deferred call
*	generic is now known as shanse
<checkerrors>	isn't it cleaner to wrap the close in a func along with the defer
<skelterjohn>	so that code is only a problem if a second close has a bad side effect
<mingsheng>	skelterjohn: alright. thanks for trying!
<skelterjohn>	checkerrors: the code that would be required to have that error get returned from copyFile is, imo, inelegant
<skelterjohn>	and as long as a second close has no side effects, this is pretty clear
<skelterjohn>	if it does have side effects, then i'll have to fix it
<skelterjohn>	but that seems unlikely
<checkerrors>	so much for DRY
<checkerrors>	but i see what you mean about inelegance
<skelterjohn>	checkerrors: http://play.golang.org/p/TopM6g8OCQ
<skelterjohn>	i also don't care much for DRY :)
<skelterjohn>	i think it's an artificial goal
<checkerrors>	yes, that is exactly what i was recommending
<skelterjohn>	the true goal, for me, is code clarity and simplicity
<checkerrors>	fair enough
<Vendan>	dry, but not so much that you get a sore throat :)
<_jesse_>	that's interesting, I hadn't thought of doing that over ugly idiom of deferring a closure where you check the current value of err to decide what to return
<_jesse_>	*over the
*	Tod-Autojoined is now known as TodPunk
<daved>	If a channel is filled and no one is around to receive it, does it make a sound?
<daved>	alternately;  Does a channel which is never drained cause some sort of overhead that I should be concerned about?
<daved>	http://play.golang.org/p/Pdwfc6FB1y
<chance>	daved: a non-drained channel has a bunch of live objects which arent being GCed
<chance>	so yes
<chance>	there's an impact
<daved>	chance: What if it's scoped to a function and not main?
<chance>	does the channel go out of scope/get closed?
<daved>	The final code snippet here https://blog.golang.org/context has the example which piqued my curiosity.
*	hgl- is now known as hgl
<daved>	very near the bottom
<daved>	chance: also, just googled your name.  Go Ducks.
<chance>	when the function returns the channel goes out of scope, so the channel itself will be freed
<daved>	chance: phew
<chance>	daved: i go to OSU though, beavs :P
<daved>	I saw on your twitter
<daved>	again. Go. Ducks.
<daved>	 : )
*	chance looks at his twitter
<daved>	oops, github
<chance>	does it say im from Oregon?
<chance>	oh, okay makes more sense
<daved>	hah
<chance>	basically that function blocks on the select, waits for one of those cases
<chance>	so the channel gets drained in either case
<chance>	but the channel would also fall out of scope otherwise
<daved>	chance: thanks for the clarity
<chance>	im not 100% sure but i believe as long as the channel ahs no references to it, it'll be collected. the items in it may still be around if they're being used elsewhere/referenced elsewhere
<chance>	so a full chan of 100 items that are all just strings for example, they would all get collected i believe.
<chance>	you can still get leaks from not draining channels in some cases though..i cant recall how though.
<chance>	actually nvm on that, it was something specific to a project i worked on..
<henesy>	is there a number type that can hold more than a float64?
<daved>	henesy: try float∞
<daved>	henesy: I use that for calculating pi
<daved>	henesy: What do you mean "more"?
<henesy>	a larger number
<henesy>	i maxed out float64 at the 1477'th iteration of the fibonacci sequence
<chance>	henesy: look at the math lib
<chance>	i think math/big
<chance>	or some subdir
<chance>	yep, math/big
<chance>	henesy: http://golang.org/pkg/math/big/#pkg-overview
<daved>	henesy: I'm not the most seasoned guy here.  Please let me know - Isn't your need for more precision?  Or both a larger value and more precision?
<chance>	well he's doing fibonacci so i imagine it's just he needs a larger value
<henesy>	^
<henesy>	affirmative
<chance>	henesy: hope the above helps :)
<daved>	I suppose I'm trying to understand the use of a float in the first place, then.
<chance>	daved: floats are used in most uses for math in Go, probably just something he saw, or decided perhaps.
<chance>	ie: most of the math lib uses floats
<daved>	chance: I'm often very far from the math side of programming - coming from a Php web apps background.  I'm damaged goods.
<chance>	heh.
<chance>	i wouldnt say im great at the math sides of things but i can get through most mathy things :D
<yocoda>	Hello, I was reading https://golang.org/src/bytes/reader.go#L13 and noticed that the "current index" is int64 while the "previous index" is only int.  Does anyone know the reason behind this design choice?
<yocoda>	And I just answered my own question
<yocoda>	Disregard that I'm still confused.
<jmoiron>	yocoda: array indices are defined to be int
<jmoiron>	array and slice that is
<jmoiron>	r.i is int64 so you have to use an explicit cast to compare
<jmoiron>	len also returns int
<yocoda>	Is the explicit cast a coding style issue?
<jmoiron>	it is a "this won't compile without this" issue
<KirkMcDonald>	Hmmm.
<KirkMcDonald>	I note line 40.
<yocoda>	That is interesting.  Thanks for helping
<jmoiron>	oh hm, maybe it is
<jmoiron>	in any case on 36 the return type of len is an int
<atomi>	is this legal syntax: $resource$, err := sc.$Resource$s.New(stripe.$Resource$Params)
<jmoiron>	seems like any integer type can be used as an index
<KirkMcDonald>	The question is "Why are i and prevRune different types?"
<cronos>	how can i get reflect.Type of a specific interface?
<jmoiron>	cronos: cast nil
<jmoiron>	KirkMcDonald: yeah, i'm thinking about it.
<cronos>	jmoiron: http://play.golang.org/p/P-N0SkH9ci
<jmoiron>	cronos: http://play.golang.org/p/dEWIgf25mf
<cronos>	jmoiron: oh, clever
<cronos>	ugly tho, but i'll take it
<jmoiron>	that's the only way i know how to do it :\
<jmoiron>	yocoda: the answer to your question might have to do with the definition of io.Seeker and diff between 32bit and 64bit archs
<jmoiron>	a lot of io uses int64
*	cgrieger^away is now known as cgrieger
<Tv`>	file offsets are always 64-bit, even on 32-bit arch
<Tv`>	because you want the ability to have a 5 GB file
<Tv`>	i'd assume Reader.i is int64 just to stay closer to what the api enforces anyway
<Tv`>	prevRune can't point outside the []byte anyway so at that point int is known to be safe
<Tv`>	but you can seek a bytes.Reader to 1<<60 if you want
*	segy_ is now known as segy
*	Thinkofdeath_ is now known as Thinkofdeath
*	[1]dilatedmind is now known as dilatedmind
*	TheRealMue is now known as TheMue
*	mikap is now known as mika
*	dqminh_ is now known as dqminh
*	lyddonb_ is now known as lyddonb
*	FMJaggy_ is now known as FMJaggy
<nomad111>	are there examples of when not to use reflection where it is usually used? e.g. map-to-struct and so on
*	taotetek is now known as Guest70162
<hyphenated>	nomad111: that question is backwards. reflection should be used only if absolutely necessary
<nomad111>	hyphenated: good point.
<hyphenated>	nomad111: if you're storing things in a map, and you want them all to behave the same, even with slightly different types being stored, then define a specific interface, instead of interface{}
<nomad111>	problem i have is that i am trying to build a service with plugable databases. each command in the database API takes a vendor specific options struct. this is a problem when i am trying to put an interface over the db api
<nomad111>	pluggable because i want to use mock dbs and such (integration tests will be available as well)
<nomad111>	now i make my interface methods take options as a map and use reflection to map them onto the underlying option structs.
<taruti>	that sounds horrible
*	Guest44788 is now known as thelionroars
<hyphenated>	nomad111: does your API actually use data in the Options struct, or just pass it around to something else that uses it?
<movedx>	I know, right? TDD? Yuck. Testing methodologies and the thinfs people do these days is just ridiculous.
<nomad111>	hyphenated i do nothing with these options but pass them on to the underlying db driver
<hyphenated>	nomad111: designing everything to satisfy mocking seems backwards, to be honest
<nomad111>	you know what screw it. i am not a very good tester and I am trying to find cheap (read: wrong) ways to test production code
<nomad111>	honestly i just need to try and unit test *all* the code with the help of mocks. there are units that can be tested without external services present and others that can't
<nomad111>	i just dont* need to try...
<hyphenated>	that's the spirit
<hyphenated>	people often try to do integration tests instead of unit tests
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Wed May 13 02:08:11 2015

**** BEGIN LOGGING AT Wed May 13 02:09:50 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	zhaoyemi1g is now known as zhaoyeming
*	OZ__ is now known as AndrewBC
*	nullFxn_ is now known as nullFxn
*	nullFxn is now known as nullfxn
<ome>	After six months of Go I can't believe I actually loved the way node works.
<ome>	Xe: Ping me when you're around.
*	zz_r04r is now known as r04r
<Liam>	Is this a compiler bug? If you try to type assert an interface{}{&AnyType{}} to an interface declared in a different package than struct AnyType, you will get a "missing method" panic. https://play.golang.org/p/tltWoB4pba
*	unga_ is now known as unga
*	ammbot_ is now known as ammbot
*	remirk_ is now known as remirk
<dmac_>	Liam: Not a bug; UnmarshalText is defined on *time.Time
<dmac_>	Liam: https://play.golang.org/p/ipN2lcOf7A
<wwu>	Hi all! Could you suggest some GO projects in github for a golang newbie?
<Liam>	dmac_: thanks. i need to work on my attention to detail
<wwu>	I'd like to read source code and learn how to think in GO way
<lstep>	wmu: https://github.com/syncthing/syncthing is nicely written
<wwu>	lstep: thanks. over 8k stars. i believe it's well written
*	pjoe is now known as pjoe_dj
<akaizen>	how can I compile a daemon / service in golang for Android?
<akaizen>	I want just the static binary, not an APK, it will most likely be launched via init.rc
<akaizen>	CC_FOR_TARGET=$NDK_ROOT/bin/arm-linux-androideabi-gcc GOOS=linux GOARCH=arm GOARM=7 CGO_ENABLED=1 go build main.go
*	rtt_ is now known as rtt
*	pjoe is now known as pjoe_dj
<gbbr>	--- FAIL: TestHardLink (0.00s)
<gbbr>		os_test.go:511: link "hardlinktestto", "hardlinktestfrom" failed: link hardlinktestto hardlinktestfrom: operation not permitted
<gbbr>	Does anyone have a clue while I might be getting this when running ./all.bash on linux ?
<gbbr>	ubuntu to be more specific
<dmitris>	Hi guys, wanted to ask you for a quick test of protobuf installation.  Are you able to do: go get -u github.com/golang/protobuf/proto ?
<dmitris>	I keep getting an error: imports github.com/golang/protobuf/proto/proto3_proto: no buildable Go source files in /Users/dsavints/go/src/github.com/golang/protobuf/proto/proto3_proto
<dmitris>	I wonder if I’m missing something obvious - or is it a bug? ...
<taruti>	Is anyone use html/template in a recursive fashion?
*	kshlm is now known as Guest32331
<pariz->	tittpåfan
*	pariz- is now known as pariz
<xet7>	Is there golang based webserver with SSL support?
<hyphenated>	http://golang.org/pkg/net/http/#Server.ListenAndServeTLS ?
<jkbbwr>	Why does user.Current return a pointer to the user struct
<tyndyll>	What are the potential cause of getting an error back from io.ioutil while reading a http.Response? Trying to be diligent and keeping 100% coverage in tests but can’t come up with a way of hitting it
<Mark_43>	How do I begin with this thing?
<sztanpet>	by reading
<hyphenated>	Mark_43: what thing?
*	drr is now known as bg
*	Guest70162 is now known as taotetek
<Mark_43>	is there any video tutorials available for this??
<hyphenated>	tyndyll: did you mean ReadAll and Response.Body ?
<tyndyll>	hyphenated: Yep - sorry. Caffeine hasn’t kicked in yet
<hyphenated>	should we wait?
*	Heartmender is now known as Guest67556
<Mark_43>	I feel like a noob
<Mark_43>	I'm new to this language
<Mark_43>	this is embarrassing
<hyphenated>	Mark_43: it shouldn't be. but you should learn to read things
<Mark_43>	Yeah but I was finding for some suggestions on where to begin?
<hyphenated>	tour.golang.org
<hyphenated>	or start with youtube videos that teach reading skills
<Mark_43>	well yes but what should I read thats what i'm confused about
<Mark_43>	where to begin
<Integralist>	Hello, golang newbie alert question about to come through! Hoping someone can help...
<Mark_43>	links of some of your preffered tuts might help!
*	gmcabrita is now known as Guest70020
<Mark_43>	hypenated: thanx
<hyphenated>	Integralist: well, step 1 is asking something
*	keepguesing_zzzz is now known as keepguessing
<Integralist>	hyphenated: sorry -> gist'ing as the context was too long for irc https://gist.github.com/Integralist/357e2e554b14890c6c87
<hyphenated>	Integralist: how many of those 40 lines of code do you understand?
<Integralist>	hyphenated: pretty much most of it I think
<Integralist>	hyphenated: here's where you demonstrate how little I probably actually know
<tyndyll>	hyphenated: No slightly more with it. Yes, trying to ReadAll the response.Body
<hyphenated>	Integralist: possibly :-) it seems their API is returning a []*map[something]something
<hyphenated>	which is a ridiculous type
<hyphenated>	and I wouldn't give it to an enemy. but they do it anyway
<hyphenated>	so to do useful things with it, you probably need to range over the *v inside your current range loop
<hyphenated>	Integralist: something like this in your main() http://play.golang.org/p/DI_bfHRNhx
<Integralist>	hyphenated: thanks, that gave me data back that looks like `&{[] <nil> [] [] <nil> 0xc2080c9010 [] <nil> <nil> [] {false}}` but I'm not sure what that data structure actually is? It seems like it's their AttributeValue struct type
<Integralist>	hyphenated: http://godoc.org/github.com/awslabs/aws-sdk-go/service/dynamodb#AttributeValue
<Integralist>	hyphenated: it looks... well, mental to me
<Integralist>	hyphenated: not sure how you reference the data inside that struct though? It looks like you can't access data via indexes
<Integralist>	e.g. v[0]
<hyphenated>	Integralist: it's boggling
<hyphenated>	almost like they're afraid of real data
<gerep>	Good morning people. Does anyone here use the Taipei project? I have some doubts
<hyphenated>	tyndyll: where does the "response" come from? if you want it to error out, you need to control the response.Body your function gets, and make that thing return an error
<hyphenated>	gerep: never heard of it..
<gerep>	hyphenated: no problem =)
<tyndyll>	The response is obtained via http.Get.
<yh>	I've a function with signature:  func foo() (name string) -- in it is an operation where I'm doing: name = somethingThatReturnsArrayOfBytesAndErr -- this fails because of the different type.
<yh>	However, name is a pretty sensible name there
<yh>	What should be done with that clash, revert to hungarian notation ?
<pmezard>	put the somethingXXX function returned values in local variable and convert the result to string while assigning to name?
<yh>	By hungarian notation, I mean:  use nameBytes = somethingThatReturnsArrayOfBytesAndErr    and then  return string(nameBytes)
<pmezard>	maybe I do not understand your problem
<pmezard>	or just: n, err := somethingXXX
<pmezard>	depends what is in the function
<yh>	pmezard: it returns an err, so I cannot simply string() it at assign time
<yh>	Multiple variables being used in a single context.
<skelterjohn>	yh: you have to do x, y := foo(); string(x)
<skelterjohn>	you can't do it in one statement
<TomNomNom>	Hi. My github username is 'TomNomNom'; is there consensus on whether I should use github.com/TomNomNom/<package> (i.e. camel cased username) or github.com/tomnomnom/<package> (i.e. lowercased) for my go packages? Both work.
<skelterjohn>	TomNomNom: lower case
<SteamWells>	hi guys, does anyone have any idea if it's possible to set windows ntfs file permissions on files with go?
<TomNomNom>	skelterjohn: thanks.
<SteamWells>	im looking at the syscall pkg but I cannot spot anything thats gonna work I think, the windows api calls provided dont include getting/setting ntfs perms
<TomNomNom>	So, next question: is there a way to make GoDoc use lower case? E.g. https://godoc.org/github.com/tomnomnom/xtermcolor redirects to https://godoc.org/github.com/TomNomNom/xtermcolor ?
<pmezard>	SteamWells: how would you do it not in Go?
<SteamWells>	windows powershell on the windows side
<SteamWells>	but its slow as hell
<pmezard>	are you sure win32 api does not let you do that?
<SteamWells>	we have millions of files on old POSIX permed NAS here
<pmezard>	something around SetFileSecurity?
<SteamWells>	need to copy them over or map them out, and then re-qrite the perms on ntfs on the other side
<SteamWells>	https://golang.org/src/syscall/syscall_windows.go?s=555:620#L12
<SteamWells>	i can't see that as one of the provided api calls
<yh>	skelterjohn: I think you missed the first part of my question - I understand you can't do that
<skelterjohn>	yh: make your question more clear
<taruti>	SteamWells: you can use one of the winapi libraries *or* wrap it by yourself.
<skelterjohn>	maybe with a play.golang.org snippet
<jkbbwr>	skelterjohn: hey!
<skelterjohn>	hello
<pmezard>	SteamWells: see https://github.com/AllenDang/w32 for instance, maybe it is in there, at least it gives you an example
<SteamWells>	pmezard: thanks
<skelterjohn>	yh: the reason you can't do "name = somethingThatReturnsArrayOfBytesAndErr" is not (only) because of the type mismatch
<skelterjohn>	yh: the primary reason you can't do that is because "name" is one thing, and "somethingThatReturnsArrayOfBytesAndErr" is two things.
<skelterjohn>	so, if you are aware of that and how to do it, you muddied your question by including a lot of extra red herrings :)
<yh>	skelterjohn: I should have used a real example; name, _ = somethingThatReturnsArrayOfBytesAndErr, then
<yh>	The question was conceptual and about best practice rather than technical specifics
<skelterjohn>	i couldn't suggest a variable name without knowing more about your code
<skelterjohn>	but don't try too hard to make names. afterall, it's a function-local variable
<yh>	skelterjohn: it's a broad problem, so I'm trying to find a broad answer - it shouldn't be domain-specific
<yh>	So it's not just a function-local problem
<skelterjohn>	then it has no answer :)
<yh>	skelterjohn: heh, maybe not according to the compiler, but perhaps the community (best practices)
<pmezard>	short names
<skelterjohn>	according to me it has no answer
<skelterjohn>	just do whatever makes your code the most clear
<gra1>	what is the equivalant of *ptr++ in go ?
<pmezard>	none, there is no pointer arithmetic
<pmezard>	(fortunately)
*	cylon512 agreed
<gra1>	pmezard how to move the pointer?
<lemmi>	gra1: you don't, and if you have a slice or array, use that
<jacobat>	How do I concatenate / interpolate with go templates? I've got a function that takes a string argument and I can do {{ fun "foo" }} but how do I do something like {{ fun "foo" {{ .Name }} }} ?
<v0idcat>	jacobat: just {{ fun "foo" .Name }} works
<h9>	hey, I've just experienced a strange issue with list.List
<jacobat>	v0idcat: It says "wrong number of args" then
<h9>	basically, I have a struct, which represents a list and a bunch of methods
<v0idcat>	jacobat: because your function doesn't accept 2 args then.
<h9>	log.Println(tpl.stream.Len())
<h9>	tpl.stream.PushBack("")
<h9>	log.Println(tpl.stream.Len())
<h9>	this prints 0 and then, 1
<h9>	but each time I call this method on this particular struct instance
<h9>	it keeps on printing 0 and 1
<v0idcat>	jacobat: what's the signature of your func fun?
<h9>	which is strange, cos length must expand, mustn't it?
<jacobat>	v0idcat: Exactly - I want to concatenate "foo" with the value of .Name
<v0idcat>	ah, concatenate
<jacobat>	v0idcat: The func takes a single string
*	v0idcat only kept the interpolate bit
<v0idcat>	jacobat: one way is {{ fun "foo"}}{{ .Name }}
<jacobat>	So if Name = 'bar' it would call fun with "foobar"?
<v0idcat>	ah, no. it would be fun("foo")+"bar"
<jacobat>	:)
<jacobat>	Is there not a concat function or something?
<jacobat>	I don't know where to look, my google fu is failing me
<v0idcat>	jacobat: {{ fun (printf "foo%s" .Name )}}
<v0idcat>	but there are other ways
<v0idcat>	jacobat: http://golang.org/pkg/text/template/#hdr-Examples has other ways documented here
<jacobat>	v0idcat: Thanks!
<edayo>	Hi guys & gals! how do I get my packages to rebuild when i "go run file.go"
<pmezard>	don't go run, go build or go install
<v0idcat>	edayo: don't use go run. use go install. and then pass -a
<edayo>	ok, ima try that out. thanks
<edayo>	I tried that and id get "go install: no install location for .go files listed on command line (GOBIN not set)"
<sunnypsyop>	edayo: "go run *.go" in a package should rebuild all dependencies of the package and run it, at least it's how it works for me
<edayo>	thanks sunnypsyop ill try that too
<pmezard>	edayo: go build/install take packages as arguments
<pmezard>	edayo: go help packages
<edayo>	pmezard, im not trying to build a package im working on 'file.go' which has package dependencies
<edayo>	ive been running go run file.go but i just noticed that i get bugs because my packages arent rebuilt
<edayo>	go test doesnt give that problem
<pmezard>	edayo: ok, whatever you want. Just go run is a toy you should avoid, and will fail you eventually
<pmezard>	because go test works like go build
<edayo>	pmezard, may i ask what your workflow is when writing go apps? do you always build then run the executable a-la C++ ?
<pmezard>	yes, go install && bin/theapp, or something similar
<edayo>	cause if thats the case i guess ive been spoiled by python
<pmezard>	yes
<edayo>	oh well, if thats the way it works in golang, thats the way ill do it
<sunnypsyop>	edayo: do you have more than one .go file where file.go is?
<hfaafb>	LiteIDE provides a [kill last process] -> Build -> Execute
<edayo>	yes sunnypsyop thats why i cant do go run *.go
<sunnypsyop>	edayo: why? there's only one main function in the main package
<edayo>	hfaafb, ive tried LiteIDE i cant just wrap my head around it, kinda like how i react to eclipse
<sunnypsyop>	edayo: I also had this problem when trying to run one file, I have to go run on all of them in the main package
<hfaafb>	well whatever you use, there are programs that listen to file changes and rebuilds->runs
<hfaafb>	which provides a kind of python development flow
<edayo>	sunnypsyop, im a python immigrant, i guess im carrying over my py workflow
<edayo>	hfaafb, would you mind suggesting a couple for me to try?
<sunnypsyop>	edayo: I'm too, and what I described works in case of my app with many subpackages
<pmezard>	I have done python too, but really is "go install && theapp" so inconvenient you need to find another solution?
<edayo>	ok, whats happening now is im working on an ap, but im trying to refactor out bits into a separate module, right now i just copied out the bits i want into a new file and run it with "go run" until i noted the package issue
<edayo>	pmezard, not really, its a really a question of habits
<gerep>	Does anyone here use the Taipei project? I have some doubts
<pmezard>	edayo: (and in practice I really rebuild all my workspace all the time, more like go install pmezard/... && something)
<edayo>	i guess the real issue is that i havent quite wraped my head around the go concept of packages
<edayo>	im still thinking in terms of python modules and equating them with go packages
<pmezard>	well, equate them to python packages :-)
<pmezard>	except there is no implicit hierarchy
<edayo>	ah but thers the rub, i can "python package/sub.py
<edayo>	here i cant, no worries, ill adjust
<edayo>	thanks guys!
*	ChanServ gives voice to iant
<qknight>	oh. my error was so trivial: context -> i was using var urlstr string; then doc.Find("a").EachWithBreak(func(i int, s* goquery.Selection) bool {
<qknight>	inside that i wrote urlstr, err :=  s.Attr("href")
<qknight>	and then i always wondered when i was outside of that scope why the variable urlstr wasn't assigned at all
<qknight>	and why the compiler complains that i had not used urlstr
<qknight>	the problem was simply the := which should have been a = instead
<qknight>	that is very much like in c++ where one writes:   int MyClass::foo()   vs int foo() and then the compiler complains that a function isn't implemented (when doing virtual functions) or you can't call the function at all
*	Freman blinks "./inputs_test.go:45: invalid field name "ID" in struct initializer" uh... but Input is struct with {ID}
<Freman>	or is it upset that I've put quotes around it?
<Freman>	yeh ok that was the problem (I did that because I was having a different issue and didn't read it properly
<gra1>	the DB.Query take as argument string , and interface…, I want to create this interface it should be dynamic , I will loop on a map that have the column_name in the database and its value , I want to have something like this : DB.Query(querystring, nil, value, nil, nil), any idea?
*	Guest67556 is now known as Quora
<yh>	Is it forbidden to use the same name for a variable as an existing method?
<yh>	Is there a particular practice when both (sensibly) clash ?
<hfaafb>	there's no name collision between vars and method names
<hfaafb>	there is name collision between struct fields and method names
<hfaafb>	of the same  type
<Xetius>	when I pull a value out of a map[string] interface{}, instead of the int I was expecting, I get a float64.  Is there a nice way to convert this ”requestLimit, ok := token.Claims["request_limit”]” without using a 2 liner
<Xetius>	or is there a nice go way to handle this
<qknight>	does goquery also execute the javascript from the webpage?
<qknight>	https://github.com/PuerkitoBio/goquery/wiki/Tips-and-tricks <- ah, goquery is great to handle normal html pages, but when most of the page is build dynamically using javascript, there's not much it can do. There are various options when faced with this problem
*	dan2k3k4k5 is now known as dan2k3k4
<gra1>	what is the best type in go to hold data as “int, string, nil, ….”  (and it should be dynamic, I dont know what it could be the order or the number of the variables) ?
<jkbbwr>	gra1: map or slice of interface{} ?
<gra1>	jkbbwr do you have any example ?
<jkbbwr>	[]interface{} or map[string]interface{} ?
<Xetius>	using the jwt-go lib, it contains Claims map[string]interface{}
<Xetius>	when I add an int to this it parses out to a float64
<gra1>	jkbbwr Ihanks I will try ..
<Freman>	http://play.golang.org/p/dXk4W66sv7 - good first ever test script?
<Freman>	s/script/... whatever we call it/
<jkbbwr>	Xetius: Are you doing a type assertion on it?
<jkbbwr>	Xetius: https://play.golang.org/p/jiUqEKtKaa
<Xetius>	when I try to do type assertion, it fails.
<jkbbwr>	Xetius: minimal example?
<jkbbwr>	Xetius: OOHH
<jkbbwr>	Json only does floats thats why
<jkbbwr>	Well numeric ieee type
<Xetius>	ah, that would explain it.  Yes, it gets marshalled to and from json
<Xetius>	ok, so other than doing a 2 line retrieve then cast, I presume there is no way to convert this neatly on one line
<jkbbwr>	Xetius: https://play.golang.org/p/3ctHo9lTpC
<Xetius>	thanks jkbbwr.  was hoping to avoid the assignment to a float first, but couldn’t work out a way
<Xetius>	np.  thanks for the help though.  At least I know why now
<h9>	log.Println(tpl.stream.Len())
<h9>	tpl.stream.PushBack("")
<h9>	log.Println(tpl.stream.Len())
<h9>	this prints 0 and then, 1
<h9>	but each time I call this method on this particular struct instance
<h9>	it keeps on printing 0 and 1
<h9>	which is strange, cos length must expand, mustn't it?
*	cgrieger is now known as cgrieger^away
*	keepguessing is now known as keepguesing_zzzz
<v0idcat>	h9: you must be working on a copy
*	furiousD- is now known as furiousDingo
<h9>	v0idcat: just double-checked: `tpl` address is the same in the parent function
*	veonik_ is now known as veonik
<dorotaq>	hey - did any of you guys try to cross compile code using gopacket/pcap to windows (host system is linux)?
<skelterjohn>	dorotaq: what is gopacket/pcap?
<dorotaq>	skelterjohn: https://github.com/google/gopacket/tree/master/pcap
<dorotaq>	skelterjohn: http://godoc.org/code.google.com/p/gopacket
<skelterjohn>	dorotaq: does it use cgo, or any shared libaries?
<dorotaq>	skelterjohn: I think it does use cgo, not sure how about shared libraries - perhaps winpcap? I'm pretty new to golang
<dorotaq>	skelterjohn: this is in the source code of pcap from gopacket:
<dorotaq>	#cgo windows CFLAGS: -I C:/WpdPack/Include
<dorotaq>	#cgo windows,386 LDFLAGS: -L C:/WpdPack/Lib -lwpcap
<dorotaq>	so guess it uses shared libs
<skelterjohn>	then it will be difficult to cross compile
<dorotaq>	does it mean I can't cross compile and I should do it on windows?
<skelterjohn>	short answer is yes
<skelterjohn>	long answer is it's possible to do, but i have no idea how to do it
<skelterjohn>	i guess that's still pretty short :)
<dorotaq>	ok - thx.
<dorotaq>	:)
<dorotaq>	at least this gets me started, perhaps I will just set env on windows and see if that works
*	ChanServ gives voice to iant
<saffro>	I dont suppose anyone has any experience with httprouter and middleware
<saffro>	I'm trying to write a middleware chainer but im stuck on running the actual middleware because of func type conflicts
<sunnypsyop>	saffro: you'll likely have to do the HandlerFunc-like trick -- define ServeHTTP on a custom function type
<saffro>	sunnypsyop: ahh.. I haven't seen that, how does that work?
<carbocation>	saffro: have you looked at Alice or Interpose? They're basically middleware chainers.
<saffro>	carbocation: I've looked at them, but I haven't figured out how handlerfunc plays into the whole thing
*	dabbad00_ is now known as dabbad00
<saffro>	carbocation: Alice doesn't have anything like ServeHTTP in it, either... will look at Interpose
<carbocation>	saffro: Both basically assume that you have a set of http.Handler-compliant functions that you want to apply in order.
<saffro>	carbocation: right, that much I get.. problem is httprouter takes httprouter.Handle instead of http.Handler... so I need to somehow convert the latter into the former?
<carbocation>	saffro: are you using the httprouter.Params in your custom handlers?
<carbocation>	httprouter takes httprouter.Handle via Handle, it takes http.Handler via Handler, and it takes http.HandlerFunc via HandlerFunc
<saffro>	carbocation: well I have them in my handler functions that I'm trying to pass.. haven't got any custom handlers yet, I don't think?
<carbocation>	Are they in your function definitions but not used, or are they actually used?
<henesy>	in cgo, is it at all possible to use a *[]C.char with C.scanf() ?
<henesy>	getting unexpected type: ...
<saffro>	carbocation: currently not used. If i could get away with moving them into r *http.Request that would make things a whole lot more compatible i assume
<saffro>	no idea if that's even possible though
<saffro>	disclaimer: i've only been using Go for a week
<jacobat>	Does anyone actually enjoy working with text/template? Am I just totally not getting it?
<carbocation>	saffro: will your middleware apply to all endpoints?
<carbocation>	jacobat: I like using html/template
<jacobat>	carbocation: I can't really change the template engine, I'm using a product that has picked it for me :)
<saffro>	carbocation: no, I've been given a task of migrating an existing system, so different routes will need different middlewares...
<carbocation>	jacobat: They're just about the same, but the html one is for html. So, it works OK for me.
<saffro>	carbocation: needless to say I've found myself in deep water...
<carbocation>	If you both need different middleware for different routes, and you plan on using httprouter, then I don't think Alice or Interpose will be helpful to you.
<carbocation>	You'll basically be doing a custom job.
<Tv`>	jacobat: i hope you're not using text/template for generating html, though
<carbocation>	If you wanted to use the same middleware stack for all routes, then Interpose could still be useful (see https://github.com/carbocation/interpose#combined-logging-and-gzipping )
<jacobat>	Tv`: I'm using consul-template for generating haproxy configs
<Tv`>	jacobat: ah ok so not html, all good
<jacobat>	I've got a template like this: https://gist.github.com/jacobat/340f0718768f89a79e40
<carbocation>	But overall, because httprouter doesn't exactly conform to http.Handler, you will end up writing custom functions
<saffro>	carbocation: I think so, yes, I've been trying to rebuild based on stack/alice (interpose is new to me, but looks awesome), but as you can see I'm stuck on running the middleware. http://pastebin.com/3RG6t5vK
<jacobat>	It's utterly nuts
<jacobat>	Please tell me I've totally misunderstood something and can short it down to one third ;)
<hfaafb>	jacobat: use more indentation
<hfaafb>	https://gist.github.com/anonymous/ed1c57d5c4a06ac9eb9f
<hfaafb>	hmm that may not be correct but you get the idea? :p
<jacobat>	hfaafb: That doesn't really change the insane amount of code - also it makes the output unreadable because of all the whitespace
<hfaafb>	what's insane? i don't really understand. subtemplates? try defining some template func helpers?
<carbocation>	jacobat: do you want {{ range $serviceMap := services }}
<andlabs>	can someone link to my tutorial? because I can't opne a web browser iright now
<smw>	andlabs, http://andlabs.lostsig.com/blog/2014/05/26/8/the-go-templates-post
<andlabs>	yes that
<andlabs>	jacobat, hfaafb ^
<Deck`>	Is there internal way to measure http request? Or time.Now time.Since are enough? "Internal" I mean may be http already measures it itself?
<smw>	Deck`, http doesn't do it itself but you can easily profile how long the handlers take by making a wrapper.
<smw>	Deck`, or using a load balancer of some sort
<Deck`>	smw, if I put time.Now before client.Do() and time.Since would it be good?
<smw>	oh, didn't realize you were doing client side
<smw>	Deck`, that sounds fair to me. It won't include the read of the body but you may not want that
<gra1>	how the interface support the nil value?
<andlabs>	gra1: can you explain
<andlabs>	I don't understand the question
<gra1>	andlabs I want to create a dynamic interface that could support any type and nil value, and I dont know how to do this?
<_jesse_>	gra1: interface{} ?
<carbocation>	gra1: Why do you want to do this?
<gra1>	carbocation because I am constructing a dynamic call to stored procedure (in multi database) and the call (string, interface…)
<carbocation>	Is there absolutely no structure that you could come up with, such that you have to use interface{} and do runtime type checking every time?
<bws>	hi to all
<gbbr>	Can a Godeps project have dependencies that have their own Godeps? :o oO
<bws>	how can i implement static method for golang struct ?
<bws>	something like
<bws>	Dome.Run() ?
<bws>	where Demo is golang struct
<gbbr>	bws: you can't
<pmezard>	just make a function
<bws>	pmezard, how can i make function like this >
<bws>	?
<pmezard>	RunDome() ?
<hfaafb>	what do you need a static method for
<pmezard>	static methods are functions
<bhenderson>	is there a "better" way of doing this: var tmp = template.Must(template.Must(template.New("top").Parse(top)).New("recordTmp").Parse(recordTmp))
<bws>	pmezard, i want static methods assigned to struct
<pmezard>	well no, you cannot, not java sorry
<andlabs>	[12:08] <carbocation> Is there absolutely no structure that you could come up with, such that you have to use interface{} and do runtime type checking every time?
<andlabs>	just use interface{}
<andlabs>	bws: why
<andlabs>	what do you wnat to do that isn't feasible with a normal function
<Tv`>	Deck`: you might like http://godoc.org/github.com/codahale/lunk/web or https://godoc.org/github.com/codahale/http-handlers
*	ChanServ gives voice to iant
<gbbr>	Do CGO dependencies get included into the compiled binary?
<Quora>	the .c files do
<gbbr>	I have a dependency that imports Oniguruma (a C library that does Ruby style regexp) like this: // #cgo pkg-config: oniguruma
<gbbr>	And I'm wondering if if that affects deploying my program to a remote machine, and if that remote machine will have to also have Oniguruma installed
<bhenderson>	how do you do this in template: {{with $x := $p + .Name}}
<bhenderson>	where $p and .Name are both strings
<Tv`>	gbbr: if the C links against shared libraries, the binary will need those shared libraries
<gbbr>	Is there any way that you know of to include it into the binary Tv`?
<Tv`>	gbbr: don't use shared libraries
<Tv`>	shared libraries are by definition not part of the binary
<gbbr>	so no
<Tv`>	bhenderson: well there's e.g. printf
<bhenderson>	Tv`: how do you save the output of printf to a variable?
<Tv`>	bhenderson: just like any other value
<Tv`>	bhenderson: http://golang.org/pkg/text/template/ has examples
<Tv`>	oh actually it doesn't, of that exact thing
<Tv`>	but it does show the parens
<bhenderson>	Tv`: ah, missed parens
<bhenderson>	thanks
<Tv`>	i'm wary of giving out actual answers because i don't use html/template that much, i'm likely to get the details wrong the first time ;)
<Absorbent>	hi
<Absorbent>	can I deploy a compiled version of my app to heroku?
<gra1>	carbocation: do you have any example about hte interface with run time check?
<gra1>	 
<Mo0O>	hi there, when I try to install github.com/mailgun/godebug using `go get` I have this error: /usr/lib/go/pkg/tool/linux_amd64/6l: corrupt input
<Mo0O>	do you know how to fix that?
<Tv`>	Mo0O: you might have a bad hard drive, there.. removing everything under $GOPATH/pkg is safe and might force it to recreate that file
<Tv`>	or RAM or CPU etc
<ahmetalpbalkan>	so folks, when I actually use httptest.Server() I'm still hitting the OS' tcp stack right?
<ahmetalpbalkan>	i.e. when I'm testing the same server in the same process.
<Mo0O>	Tv`: I've uninstall go, removed /usr/lib/go, and re-install go, but the probleme still present
<Tv`>	ahmetalpbalkan: yes, httptest uses a TCP listening socket
<Tv`>	Mo0O: yet you didn't do the thing i suggested
<ahmetalpbalkan>	Tv`: thanks
<Mo0O>	ah, ok, I'm going to remove $GOPATH/pkg
<Mo0O>	Tv`: great! that works like a charm :)
<Tv`>	for values of "work" that may imply your computer is toast
<Mo0O>	Tv`: I guess the problem is related to another, I've removed -by mistake- and rebuild my /usr recently, I guess it's related
<FrostCandy>	I need to figure out a good way to manipulate bits in a byte. How can I put the 1's and 0's in to a slice, then after doing some if statements and changeing the 1's and 0's, change the slice back in to a byte?
<deniska>	why not some good ol' bitwise arithmetics?
<FrostCandy>	deniska: so that would let me do if bit 4 is a 1 and bit 5 is a 1 then do x ?
<smw>	FrostCandy, you could make that yourself if you want. Or you can use big.Int
<smw>	FrostCandy, or do bitwise arithmetic
<ahmetalpbalkan>	hey folks is time.RFC3339 broken? http://play.golang.org/p/NNLWXW3q3e
<FrostCandy>	smw: The only way i know to make it myself would be to say if byte = 1 then slice = "0001" and so on. how does big.Int help me?
<bartoszz>	hey guys, golang n00b here - i've been tasked with automating builds for go (we use bamboo). looking for pointers for recommended package management and best practices for doing this,
<pnsrc>	hi,
<deniska>	FrostCandy: if a & 0x18 {
*	h9 is now known as supermassiveblac
*	supermassiveblac is now known as supamassblackhol
*	supamassblackhol is now known as supamassblakhole
<deniska>	(As I recall go doesn't have binary literals, would be handy)
<deniska>	but may always use (1 << 4 | 1 << 5) for clarity
<FrostCandy>	deniska: ok im trying to follow if a & 0x18 -- 18 being a hex value 00011000 , would A have to be 00011000?
<FrostCandy>	deniska: in other words 10011000 wouldn't match right?
<deniska>	FrostCandy: it would
<harikb>	any value ???11???
<FrostCandy>	deniska: oh ok , i'll do some bitwise reserach then :)
<harikb>	but I think the if needs some extra syntax to make it a bool right
<deniska>	I don't remember, I rarely have an urge to put non boolean things in `if`s… but throw != 0 if it doesn't work as it =)
<FrostCandy>	deniska: would printf("%b", byte) help me convert it to a slice?
<deniska>	FrostCandy: why do you need a bitfield in the first place?
<FrostCandy>	deniska: If i remember it will print out 1010101010 or whatever.  I'm not sure how to get it back to binary though
<FrostCandy>	deniska: for size purposes, limited storage space and want to do a lot of operations
<harikb>	depending on how you count bits (at least to match the 0x18 example, it would be << 3 | << 4  , not 4 and 5 afaik)
<FrostCandy>	<<3 | << 4 - does that assign bits 3 and 4 to be 1 in the byte? I'll have to look up the shift opperation with that | symbol
<harikb>	deniska: you are keeping the value as an int , we didn't convert in to a "string representation" or a slice of integers. unless you want to do something specific - which is why deniska asked the question
<harikb>	| is or
<harikb>	bitwise or
<FrostCandy>	ok
<harikb>	these operators are standard in many other languages (not very specific to Go), so you should learn before you write complicated code
<FrostCandy>	harikb: ok thanks. I never dealt with bitwize before. || is the or I'm used to.
<FrostCandy>	harikb: looks like I wont be able to really avoid it though now without setting a map from 0 - 255 and just strait up assinging string values then back again.
<FrostCandy>	harikb: bitwize is probably faster though
<harikb>	if you state your original problem , somebody might help you with code
<FrostCandy>	harikb: I read in a byte, 00001111 each bit or set of bits represents an opperation. After the operation, that bit or set of bits is then recoreded back to that byte. So, it may start 00001111, then become 11110000 or 00110011 and so on. The code outside of knowing if it's a 1 or 0 is not complicated.
<gra1>	in python I can write (x= value or None ), how I can write this in go
<FrostCandy>	harikb: i know it's going to end up being a bitwise solution though
<smw>	gra1, an if statement
*	jameseb- is now known as jameseb
<nlcpmc>	Hi all.. here's an odd question. I have a type from a package (goji web.C) and I'd like to make a variable pointing to it in a different package, and use it in it's place (like a pointer for a type i guess?) so that I'm not getting vendor-lock-in'd
<nlcpmc>	is that possible, or am I just going to have to import goji/web everywhere
<nlcpmc>	I've tried using "type CTX *web.C" in my main package, and "(c *reef.CTX," in my middleware, but obviously it complains about not being *web.C
<carbocation>	nlcpmc: you could create a type that goji web.C implements
<carbocation>	err, an interface that goji web.C implements
<gra1>	can I call the procedure DB.Query(`CALL get_value(NULL, toto, 34,NULL)`)
<nlcpmc>	carbocation: I'm not great at interfaces, would that just be a type of interface with the same struct as web.C in it?
<hobbs>	if you want to!
*	dabbad00_ is now known as dabbad00
<asdf12z_>	how does one read from a io.Reader without flushing the buffer? kind of like read but leave it in place, like copy the data read
<drockna>	I have some code that works for everyting but darwin so i have a thing_darwin.go and a thing.go but when compiling for darwin I get a conflict. in thing.go i have // +build !darwin
<drockna>	what am i missing
<hobbs>	drockna: make sure there's an empty line after the comment so it doesn't look like godoc
<pmezard>	asdf12z_: you cannot, what you read from an io.Reader is consumed. You have to keep a copy yourself
<drockna>	hobbs: well turns out im a nub. thaks
<hobbs>	adam12: something I've done is this (not sure if there's a more efficient way): make a bytes.Buffer, ioutil.Copy the reader into it, then replace the reader with bytes.NewReader(buf.Bytes())
<hobbs>	which copies all the contents into memory and gives you a seekable reader onto them :)
<asdf12z_>	yea i am thinking of doing that for like a http handler, i want to intercept a response and read the body but not mess up the chain of events
<hobbs>	that's exactly what I did that for
<hobbs>	https://github.com/vimeo/go-hammer/blob/master/hammer/hammer.go#L210-213 (you can ignore 212. And pretend I had error handling.)
<eGO>	I'm trying to listen on 2 different ports in my Go Program. But, If i use go startSocket1() it dosnt seem to even run it. Anybody got an idea as to how i can listen on multiple ports ?
<cespare>	eGO: show code
*	sambengtson is now known as smartsam
<henesy>	should one be able to plug "var e *[50]C.char" into C.scanf() via C.scanf(&e) ? I'm getting a type error
<henesy>	C.scanf("%s", &e)
<mortdeus>	henesy, arrays in C expect to have the address of the first index passed in.
<displease>	have you guys seen instacod.es
<displease>	cause it's p terrible and good
<displease>	http://instacod.es/100239
<henesy>	mortdeus: &e[0] ? I'm not entirely sure what to pursue here.
<hobbs>	I think it might be as ugly as &((*e)[0])
<NCS_One>	hi
<NCS_One>	how should I handle null values from db?
<fatih>	Hi everyone
<mortdeus>	hobbs, right.
<henesy>	hobbs: mortdeus type error still wtih that
<hfaafb>	NCS_One: sql.Null<T>
<hfaafb>	or pointers
<henesy>	*with
<NCS_One>	I'm getting "sql: Scan error on column index 4: converting string "<nil>" to a int: strconv.ParseInt: parsing "<nil>": invalid syntax"
<hfaafb>	http://golang.org/pkg/database/sql/#NullString
<mortdeus>	henesy, it would help if you pasted the error
<henesy>	mortdeus: unexpected type: ...
<henesy>	sent it earlier, forgot to now, apologies
<AmandaC>	NCS_One: you need to use the type that hfaafb linked
<NCS_One>	hfaafb: thanks, going to try it
*	ChanServ gives voice to iant
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Wed May 13 14:56:43 2015

**** BEGIN LOGGING AT Wed May 13 15:01:02 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<Tv`>	s/he/it/they (in case of hivemind)
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed May 13 15:03:14 2015

**** BEGIN LOGGING AT Wed May 13 15:14:46 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<cespare>	andlabs: oh yeah, maybe there are two problems
<cespare>	codingrogue: it is, except for the one exception of the Z0700 thing. Please read the linked docs starting where it says "Replacing the sign in the format with a Z..."
<codingrogue>	cespare: alright, sry
<andlabs>	actually I'm wondreing if quotes confuse package time...
<codingrogue>	hm it seems i'm too stupid for this ... i'm not using json.Unmarshal, i'm using json.NewDecoder ... not sure if this is relevant
<cespare>	andlabs: you have to strip quotes given that you start with a json string literal
<andlabs>	codingrogue: it makes no difference
<andlabs>	show us your code
<codingrogue>	it works -.-
<cespare>	codingrogue: http://play.golang.org/p/LHW-cX4a30
<cespare>	codingrogue: an example of both how you would unmarshal a RFC 3339 timestamp, and one way to unmarshal the format you gave originally
<codingrogue>	cespare: thanks :D .. i like the name you chose for the type *gg*
<finisherr>	How can I organize a project to run tests as a sub-package?
<Tv`>	finisherr: do you just want "package foo_test" as opposed to "package foo" in your *_test.go, or something else?
<codingrogue>	cespare: thank you now i get it
<finisherr>	Tv: Yeah
<Tv`>	finisherr: or are you asking how to run tests in all subpackages? "go test ./..."
<finisherr>	I want to have a dir called foo_tests
<finisherr>	put my tests in there
<finisherr>	and have the package be caleld foo_tests
<finisherr>	and run go test
<Tv`>	finisherr: why?
<Tv`>	you can have tests be in a separate package, without moving the files anywhere; just use "package foo_test"
<finisherr>	Just to organize it so the tests are seperate.
<Tv`>	moving tests further away from the code they test is the opposite of good
<finisherr>	Ah, ok.
<finisherr>	I'll just keep them in the main package then
<hfaafb>	http://imgur.com/kW9Iu9Q received crochet gopher (left) for birthday yesterday
<finisherr>	haha, that's awesome
<mohae>	hfaafb: nice, too bad it isn't a viking gopher ;)
<mohae>	hfaafb: and happy bday
<codingrogue>	Tv`: if i want to do a setup+teardown for each test function i could use MainTest but what if this setup/teardown is specific to each go file in the package?
<Tv`>	codingrogue: func TestFoo(t *testing.T) { x := myFixture(); defer x.close(); foo(x) }
<viking>	mohae: :P
<momomomomo>	Thought you all would get a kick out of this: http://play.golang.org/p/O8A2QhQLka
<codingrogue>	Tv`: i feared that.. so i have to put it in each test, ok
<mohae>	viking: hfaafb had a cool viking gopher, and even cooler viking gopher army, but it looks like that image was taken down
<ghodss>	hello! how do i write -Inf as a value in my code? e.g. checkFloat(-Inf)  it currently gives me an error undefined: Inf
<cespare>	ghodss: math.Inf(-1)
<ghodss>	great, thanks!
*	danielfilho_ is now known as danielfilho
<codingrogue>	interesting.. is it forbidden to name a file foo_bar.go? i have a factory function that is only found when the file is called fooBar.go
<gaganjyot>	where do I get
<gaganjyot>	golang nightly builds?
<gaganjyot>	or where should I clone the code for go from?
<gaganjyot>	github?
<cespare>	gaganjyot: http://golang.org/doc/install/source
<gaganjyot>	thanks cespare  :)
<cespare>	codingrogue: is it literally foo_bar.go?
<cespare>	codingrogue: sure it isn't foo_test.go? :)
<cespare>	or foo_windows.go?
<cespare>	etc
<codingrogue>	cespare: actually it's event_category.go .. but eventCategory.go works
<cespare>	codingrogue: (btw contention is neither underscores nor caps in filenames: eventcategory.go)
<codingrogue>	oh ok
<codingrogue>	still weird :D
<cespare>	codingrogue: some people use underscores (I used to) but they are semantic
<cespare>	codingrogue: works for me
<cespare>	codingrogue: event_category.go
<codingrogue>	lol
<codingrogue>	now that i renamed it to eventcategory.go and back to event_category.go it works
<codingrogue>	dafuq
<codingrogue>	weird things are happening here haha, but meh now it works
<echlebek>	Anyone know of any mutation testing libraries for Go? Similar to http://pitest.org/?
<smw>	echlebek, I am not a fan
<echlebek>	smw: care to elaborate?
<smw>	echlebek, fuzzing input is cool, but I disagree with modifying the code.
<smw>	echlebek, it seems to me it is requiring overspecification of tests
<smw>	echlebek, I have a code base (in python) that would do very well in this test
<smw>	echlebek, it is also nearly impossible to make changes because the tests are so brittle
<echlebek>	smw: well, I was thinking about using it to test against some security code, which shouldn't be particularly flexible
<smw>	echlebek, I fear every change I make to this code base because every change will require 10x work in rewriting tests
<echlebek>	smw: yeah I understand, not a good situation to be in for most code
*	rotcpy_ is now known as rotcpy
<jam1>	two simple questions:
<jam1>	1.) what is the easiest way to check if a given absolute path as string is a existing directory?
<jam1>	2.) I tried to use os.Open(path) with path set to "/Users/jam/.vim/" which leads to "open invalid argument"
<jam1>	what I am missing? thanks
<mattkrea>	os.Stat is probably in the right direction
<muraiki>	yeah, I use os.Stat
<echlebek>	you can also use os.IsNotExist to check an error returned by os.Open
<jam1>	os.Stat(path) ... well I tried also this (should be the same as opening the file and getting file info)
<_jesse_>	jam1: you can't os.Open a directory
<jam1>	_jesse_
<jam1>	interesting so I have to use os.Stat(path) and check using os.IsNotExist(err) ?
<echlebek>	no, you would only do that for a file
<echlebek>	f, err := os.Open("/path/to/file", ...); os.IsNotExist(err)
<echlebek>	If you want to open a file in .vim, just try to open it
<muraiki>	you can use use os.Stat on a directory path. I've used it that way.
<echlebek>	if you want to write files to .vim, just try to write them there
<echlebek>	testing for existence with os.Stat is racy though. Someone could remove the directory between the Stat call and the Open.
<muraiki>	interesting, I hadn't thought of that
<muraiki>	thanks :)
<echlebek>	*nod*
<jam1>	I want to check if /Users/jam/.vim is a direcotry and does exist
<echlebek>	jam1: yes, but why?
<cespare>	jam1: yes but what will you do with that information
<jam1>	in my case the users will be prompted to do something with the directory ... if it is not present he will be asked to do other things
<jam1>	however os.Stat("/Users/jam/.vim") does lead to a error which is not IsNotExist but does say "invalid argument"
<jam1>	didn't you say you use os.Stat this way ?
<echlebek>	invalid argument?
<echlebek>	So it doesn't compile?
<jam1>	it does
<mohae>	jam1: share code
<edrocks>	does closing a channel have any performance benefits or is it just used to signal you wont be sending more stuff?
<cespare>	edrocks: the latter; it's also a convenient broadcast signal
<cespare>	edrocks: an unclosed channel can be collected, if that's what you're wondering
<edrocks>	cespare: Would you close r in doSomething() if I send an error to my error channel? http://play.golang.org/p/NGdRbKmdHf From what you said I don't think I should close it but I'm wondering if you ever used/seen this pattern before
<cespare>	edrocks: I would not close r. Rule of thumb is that if a channel is closed, it should be done by the same goroutine that created it (there are probably exceptions to that)
<cespare>	edrocks: I would probably also put both the string and error in a single result type and only have one channel
<edrocks>	cespare: any reason for just using a single type? In my app the string would really be a decent sized slice of structs if that makes any difference
<cespare>	edrocks: just seems clearer
<cespare>	edrocks: I don't see wny that makes a difference. Presumably the slice would be empty if err != nil
*	programm1 is now known as programmerq
<edrocks>	cespare: it would I was just wondering why. I thought maybe channels were expensive or something
<cespare>	edrocks: also this code as written doesn't makes sense (no need for a goroutine). What's different about your real code?
<hyphenated>	edrocks: even if they are expensive, you should write code that does things sensibly
<hyphenated>	edrocks: your example seems to be considering timing as if that's important. it's not
<edrocks>	cespare: just under the goroutine I do some other work which takes about the same time as what I do in doSomething
<cespare>	edrocks: ok sorry I see.
<edrocks>	I figured it'd be twice as fast if I did them at the same time
<gaganjyot>	team, could you please tell me how can I compile go on linux to compile code for windows and mac machines??
<cespare>	edrocks: heh. Maybe. It depends what you're doing.
<echlebek>	or maybe it makes a pipeline stall and is slower :)
<echlebek>	who knows :) measure
<cespare>	edrocks: i think it's clearer as a single type because then it's more similar to a function call (and you're basically doing a single asynchronous call)
<edrocks>	I really just wanted to play with channels but thats my excuse :)
*	Moter8_ is now known as Moter8
*	jejones_ is now known as jejones
*	wayneseguin is now known as wayneeseguin
*	qwrrty is now known as topaz
*	preilly_ is now known as preilly
<ahmetalpbalkan>	hi folks, is there a way to use testing.B benchmarks with tests that take long time (like 1-2 seconds)? Mine gets executed only once. I want it to be executed certain number of times at least
<ahmetalpbalkan>	no matter how long it takes
*	rho_ is now known as rho
<hyphenated>	ahmetalpbalkan: -benchtime
<mohae>	ahmetalpbalkan: http://golang.org/cmd/go/#hdr-Description_of_testing_flags
<ahmetalpbalkan>	ah thanks!
<ahmetalpbalkan>	totally missed that one
*	akaizen_ is now known as akaizen
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Wed May 13 17:45:36 2015

**** BEGIN LOGGING AT Wed May 13 20:25:59 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Wed May 13 20:26:23 2015

**** BEGIN LOGGING AT Wed May 13 20:26:51 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<joaojeronimo>	hyphenated, the same applies to converting byte arrays to strings and strings to byte arrays all the time right ?
<hyphenated>	kind of. they have different purposes, so you convert when the purpose is changing
<joaojeronimo>	yes I understand that, just wanted to get the notion of what is expensive or not out of the way
<hyphenated>	nothing's expensive until it's in your critical path and comes up in benchmarking
<hyphenated>	sorry, profiling
<echlebek>	I sometimes build strings by appending to byte slices instead of using "+" with strings if I know it's going to be done a lot.
<jmoiron>	bytes.Buffer
<echlebek>	I don't bother measuring because it doesn't really hurt the readability of the code.
<hyphenated>	or fmt.Sprintf, depending on the flow of the code
<echlebek>	yep, fmt.Sprintf if I want to be terse and don't care about efficiency
<Freman>	so... using https://github.com/GeertJohan/go.rice/ - it works, but not quite like I want... I want to try and load a file from disk, if that file isn't there then use the built in, but what's happening is it's checking for a directory on disk and only letting me use the files in the directory (or if I delete the directory I can use the built in files) so if the directory has index2.html but the built in has index1.html I can't acces
<Freman>	s index1.html :(
<Freman>	anyone know of anything that will let me combine a disk & built in file system?
<firevolt>	okay, I'm really struggling here: if I call a function that modifies a slice and pass that slice as an argument, the slice isn't modified outside of the function
<mohae>	firevolt: return the modified slice
<mohae>	I'm assuming your passing by value
<firevolt>	mohae: https://gist.github.com/ninjs/1ef869f429479f63084c
<mohae>	and you aren't returning the modified slice...
<firevolt>	line 27?
<mohae>	oh sorry
<mohae>	firevolt: what do you think line 26 is doing?
<firevolt>	setting the slice queue to be == original.
<firevolt>	It's probably not, though. Original only exists in the scope of that for loop, right?
<mohae>	firevolt: putting that code on the play.golang.org would help in helping you work through that
<mohae>	I'm also not sure why you need to pass the queue into that func.
<mohae>	Or what you are trying to accomplish. What is the difference between original and queue?
<mohae>	from what I can tell, you have a queue of n ints, in order, and you want to remove an element from the queue in your processing. Is this correct?
<firevolt>	They need to be the same initially. Just stored separately so that I can modify queue then compare to original
<mohae>	oic, well you shouldn't do line 26 then
*	daed_ is now known as daed
<mohae>	use copy() instead
<mohae>	and http://blog.golang.org/go-slices-usage-and-internals
<mohae>	firevolt: back to your original question, look at line 9. You modify the passed slices but discard the returned values
<firevolt>	oh. what's the alternative?
<mohae>	firevolt: original, queue = loadBalls(ball_count, original, queue) would fix it
<firevolt>	Oh I didn't know I had to re-assign
<mohae>	firevolt: well, if you are returning something and want to capture its value, you need to provide a variable to recieve it
<firevolt>	Used to ruby and modifying global variables
<mohae>	firevolt: so your original supposition about scope was correct, you were just worried about the wrong scope
<mohae>	http://play.golang.org/p/Y6BBUtXExo
<mohae>	firevolt: that's the whole point of return values
<mohae>	firevolt: alternatively, you could have passed a pointer, but that's not recommended for slices
<firevolt>	okay awesome. Thanks mohae
<mohae>	firevolt: there is one more fix, line 26. If you look at the output the = assigns the slice variable http://play.golang.org/p/Jw1kGMdY-_, which will result in problems when you remove elements from the queue
<firevolt>	mohae: copy(queue, original) seems to do nothing
<mohae>	firevolt: right, http://golang.org/pkg/builtin/#copy
<mohae>	notice it says minimum of len(src) and len(dst)
<mohae>	http://play.golang.org/p/SGZITyjc7w
<mohae>	I removed your passing of the queue slice, added making it with a cap == to the original slice. I also updated your tick() func, because the queue there will have the same problem you originally reported
<mohae>	after tick() your removal of the first element from the slice won't be reflected outside of the tick() func so passing it back handles it
<mohae>	firevolt: does that all make sense?
<firevolt>	mohae: parsing through that, hold please.
<firevolt>	mohae: I can just return original twice and then store it in line 9, right?
<mohae>	firevolt: no, then you will have the problem I pointed out in http://play.golang.org/p/Jw1kGMdY-_, both variables will point to the same slice
<firevolt>	only at the time of assignment, right?
<mohae>	firevolt: notice the output of the fmt.Printf("%p") for original and queue, see that in the modified version they point to different addresses
<firevolt>	oh okay. So if I modify queue later on, it would also modify original?
<Mo0O>	fatih: hi, do you think it's possible to GoTest command print also log|print call? #vim-go
<mohae>	firevolt: a slice is a fat pointer containing a pointer to the backing array, the slice len, and slice cap. When you assign a slice to another var, without doing a copy(), you are just copying that. The slice link I provided describes the data structure
<mohae>	firevolt: right
<mohae>	which is why you want to copy() the slice
<firevolt>	mohae: http://play.golang.org/p/AqC4RM5Gdg so what's happening here?
<hyphenated>	firevolt: you returned original,original and assigned it to original,queue.. so they basically reference the same slice
<firevolt>	hyphenated: until I modify queue, then I have one of each again, right?
<hyphenated>	firevolt: then you append to queue, and because len < cap for that slice, it didn't allocate a new one. it modified queue to put a new value in it
<firevolt>	hyphenated: but the goal here is that I didn't create a new slice until I needed to, which should be faster/cheaper, no?
<hyphenated>	it also modified the same backing array as original, but original's slice has len=x and queue has len=x+1
<firevolt>	hyphenated: Oh!
<firevolt>	hyphenated: I see now. Yeah, that's definitely not what I wanted. I see now.
<hyphenated>	firevolt: you should pretend copies are free. CPUs are very good at copying things
<hyphenated>	firevolt: so you copy things when their purpose changes, instead of trying to be faster/cheaper
<hyphenated>	avoiding it will lead to big surprises
<mohae>	firevolt: I was wrong about my explanation earlier
<mohae>	firevolt: with assignment like you were doing, you can't guarantee that the backing array will remain the same, which leads to the divergence that you are pointing out, which can be suprising if you expected original and queue to remain the same
<mohae>	firevolt: as to why one shouldn't pass back original, original in your code, I can't say.
<mohae>	and hyphenated is right
<mohae>	oh, and that explains why not. d'oh
<mohae>	firevolt: btw, format your code please
<firevolt>	okay. So I'm not passing back original, original, as you can see after line 26. But I'm still getting nothing for queue: https://gist.github.com/ninjs/3c152f49466d2df4ff62
<firevolt>	mohae: I tried `go fmt ballclock.go` but it did nothing, haha
<andlabs>	iirc go fmt is silent
<andlabs>	right?
<mohae>	firevolt: http://play.golang.org/p/rF_GqO61AS, sorry I didn't specify the length
<maruel>	gofmt -w -s ballclock.go
<mohae>	and I was referring to the format button on the playground, but what andlabs and maruel said
<andlabs>	oh
<skelterjohn>	go fmt is silent when it makes no changes
<skelterjohn>	it lists the files that it updates
<andlabs>	ok
<firevolt>	mohae: gotcha. Yeah that did it, thanks a lot, everyone!
<mohae>	firevolt: np, have fun
<Enriquez>	ciao
<Enriquez>	!list
<binaryblade>	anyone willing to give a hand with a file parse question
<qeed>	just ask the question
*	r04r is now known as zz_r04r
<binaryblade>	I am trying to parse a file of ints, basically a table
<binaryblade>	I can use  a scanner to get every line but I can't figure out how to tokenize the line correctly without having the newline hanging around
<binaryblade>	its space delimited in the row
<qeed>	encoding/csv sounds simplest to tokenize it for you
*	fluter_ is now known as fluter
<binaryblade>	csv sounds right but it requires a very specific format using commas as delimiters
<binaryblade>	or so it seems
<qeed>	you can set the delimiter in the csv Reader
<binaryblade>	I am currently at https://golang.org/pkg/encoding/csv/ and I can't see where that is
<qeed>	the Comma field in the Reader struct
<binaryblade>	I should point out that the line length is variable
<qeed>	thats fine also
<hyphenated>	binaryblade: http://play.golang.org/p/L2VWb33N32
<binaryblade>	that looks good
<hyphenated>	I think it won't like arbitrary numbers of fields though
<hyphenated>	oh. FieldsPerRecord = -1 will work around that
<hyphenated>	http://play.golang.org/p/nVehjvcmA-
<hyphenated>	it's a slightly lazy way to solve your problem, I suppose. you might want more strict parsing instead
*	Tod-Autojoined is now known as TodPunk
<binaryblade>	I'm ok with that, it errors correctly
<binaryblade>	What is the termination condition for csv.Read()
<hyphenated>	normally, err == io.EOF is a normal termination
<binaryblade>	I mean if I can pass the output of csv.Read into strings.ParseInt al is god
<binaryblade>	That would make sense, doesn't seem to be specified (maybe it is in encoding)
<hyphenated>	it's not specified, but it's fairly common in Go
<binaryblade>	I can appreciate consistency within an API, but documentation should be explicit
<qeed>	file a bug if you think it needs to be better
<binaryblade>	touche
<hyphenated>	if it were me, I'd probably take encoding/csv as an example, copy it and hack it to the specific purpose
<hyphenated>	ie: get rid of any CSV-specific parts you don't care for, and make it return []int instead of []string
<binaryblade>	I would rather reuse stdlib code
*	generic is now known as shanse
<Furao>	time.Add but no time.Remove ?
<Furao>	or it’s time.Add negative duration?
<dmac>	yep
<hyphenated>	there's time.Sub but it's for a different purpose
<hyphenated>	basically time + duration = time; time - time = duration. that's why there's an Add that returns a Time and a Sub that returns a Duration
<firevolt>	something is super wrong with my code here: http://play.golang.org/p/Ecu6PPYkvY it's not putting anything in the fives_track or hours_track slices.
<darkgray>	Is there a magical fmt format operand that turns 1000f into 1,000.00?
<hyphenated>	darkgray: no
<hyphenated>	firevolt: did you explain what you're actually trying to do? I might have missed it
<darkgray>	Is the ':' in "%f: default width, default precision" at http://golang.org/pkg/fmt/ a typo?
<nomad111>	hey folks, is there an equivalent to ListenAndServeTLS that takes the crt and key as strings/bytes instead of file paths?
<firevolt>	Oh, it's a ball clock simulation. So every 5 ticks, it dumps the 5th "ball" into the fives_track slice, and dumps the rest of the balls in the ones_track back into the queue
<firevolt>	hyand so on
<firevolt>	hyphenated: and so on*
<hyphenated>	darkgray: looks like it
*	badon_ is now known as badon
<darkgray>	Well, they should fix it. It's very upsetting.
<hyphenated>	open an issue and they will
<hyphenated>	firevolt: I'm not sure you understand pass-by-value
<firevolt>	hyphenated: why not?
<firevolt>	hyphenated: I get what you're saying.  I wasn't passing back all of my values completely
<muesli>	i've implemented my own sql type converter to escape string slices into a postgress array
<muesli>	i'm rarely but reproducible seeing the Value() method on it called twice, which causes double escaping of the value
<muesli>	this happens when using db.Exec()
<fivetwentysix>	how would i go about making my mouse click with golang?
<fivetwentysix>	something like mouse.Click(x, y) is what I need
<fivetwentysix>	There's this stupid game I want to beat that involves ridiculous amounts of clicking
<adiabatic>	wacom tablets are great for diablo 3
<dozn>	fivetwentysix, if you're running Linux, use xdotool
<Freman>	ProcessTemplate(maintenance, pair..) - called with ProcessTemplate(pair...) doesn't want to work ./template.go:125: not enough arguments in call to ProcessTemplate
<Freman>	I thought the ... expanded?
<dozn>	Freman, https://golang.org/ref/spec#Passing_arguments_to_..._parameters
<fivetwentysix>	dozn: im on osx
<dozn>	fivetwentysix, it's "sudo port install xdotool" if you have MacPorts.
<dozn>	fivetwentysix, if you aren't using MacPorts, I'm sure you could find a similar application.
<fivetwentysix>	dozn:  thanks ill check it out
<dozn>	No problem =)
<qis>	Hi, is it correct, that I can compile go to C source code instead of compiling and linking a binary?
<dmac>	qis: no
<qis>	dmac: Ok, thanks. So I would have to install and use gcc and link against mingw on windows?
<qis>	(which would not be acceptable since I need VS or clang support)
<dmac>	qis: what are you wanting to do?
<qis>	dmac: I was thinking about writing an Win32 GDI or C++/CLI WinForms frontend for Lime (text editor similar to sublime text currently in development)
<qis>	But I don't want to use gcc at any stage.
<qis>	And the Lime backend is written in golang.
<qis>	Are the things stated in this thread still true? https://groups.google.com/forum/#!topic/golang-nuts/ywGGxTiOOqU
<qis>	That Go windows support is basically horrible.
<qis>	(the thread is from 2011 so I hoped that things have changed=
<dmac>	qis: windows is certainly a first class platform in Go. Other than that I don't know much about windows development, though.
<qis>	dmac: I just tested the native go compiler and it produced a statically linked binary.
<qis>	Which is actually exactly what I wanted.
<dmac>	great :)
<qis>	So yeah, time to start learning Go. Glad that things improved so much.
<dmac>	qis: you probably know to start with the tour? tour.golang.org
<qis>	Yeah, got my example from there.
*	keepguesing_zzzz is now known as keepguessing
<qis>	hmm, named return types are a really great idea. wish I had that in c++
<qis>	About http://tour.golang.org/basics/7 Why is it not possible to assign the returned values of split to a single variable using implicit type deduction with ":="?
<qis>	r := split(17)
<qis>	and then fmt.Println(r) or accessing x and y from r somehow.
<dmac>	qis: Go doesn't have implicit tuples or destructuring
<dmac>	so you just have to assign all returned values individually
*	pkircher_ is now known as pkircher
<rxaxm>	i have aquestion about contributing - are comments on issues a good way to ask questions? what is the canonical way to ask those in the know about a specific issue
<rxaxm>	?
<qis>	dmac: I see, thanks.
<dmac>	rxaxm: do you have a question about a specific open issue on github? or something more general or for which there isn't yet an open issue?
<rxaxm>	dmac: a specific issue
<dmac>	then yeah, the github issue is a fine place to ask I think
<rxaxm>	dmac: thanks!
<eric_lagergren>	any idea why my linux machine is trying to build `file_bsd.go`?
<eric_lagergren>	does it have to be "file_{free,net,open}bsd.go"?
<rogpeppe2>	eric_lagergren: i think it does
<eric_lagergren>	yeah, thnk you're right rogpeppe2
<rogpeppe2>	eric_lagergren: http://golang.org/src/go/build/syslist.go
<eric_lagergren>	Thank you rogpeppe2
<C-Keen>	Hello there!
<C-Keen>	I am currently trying to port the bazil.org/fuse package to OpenBSD. To get the mount information from OpenBSD I need to use a syscall that's not exposed by the syscall package. What's the best way to approach this? Add it to syscall_openbsd.go or some other way?
<Nilium>	C-Keen: And it's not in e.g., sys/x/unix?
<C-Keen>	The syscall in question is getmntinfo
<C-Keen>	Nilium: I could not find any mention of it in my golang source tree
<Nilium>	Might be worth just creating your own package and exposing it.
<C-Keen>	Nilium: alright, since I am a go newbie, what are the docs I should read on the syscall wrapping in go?
<Nilium>	If there are any, I'm not aware of them. Just model it on like sys/x/unix.
<C-Keen>	Nilium: thanks, I will look into that!
*	ayonix_ is now known as ayonix
*	Guest24 is now known as lele
<fellowlinguist>	anyone here know a golang equivalent to celery?
<yh>	Is there a standard error struct to use?
<yh>	Creating the same basic error struct in every application I use seems silly
<dmac>	yh: use errors.New()
<yh>	dmac: thanks!
<pmezard>	or fmt.Errorf
<yh>	pmezard: awesome, I think I prefer that
<dmac>	yh: use that if you need Printf formatting; otherwise, don't
<yh>	dmac: why not?  seems to be more maintainable
<yh>	easier to add in interpolation should I need it - and it doesn't seem any more complicated
<dmac>	yh: because it's unnecessary. fmt.Sprintf is literally errors.New(Sprintf(format, a...))
<dmac>	*fmt.Errorf
<yh>	dmac: ok, thanks
<jkbbwr>	NowFunc().Format("2006-01-02 15:04:05") <- Why is this a thing?
<mousetrap>	Why what?
<yh>	When returning value, err -- and there IS an error, what should value be set to?
<yh>	Is there a standard, like -1 ?
<yh>	(Even if it's to be ignored anyway)
<dmac>	yh: typically, the zero value for the type (there are exceptions)
<yh>	dmac: awesome, that's good to know.  BTW, is there a particular place I should have found that out from?  ("Teach a man to fish" :)
<jkbbwr>	mousetrap: Why some random date in it?
<mousetrap>	It's not random.
<yh>	Seems like a sensible approach but I wouldn't have known except for asking on IRC, which I'm sure isn't the trodden path
<jkbbwr>	mousetrap: What do you mean its not random :4
<jkbbwr>	:s
<mousetrap>	Let me find a link that explains it...
<dmac>	yh: I imagine it's mentioned somewhere in the tour/effective go, but I'm not positive.
<mousetrap>	http://golang.org/pkg/time/
<dmac>	It's a pretty common question for beginners.
<mousetrap>	Look under the constants section.
<mousetrap>	That's the date that's used to format date time data.
<dmac>	yh: Here's an example of an exception, if you're curious: https://golang.org/pkg/bufio/#Reader.ReadBytes
<mousetrap>	Which is this point in time: 01/02 03:04:05PM '06 -0700
<mousetrap>	So long you can remember that time, you can define your date formats more or less easily.
<yh>	dmac: ha, that makes a lot of sense. I see
<mousetrap>	It's counter-intuitive at first, until you get used to it.
<mousetrap>	The format you pasted indicates that the data is expected in the form of YYYY-MM-DD hh:mm::ss
<yh>	So it seems a best practice to use named return values for functions;
<yh>	Is it a best practice to always use the paramless return, and assign to the named return values first ?
<yh>	Trying to ascertain when I should use params for return, and when I shouldn't
<dmac>	yh: https://github.com/golang/go/wiki/CodeReviewComments#named-result-parameters
<dmac>	That whole document is pretty useful for style guidelines.
<yh>	Awesome.  Thank you!
<dmac>	np :)
<yh>	dmac: if I might ask just one more question!  I have a piece of text assigned to a variable as []byte (can't avoid assignment, it comes from a function also returning err).  I need to assign it to string after.
<yh>	If the text is called a "foo", would you use fooBytes and foo as names?
<yh>	I hate the idea of Hungarian Notation (encoding types into names)
<C-Keen>	hm, I get a C int* fd and I need to create a os.File struct with that, how can I do so? os.NewFile expects a uintptr and I don't know whether that really means a pointer to the C fd or some other internal structure
<hyphenated>	yh: I might just name them b and s, if the scope is short enough that long names add no value
<yh>	hyphenated: hmm, short names are new to me :)
<dmac>	yh: I'd probably do somethine like foob, err := getFoo(); // check err; foo := string(foob)
<hyphenated>	yh: https://code.google.com/p/go-wiki/wiki/CodeReviewComments#Variable_Names
<yh>	hyphenated: I know, I read it and winced a little :)
<yh>	feels anti-documentation
<hyphenated>	good. that's what it should feel like
<hyphenated>	the purpose of naming variables is to provide something valuable to the person reading the code
<yh>	Learning Go seems to chiefly about learning (or unlearning) ideology
<hyphenated>	a long descriptive name isn't necessarily valuable, if it's basically just used in two spots
<hyphenated>	especially if both of those spots are a few lines apart
<hyphenated>	and it's even less valuable when re-reading the code
<Vyrus001>	how do i turn a net.conn into a net.TCPconn ?
<Vyrus001>	i did it before but i cant remember how
<hyphenated>	C-Keen: why did you have a int* ?
<hyphenated>	Vyrus001: type-assertion?
<jkbbwr>	I sometimes do wish there was a syntaxic sugar for wrapped functions
<hyphenated>	jkbbwr: for example?
*	keepguessing is now known as keepguesing_zzzz
<Vyrus001>	hyphenated: that sounds like how i did it
<andy_england>	Is there a way to use 'not equal' in switch, for example.. `switch s ! { case "str":` or `switch s  { case ! "str":`?
<jkbbwr>	hyphenated: when chaining http.HandlerFuncs
<jkbbwr>	hyphenated: one second
<hyphenated>	it'd be easier to look at code than paraphrase it. write a snippet that shows what you'd like to write, and what it'd become in terms of actual code
<yh>	I have a function foo that calls bar.  bar returns an err.  I want to return that err from foo, but with added information from foo.
<hyphenated>	andy_england: no. what are you trying to accomplish?
<yh>	i.e. the sum total of the error should communicate both level's errors, e.g. "couldn't find username - endpoint not reachable"
<pmezard>	yh: maybe errgo package
<yh>	What's the proper approach?  I see you're not meant to capitalize errors - should foo return fmt.Errorf("couldn't find username - %s", err) ?  (err being returned from foo)
<yh>	from bar* (sorry!)
<pmezard>	you can do that yes
<jkbbwr>	hyphenated: https://gist.github.com/jkbbwr/4bcc72798998856eeeb3
<yh>	Feels a bit arbitrary, perhaps even off the beaten path
<jkbbwr>	hyphenated: (I know the go way to do it, but would be kinda nice)
<hyphenated>	yh: something like this: http://golang.org/pkg/os/#PathError
<yh>	errgo looks nice, perhaps a little heavyweight for my case
<jkbbwr>	hyphenated: (I also know it will never be added)
<hyphenated>	jkbbwr: you could probably trick 'go generate' into doing something like that.
<hyphenated>	that lets you focus on your meta-problems instead of the real ones ;-)
<jkbbwr>	hyphenated: again I know the right way to do it but thats a cute idea
<andy_england>	I'm checking for a needle in multiple haystacks (different actions on different haystacks). I'll create a function (needle string, haystack ...string) and use if's
<Vyrus001>	hyphenated: not sure how im screwing this up, im trying to do socket.(net.TCPConn) where socket is a net.conn
<Vyrus001>	getting an err tho, "net.TCPconn does not implement net.conn (close method has pointer reciver)"
<hyphenated>	Vyrus001: show the actual line of code defining socket, and trying to type-assert it
<Vyrus001>	hyphenated: socket, err := net.Dial("tcp", hostAndPort); socketFD := getFDBytes(socket.(net.TCPConn))
<Vyrus001>	for reference => func getFDBytes(conn *net.TCPConn) []byte {
<Vyrus001>	hyphenated: was that what you were looking for?
<v0idcat>	Vyrus001: that should be socket.(*net.TCPConn)
<Vyrus001>	v0idcat: thnx!
<eZanmoto>	According to [https://golang.org/doc/code.html#Library], `go install` installs dependencies but when I run it on a very basic project it gives the generic "cannot find package" error for the github package - is this feature only available with specific distributions?
<eZanmoto>	Sorry, that was meant to start with "Hi all,", but anyway...
<Aram>	go install does not fetch dependencies.
<Aram>	go get does.
<eZanmoto>	Thanks Aram, I see now where I misinterpreted.
<Vyrus001>	how do i access a global inside a dll using syscall?
<Vyrus001>	do i just do MustFindProc("GLOBAL")?
<Vyrus001>	o nevermind, what i need is in syscall allready :)
<jkbbwr>	How "expensive" are function calls in go?
<jkbbwr>	(curious)
<maruel>	jkbbwr: create a micro benchmark using http://golang.org/pkg/testing/
<maruel>	jkbbwr: have one loop do simple arithmethic, the other call a function to do the same
<jkbbwr>	maruel: https://gist.github.com/jkbbwr/84522fcfcc87fb8721da
<jkbbwr>	kinda sucky
<jkbbwr>	i wonder if go is being cheeky and inlining he function
<oozyslug>	hi can someone point out why my code doesnt work ?? consider the folder exists     http://play.golang.org/p/IqNqZcn2e-        ofcourse i compiled and ran it in my computer
<oozyslug>	hello can anyone help me ?? the os.Stat() function returns nil and no error even when the folder exists ...pls help   ( http://play.golang.org/p/IqNqZcn2e- )  i compiled and ran it in my computer
<Absorbent>	hello can I deply a compiled version of my web app to heroku
<Absorbent>	?
<mousetrap>	I don't know. Can you?
<yh>	I come from a Ruby background; I tend to extract methods a lot in Ruby.
<yh>	Is that best practice for Go ?  Or does Go prefer larger & less methods?
<hinst>	extract
<oozyslug>	hi can someone point out why my code doesnt work ?? consider the folder exists     http://play.golang.org/p/IqNqZcn2e-        ofcourse i compiled and ran it in my computer
*	zz_r04r is now known as r04r
<simme>	oozyslug: File represents an open file descriptor. according to http://golang.org/pkg/os/#File
<simme>	your argument in os.Stat("/home/shankar/test“) ist no a file descriptor
<v0idcat>	simme: http://golang.org/pkg/os/#Stat
<quiznilo>	hmm... can I switch() on a method signature?
<quiznilo>	I suppose not
<simme>	I think he’s using it on a folder thought, v0idcat
<simme>	-t
<v0idcat>	simme: this changes nothing. Stat() takes a string, and it's the path to a file
<jkbbwr>	Calling a function seems to be a 10x slowdown
*	ptrb_ is now known as ptrb
<v0idcat>	jkbbwr: i'd bet it's the extra copies involved
<jkbbwr>	https://gist.github.com/jkbbwr/84522fcfcc87fb8721da really?
<hfaafb>	microbenchmarks are infamously worthless
<hfaafb>	check the AST if you're really concerned
<hfaafb>	ASM rather
<jkbbwr>	hfaafb: How do I go about doing that
<mousetrap>	Objdump?
<mousetrap>	Go produces a full static binary, from there it can be disassembled.
<jkbbwr>	Reason im so interested is because im wondering how much overhead there is to all these layered wrapping functions
<hfaafb>	http://stackoverflow.com/questions/23789951/easy-to-read-golang-assembly-output
<elico>	What are the options for a global array of regular expressions?
<pmezard>	 a global slice of regular expressions?
<hfaafb>	jkbbwr: your last concern should be the overhead of calling a function
<elico>	pmezard: maybe it's what I need.
<elico>	I will read more about a slice coupole seconds
<hfaafb>	the only reason to explore the cost is curiosity
<dfelix>	I'm using gorilla/mux for routing and I can't figure out how to return a URL based on the resquest URL. it seems like request.URL.Host is blank
<jkbbwr>	hfaafb: I am curious
<jkbbwr>	hfaafb: :P
<hfaafb>	then look at the assembly and see whats going on in a function call
<dfelix>	so my handler function just returns a string response. absolute request URL + string. But none of the things that should provide an absolute URL do
<dfelix>	how do I get the absolute URL on a request for an http handler?
<Nilium>	Did the Request URL not provide it?
<elico>	pmezard: Tried to read and try coupel things but I am unable to understand what is wrong..
<dfelix>	Nilium: it seems not. I tried r.URL.String() r.URL.Host, etc
<dfelix>	I'm not sure how I'm exepected to get it if nothing upstream gives it to me
<elico>	I want to use an array or a slice to store more then one regular expressions and I seem to miss something in the big picture.
<elico>	A test example at: http://play.golang.org/p/IdvZgUrSiP
<Nilium>	What's an absolute URL other than URL.String()?
<dfelix>	URL.String() just returns the relative url
<Nilium>	What's an absolute URL vs. a relative URL? Give an example.
<dfelix>	Nilium: http://api.github.com/gists <- absolute /gists <- relative
<Nilium>	Isn't it easier to just say what you're actually seeing and what you want to see?
<oozyslug>	hi can someone point out why my code doesnt work ?? consider the folder exists . i am getting no output    http://play.golang.org/p/IqNqZcn2e-        ofcourse i compiled and ran it in my computer
<mohae>	dfelix: that means the components of the URL that you are expecting URL.String() to provide are empty.
<mohae>	oozyslug: you're going to have to be more specific, as in what doesn't work, what error are you getting, etc.
<oozyslug>	umm... i am not even getting an error
<oozyslug>	the program runs and ends with no output
<dfelix>	mohae: why are they empty
<dfelix>	mohae: it's an HTTP server, I'm hitting it from a URL
<dfelix>	how do i get that URL
<mohae>	oozyslug: what are you getting? just throwing up code and saying explain why it doesn't work without saying what you problem you are having/what you are expecting won't yield helpful results
<dfelix>	http://paste.ofcode.org/GvShZuJ9aLmSWegD3tFbFQ is what I have
<mohae>	dfelix: I don't know why they are empty as you really haven't provided any info
<dfelix>	mohae: I pasted my snippet. That's literally it. curl http://localhost:8080/ results in no string that contains localhost, 8080 or http
<mohae>	dfelix: well that snippet isn't helpful
<hfaafb>	i don't think go "knows" what domain its sitting in
<dfelix>	mohae: I don't know what to tell you. that's literally it
<hfaafb>	i may be wrong
<hfaafb>	but this snippet i'm looking at has go doing a net.LookupAddr and returning the hostname from the IP provided
<dfelix>	mohae: what is useful information?
<Nilium>	Pretty sure it receives that as part of the request.
<AmandaC>	dfelix: You’ll have to populate r.URL.Host yourself, probably with the “Host” header, but that’s not exactly entirely safe
<maruel>	jkbbwr: do not think in term of relative slow down, think in term on constant overhead
<maruel>	jkbbwr: use a more involved add() function instead to compare
<Nilium>	My lack of coffee this morning is a problem.
<Nilium>	Also my eye hurts.
<oozyslug>	mohae: ok here it goes  i expect the name of the file to be printed out as the output but when i run it (in Archlinux) , i get no output ....it doesnt even throw out the error.......but running it in play.golang.org gave me the error message "stat /home/shankar/test: No such file or directory"
<hfaafb>	http.Request has a Host field? seems to work for me
<oozyslug>	why cant i get an output in linux
<oozyslug>	??
<dfelix>	AmandaC: so what if I don't know the host they're coming in on, which is exactly what i want to return
<dfelix>	ie, they're running locally and hit it locally, i return a local host, if they're running it on server1, i return server1 host
<dfelix>	I mean, i feel like Host is critical information sent in a request
*	kulelu88 is now known as kulelu88_away
<hfaafb>	dfelix: isn't Host a field in http.Request?
<mohae>	oozyslug: try printing out the whole fileinfo struct and see what;s in it
<hfaafb>	I did r.URL.Scheme = "http", r.URL.Host = r.Host, r.URL.String() and it worked fine for me
<AmandaC>	dfelix: it is, just not populated into the r.URL field
<Nilium>	http://i.imgur.com/ZpAYWm6.png ← I can't really reproduce what you're seeing there, dfelix.
<AmandaC>	There are other places in the http.Request you can get it from
<dfelix>	hfaafb: there is, but Its empty when i check it in my handler
<Nilium>	Every part of the request that I'd need to produce an absolute URL is populated
<dfelix>	so either the router isn't setting it or the server isn't setting it
<elico>	OK I am bit lost. I want to create a regexp slice\array on the main function and then pass it to another place in the software.
<elico>	How would I define a regexp type slice\array in the main function?
<mohae>	Nilium: agreed on the lack of coffee
<hfaafb>	elico: there are package scoped vars, but not inter-package scoped vars
<Nilium>	Also, you get to see my snazzy/weird stat counter log thingy
<dfelix>	amandac: in the host on the request?
<hfaafb>	elico: http://play.golang.org/p/irnXIjlGxr this is a package scoped var
<elico>	hfaafb: so what would I do? compile each and every one of them in runtime??
<elico>	hfaafb: I want to "store" the compiled regex(unless it will not make a difference :\ )
<hfaafb>	elico: http://golang.org/pkg/regexp/#MustCompile
<dfelix>	nilium: the string response body should say the host and scheme in it
<AmandaC>	dfelix: it’s in r.Host, as hfaafb said. If it’s not set, then it’s whatever’s making the HTTP Request’s fault, because it has to be populated by the CLIENT sending the request.
<dfelix>	AmandaC: so curl
<elico>	hfaafb: Sorry if I do not understand very fast. let say in another languages I need to precompile the regex and then store them in a varialbe. The must compile is a "testing" level function if I am right.
<hfaafb>	MustCompile allows you to run the function without handling an error, it panics if it can't compile
<hfaafb>	this is useful for package scoped vars
<hfaafb>	it'll only compile once, when the program begins.
<mohae>	elico: no, it's not a "testing" thing
<elico>	mohae: thanks
<mohae>	elico: don't thank me, it's hfaafb great advice that's helping you
<elico>	but I want to store the compiled regexp in an array.
<mohae>	hfaafb: 's
<hfaafb>	var regexes = []*Regexp{regexp.MustCompile("..."), regexp.MustCompile("..."), ...)}
<hfaafb>	something like that?
<mohae>	elico: right, so do what hfaafb said. Personally, I'd question if you really need regexp's, but that's me
<elico>	hfaafb: a sec..
<hfaafb>	sorry extra closing paren there
<hfaafb>	note that i've never used the regexp package so read the docs if it blows up :p
<UberG0Su>	Hi, im plaing with blowfish library https://godoc.org/golang.org/x/crypto/blowfish
<elico>	hehe
<UberG0Su>	bu somehow results that i get is diffrent than one i have got from server
<mohae>	same, there's usually more performant and saner ways to do string processing in Go
*	Guest10514 is now known as yml
<yml>	I can't figure out why go is getting confused by file _arm64.go when I try to compile delve: https://dpaste.de/3Eke
<yml>	I am using go go version `go1.4.2 linux/amd64`
<darkgray>	Why is this on two lines? Easier to read? https://github.com/golang/go/blob/master/src/net/url/url.go#L741
<segfalt>	Hi, I’m pretty new to go, but wondering why Go couldn’t have type inference on complex argument literals like maps.  Here’s what I mean: http://play.golang.org/p/nBGJJDfFSJ.  Is there a technical limitation preventing this from working?
<Integralist>	hello, I'm new to go and am trying to use the aws sdk to copy a group of objects from a bucket to a new location but getting a strange error I'm not sure how to decipher or fix. here is the specific function I'm using https://gist.github.com/Integralist/af744cd410008841a840#file-archiver-go-L181
<Integralist>	The error I'm getting is https://gist.github.com/Integralist/af744cd410008841a840#file-error-go
<LowValueTarget>	Is there a way to get a url.RawQuery without urlencoded values?
<hfaafb>	segfalt: just seems inconsistent and unnecessary to me.
<segfalt>	hfaafb: Yeah?  Seems inline with the benefits of the := operator
<mohae>	Integralist: look at your error output, it shows you that the last line of code executed as L165, which is a panic on the err, which is exactly what happens
<segfalt>	We could require total verbosity, but Go seems to factor it out where non-ambiguous.
<wwu>	I'm getting one error when running `go run main.go`: object is [darwin amd64 go1.4.1 X:precisestack] expected [darwin amd64 go1.4.2 X:precisestack]
<wwu>	how can i fix this?
<Integralist>	mohae: yup, but the actual error that occured I don't understand.
<Integralist>	mohae: as far as I can see the function fails because it got an error rather than HTML. I guess that must mean that it was unable to connect to my S3 bucket maybe? I guess I just expected an error more specific such as "object not found".
<Integralist>	mohae: well actually, the error is it *got* HTML when in fact it expected an Error, which makes less sense to me
<segfalt>	hfaafb: Though, I do have a ruby background, so “inconsistent and unnecesary” runs in my veins.
<mohae>	Integralist: well it is being explicit, you are passing it a type that doesn't match its expectation. It appears that you should be doing some error checking earlier in your code since you are putting an error into something instead of handling it
<jmoiron>	wwu: remove the stuff in your $GOPATH/pkg/
<jmoiron>	it was built using an older compiler
<wwu>	jmoiron: rm -rf $GOPATH/pkg  ?
<jmoiron>	you might want to show a little more care heh
<segfalt>	killing a fly with a flamethrower
<segfalt>	:-)
<mohae>	but flamethrowers are fun!
<wwu>	haha
<mohae>	until you burn your house down >.>
<wwu>	fixed. thanks jmoiron
<jmoiron>	wwu: np
<andy___>	segfalt: for slightly tidier code you can do "type Map map[string]string", not that it answers your question
<segfalt>	andy___: Good point.  I’m actually drafting the same question to the go-nuts mailing list at the moment.  To me, it seems to be in line with the values of the := operator.
<jmoiron>	segfalt: if the function takes interface{} what type should that be?
<segfalt>	jmoiron: Good point.  What happens when a function returns interface{} and you do val := func()?
<jmoiron>	val is of type interface{}
<segfalt>	Oh I didn’t even know that was possible.. hmm.
<segfalt>	I think it would have to be a compile error.
<segfalt>	“cannot infer argument type"
<segfalt>	and that may be a good answer to my question as to why it’s not done.
<segfalt>	:)
<jmoiron>	:= can't fail so yeah it's not the same thing
<segfalt>	right, yeah
<segfalt>	that’s a very good point
<segfalt>	yep, i’m going to drop it — i think you’ve answered my question :D
<edrocks>	can other packages do anything with your package before your packages init() is finished? I have a map which will be read only after init() and I'm wondering if I need a lock or something similar
<edrocks>	never mind
<guyinbananasuit>	does anyone know of a pkg that will give a dev-tools(chrome) like console to my own app
<hfaafb>	huh
<guyinbananasuit>	like a console...a scanf/println/eval loop
<guyinbananasuit>	i guess im looking for a repl ill try that search doh
<andy___>	guyinbananasuit: not 100% clear what you are after, something for debuging
*	michael_imac is now known as michael_mbp
<guyinbananasuit>	no worries, i just want a repl console that runs in its own go routine so i can debug my own app
<andy___>	guyinbananasuit: as go is gcompiled up won't find that, write and reload
<guyinbananasuit>	yea i just realized that a min ago
<guyinbananasuit>	thx
<andy___>	check out go-reload
<Vendan>	guyinbananasuit, why don't you set breakpoints and such?
<hfaafb>	go doesn't really have a great debugger afaik
<guyinbananasuit>	im not using ide :/
<andy___>	I have one screen with postman and go-reload for debuging, just write the errors to the terminal, and reloads everytime you save
<Vendan>	ahh
<guyinbananasuit>	thats nifty
<Vendan>	hfaafb, liteide has a quite good debugger
<Vendan>	set breakpoints, run to line, step through code, introspect into vars quite nicely (except maps)
<guyinbananasuit>	i was gonna write a go ide but backed out before publishing the crowdfunder
<guyinbananasuit>	too much work =x
<guyinbananasuit>	i was rather disappointed with how lighttable turned out, i really want an editor like that for go and js and coffee
<hfaafb>	guyinbananasuit: some languages are more amenable to interactive experiences like that
<hfaafb>	like lisps
<guyinbananasuit>	yea for lua too! :)
<hfaafb>	clojure for lighttable was pretty great
<hfaafb>	build and re-run seems to be fine for me so far, but i don't really consider go a tinkering language
<guyinbananasuit>	idk since i have to now right every for loop by hand i want repl even more :)
<guyinbananasuit>	have u guys seen codeconnect.io  and his new product Alive: https://pbs.twimg.com/tweet_video/CCBjL2CW4AANVZP.mp4
<guyinbananasuit>	was gonna do this for go, too much work! pretty sexy tho
<smartsam>	I bet it makes your pc run slow lol.  VS crawls on my machine as it is
<jmoiron>	i've seen this kind of idea for decades and it's never caught on
<guyinbananasuit>	ya
<daved>	might someone be available to help me with this article?  https://joeshaw.org/net-context-and-http-handler/
<ptrb>	daved: what's to help?
<daved>	I realize I may get some flak for this, but I am working on a function chainer (like alice) which carries a context.Context through middleware.  So far, it's working well.  My problem, now, is that I am stuck trying to wrap standard middleware so that it can be used as is.
<daved>	This is what I'm working on - http://pastebin.com/qfgRq7GD
<ptrb>	daved: sounds like a good approach to me..
<gustaf_>	hey gophers, quick question
<gustaf_>	if I create a net/http.Request
*	gustaf_ is now known as Guest31977
<Guest31977>	and I just read Status
<daved>	My difficulty is in Bridge()
<Guest31977>	should I response.Body.Close() ?
<ptrb>	Guest31977: yes, you need to read it (io.Copy(ioutil.Discard, resp.Body)) and then close it (resp.Body.Close())
<Guest31977>	ptrb: but what happen if I don't read body
<nalum>	is there a way to tell if a bool variable is false or was never assigned a value?
<ptrb>	Guest31977: the connection may remain open
<ptrb>	nalum: those two situations are equivalent, no way to distinguish between them, if you need to, use a *bool
<ptrb>	daved: more specifically?
<fish_>	re
<ptrb>	fish_: long time ;)
<fish_>	ptrb: hi :)
<daved>	ptrb: In use, I am trying to make use of standard middleware "func(http.Handler) http.Handler" and wrap it so that it can be part of the chain where the context passes through, but is not necessarily used.
<fish_>	apparently I dropped out here somehow :)
<ptrb>	daved: consider dropping the struct and using a plain function closure, i.e....
<edrocks>	has anyone used go-redis? I'm currently using redigo but I'm thinking about switching.
<ptrb>	edrocks: the better driver is redigo
<Guest31977>	ptrb: thanks
<fish_>	any know about any documentation about runtime.MemStats beside https://golang.org/pkg/runtime/#MemStats? this one is pretty scarce.. for instance how do HeapAlloc relate to HeapIdle / HeapInuse? I hoped idle + in-use == alloc but that isn't the case
<daved>	ptrb: c := chain.New(n.recover, chain.Bridge(n.testing), n.another) - where n.testing is the standard middleware and n.recover and n.another do have contexts.
<edrocks>	ptrb: I like using it a bit better but it doesn't support sentinel and it's hardly being updated
<ptrb>	edrocks: you probably shouldn't be using sentinel :)
<fish_>	as a start some definition what are counters and what gauges would be useful as well
<edrocks>	ptrb: why not? How else do you handle switching masters?
<ptrb>	daved: then you want the bridge to just pass the context thru right?
<nalum>	ptrb: thanks, to take it a bit further if I have a struct with nested structs and I marshal json into it and the json is missing one of the fields that contains nested structs, is there a way to tell that?
<daved>	ptrb: yes
<ptrb>	edrocks: you probably shouldn't use redis master/slave failover :)
<ptrb>	nalum: use a *bool, it will be nil if the field wasn't present
<ptrb>	daved: okay, that should be straightforward, no?
<nalum>	ptrb: okay thank you
<daved>	ptrb: I'm confused about how to nest it properly
<edrocks>	ptrb: any reasoning? do you use something else? I'm mainly worried that redis is available not that my data is 100% up2date
<ptrb>	daved: step one, I suggest removing your type aliases, I find them generally confusing...
<ptrb>	edrocks: you should handle all that (sharding, failover) in your application
<fish_>	and go metrics considers almost all as gauges which I assume is simply wrong: https://github.com/rcrowley/go-metrics/blob/master/runtime.go#L52
<ptrb>	edrocks: (enter into opinion-zone now)
<ptrb>	fish_: they're gauges; they go up and down...
<ptrb>	daved: one sec, let me whip up a play.golang..
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu May 14 12:17:44 2015

**** BEGIN LOGGING AT Thu May 14 12:22:35 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu May 14 12:24:39 2015

**** BEGIN LOGGING AT Thu May 14 12:30:36 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<daved>	ptrb: If I call n.ServeHTTPContext(), the function works, but it bypasses the standard middleware.
<fish_>	ptrb: I realized this now as well, but I'm very surprised about using gauges for those things.. maybe I miss something but for example 'HeapReleased - bytes released to the OS'
<suprat>	Does anyone who uses Gin or Martini know how I can serve a site and routes at the same time? I have a r.Static("/","./static") and routes defined and I get this error: conflicts with existing wildcard '/*filepath', because it thinks I 'm hiding my routes I guess.
<fish_>	that doesn't even make sense to me as a gauge.. released since when? in the last second?
<ptrb>	I agree that one is a little confusing.
<ptrb>	I'd guess it's in the last GC
<fish_>	well, at least I now know that they are all gauges..
<skelterjohn>	suprat: how does it know which to use?
<skelterjohn>	suprat: your routes simply conflict
<smcquay>	Any good suggestions on getting a user's homedir that works after cross-compiling?
<technoweenie>	hey has anyone used gb?  i’m having troubles getting “gb test” to run
<fish_>	ptrb: but it's still completely unclear how they related to each other. for example I would assume that some gauges are sums of others but documented it's only for Sys
<smcquay>	I've considered using os.Getenv("HOME"), but I don't know how reliable that is.
<suprat>	skelterjohn:I want to specify my gin defined routes as overrides to any of my apps routes, my app is a SPA.
*	Disconnected (Connection reset by peer)
**** ENDING LOGGING AT Thu May 14 12:40:59 2015

**** BEGIN LOGGING AT Thu May 14 12:55:53 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<skelterjohn>	i feel like there's a more complete appdir package somewhere, but i can't find it
<edrocks>	I think I have a link for a nice one
<djx>	hello, how can I compare one interface to see if it is a respective structure or not?
<onorua>	guys, is it okay to use ResponseRecorder for middleware or it's not mean to be used production servers and must be used for testing only?
<quiznilo>	okay... should I use ODF or DjVu?
<hfaafb>	djx: the point of interfaces is that you don't care what "underlying" type it is, isn't it?
<smcquay>	v0idcat: build on darwin, deploy to linux
<hfaafb>	i think you could use type assertion
<djx>	hfaafb: correct, but this is only a workaround until a bug is fixed :-)
<onorua>	quiznilo: ODF gives you possibility to edit your output documents, DjVu doesn't have it functionality AFAIK
<djx>	hfaafb: I was thinking of reflect.Type(interface) == ?
<hfaafb>	djx: possibly relect
<quiznilo>	right, it's DjVu vs. PDF... not ODF
<ptrb>	djx: if x, ok := interfaceVariable.(StructType); ok { /* x is a StructType */ }
*	dabbad00_ is now known as dabbad00
<v0idcat>	smcquay: then you should be fine
<quiznilo>	I just looked it up... I always get my xDF formats mixed up
<smcquay>	v0idcat: thanks.
<djx>	ptrb: hmm tky I think that's good too :-)
<quiznilo>	https://github.com/kpmy/odf love the readme
<skelterjohn>	djx: as a rule of thumb, don't use reflect :)
<djx>	skelterjohn: why? costs too much?
<skelterjohn>	using reflect successfully requires a fairly deep understanding of go's memory model and addressability
<skelterjohn>	no, too hard to do correctly
<onorua>	quiznilo: readme is in russian, but it has english version at the bottom of the page ) and I would go PDF way
<quiznilo>	honestly, it depends on what I was doing
<mohae>	there also seems to be a tendency for people learning Go to reach for reflect when it's not needed
<djx>	skelterjohn: oh okay ;-)
<quiznilo>	in a Go app I wrote way back when, I tested the output of fmt.Printf("%T", t)
<quiznilo>	shamefully ghetto
<onorua>	quiznilo: DjVu is till requires some applications to read, and PDF is built in most of the browsers, if you target more users - I would go PDF
<quiznilo>	of course onorua, thanks
*	momomomomo_ is now known as momomomomo
<NCS_One>	off topic: anyone using angularjs? how do you handle search engines crawlers?
<harikb>	NCS_One: isn't angular mostly client side?
<harikb>	browser side I meant
<NCS_One>	yes
<harikb>	so what would it have anything to do with how search engines crawl your server?
<NCS_One>	?
<hfaafb>	google is good at running JS
<harikb>	I mean you will still exclude certain urls from them if u want them to be excluded
<NCS_One>	harikb: https://prerender.io/js-seo/angularjs-seo-get-your-site-indexed-and-to-the-top-of-the-search-results/
<harikb>	I guess you want to generate search engine friendly data
<harikb>	ok never mind, I don't know
<hfaafb>	"AngularJS renders pages using Javascript, but Google and other search engine crawlers don't execute Javascript."
<hfaafb>	this is false
<hfaafb>	Google definitely does execute Javascript
<skelterjohn>	in fact someone joining my team worked in search infra on just that
<skelterjohn>	knowing what kinds of js are safe to execute, and figuring out how they render
<hfaafb>	http://searchengineland.com/tested-googlebot-crawls-javascript-heres-learned-220157
<harikb>	I am following this pattern in the use of defer lately http://play.golang.org/p/aoRhT_zIRA - this is a good style? overkill ?
<mohae>	harikb: not overkill, it's good to check for errors there
<skelterjohn>	harikb: named return values are frowned upon in general
<skelterjohn>	though i personally disagree, i think they're great
<skelterjohn>	but you have to understand shadowing especially well to use them correctly
<mohae>	skelterjohn: in that situation they aren't discouraged
<harikb>	skelterjohn: that is one thing I was worried about - I like them as well
<harikb>	at least go-errorcheck with my emacs does warn me if I did shadow the err
<skelterjohn>	harikb: this is how i would have written it http://play.golang.org/p/EhG26mYvQf
<harikb>	ah, so a regular return would check for error and an errored-return wouldn't
<hfaafb>	isn't that closing twice
<harikb>	didnt know fp.Close() is idempotent
<mohae>	skelterjohn: sometimes there is other code that can throw an error between a valid open and your return. How would you capture an error on the deferred close that way?
<skelterjohn>	mohae: you wouldn't. but you're already handling the other problem, and just deferring the close in case
<skelterjohn>	so, not right for all situations
<harikb>	mohae:  even if my code, since I only have one return error value, I am ignoring the error from fp.Close if there are other more relevant errors
<skelterjohn>	you might want to log both errors there
<harikb>	even in my code I meant
<mohae>	harikb: right, that's what your error handling in the defer accomplishes, which is why I said it was fine
<skelterjohn>	mohae: my code has the same behavior.
<mohae>	harikb: the way you do it is an accepted pattern and a sitaution where named returns is called for and even recommended iirc
<kyrofa>	Hey all. I'm communicating with a REST API via http.Client.Do(), but on the receiving end http.Request.FormValue() doesn't pull anything out
<mohae>	skelterjohn: ok
<harikb>	right, but skelterjohn 's code looks cleaner / smaller . Except probably I can't get go-error-check to shutup :)
<kyrofa>	I realize there's http.Client.PostForm(), but I can't set user-agent that way
<skelterjohn>	kyrofa: you probably want to read right from the response.Body
<skelterjohn>	rather than using forms
<kyrofa>	skelterjohn, unfortunately I didn't write the receiving end, and can't change it
<kyrofa>	skelterjohn, Any way around that?
<skelterjohn>	kyrofa: i am suggesting that if it is RESTful, then reading the body is likely already what it expects you to do
<Deck`>	Sorry for dumb question. https://dpaste.de/Q1xq this code leads to panic. How can I create a variable to assign some value inside the block and access to it outside?
<skelterjohn>	Deck`: declare the variable before the block
<_jesse_>	Deck`: just use `=` inside the loop
<hfaafb>	Deck`: you're redeclaring with :=
<skelterjohn>	Deck`: oh, use "=" instead of ":="
<_jesse_>	you are redclaring currently
<skelterjohn>	too slow
<hfaafb>	:p
<Deck`>	oops, I couldn't imagine that I would ever ask a such question
<Deck`>	sorry
<hfaafb>	don't apologize, := and = are easy to confuse
<kyrofa>	skelterjohn, I have the receiving code in front of me, using http.Request.FormValue(). I'm writing the sending code
<skelterjohn>	oh.
<kyrofa>	skelterjohn, perhaps not very good REST, but something I need to work with anyway :)
<harikb>	does client.Do still allow you to construct http.Request{} object however you want?
<harikb>	doesn't
<kyrofa>	harikb, good question. I figured it would, but when I write directly to http.Request.Form it doesn't seem to make it across
*	momomomomo_ is now known as momomomomo
<harikb>	HTTP client never uses Form as per the documentation
<kyrofa>	harikb, So what is http.Request.FormValue() reading, exactly?
<harikb>	I meant you can't write to it afaik
<harikb>	if you were writing a server and it got an http.Request, that is how you would read it on the other end
<kyrofa>	harikb, Read what? http.Request.Form?
<kyrofa>	harikb, So are you saying there's no way to do what I want while using http.Client.Do?
<skelterjohn>	on the server side, isn't the http.Request just for you? data goes back to the client via the http.ResponseWriter
<harikb>	he is trying to write a client
<skelterjohn>	got twisted again, sorry
<kyrofa>	skelterjohn, sorry-- I'm confused too ;)
<harikb>	harikb:  I have used http.Client.Do and set the RawQuery and Body myself - but I have never used any handy function to create the URL-encoding - did it myself
<harikb>	sorry I meant to say kyrofa :)
<kyrofa>	harikb, I'm successfully setting Body, but http.Request.FormValue doesn't read from Body, correct?
<kyrofa>	harikb, So do I want to set RawQuery?
<harikb>	kyrofa:  in my usage I have set RawQuery to a url-encoded format I have created myself  (a=b&c=d ) etc. This goes to server as a query_string of course. I am not saying there isn't any wrapper to help you create it, but the Form field is not it.
<harikb>	kyrofa:  see https://golang.org/src/net/http/request.go and this particular comment http://play.golang.org/p/Yg6CsOZb4S
<kyrofa>	harikb, Yeah I saw those comments, but I didn't know what they meant for my case. So you edited the query in the Request.URL? Let me give that a shot
*	lele is now known as Guest24
<harikb>	kyrofa: as per the doc, FormValue() (in the receiver side does read both Body and URL query string values. So you could use either Body or  Request.URL.RawQuery I think
<daved>	ptrb: I got it!  It did take a special adapter.
<daved>	ptrb: though, I still need to test it better.
<nlcpmc>	Hi all.. is there a function that will take a slice of strings ["a","b","c"] and replace in another string "test %s, %s, and %s", in the specified order?
<kyrofa>	harikb, I saw that... but I _do_ have a body... and FormValue() doesn't seem to be pulling it out. I'm just putting json in there... do I need to be doing something else special?
<hfaafb>	fmt.Sprintf("test %s, %s, %s", foo...)
<nlcpmc>	you know it just occured to me i could use printf
<nlcpmc>	hfaafb: ah yes, precisely
<mohae>	I believe you will get a type error doing that
<harikb>	kyrofa: I don;t know. May be it is not properly url-encoded. Body still needs to have foobar=urlencoded(json_string)
<kyrofa>	harikb, I call json.NewEncoder(buffer).Encode(myBodyStruct) and then call http.NewRequest("POST", path, buffer)
<nlcpmc>	i guess sometimes you have to talk it our before you realize why it sounds familiar...
<nlcpmc>	thanks hfaafb !
<hfaafb>	well mohae might be right
<harikb>	kyrofa: yeah that wouldnt work.  POST needs a key=value form as well - properly encoded
<mohae>	the whole []interface{} thing
<kyrofa>	harikb, Ahhh, closer and closer! Okay, let me bang my head on that for a bit
<mohae>	nicpmc: http://play.golang.org/p/ep4aFPIppK will work
<hfaafb>	hmmm that's interesting... that's not what i'd expect.
<hfaafb>	http://play.golang.org/p/5gsEcm9nSA this works?
<hfaafb>	but not []string :(
<smw>	hfaafb, yeah
<mohae>	hfaafb: that too! I didn't think of that. The problem is you can't implicitely convert []string to []interface{}, and vice versa
<smw>	hfaafb, []interface{} and []string have different memory layouts
<mohae>	what smw said
<smw>	hfaafb, but converting is only 3 lines of code and I don't find myself needing stuff like this often
<hfaafb>	i guess i just imagined things... being "expanded" into the arguments but that's not quite right
<smw>	hfaafb, it most certainly isn't. ever tried assigning to a slice passed in that way? :-
<smw>	:-)
<mohae>	hfaafb: Go tends to want you to do expensive operations explicitly
<hfaafb>	makes sense
<mohae>	also an interface{} can contain a slice
<smw>	hfaafb, http://play.golang.org/p/9lIDEDcYYV
<jkyle>	I'm seeing this "ism" for checking for file existance. if _, err := os.Stat(path); err == nil { ... }. How can I do that in a for loop? e.g. (pseudo) while exists(path) { ... ; path = "..";}
<smw>	jkyle, why are you doing this?
<_1_chilin27>	hi
<smw>	jkyle, checking for existence is generally a race-condition. Not to mention the fact that if you don't have permission to stat that path, you are going to be in for a long wait
<jkyle>	archiving files, checking for name collision, hashing new name on collision
*	walkeraj is now known as alaska
<smw>	jkyle, you want to try to open the file for writing with no clobber
<jkyle>	smw: correct
<smw>	jkyle, use os.OpenFile with flags O_EXCL, O_CREATE, O_WRONLY
<jkyle>	perfect
<smw>	jkyle, then use http://golang.org/pkg/os/#IsExist on the error to determine if the error was it already existing.
<jkyle>	right
<kyrofa>	harikb, alright. In my tests mocking out the receiving end, I can do body, _ := ioutil.ReadAll(request.Body) and take a look at string(body) and it's foo=bar
<kyrofa>	harikb, However, request.FormValue("foo") returns nothing
<kyrofa>	harikb, am I missing something else?
<kyrofa>	skelterjohn, ^^ any idea?
<_jesse_>	kyrofa: it's a POST or PUT request?
<kyrofa>	_jesse_, I've tried both GET and POST
<_jesse_>	note that FormValue won't parse the body as a form if it is a GET request
<_jesse_>	but POST should be fine
<_jesse_>	can you pastebin a failing example?
<kyrofa>	So if it's a GET is _must_ be url params?
<_jesse_>	correct
<belak>	aside from the general net/rpc package, what other rpc frameworks are there for go?
<smw>	belak, grpc
<gerep>	Does anyone here use RiakPBC? When I run Store() I don't get any errors but I can't find anything on Riak
<cgt>	If I have a named return value that is a slice, does Go automatically allocate it?
<smw>	cgt, define "allocate"
<_jesse_>	cgt: no, it'll be a nil slice
<smw>	cgt, it is pre-declared for you
<cgt>	_jesse_: Is a nil slice a slice where the pointer to the underlying array is nil?
<smw>	cgt, yes
<smw>	cgt, it is the zero value of the slice
*	Mango_Man is now known as nucleartide2
<cgt>	That makes sense. Thanks.
<kyrofa>	_jesse_, I have to use GET anyway due to this API I have to use, so I just changed it to use the query and it works
<kyrofa>	_jesse_, thanks!
<_jesse_>	kyrofa: np
*	harttho_ is now known as harttho
*	blizzy is now known as _blizzy_
<belak>	grpc looks fancy
<smw>	belak, yes, but it requires protos which means codegen
<belak>	That's alright
<belak>	Kinda expected
<lord4163>	Nice, finally found a good ide for Go :)
<lord4163>	It's called IntelliJ Idea
<heavyhorse>	lord4163: did you get debugging working correctly?
<heavyhorse>	i couldn’t get debugging to work on my jetbrains ide
<heavyhorse>	so i just use eclipse with the goclipse plugin
<heavyhorse>	but goclipse works really well. it’ll link me directly to the source of libraries and functions
<heavyhorse>	if the jetbrains plugin can do that with gocode and debug with gdb. then ill switch immediately
<heavyhorse>	but i don’t think the jet brains golang support is equiv to goclipse yet
*	deniska1 is now known as deniska
<gra1>	how to do something like mystructure.key (key coming from looping on the list of parameter (string))?
<lord4163>	heavyhorse: That doesn't work unfortunately
<Javier_>	dawdad
<smw>	gra1, a better question is what can you do to prevent that from being necessary
<vadmeste>	Hello everybody. Freebsd provides golang 1.4.2 package, however it seems that vet tool is not installed by default, is that normal ?
<heavyhorse>	lord4163: have you tried eclipse and goclipse?
<smw>	gra1, reflect can do it, but reflect is likely not the answer you want
<heavyhorse>	reflect package
<heavyhorse>	you want all the fields of a struct as a collection…?
<heavyhorse>	i suppose the only reason to do that is if you were writing a framework
<lord4163>	heavyhorse: Haven't really tried that one.
<heavyhorse>	you should really try it. i think its great
<lord4163>	heavyhorse: That's just eclipse with a plugin I suppose?
<heavyhorse>	yes
<mohae>	vadmeste: it is included with Go's binary distribution. As for how it's packaged in Freebsd, that's probably a question for the package maintainer.
<mohae>	vadmeste: also https://github.com/golang/tools
<heavyhorse>	its called goclipse
<lord4163>	heavyhorse: Okay, I'll try that too :)
<gra1>	smw I dont know jow to prevent this , I have differnt stucture depends my connection to the database
<heavyhorse>	i think its great. and it reads everything in your gopath and gives really good code-sense and code completion
<heavyhorse>	has the option to build automatically on save
<heavyhorse>	debugging shows you the assembly code. which is cool
<lord4163>	heavyhorse: nifty, supports breakpoints and stuff too? (not very familiar with eclipse)
<heavyhorse>	yes breakpoints are the best
<heavyhorse>	and stepping in to all sorts of code
<heavyhorse>	the standard library and any libraries you added
<heavyhorse>	I’ve fixed and modified stuff that way and also learned how some things work
<heavyhorse>	like gorillas web socket
<heavyhorse>	had no idea how to encode and decode web socket frames until i stepped through that
<lord4163>	heavyhorse: eh GOROOT is going to be my project folder right?
<heavyhorse>	GOPATH
<heavyhorse>	GOPATH/src
<heavyhorse>	actually. you should choose $gopath/src/github.com/{YOURGITHUBUSERNAME}
<heavyhorse>	as your workspace
<Wessie>	or wherever you host your code
<heavyhorse>	yes. just a unique path to your code
<heavyhorse>	to differentiate it from things you go get
<lord4163>	heavyhorse: just getting errors, Building workspace has encountered a problem, errors occurred during the build.
<lord4163>	heavyhorse: how can I choose that before it has been created?
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Thu May 14 15:46:36 2015

**** BEGIN LOGGING AT Thu May 14 15:52:32 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<lord4163>	heavyhorse: yeah well these environment variables make 0 sense to me. That's the biggest annoyance when working with go.
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Thu May 14 15:53:45 2015

**** BEGIN LOGGING AT Thu May 14 15:58:35 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<heavyhorse>	gra1: 1 sec
<lord4163>	heavyhorse: export GOROOT=/usr/lib/go ??
<heavyhorse>	yeah
<heavyhorse>	or wherever go is installed
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Thu May 14 16:02:07 2015

**** BEGIN LOGGING AT Sun May 17 11:24:29 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<heavyhorse>	centrelink: send me your github username if you still want to write a quartz-like library for go. very basic though
<heavyhorse>	centrelink: I don’t really want to directly port quartz, but maybe. I’m trying to figure out what data structures to use
*	zz_kernal is now known as kernal
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Sun May 17 11:33:36 2015

**** BEGIN LOGGING AT Sun May 17 12:16:54 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<utrack>	gometalinter :)
<fd0>	or that, exactly
<earthspace>	I didn't know about those - I will look into them for sure, I'm a big fan of proper coding styles
<fd0>	earthspace: look for 'gometalinter', they have the most exhaustive list I know
<manacit>	djx: something like this: https://play.golang.org/p/AD8agEhW-n
<earthspace>	sublimelinter looks like a good start
<djx>	manacit: nice :) tky
<manacit>	Read() will always fill the buffer with the same bytes
<djx>	manacit: for curiosity, how can a reader know if it has read all data?
<manacit>	when it gets an EOF
<manacit>	This reader won't handle that, but you can keep track of how many bytes it's written so far and return an EOF at the proper time, with something like a `Reset` method to set that back to 0
<djx>	manacit: ah I saw that rdr has 16 and b has 17 ;)
<manacit>	ah, yeah, that was me messing around to make sure that wouldn't copy out of bounds ;)
<djx>	manacit: but that reader wouldn't be multi-thread
<manacit>	well, it depends on your use case
<djx>	manacit: I was talking about the `Reset` stuff
<manacit>	ah, correct
<earthspace>	hmm, getting a lot of this when trying to install gometalinter http://pastebin.com/EJauaPrn
<manacit>	djx: something like this: https://play.golang.org/p/zSuKYX2Rll
<earthspace>	any ideas on how to fix? git is not my forte
<manacit>	add some mutexes and it should be ok
<yh>	I'm doing a regex match and then parsing the match to an int.  I'm len checking the regex result to check for match, then err checking the ParseInt result.  Both of these if-blocks return the same error message "couldn't parse foo"
<yh>	Is there a way of making this less redundant ?  It feels silly
<djx>	manacit: oh yeah, with mutexes only one thread could read at a time
<manacit>	also, I forgot copy will handle the length stuff for you
<manacit>	https://play.golang.org/p/wsfTl8gSxX but yeah, not multithreaded
<andlabs>	yh: don't return the same error message
<andlabs>	return the value of err, or wrap around it, or something
<yh>	andlabs: I'm doing "couldn't parse foo - {err}"
<yh>	tho obvs sprintfing it :)
<andlabs>	ah
<yh>	andlabs: but yeah, it seems kinda duplicative
<donkus>	how do I change the value of a global variable
<donkus>	within a function
<donkus>	I need it so I can define if a function is running, since it wants to run parallel twice if it gets triggered twice
<hfaafb>	donkus: http://play.golang.org/p/RJGZuLNgke
<donkus>	oh, that's it
<donkus>	nice, thanks
<ni291187>	is this Che
<ni291187>	what is this channel about
<Quora>	ni291187: the Go programming language
<ni291187>	it is popular?
<ni291187>	i don't see much app write in go
<danhardman>	huh?
<utrack>	ni291187: you look in all the wrong places then :>
<ni291187>	what's the main purpose of go?
<danhardman>	ni291187: "to build simple, reliable, and efficient software."
<ni291187>	why not Python
<danhardman>	ni291187: Why not Go? There's no reason that can't be argued against other than preference of writing in the language
<danhardman>	ni291187: After a very short amount of time learning the language, I've found myself being able to create pretty cool apps. Quicker than any other language I've looked at
<danhardman>	ni291187: No point listening to other people's opinions, give it a shot and play with it. If you like it cool, if not, still cool :)
<ni291187>	what kin of PPP
<yh>	I find Go annoying in that I'm forever checking err != nil.  But complaining that the language is having us make our programs too robustly... first world problems.
<ni291187>	what kind of cool app
<ni291187>	danhardman sorry for my type error
<yh>	ni291187: are you typing on a keyboard or using some sort of morse code input?  Something feels very distant about the way you're writing
<danhardman>	yh: Yeah that is annoying, I've seen utility functions that make it smaller like utils.PanicOnErr(err) reducing 3 lines to 1
<danhardman>	ni291187: I'm working on a web controlled thermostat for a raspberry pi at the moment
<ni291187>	virtual keyboard
<utrack>	ni291187: i guess Docker is a good example.
<yh>	danhardman: heh, 99% of mine are returning an fmt.Errorf (don't want to panic too many places in my app), hard to reduce that down much! :)
<danhardman>	yh: Surely you still have to do the conditional to check whether an err exists?
<yh>	danhardman: ya that's what I mean, it's pretty much irreducible
<danhardman>	yh: Yeah but if you stick that conditional statement in a func and call that with err as a parameter, you're just calling that func all the time (1 line) instead of reproducing the conditional statement everywhere (3 lines)
<ni291187>	web controlled thermostat. is it like a remote thermometer?
<ni291187>	danhardman
<danhardman>	ni291187: Yeah, so you can connect to the pi through a website and set the temperature of a room
<earthspace>	danhardman: web accessable thermostat? you're a brave man..
<danhardman>	Hooked up to the central heating
<danhardman>	earthspace: Local don't worry ;)
<danhardman>	earthspace: For now
<earthspace>	danhardman: was having flashbacks to when lockitron was getting hype
<danhardman>	earthspace: Haha yeah far too much risk in that
<ni291187>	what if someone hack you site
<ni291187>	danhardman
<danhardman>	ni291187: Then i'll either be very cold one day or i'll have a high heating bill
<danhardman>	However, it's only local for now so I can't imagine that happening
<danhardman>	As time goes on I'm going to add a user system and set up region heating. So you can control the temperature of different rooms in the building
<donkus>	what's the difference between a string and a *string
<danhardman>	*string is a pointer to a string
<cgt>	donkus: one is a string and one is a pointer to a string
<donkus>	how do I turn the pointer into a string
<cgt>	dereference it
<yh>	danhardman: I'm already in func A.  If I called the func you mentioned (B), it wouldn't be able to return from func A with an err, would it
<donkus>	uh
<earthspace>	danhardman: that's a very cool project, either way
<ni291187>	how long does it takes to build that system? danhardman
<yh>	danhardman: I'd surely still need a conditional in A to work out whether to return
<cgt>	donkus: put * in front of the *string variable
<donkus>	ohhhhh
<donkus>	thanks
<danhardman>	yh: You'd put the panic() in func B
<yh>	danhardman: ah see that's the difference, I'm not panicking, just returning errors
<danhardman>	yh: What do you do with the errors?
<yh>	My understanding is it's best to panic as least as possible, and return errors as much as possible
<yh>	danhardman: in the calling context, if that's where I want to deal with the error, I check for the error, and THEN do something, perhaps panic or log.Fatal
<cgt>	donkus: https://tour.golang.org/moretypes/1
<danhardman>	earthspace: Thanks! It's for a uni project
<yh>	danhardman: it seems complicated to have a lot of different functions panicking, some deeply nested
<danhardman>	ni291187: Taken me about 2-3 weeks so far, but I've been working < 1 hour a day if that. Very inconsistent because I've been busy
<ni291187>	cool
*	misterzik_ is now known as misterzik
<ni291187>	you connect through wifi?
<chuhnk>	Hey guys. Working on a microservices toolchain in Go. Mind having a look and providing some feedback? https://github.com/myodc/micro
<chuhnk>	Cheers
<danhardman>	okay so make a util.LogOnErr and a util.PanicOnErr func ;)
<danhardman>	yh
<danhardman>	ni291187: Yeah
<Vendan>	yh, one way to do it, http://play.golang.org/p/laWh7zYxiz
<ni291187>	how do you work with the driver
<ni291187>	danhardman
<danhardman>	ni291187: The driver?
<ni291187>	go is a scripting language
<ni291187>	hardware stuff
<ni291187>	go May need to communicate with hardware
<AmandaC>	Go is a compiled language
<danhardman>	ni291187: You can commmunicate with the hardware...
<ni291187>	in go?
<ni291187>	is it difficult?
<mohae>	ni291187: I think you have a different definition of scripting language than I do
<Vendan>	ni291187, go can go all the way down to assembly without issue
<danhardman>	^
<ni291187>	wow
<danhardman>	ni291187: In my usecase, I'm running my app on raspbian a linux distro for the raspberry pi. Say I want to read the temperature straight from my temperature sensor
<Vendan>	less "oh, this is like python" and more "oh, this is easier to use c"
<yh>	Vendan: heh, hot
<danhardman>	All I do is read the file produced from the sensor device
<danhardman>	ni291187: https://github.com/danhardman/officr
<yh>	What are your guys' on dependencies?
<yh>	Do you try to avoid them with Go ?
<danhardman>	If you wanna take a look :) Anyone else checking it out, feel free to give feedback, I'm sure there's plenty I can improve
*	xeviox|afk is now known as xeviox
<donkus>	I can use go build to build my script, but gccgo doesn't work because check.go:3:35: error: import file ‘github.com/thoj/go-ircevent’ not found
<mohae>	yh: why would one avoid dependencies?
<donkus>	is there some separate path I have to set?
<mohae>	donkus: go get github.com/thaj/go-ircevent
<donkus>	mohae, I already have that
<donkus>	go build is successful with it
<donkus>	but gccgo can't find it
<yh>	mohae: I feel the same, somebody here preferred to avoid them the other day, though
<donkus>	I have my GOPATH set, etc
<donkus>	that problem's already solved
<ni291187>	thanks
<mohae>	donkus: oic
<danhardman>	donkus: What command line interface are you using?
<mohae>	yh: what do you mean by dependencies?
<donkus>	but I want to use gccgo to build because it'll produce a much smaller binary
<donkus>	danhardman, uhh.. bash?
<danhardman>	donkus: no worries, had similar issues on windows command prompt a while ago
<donkus>	does gccgo check the GOPATH variable?
<donkus>	ah
<danhardman>	donkus: check? go env
<danhardman>	or whatever it'd be through gccgo
<donkus>	it only takes input files
<danhardman>	hmm...
<donkus>	everyone here only uses go build? no gccgo users??
<cgt>	donkus: I think most people use gc (the one that the go tools uses)
<donkus>	it produces this huge 5 MB binary
<cgt>	so what?
<donkus>	when I think it could produce a 200kb binary with gccgo
<donkus>	but gccgo can't find my import fiels
<donkus>	files*
<cgt>	It's not 1985. 5 MB is insignificant.
<donkus>	<<< satellite broadband user
<cgt>	gc binaries compress well. I use bz2 myself when deploying to my VPS.
<cgt>	and I imagine the gain when using satellite internet would be far more significant than it is for me.
<cgt>	it'll still be a couple of MB probably
<thanasisk>	hello everyone - can someone help me? why this piece of code ALWAYS accepts any password? http://pastebin.com/HRtgSfn5
<adiabatic>	heck, xz might have good tradeoffs
<adiabatic>	even with the compression cranked up to 'crazy'
<yh>	mohae: other go pakcages
<yh>	importing*
<cgt>	adiabatic: I tried a few different compressors, including xz, but I eventually settled on bz2. I have 10 Mbps upload, and it seems to take about the same time with and without compression (because without no time is used on compression)
<thanasisk>	in other words, if err == nil evaluates ALWAYS to true even if x509.DecryptPEMBlock returns an error
<mohae>	yh: umm, ignore that person in regards to imports then
<centrelink>	cgt: woot woot satellite represent
<centrelink>	i'd just build it on the server
<cgt>	centrelink: That's another good option.
<Vendan>	10 mbps upload is more then I have, and I'm on cable
<cgt>	(also just to clarify: I don't have sattelite internet)
<cgt>	I'm on some sort of VDSL
<adiabatic>	I used to satellite internet.
<centrelink>	cgt: yeah mistook you for the other guy oh well
<AmandaC>	donkus: you’ll still have to copy up 5MB worth of stuff for it to run, probably, with gccgo
<centrelink>	isnt vdsl the good dsl that everyone else gets while america gets stuck on adsl
<Vendan>	personally, I have wercker set up to auto build and deploy to my server.  Change code, commit, push, and done
<cgt>	centrelink: not everyone, but yes
<donkus>	AmandaC, all this is taking place on my local machine so I can do that
<donkus>	where do I copy it so that gccgo knows where it is
<adiabatic>	I had ADSL. I think VDSL is for very long distances and is generally slower. I'm on FiOS now.
<AmandaC>	donkus: no idea, I use GC
<cgt>	centrelink: You have to live very close to an ISP central thingy to get it. Fortunately, I do.
<cgt>	AmandaC: wrong
<cgt>	I mean adiabatic
<mohae>	donkus: if you statically link, your gccgo code will be equivelant size.
<thanasisk>	any takers for my question?
<donkus>	I've had 2MB binaries with only native imports produced with GC, if built in gccgo, they're down to kilobytes
<mohae>	because dynamic linking
<centrelink>	donkus: that's because they aren't statically linked
<AmandaC>	donkus: that’s because it’s dynamically linking to the native imports, not including them in the resulting binary. as a result, it’s less portable, you can’t just scp it somewhere and high-ho-silver it’ll run
<donkus>	does that mean they wouldn't run on other machines that didn't have go??
<donkus>	dang! I guess gccgo is bad then
<donkus>	guess I will use gc
<donkus>	thanks for letting me know
<centrelink>	donkus: I'd recommend just putting your code under version control and build it on the server you want to deploy to
<mohae>	code doesn't magically disappear because you compliled it differently, it's just in a different spot
<centrelink>	thats what I do with my shitty internet
<adiabatic>	another idea: use rsync with the rsync algorithm to upload — most of your 5 MB executable is probably stdio
<thanasisk>	centrelink: build statically and package, package, package
<thanasisk>	for a partisan viewpoint
<centrelink>	adiabatic: yeah I don't do that with go binaries but i use rsync a LOT because it can handle bad connections
<earthspace>	question for anyone who knows html/text/template... I pass map[string]interface{} to the template and it disambiguates them into separate variables - is there a builtin of some kind that has the input var itself so that it can be passed to a sub template?
<AmandaC>	earthspace: just {{ template “foo” . }} should do it?
<earthspace>	AmandaC: ah. annoyingly I don't have access to that since I'm using https://github.com/eknkc/amber
<earthspace>	AmandaC: although I think you just solved my problem anyway, there's obviously going to be an equivalent
<AmandaC>	earthspace: ah, that’s not the text/template package, I thought you meant you were using that. :P
<thanasisk>	hello everyone - can someone help me? why this piece of code ALWAYS accepts any password? http://pastebin.com/HRtgSfn5
*	pietro10 is now known as andlabs
<AmandaC>	thanasisk: from reading the go-doc, I assume it’s somehow unable to detect the password is invalid?
<thanasisk>	AmandaC: if the password is wrong it will return errors.New("x509: decryption password incorrect")
<thanasisk>	yet somehow this is not propagated?
<thanasisk>	(I read the implementation of the function)
<AmandaC>	thanasisk: http://golang.org/src/crypto/x509/pem_decrypt.go#L148
<AmandaC>	does the block your decoding have any padding
<AmandaC>	that’s how it detects that it’s an invalid password
<thanasisk>	AmandaC: the block I am decoding is an RSA ssh-key
<thanasisk>	in PEM format
<thanasisk>	block is created using pem.Decode
<thanasisk>	AmandaC: I found out the solution https://github.com/golang/go/issues/10171
<AmandaC>	figured it was something like that
<earthspace>	AmandaC: If i were using text/template, how would I do {{ template $var . }} ?
<AmandaC>	earthspace: not sure
<earthspace>	hmm okay.. anyone?
<danhardman>	You want to use variable templates?
<earthspace>	I've had so much trouble with these templating engines I'm getting very close to sacrificing template cleanliness for functionality
<earthspace>	well I have a site wrapper template which has the header and foot, and I want to import a page template ]
<earthspace>	seems like an obvious use case
<danhardman>	2 secs, let me pull my code up... Just did something similar
<danhardman>	earthspace: Right, so when you do your parse files, you'd do something like template.ParseFiles(wrapper.html, header.html, footer.html, foo.html)
<earthspace>	danhardman: in officr you did the opposite, you included the header and footer around the requested page template
<danhardman>	Then for all of your foo.html pages so foo.html, bar.html, define the template as the same name? {{ define "page" }}
<danhardman>	And always use {{ template "page" }} in your wrapper?
<danhardman>	Means you can only use one at a time but that would work right?
<earthspace>	ahh I see, you're creating a template group for each page
<danhardman>	Yeah so you'd have a bunch of templates called "page", but you only parse the one you want to use on the server
<danhardman>	That make sense? Would that work?
<danhardman>	This is the whole reason I didn't have a base template
<earthspace>	In an ideal world I'd like to just glob all my template files and be able to mix and match them as necessary. I wonder how much of a performance hit I'd take from replacing {{ template $page . }} with a function $page, .
<danhardman>	I'd rather make an index template and decide whether or not I wanna include the header and footer
<earthspace>	Okay so here's what I did
<earthspace>	http://pastebin.com/B8Jsdxt9 (removed all the unrelated code and error checking for clarity)
<earthspace>	If anyone wants to tell me why this is a terrible idea I'm all ears, otherwise it appears to solve most of my issues at the cost of not having slim/jade-esque templating
<earthspace>	My only concern being that template.HTML() potentially kills most of Go's implicit web security
<earthspace>	Or does it? Maybe it gets resolved in ExecuteTemplate...
<skelterjohn>	http://gowithconfidence.tumblr.com/post/119209459631/escape-the-shackles-of-godep-with-wgo
<yh>	skelterjohn: just as I start using Godep for my first project ;-)
<danhardman>	earthspace: I think you should be safe
<skelterjohn>	yh: you do what works for you
<skelterjohn>	yh: but i'm also happy to explain why i think that godep is a bad approach
<earthspace>	danhardman: well it's been about 10 minutes and nobody has shouted me out of the room yet for poor web security practices so you might be right...
<skelterjohn>	yh: though it's more or less laid out in the 'philosophy' bit in the readme for https://github.com/skelterjohn/wgo
<AmandaC>	skelterjohn: not enough cute kittens in the source code, clearly
<skelterjohn>	AmandaC: you know i accept PRs
<AmandaC>	hahahaha. :P
<AmandaC>	Don’t tempt me, mortal. :P
<danhardman>	earthspace: Yeah I wouldn't put all your trust in me, try rustle up some jimmies to get some other opinions, I'd like to know too :)
<yh>	skelterjohn: I've jotted down a note to investigate wgo shortly :)
<AmandaC>	skelterjohn: one thing I did find really interesting is how easily I was able to tie wgo up into a docker container for use in some of my stuff
<skelterjohn>	AmandaC: my dogfooding of wgo is also a docker workflow
<skelterjohn>	so that does not surprise me
<AmandaC>	skelterjohn: just add third_party to .dockerignore and add a RUN …/wgo ../vendor and wgo restore and it’s working like a dream
<skelterjohn>	AmandaC: i made a "compiling container", taken from the vendor directory, that i use to build the source directory
<earthspace>	danhardman: Given that I'm running executeTemplate on it before simply adding it to the rest of the HTML, I do believe it should be fine. I will make sure i get someone more experienced in Go to look it over before it ever goes near production, though :)
<skelterjohn>	AmandaC: ".../wgo ../vendor"? i don't quite get the syntax
<AmandaC>	skelterjohn: didn’t feel like typing out the full github urls. :P
<danhardman>	earthspace: Yeah that's what I thought
<skelterjohn>	ahhh ok
<AmandaC>	so just lazyness, not anything special. :P
<skelterjohn>	also i tweeted https://twitter.com/skelterjohn/status/600006008841338880
<skelterjohn>	i find tweeting to be weird
<skelterjohn>	but apparently that's what people do to spread the word
<AmandaC>	heh
<sztanpet>	i hate tumblr more :(
<AmandaC>	I mostly use Twitter to stalk people who’s newsletters I wish to subscribe to
<AmandaC>	The occasional tweet reply to a friend, that’s about it. :P
<skelterjohn>	sztanpet: tumblr is an easy way to make a quick blog post that doesn't look like a turd
<sztanpet>	sure
<skelterjohn>	i don't participate in any of its social aspects, which are strange and confusing
*	xeviox is now known as xeviox|afk
<skelterjohn>	in case anyone wants to upvote on HN before it slips off the new page :s https://news.ycombinator.com/item?id=9561194 not that i've ever had any luck with HN posts
<sztanpet>	sure, im all for votebrigading
<codingrogue>	how do you guys test handlers? do you directly call e.g Client.Get(url) and check the response?
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Sun May 17 15:07:30 2015

**** BEGIN LOGGING AT Sun May 17 15:18:56 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<benhuda>	hello
<benhuda>	after building a really successful CLI boilerplate repo that i've been using, I'd like to do the same for an API service stack
<benhuda>	i'm wondering, should i use godep or gob ? did gob eventually take off?
<sztanpet>	there are "better" choices out there now, like wgo, gb, etc
<sztanpet>	also never heard of gob, so i will vote no
<benhuda>	sorry i think i meant gb. the one that was just announced to the community
<skelterjohn>	benhuda: github.com/skelterjohn/wgo is pretty similar, check it out
<sztanpet>	it was just announced so how could it have eventually taken off
<sztanpet>	we shall see tho
<skelterjohn>	benhuda: however, for an API service stack you'd want to be 'go get'able, which most likely means you need to keep up to date with your upstream
<benhuda>	skelterjohn awesome that I get to have the recommendation from the person who built it :)
<skelterjohn>	benhuda: well, you can weight it however you like :) and i'm happy to answer questions
<skelterjohn>	davecheney (gb author) is a bright guy too
<benhuda>	well i've been using Gom so far, I know its considered "wrong" but its been working blissfully for me. time to dust off my stack though
<skelterjohn>	what's gom?
<fd0>	another dependency manager
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Sun May 17 15:33:30 2015

**** BEGIN LOGGING AT Sun May 17 15:59:31 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<skelterjohn>	benhuda: how does the gom workflow work?
<skelterjohn>	learns: that's simply not sztanpet's responsibility or likely even something he knows about
<skelterjohn>	learns: in any case, no one talking right now knows why much of that site is in chinese
<benhuda>	skelterjohn: you get the tool, and then hold a Gomfile (same as Gemfile in ruby, package.json in nodejs, and so on). Then you just run "gom build/test/etc"
<learns>	skelterjohn: I know that now. I thought he knew about the site. Could've been pretty popular. I guess it isn't
<skelterjohn>	benhuda: wgo init && wgo get <package you want> && wgo save
<benhuda>	within the Gomfile you can declare all of your dependencies, you can also divide some deps to development/production/test and so on
<skelterjohn>	benhuda: put the entire workspace in git, someone can check it out and 'wgo restore' to get things back
<skelterjohn>	benhuda: that is what branches are for
<skelterjohn>	not the responsibility of the rev pinning tool (in my opinion)
<benhuda>	skelterjohn: i have a confession though... i dont like to have a whole src/com/github/myuser/projectname/main.go path
<benhuda>	i know its silly, but i don't like that aesthetics
<sztanpet>	that only superficially looks like  the dependency path
<skelterjohn>	benhuda: if you don't care about being go-get distributable, youu'd just ahve src/projectname/main.go
<benhuda>	skelterjohn: and not just src/main.go?
<skelterjohn>	benhuda: in my project where i dogfood wgo at work, i have src/worker/main.go etc
<skelterjohn>	benhuda: that won't worry, sorry
<skelterjohn>	benhuda: needs to be at least one level lower than src because of how GOPATH works
<benhuda>	I understand
<skelterjohn>	benhuda: in the original version of gb (github.com/skelterjohn/go-gb), W/projectname/main.go worked for a binary named projectname
<skelterjohn>	it predated GOPATH nonsense
<skelterjohn>	and the go tool
<benhuda>	wait, THAT gb tool i remember
<benhuda>	i see what happened now.. it was renamed to wgo?
<sztanpet>	no?
<sztanpet>	its explicitly mentioned how it differs from it
<benhuda>	sztanpet i mean skelterjohn/go-gb. seem to also been called 'gb'
<sztanpet>	sure
<benhuda>	anyway, i'm trying to take example from monster projects like consul, etcd, and so on
<benhuda>	not sure how they got their dependency management figured out
<skelterjohn>	benhuda: yeah davecheney stole the tool's name :) my gb was long-dead though and unsupported
<skelterjohn>	benhuda: the old gb is not the same as wgo, or the new gb
<skelterjohn>	benhuda: consider it a common parent of both
<chance>	benhuda: godep is basically the short answer to the bigger projects
<chance>	and it's kinda sucky
<chance>	s/kinda/is/
<skelterjohn>	i'm going to float using wgo to the kubernetes guys
<skelterjohn>	since i know them at work
<skelterjohn>	(i work in cloud at google)
<skelterjohn>	they probably won
<chance>	i want to try out gb, but it doesnt do a good job of actually handling versions themselves.
<skelterjohn>	won't go for it, since what they have is working ok
<skelterjohn>	chance: then try wgo, it does handle versions
<skelterjohn>	github.com/skelterjohn/wgo
<skelterjohn>	chance: it's sort of like gb, except it uses the go tool instead of rewriting everything, and it has first-class support for pinning and vendoring
<benhuda>	skelterjohn :)
<chance>	skelterjohn: i might check it out.
<chance>	the big thing is having a manifest/versioning file, and a way to retrieve and download a new version of a package fairly trivially
<chance>	godep's way of adding a package/updating is fucked
<benhuda>	why is godep sucky?
<chance>	lots of pain points
<skelterjohn>	chance: wgo has W/.gocfg/vendor.json
<skelterjohn>	chance: and 'wgo save' writes to it, 'wgo restore' pins all the deps
<chance>	if i want to add a new dep: i have to get the package myself via go get/godep get and then import it somewhere, then run godep save and hope things work.
<skelterjohn>	chance: you can also 'wgo save --godeps' to import godep rev pins
<skelterjohn>	chance: to add with wgo, 'wgo get' and 'wgo save'
<chance>	so if i wanted to add a pkg, i do what? update vendor.json, and run wgo get?
<skelterjohn>	no, just run wgo get
<skelterjohn>	and then update vendor.json using 'wgo save'
<chance>	how do i specify the version?
<chance>	so i have to retrieve then update the version in the json, then tell it to use that version
<skelterjohn>	chance: if you want to chance a version, right now you can use git/hg in the package itself, or edit vendor.json directly. currently i haven't figured out a nice way to do that from the CLI
<chance>	i mean id expect to be able to do this: 1) run command that uses config to pull the right versions of packages from config
<chance>	or
<chance>	2) run command to get specific package at specific version and save that info into config as well
<skelterjohn>	chance: i'd be happy to add (2) if a good UI was suggested for it
<chance>	the latter could be like wgo get foo/pkg abc123versionNumberHere
<skelterjohn>	so, right now 'wgo get' just forwards to 'go get' with the right GOPATH set
<skelterjohn>	it is not straightforward to also extract and apply revs there
<skelterjohn>	what if... 'wgo save foo/pkg@abc123'
<chance>	yeah, im 100% against any tool only getting HEAD and not supporting any rev stuff, cause it's just not any better than other tools witohut that.
<chance>	i myself, do not want to have to grab a package then manually change the versions using git checkout/svn checkout etc.
<chance>	if i wanted that i would use go get :)
<skelterjohn>	'wgo save' already takes a package as an arg, if you want to bring in something that's in your external GOPATH but not your workspace
<fd0>	skelterjohn: sounds good
<skelterjohn>	so it would be natural to put the rev there
<fd0>	skelterjohn: alternatively, make a --revision parameter?
<chance>	another thing: i dont want my tools using the normal gopath in anyway if possible.
<skelterjohn>	fd0: 'wgo save' takes arbitrarily many args
<chance>	that's what sucks about godep. i shouldnt need $GOPATH if the tool manages the versions.
<fd0>	skelterjohn: good point, I retract my proposition :P
<chance>	these are all just specific things ive learned that i want/dont want because of things like Godep :D
<skelterjohn>	also, the ref can be branches etc oto
<skelterjohn>	so you can do 'wgo save foo/pkg@r1
<skelterjohn>	'
<skelterjohn>	(not now, but if implemented that's how it would work)
<skelterjohn>	for some branch "r1"
<skelterjohn>	though support for that is probably a bit incomplete, due to how it checks whether or not something needs updating
<skelterjohn>	i'll have to think about the best way to handle 'wgo save foo@ref'
<benhuda>	skelterjohn: do you find a tool like Gom completely foreign to the Go mindset?
<chance>	i cant help but feel like the default should be opposite of how wgo save works right now
<skelterjohn>	benhuda: can you link to its readme?
<chance>	atm wgo save looks at versions and saves them into the file. *i think* it should look at the file for versions and update all the packages to those versions
<skelterjohn>	chance: maybe 'wgo pin'?
<chance>	im thinking about pip
<chance>	or npm
<chance>	they all behave this way, they look at a list of packages, and install those versions
<skelterjohn>	chance: though if i thrash the verbs too much people will think wgo is garbage and give up
<chance>	rather than looking at installed packages and updating a list's versions of packages.
<chance>	i'd just imagine something like wgo get . or wgo get foo/bar@version1.2
<gaYak>	How can I find out the _real_ URL called by the http.Do?
<sztanpet>	wha
<chance>	skelterjohn: sorry, mostly thinking outloud. i think youve got something good going, just hard to say the 'correct' approach
<skelterjohn>	chance: i understand, don't worry
<skelterjohn>	chance: changing how 'wgo get's args work is a show stopper though
<benhuda>	skelterjohn: https://github.com/mattn/gom/blob/master/README.mkd
<skelterjohn>	chance: the whole point of wgo is that it forwards to the go tool
<chance>	skelterjohn: right.
<chance>	i imagine the tool would go get && git checkout && updateConfigJSON(someFile)
<sztanpet>	gaYak there is no http.Do, you probably mean client.Do? and you give the url to call so not sure what you mean
<chance>	retrieve package -> update version of actual source -> update version in config file
<skelterjohn>	chance: yeah, that's what i'm wondering if i can stick into 'wgo save foo@rev' without destroying everything
<gaYak>	sztanpet: Yes, I mean client.Do
<gaYak>	sztanpet: Well, the thing is.. it's not calling the Request URL
<gaYak>	sztanpet: req.URL.String() is different than what is really called..
<chance>	skelterjohn: could alternatively just have a new subcommand for this workflow to just 'test things out'
<skelterjohn>	chance: that's probably wise
<skelterjohn>	chance: 'wgo pin pkg@ref'
<chance>	wgo fetch --save pkg@ref
<chance>	maybe where --save updates the config file
<skelterjohn>	hmm
<chance>	default is only to fetch & update the src code version
<skelterjohn>	i don't think i'd want to update the ref without saving
<skelterjohn>	it's nice to have that go through the cfg 100%
<chance>	isnt that what it does right now?
<skelterjohn>	(another tool actually does it)
<chance>	so it could be like
<chance>	wgo fetch pkg@ref && wgo save == wgo fetch --save pkg@ref
<skelterjohn>	right, i'm saying i wouldn't want the @ref bit without the ref going into the config
<chance>	that's fair enough.
<chance>	im just a huge fan of this flow cause it makes updating a package easy
<chance>	it's the same flow as installing a package that didnt alreadye xist
<chance>	new package -> wgo fetch newPkg@rev
<chance>	update a package -> wgo fetch newPkg@newRev
<skelterjohn>	so 'wgo save pkg@ref' would be using golang.org/x/tools/go/vcs to clone the pkg to the right ref, run 'go get' on it to make sure all the deps are present, and then 'wgo save'
<FrostCandy>	https://play.golang.org/p/5u9ulR0hA9 , how do you assign a value to a map within a map? MyMap[string][string] = string or see example
<skelterjohn>	chance: and having fetch work like you suggest is practically screaming for it to be part of 'wgo get'
<chance>	sounds about right i think
<chance>	yeah, i was just suggesting a new name to avoid confusion without how it might work right now :)
<chance>	just for conversation purposes
<skelterjohn>	i'm going to let it simmer in my head for a bit and come back to it tonight
<chance>	probably a good idea.
<gaYak>	sztanpet: Okay, debuggin with a HTTP server reveals the truth.. req.URL.String() says it is calling http://localhost:8080/something, but in reality it is calling on the server just "something", not "/something"
<chance>	also ++ for anyone and everyone who's been willing to even 'try' to tackle this problem
<chance>	IMO, it's literally the biggest item on 'what i dont like in Go' right now.
<chance>	so any steps to figure this out are good steps.
<henesy>	can go:generate handle environment variables in the shell?
<henesy>	$PATH for example?
<learns>	what does this mean? "Big   = 1 << 100"
<learns>	and "Small = Big >> 99"
<henesy>	learns: http://stackoverflow.com/questions/5801008/go-and-operators
<learns>	henesy: thank you
<UberG0Su>	Hi guys, what data format net/rpc is using?
<UberG0Su>	gob?
<sztanpet>	it does not use anything
<sztanpet>	you have to give it something to use
<UberG0Su>	like?
<UberG0Su>	i have just implemented it and it works in beetween two go instances
<sztanpet>	like net/rpc/jsonrpc
<UberG0Su>	but i would like to call it from python aloso
<sztanpet>	oh right, then yes, it uses gob by default
<UberG0Su>	it is possible to have to ways in one app?
<UberG0Su>	both gob and json based?
<sztanpet>	no idea, probably
<benhuda>	is there anything in Go that can orchestrate many async requests?
<benhuda>	something like async.js / bluebird
<hfaafb>	channels, generally.
<benhuda>	in other words, something i can model scatter-gather, or give it a topology of calls somewhat declaratively and it will resolve it?
<benhuda>	hfaafb yes, but i guess i want something more high level like:  "call these 3 services in parallel, wait for all results. mash up all results into a hash, and with it - call this last service. wait for the result, and return the result as response"
<benhuda>	i know it can be modeled with channels, but somehow i'd wish for a simple API/DSL i can just declare this
<sztanpet>	not in the stdlib
<benhuda>	i'm not necessarily looking for stdlib
<hfaafb>	how about "programming" it? sync.WaitGroup?
<benhuda>	hfaafb: maybe im just forcing a stupid workflow. something like async.pmap(arr, ..function..).then(..function..).pmap(arr, ...function..)
<benhuda>	where pmap is parallel map
<benhuda>	maybe it's not go-esque but..
<dmac>	benhuda: you're going to have friction using a function paradigm in an imperative language
<dmac>	*functional paradigm
<sztanpet>	oh god you triggered me with promises, please be more considerate benhuda!
<sztanpet>	hurrhurr
<benhuda>	sorry
<benhuda>	i did apologise before
<sztanpet>	it was a joke
<hfaafb>	you don't really need promises in Go. unqueued channels block on send and receive
<hfaafb>	https://www.youtube.com/watch?v=f6kdp27TYZs
<benhuda>	so we have coreos, hashicorp, google, all doing a lot of Go now right?
<benhuda>	any more notable companies i can browse and read code from on Github?
<skelterjohn>	benhuda: github.com/docker
<mwhudson>	iant: if you happen to be around, what do you think about symbol mangling?
<mwhudson>	iant: it turns out debian has 1 million perl scripts that parse the output of objdump and the spaces in symbol names that go shared libraries have make them unhappy
<rdegges>	Heyo -- are any of you aware of any docker projects which basically automate the running / dependency management of Go projects with godep?
<rdegges>	I've basically got a project that builds with godep, and I'd like to use an image which uses godep to install all dependencies, then runs the built package automatically.
<rdegges>	Figured it was worth a shot to ask in here before rolling my own =p
<sztanpet>	sounds like a shell script
<daved>	skelterjohn: Is middleware a careless term when used to describe nested functions?
<rdegges>	Ya! I know how to build it, but since the official golang docker image has support for building using go get -- I figured there must be something similar that already exists for godep?
<rdegges>	Didn't want to reinvent the wheel if someone else already has it up / maintains it for new go releases / etc.
<daved>	I'm not sure I've see anything official, but the community uses that term with apparent confidence.
<daved>	skelterjohn: that is, the web dev community uses ...
<WhalePotato>	hi
<WhalePotato>	anyone here...?
<v0idcat>	daved: i think it comes from web frameworks like django. defined as something that sits between what sends the request to your code, and you final view treating the request
*	dysoco_ is now known as dysoco
<Tv`>	daved: the web dev community has made up lots of words, only used by themselves
<Tv`>	and middleware comes more from the enterprise world than web, afaik
<WhalePotato>	that's for certain xD
<daved>	v0idcat: last night another user here was complaining pointedly that it's a misused term.  And I do agree, but I suppose I'm stuck trying to figure out if I should go with it or forge a better path
<WhalePotato>	ok... Anyone who wants to NOT talk about developing stuff??
<WhalePotato>	lol
<Tv`>	WhalePotato: please go somewhere else
<daved>	Tv`: I know you find my nested function package destestable, but I'd appreciate suggestions on naming the type which defines the function signature used.
<Tv`>	daved: concrete questions are easier to answer
<WhalePotato>	OMG I AM SO SORRY. I did not see the category was porgramming. I will leave. Please forgive me!
<WhalePotato>	programming*
<daved>	"type Middleware func(Handler) Handler" where Handler is an interface with nothing more than "ServeHTTPContext(context.Context, http.ResponseWriter, *http.Request)"
<daved>	I'd like to pick a more on-point name for the type instead of Middleware.
<Tv`>	daved: what kind of code needs that type to be named, in the first place?
<daved>	Tv`: If I'm, so far, only using the type definition to clean up usage later (replacing the full function signature with "Middleware"), is it better that I avoid the type definition and favor the more verbose way?
<Tv`>	daved: do you really have functions taking Middleware arguments? if so, why, and why wasn't just Handler good enough?
<daved>	Tv`: I do.  Middleware takes and returns a Handler.
<Tv`>	that's not what i asked
<daved>	hmm
<daved>	I'm struggling to see how []Handler is == to []Middleware.  Middleware is a function type, and Handler is an interface.
<Tv`>	i implied no such equality
<daved>	I thought that's what you meant by "why wasn't just Handler good enough?".
<daved>	If I only use handler, then the []Middleware would be []func(Handler) Handler.
<daved>	And I did acknowledge that, at this point, I'm only use the Middleware definition to reduce verbosity.
<daved>	s/use/using/
<daved>	Is it better to reduce definitions despite the verbosity if I'm not doing anything interesting with the newly defined type?
<Tv`>	why have []Middleware
<Tv`>	do you often keep slices of functions around?
<Tv`>	when's the last time you had a []func(X)
<daved>	Tv`: ah, well, this is within the nested function package I know you dislike.
<daved>	To answer the questions, the slices of functions are the most important part of this package, and I use them on every route in my system.
<Tv`>	sounds like a solution eagerly creating its own reason for existence
<daved>	Tv`: I did provide pastes using and not using a chain lib, and you never replied back with any clarity, so I continued on with what I thought was more useful.
<Tv`>	despite the usual view on the matter, i am not always active on this channel
<benhuda>	so.. goji, gin, or echo? which should i base my next stack on? (yes i know i can just use none)
<hfaafb>	daved: if its useful to you, why not just do that instead of what other people tell you
<hfaafb>	what's with the middleware crusade
<daved>	hfaafb: crusade?
<hfaafb>	go is a practical programming language
<hfaafb>	use it to make things
<daved>	I'm just seeking wisdom.  I don't think Tv` forms his opinions on whims.
<daved>	hfaafb: And, as an example, I'm not sure if I should favor avoiding type definitions when nothing interesting is done with them beyond reducing verbosity.
<Tv`>	type data []byte  // reductio ad absurdum
<daved>	Tv`: http://pastie.org/10189369 - using alice / http://pastie.org/10189344 - not using alice
<daved>	Tv`: cluster.Configure() is just for context and is not shown fully.
<Tv`>	daved: this seems like an argument about two kinds of complex code; i don't like complex code to begin with; i'm sure there's a simpler way
<daved>	Tv`: The more simple way is to write the nested functions in each route declaration.
<Tv`>	and the point is obscured by this "front" / "back" thing that makes no sense to an outside reader, too
<daved>	Tv`: I had left it in to emphasize the need for flexible nesting order/reuse
<Tv`>	and what's that noise about http.HandlerFunc
<Tv`>	you are trying to justify something by writing overly complex code as an "alternative"
<Tv`>	you just succeeded in demonstrating that simple things can be made complex, if wanted
*	Disconnected (No such device or address)
**** ENDING LOGGING AT Sun May 17 18:01:32 2015

**** BEGIN LOGGING AT Sun May 17 18:02:01 2015

*	Now talking on #go-nuts
*	Topic for #go-nuts is: isgo1point5.outyet.org | golang.org | known issues: golang.org/issue | channel log: botbot.me/5/log | don't ask to ask; just ask | ʕ◔ϖ◔ʔ | a few gophercon videos: http://confreaks.com/events/gophercon2014
*	Topic for #go-nuts set by skelterjohn!uid13218@gateway/web/irccloud.com/x-jciwkcnpyamhamqg (Thu Dec 11 05:48:01 2014)
<daved>	Tv`: I feel that I've been clear before that I don't know of any other way to make nested function more composable/reusable.
<st33med>	hai
<Tv`>	daved: how about asking about *that*
<daved>	Tv`: I have!
<Tv`>	"how do i reimplement alice" doesn't count
<daved>	::grumble grumble::
<st33med>	daved::grumble();
<daved>	Tv`: so, how should I make nested functions more composable and reusable (even in sections)?
<Tv`>	daved: are you asking how to make foo(bar(baz(...)) easily callable multiple times with repeating foo, bar and baz?
<Tv`>	*without
<daved>	Tv`: yes, along with having some functions be optional and able to be "branched" out at certain points to provide two, but similar chains.
<daved>	s/two/two or more/
<Tv`>	daved: how about making a runnable play.golang.org snippet that isn't "here's my webapp, fix it"
<Tv`>	focus on one question at a time
<earthspace>	anyone experienced with logrus?
<epequeno>	hello gophers
<earthspace>	Trying to figure out how to add hooks using the *logrus.New() format rather than the implicit format
<earthspace>	As a side note, do you lot prefer to put var declaration at the top, or types?
<nerr>	I tend to do blocks of constants, vars, then types, their methods, then functions
<nerr>	assuming that's what you meant
<FrostCandy>	i have for i:=0;i<10;i++{ } but I want to only print the even numbers, is there a step command, or do i just do another i++ in the processing area?
<FrostCandy>	sorry not even numbers, every other one
<earthspace>	nerr: good to hear, me too...
<foobaz>	FrostCandy: how about i+=2 instead of i++
<FrostCandy>	foobaz: ahh ya ok
*	kernal is now known as zz_kernal
<Tv`>	FrostCandy: for the more generic case, continue might be what you're looking for
<FrostCandy>	Tv`: ah ok that will be useful, but i'll use the += for this so i can skip more than one if I wanted to
<daved>	Tv`: http://play.golang.org/p/EEMbda0cBU
<daved>	http://play.golang.org/p/iWHLOBA0bJ
<daved>	there was a typo
<Tv`>	really, 100 lines to ask about functions calling functions
<daved1>	dang
<daved1>	Tv`: I'm not sure what to whittle down so that the example accommodates the needs and shows proof of data flow.
<daved1>	s/example/example still/
<Tv`>	*that* sounds like the problem
<Tv`>	ponder: var s []func(T) T; s = append(s, foo)   vs   f := something(); f = foo(f)
<FrostCandy>	Can I use a variable variable? https://play.golang.org/p/X2jwXrqJzI
<FrostCandy>	i want to print both of my int's in this example using a for loop to decide when to print which struct field
<Tv`>	FrostCandy: no, you'd need to structure that differently
<Tv`>	FrostCandy: maybe you don't want a struct?
<FrostCandy>	Tv`: ok , ya maybe a map is correct here instead.
<Tv`>	for that particular example, even a [2]int
<FrostCandy>	Tv`: ya that was a simple example though, my struct is bigger with diff types.
<daved1>	Tv`: f := something() | f will be the return of something(), not the function itself.  Maybe you meant, f := something; f = foo(f)   (where something is a func()) ??
<daved1>	-
*	daved1 is now known as daved
<daved>	oh, nice, got my nick back
<daved>	scratch that
<daved>	f will be the result of foo(result of somthing()) - but my goal is to have only a function order and not run anything until the last moment.
<daved>	using a slice allow me to fire off the functions in order when I want, allowing reuse of saved slices which may or may not build up large slices.
<daved>	without slices, I will end up needing to write out every single permutation needed apart from appends/prepends.
<Tv`>	daved: can't really bootstrap a func(Handler) Handler stack with a func(Handler) Handler
<Tv`>	hence, something is a Handler, not a func(Handler) Handler
<Tv`>	or returns one; however you want to structure it
<Tv`>	this whole "run until the last moment" is a red herring
<Tv`>	it's like saying "but i don't want to append things to the slice until the last moment"
<skelterjohn>	agar.io is fun
<daved>	skelterjohn: wow
<beefsack>	hi all, has anyone else seen gob encoding and decoding empty slices as nil? example here: https://play.golang.org/p/UdxICjqPnM
**** ENDING LOGGING AT Sun May 17 20:05:06 2015

