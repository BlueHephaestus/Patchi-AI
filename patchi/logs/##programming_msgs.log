<igrir>	hello guys, i have a problem about class dependency in my particlemanager class. i am making it using c# on unity. this class purposed to manage any particle in a game(create, object pool, spawn, etc). in this class there's a method called as "pause" that can pause any particle. the problem is there are many particle using their own class out there. for example a package called shuriken make use of unity's particle system, but xffect using its own self
<igrir>	system. they have different way to call "pause". it would be trouble a when there were no xffect class (as the compile would throw error no xffect class exist). i really confused how should i make my particlemanager can use "pause" without have to know particle system or xffect (or any other class) exist. in php you can simply call if(class_exists("")), how can i expect the same result in c#? thanks in advance :d
<ronh>	how to achieve highest video quality on a tv connected to htpc? should i 1) output full rgb and set tv input to full rgb (this will clip whiter than whites, though) or 2) output 16-235 from pc and set tv to limited rgb. if second, where should i set limited rgb? in the graphics driver, video decoder, video renderer?
<sheilong>	the index of my array is 8 and the actual column is the 16th. at the index 7 of the array i have a tab character. to the left side the next character after the \t character is in the 11th column. i'm trying to make to cursor move to the left side properly when it finds a tabulation, i didn't figured out how to do it yet, anyone could give me a hint ?
<ori_b>	sheilong: no idea what you're asking.
<sheilong>	ori_b:  i'm writting a text editor, at the moment i'm writting the movement of the curson on the screen
<sheilong>	under the text
<lseactuary>	anyone know what a cavalier system is?
<sheilong>	if the cursor finds a tabulation it must walk the number of spaces proportional to the tab character
<ori_b>	sheilong: pos = pos - pos % tabsz + tabsz;
<ori_b>	should do that.
<sheilong>	ori_b:  to left movment ?
<ori_b>	yes.
<sheilong>	seems not work
<ori_b>	so, if for example, you have 'abc\t', your pos would be 3 after the 'c', and you'd want 8 after the \t.
<ori_b>	so, pos = 3.
<ori_b>	pos % tabsz = 3
<ori_b>	pos - pos % tabsz = 0
<ori_b>	pos - pos % tabsz + tabsz = 8
<ori_b>	seems to work for me.
<sheilong>	ori_b:  in my case the cursor must stop on the character before of the tab
<ori_b>	so, in the example, on the 'c'?
<ori_b>	align at tabstop, jump back tabsz, and then walk forward.
<sheilong>	if the cursor is going to the left side for example, and the the cursor is at the column 16 the character before the tabulation is at the 11th column
<sheilong>	then it must walk to the 11th
<ori_b>	yes.
<sheilong>	i'm not figuring out how to do this
<sheilong>	with some calculations i mean
<wagonboi>	what does for(;;) {  } do in java?
<wagonboi>	i see it here, near the end: http://codereview.stackexchange.com/a/88263
<sheilong>	it is a infinite loop
<ori_b>	wagonboi: infinite loop.
<wagonboi>	can it also be done with while(true)?
<ori_b>	sheilong: pos -= pos % tabsz; while c != '\t'; pos++;;
<ori_b>	wagonboi: yes.
<wagonboi>	also if it isn't too much trouble, why is an inf. loop even being used?
<sheilong>	ori_b:  seems a good idea. but i'm using two vars, one for the column and another for the array.
<sheilong>	another problem is whether i'm in the column 16 and a tab iwas found the remainder would be 0
<ori_b>	sheilong: then i don't think it's possible; you have no idea how many previous tabs there are.
<ori_b>	you'd probaby want a data structure marking tab boundaries in that case for fast access.
<ori_b>	but realistically, it's cheap to walk across the line from the start.
<ori_b>	you're looking at maybe a couple of hundred characters in human edited text
<ori_b>	you can take a million cycles per character and probably nobody would notice.
<wagonboi>	google knows me. if i type in "a", instead of suggesting apple, it suggests adjacency matrix
<ad-pyon-giert>	wagonboi: "adjacency matrix" --> weird. google suggests me "amazon", "aol", "american airlines" and "american express".
<boomdala>	has anyone read blackhat python
<boomdala>	book
<ad-pyon-giert>	wagonboi: none of which are things i'm interested in.
<wagonboi>	ad-pyon-giert, i just started learning graphs today and have been searching for dfs, bfs, topological sort, etc. so it has  learned in the past hour or two
<ad-pyon-giert>	ah.
<wagonboi>	kinda creepy now that i think about it
<ad-pyon-giert>	wagonboi: to be frank, in this particular case, it's just being useful.
<wagonboi>	true
<sheilong>	ori_b:  i thougth about every time  that tue cursor moves to right mark in a table the tab stop column, but i wonder if there is another method so i could avoid this
<ad-pyon-giert>	though i do in general boycott google search, i don't mind the fact it personalizes search results.
<sheilong>	 inf->cols = inf->cols + (inf->tab_stop - inf->cols % inf->tab_stop)  -> that's how i move to right side
<sheilong>	if i could do the inverse of this
<ori_b>	sheilong: the thing is that you're discarding information there.
<ori_b>	simplest i can think of:
<ad-pyon-giert>	so... if wanted to switch from google to another "online identity manager", what are the alternatives?
<ori_b>	for (i = 0; i < nchars && nextpos(line, i)) < pos) { newpos = nextpos(line, i); }
<ori_b>	or similar
<ori_b>	erm, missed an 'i++' there
<denommus>	ad-pyon-giert: well, in the past more sites supported openid
<ori_b>	yes, it's o(n); not sure that it's worth caring. :)
<ori_b>	n is small
<denommus>	ad-pyon-giert: but people stopped using it, sadly. it was great, though
<ad-pyon-giert>	ah.
<lf94>	ok guys monospace or proportional font for coding. go.
<ori_b>	don't care.
<ori_b>	i use proportional in acme, mono in vim.
<lf94>	you don't have a choice with vim
<lf94>	vim doesn't work without monospace font
<ori_b>	correct; so i use it.
<ori_b>	i can't be arsed to change that; it doesn't matter to me.
<lf94>	ori_b have you modified acme at all
<lf94>	i don't like how acme is tied to plan 9-related libraries.
<lf94>	posix or go home, seriously
<ad-pyon-giert>	fuck. hoare logic is frigging cumbersome. i kinda understand why most people don't want to use it. thinking carefully about these goddamn loop invariants (to make sense of the program's state after the loop ends) and variants (to make sure the loop ends).
<ad-pyon-giert>	actually, i'm not even using hoare logic, i'm using predicate transformers. and it's just as cumbersome.
<ad-pyon-giert>	i guess i should just give up and hit someone in the face instead. it's so frustrating.
<ori_b>	lf94: a little bit, and i tend to use it on plan 9.
<lf94>	vm or hardware
<ori_b>	both; have it on an intel nuc machine.
<lf94>	ori_b: and you're probably running 9front right
<ori_b>	yes.
<lf94>	ori_b: i can't pull myself to use any os that doesn't support my hardware. i also can't pull myself to write drivers to use my hardware.
<lf94>	i installed 9front on my hp mini 11 once
<lf94>	i wrote my own rc script that poked registers to change the backlight intensity
<lf94>	i had to find them in the linux intel video driver
<lf94>	that was cool
<ori_b>	geoff left for google back in september, and i have no idea how much jmk cares about keeping the public side of things.
<lf94>	apparently sources has been down for the past 2 weeks? lol
<lf94>	that seems to be the only thing ever posted on 9fans.
<lf94>	"sources down - someone reset please???"
<ori_b>	it was sometimes pretty lively, up to a few months ago.
<joe128>	are oracle certifications worth it for programming jobs
<joe128>	like sql certs or whatever
<aewffwea>	joe128: unless it's job focused on oracle dbs, probably not
<joe128>	thanks
<joe128>	is using ajax to grab stuff from mysql difficult?
<aewffwea>	joe128: almost everything in programming is difficult when you don't know it, and easy once you do
<joe128>	yah thats true
<igrir>	aewffwea: +1
<nso95>	my professor uses pico, should i switch schools?
<ad-pyon-giert>	nso95: no.
<ad-pyon-giert>	nso95: who cares what editor your professor uses, really?
<nso95>	ad-pyon-giert: i’m just kidding
<cojabo>	nah, only if he used emacs.
<ronh>	what if he used vim emulator in emacs
<cojabo>	...tolerable. but barely
<joe128>	why do people use those old editors
<freefull>	what old editors?
<freefull>	ed?
<joe128>	just use word lol you can change the font on numbers and stuff and bold it
<freefull>	i always wanted to bold the important parts of my code
<joe128>	its 2015 if your editor doesnt let you bold stuff then download microsoft word it comes with bold built-in
<ad-pyon-giert>	at least when using imperative languages.
<freefull>	say, what's the advantage of using word over stone and chisel?
<ad-pyon-giert>	freefull: dunno, stone and chisel is as wysiwyg as it gets.
<hotcoder>	if i can make money out of this gig that i'm doing right now
<joe128>	why do people use linux instead of windows
<hotcoder>	then
<hotcoder>	i'mma buy a linux machine
<hotcoder>	probably ubuntu
<freefull>	linux annoys me less than windows
<hotcoder>	i need to buy a new computer
<freefull>	significantly
<joe128>	but on lin ux you have do use the terminal and stuff
<toccatanfugue>	hotcoder: you are offered a job at dropbox, do you take it
<joe128>	how is more typing better
<johnpoison>	joe128: why not?
<johnpoison>	depends on your needs
<anj7>	morning all o/
<johnpoison>	\o
<anj7>	sup?
<hotcoder>	toccatanfugue, hell yeah
<hotcoder>	i need money
<hotcoder>	even if i dont have the skills i'll take the job
<toccatanfugue>	hotcoder: what if you work at fb and dropbox offers and wants you. do you leave fb to join dropbox
<toccatanfugue>	this is some serious career advice stuff right here
<hotcoder>	who pays more?
<hotcoder>	i think fb does
<toccatanfugue>	i hope i'm in the right channel
<toccatanfugue>	you are wrong
<hotcoder>	so i'd go with fb
<ne73>	can someone respond? http://stackoverflow.com/questions/29925472/b-trees-insertion
<ad-pyon-giert>	ne73: you only move a key up when you split a node.
<ne73>	so
<ad-pyon-giert>	ne73: the nodes of a b-tree always contain a sequence of interleaved child trees and actual entries, beginning and ending with a child tree.
<ne73>	lined up they are: 35, 39, 44, 56, 74
<ad-pyon-giert>	something like: subtree, entry, subtree, entry ... subtree.
<ne73>	i move the 44 up?
<ad-pyon-giert>	also, you split nodes into two, not into three.
<ad-pyon-giert>	and, yes, 44 becomes an entry of the parent node.
<ne73>	ad-pyon-giert, so the answer becomes this? http://i.imgur.com/mktqgfi.png
<rindolf>	hi all. how are you?
<sadale>	hi :#
<ad-pyon-giert>	ne73: no
<sadale>	:3 *
<ad-pyon-giert>	ne73: b-tree entries are always stored in-order.
<ne73>	how so?
<ad-pyon-giert>	ne73: also, all branches of a b-tree always have the same height.
<ad-pyon-giert>	ne73: in-order simply means that, given two distinct entries, the one that comes "to the left" is less (or at least not greater) than the one that comes "to the right".
<ad-pyon-giert>	*sorted *in-order
<ne73>	didn't i sort it that way though?
<ne73>	34 childs 8 and 23, to its left
<ne73>	to 44's left, it childs 35 and 39.
<ne73>	to 44's right, it childs 56 and 74
<ne73>	to 78's right it childs 80
<ne73>	isn't this ordered properly?
<ne73>	things on the left being less than or equal to the parent, and things to the right being greater than the parent
<ad-pyon-giert>	ne73: 8 is stored to the right of 12.
<ad-pyon-giert>	ne73: which clearly violates the in-order invariant.
<ne73>	damn it
<ne73>	that is something i'ev stupidly overlooked
<ne73>	sorry
<ne73>	i'm stupid
<ad-pyon-giert>	you said it yourself. :-|
<ad-pyon-giert>	jk
<rindolf>	sadale: sup?
<ne73>	how about now? http://i.imgur.com/tejfqmu.png
<sadale>	rindolf, i've done my first one day gamedev project yesterday :3
<ne73>	you've said something interesting earlier
<ne73>	that branches should always have the same height.
<ne73>	looking at the left, my eight's step
<ne73>	that was wrong?
<rindolf>	sadale: yes, you told me about it.
<ad-pyon-giert>	ne73: your tree isn't balanced.
<ad-pyon-giert>	ne73: some branches are taller than others.
<ne73>	as the node with 34 and 78 had 3 children
<sadale>	rindolf, oh. i remember. yep. i did told you :3
<ne73>	while the node with 12 and 15 had no children
<rindolf>	sadale: s/i did told/i did tell/ (i make this mistake too).
<ne73>	yes, that makes it unbalanced? but does it void it being a b-tree ?
<ad-pyon-giert>	ne73: a b-tree is always balanced, goddammit.
<ne73>	sorry
<ne73>	when i showed others my answer, at the eigth's step. no one told me this
<ne73>	so i went on
<ad-pyon-giert>	in fact, that's the whole point to the weird insertion and deletion algorithms that always grow or shorten the tree at the head.
<ne73>	thinking it was right.
<ne73>	i'll have start all over now, right?
<rindolf>	ne73: are you nes173?
<ne73>	yes
<hotcoder>	lol
<ad-pyon-giert>	nes173: by the way, the downvote isn't mine.
<ad-pyon-giert>	stack overflow in general tends to be hostile to questions that aren't about technology per se.
<nes173>	i deserve to be downvoted, in any case.
<nes173>	lacking so many of the essentials.
<nes173>	i'm grateful anyone would care to give me their time.
<hotcoder>	so just for kicks
<hotcoder>	i tried to go into #feminism
<hotcoder>	and i got banned immediately
<sadale>	hotcoder, what did you do?
<ronh>	why would you want to go there..
<hotcoder>	sadale, literally nothing
<hotcoder>	ijust joined in
<hotcoder>	and i got banned
<sadale>	interesting. let me try :o
<hotcoder>	and i got this message
<grug>	sigh
<hotcoder>	"you are not authorized to be on this channel"
<nes173>	so far, i'm correct, ad-pyon-giert, right?
<sadale>	hotcoder, funny. same crap happen here
<nes173>	http://i.imgur.com/6avuhnh.png
<sadale>	"you have been kicked from #feminism by chanserv (you are not authorized to be on this channel)"
<nes173>	with this ^
<sadale>	and got banned
<dogpolice>	i think it's a joke.
<ad-pyon-giert>	nes173: that much is a valid b-tree of degree 5.
<nes173>	cut the 80 by accident
<nes173>	ok, i'll move on forward
<ad-pyon-giert>	nes173: i wouldn't manually run the algorithm - it's just too tedious.
<hotcoder>	lol
<hotcoder>	its stupid lol
<hotcoder>	idk why i even tried to go on there
<ad-pyon-giert>	nes173: you're being asked to produce a valid b-tree containing the given elements, but you aren't being asked to produce that b-tree using the usual b-tree manipulation algorithms.
<nes173>	ok, now, wanting to add 87, i'd have to do what? http://i.imgur.com/pu7hilm.png
<ad-pyon-giert>	hotcoder: what channel?
<nes173>	i meant 78*
<ad-pyon-giert>	nes173: first you add it to the right leaf.
<ad-pyon-giert>	nes173: of course, this results in the leaf being "overflowed".
<anj7>	hey how can i host two website on server?
<nes173>	the numbers are, (23, 34, 56, 78, 80)
<ad-pyon-giert>	nes173: indeed.
<nes173>	i raise the middle one, 56 to be with 22 up there?
<ad-pyon-giert>	nes173: so you split it into two halves. and the value exactly at the middle (56, in this case) is moved up to the parent
<hotcoder>	ad-pyon-giert,  #feminism
<ad-pyon-giert>	hotcoder: oh, i'm there.
<ad-pyon-giert>	let me check.
<ad-pyon-giert>	hotcoder: wait, #feminism or ##feminism?
<jfjhh>	anj7: have the http servers running on different ports, then have an outside service redirect certain domains to those ports on that server
<anj7>	jfjhh: i want to use virtual hosts
<anj7>	jfjhh: i use apache2
<hotcoder>	ad-pyon-giert, first one
<nes173>	so, it becomes this ad-pyon-giert ? http://i.imgur.com/p6iknmp.png
<ad-pyon-giert>	hotcoder: ah, then i'm not there.
<hotcoder>	ok
<ad-pyon-giert>	hotcoder: it's probably a channel for ops/insiders/whatever.
<ad-pyon-giert>	nes173: indeed.
<ad-pyon-giert>	nes173: but, really, as i said, there are much better ways to answer this question than to manually run the b-insertion algorithm over and over.
<hotcoder>	ok
<hotcoder>	:)
<nes173>	what would you suggest? though, i think this is the way they want such questions answered.
<nes173>	i want to thank you very much for what you've told me.
<ad-pyon-giert>	don't thank me, i'm just bored.
<nes173>	about the b-tree needing to be balanced.
<nes173>	this was very useful.
<nes173>	and i didn't know that
<ad-pyon-giert>	if balancing didn't matter, you could just use a regular binary search tree. it's a lot simpler, but all its operations are worst-case o(n).
<hotcoder>	ok i went to #feminism and immediately got quieted
<hotcoder>	i dont even know why
<ad-pyon-giert>	we accept some additional complication, e.g., avl trees, red-black trees, b-trees, whatever, because we want to reduce the computational complexity of operations.
<ad-pyon-giert>	hotcoder: oh, i should've warned you not to poke ##feminists in the eye.
<grache28>	related to #feminism, this was linked to a stackoverflow entry i was reading: http://parenting.stackexchange.com/questions/19714/i-want-to-expose-my-5-year-old-daughter-to-boys-and-girls-toys-equally-but-she
<nes173>	after adding 35: http://i.imgur.com/d6igjy3.png
<ad-pyon-giert>	nes173: looks good.
<stumbles>	https://github.com/imstumbles/pymasterlock fresh code for ya
<hotcoder>	ad-pyon-giert, i did nothing
<ad-pyon-giert>	hotcoder: i know.
<hotcoder>	all i did was mention i got banned outright in #feminism
<ad-pyon-giert>	hotcoder: i just read what happened there.
<hotcoder>	then asked why
<hotcoder>	ok...
<ad-pyon-giert>	hotcoder: it's worse than ##java -- that alone says a lot.
<hotcoder>	yeah
<hotcoder>	##java are full of assholes
<hotcoder>	cant lie
<grug>	hotcoder is salty because he got banned from there earlier
<ad-pyon-giert>	lol
<grug>	for being a moron
<grache28>	what do you think of ##c?
<nes173>	and after adding 77: http://i.imgur.com/9ynkdsp.png
<ad-pyon-giert>	grache28: ##c can be hostile, if you don't ask questions the smart way... but it's nowhere as hostile as ##java.
<grache28>	ad-pyon-giert: really??
<ad-pyon-giert>	grache28: yes.
<delta-nry>	protip: consult your ub lawyer before entering
<mike802>	does ##java still have a problem with javafx?
<grache28>	that's not been my experience, but to be fair i don't go to ##java much
<hotcoder>	grug you're the salty one
<grug>	how?
<nes173>	hmm
<ad-pyon-giert>	grache28: well, in any case, to a certain extent it's a matter of being sensitive to the culture. for example, if you ask a question in ##c that was obviously formulated with a c++ mindset, don't be surprised if the reactions are hostile.
<nes173>	the doozy would be after adding 7
<ad-pyon-giert>	grache28: not saying that their attitude is good, but c users tend to *really* hate c++.
<nes173>	this will require the most thought
<grache28>	but when i do it's usually to insult the language and ask why it's doing something so stupidly (i'm forced to use it)
<hotcoder>	grug because you're here calling me names
<hotcoder>	although to be fair
<hotcoder>	i can understand why java coders are mad
<hotcoder>	java is so frustrating
<ad-pyon-giert>	grache28: well, no matter how much we talk about technologies being just tools, the fact is that programmers get emotionally attached to what they used.
<hotcoder>	plus they dont get women cause they treat them like objects hehe
<hotcoder>	:d
<ad-pyon-giert>	grache28: because they need to justify (to themselves) their investment on learning these tools.
<grache28>	ad-pyon-giert: yes yes, but in ##java they seem almost apologetic at times
<ad-pyon-giert>	grache28: to be frank, as much as i hate java, even i think that going to ##java just to bitch about how crappy java is is kinda being an asshole.
<hotcoder>	oh i never did that ad-pyon-giert
<grache28>	again, in my short experience with ##java
<ad-pyon-giert>	hotcoder: not saying that you did.
<ad-pyon-giert>	hotcoder: i'm commenting on what grache28 just said.
<johnpoison>	java coders are mad... what about c++ devs then :-d
<delta-nry>	its complicated
<hotcoder>	i code java myself. and i love coding it. but i do know that there are some things it needs to fix :3
<ad-pyon-giert>	johnpoison: my experience in ##c++ is that it's less hostile than either ##c or ##java. but it probably has more to do with the fact that i know c++ better than either c and java - and thus ask less stupid questions.
<ad-pyon-giert>	either c or* java
<ad-pyon-giert>	dammit, today i'm not getting my conjunctions right!
<grache28>	ad-pyon-giert: well i don't go there to complain, i go there because i don't understand something, which is normally because i fill the gaps of my java knowledge with c (which i only know slightly better).
<grache28>	ad-pyon-giert: as you've said, if you come with a c++ pov in ##c they can get hostile, in ##java that's not been *my* experience
<ad-pyon-giert>	grache28: by c++, i mean the full power of c++: raii, template metaprogramming, const correctness (for both optimization and type safety purposes), etc. i don't think ##java will take it kindly if you ask how you can replicate those benefits in java.
<grache28>	ad-pyon-giert: yea in #c++ i've been told that my "to the metal" approach was wrong, but i'd agree they're gently compared to ##c
<grache28>	s/gently/gentle/
<nes173>	i've solved it completely. can you tell me if i went about it the right way? is the answer correct ad-pyon-giert ? http://i.imgur.com/dznrtmv.png
<ad-pyon-giert>	nes173: it's a valid b-tree.
<nes173>	thank you very much ad-pyon-giert
<nes173>	i've learned much from talking to you
<ad-pyon-giert>	heh
<keepguessing>	anyone pursuing non-degree professional courses at stanford?
<nes173>	it's a valid tree, but is it right how it is, considering the order of insertions?
<nes173>	is every number where it's supposed to be?
<ad-pyon-giert>	nes173: i'm not willing to perform all those b-tree insertions myself. it's just too tedious. but you could write a program to do it.
<ad-pyon-giert>	preferably in a language like python - it's very suitable for imperative throwaway scripts.
<ad-pyon-giert>	each node is just two lists: a list of children (of length "n") and a list of values (of length "n-1").
<hotcoder>	ok they actually let me into ##feminism
<hotcoder>	one of the mods is really nice
<grache28>	hotcoder: is it actually about feminism?
<hotcoder>	yes of c
<hotcoder>	ofc
<hotcoder>	why wouldnt it be
<nes173>	ok
<nes173>	this is a b-tree right?
<nes173>	a normal b-tree?
<grache28>	hotcoder: some people think feminism is silly, most on /. for example
<nes173>	wow, no tolerance at #feminism
<stumbles>	#feministlivesmatter
<grache28>	of course not, they've obviously got a chip on their shoulder
<nes173>	was banned within 3 minutes
<xmppwocky>	actually it's about ethics in gaming journalism
<ad-pyon-giert>	stumbles: lmao
<holymonkyblitz>	should you be able to define the words that you use?
<grache28>	what's next, an organization for men who are under 150cm? "short men have been opressed for centuries, shorter men on average make x% less than men over 150cm.."
<nes173>	i said, women should respect the natural order, and it was noble to do that, to birth and care for children
<xmppwocky>	lol no wonder you were banned
<holymonkyblitz>	sup?
<ad-pyon-giert>	is it too much to ask people not to behave in a stupid manner? :-|
<myrl-chan>	ad-pyon-giert: what happened? :o
<holymonkyblitz>	i guess there's an discussion already happening in here.
<holymonkyblitz>	-a
<ad-pyon-giert>	myrl-chan: pls wait
<myrl-chan>	ad-pyon-giert: also, my dad was going to pay for the internet, but he was waiting for me to wake up... and i woke up at noon. lol
<ad-pyon-giert>	myrl-chan: lol
<ad-pyon-giert>	myrl-chan: pm.
<dogpolice>	sleeeeep..
<nes173>	ad-pyon-giert, how are b-trees and b+trees, and b* trees different?
<ad-pyon-giert>	nes173: b-tree nodes have one more child than they have entries.
<ad-pyon-giert>	nes173: b+ tree nodes have as many children as they have entries, but they also keep a pointer to the right sibling.
<nes173>	yes, the "a non-leaf node with k children contains k−1 keys." rule
<ad-pyon-giert>	nes173: also, the elements of a b+ tree are always stored in the leaves.
<ad-pyon-giert>	nes173: whereas the elements of a b-tree can be stored in any node.
<ad-pyon-giert>	nes173: b* trees are the same as b-trees, but with a different rebalancing rule, which guarantees that nodes are at least 2/3 full, rather than at least half full.
<nes173>	as many children as keys?
<ad-pyon-giert>	nes173: for example, a b-tree node with 4 entries will have 5 children. whereas a b+ tree node with 4 entries will have 4 children and 1 pointer to its right sibling.
<myrl-chan>	binomial trees are pretty fun.
<ad-pyon-giert>	myrl-chan: b-trees (and variants thereof) are a lot less fun. but they are a necessity.
<myrl-chan>	ad-pyon-giert: also, i tried programming on paper, it doesn't seem as hard as i expected it to be.
<ad-pyon-giert>	i mean, b-trees are simple enough, but the variants can be really crazy.
<ad-pyon-giert>	myrl-chan: it isn't hard.
<ad-pyon-giert>	and it's actually a lot of fun!
<myrl-chan>	i bought a notepad.
<ad-pyon-giert>	:-o
<grache28>	why?
<nes173>	like this ad-pyon-giert ? http://i.imgur.com/bocwsus.png
<nes173>	something is wrong with this
<ad-pyon-giert>	grache28: a physical notepad can be very convenient.
<nes173>	how the 123 doesn't point to anything
<ad-pyon-giert>	grache28: taking notes on a computer constrains you a lot.
<ad-pyon-giert>	grache28: you can't easily draw (nicely-looking) diagrams on a computer.
<myrl-chan>	...
<dogpolice>	it's true.
<dogpolice>	sketching is the fun part of thought.
<myrl-chan>	what the fuck did i do.
<ad-pyon-giert>	nes173: yes.
<ad-pyon-giert>	nes173: to be frank, i prefer to implement b+ trees with all rightmost nodes at each level not pointing anything to their right. that way, it's easier to prove that their invariants hold.
<nes173>	so, a node in a b+tree can't get full, as the last part of the node has to be a pointer?
<ad-pyon-giert>	pointing to* anything
<grache28>	notes yes, however programming languages entire set of valid characters are on most (if not all modern??) keyboards
<ad-pyon-giert>	nes173: but i guess most people care first and foremost about efficiency, not mathematical elegance. :-|
<dogpolice>	https://www.youtube.com/watch?v=4qwtbbk7_4q some good music..
<ad-pyon-giert>	myrl-chan: ?
<nes173>	you're a dreamer ad-pyon-giert
<ad-pyon-giert>	nes173: not really.
<nes173>	a true soul
<xeno>	nes173: he's a dreamer, but his dreams are exclusively mathematical elegance :)
<grache28>	nes173: i'm not being sarcastic, if he's a true soul, what's an example of a false soul?
<nes173>	in older times, you'd have been a shaman, ad-pyon-giert.
<ad-pyon-giert>	nah.
<grache28>	(i'm guessing that's something from your language that doesn't directly translate into english)
<nes173>	indispensable insight, but you walk and die alone.
<nes173>	grache28, truths can't be communicated. true souls know what it means to be a true soul.
<rindolf>	neither do i.
<nes173>	time will clear your confusions, ad-pyon-giert
<ad-pyon-giert>	it's just that i care about beauty - mathematical beauty, artistic beauty, feminine beauty, etc.
<myrl-chan>	my ~ was remounted as read-only...
<myrl-chan>	mini heart-attack...
<ad-pyon-giert>	myrl-chan: lo
<ad-pyon-giert>	lol*
<matoro>	can anyone understand people that are really zen ? what is their motivation, their mindset, their claim and main beliefs ? is there any message they wish to pass to other people about something they discovered to be awesome ?
<matoro>	what is the message, or moral or lesson ?
<rindolf>	matoro: what?
<rindolf>	matoro: how is this related to programming?
<myrl-chan>	matoro: zen... zen wakaranai?
<grache28>	i'd guess that ad-pyon-giert understands binary trees because he used the time he saved by not spewing sycophantic comments on irc to read about them
<ad-pyon-giert>	myrl-chan: haha
<matoro>	myrl-chan english please
<myrl-chan>	ad-pyon-giert: i couldn't help it!
<grache28>	or he could be a shaman..
<myrl-chan>	matoro: i was making a joke about "zen" and "zenzen wakaranai" means "cannot understand at all"
<nes173>	matoro, there are greater beauties you'll never be capable of observing, until you've put what's right and true before yourself.
<matoro>	nes173 yes, but isn't beauty a bit subjective
<matoro>	some find math beautiful
<matoro>	othes find music beautiful
<matoro>	others find dance beautiful
<nes173>	beauty is objective.
<myrl-chan>	matoro: but i find you beautiful. :>
<matoro>	exactly
<nes173>	not all are as beautiful, and so, not all see as beautifully.
<sadale>	s/found/find/
<matoro>	so its not sound to say that there are greater beauties you'll never be capable of observing, until you've put what's right and true before yourself.
<dogpolice>	beauty is the most amazing case of synesthesia known to man.
<nes173>	it is sound.
<matoro>	because you are assuming that somehow that beauty you are refering in that sentence, will be beautyfil to me
<matoro>	or to any other
<matoro>	it doesnt make sense to say "greater beauties", but only "things i find a lot beautiful"
<nes173>	once they've become beautiful, they can witness beauties greater than themselves.
<xeno>	nes173: not only can't truths be communicated, but it's a fair hypothesis that they can't truly be known too...
<myrl-chan>	shit's so deep, i can see adele rolling in it.
<matoro>	nes173 oh wait, you said beauty is objective ?
<matoro>	how so ?
<myrl-chan>	subjective people think their point is objective. true shit.
<nes173>	the good, the beautiful, the true.
<matoro>	how is beauty objective if different people find beauty in different things
<nes173>	different people are differently beautiful.
<dogpolice>	again... beauty is the most amazing case of synesthesia known to man.
<nes173>	and so, see beauty to differing degrees.
<dogpolice>	it's our cross-wiring.
<matoro>	but beautiful is always respective to someone
<matoro>	its not like, a space is three dimension
<matoro>	which is objective
<matoro>	the predicate "x is beautiful"
<matoro>	is subjective
<matoro>	unlike the predicate "x is three-dimensional"
<nes173>	dogpolice, a miracle doesn't cease being a miracle after having been explained.
<matoro>	which is objective
<dogpolice>	nes173: what.. the hell does that mean.
<grache28>	dogpolice: it means don't waste your time responding to him
<nes173>	how do you know it's three dimensional, and that we are not all similar flawed in how we perceive things, and so all agreed on what particular inputs should mean.
<myrl-chan>	grache28: boom.
<dogpolice>	shocking.
<stumbles>	fuck my back is killing me
<stumbles>	oops wrong chan
<nes173>	preferences are objective, determined by biology and past experiences.
<ad-pyon-giert>	stumbles: get an ergonomic chair?
<stumbles>	i wish
<nes173>	when it is objectively raining outside, people understand this subjectively.
<stumbles>	i need to
<dogpolice>	nes173: those words don't mean what you think they mean.
<nes173>	but their understandings don’t differ so drastically, generally, as to have them regard them as subjective.
<matoro>	yeah but if those so called "preferences or opinions" turn out to be opinions of every person in the world, they are not so much preference or opinions anymore
<matoro>	for instance, the argument "if all humans are mortal and socrates is human, then socrates is mortal"
<matoro>	is objective true
<matoro>	its not a preference, or an opinion
<dogpolice>	these messages are a great example of what stupid people will do with thought.
<myrl-chan>	ad-pyon-giert: i need an ergonomic computer with an ergonomic screen and an ergonomic hard drive.
<grache28>	dogpolice: +1
<nes173>	you'd largely agree with those around you, that it's raining. limited intelligence and language prohibits you from communicating partial disagreements(unsuspected to exist, as rarely communicated, and as of small perceptual variance, reinforcing views of consistency) adequately.
<dogpolice>	night crazies.
<dogpolice>	cooties.
<myrl-chan>	dogpolice: i know exactly what you mean. lol
<nes173>	“it’s raining outside” becomes “it’s raining outside, from what i understand of things happening, events, raining and outside”.
<nes173>	less(and less varying) factors govern your perceptions of the objective, than your preferences. and so, subjective and objective differ by degree, not type.
<ad-pyon-giert>	matoro: arguments aren't "true", they can only be "sound". what can be said to be "true" is a proposition, like the premise(s) or the conclusion(s) of an argument.
<matoro>	true is a general concept
<grache28>	^
<matoro>	it can apply to arguments
<ad-pyon-giert>	(well, they can be "valid", if they are "sound" and the premises are "true".)
<matoro>	to propositions
<matoro>	nes173,  couldn't we set up an objective meter, such tha the more uniform is a mental state in the universe we experience, the more objective it is
<nes173>	the "it's your opinion maaan" people just want standards destroyed. as having none, would elevate themselves.
<matoro>	and the less uniform, the less objective it is ?
<matoro>	then,  the mental-state that people attribute to experience of beauty would be really subjective
<matoro>	because theya re not uniform at all
<nes173>	yes, matoro, that's what objective is.
<nes173>	our biggest agreements, are what we consider objective.
<myrl-chan>	i think you guys should stop watching weird movies. it's damaging your brain.
<matoro>	but the mental-state concerining the validity of the argument i just gave you would be pretty much uniform
<ad-pyon-giert>	myrl-chan: ikr
<matoro>	nes173 but there isnt objective or subjective like i proposed, but a objectivity scale
<nes173>	how we're built, lets us all view rain pretty much the same way.
<matoro>	and beautiful-sensation is really down on that scale
<nes173>	so we largely agree, it's then "objective"
<myrl-chan>	i love the 21st century, where everyone becomes a philosopher.
<matoro>	right, but for beautiful-sensation is down the scale, don't you agree ?
<matoro>	by your observations of the world
<xmppwocky>	nes173: do you actually know we all experience sensation the same
<nes173>	some things are eternal, and universal. like truth, goodness and beauty
<grache28>	myrl-chan: if the whole world agrees that kevin bacon is a dreamboat it doesn't automagically mean that it's objective, read the definition of objective and subjective
<myrl-chan>	grache28: you knew exactly what i was asking. thank you.
<nes173>	these transcend the subjectivity of our perception. they are perfect, we are imperfect for perceiving them imperfectly. the imperfections of our perceptions vary, and so it is "subjective"
<matoro>	grache28 how is it not ? how would you define absolute objectiveness ?
<matoro>	isolated from all conscious beings ?
<xmppwocky>	nes173: so what is beauty then?
<xmppwocky>	also are you really going to say that *goodness* is objective
<matoro>	i don't understand why you are throwing words like perfectness, beautiness like they had an absolute meaning and were 100% objective
<matoro>	can you explain ???????????
<matoro>	why are you doing that ?
<myrl-chan>	guys.
<xmppwocky>	like i can see claiming that objective truth exists
<xmppwocky>	but  objective beauty and goodness? seriously
<grache28>	a proposition is generally considered objectively true (to have objective truth) when its truth conditions are met and are "bias-free"; that is, existing without biases caused by, feelings, ideas, etc. of a __sentient subject__.
<ad-pyon-giert>	myrl-chan: "everyone becomes a philosopher" --> well, at least spewing pseudo-philosophical nonsense is much less harmful than spewing uninformed nonsense about technical topics.
<myrl-chan>	move this to ##philosophy please. or some similar channel.
<nes173>	it can't be communicated, without adding to it that which is not inherent to it. that's as of our limited capabilities and language.
<myrl-chan>	ad-pyon-giert: people who claim that "it's the deceleration that kills, not the acceleration" should meet my friend called black hole.
<ad-pyon-giert>	myrl-chan: lol
<matoro>	i think some people get too much involved in their own emotions and experience and somehow start thinking that they are the absolute
<matoro>	now i'm understanding what this whole thing about zen is about
<myrl-chan>	ad-pyon-giert: i think the proper statement should be "the difference in force/velocity."
<nes173>	zen is about seeing the world, without the filter of yourself.
<vendu>	good morning :)
<ad-pyon-giert>	myrl-chan: the sudden change in momentum?
<myrl-chan>	good morning, vendu.
<ad-pyon-giert>	s/in/of/
<matoro>	nes173 what the fuck
<ad-pyon-giert>	vendu: hello.
<vendu>	morning myrl-chan :)
<matoro>	what is the difference between me and the world
<vendu>	hey ad-pyon-giert :)
<myrl-chan>	ad-pyon-giert: yeah.
<matoro>	between me and nature ?
<nes173>	people can't stop thinking of the world in their terms
<nes173>	it all revolves around you.
<matoro>	as far as i know i'm made of quantum field excitations
<matoro>	many
<matoro>	nes173, i'm asking what evidence do you have to believe that there is difference in substance between you and the world
<nes173>	realizing and accepting your insignificance. the world is fine without your stamp.
<nes173>	that is when you transcend
<matoro>	i'm part of the world
<myrl-chan>	matoro: i dunno about you, but i don't think i taste like shit.
<matoro>	im some of its localized excitations
<myrl-chan>	nor dirt and water.
<matoro>	so are you
<matoro>	what sense would it make to think that ican transcend the world ?
<nes173>	through meditation, i stroll the spirit realms
<matoro>	why do i stop existing then whenever my brain goes into rest mode ?
<nes173>	my essence leaves the physical plane
<matoro>	rest mode = sleep
<matoro>	so your essence decides to stop existing
<matoro>	whenever that localized part of your brain goes to rest mode ( sleep )
<nes173>	in an hour of the night i hear summoning voices, and wake from my funeral sleep
<matoro>	then it starts existing again whenever that localized part gets more active
<nes173>	on cryptic journeys unto the other side
<matoro>	nes173 well, all makes me believe those allucinations are indeed experience by you, but they have an explanation , namely,  brain fucking in an irregular manner plus lots of memories of movies
<nes173>	enlightened into a blacker dark, for there are views in darkness
<matoro>	and spiritual gurus
<matoro>	all getting mixed up
<matoro>	the "i" is an ilusion
<matoro>	there is no self
<nes173>	i've seen eternity opens
<matoro>	or free-will
<nes173>	circling above in times before time
<grache28>	what is the time before time?
<kino`>	-00:01 am
<nes173>	spiritual voices called me through chilling smoke, frozen visions under a blasting sky
<mvaenskae>	cheers, anyone in here can help me on a quick c problem? :) how would i correct define a variable of type "const char"? i tried {const char str = "some_string";} but clang warns of incompatible pointer to integer conversion
<matoro>	poetry is beautiful, but we should remember this is jsut an invention
<myrl-chan>	guys, how can mirrors be real if our eyes are not?
<matoro>	what do you mean by eyes not being real
<ad-pyon-giert>	myrl-chan: sometimes i wonder if we should bring postmodern philosophers here, just to watch this happen: https://xkcd.com/451/
<ad-pyon-giert>	myrl-chan: last pane
<myrl-chan>	mvaenskae: const char* lol
<nes173>	spiritless, i layed on cryptic stones
<myrl-chan>	mvaenskae: const char is an 8-bit int. const char* is an array of 8-bit ints. otherwise known as a bytestring.
<nes173>	i remember when the sun drank its weight of water
<nes173>	matoro, the world will never realize what i've seen
<matoro>	obviously not, the same way that if someone solves goldbach conjecture and then imediately dies
<myrl-chan>	ad-pyon-giert: lol
<matoro>	the world will not experience the solution
<nes173>	i remember when i died
<matoro>	until someone new solves that
<nes173>	punished, in the chamber of eyes
<myrl-chan>	ad-pyon-giert: i should try that.
<dtscode>	hey guys... im wanting to implement an asynchronous interface similar to something like c++'s boost.asio. does anyone have any resources to get me started
<nes173>	they asked me to show them my allegiance. told me to munch myself and be their servant forever
<dtscode>	>
<nes173>	with tears in my eyes, i started to masticate.
<nes173>	those whispering eyes were no more silent, laughing at my fate.
<matoro>	nes173 you knoiw, in life, we can make many choices ... we can "choose" ( i know there is no free-will, it's just a matter of speech )  to masturbate, to eat, to kill people, and we can choose to know things about the world. but there is one thing some people forget whenever they choose to know about the world , and that thing is logic, critical thinking and evidence
<ad-pyon-giert>	dtscode: doesn't libevent already exist?
<matoro>	now, apparently you are describing the world
<matoro>	how the world is
<nes173>	free will is a delusion.
<matoro>	so you should use logic,evidence and science
<nes173>	we are biological robots.
<matoro>	but you are not using
<dtscode>	ad-pyon-giert, yeah
<dtscode>	i want to write my own though
<matoro>	so, why are you doing that ?
<dtscode>	just for learning purposes
<ad-pyon-giert>	dtscode: ah.
<nes173>	i visited many worlds
<matoro>	you can choose to describe your experiences, and in that way you don't need to use logic or anything
<myrl-chan>	i think it's impossibel to do asynchronous interfaces without syscalls.
<matoro>	but if you are trying to describe the shared reality, you need to use all those things i mentioned
<nes173>	i've been to the planet that once used to absorb flesh in order to achieve divinity and immortality
<dtscode>	myrl-chan, i can use syscalls
<nes173>	suffocated to the flesh that it desired
<matoro>	else, none you will be in cognitive dissonance and none will agree with you
<mvaenskae>	myrl-chan: pardon, i totally failed to see that >.>
<mvaenskae>	myrl-chan: i missed the point(er) on that one
<myrl-chan>	mvaenskae: ba dum tss
<nes173>	the sixteenth six tooth son of fourteen four regional dimensions
<nes173>	their milt and spawn gave me life of various alterations
<anj7>	hey can anyone help me to set up virtual hosts?
<dtscode>	with what webserver?
<ad-pyon-giert>	myrl-chan: is it acceptable for mangaka to use the same character designs over and over across multiple series?
<myrl-chan>	ad-pyon-giert: i don't really pay much attention to character designs unless it's cute.
<ad-pyon-giert>	ahñ
<ad-pyon-giert>	ah.*
<kino`>	some mangakas do that
<kino`>	see the one that made fullmetal alchemist
<amazonian>	why can't i operate on a queue from a thread?
<amazonian>	i'm using blockingqueue
<dtscode>	what language?
<amazonian>	java
<amazonian>	sorry, forgot to mention
<ad-pyon-giert>	what do you mean "can't"?
<amazonian>	ad-pyon-giert: i mean i try to enqueue something and i can't see the function to add anything to the queue
<dtscode>	ad-pyon-giert, http://dictionary.reference.com/browse/cannot
<amazonian>	ad-pyon-giert: when i write to enqueue outside of the thread, however, i can see the function
<myrl-chan>	...push? enqueue?
<ad-pyon-giert>	myrl-chan: plastic memories - what subbing group?
<myrl-chan>	ad-pyon-giert: i just use hs.
<ad-pyon-giert>	ah.
<myrl-chan>	ad-pyon-giert: i'm considering commie for next season though.
<ad-pyon-giert>	horriblesubs is annoying because they don't partition the video in intro / op song / first half / second half / ed song / next episode's preview.
<amazonian>	omg
<amazonian>	i realize what was going on...
<amazonian>	i'm such an idiot...
<amazonian>	wow
<amazonian>	i overwrote the variable elsewhere
<ad-pyon-giert>	lol
<dtscode>	its ok. we all come to the realization that java is bad
<dtscode>	oh
<dtscode>	nmd
<dtscode>	youre not there yet
<amazonian>	no, i hate java
<amazonian>	i am writing this program against my will
<dtscode>	oh goody
<amazonian>	yeah
<dtscode>	the best kind of programming
<ad-pyon-giert>	dtscode: "best kind" --> "against you will"?
<dtscode>	i was being sarcastic :p
<ad-pyon-giert>	i guess it's "good" in the sense that it provides an excuse for delivering a half-assed result.
<dtscode>	hows the c coming?
<myrl-chan>	ad-pyon-giert: partition?
<adsc>	c comes after b
<dtscode>	bcpl :d
<ad-pyon-giert>	myrl-chan: i don't remember the technical name.
<ad-pyon-giert>	myrl-chan: well, the thing is that it allows you to more conveniently jump between the different parts of a video.
<myrl-chan>	ad-pyon-giert: ah, cool.
<adsc>	what, you don't watch the complete video every time? you heretic
<myrl-chan>	ad-pyon-giert: i just repeatedly mash the right button. lol.
<ad-pyon-giert>	heh
<adsc>	op song is the most important part of every video
<myrl-chan>	adsc: opening songs get annoying after the third time, mostly when marathoning...
<adsc>	the only thing you are allowed to skip (if at all) is the next ep preview
<myrl-chan>	oh my god, black borders on wallpapers. my eyes
<adsc>	the rest is mandatory
<ad-pyon-giert>	myrl-chan: depends on whether the song is catchy. but, yeah, most of the time, op and ed songs are just annoying.
<ad-pyon-giert>	myrl-chan: huh?
<ad-pyon-giert>	myrl-chan: i always find wallpapers exactly the same size as my screen resolution.
<ad-pyon-giert>	otherwise, the result would hurt my eyes.
<ad-pyon-giert>	speaking of which, it's been a long while since i last switched wallpapers. i need to find a new one.
<adsc>	wallpapers that are of the same ratio, but much larger can work fine as desktop background
<adsc>	i always have 50+ wallpapers in rotation, this way i don't get sick of any one ever
<ad-pyon-giert>	ah, what i do is obsess with a single wallpaper/song/anime/manga/whatever for a while, until i get tired of it, and only then move on to the next.
<kino`>	hah, i get you
<myrl-chan>	ad-pyon-giert: that's what i do too.
<ad-pyon-giert>	:-)
<kino`>	but right now, my windows knows it's pirated so i've got a black background.
<myrl-chan>	lol
<ad-pyon-giert>	i thought black backgrounds were so last decade.
<ad-pyon-giert>	but apparently i was wrong.
<kino`>	oh i definitely had something
<myrl-chan>	ad-pyon-giert: pirated windows displays black bg and at the bottom-right(or left?) it says "this version of windows is pirated" or something similar.
<ad-pyon-giert>	myrl-chan: yeah, something like that.
<adsc>	there is too much great art on deviantart to just look at one single wallpaper for an extended amount of time
<ad-pyon-giert>	bottom-right.
<myrl-chan>	i thought public shaming were so last millenia....
<ad-pyon-giert>	myrl-chan: i know it too well because i made the mistake of sharing my legal windows 7 key with someone else.
<myrl-chan>	ad-pyon-giert: lol
<myrl-chan>	ad-pyon-giert: what happens if you share a key?
<ad-pyon-giert>	myrl-chan: well, whoever registers the key first gets it.
<ad-pyon-giert>	myrl-chan: and i wasn't in a hurry to register it, or even install windows 7 at the moment.
<ad-pyon-giert>	myrl-chan: since it was an academic license, i thought i could share it with another student as well.
<ad-pyon-giert>	but apparently what i had to do is tell him to get an academic license of his own.
<myrl-chan>	ad-pyon-giert: did he get an academic license of his own afterwards? (and gave it to you)
<ad-pyon-giert>	(which he could've done. academic licenses were being distributed for free at my university.)
<ad-pyon-giert>	myrl-chan: you can't "give back" a windows key.
<myrl-chan>	ad-pyon-giert: i mean the new academic license.
<ad-pyon-giert>	myrl-chan: well, i knew he wasn't going to do it.
<myrl-chan>	ad-pyon-giert: welp
<ad-pyon-giert>	because "too much of a hassle", and nobody has enough time.
<myrl-chan>	psh. it's windows anyway.
<ad-pyon-giert>	anyway, i got a windows 7 license elsewhere. (still not paying anything.)
<kino`>	i've got a win 8 one
<kino`>	but i haven't the heart of re-installing
<kino`>	and i prefer the theme of my win7 anyway.
<adsc>	there is definitely too much windows talk going on for my tastes, going into hibernation in 3...2...1...psssssh
<txdv>	windows is so good
<kino`>	he's gone, let's talk about haiku!
<txdv>	every time i start it, it rapes my hard disk for 30 minutes before i can start using it normally
<myrl-chan>	lol
<txdv>	why? what is the cause? no idea, it hides all what it does behind system.exe
<txdv>	on unix you can see every process activity
<txdv>	in windows land you just have to bent down and let windows do its thing
<justanotheruser>	okay, strange question. i am hyperoptimizing a program to perform action a and i want to perform action b eventually. what is the fastest way to break out of the loop doing a without having to do a comparison operator every time?
<aawe>	irssi or weechat?
<kino`>	weechat
<aawe>	justanotheruser: hyperoptimization? is that the premature kind?
<aawe>	kino`: are you using weechat atm?
<pulse>	hi all
<kino`>	no
<justanotheruser>	aawe: i don't understand, are you making a joke?
<aawe>	how come you'd pick it over irssi?
<kino`>	but that's what i use on my linux.
<pyon-ktiert>	justanotheruser: "break out of a loop (...) without having to do a comparison" --> break? goto? early return?
<aawe>	justanotheruser: yes i am. but i do not recognize the word "hyperoptimization"
<justanotheruser>	pyon-ktiert: yeah, but i have to do a comparison to know when to break, dont i?
<pyon-ktiert>	justanotheruser: but, really, your question can't be meaningfully answered unless you describe your algorithm.
<justanotheruser>	or some operation
<kino`>	because i never tried irssi :^)
<justanotheruser>	pyon-ktiert: it's basically while(1) { print("a") }
<pyon-ktiert>	aawe: weechat's configuration system is more modular.
<aawe>	justanotheruser: have you profiled the program to make sure this loop is the bottleneck, and that the comparison specifically is the main bottleneck?
<justanotheruser>	i want to eventually break out
<pyon-ktiert>	justanotheruser: when?
<pyon-ktiert>	what exactly does "eventually" mean?
<justanotheruser>	pyon-ktiert: i want to do it some time between the 10th time around and 1000000th time around
<aawe>	thinking about replacing my shout web irc client with ssh + screen + weechat
<pyon-ktiert>	justanotheruser: then do it the 10th time.
<justanotheruser>	well i can do that easy, i want to know if there is something that doesn't require checking every time. this may be dumb, because i have no idea how i would do it without a comparison, but maybe there is some randomness i can take advantage of or something
<aawe>	justanotheruser: have you profiled the program to make sure this loop is the bottleneck, and that the comparison specifically is the main bottleneck?
<pyon-ktiert>	justanotheruser: you could compute a pseudorandom number between 10 and 1 million, and then loop that many times. :-|
<justanotheruser>	aawe: the loop is the program
<justanotheruser>	it's literally 3 lines
<myrl-chan>	wtf.
<myrl-chan>	is ix.io ded
<adsc>	you could flatten the part of the loop during which you don't want to check yet
<pyon-ktiert>	justanotheruser: but, what's the real problem you're trying to solve?
<pyon-ktiert>	myrl-chan: :-o
<justanotheruser>	pyon-ktiert: the real problem is killing all of my competitors processes before they kill mine
<pyon-ktiert>	oh.
<adsc>	but having said that, optimizing away checks is kind of...well...i don't want to spell it
<justanotheruser>	:)
<justanotheruser>	now it probably doesn't sound insane
<pyon-ktiert>	is this for one of those program-vs-program war games?
<justanotheruser>	basically i'm going to kill them over and over again until i'm sure they're dead then make all my forks
<justanotheruser>	my kill signals should go out about as fast as they make processes i assue
<justanotheruser>	assume
<justanotheruser>	so basically kill them before they even can get to the line that kills me
<myrl-chan>	oh wait... i forgot to use proxychains. lol
<justanotheruser>	askori: could you elaborate?
<justanotheruser>	adsc*
<justanotheruser>	you want me to write out whats executed the first n times?
<justanotheruser>	i assume that means the program will take a bit longer to load, so that seems risky to me
<adsc>	well, yeah, it's probably not ideal for your use case
<adsc>	then again, i'm not sure you will ever reach a state where all the competitors processes are dead
<justanotheruser>	thoughwhy?
<adsc>	because i assume he keeps spawning them
<justanotheruser>	he has a limited space he can spawn in
<justanotheruser>	also, i am killing every time he creates :p
<adsc>	eh, well, coming back to your original question, there really is no way to avoid the check
<kino`>	can you dupe him?
<aawe>	justanotheruser: is this a game or a virus that kills the av processes
<kino`>	then make him spawn every process ha can
<kino`>	then make him spawn every process he can
<kino`>	then kill them all?
<justanotheruser>	kino`: not sure my thinking was clear actually. if he can manage to get an order of magnitude more forks than me then he can easily kill me before i kill him
<justanotheruser>	my assumption is that my program is so minimalistic that it will kill anything he creates immediately while the playing field is level (1v1 or 1v2->1v1)
<kino`>	is there any way you can act dead?
<justanotheruser>	no
<kino`>	the old traitor method.
<justanotheruser>	he will probably look at the processes used by a certain user (all of this happens under a single user)
<justanotheruser>	and find out which ones aren't his
<justanotheruser>	i'm pretty sure looking up processes takes a while too
<justanotheruser>	so basically i've run some tests and found that, as expected, my pid is always one before or after his
<justanotheruser>	so i kill mypid-1 then mypid+1 and increment from there
<myrl-chan>	er guys
<myrl-chan>	is it safe to put a tar in a tar?
<aawe>	screen vs alternatives?
<justanotheruser>	ummm
<justanotheruser>	its almost certainly not useful
<justanotheruser>	aawe: hmm?
<justanotheruser>	ok
<myrl-chan>	oh wait, you can put directories in a tar. carry along, forget what i said.
<pyon-ktiert>	myrl-chan: you can tar a whole directory, no matter what it contains - including subdirectories.
<myrl-chan>	pyon-ktiert: yeah.
<justanotheruser>	so silly question, compiled c programs don't get any bigger with unused include statements does it?
<justanotheruser>	or more importantly, what is loaded to text isnt?
<myrl-chan>	justanotheruser: depends.
<myrl-chan>	justanotheruser: if the include statement has code, then it will get bigger, and you have dead code too.
<justanotheruser>	shouldn't the compiler get rid of it if it.... halting problem?
<pyon-ktiert>	myrl-chan: a decent linker will get rid of dead code.
<myrl-chan>	myrl-chan: true.
<justanotheruser>	is gcc still the defacto fastestest on linux?
<justanotheruser>	stupid uestion actually
<justanotheruser>	my program is so simple there is basically no optimization
<pyon-ktiert>	justanotheruser: of course, it's undecidable whether a particular procedure is reachable, but it's possible to give a conservative estimate, that never gives a false positive.
<myrl-chan>	justanotheruser: different sites gives different benchmarks. lol.
<pyon-ktiert>	s/reachable/unrechable/
<justanotheruser>	hmmmm
<myrl-chan>	justanotheruser: just fork it.
<myrl-chan>	get it? get it?
<justanotheruser>	no
<myrl-chan>	shitty puns?
<kino`>	but how can i fork if all i have is a knife
<myrl-chan>	s/find/fine/
<kino`>	myrl-chan said it before me.
<justanotheruser>	hmmm
<justanotheruser>	an important part of my program is that it doesn't try to determine which processes exist which wastes time
<justanotheruser>	so if i fork i'd have to manage that and that would suck
<myrl-chan>	i still don't agree with "they" as gender neutral singular, until we use a singular verb for it.
<pyon-ktiert>	myrl-chan: natural language grammars are weird.
<justanotheruser>	how do you verb a pronoun?
<myrl-chan>	justanotheruser: wat
<justanotheruser>	how does a singular verb exist for pronouns?
<justanotheruser>	04:33 < myrl-chan> i still don't agree with "they" as gender neutral singular, until we use a singular verb for it.
<myrl-chan>	justanotheruser: er..
<pyon-ktiert>	myrl-chan: in spanish, the third person singular is the formal second person singular. in french, the second person plural is the formal second person singular. german combines the madness of both, and uses the third person plural as the formal second person singular.
<kino`>	heh
<kino`>	and in english, you get "you"
<kino`>	(and though, but...)
<pyon-ktiert>	and formal pronouns have to be used on a daily basis, unlike english's gender-neutral "they".
<myrl-chan>	pyon-ktiert: what afre formal pronouns?
<pyon-ktiert>	formal pronouns and verb conjugations*
<myrl-chan>	are*
<pyon-ktiert>	myrl-chan: e.g., french's second person singular is "tu", unless you're being formal, in which case it's "vous". but "vous" is also the second person plural!
<kino`>	!
<kino`>	grammar twist!
<justanotheruser>	lol, my program just crashed my computer i think
<pyon-ktiert>	so, in order to be formal, you pretend you're talking to two people. or someone so fat they count as two people anyway.
<justanotheruser>	i expected process sharing between users to be easier!
<kino`>	i've got this weird thing where i get all formal with my girl
<kino`>	sometimes
<pyon-ktiert>	kino`: isn't that just awkward?
<adsc>	kino`: tell us more
<justanotheruser>	wait, if i send a kill signal to a process that doesn't exist....
<justanotheruser>	then they may create it later?
<kino`>	pyon-ktiert: no, it's not
<kino`>	asdc: err... i don't know what to say
<kino`>	i see how one could picture that though.
<justanotheruser>	so what is the behavior if i send a kill signal to process 4000 and it will not be made until a few ms later?
<pyon-ktiert>	justanotheruser: you send kill signals to process ids. what exactly would prevent the operating system from creating another process later on, that happens to have the same id?
<pulse>	which kill signal
<pyon-ktiert>	justanotheruser: it isn't terribly likely, but there's no reason to assume it couldn't happen.
<pulse>	-9 ?
<justanotheruser>	pyon-ktiert: why isn't it terribly likely?
<justanotheruser>	looking at the process ids created in some previous submissions, none of them use old process ids
<ihatehex>	darkelement, i still think you should just call your evil machination paul.
<pyon-ktiert>	justanotheruser: to be frank, i don't really know much about this low-level stuff (you could ask vendu, he knows this stuff very well). but, afaict, at least linux just assigns process ids incrementally, and cycles back when a maximum process id is reached.
<ihatehex>	it's the perfect name for a world conquering artificial creature.
<justanotheruser>	pyon-ktiert: ok thanks
<pyon-ktiert>	(of course, when cycling back, it still needs to makes sure that process ids don't collide.)
<pyon-ktiert>	don't collide for processes that are still running
<pyon-ktiert>	but reusing the process id of a process that has already finished is perfectly fair game.
<adsc>	yeah, but most operating systems rotate through a lot of ids before they reuse an old one
<pulse>	so don't kill your processes, hang them
<adsc>	also, sending a kill signal to a process id that is not in use shouldn't do anything
<ams>	linux assigns incrementally, openbsd assigns randomly.
<justanotheruser>	good thing i'm on linux then :p
<ams>	not really.
<pulse>	windows assigns merrily.
<justanotheruser>	ams: ?
<ams>	you really cannot predict the next id you will get.
<ams>	even on linux.
<justanotheruser>	what if i only have two programs?
<justanotheruser>	and both of them are making 99% of the processes?
<justanotheruser>	then i can be 99% sure?
<pulse>	no
<ams>	show me one system that has two processes running.
<justanotheruser>	?
<pulse>	someone might be carrying a giant magnet along your pc
<justanotheruser>	oh, you don't mean simultaneously
<pulse>	in that case you can't be sure of anything
<myrl-chan>	welp. my phone turned off even if it was charging.
<justanotheruser>	yes, when i say they are making 99% of the processes, i mean there are other programs making 1%
<aawe>	(quit
<pulse>	two things make 99%, while less than two make the remaining 1%?
<pulse>	i see something wrong with this
<pulse>	lol
<justanotheruser>	two things make 99% while all the other components make 1%
<justanotheruser>	probably more like 99.9%
<pyon-ktiert>	myrl-chan: lol
<pulse>	so more than two make 1%, while two make 99%?
<justanotheruser>	yes
<ams>	...
<pulse>	well this is beyond me
<myrl-chan>	internet seems back.
<justanotheruser>	every component of a fully functioning gnu/linux system makes n processes per second. these two programs make at least 100n
<myrl-chan>	or not.
<myrl-chan>	:(
<justanotheruser>	and i don't mean cycles, i mean processes
<adsc>	:)
<justanotheruser>	it's not confusing, i'm just really bad at describing it :p
<aawe>	how do i disable the gigantic "nicks ##programming: " message in weechat?
<ams>	aawe: /quiet
<ams>	 /quit
<ams>	:-)
<pulse>	man weechat :p
<pulse>	just kidding
<pulse>	google it
<pulse>	man pages are the worst.
<aawe>	i tried googling it, but i think i found a filter now
<adsc>	why are man pages the worst?
<pulse>	no examples
<ams>	dunno.  i never read man pages.
<ams>	info rocks.
<adsc>	some do have examples
<myrl-chan>	pulse: i've read a man page that states "i hate man pages without examples."
<pulse>	i do, but i always end up googling it afterwards
<pulse>	myrl-chan, lol
<pulse>	bro pages are supposed to solve that
<pulse>	not sure if that's a thing even
<myrl-chan>	lol
<pulse>	http://bropages.org/
<myrl-chan>	i was so confused what a man page was at first.
<pyon-ktiert>	myrl-chan: it's more of a cultural than technical problem, but man pages are often not clear enough. when man page authors bother providing examples, they are far too minimal and don't cover all the corner cases.
<kino`>	myrl-chan: check your provilege
<myrl-chan>	pyon-ktiert: yeah.
<justanotheruser>	man pages are sexist
<sadale>	man is usually more verbose than -h :p
<pyon-ktiert>	myrl-chan: i don't have much of an issue with "learning by example" (although i still prefer concise, crystal-clear definitions), but then the examples have to cover everything.
<justanotheruser>	woman pages need to exist
<sadale>	example are very good when you're unfamiliar with the command. it helps a lot.
<myrl-chan>	pyon-ktiert: i usually don't care about learning how to use the tool, until i feel like i really have to use the tool, until then, i first check if it has examples, ask ##programming or #archlinux, try google, then go "fuck, i better learn this, i guess."
<pyon-ktiert>	myrl-chan: same here.
<sadale>	justanotheruser, oh. what's the difference between man pages and woman pages?
<protist>	does anyone know how to remove chrome's notifications from the toolbar?
<protist>	i never asked for this! >:(
<sadale>	protist, use firefox instead of chrome. problem solved. :p (just kidding)
<pyon-ktiert>	pulse: whoa, for once a ruby program i actually find useful.
<pulse>	protist, i know i did it, i forgot how
<protist>	sadale: i would, but chrome seems to work better on some pages
<pulse>	you go to chrome://something
<pyon-ktiert>	pulse: it only took like 598843 attempts, but, at last!
<myrl-chan>	pyon-ktiert: i find ruby to be one of the pretties languages.
<pyon-ktiert>	myrl-chan: welp.
<pyon-ktiert>	no.
<pyon-ktiert>	ruby is cool and powerful, but pretty it is not.
<pulse>	pyon-ktiert, lol
<myrl-chan>	lol. :p
<protist>	pulse: lol
<protist>	pulse: thanks :p
<pulse>	protist, :d
<protist>	pulse: https://support.google.com/chrome/answer/3220216?hl=en ...no linux instructions?
<aawe>	relevant to man pages / examples: https://github.com/srsudar/eg
<myrl-chan>	...
<protist>	pulse: and it is all about disallowing them...not getting rid of the icon
<protist>	pulse: i turned them all off then have an icon with a line through it >:(
<pulse>	protist, chrome://flags
<myrl-chan>	google, what the fuck.... "making a..." first thing is "baby"
<pyon-ktiert>	aawe: why doesn't it surprise me that the analog python program has a less childish name?
<pyon-ktiert>	analogous*
<pulse>	protist, i think should do it http://askubuntu.com/a/474048
<myrl-chan>	i wanted to make a bytecode interpreter in haskell. lol.
<pyon-ktiert>	now, if only pip didn't make me want to tear my eyes out of their eyelids...
<aawe>	pyon-ktiert: which is the analog python program
<pyon-ktiert>	gems and npm are much better.
<pyon-ktiert>	aawe: eg (python) and bro pages (ruby).
<pyon-ktiert>	aawe: also, i meant "analogous", not "analog".
<pulse>	aawe, hey that's not bad
<protist>	pulse: thank you :)
<pulse>	protist, np :)
<myrl-chan>	pyon-ktiert: what'd be the best structure for random access update and index?
<dante3k>	gpu thermal throttling is that controlled on the card itself or via the video driver wrt nvida cards ?
<pulse>	myrl-chan, ram? :d
<myrl-chan>	pulse: :(
<pulse>	a hashmap i'd imagine
<pulse>	i don't know
<myrl-chan>	pulse: fully functional
<myrl-chan>	s/fully/purely/
<pulse>	an array is great for random access
<aawe>	pyon-ktiert: well, i hope "bro-pages" is not fully representative of ruby programmers
<aawe>	but i've seen the trend too
<pulse>	can't get much better than an array
<protist>	pulse: google is evil
<myrl-chan>	pulse: that's the problem.
<pulse>	protist, that's why we love it
<protist>	pulse: lol
<pyon-ktiert>	aawe: i probably shouldn't make sweeping generalizations, but the ruby community already has a reputation for being kinda misogynistic.
<pulse>	i prefer communities with wise bearded men
<pyon-ktiert>	aawe: although programming culture overall is kinda misogynistic, albeit in much subtler ways.
<aawe>	pyon-ktiert: got any links or references? i've not followed the ruby news
<myrl-chan>	pyon-ktiert: i think i can do random access lists.
<aawe>	pulse: why men?
<pyon-ktiert>	myrl-chan: :-)
<myrl-chan>	pyon-ktiert: but i have no damn idea how to do random access updates.
<pulse>	aawe, we've been over this. real men are real men. real women are real men.
<pulse>	:d
<pyon-ktiert>	myrl-chan: it's the same as lookup, except that, when you rebuild the list, you replace the element you just looked up.
<pulse>	aawe, with the exception of beards, i suppose
<myrl-chan>	pyon-ktiert: the problem is rebuilding.
<pyon-ktiert>	myrl-chan: you could think of update operations on functional data structures as consisting of two phases: (1) "descend" to a specific element, (2) "ascend" your way back to the root, rebuilding the data structure in the process.
<aidanh>	pulse: heh
<pulse>	they can substitute with over-sized glasses
<aawe>	pulse: i don't know if many "real women" would accept to identify themselves as "real men", especially not without context
<myrl-chan>	pyon-ktiert: i need fast update.
<aawe>	it looks like an excuse to be male normative to a casual observer
<pyon-ktiert>	myrl-chan: updating an element of a random access list is o(log n), just the same as lookup.
<myrl-chan>	pyon-ktiert: really?
<pyon-ktiert>	myrl-chan: yes.
<myrl-chan>	pyon-ktiert: hmmm...
<rindolf>	hi all, sup?
<pulse>	aawe, i stick to my theory and i wave your circular semantic games :p
<pulse>	you can have it the other way around if that tickles you better
<pulse>	real women are real women. real men are real women
<pulse>	hi rindolfski
<pulse>	sup?
<rindolf>	pulse: my right arm aches today.
<pulse>	hmm.
<pulse>	what did you do with it
<rindolf>	pulse: nothing.
<pulse>	well that can be a problem too
<pulse>	not enough movement, etc
<rindolf>	pulse: it's from when i slept.
<pulse>	ah.
<pulse>	that sucks
<pulse>	you don't have much control over that, you just wake up one day in pain
<myrl-chan>	pyon-ktiert: after some thinking, i got an idea. thanks.
<pyon-ktiert>	:-)
<txdv>	the capability of thinking, in this channel, im buffled
<gluesticky>	what is thinking?
<gluesticky>	i just do whatever comes into my mind.
<kino`>	precisely.
<myrl-chan>	pyon-ktiert: had more thought, i realized that if i use a constant size that's a power of two, the list would be of size [1, n-1]
<ams>	hate ..
<myrl-chan>	ams: hmm?
<ams>	unix .. angry .. me
<pyon-ktiert>	txdv: what do you mean "thinking"?
<txdv>	also people in here tend to write random words which make sense ... because they have been trained like an ai with a lot of input by this channel
<kino`>	i'm willing to hear suggestions of coding music
<rindolf>	kino`: hi.
<ams>	kino`: liszt
<rindolf>	kino`: i personally listen to mostly pop and rock and stuff.
<kino`>	sorry, hi
<kino`>	(in my defense, i was talking a bit earlier)
<ams>	kino`: you are not apologised.
<ams>	kino`: you must give everyone a .. beer!
<myrl-chan>	pyon-ktiert: i should probably just use a type alias.
<kino`>	        ~  ~
<kino`>	      ( o )o)
<kino`>	     ( o )o )o)
<kino`>	   (o( ~~~~~~~~o
<kino`>	   ( )' ~~~~~~~'
<kino`>	   ( )|)       |-.
<kino`>	     o|     _  |-. \
<kino`>	     o| |_||_) |  \ \
<kino`>	      | | ||_) |   | |
<kino`>	     o|        |  / /
<kino`>	      |        |." "
<kino`>	      |        |- '
<kino`>	here you go
<myrl-chan>	jb?
<ams>	fucks sake dude ..
<myrl-chan>	hb*
<ams>	stop flooding the channel ..
<ams>	jeez
<adsc>	but he's flooding the channel with beer
<adsc>	i forgive him
<ams>	that is just a waste .. drink it isntaed
<myrl-chan>	that's a pretty well done ascii art.
<adsc>	isn't coding music mostly electro?
<myrl-chan>	adsc: nightcore here.
<kino`>	well, it depends ofr people
<adsc>	some kind of deep trance or something
<myrl-chan>	adsc: nightcore or some vocaloid.
<o0elise0o>	www.di.fm
<o0elise0o>	http://www.di.fm
<pyon-ktiert>	adsc: no
<ams>	kino`: iron maiden
<adsc>	yeah, sure, i'm talking about what society thinks coding music would be like
<adsc>	stereotypes
<adsc>	evident in "hacker" games
<adsc>	and movies
<kino`>	i alternate between rock and electro myself.
<kino`>	mostly instrumental.
<adsc>	personally, i'm with ams here
<adsc>	maiden goes with any activity
<ams>	you .. are?
<ams>	i must change my music then.. this cannot be.
<adsc>	feel free to
<adsc>	as long as i can keep my maiden
<ams>	no.
<ams>	you will listen .. to .. justin beiber.
<ams>	in reverse.
<adsc>	is that metal, too?
<ams>	no.
<adsc>	hard rock?
<ams>	no
<ams>	a teen in puperty
<kino`>	retrofuturist dubstep!
<adsc>	teens in puberty cannot make metal?
<ams>	correct.
<adsc>	interesting
<stranac>	sure they can
<stranac>	babymetal ftw
<dtscode>	we are talking about music metal right?
<kino`>	babymetal's so weird
<adsc>	no, we are talking about zinc et al
<adsc>	personally, i'm a fan of molybdenum
<dtscode>	thats what i thought at first d:
<ams>	what would you call a file that is supposed to be named after a funciton that contains an asteriks?
<lf94>	is it possible to split a buffer into 2 views?
<lf94>	in vim?
<lf94>	i would assume yes.
<ams>	lf94: i have not sinned, so i do not know.
<dtscode>	ams, whats the name of the function?
<adsc>	ams: i would call it filethatisnamedafterafunctioncontaininganasterisk
<kino`>	or ftinafafcaa
<kino`>	for short
<adsc>	ams: or you could call it starfile
<ams>	dtscode: defgeneric-process*
<kino`>	starfile
<dtscode>	i would just name it defgeneric-process.the_lang
<lf94>	ams what editor - nevermind. emacs. lisp. 2+2=4
<kino`>	that sounds good
<ams>	lf94: =)
<dtscode>	kino`, starfire :d
<tony___>	hi guys
<tony___>	http://pastebin.com/1queu9ev
<tony___>	it returns same cycle and total as 1
<ams>	that is nice.
<tony___>	i want it to return cycle = total number of rows with that cycle
<tony___>	could you suggest how to achieve that?
<ams>	not use sql perhaps.
<lf94>	ams have you considered a linux+emacs setup?
<ams>	lf94: no.
<tony___>	ams: what would you suggest to use, you sarcastic bitch
<ams>	lf94: emacs needs an operating system.
<ams>	tony___: with that attitude? brainfuck would do for you.
<tony___>	ams: attitude?
<adsc>	tony___: maybe consider asking in #mysql, too, even if it isn't mysql
<tony___>	adsc: cheers
<ams>	tony___: immensly polite to start calling people names.
<tony___>	ams: i just don't like time wasters like you, sorry
<lf94>	ams: yes. including binutils etc is fine, but i mean emacs as a window manager/task manager
<tony___>	"not use sql"
<lf94>	because emacs is really just one giant task manager right?
<ams>	tony___: right, don't use sql, it isn't the right solution for this problem, idiot.
<ams>	missed the troll .. ah ...
<ams>	lf94: i use emacs as a window manager/task manager.
<dtscode>	nano ftw
<kino`>	you people exist!
<adsc>	ams: do you have more information about tony's problem than he has given? or how do you conclude that sql is not the right tool for the job?
<dtscode>	all 3 of us
<ams>	lf94: if i told you that i have 12439 buffers open currently what would you say?
<dtscode>	the nano manual was a good read. took about 5 minutes
<ams>	lf94: use a general purpose language, sql is terrible for generic programming.
<dtscode>	"fire up nano. write shit. compile it. it works since you used nano"
<lf94>	i would say, how's that system treatin' ya? how's that one second delay between commands?
<kino`>	how's the code related to the editor, though?
<ams>	lf94: i don't have any noticible delay between commands.
<dtscode>	if youre smart you use nano, so obviously you write smarter, bug free code
<kino`>	hah
<adsc>	ams: but...his problem doesn't look like a generic programming problem
<dtscode>	the logics all there :p
<ams>	adsc: it does to me.
<lf94>	ams: i didn't say anything about sql
<ams>	was meant for adsc
<lf94>	ok
<lf94>	one thing i've really got to hand to emacs is being not tied to a flipping terminal.
<lf94>	it definitely successes vim there
<ams>	what do you mean?
<lf94>	you can use proportional fonts within emacs
<ams>	ah
<lf94>	with affecting its functionality
<lf94>	you can't do that at all with vim.
<lf94>	secondly, emacs can emulate vim key bindings.
<dtscode>	you know vim isnt limited to the terminal right?
<lf94>	you can emulate emacs in vim.
<lf94>	cant***
<dtscode>	can
<lf94>	dtscode, haha, that's what you think!
<lf94>	vim is.
<lf94>	you may say
<dtscode>	just look at the vim download page
<lf94>	"but what about gvim!!!"
<lf94>	have you ever started gvim before?
<dtscode>	yes
<myrl-chan>	gvim doesn't have proportional fonts either.
<lf94>	exactly.
<lf94>	plus.
<dtscode>	and that means its limited to the terminal?
<lf94>	you can run any terminal programs within it
<dtscode>	and?
<lf94>	it is a fucking vt100 emulator
<lf94>	its tied to a terminal
<lf94>	it needs a terminal to function.
<hotcoder>	programmers are so elitist
<adsc>	proportional fonts suck anyway
<lf94>	this isn't just about propertional fonts
<dtscode>	if you feel the need to think that then go ahead lf94
<myrl-chan>	but why are we comparing an editor to an operating system?
<dtscode>	myrl-chan, :d
<lf94>	the editor is tied to terminal technologies
<hotcoder>	myrl-chan, because fuck you and your logic
<hotcoder>	thats why
<lf94>	myrl-chan, exactly - it should be os-agnostic
<dtscode>	says who?
<kino`>	hey, there's the new amd architecture
<kino`>	http://www.guru3d.com/news-story/amd-zen-architecture-processors-are-true-quad-core-cpus.html
<lf94>	says perfect design
<lf94>	obviously though, we are not in a perfect world
<dtscode>	says your idea of perfect design
<lf94>	emacs is closest to perfect
<ams>	http://www.reddit.com/r/vim/comments/2eg2vs/proportional_fonts_in_macvim/
<ams>	i love the first comment ..
<lf94>	no - a design that is flexible is a better design.
<ams>	"or switch to emacs+evil, for what we care."
<dtscode>	thats a very dangerous view of software
<myrl-chan>	i like emacs, since it's like an 8-legged mammalian dinosaur.
<ams>	that can run at the speed of light backwards?
<myrl-chan>	anyways, i'm going to be using my phone from now. cya.
<kino`>	menial card tricks?
<dtscode>	yes
<kino`>	what's that?
<dtscode>	unimportant
<kino`>	oh, right
<lf94>	ams do you use vim bindings in emacs
<lf94>	i think vim bindings are powerful
<ams>	lf94: no.
<lf94>	how's the pinky
<ams>	good
<lf94>	did you caps lock + ctrl swap
<ams>	no
<lf94>	rip pinky
<ams>	nope
<kino`>	muscled pinky
<lf94>	robotic pinky
<kressara>	do you use emacs? rip pinky.
<ams>	http://www.asl.dsl.pipex.com/symbolics/photos/io/keyboard-9647.jpg
<ams>	is my keyboard
<lf94>	symbolics
<kino`>	what is the use of the triangle key?
<ams>	depends on the mode.
<lf94>	>rubout
<ams>	if it is a programming mode, i have it bound to re-running tests
<kino`>	i'd neverseen a keyboard like that
<lf94>	that's a nice keyboard ams
<lf94>	how much?
<lf94>	$500?
<ams>	lf94: not sold anymore.
<kressara>	welp, forgot to put it in tmux.
<lf94>	ams: what happens when it dies?
<lf94>	what is plan b?
<ams>	rubout does delete-backwards, and back-space does left arrow .. basically.
<ams>	lf94: it won't die.
<kino`>	oh, symbolics died
<lf94>	yes i know symbolics is dead
<lf94>	this keyboard though
<ams>	lf94: gold plated connectors, solid metal, esd proof components ;-)
<lf94>	i can only imagine the abuse it goes through.
<dtscode>	<lf94> what is plan b?
<dtscode>	a failure. use plan 9 instead
<lf94>	unfortunately plan 9 is dead too.
<dtscode>	yes :/
<txdv>	who the hell uses plan 9 anyway
<kino`>	it is?
<bg__>	naah, it's still hanging on there
<txdv>	why would anyone use plan 9?
<dtscode>	because fucking ritchie
<dtscode>	or was that ken?
<lf94>	ape is in gutter, video drivers are non existent, very small amount of programs.
<lf94>	dtscode, ken.
<txdv>	dtscode: http://plan9.bell-labs.com/plan9/img/screenshot.gif looks so inviting
<bg__>	ken, our lord
<dtscode>	im only hearing features lf94 :d
<kino`>	wow, i thought we were talking about cloud 9 here
<lf94>	then again, if you're doing programming as a hobby...and don't care for anything else in the world...
<lf94>	plan 9 may be for you.
<ams>	haha
<dtscode>	also, ritchie is the one true lord
<lf94>	bell labs = mount olympus
<dtscode>	yes
<dtscode>	bjarne, ritchie, ken
<bg__>	and rob pike
<lf94>	which was zeus
<dtscode>	didnt eric raymond work there at one point?
<lf94>	ken is zeus pretty sure
<sparkyflary>	those are smart people
<ams>	ken is zeus?
<ams>	good god ...
<lf94>	rob pike is zeus's wife
<lf94>	making things look good
<ams>	none of those people did anything really spectacular .. other than a successful virus.
<bg__>	rob pike was on pen and teller once
<sparkyflary>	amazing and talking, programming, and even book writing
<lf94>	ams i have read the unix hater's handbook
<lf94>	i know your anger ams
<dtscode>	are you referring to unix ams ?
<ams>	ofcourse i am!
<lf94>	dtscode, read unix hater's handbook, you'll understand
<lymia>	so, uh.
<lymia>	does the m.2 spec specify, uhm, lengths for cards?
<txdv>	ill read that thing
<dtscode>	damn lisp coder :/
<ams>	lymia: hwo about reading the pci-sig spec?
<lf94>	* ams suits up in emacs
<dtscode>	ams is winning :/
<lf94>	'n 'ere we see a rare event folks
<dtscode>	im still tripped in the recursion
<dtscode>	frick
<dtscode>	15 minutes of utter boredom
<lf94>	two abso-lutely beau-tiful lookin' usahs, fightin' each othah to the death!
<dtscode>	}
<lf94>	oh ho ho thaught one ovah there 'z about to gieve tha othah a whoopin' of his life!
<lf94>	git down jim git down
<txdv>	o god, the beginning of the book is so good
<lf94>	they's gonna hurt us if we be too close
<dtscode>	ha jokes on you. i thought you might do that ams so i took the liberty of running the fork bomb on my machine
<rindolf>	txdv: which book?
<lf94>	rindolf, unix haters
<dtscode>	link?
<rindolf>	lf94: ah.
<lf94>	it's a good read highly recommend
<txdv>	unix haters handbook
<lf94>	it gets dense in some parts
<lf94>	but it is entertaining
<lf94>	and shows unix's downfalls, which is nice.
<sparkyflary>	any weaknesses?
<txdv>	http://homes.cs.washington.edu/~weise/preface.html the first citation
<ams>	dtscode: what are we fighting over?
<dtscode>	ams, something to do with plan 9
<ams>	oh
<ams>	you like plan 9?
<dtscode>	i never tried it
<ams>	neither do i .. lets flame the plan 9 people instead.
<dtscode>	is that in #plan9?
<ams>	dunno .. sounds cumbersome to join.
<dtscode>	i could troll #java again
<ams>	lets wait here until plan9 people come and flame them then ..
<dtscode>	sounds like a plan
<ams>	but is it plan 9?
<ams>	:-)
<dtscode>	plan 9 and 3/4's :d
<ams>	'(and i win!)
<dtscode>	you win because you ended with racket
<ams>	hahahaha
<lf94>	>____> http://input.fontbureau.com/info/
<lf94>	impressed.
<sparkyflary>	#java are way too touchy
<bg__>	lf94: looks like a worthy read
<hotcoder>	go in
<hotcoder>	i'll watch
<txdv>	"despite
<txdv>	increasingly fast, intelligent peripherals, high-performance asynchronous i/
<txdv>	o is a pipe dream.
<txdv>	"
<dtscode>	ok ill do it
<txdv>	so sad and true
<txdv>	:(
<hotcoder>	dtscode, i want to see how you social engineer
<dtscode>	i just gotta wait for people to start talking
<anj7>	hey anyone wanna help me in learning php and mysql to create a log in test website?
<ihatehex>	https://www.youtube.com/watch?v=rsqni5sawuc haha, this is awesome
<txdv>	php
<txdv>	:d
<sparkyflary>	i know how to set one up but that is all, i don't know much
<dssd>	hi
<dssd>	i need some help
<dtscode>	so does ams
<sparkyflary>	oh and its in python/postgresql
<dtscode>	but that requires lots of money and a degree in psycology
<dssd>	lynx=$(lynx "$ip")
<dssd>	echo "$lynx"
<anj7>	if you like to help me you can join me at ##explain
<dssd>	if [ "$lynx" = "401" ]
<dssd>	then echo something
<dssd>	else exit
<dssd>	this fails
<dtscode>	are you really pasting your script here?
<dssd>	with command not found
<dssd>	no im writing my script
<dssd>	or typing even
<ams>	dssd: i suggest you read a basic shell script manual.
<sparkyflary>	anj7: try this http://mezzanine.jupo.org/
<hotcoder>	gotta restart
<hotcoder>	br
<hotcoder>	brb
<hotcoder>	i'll log right back in
<dtscode>	open up a pastebin (i like bpaste) put your script in there, and put the exact error at the bottom dssd
<sparkyflary>	read ross's blog on that page to set it up
<lf94>	ok ams how do i live with the fact emacs is bloat as fuck
<lf94>	i'm downloading emacs
<lf94>	but it is painful
<ams>	lf94: what is blaot in emacs?
<dtscode>	ams, everything that is not involved in editoring or adds to the joke "emacs is a great os"
<ams>	not sure what that means.
<lf94>	ams according the entire it industry emacs is bloated
<ams>	nor does the string exist in the emacs source code.
<anj7>	sparkyflary: thanks, but i want to build it on my own from scratch
<ams>	lf94: no clue what the "industry" thinks.
<ams>	seeing that eclipse people consider "emacs bloated" .. i was hoping for a more .. nuanced view from you.
<sparkyflary>	you are building it from scratch
<anj7>	sparkyflary: yea.
<sparkyflary>	just skip the cms installation part, about half are for the prereq
<sparkyflary>	gedit don't always install right, emac bloated
<sparkyflary>	nano and vim, darn i just want a gui..
<sparkyflary>	and it's like everyone wants you to use vim
<dtscode>	nano <3
<adsc>	well, vim has the advantage that it's installed almost everywhere
<dtscode>	no server ive used has it by default
<adsc>	so if you master vim, you should have a mastered editor on almost every system you come across
<sparkyflary>	gotta memorize a couple of the commands other than that it's solid
<dtscode>	for some reason it comes with vi :/
<adsc>	dtscode: vi works, too
<lf94>	ams: when you compare emacs to original vi, it is bloated.
<adsc>	when you compare vi to ed, it's bloated, too
<sparkyflary>	they said gedit is the better bloat but it craps out during installation
<sparkyflary>	it's just too bloated i guess
<lf94>	gedit...
<lf94>	gedit has a hard time handling things i find.
<jkbbwr>	morning
<adsc>	has broken
<jkbbwr>	i have a headache and im really damn tired
<ams>	lf94: how so?
<exponential>	hey, any python'ers around?
<adsc>	jkbbwr: sleep helps
<sparkyflary>	i'm a fan
<ams>	lf94: emacs is far more modular than vi in design for example.  i would consider vi to be the bloated one honestly.
<lf94>	ams: gedit has a hard time handling large files
<ams>	do i care about that? :-)
<ams>	https://ftp.gnu.org/old-gnu/emacs/emacs-18.59.tar.gz -- 2.8 m, nvi is about 1.2 m
<ams>	and it didn't do .. much .. lacked multiple level undo, font-lock support, indenting support, scripting langauge, ...
<ams>	vim is something like 9m of source code today ..
<exio4>	we have to throw it away
<exio4>	i'll write my own text editor with blackjack and hookers
<ams>	though emacs is something like 40m of source code (compressed)
<ams>	but then it includes means to control butterflies ..
<snyp>	sublime text's minimap is great
<rindolf>	exponential: hi, what's the question?
<lf94>	ams: that's old emacs, isn't it?
<lf94>	ams: what's todays emacs vs vim
<ams>	lf94: see above.
<ams>	lf94: vim is 9m, emacs 40m. (compressed)
<exponential>	rindolf: hey, i just made a stack overflow post about it : http://stackoverflow.com/questions/29941308/python-module-error-beginner
<ams>	lf94: i was comparing vi vs. emacs, from similar enough years.
<lf94>	ams: ah, ok
<ams>	so old vi and old emacs are relativley similar in size.
<lf94>	ams make minimacs
<lf94>	b)
<lf94>	minnie-macs
<snyp>	who even uses vi?
<ams>	you have mg
<lf94>	minni-emacs
<ams>	snyp: i do .. :)
<ams>	i still prefer vi over vim...
<viscera>	ams: me too, oddly
<snyp>	ams: do you code in vi?
<jkbbwr>	adsc: you can't sleep at work
<ams>	snyp: it has happened on multiple occassions.
<ams>	snyp: i don't enjoy the experience though ...
<kressara>	haiaiaiaia
<snyp>	ams: you use emacs right? coz you use common lisp.
<kressara>	ams: i want to make a lisp, what should i read about?
<ams>	snyp: well, yes, but i use emacs cause i like emacs.  not cause i program in common lisp.
<ams>	snyp: :-)
<ams>	kressara: a book.
<snyp>	oh
<kressara>	ams: no shit.
<snyp>	kressara: s.i.c.p.
<lf94>	^^^^^
<myrl-chan>	ams: really dough, what should i read about.:<
<ams>	sicp is not about lisp.
<ams>	it is about scheme.
<snyp>	myrl-chan: l.i.s.p
<adsc>	jkbbwr: how would you know that?
<ams>	myrl-chan: you can start by reading the common lisp standard, the maclisp reference manual, the lisp machine manuals, the islisp standard, zetalisp, lisp 1.5 reference manual.
<ams>	myrl-chan: then you will know what lisp is, and can program a lisp.  it should take about .. 2-5 years.
<snyp>	myrl-chan: there's 'build your own lisp' tutorial
<myrl-chan>	ams: lol.
<myrl-chan>	snyp: i'm more or less asking about what ams considers a lisp.
<rindolf>	exponential: https://github.com/nitipit/appkit/issues - this looks bogus.
<ams>	snyp: they don't build a lisp though, they build a sexp based language, with some vauge similarities to lisp.
<snyp>	ams: what is a lisp?
<ams>	snyp: something based on a lisp.
<snyp>	scheme is a lisp too
<ams>	myrl-chan is just troling me.
<snyp>	or is it not?
<ams>	snyp: no, since it is not based on lisp.
<snyp>	ams: it's based on algol and lisp iirc.
<ams>	just cause it uses parens doesn't mean that it is a lisp.
<myrl-chan>	ams: i'm not trolling you. i'm serious.
<ams>	java is a c in that case...
<snyp>	yeah i know.. but scheme has ideas from lisp.
<ams>	and perl is a c too.
<ams>	snyp: sure, like c has from algol, b, and bcpl.
<myrl-chan>	ams: i swear, i'm not trolling you. :/
<ams>	but i wouldn't call c a algol, or a b, or a bcpl.
<ams>	just like i wouldn't call java a c cause it has curlies ...
<snyp>	ams: they are algol family of languages
<twey>	xeno: that's a neat solution, but it works because you stop using church numerals
<snyp>	myrl-chan: can you read russian?
<ams>	snyp: sure, but scheme is quite different from lisp.
<ams>	very much so ..
<snyp>	myrl-chan: http://ilammy.github.io/lisp/ use google translate
<ams>	java isn't very similarto algol.. it would be a stretch to call it part of that family.
<snyp>	myrl-chan: it's an awesome book
<twey>	xeno: while we're on it you could use a list of unit instead, or just the usual inductively-defined nat type, which is equivalent modulo naming
<ams>	i would have a hard problem calling c an algol like language even ..
<ams>	they have about as many similarties as php and perl...
<ams>	(actually, php and perl have more similarties ...)
<snyp>	idk what features a language must have to call it a lisp
<ams>	it should be at least kinda compatible with aanother lisp.
<ams>	the only thing similar between scheme and lisp is cons
<ams>	they share nothing else ...
<lf94>	ams why is emacs 40mb these days
<ams>	lf94: it includes 10 different versions of vim.
<lf94>	hahaha
<snyp>	ams: probably.. i forgot the restrictions on first class functions and other idiosyncracies that lisp(or maybe common lisp) has
<lf94>	i will totally accept that if that is the actual case.
<myrl-chan>	i like both emacs and vim.
<ams>	lf94: well, at least 10 different versions of vi ..
<myrl-chan>	emacs is a pretty nice irc client.
<myrl-chan>	is a considerably useful web browser too.
<lf94>	emacs isn't a web browser. it embeds a web browser within itself.
<ams>	snyp: basically, my point is that there are so few similarties between scheme and lisp that it is silly to call scheme a lisp.
<myrl-chan>	lf94: my fortune telling has told me that you have no sense of humor.
<ams>	snyp: c++ can be considered a c, same with objective c.  they are at least similar enough in syntax, semantics, and what not.
<lf94>	myrl-chan that is the oldest emacs joke on the earth
<myrl-chan>	lf94: not really.
<ams>	snyp: is java a c? no, nothing similar at all other than a few curlies.  just like with scheme and lisp.
<snyp>	ams: google search says it's an ongoing argumen... i stand on the side of those who consider scheme a lisp.
<ams>	well, you are wrong then.
<ams>	and i'll start calling perl a c.
<ams>	and php a c too..
<snyp>	coz there are differences in different kinds of lisps too.
<ams>	snyp: not that many that it means 0% of all programs be run.
<ams>	snyp: i can run maclisp programs in emacs lisp, common lisp, and islisp.
<ams>	snyp: i can even run a lot of lisp 1.5 programs in those
<snyp>	ams: i see... i didn't know that.
<ams>	snyp: i can run _0_ scheme programs in any of the lisp dialects.
<ams>	snyp: that is how different they are.
<snyp>	oh
<lf94>	ams, gnu emacs? xemacs?
<ams>	lf94: xemacs is gnu emacs.
<lf94>	:3
<lf94>	which emacs do you ues
<lf94>	use
<ams>	gnu emacs.
<ams>	but xemacs is a version of gnu emacs.
<ams>	gnu emacs 25.0.50.1 (x86_64-unknown-linux-gnu, gtk+ version 3.16.2) of 2015-04-27 on hydrogenium
<snyp>	i don't know!!!!!!! maybe scheme is just a very different kind of lisp which is very incompatible with other lisps.. but yeah i get your point.
<snyp>	(+ 1 2) should run in scheme and common lisp.
<snyp>	(yes it does)
<ams>	well, 1+2 should work in ..
<ams>	kinda silly that example, no?
<dssd>	hi
<ams>	snyp: how about this, http://www.informatimago.com/develop/lisp/com/informatimago/small-cl-pgms/wang.html.in
<snyp>	ams: yeah that was silly
<snyp>	:|
<dssd>	http://stackoverflow.com/questions/5615717/how-to-store-a-command-in-a-variable-in-linux
<dssd>	i am having this problem
<dssd>	but eval is not helping
<ams>	snyp: that is a program written in 1960 .. running in common lisp.  with basically no extra support.
<snyp>	ams: aah... that's nice.
<snyp>	ams: ok i agree.. scheme is not lisp.
<ams>	snyp: try doing that with scheme ..
<snyp>	in my mind i was convince that scheme is way different but still a lisp
<ams>	snyp: note that they don't have to be 100% compatible in everye single way .. emacs lisp and common lisp are not compatible in many regards ..
<snyp>	and never inquired *what* actually makes a lisp
<exio4>	ams: consider lisp a family of languages, => there
<snyp>	ams: yeah ofc
<ams>	exio4: ofcourse, scheme is not part of that language family.
<exio4>	wow rude
<ams>	snyp: they are at least similary enough that i can run most cl programs in elisp, and vice versa .. since they are based on maclisp which is based on lisp1.5
<snyp>	i never inquired exactly how compatible different lisps are... seems they are very compatible.. so i am convinced now
<grache28>	dssd: have you tried ##bash?
<ams>	snyp: they are relativley compatible yeah.
<grache28>	where does haskell lie in the lisp family tree?
<aawe>	haskell is not a lisp
<ams>	snyp: here is a nice little chapter on porting maclisp programs to cl: http://www.maclisp.info/pitmanual/cl-conv-01-intr.html
<txdv>	do you guys even use lisp
<ams>	snyp: most of that can be done easily in mechanical fashion.
<exio4>	dssd: use bash -c ?
<ams>	txdv: yes, i write common lisp code everyday.
<txdv>	you also write standard c
<myrl-chan>	...
<myrl-chan>	what the fuck did i read...
<aawe>	txdv: ams is a lisper
<myrl-chan>	"installing on linux from source"
<txdv>	ams: have you been around during the glory days of lisp machines?
<myrl-chan>	"download link and get the binary package for the latest stable release."
<snyp>	ams: yeah.. seems so
<ams>	txdv: well, yeah ...
<myrl-chan>	apparently, source == binary now. :|
<txdv>	ams: how old are you?
<ams>	txdv: 35
<myrl-chan>	ams: hahahaha, i'm younger than you.
<myrl-chan>	jk
<adsc>	myrl-chan: lol, what package is that?
<rounin>	aren't you younger than everyone though
<ams>	myrl-chan: good for you, you might live to see how this planet is destroyed by mankind! i won't! hahahahahaha *me jumps into his suv and drives to the coffee machine*
<adsc>	ams: are you sure about that?
<rounin>	man, in three years we'll have adults born in the year 2000
<myrl-chan>	adsc: it's from a book called "beginning haskell".
<aawe>	rounin: that's absurd
<rounin>	already, people born in the 90s are popping up on tv
<myrl-chan>	rounin: in 2 years, i'll be an adult. :<
<adsc>	myrl-chan: oh...well, seems to be a bad book
<ams>	adsc: i can help make it happen though :-)
<txdv>	myrl-chan: life rapidly goes to shit once that level is reached
<rounin>	myrl-chan: truly, these are the end times.
<aawe>	myrl-chan: lyah is superior
<myrl-chan>	well, at least i'll (probably) have a better computer.
<myrl-chan>	aawe: already done with that.
<adsc>	ams: i am more of the opinion that you will experience it, too
<ams>	adsc: don't mess with my fantasies!
<adsc>	ok
<aawe>	myrl-chan: rwhaskell?
<rounin>	myrl-chan: ye~ah, it would be great to always be young, but the money and wisdom and modicum of mental balance is sort of ok
<rounin>	if only one could be young and have that
<adsc>	but you can't
<adsc>	it's because of time
<rounin>	grrr, time!
<aawe>	you can get younger in several aspects
<ams>	found like ten pots in the garbage today ..
<rounin>	most people don't even find any pot
<adsc>	well, physical youth is not unachievable, that's true
<aawe>	take some growth hormone, achieve young body
<ams>	rounin: hehe, i meant plantpots
<adsc>	adsc: in theory, physical age can be reversed
<adsc>	errr
<rounin>	ams: ah well... plantpots to plant pot
<rounin>	(hi nsa)
<aawe>	it's illegal because lawmakers are stupid. what does it matter if your balls stop working when you're past age anyway
<ams>	rounin: ;-)
<aawe>	(hgh)
<rounin>	i suppose people value conformity very much... if i wouldn't want to do something, it should be banned for you
<rounin>	whenever i argue that some thing or other shouldn't be banned, that's actually a very common reply
<rounin>	"i don't need to do that"
<adsc>	well, most people are pretty dense
<pi->	#defocus?
<myrl-chan>	aawe: rwhaskell?
<myrl-chan>	oh.
<myrl-chan>	real world.
<rounin>	pi-: we've decided to put the programming there now
<rounin>	this channel is now about politics, negativity and japanese
<rounin>	出てってくれ
<pi->	rounin: can i discuss the holocaust?
<myrl-chan>	aawe: i haven't checked nor do i know if there's a pdf version. and the html version is full of things which disturbs me, such as comments.
<snyp>	rwhaskell vs lsdhaskell
<adsc>	pi-: can you?
<ams>	anyway .. gardening and furniture work now..
<aawe>	snyp: free lsd?
<pi->	adsc: i don't think so, seeing as it never happened.
<rounin>	pi-: hmm, bold... i'll leave that to your sound judgment
<adsc>	pi-: it requires at least 2 people for a discussion
<snyp>	it's for programming haskell in an imaginary neony world
<adsc>	pi-: it's not impossible to discuss about things that never happened
<pi->	you make good points!
<adsc>	the best
<aawe>	adsc: nice b8 m8
<adsc>	only the best points since -4062
<aawe>	oh, what sad times are these when passing ruffians can tell lies at will to old ladies. there is a pestilence upon this land, nothing is sacred. even those who code and design programs are under considerable economic stress in this period in history.
<rounin>	aawe: i'm a bit worried after seeing with what ease they outsourced all of the airplane piloting jobs here to a spanish subcontractor
<rounin>	i'm pretty sure spaniards can code
<aawe>	nobody expects the spanish aquisition
<rounin>	flying is dirt cheap now, of course, but only if you have a decent wage
<rounin>	aawe: .... !!!!!
<rounin>	http://www.gifbin.com/bin/1233928590_citizen%20kane%20clapping.gif
<adsc>	hey this is not tumblr
<aawe>	adsc: source?
<ihatehex>	owls
<ihatehex>	everyone is fond of owls
<ihatehex>	except for mice and shrews
<ihatehex>	and simon cowells
<aawe>	there's owls in the navy
<aawe>	https://www.youtube.com/watch?v=sz2mmm-kn1i
<greensky>	hi
<adsc>	some day i am going  to write a video to text application
<greensky>	i  will pay $30 for what i believe is literally 3 minutes work.  i want to wrap 3 includes into modules using either requirejs or commonjs. i have the simple code on github.  can someone pm please asap.
<overburn_>	hey guys - question - what's the point of overcomplicated executable formats such as elf? wouldn't it be simpler to just have the raw code and execute it?
<adsc>	greensky: maybe ask in ##javascript ?
<greensky>	its dead in there =/
<aawe>	overburn_: what's the point of overcomplicated vehicles such as aeroplanes? why not just travel to wherever you want to go?
<adsc>	greensky: nah, 4 minutes before your posts there was activity
<overburn_>	aawe: bad analogy. aeroplanes make traveling faster ... another layer over raw code only makes it slower
<greensky>	i need help badly dude
<adsc>	greensky: everyone is probably furiously working on your challenge
<greensky>	no idea where to ask
<greensky>	maybe i should try freelance
<aawe>	overburn_: i believe elf provides some linking information, how would that work with just raw code?
<adsc>	greensky: what's the pressure?
<greensky>	they havent got the code = (
<greensky>	ive spent a day on this crap
<aawe>	overburn_: for example, try running "ldd my_executable"
<greensky>	and im falling behind my own deadlines
<lf94>	greensky, pm
<overburn_>	aawe: okay, we've got linking information which i agree has value
<manicpanic>	is it possible to point a dynamically changing ip on my local server to "mysite.com" ? example in the /etc/hosts file something like "192.37.2.37 mysite.com". and replace that with a variable like "$dynamicip mysite.com"
<greensky>	its my own project for fun
<greensky>	but i still have deadlines
<overburn_>	but other than that what's so important that an exe format should have it ?
<lf94>	greensky: see pm
<adsc>	manicpanic: i don't think the hosts file supports variables
<adsc>	manicpanic: but i guess you could make a cronjob that checks the ip every minute and updates if necessary
<manicpanic>	adsc: i know, but how can i set a dynamic ip each time it changes
<myrl-chan>	...wat
<adsc>	manicpanic: there are services like dyndns, if you need it for external ips
<adsc>	manicpanic: if it's internal, you can simply write a shell script and schedule it with cron
<aawe>	overburn_: also, programs are not just executed - data sections are loaded into the memory page, the stack is set up, dynamic linking is set up
<manicpanic>	adsc: its internal local. but i want to access the computer from the internet
<manicpanic>	adsc: where can i change the ip ?
<adsc>	manicpanic: why is the internal ip changing?
<manicpanic>	adsc:  do i have to overwrite the /etc/hosts file everytime to set the new ip ?
<adsc>	manicpanic: you seem to be confused, let's first clarify things
<adsc>	manicpanic: which ip is changing, and why
<manicpanic>	adsc: my internet connection gives a new ip each time i connect to it
<adsc>	so it's your external ip address that is changing, not internal
<adsc>	and you want to connect to your computer that has the changing ip from an external location?
<manicpanic>	adsc: oh no i was wrong
<adsc>	?
<manicpanic>	adsc: but how do i find my internal ip then ?
<adsc>	ifconfig
<manicpanic>	adsc: okay , and on windows?
<adsc>	ipconfig
<aawe>	what about on plan9?
<manicpanic>	adsc:  it gives alot of output related to network
<adsc>	that's its job, yeah
<manicpanic>	adsc: but how do i find my internal ip in there
<qwerty1793>	hi, i have a list of pairs of numbers, what is the fastest way to group them into chains? for example [(1,2), (2,7), (7,-100), (-100,11)] is a chain because each pair finishes with the same number as the next begins with
<manicpanic>	adsc: is it the ipv4 address ?
<adsc>	yes
<aawe>	qwerty1793: probably by writing some code to do it, depending on the size of the data. manually doing it is seldom the fastest way
<manicpanic>	adsc: but i got 3 different ipv4 adresses
<adsc>	then you have 3 network interfaces
<manicpanic>	adsc: how do i know which one is the right one
<adsc>	unplug them one by one?
<qwerty1793>	aawe, ok, i really mean what is the algorithm for doing this with the best asymptotic running time.
<myrl-chan>	`ip addr`?
<aawe>	just do it... there are not many ways to do it
<aawe>	iterate
<qwerty1793>	aawe, what do you mean by just do it? i have a list of 1000000 pairs, the difference between a linear, loglinear and quadratic algorithm is important
<manicpanic>	adsc: i found how. the connections have names. my current connection is in there too. so i just use the one for my current connection
<aawe>	qwerty1793: yes, and iteration is o(n)
<adsc>	qwerty1793: what aawe is saying is he doesn't know any algorithms dealing with your problem
<aawe>	adsc: nice b8
<adsc>	aawe: please show an algorithm that can solve his problem in o(n)
<aawe>	for(int i = 0; i < size - 1; i++) { results.add((input[i], input[i+1])); }
<qwerty1793>	aawe, i'm sorry i dont know what you mean by iterate. these pairs are not already sorted into chains.
<twey>	qwerty1793: is the list sorted?
<qwerty1793>	twey, no
<myrl-chan>	twey: doesn't matter.
<myrl-chan>	twey: it's comparing snd of the current and fst of (current + 1)
<qwerty1793>	aawe, you need to sort  [(1, 2), (3,7), (2,3), (55, 1)] into a chain
<qwerty1793>	for example
<twey>	myrl-chan: who said the chains are contiguous?
<myrl-chan>	twey: "as the next begins"
<twey>	qwerty1793: you can do o(n log n) by building two trees
<myrl-chan>	qwerty1793: well, that's not a chain until you rearrange it.
<qwerty1793>	aawe, in this case to the chain [(55, 1), (1,2), (2,3), (3,7)]
<twey>	myrl-chan: the rearranging is the task
<myrl-chan>	ah fuck.
<aawe>	qwerty1793: is there a single solution for each data set?
<twey>	and presumably there may be pairs in between that are not in the chain
<qwerty1793>	aawe, yes you can assume that
<qwerty1793>	twey, you dont need to worry about that
<exio4>	aawe: that's what i was thinking, there may be different solutions
<twey>	qwerty1793: is there a maximum/minimum on the values?
<twey>	if they're small enough you can use an array and get o(n)
<aawe>	qwerty1793: you could use a map (hashmap/hashtable)
<twey>	yeah
<myrl-chan>	ah, nice catch.
<qwerty1793>	twey, you can assume they are integers between -n and n, where n is the number of pairs in the list. how would you do this with an array?
<twey>	(though, as we know, ‘constant’ array access is actually logarithmic with a much smaller constant, because of physics)
<aawe>	twey: i don't believe in physics
<myrl-chan>	twey: wat.
<myrl-chan>	twey: please explain. :o
<twey>	qwerty1793: you make two arrays and sort them, one mapping fst to snd and one mapping snd to fst
<twey>	myrl-chan: https://awelonblue.wordpress.com/2015/03/30/purely-functional-performance/
<exio4>	http://webuilddesign.com/wordpress-4-3-will-be-rewritten-in-node-js/
<twey>	myrl-chan: memory takes up space, so the maximum distance of a particular memory cell from a point is (bigger than, actually) logarithmic in the total amount of memory available.  there's a speed limit on information transmission given by c, so distance translates linearly to speed.
<aawe>	exio4: "while maintaining backward compatibility" what
<exio4>	i hope it's a late april fools joke
<twey>	assuming you have a perfect sphere of memory centred around your processing unit.
<twey>	perhaps i should have said ‘the minimum maximum distance’
<adsc>	the naive approach is simply finding the starting element (the one whose first value is no second value in another pair) and then finding each element with the first value = second value of the current
<aawe>	exio4: why? wordpress is a rotting beast
<adsc>	so it's a search in unsorted collection, which is o(n^2)
<aawe>	adsc: not with a hashmap
<aawe>	hashmap(list).search(n) // magically o(1)
<twey>	qwerty1793: then you go through one of the arrays and for each value you find there pick out a value at a matching index in the other array, then continue
<twey>	aawe: o(n) really, and only asymptotically
<twey>	er
<exio4>	''while fp isn’t doing so well with absolute efficiency, it can utilize resources and perhaps has greater potential for scalability (due to ease of parallelization, and location-independence of computations).''
<twey>	as was the original search.  *search* in an unsorted list is o(n).
<exio4>	that's right :p
<adsc>	aawe: i said the naive approach
<adsc>	aawe: hashing is obviously not naive
<twey>	(not asymptotically, either ;))
<exio4>	i can just 'optimize' my actual program by just splitting the work over a few cores
<aawe>	adsc: unless you use a naivehashingfactorybean of course
<twey>	er, s/asymptotically/amortized/g
<aawe>	exio4: "by just splitting the work over a few cores" yeah that's super easy, good luck
<vdamewood>	hi, people, etc.
<myrl-chan>	twey: ah, so basically something about line decoders and such.
<exio4>	aawe: it is, i would need to wrap my code in a few newtypes and the hope the garbage collector overheard isn't that big for killing the improvement
<vdamewood>	anyone want to have a race to see who can get to the asymptote first?
<adsc>	aawe: you mean a naivehashmap created by calling naivehasmapfactory->getinstance() passing a naivehashmapconfiguration object returned from a naivehasmmapconfigurationinitializer?
<myrl-chan>	or related to the higher concept of line decoders. < twey
<denommus>	hi
<rindolf>	vdamewood: hi, sup?
<aawe>	adsc: if it ain't got factory in the name, i get uncomfortable
<aawe>	i want enterprise-ready code
<denommus>	(<$>) and (<*>) are finally on prelude
<vdamewood>	rindolf: my computer got sick. the video card was going out and a usb port failed.
<aawe>	denommus: that is good news. which ghc version?
<rindolf>	vdamewood: oh.
<denommus>	aawe: 7.10
<rindolf>	vdamewood: what are its specs?
<exio4>	aawe: this is a naive program that generates lots of results dependent on previous values, it is generating 200mb+ of garbage per second though.. :p
<denommus>	also, monad is officially applicative now
<myrl-chan>	ah, cool, the 3-to-8 line decoder's ttl is 74xx238.
<vdamewood>	rindolf: and because my warranty was 48 hours expired, i had to pay... nothing.
<rindolf>	vdamewood: what do you mean?
<aawe>	exio4: which language are you using?
<vdamewood>	rindolf: macbook pro, late 2011, 15 inch.
<rindolf>	vdamewood: ah.
<vdamewood>	rindolf: as in, i went in two days after my warranty ran out, and the tech made an exception about paying for it.
<encapsulate>	if i'm calling this function with a pointer to the object, does it need to take that pointer argument and do i really need to use this? https://ideone.com/kygjci
<rindolf>	vdamewood: ah.
<vdamewood>	apple seems to have done that a lot for me.
<exio4>	aawe: it's just naive haskell
<twey>	myrl-chan: i don't know what that is.  maybe.
<twey>	denommus: \o/
<vdamewood>	and by a lot, i mean this is the second time. a few months ago they replaced my mom's power supply for free even though she was 6 months out of warranty.
<aawe>	exio4: i remember fiddling with the gc rts opts and using threadscope when i wrote parallel haskell
<twey>	encapsulate: uhm, you've never referred to ‘socket’, so no, it's completely redundant
<adsc>	qwerty1793: aawe is right, you can do it in o(n) with a hashmap
<myrl-chan>	twey: welp, probably not. but what i'm trying to say is that `log(sizeofmemory) == addresses`
<aawe>	or, if memory is not an issue, a sparse array
<adsc>	which is a hashmap, too
<myrl-chan>	twey: or rather, `bit width of addresses`
<aawe>	two sparse array
<twey>	myrl-chan: that's how numbers work, yeah.
<dssd>	hi
<dssd>	could someone help me with my script please? http://pastebin.com/lvgjarsw
<dssd>	thanks.
<kino`>	urgh
<dssd>	i get 000: command not found
<dssd>	curl: command not found
<kino`>	all that android dev unnerves me.
<aawe>	dssd: this looks bad. you're gonna need to refluke your kernel-space adress-mangler
<aawe>	and run apt-get install curl
<dssd>	no curl is installed
<twey>	myrl-chan: the base-k encoding of the number n in a positional system takes maximum ceil(log_k n) + 1 k-digits
<myrl-chan>	twey: yeah.
<dssd>	i can use it outside the script
<twey>	myrl-chan: so the log n factor comes from that, and the n^⅓ comes from physical distance
<myrl-chan>	it should be a rule to send raws if you use pastebin.com...
<twey>	(in three dimensions)
<adsc>	echo $('which curl') in your script
<dssd>	twey: can you help ?
<exio4>	aawe: i am trying to optimize the algorithm before using multiple cores though :p
<twey>	dssd: probably, but i remember that you tend to ignore me when i try, so i wasn't going to bother
<aawe>	exio4: you need the optimizet monad transformer
<myrl-chan>	i never understood why people hated ads, until i remember that it tkaes bandwidth.
<aawe>	it automagically opimizes everything
<_blizzy_>	how would one go about getting their name out there in the programming field
<adsc>	myrl-chan: can also delay the loading of content
<_blizzy_>	i finally have a website now c:
<aawe>	myrl-chan: i hate ads because it sucks
<aawe>	my brain has no firewall, and ads are viruses
<adsc>	myrl-chan: and some ads are really obnoxious
<dssd>	twey: my apologies
<myrl-chan>	aawe: i don't really hate ads, i mean, it helps keep that site living.
<exio4>	aawe: i'll use optimizet twice for 2x improvement!
<adsc>	so? i don't consider it a good thing to rely on wasted money
<myrl-chan>	eh?
<exio4>	myrl-chan: privacy and paranoia
<twey>	dssd: put ‘set -x’ at the top of your script.  it'll give you a blow-by-blow of what commands the script is trying to execute.
<dssd>	i get curl: command not found
<dssd>	http://pastebin.com/lvgjarsw
<adsc>	did you try an echo $('which curl'); ?
<aawe>	myrl-chan: ads reprogram your brain
<aawe>	to a greater extent than other things
<twey>	dssd: this is the thing you already pasted.  you haven't done the things either i or adsc have suggested.
<aawe>	you are giving marketing people control over your kernel
<adsc>	twey: but he got curl: command not found !
<aawe>	i sound like stallman
<dssd>	/usr/bin/curl
<myrl-chan>	aawe: lol.
<dssd>	that's the output of which
<adsc>	dssd: try using this path instead of just curl
<exio4>	adsc: which curl ~ echo $(which curl) :p
<dssd>	same thing
<dssd>	command not found
<adsc>	well, there is something wrong in your setup
<dssd>	i can use curl fine, on the command line
<twey>	dssd: i suspect that the error is not ‘curl: command not found’ but ‘curl:: command not found’
<adsc>	oh, nice catch, twey
<twey>	dssd: because you still aren't doing the thing i told you to do yesterday
<dssd>	its 000: command not found
<dssd>	which is the code returned by curl
<twey>	dssd: because of what i told you yesterday.
<dssd>	which is?
<dssd>	to use " ";
<_blizzy_>	i just got jumped by 5 black guys in baltimore
<dssd>	and then $($var)
<_blizzy_>	however my car still wouldn't start
<twey>	dssd: yes.
<dssd>	i 've tried that
<dssd>	same thing
<_blizzy_>	what language are we talking about?
<dssd>	bash
<twey>	dssd: you are executing curl on line 7 and assigning the output of curl to $c
<twey>	dssd: then you're trying to execute the *output* of curl as a command
<_blizzy_>	i rarely hear people who bash bash
<twey>	the output starts with curl:, so you get an error: ‘curl:: command not found’ (and indeed there is no command called curl: available on your system)
<dssd>	did u beat them up afterall?
<dssd>	haha is not that
<dssd>	there is curl
<dssd>	i use it on the cmd line
<twey>	dssd: there is curl.  there is not curl:.
<_blizzy_>	however, for a reward, i bought then all salt
<_blizzy_>	however, i got charged for a salt and battery
<aawe>	curl::curl_it(in_the_squat_rack: true)
<dssd>	let me check this
<adsc>	_blizzy_: that happens every time, right?
<_blizzy_>	adsc, yes.
<twey>	dssd: your script indicates some fundamental confusion about the difference between a command and its output
<adsc>	_blizzy_: so it's a chronic problem
<_blizzy_>	adsc, i hope you realize what i just said was a joke.
<_blizzy_>	c:
<dssd>	you are executing curl on line 7 and assigning the output of curl to $c
<dssd>	c=`curl -s -si "$ip" | tr -d '\r' | sed -en 's/^www: (.*)/\1/p'`
<twey>	dssd: you appear to be expecting $c to be a command on line 21, but expecting it to be the output of that command on line 25
<dssd>	yes ok
<dssd>	so what's the fix?
<adsc>	the fix is to not use backticks
<twey>	dssd: what i said yesterday.  define $c to be the command, by using double quotes rather than backticks, then refer to $($c) when you want its output.
<dssd>	c="curl -s -si $ip | tr -d '\r' | sed -en 's/^www: (.*)/\1/p"
<myrl-chan>	ugh.
<dssd>	c="curl -s -si $ip | tr -d '\r' | sed -en 's/^www: (.*)/\1/p";
<myrl-chan>	i still don't get monads. wow.
<dssd>	$($c)
<twey>	yes.
<myrl-chan>	at least how to implement them.
<dssd>	how would that work on line 25?
<dssd>	just leave it as is ?
<twey>	as an aside, nothing after line 15 gets executed, and this would be clear if you indented your code properly.
<adsc>	myrl-chan: aren't monads those people that travel around with a tent?
<dssd>	if [ "$c" = "401" ]
<myrl-chan>	adsc: lolwat
<dssd>	because of the exit?
<myrl-chan>	adsc: hahaha
<twey>	dssd: no.  there you are talking about the *output* of the command, so you want to refer to $($c) (though you want to refer to it in more than one place, so you should probably assign it to a variable)
<kino`>	the desert monads
<ams>	mmm...
<exio4>	myrl-chan: implement monads? so it's more a case of a concrete case more than monads themselves?
<dssd>	http://pastebin.com/h5qsnxy9
<myrl-chan>	exio4: rather, i kinda know how to use monads, and some of their use cases, but i can't understand how they must work.
<myrl-chan>	exio4: like, "why must this monad do this, and that."
<myrl-chan>	exio4: and how their actions relate to monads.
<exio4>	well, _this_ monad sounds like dealing with a concrete case
<dssd>	its nomad not monad lol
<txdv>	the nomads
<txdv>	nobody understand them
<exio4>	the io nomad
<txdv>	why would you live in the desert
<dssd>	to get a suntan
<exio4>	myrl-chan: so, no problem with monads but things that happen to be monads too :p
<myrl-chan>	exio4: yes. seems to be exactly that.
<dssd>	 http://pastebin.com/h5qsnxy9
<dssd>	twey?
<dssd>	what's wrong with this one ?
<kino`>	why can't i get a getelementbyid() in my fragment?
<kino`>	oh, android is painful.
<myrl-chan>	exio4: it seems that the concept of how things can be monads are very general.
<exio4>	monads 'are' just two things with a few axioms :p
<exio4>	three things, actually
<txdv>	monads are something so trivial that nobody understand it, yet had to be solved in functional programming to get on paar with imperative languages
<myrl-chan>	exio4: what would those be? i'd go search it myself, but i don
<denommus>	myrl-chan: yes. any type with fmap and associated rules is a functor. with pure and ap and it's an applicative. with join is a monad
<myrl-chan>	don't have internet.
<myrl-chan>	well, i do have my phone... but i only have 30 mb.
<dssd>	http://pastebin.com/njcdbqpw
<denommus>	myrl-chan: a monad can be seen as a type with two associated functions, (>>=) and return, and these functions must follow some laws. that's it
<dssd>	twey:
<exio4>	i also like using the kleisli category for the monad laws
<dssd>	shellcheck.net says: line 7: quotes/backslashes will be treated literally. use an array. line 35: parsing stopped here because of parsing errors. line 21: remove surrounding $() to avoid executing output (and 5 more)
<myrl-chan>	denommus: basically, it must only follow those laws?
<exio4>	'' f >=> (g >=> h) = (f >=> g) >=> h '' and '' f >=> return = return >=> f = f ''
<myrl-chan>	exio4: thanks.
<denommus>	myrl-chan: these are the laws: https://wiki.haskell.org/monad_laws
<exio4>	myrl-chan: yes, that's "all for being a monad"
<dssd>	twey
<dssd>	what you told me is wrong
<dssd>	that will execute the output of the command
<myrl-chan>	dun dun dun
<exio4>	myrl-chan: that is boring though
<myrl-chan>	oh cool, the book and the pdf version of lyahfgg doesn't have those pictures.
<myrl-chan>	it was very helpful in keeping me interested though. :(
<denommus>	lyah must be updated on some things
<twey>	exio4: it's nice that the second functor law follows from the first in haskell, too.
<twey>	exio4: ‘fmap id = id’ is much easier to check than ‘fmap f . fmap g = fmap (f . g)’
<myrl-chan>	welp.
<twey>	exio4: also, the monoidal-functor formulation of applicative
<myrl-chan>	it seems as thought the html version has more things...
<mvaenskae>	cheers, anyone a recommendation how to read in a number from a file as a long? using fread i am stuck due to endianness troubles and find it wrong of me to write pattern-based switch-cases to correct the number to a valid representation
<_blizzy_>	i almost said 'this is easier in rails' in the c# channel
<_blizzy_>	i saved myself
<aawe>	mvaenskae: binary data?
<exio4>	twey: i agree, the free theorem with fmap is really cool
<aawe>	_blizzy_: everything is easier in rails
<mvaenskae>	aawe: i am reading a text file which has the current brightness encoded as a normal number with 0a ending the file
<denommus>	i strongly disagree
<aawe>	find_model_and_render_anything
<twey>	mvaenskae: ‘normal number’?
<denommus>	i much prefer asp.net way to work with modules
<denommus>	*models
<mvaenskae>	twey: base10, pardon for being imprecise
<twey>	ah, base 10 encoded in ascii
<mvaenskae>	affirmative
<twey>	endianness shouldn't matter, then
<denommus>	instead of using inheritance, like rails does, it uses parametric polymorphism
<twey>	but parsing floats is non-trivial
<aawe>	denommus: i have to install vs2010,2012,2014 plus sql server 2014 plus 5 different extensions to vs just to open the project i'm to work in. asp.net is a drooling beast when it comes to dependency management
<exio4>	twey: and the definition of applicative with (f a, f b) -> f (a,b) is also nice :p
<denommus>	that makes testing a lot easier
<twey>	exio4: yeah, indeed
<mvaenskae>	twey: it does sadly, fread(long, sizeof(long), 1, fp) returns me 0a 31 34 instead of base10 40
<twey>	mvaenskae: because it's not a long
<denommus>	aawe: that's because your project was poorly managed. nuget is not bad
<twey>	mvaenskae: it's a base-10 ascii representation of a number
<nizumzen>	aawe: that has always shocked me coming from a unix background just how much crap you need to install to get a dev environment set up in windows
<twey>	mvaenskae: fread doesn't parse floats
<mvaenskae>	twey: float? the number represented is of type int within the ranges [0, 100] :)
<txdv>	i finally understand why windows chose to use prefixes like c:
<aawe>	txdv: why?
<twey>	mvaenskae: oh, sorry, you said long!
<denommus>	nizumzen: technically you just need nuget
<kahrl>	nizumzen: technically you don't need to install anything :p
<twey>	mvaenskae: okay, that's much nicer ☺
<exio4>	twey: it also makes applicative feel somewhat less-weird, in that it becomes just some kind of "lifted uncurry" :p
<twey>	mvaenskae: but you still need to parse it.  fread won't do it for you.
<kahrl>	nizumzen: windows comes with an editor and a c# compiler
<nizumzen>	kahrl: true
<aawe>	kahrl: notepad? lol
<txdv>	if you type "rm -r /bin" instead of "rm -r ./bin" on windows, it wont do anything
<txdv>	because there is a prefix missing
<twey>	mvaenskae: that is, you need to fread out the characters into a string, then iterate over the string building up an integer
<mvaenskae>	twey: any "parsers" in c? the annoying part is that i have to check in 3 places for 0a to realize what number i have;
<kahrl>	aawe: i didn't say it was a nice environment :)
<aawe>	txdv: if you type "rm" in windows, nothing happens, because it's "del"
<mvaenskae>	twey: is that standard practice in c when using fread?
<twey>	mvaenskae: there's nothing that will do it for you, but it's quite easy, especially if you get the digits in that order
<txdv>	well, its just a comparison
<txdv>	that the / file system identifier in unix has is drawbacks
<twey>	well, i mean, there are probably things that will do it for you, but they'd be overkill here
<twey>	actually… atoi will do it fine; never mind that
<txdv>	a simple typo with root and you wipe /bin out and then you are unable to do anything anymore
<mvaenskae>	atoi is deprecated :(
<twey>	mvaenskae: is it?
<mvaenskae>	or rather not recommended for use anymore and i will try not using those if i don't absolutely have to
<aawe>	txdv: except unix has permissions to stop that
<ams>	mvaenskae: since when?
<aawe>	you seldom rm -r as root
<denommus>	txdv: so, the drawback is something that never happens because rm preserves the root anyway?
<twey>	mvaenskae: okay, strtol then
<txdv>	back in the days it didn't
<txdv>	and many fileds were lost
<txdv>	and deleted by accident
<ams>	atoi is in no way deprecated
<aawe>	won't somebody thing of the files?!?!!!
<denommus>	txdv: unix always had permissions
<twey>	yeah, no, it looks like atoi isn't deprecated
<twey>	but strtol might be a better choice
<txdv>	denommus: how old are you
<ams>	well, atoi is equvalent to strol, so ..
<aawe>	strtol = strength tolerance
<twey>	aawe: except for error-handling
<denommus>	txdv: unix was designed as a multiuser system
<twey>	also, mvaenskae wanted a long in the first place, so
<ams>	twey: and values not being able to be represented.
<denommus>	txdv: it's in the core of its design
<twey>	yeah.
<aawe>	*nix is the software of the people
<aawe>	fight for your elf!
<mvaenskae>	i can also use an int, but as i am already using strtol i am getting a long returned
<twey>	aawe: i would, but i've come down with a bit of a coff.
<mvaenskae>	i am using strtol to read in user input
<txdv>	yes, it was also designed to be robust
<ams>	mvaenskae: strtol doesn't read anything from stdin.
<txdv>	wasnt it, yet a single typo has the ambiguity between removing critical system files and random shit
<twey>	mvaenskae: you're not, you're using strtol to convert a string representation of a number into an internal representation of the number
<twey>	mvaenskae: the difference between reading and parsing is important
<aawe>	i read a great article the other month about restoring functionality of your system after an "rm -rf --no-preserve-root /", it involved some bash magic to download a mini coreutils package
<ams>	and converting in this case..
<mvaenskae>	pardon, you are correct :)
<mvaenskae>	i am converting input using strtol already :)
<denommus>	txdv: if you're stupid enough to run a careless rm as root...
<kahrl>	aawe: hmm interesting, but i wonder if busybox wouldn't be easier to install than coreutils?
<twey>	mvaenskae: good!  convert this input the same way
<txdv>	denommus: most of the people nowadays wouldn't know how to plant and take care of their food
<kahrl>	you could compile it statically on another machine and then copy it over
<txdv>	should they all die now?
<ams>	kahrl: they would be as easy.
<txdv>	because they are stupid?
<denommus>	tx
<denommus>	txdv: totally the same thing
<aawe>	kahrl: that might be what was used
<twey>	mvaenskae: you might need to reverse it first, and you'll want to strip off the 0x0a
<ams>	kahrl: the problem is not what version of posix utilities to use, but rather restoring things like libc, ld.so, and what not if using shared  libraries, or let alone just downloading things.
<denommus>	txdv: gosh, what an amazing comparison! how long did it take for you to come up with it?
<ams>	kahrl: how do you download/transfer ls if you did rm -rf /?
<aawe>	txdv: how do i plant pork?
<kahrl>	ams: i have no clue
<ams>	hence why it is a cute hack.
<ams>	aawe: you got the link to share with kahrl?
<txdv>	aawe: just like flowers, you gather some seeds, put it in another instance and stuff will grow
<kahrl>	well, you could mount the root filesystem from a livecd and then copy it there
<kahrl>	that's basically how you install gentoo
<ams>	kahrl: mount?
<ams>	you don't have /bin/mount
<ams>	you just did rm -rf /
<ams>	you have nothing.
<kahrl>	on the livecd, you do
<ams>	other than your sh running.
<mvaenskae>	twey: strtol should take care of that :)
<ams>	kahrl: how do you mount it?
<exio4>	recovering a dead system is a fun way to learn
<ams>	kahrl: you are not allowed to reboot.
<kahrl>	oh, ok
<ams>	kahrl: so you cannot just mount the drive from another system ..
<ams>	in that case, you are basically just reinstalling it as you would normally do ...
<ams>	making the whole exercise pointles
<kahrl>	that's what i was thinking
<exio4>	write a web browser using /dev/tcp
<baxx>	if i want to sync two directories using git... i want just the contents to go into the directory rather than the directory as well. like, when i sync ultisnips dir to another system cloneing the repo makes a directory called `ultisnips` inside `ultisnips`
<ams>	baxx: uhm...
<baxx>	ams: did that make any sense?
<baxx>	it felt a bit off key typing it
<ams>	i cannot understand what you are doing.
<ams>	if that means it does not make sense .. fine..
<baxx>	ams: yeah, the sense making was my responsibility there, sos
<twey>	mvaenskae: the 0x0a, yes.  not the reversal, though.
<myrl-chan>	urrrggghhh
<aawe>	ams, kahrl: https://lambdaops.com/rm-rf-remains/
<ams>	aawe: thanks, though i wasn't that interested in it .. it is relativley trivial to restore a system if you have bash.
<aawe>	ams: "trivial"
<ams>	aawe: it is :-)
<aawe>	ams: you have a weird definition of trivial
<ams>	i'm a very complicated person you see ..
<merijn>	any cuda programmers around? (or does anyone know a more active cuda channel than #cuda?) i can't for the live of me figure out how to silence the warnings produced by nvidia's crappy generated code...
<ams>	don't use nvidious.
<merijn>	ams: like there's any serious alternative
<ams>	that solves at least two problems for you.
<aawe>	opencl?
<txdv>	merijn: doesnt the silence in #cuda help you?
<jeaye>	#cuda has 51 people who can't help you?
<ams>	baxx: anyway, no clue what you want to do  ..
<myrl-chan>	ams: lol
<merijn>	jeaye: since i've been asking for the past week every day, no >.>
<myrl-chan>	merijn: lol
<jeaye>	merijn: :|
<txdv>	we have 575 people here and all we do is talk shit and not help
<ams>	indeed.
<jeaye>	txdv: speak for yourself.
<ams>	jeaye: you aren't helping!
<jeaye>	i'm obviously the most helpful one in the channel. ^_^
<txdv>	o me, i am the only one helping
<aidanh>	and the vast majority of those 575 never talk at all
<merijn>	aawe: opencl isn't a serious alternative to cuda, it's less flexible, worse performing and even more painful to use than cuda >.>
<aawe>	jeaye: this channel has ~5% active users, if i'm generous. 5% of 51 could be generously rounded to 3, and then one of those 3 has to be able to help or be interested to help
<aawe>	math'd
<merijn>	aawe: i don't know anyone doing gpu coding that seriously consider it for anything
<jeaye>	aawe: you killed it and lost all potential credit when you suffixed 'd to math.
<jkbbwr>	talking shit is important
<txdv>	super cereal important
<aawe>	jeaye: are you claiming no contest?
<aawe>	because you sure as flute didn't win
<txdv>	you multipled 3 numbers
<jeaye>	woah, there, tiger. you compensating for something?
<aawe>	u talkin to me
<txdv>	you better fight
<txdv>	cause he just dissed you
<damo22>	how long would it take to factorize a 2^2048 bit number on a single beefy gpu?
<myrl-chan>	damo22: lol...
<aawe>	with how many dyson spheres?
<myrl-chan>	we can't even store a 2^2048 bit number.
<ams>	hmm..
<damo22>	myrl-chan: yes you can, using gmp
<ams>	myrl-chan: really? it is only 32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521914333389668342420684974786564569494856176035326322058077805659331026192708460314
<ams>	150258592864177116725943603718461857357598351152301645904403697613233287231227125684710820209725157101726931323469678542580656697935045997268352998638215525166389437335543602135433229604645318478604952148193555853611059596230656
<rindolf>	damo22: do you mean a 2048 bits' number?
<ams>	:-)
<myrl-chan>	ams: lol.
<exio4>	it's a small number
<jeaye>	relatively
<ams>	i wonder if you could do it on a cm5
<exio4>	well, for storage, not for other things :p
<damo22>	i think this is a worthwhile operation, to help me complete this, for the good of freedom for all x86 computer users
<twey>	that's quite a lot of bits
<wei2912>	that's just 2048 bits
<exio4>	myrl-chan: remember k^n can be done in o(logn) too
<wei2912>	well, i hope it's just 2048 bits
<damo22>	its 2048 bits
<ams>	maybe a ga could handle it?
<damo22>	but not the number ams posted
<damo22>	ga?
<myrl-chan>	i'm guessing that a 2048-qubit qc will work.
<ams>	green array chip ..
<damo22>	myrl-chan: do you know of one in existance? i will pay to rent one
<aawe>	myrl-chan: you mean 2^2048-qubit qc?
<ams>	damo22: i have one, 100000 usd / minute is the rate, excluding costs to set it up.
<rounin>	are we cracking rsa?
<damo22>	this is a number having 2048 bits long, not 2^2048 bits long
<aawe>	no, we're hacking the fbi
<rounin>	ah
<damo22>	no
<rounin>	i sometimes like to try factoring semiprimes just for fun
<rounin>	even an impossible task can make for good practice
<damo22>	rounin: can you help me
<rounin>	that depends, damo22
<damo22>	it is a signing key for x86 firmware that locks the platform down to having crappy security
<_blizzy_>	i store my mvc ids in int64
<_blizzy_>	i also like to think big
<twey>	3341500109743369173470515528396010585194214078623030801762485459987558021071513398366105644720682961396075449415329677208347475857191763735102522641439727697845373452446431620066542502848898435227716312221702137169824431872879747649052792288143721932164189538399293052758574183262631752572958480507668942485009579365853525977650991548083084021372917821294075189993793198097322838504224820404816066244302975
<twey>	217444950776611855831532856745175469644936409587794393647943942277447485598943897114287148887022496795560690982253533694497875172368626671254864271764394231396751211803954151850594271232 yottabytes, eh
<adsc>	is it possible to "pull" files into a dropbox from a remote webserver url?
<rounin>	damo22: one of those new uefi things?
<twey>	adsc: ‘wget’?
<rounin>	and what about that is it you need help with?
<damo22>	rounin: worse. it is management engine
<rindolf>	adsc: does dropbox provide an api?
<adsc>	rindolf: yes
<rounin>	damo22: oh no! that thing that lets a corporate computer be remotely pwned
<rindolf>	adsc: then you can write a program to do it.
<adsc>	twey: no, i mean, upload to dropbox by telling it to fetch the file from an url
<aawe>	dropbox invented the term "api"
<rounin>	i don't think mine has that, but i'm a bit uncomfortable by the mere possibility
<rindolf>	aawe: it did? no!
<rounin>	and they keep inventing new backdoors
<adsc>	rindolf: i don't find anything in the api like this
<damo22>	rounin: this thing has dma access and network access, i want the key so i can make open free firmware for it that disables the backdoor
<rounin>	it's like each computer is filled with computers now
<rindolf>	i still remember the windows 16-bit api.
<aawe>	rindolf: but was it restful?
<rounin>	well, damo22, i wouldn't bet on you being able to get the key just like that
<txdv>	rindolf: how was it?
<rounin>	if it's a symmetric cipher, then that's one thing
<adsc>	aawe: it is restful now, it rests in peace
<damo22>	rounin: i have the pubkey
<damo22>	its rsa
<aawe>	damo22: rsa is uncrackable
<rounin>	damo22: cracking 2048-bit rsa might net you a nobel prize
<aawe>	just ask nsa
<ams>	aawe: i can crack rsa encrypted stuff..
<rounin>	damo22: one thing you could hope is that it was generated using a bad rng
<adsc>	rsa with 16bit cipher is easily crackable
<txdv>	rounin: more like some prison time in an nsa sponsored facility
<rounin>	damo22: in that case, you could download a zillion rsa keys from keyservers, and try using gcd to find a common factor between them
<damo22>	rounin: i implemented pollards rho in gmp
<aawe>	ams: rubber hose crypto doesn't count
<rindolf>	adsc: just fetch the file using http or whatever and upload it from your local machine.
<rounin>	damo22: that's good, but ... people use rsa for a reason
<myrl-chan>	aawe: no. a 2048-qubit qc.
<rounin>	2048 is a bit small, but it's still huge
<rindolf>	adsc: do it in two steps.
<myrl-chan>	aawe: an x-qubit can holding 2^x bits.
<txdv>	yes, too bad we are all out of qubits
<txdv>	only tacos left
<aawe>	i wonder how many dyson spheres would be needed to have enough energy to perform a single arithmetic operation on any given 2^2048-bit number
<myrl-chan>	also, in like 2 to 4 years, rsa won't be safe anymore.
<rindolf>	txdv: the win16 api wasn't that spectacular, but people did some cool stuff with it.
<damo22>	the pubkey is hashed and the hash is stored in rom and verified by the platform on each boot
<damo22>	your x86
<damo22>	needs a mod chip
<txdv>	rindolf: what cool stuff?
<aawe>	anymore, in like 2 to 4 safety, years won't be rsa any also
<rindolf>	txdv: various windows apps.
<adsc>	rindolf: unfortunately can't
<rindolf>	adsc: why not?
<damo22>	rounin: i found 6 pubkeys for different revisions of the firmware
<adsc>	rindolf: the requirement is explicitly to cause no traffic to the local machine
<adsc>	rindolf: i already use the api in cases where i can control the server
<rounin>	damo22: could the hash algorithm or the comparison be insecure?
<rindolf>	adsc: well, not sure you can eat your cake and have it too.
<myrl-chan>	urgh
<myrl-chan>	my brain.
<rounin>	damo22: perhaps you could manage to generate another key that compares to the same thing
<myrl-chan>	is burning out.
<myrl-chan>	>.<
<damo22>	rounin: the hash is sha-1
<rounin>	hmmmmmm
<adsc>	rindolf: yeah, it seems i can't, which makes me so mad
<damo22>	or sha-256 for some models
<rounin>	i wouldn't bet on it
<rounin>	unless they use strcmp() for comparisons lie... either sony or nintendo did once
<aawe>	40 exabytes should be enough for anybody
<myrl-chan>	how the fuck.
<myrl-chan>	do.
<myrl-chan>	i.
<damo22>	rounin: we dont have execution on the out of band microcontroller, but i have all its firmware uncompressed
<myrl-chan>	ugh, fuck this. i'll just go and worship monads or something. they're fucknig magic.
<twey>	myrl-chan: sounded like you were about to ask a question
<twey>	myrl-chan: they're very un-magic
<aawe>	monad is just a typeclass
<twey>	well, most of them ☺  they're pretty nice for capturing magical stuff, though.
<myrl-chan>	twey: i'm having problems with monads and types that accept higher-order functinos.
<twey>	myrl-chan: what problems?
<damo22>	the firmware for this thing is stored in your bios flash alongside the x86 bios
<myrl-chan>	i'm reading about poor man's concurrency and stuff.
<txdv>	a monad is just a monoid in the category of endofunctors, what's the problem?
<myrl-chan>	`data concurrent a = concurrent ((a -> action) -> action)
<damo22>	its a 5mb binary compressed blob and has a network stack
<damo22>	we need to remove it
<myrl-chan>	i don't have a fucking idea how that's a monad to start with.
<aawe>	a -> b is a monad
<aawe>	or maybe ->a is, i forget
<twey>	myrl-chan: being a monad means you can define operations return ∷ a → concurrent a and join ∷ concurrent (concurrent a) → a
<twey>	uhh
<twey>	myrl-chan: being a monad means you can define operations return ∷ a → concurrent a and join ∷ concurrent (concurrent a) → concurrent a
<rounin>	hm... can the pcs still boot if the chip is just shorted
<damo22>	rounin: nope it reboot loops
<rounin>	i guess one could destroy a couple of pcs finding out
<myrl-chan>	twey: i don't have unicode here.
<damo22>	this microcontroller is hardwired to reset the x86 by default
<redpill>	damo22: just logged in this is the me you are talking about? if so yes we very much need to kill that scary crap
<twey>	myrl-chan: being a monad means you can define operations return :: a -> concurrent a and join :: concurrent (concurrent a) -> concurrent a (please fix your system ☹)
<myrl-chan>	twey: i'm guessing that that's a :: ?
<damo22>	redpill: yes we need to remove this
<damo22>	we need to factorize the key
<damo22>	i cant see any other waya
<rounin>	damo22: but if it triggers a reset, then perhaps that could also be suppressed
<damo22>	rounin: with a mod chip maybe
<myrl-chan>	twey: i'm sshing to my phone, because my phone has internet, and our internet got cut off... we were on a trip so we weren't able to pay. oh, the joys.
<twey>	myrl-chan: can't tether?
<myrl-chan>	twey: can't tether, it's an iphone 3.
<rounin>	damo22: supposing you could short the chip and connect the reset to ground or some power source or whatever
<rounin>	damo22: of course, that would make it rahter hard to reset
<myrl-chan>	twey: i think you need itunes, and even so, it still didn't work on my windows box with itunes.
<damo22>	basically, every chipset made by intel after ich9 is affected
<myrl-chan>	twey: actually, i think i read about this. but it's a pain to tether anyway, considering i only have 30 mb.
<rounin>	damo22: i've read that all the new chipsets support the management engine, but surely it's not enabled for all of them?
<myrl-chan>	twey: where 'this' is "tethering iphone and linux"
<damo22>	rounin: the hardware is inside
<damo22>	running a firmware of some kind
<aawe>	myrl-chan: your phone data plan is capped to 30 mb?
<myrl-chan>	aawe: nah, it's not a plan.
<damo22>	thats reason enough for me to want to remove it
<myrl-chan>	aawe: at least they're kind enough to give 30 mb everyday, i guess.
<txdv>	wat
<txdv>	30mb of what?
<damo22>	rounin: you can check your bios i bet its in there
<aawe>	txdv: porn
<myrl-chan>	30 mb internet quota.
<txdv>	jesus
<txdv>	you poor soul
<damo22>	as in, dump the flash and check for the management engine firmwrae
<txdv>	i thought i had it bad with my 50/10 mbit connection
<myrl-chan>	well, it's free, at least. you don't have to pay anything.
<rounin>	damo22: that's a good idea
<txdv>	myrl-chan: how don't you have to pay for that service?
<damo22>	rounin: i have a tool that finds it for you in the binary
<myrl-chan>	txdv: they give it to you for freeeeee
<aawe>	myrl-chan: kindle 3g card?
<rounin>	damo22: at what point do we stop buying these products with "bonus features" like that, though
<txdv>	who is they?
<myrl-chan>	aawe: nah. it's my phone. i don't have a plan.
<damo22>	rounin: i did already
<rounin>	damo22: only problem is that intel seems to have beaten all the competition
<myrl-chan>	aawe: phone/sim. same shit.
<twey>	myrl-chan: lol iphone
<rounin>	damo22: if only someone could come out of nowhere with a processor that's 2x as fast and doesn't have all sorts of bullshit
<aawe>	myrl-chan: i do not agree that phones are equivalent to sim cards
<damo22>	rounin: yes, we need to fix the problem otherwise all users are at risk of losing their computing freedom on x86
<damo22>	or just let x86 die
<redpill>	datasheet says my board done not have the me but it is in there -- 00:16.0 communication controller: intel corporation 7 series/c210 series chipset family mei controller #1 (rev 04)
<rounin>	i would totally be willing to move to mips or arm or what-have-you
<myrl-chan>	aawe: lol.
<myrl-chan>	twey: well, at least it's not java.
<damo22>	redpill: yes you have it
<damo22>	its me v8
<aawe>	didn't you know? x86 is optimized for optimization
<damo22>	its inside the pch chip
<aawe>	we can't migrate off it
<txdv>	nowadays phones are equal to personal computers from 10 years ago
<aawe>	txdv: except they only hold 24 hours of charge, if that
<damo22>	all my hardware that i own is without me
<damo22>	except the ones on the shelf i am reverse engineering
<rounin>	does amd have some kind of secret nonsense though? i bet they have this new locked-down bios replacement
<txdv>	aawe: put a computer from 10 years ago on a phone battery from nowadays
<twey>	myrl-chan: so, here's how it's a monad: http://lpaste.net/131681
<damo22>	yes they have smu
<txdv>	and you will see that the computer will eat away that thing faster
<aawe>	txdv: impossibleu!
<redpill>	nsa spyware is what it likely is ;). i got an intel chip because ivy bridge gfx are great on linux. last intel chip i will buy if someone does not crack this
<aawe>	ees not 24voltagé
<txdv>	everything is possibru
<damo22>	amd has secret sauce dont worry
<rounin>	brb
<myrl-chan>	twey: join is >>=?
<aawe>	i hope we get nsa certified(tm) chipsets, so that we can be safe from spyware
<damo22>	hahaha
<twey>	myrl-chan: as a point of mathematical interest, you know that concurrent will form a monad because the argument to ‘concurrent’ is a continuation, which means it's curry–howard to double negation, and you can derive a → ¬¬a and ¬¬¬¬a → ¬¬a in intuitionistic logic
<twey>	myrl-chan: no, join is join
<twey>	ugh, i mean
<twey>	myrl-chan: as a point of mathematical interest, you know that concurrent will form a monad because the argument to ‘concurrent’ is a continuation, which means it's curry–howard to double negation, and you can derive a -> !!a and !!!!a -> !!a in intuitionistic logic
<twey>	myrl-chan: join :: m (m a) -> m a
<twey>	myrl-chan: join and return are sufficient to define a monad, and join is often easier to write than bind
<myrl-chan>	twey: ah, i see. what's join for?
<twey>	myrl-chan: you can define  x >>= f = join (fmap f x)
<twey>	myrl-chan: join ‘crushes’ down two layers of a monad into one
<twey>	myrl-chan: for example, for lists, join = concat
<twey>	myrl-chan: for maybe, join (just (just x)) = just x
<twey>	(and join _ = nothing)
<redpill>	my pi is my most secure computer at this point
<myrl-chan>	twey: i see.
<damo22>	redpill: really?
<damo22>	redpill: it uses a boot blog
<damo22>	blob*
<aawe>	some argue that join should be the defining method of monads, rather than bind (>>=), as it's often more intuitive to define it that way
<myrl-chan>	twey: that's a pretty nice concept, seems like it'll help me in understanding bind.
<twey>	myrl-chan: >>= is nice to *use* but generally unpleasant to *define*.
<aawe>	but it's already >>= so
<twey>	myrl-chan: and vice versa
<redpill>	i think so, yes the buy just for the drm parts of the gpu
<redpill>	opengl parts of the gpu are now open
<aawe>	drm parts of the gpu?
<twey>	myrl-chan: i'm interested what you're reading that this came up.  it's a really cool example.
<damo22>	redpill: only thing i use my pi for is as a spi flashing tool
<redpill>	s/drm/codecs/ mpeg2 vc1 mpeg4
<myrl-chan>	twey: i'll send you what i have. i don't have the original thing. i got it from wei2912.
<twey>	myrl-chan: it's okay, just a reference will be fine
<myrl-chan>	twey: actually, wei2912 seems online, so you can ask for the original thing.
<twey>	i don't have time to read it now anyway
<myrl-chan>	twey: i don't even know where this came from even. lol. he just gave me the file and lead me through this.
<twey>	ah, okay ☺
<crypto_guy>	hello guys, for beautiful library interface you like type name fatdata_ctx or fatdata_t?
<twey>	well, this concept of continuation is at the heart of some very neat research.
<myrl-chan>	twey: also, what's the concept behind of "running monads"
<myrl-chan>	s/of //
<twey>	myrl-chan: there's not necessarily such a concept
<twey>	myrl-chan: a monad is just the data-structure
<twey>	myrl-chan: in some cases that data structure can be viewed as a program that can be ‘run’
<twey>	e.g. an io value defines an imperative program
<myrl-chan>	i see.
<twey>	in that case ‘running’ the monad means extracting the value
<myrl-chan>	i see.
<twey>	that's different to what's going on here, though.  the runfoo convention is common for a function that simply extracts the single argument of a newtype.
<myrl-chan>	twey: can you also show me how >>= would be done?
<myrl-chan>	twey: without the use of join.
<txdv>	damn im so tired
<ihatehex>	https://imgur.com/gallery/j0uf064 loling
<txdv>	ihatehex: go work
<ihatehex>	with
<ihatehex>	why won't you love me, txdv?
<myrl-chan>	ihatehex: because you're a shit.
<txdv>	you suck at dota
<twey>	myrl-chan: let me see, it'll be something like bindc (concurrent g) f = concurrent $ \h -> g (\x -> runconcurrent (f x) h)
<ihatehex>	txdv, better than you at dota presumably
<ihatehex>	:p
<ihatehex>	i'm doing better on my smurf
<ihatehex>	i'm consistently in high bracket, looking forward to carrying my way through tbd ranked and climbing to 4.5k over summer
<twey>	myrl-chan: (which is literally just the expansion of join (fmap f x))
<myrl-chan>	twey: i see.
<txdv>	high skill?
<twey>	myrl-chan: (but i derived it separately :þ)
<fragment>	i'm thinking about possibly going into cloud computing post-uni. but the module choices i have are a bit limited, but would taking a module in distributed systems be of much use?
<txdv>	yeah
<txdv>	cloud computing is not so
<txdv>	its just buzzword
<damo22>	hi, im thinking of living in a cloud after uni
<damo22>	can you help me?
<myrl-chan>	twey: did you understand monads instantly?
<txdv>	damo22: just stay at uni, find a guy with dreadlocks and buy some weed
<txdv>	you will live in a cloud then
<damo22>	thx!
<twey>	myrl-chan: define ‘understand’ :þ
<twey>	myrl-chan: took me a year or so of occasionally looking at it then giving up before i got a working intuition for how to use a monad
<twey>	learning materials were much worse then, though
<myrl-chan>	twey: i see.
<kx2>	hey checking for a user input in vb is there way i can go || if input = # then use the associated variable like if user inputs 1 then i use myvar1 for the output i'm basically outputting vars # 1-100 each bound to specific values
<twey>	on the other end of the spectrum, my category theory is still pretty poor, so maybe i don't really understand them much at all
<myrl-chan>	twey: i should probably learn more about category theory.
<twey>	it's neat
<myrl-chan>	twey: what's the concept behind category theory?
<rindolf>	kx2: which version of vb?
<kx2>	.net
<vendu>	hello bunch :)
<rindolf>	kx2: ah.
<kx2>	sorry! forgot to specify
<rindolf>	vendu: hi, sup?
<encapsulate>	if i'm calling this function with a pointer to the object, does it need to take that pointer argument and do i really need to use this? https://ideone.com/kygjci
<vendu>	rindolf, chilling out, getting stoned, listening to good tunes :)
<rindolf>	vendu: nice.
<twey>	myrl-chan: the category
<kx2>	i didnt see a way to actually just do a single if and display varn based on the input o.o
<rindolf>	encapsulate: you're not making use of the socket * socket pointer.
<rindolf>	encapsulate: you don't need to pass it or call with it explicitly.
<merijn>	myrl-chan: the biggest problem with "understanding monads" is that there isn't much to understand
<vendu>	rindolf, yeah, just relaxing :)
<merijn>	myrl-chan: and, as someone currently actively studying category theory, ct has little to no applicability to learning haskell
<vendu>	hmm %)
<vendu>	i'm wicked baked, tbh %)
<merijn>	while some names in haskell come from there and the underlying concepts are vaguely connected to their ct equivalent the link is tenuous enough to not remotely be worth the effort. well, unless you enjoy learning abstract math it's own sake, in which case, knock yourself out
<myrl-chan>	twey: category?
<vendu>	myrl-chan, damn it man, i need 14-day weeks :)
<myrl-chan>	vendu: where 5 days is for work and 9 days isa for rest?
<vendu>	myrl-chan, :)
<vendu>	yeah
<vendu>	well, 9 for other activities :)
<vendu>	such as hacking code :)
<myrl-chan>	s/is/are/ s/isa/are/
<merijn>	myrl-chan: the concept behind category theory is: "let's build a new foundation for math that doesn't rely on set theory!" "also, functions seem to be a pretty useful thing, so let's be inspired by those!" <- the concept behind category theory
<vendu>	hacking code is the ultimate thing to do with computers :)
<myrl-chan>	could probably be shortened to `s/is\s+/are/`
<myrl-chan>	forgot a g there.
<twey>	myrl-chan: http://lpaste.net/131681 — super-explicit version with lambdas everywhere, if it helps you
<vendu>	hey twey :)
<twey>	hey, vendu
<vendu>	we basically need an mud on steroids :)
<vendu>	with human game leaders etc. :)
<vendu>	this would easily bring in enough dough to do something interesting :)
<encapsulate>	rindolf, do i need to use the this?
<twey>	myrl-chan: a category can be defined as a set of objects and a set of ‘arrows’ between objects satisfying certain properties
<vendu>	one thing i want is a porsche 911 turbo s :)
<twey>	myrl-chan: or as a directed graph in which every node has an edge to itself
<vendu>	560 horsepowers in a boxer-6 :)
<vendu>	it does 0-100 km/h in about 3 seconds :)
<merijn>	twey: categories are not restricted to those that can have their objects/morphisms represented as a set, iirc
<twey>	myrl-chan: as merijn says, category theory is not necessary for haskell
<vendu>	anyone else into sports cars? :)
<merijn>	myrl-chan: this is an ok intro: http://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/ uses both c++ and haskell for examples
<twey>	merijn: plain old categories are.  there are fancier kinds, but they have scary names like ‘enriched categories’ or ‘n-categories’
<aktx>	vendu, no, but im into programming ;)
<vendu>	i suppose the relatively new porsche 918 spyder would be the bomb :)
<twey>	merijn: oh, wait, no
<vendu>	aktx, it's got almost 900 horsepowers :)
<twey>	merijn: large categories are also categories
<aktx>	oh?
<myrl-chan>	thanks.
<aktx>	vendu, what do you do for a living?
<vendu>	that's an insane lot, even in a sports car :)
<vendu>	aktx, hehe living my life :)
<vendu>	i'm retired :p
<aktx>	nice b)
<merijn>	myrl-chan: but anyway, as i said it's mostly a waste of time in terms of learning haskell. you'd be better of studying lambda calculus and basic algebra
<vendu>	i have enough time to scheme and sometimes realize some ideas :)
<vendu>	software stuff is my number one hobby :)
<aktx>	vendu, i wish i was retired :<
<aktx>	how much exactly do you need to be considered retired?
<vendu>	aktx, http://vendu.twodots.nl/projects.html :)
<twey>	learning category theory will help you understand haskell, amongst other things, but it's a kind of ‘understanding’ that goes way beyond what you'd generally need as a programmer
<aktx>	vendu, nice b)
<twey>	type theory is quite useful in everyday haskell, i think
<merijn>	yeah, but i considered that part of studying lambda calculus
<merijn>	since untyped lambda calculus is boring
<twey>	i don't know, church-encoding is pretty cool
<merijn>	i like scott-encoding more
<twey>	i still don't have a good intuition for scott encoding
<vendu>	hmm
<vendu>	aktx, so i'm a hobby hacker :)
<vendu>	with strong unix/linux background
<aktx>	i see
<aktx>	anybody here have sleep problems?
<vendu>	aktx, written hundreds of thousands of lines of mostly c code this millennium :)
<encapsulate>	do i need to be using "this" https://ideone.com/kygjci?
<vendu>	i'd estimate perhaps half a million... or so :)
<aktx>	vendu, oh? any chance i may have used one of your stuff?
<vendu>	aktx, hmm
<vendu>	:)
<vendu>	there's a very slight chance :)
<aktx>	;)
<myrl-chan>	twey: the last link you sent is the same as the first.
<vendu>	https://github.com/vendu/
<aktx>	small world :p
<twey>	oh, now i do, i guess
<twey>	myrl-chan: yes, but it had an annotation applied in the meantime
<vendu>	hmm :)
<aktx>	vendu, how do you have the time to make all those commits? man...
<aktx>	my github profile isnt nearly as impressive :(
<vendu>	aktx, so i basically want to reinvent unix and do other interesting, sometimes useful things :)
<vendu>	and hack a few decent computer games :)
<denommus>	pyon-ktiert: ping
<denommus>	twey: ping
<aktx>	sounds like quite a goal
<denommus>	xeno: ping
<vendu>	aktx, i'm a one track mind... when i hack code, i hack code :p
<aktx>	:p
<twey>	denommus: pong
<encapsulate>	anyone?
<encapsulate>	plz help!!!!
<encapsulate>	desperate to solve
<denommus>	twey: i'm writing a netwire-based library for ocaml, but i have thrown away the idea of "inhibiting"
<encapsulate>	the client is waiting
<twey>	encapsulate: it's not clear what you're trying to do
<twey>	denommus: good
<vendu>	aktx, i want a cyberpunk-themed (as opposed to typical ad&d and such) rogue-like :)
<denommus>	twey: instead, if a user wants a wire to stop emiting, he should use an adt
<vendu>	i have a bit of a start for it :)
<aktx>	vendu, sorta like deus ex? ;)
<denommus>	twey: but that makes arrowzero and arrowplus not implementable for wire
<vendu>	aktx, something unique :)
<aktx>	i see :p
<vendu>	aktx, mixing in elements of supernatural :)
<merijn>	vendu: so...shadowrun?
<aktx>	oh?
<vendu>	such as norse and other gods and other creatures :)
<encapsulate>	twey, im trying to change a member var
<vendu>	aktx, got inspiration from both rogue and nethack so far :)
<vendu>	merijn, i have a book or a few of shadow run :)
<vendu>	physical paper books :)
<vendu>	i have cyberpunk 2020 and some extras for it
<myrl-chan>	twey: ah. probably because elinks didn't reload the new page. thanks.
<twey>	denommus: sounds about right
<denommus>	twey: do you think that i should make the implementation of arrowzero only work for (_, 'b option) wire?
<twey>	denommus: yes
<vendu>	hmm :)
<denommus>	twey: great
<vendu>	hey denommus :)
<twey>	denommus: i've never liked netwire's implicit inhibiting everywhere
<twey>	makes it very hard to reason about, sometimes
<denommus>	twey: i inquired the author about that
<twey>	that said, i've never really liked the netwire approach to frp in the first place.  working on transducers instead of actual behaviours feels unpleasantly convoluted
<denommus>	twey: i like it. i find it easier to reason about the signal traveling between the signal functions until it's transformed in another signal
<denommus>	twey: it's similar to point free functions
<denommus>	twey: and if you really do need to make it non-point free, you can always use the arrow syntax
<twey>	denommus: but with monadic approaches you can use actual point-free functions.
<denommus>	twey: i can also use actual point-free functions, i just need to arr them
<rindolf>	encapsulate: is this your code - https://ideone.com/kygjci ?|
<twey>	denommus: at which point they stop being functions :þ
<encapsulate>	rindolf, yes
<twey>	denommus: the point is that there's an extra layer of abstraction for no benefit
<denommus>	twey: but anyway, it's a trade-off
<rindolf>	encapsulate: then why are you passing "socket * socket"?
<twey>	arrowized frp is a nice hack around the time leaks before we discovered the time-parametricity trick, but i feel like it's outlived its usefulness
<twey>	i'm not sure it brings anything else to the table
<encapsulate>	rindolf, socket * obj1 = &sockets[1]; obj1->f(obj1); is the call
<denommus>	twey: space and time leaks in reactive programming are too easy to happen. reactive-banana solved it with a event-based, discrete time approach. afrp wants to keep using continuous time, but for that they must work on the functions over a signal
<twey>	and netwire in particular then goes about reconstructing events on top of signal transformers in a very convoluted way
<twey>	denommus: reactive-banana is not discrete-time
<rindolf>	encapsulate: why? you already have this/etc.
<denommus>	twey: isn't it like ocaml's react?
<rindolf>	encapsulate: no need to pass it explicitly.
<twey>	denommus: i don't know react
<denommus>	twey: a push-based approach on events?
<twey>	denommus: but reactive-banana has continuous time, and conal will be very unhappy if he hears you claiming otherwise :þ
<twey>	denommus: reactive-banana is based on the push–pull model conal wrote about
<denommus>	twey: ah
<twey>	denommus: but that's an implementation detail — it exposes continuous-time semantics
<denommus>	twey: sorry for the confusion
<denommus>	twey: i don't know where i took the idea that it's discrete from, then. i guess i just thought about react
<vendu>	hmm :)
<twey>	denommus: monadic frp doesn't imply discrete time (and most frp people consider discrete-time systems to not be frp, anyway)
<denommus>	twey: yeah, i don't consider it frp myself
<twey>	denommus: the afrp stuff came about because of time leaks.  if you're allowed too much freedom with what you do with behaviours, you can end up depending on a value that doesn't exist yet
<twey>	denommus: so one way around that is to not let the user touch the behaviours at all, and only allow them to play around with behaviour *transformers* — that's afrp
<denommus>	twey: i know, that's what i talked about up there. i just called behaviours "signals"
<twey>	denommus: but since then we've discovered better ways of disallowing time-leaking code by using a phantom type parameter representing the times at which values are available, letting us reason about that in the type system
<twey>	denommus: so now we can have our first-class behaviours back
<twey>	(and signal transformers are just normal functions on them)
<denommus>	twey: but that's the thing - phantom types in ocaml are still tricky
<twey>	i don't know much about ocaml, i'm afraid
<twey>	what's tricky about them?
<denommus>	twey: wait
<denommus>	twey: in ocaml, phantom types are done by using the module system. the phantom type is provided by a sig
<denommus>	twey: while it is viable to do that, it is very verbose
<twey>	i see
<jkbbwr>	hows everyone doing
<denommus>	twey: http://camltastic.blogspot.com.br/2008/05/phantom-types.html
<twey>	‘'a (pronounced “alpha”)’ — huh.
<denommus>	twey: i... also didn't know that
<denommus>	hm. i guess if i use a .ml and a .mli it's not so verbose
<rindolf>	jkbbwr: i'm fine - posted a facebook post.
<rindolf>	jkbbwr: about something that happened to me today.
<rindolf>	jkbbwr: and i finished adding readme and license files to the vcs repositories on my hard disk - or at least those that my script can find.
<txdv>	does anyone know how the linux distribution is called where any failure in providing the correct paramters to a bash command results in a rm -rvf / ?
<twey>	txdv: suicide linux
<rindolf>	twey: there is such a thing?
<twey>	rindolf: it's a sam512 invention: http://qntm.org/suicide
<twey>	(his fiction is wonderful, by the way)
<rindolf>	twey: ah.
<twey>	denommus: this approach doesn't look too terrible.  it's a little noisier at definition-time than the haskell equivalent, but doesn't seem much less convenient for an end-user.
<winny>	txdv: gnu rm will fail if you do anything against / without --no-preserve-root
<denommus>	twey: yeah, i guess you're right
<myrl-chan>	winny: thank god
<winny>	txdv: that said, if you're asking if there are any commonly used scritps that include rm -rf $usr/$somefile , i couldn't say
<denommus>	twey: and the lack of "do" syntax? doesn't it make programming in a monadic moment harder?
<twey>	denommus: lack of arrow syntax didn't seem to put you off :þ
<winny>	myrl-chan: it's really dumb imho, you can still do plenty of damage like this: rm -rf /?*
<myrl-chan>	winny: what's with the ?
<denommus>	twey: that's fair - but to be honest i prefer to use the common arrow combinations even when i'm in haskell
<jkbbwr>	twey: steam used to fire rm -rf /
<twey>	denommus: most of ‘monadic’ frp apis (at least reactive-banana and sodium) seems to involve using applicatives, anyway
<twey>	jkbbwr: i remember that
<twey>	jkbbwr: it was /usr though
<winny>	jkbbw, twey: not quite, you mean rm -rf /some/path
<winny>	don't get confused, rm -rf / is a special case
<winny>	gnu rm /will/ refuse to run
<twey>	yeah, if it had been / it would have been fine :þ
<winny>	myrl-chan: /?* matches all files in / other than /
<myrl-chan>	winny: ahh.
<twey>	denommus: the monad isn't really used all that much, only for dynamic-switching things (when you want join) and some initial setup
<winny>	basically, you /have/ to trust scripts your run, and if some programmer messes up a script, you are at their mercy
<twey>	winny: well, you can read it, and/or run it in a gaol of some kind.
<twey>	so long as it's open-source, you get to trade-off convenience against paranoia
<txdv>	bumblebee deleted root
<txdv>	there was github meme explosion on that commit
<twey>	oh, it was bumblebee i was thinking of, not steam
<twey>	*that* was /usr.  i don't know what steam did.
<twey>	there was an accidental space in the installation script in the debian package.
<rindolf>	steam may have deleted /home
<twey>	it was supposed to rm -rf /usr/local/bumblebee and instead did rm -rf /usr /local/bumblebee or something, iirc
<winny>	if you want, here is a portable way to trash your rootfs -- dd if=/dev/zero of=$(awk '/[[:whitespace:]]/[[:whitespace:]]/ { print $3 }' < /etc/fstab)
<twey>	heh.
<winny>	bottom line, you *must* have some sort of trust or understanding of the code you run, or your machine can do anything.
<myrl-chan>	winny: take over the world?
<winny>	sure :d
<myrl-chan>	ams: hey, we found the solution.
<txdv>	if the dev of rvm decides to go bonkers, he might delete my home directory
<winny>	oops i typed the wrong command
<denommus>	twey: my doubt is that most examples of reactive-banana clearly use the do syntax. wouldn't another syntax be too ugly?
<twey>	txdv: you can do stuff like selinux, too
<txdv>	reactive-banana
<txdv>	:d
<txdv>	twey: do you know that selinux was developed by the nsa?
<twey>	txdv: yes.
<twey>	there are alternatives
<myrl-chan>	nk also has a flavor of linux.
<myrl-chan>	i knew it, linux is opressive.
<txdv>	red start os
<winny>	this should work on mac os x as well, freebsd, linux dd if=/dev/zero of=$(mount | awk '/on \/ / { print $1 }')
<winny>	can't say it will work on solaris though, it has a weird mount(8)
<myrl-chan>	winny: but will it work in windows?
<twey>	denommus: don't think so.  monads without do-syntax aren't terrible: you just have a bunch of lambdas lying around.
<twey>	denommus: it'd be kind of ugly if you had no infix bind, maybe
<myrl-chan>	hmmm
<twey>	denommus: anyway, you should be able to easily get afrp back from monadic frp by the kleisli construction
<myrl-chan>	if i understand this correctly, `return x >>= f >>= y >>= z` == `(x >=> y >=> z) f` ?
<twey>	(‘ah, the fibonacci defence!  ho, ho, ho!’)
<myrl-chan>	er
<myrl-chan>	wtf did i just do, let me redo that
<myrl-chan>	if i understand this correctly, `return x >>= f >>= y >>= z` == `(x >=> y >=> z) f` ?
<myrl-chan>	if i understand this correctly, `return x >>= f >>= g >>= h` == `(f >=> g >=> h) xf` ?
<winny>	just insert that into /etc/rc or /etc/init.local
<twey>	myrl-chan: getting there ;)
<myrl-chan>	fucking shit, i give up.
<myrl-chan>	s/xf/x/
<denommus>	twey: ... i guess you're right
<twey>	myrl-chan: yes.
<myrl-chan>	twey: thanks.
<winny>	myrl-chan: maybe with cygwin but i doubt it
<myrl-chan>	winny: i doubt it too.
<winny>	i am pretty sure it has a working mount(8) and a working dd(1), but i don't think windows will allow any programs to write to the disk like that
<winny>	unless you run cygwin as admin
<sadale>	well, don't try dd a disk device with cygwin. it doesn't work. i tried that
<myrl-chan>	sadale: don't try to use windows. it doesn't work. i tried it.
<sadale>	myrl-chan, ... true until you need to use things like unity3d
<ams>	myrl-chan: for_
<sadale>	windows is fine for pc. but for server, i stick with linux :3
<myrl-chan>	ams: world domination.
<ams>	and?
<myrl-chan>	ams: meh, you already forgot? carry on.
<ams>	myrl-chan: not at all.  i already dominate.
<myrl-chan>	ams: kek
<ams>	:-)
<erste>	hi, quick question.. can you build android apps using a mac ??
<twey>	myrl-chan: http://lpaste.net/8270369122299150336
<twey>	erste: yes
<erste>	twey, nice :) thank you :p
<_blizzy_>	it's unprofessional to use github pages
<_blizzy_>	ok
<anj7>	_blizzy_: really?
<pyon-ktiert>	denommus: pong - super delayed
<_blizzy_>	anj7, some think that
<myrl-chan>	twey: ah. thanks.
<pyon-ktiert>	twey: hi to you too
<pyon-ktiert>	myrl-chan: hi
<denommus>	pyon-ktiert: i was just ask if it was a good idea to implement arrowzero and arrowsum for ('a, 'b option) wire, but twey answered my questions
<pyon-ktiert>	ah!
<pyon-ktiert>	:-)
<myrl-chan>	pyon-ktiert: g'day.
<pyon-ktiert>	g'day
<denommus>	(and he also convinced me that afrp is a surpassed need........)
<rindolf>	pyon-ktiert: hi, sup?
<pyon-ktiert>	rindolf: nm vbing hbu?
<myrl-chan>	pyon-ktiert: my brain hurts. :/
<rindolf>	pyon-ktiert: i wrote a facebook post about a few things that happened to me today.
<rindolf>	pyon-ktiert: and shared some other posts by other people.
<pyon-ktiert>	rindolf: ah! :-)
<myrl-chan>	i should just accept that monads are like burritos....
<pyon-ktiert>	myrl-chan: why?
<denommus>	myrl-chan: are you still having problems understanding them?
<pyon-ktiert>	myrl-chan: don't think too much about it... monads are just functors with pure (aka return) and join
<rindolf>	pyon-ktiert: and i've finishing adding readme files to the vcs repositories i found on my hard disk.
<denommus>	pyon-ktiert: applicative functors with join \o/
<pyon-ktiert>	rindolf: ah... what repositories specifically? :-o
<pyon-ktiert>	denommus: yea!
<denommus>	myrl-chan: do you understand about type classes well?
<rindolf>	pyon-ktiert: preferably all of them - i used locate for that.
<myrl-chan>	pyon-ktiert: i'm fine with monads for the most part, except with monads that contains a function which takes a function.
<myrl-chan>	denommus: yes. i'm not confused about monads as a type class, but monads as a concept.
<pyon-ktiert>	myrl-chan: the problem with (>>=) is that its type isn't terribly helpful... but try (=<<) [aka flip (>>=)], it's a little bit better
<pyon-ktiert>	myrl-chan: and if that still doesn't help try join
<pyon-ktiert>	myrl-chan: join's type is really nice
<vdamewood>	nothing works on windows.
<pyon-ktiert>	myrl-chan: monad m => m (m a) -> m a
<_blizzy_>	except ie
<pyon-ktiert>	myrl-chan: think about what join does for various monad instances
<denommus>	myrl-chan: do you understand the concept of a functor?
<myrl-chan>	denommus: functors are things that can be mapped over, right?
<jkbbwr>	whats a functor?
<denommus>	myrl-chan: yes
<denommus>	myrl-chan: what about applicative functors?
<ams>	..
<ams>	what use is all of this?
<ams>	functors .. monads .. shomads..
<myrl-chan>	denommus: i kinda understand how it works. i just tell myself that applicatives are about mapping twice.
<txdv>	to have a discussion with a fellow functional programmer
<denommus>	ams: they are general abstractions over things that you find everywhere
<ams>	so like ... useless.
<rindolf>	ams: don't be a party pooper.
<denommus>	myrl-chan: so. monads are just applicative functors with join
<denommus>	ams: if you consider a general abstraction useless, then yeah, they are useless
<ams>	denommus: what do they solve? absolutley nothing.
<pyon-ktiert>	jkbbwr: a functor is a homomorphism of categories... the notion of "homomorphism" comes from algebra, and it isn't terribly easy to formalize in its full generality, but one way to put it is "a map [generalized function] that respects structure"
<denommus>	ams: they don't "solve" anything. they are just a general abstraction for existing solutions
<ams>	they are like church numerals .. cute, but useless.
<denommus>	ams: that's useful because you can have code that works accross multiple instances of monad
<ams>	i can haz that without monads.
<denommus>	ams: how can you have code that works accross multiple instances of monad without monads?
<pyon-ktiert>	jkbbwr: e.g., if we take into account how both addition [on the reals] and multiplication [on the positive numbers only] are associative, commutative, invertible and have identity [a structure called "abelian group"], then the logarithm is a homomorphism of abelian groups: it maps the multiplication's identity [1] into the addition's identity [0], the product of two numbers [a*b] into a sum [log a + log
<myrl-chan>	pyon-ktiert: well, i can understand join for lists, maybe and either. but i don't understand how it works for monads that have functions.
<pyon-ktiert>	b], etc.
<denommus>	myrl-chan: what do you mean by monads that have functions?
<denommus>	ams: monads aren't a language construct, they're just an abstraction. they can appear anywhere
<pyon-ktiert>	myrl-chan: (m >>= f) = join (fmap f m)
<myrl-chan>	denommus: er, here's an example. this was like a year ago. `data concurrent a = concurrent ((a -> action) -> action)`
<denommus>	ams: it just happens that haskell can describe a monad in terms of its type system
<denommus>	myrl-chan: join doesn't care about the inner value
<pyon-ktiert>	ams: the problem monads solve is effect segregation. now, monads aren't the ideal solution for that, but it's much better than no solution whatsoever.
<denommus>	myrl-chan: join just transforms concurrent (concurrent foo) into concurrent foo
<pyon-ktiert>	ams: also, "effect segregation" is only good if you consider "equational reasoning" a good thing and want to maximize the extent to which it's applicable. if you don't, then segregating effects is just a waste of effort.
<myrl-chan>	denommus: ah. i see.
<denommus>	myrl-chan: now, how you can fmap and apply over concurrent a is a more interesting question
<denommus>	...
<denommus>	my affirmative is misleading
<denommus>	but i'll wait for his return
<myrl-chan>	i see.
<denommus>	myrl-chan: sorry, i was being misleading, join may care about the inner value (it does on lists, for instance)
<denommus>	myrl-chan: and in concurrent's case it would also care, too
<denommus>	myrl-chan: because it would be concurrent ((concurrent foo -> action) -> action)
<denommus>	myrl-chan: but that would be transformed in concurrent foo
<myrl-chan>	holy shit. so that's what my problem was.
<myrl-chan>	i wasn't considering the idea of a function which takes a concurrent.
<denommus>	myrl-chan: quick question: what is the type of join (+)?
<myrl-chan>	denommus: no idea.
<denommus>	myrl-chan: (+) has type a -> a -> a, right?
<myrl-chan>	yes.
<myrl-chan>	ah, i see.
<denommus>	myrl-chan: the trick is that ((->) a) is a monad
<myrl-chan>	mhm.
<denommus>	myrl-chan: let's rewrite the type as ((->) a ((->) a a))
<denommus>	myrl-chan: join "takes away" the most external one, so the type would be ((->) a a). which is... a -> a
<myrl-chan>	denommus: ah.
<myrl-chan>	i should probably go sleep.
<denommus>	myrl-chan: (it's actually the most internal one, not the most external. i mixed it up, sorry)
<myrl-chan>	i'm going.
<myrl-chan>	cya.
<kadamurcia>	if you're not into metal, you are not my friend
<railroadrunner>	kadamurcia: the music or the class of substances?
<kadamurcia>	heavy metal!!!!
<kadamurcia>	or no metal at all.....
<railroadrunner>	kadamurcia: ok, i'm going to assume you mean music, and not the heavier elements on the left side of the periodic table.
<henke37>	i thought the metals were all over the place
<railroadrunner>	henke37: i'm pretty sure the metals are on the left side, halogens on the right, noble gases on the far right (the periodic table is very segregationist)
<railroadrunner>	henke37: ok, left to middle side
<_blizzy_>	til i'm shit at web dev.
<shayanjm>	how'd you come to that realization _blizzy_
<vdamewood>	does anyone else get irritated with these pictures on social media that have a series of 'equations' in the form of x = y (where x and y are integer constants) rather than f(x) = y?
<odin22>	i hate html email and outlook!
<odin22>	rageeeeeee
<aktx>	vdamewood, dude, i see that on linkedin too
<aktx>	it's all over the place
<aktx>	i just hope jesus christ comes back to soon so he can wipe out this earth and start anew
<aktx>	*comes back soon
<vdamewood>	aktx: religion is strictly off-topic here.
<aktx>	vdamewood, sorry
<znoosey>	wiiiiii! new light weight visual studio!
<znoosey>	now also running on linux
<vdamewood>	znoosey: running visual studio on linux?
<znoosey>	vdamewood: no, the light weight version of it
<znoosey>	vdamewood: it is called visual studio code or something, will be released today
<znoosey>	just lets you code and debug
<vdamewood>	hmm..., it's not april first.
<znoosey>	no, it was just announced at /build/
<koollman>	it's only one of the signs of the apocalypse. don't panic
<koollman>	https://pbs.twimg.com/media/cdxbmueviaahqno.jpg (this is the announce)
<vdamewood>	and i hate microsoft less.
<_blizzy_>	shayanjm, image compressing
<znoosey>	http://channel9.msdn.com/?wt.mc_id=build_hp
<shayanjm>	_blizzy_: what about it?
<znoosey>	live from /build/
<_blizzy_>	shayanjm, i had a hard time with it
<koollman>	http://techcrunch.com/2015/04/29/microsoft-launches-its-net-distribution-for-linux-and-mac/ this is another one that is nice (may kill mono project)
<shayanjm>	_blizzy_: i don't think that has very much to do with webdev specifically
<aktx>	koollman, microsoft is fast becoming irrelevant
<aktx>	i can sense microsoft is a dying company
<koollman>	aktx: how so ?
<znoosey>	koollman: no, you still need mono for the whole framework
<koollman>	i mean, it's been 'dying' for ages, now. it's still there
<aktx>	it takes time
<znoosey>	microsoft has been "dying" for ages... it just keeps growing
<znoosey>	it is like a star!
<aktx>	ppl see this as a strategic move by ms, but i see ms being desperate
<bg__>	ibm also took its time to die
<aktx>	yeah, ibm is pretty much irrelevant by this point
<aktx>	i think the next 5 years will be pivotal
<aktx>	companies will either become irrelevant and others will grow
<vdamewood>	well, no one thought it was a move if desperation when apple released itunes for windows.
<vdamewood>	s/move if/move of/
<aktx>	no, that was a smart move by apple
<aktx>	a stroke of genius by the late steve jobs
<koollman>	aktx: how is 'make your product available to more potential customers' a stroke of genius ?
<bg__>	what's wozniak doing now?
<koollman>	(which, by the way, is what microsoft is doing now)
<xeno>	aktx: ibm is unfortunately still not irrelevant :/
<aktx>	koollman, because m$ makes money on selling its o$ and the .net $dk
<vdamewood>	i never paid a dime for teh .net sdk.
<aktx>	by making .net cro$$-platform, m$ will lo$e $$$
<aktx>	$_$
<koollman>	aktx: but it will be selling more services. that's a win, i think
<aktx>	yeah exactly
<xeno>	aktx: ibm are doing great stuff too, but they do some incredibly crap stuff that they somehow manage to trick companies into using, which is bad enough that it counters whatever good things they do
<aktx>	ms and all these old tech companies are turning to "services"
<vdamewood>	oh wait, i bought an academic copy of vs 2005 professional once. so i gave them $99.
<aktx>	xeno, that's because ibm is ineffective at laying off ppl
<aktx>	and consolidating its bu
<vdamewood>	i always wondered how ibm got taken seriously as a company when their name means 'i take a shit'.
<aktx>	vdamewood, ibm = irritable bowl movement?
<aktx>	because ibm had a great logo
<aktx>	looked all futuristic, it still does to this day~
<vdamewood>	so, we have a stripped down visual studio for mac and linux. we have .net for mac and linux. all that's left is office for linux.
<dogpolice>	lovely, visual studio code...
<vdamewood>	aktx: close, the i is still i.
<dogpolice>	give me support for some native languages.
<vdamewood>	my native language is english.
<aktx>	okay, i admit, real reason why im upset at m$ is because i flunked their on-site interview and they didnt give me an offer
<aktx>	so sue me, but at least i got some insider exposure and the atmosphere doesnt look very fun over there
<vdamewood>	i'd apply, but ms doesn't have a presence in my home town.
<koollman>	i'm upset at m$ because they have intelligent people but release painful to maintain/use software. (and i'm a sysadmin)
<nizumzen>	vdamewood: office for linux would be awesome - as much as i like libreoffice - ms office is just better
<koollman>	but ... from time to time, they do something right
<bg__>	microsoft labs look interesting though, some haskell work done there
<pyon-ktiert>	vdamewood: stripped down visual studio? you mean monodeveloper, or something actually made by microsoft?
<koollman>	usually it doesn't last long
<vdamewood>	nizumzen; one small problem with that is that the mac version lags behind the windows version for features. this seems to be a pattern with them.
<vdamewood>	pyon-ktiert: actually made by microsoft. and fully tm'd visual studio.
<pyon-ktiert>	:-o
<pyon-ktiert>	gotta check that out.
<koollman>	pyon-ktiert: this: http://techcrunch.com/2015/04/29/microsoft-shocks-the-world-with-visual-studio-code-a-free-code-editor-for-os-x-linux-and-windows/
<pyon-ktiert>	koollman: thanks.
<nizumzen>	vdamewood: i have no idea about the mac version of office as i'm a linux guy but i'll take your word for it - i've only ever really used the windows version of office
<vdamewood>	nizumzen: in general, when ms writes a not-windows version of a product, the not-windows version is missing features.
<pyon-ktiert>	i mean, non-windows versions of visual studio?
<znoosey>	pyon-ktiert: of course not
<vdamewood>	bill gates wouldn't even let his kids play with ipads.
<vdamewood>	the poor kids had to listen to zunes, too.
<koollman>	sad kids, maybe. probably not 'poor' ;)
<nizumzen>	vdamewood: understood - but even a cut down version would probably be better
<jkbbwr>	im looking forward to trying it
<vdamewood>	my big gripe with a lot of the stuff out there, wether ms or not-ms, is the lack of support for complex and right-to-left scripts.
<jkbbwr>	pyon-ktiert: its already happenein
<bg__>	developers, developers, developers, developers
<vdamewood>	office for mac doesn't support it. apple's stuff didn't support it until recently. last i checked, libreoffice and openoffice didn't support it.
<pyon-ktiert>	jkbbwr: kinda, but not wholeheartedly.
<znoosey>	pyon-ktiert: their main focus group is not developers i guess
<pyon-ktiert>	znoosey: sure, but making a platform more convenient for developers doesn't require making it less friendly to anyone else.
<vdamewood>	one of the biggest problems ms faces when it comes to making windows development easier is backwards compatibility.
<znoosey>	pyon-ktiert: if you look at the cost aspect i'm sure it does
<worfox>	here it comes, office for linux :p
<_blizzy_>	http://anthonyasberry.me/ :d
<vdamewood>	they still have to support legacy apis and abis, which is a really huge pain in the ascii.
<znoosey>	microsoft should just have the same attitude against backwards compatibility as with their browsers
<znoosey>	:p
<worfox>	they do?
<znoosey>	oh, you installed ie 11? now everything is broken!
<worfox>	they never remove anything.
<pyon-ktiert>	well, i don't really care much about office. i liked it until 2003, but 2007 was the beginning of its downfall from my pov.
<pyon-ktiert>	it's like they ran out of new ideas.
<vdamewood>	i prefer 2010 and 2013, myself.
<znoosey>	if it wasn't for their awesome norwegian language handling i wouldn't use office
<worfox>	what can you do that's new with office?
<pyon-ktiert>	have nothing useful to do? let's do something useless, then! why not a new ui?
<worfox>	exactly, something needs to be new.
<worfox>	even if it is just cosmetic.
<znoosey>	worfox: watch /build/ now :p
<vdamewood>	znoosey: awesome norwegian language handling? norwegian requires special handling?
<pyon-ktiert>	worfox: between versions 95 and 2003, i think genuinely useful features were progressively added.
<znoosey>	vdamewood: we are special
<worfox>	pyon-ktiert: that was when the concept was relatively new.
<henke37>	of course norwegian requires special treatment
<henke37>	they use a different alphabet
<worfox>	s/concept/software
<vdamewood>	znoosey: other than diacritic support, and the encoding issues that come with it, i don't see any real problem.
<znoosey>	vdamewood: it also does grammar
<pyon-ktiert>	worfox: i wish i didn't have to use google docs to collaborate with others. [non-technical users.]
<vdamewood>	znoosey: oh... nevermind.
<znoosey>	vdamewood: and if it was that easy, please tell google so they can fix docs!
<worfox>	pyon-ktiert: you'd like to use latex instead?
<pyon-ktiert>	worfox: well, i said non-technical users.
<znoosey>	we need latex for word!
<worfox>	ah. so you like ms office more than google docs? :o
<pyon-ktiert>	worfox: i don't think i'll ever like latex. i appreciate its power, but it's decidedly hostile to the user. very much like c++.
<vdamewood>	znoosey: yeah, grammar is a different can of worms. my biggest problem is with word processors that can't even *render* the *text* of the language i'm using.
<rindolf>	vdamewood: libreoffice/openoffice have some support for right-to-left scripts such as hebrew. i think it's pretty good.
<vdamewood>	rindolf: hebrew is fairly easy. how does it handle arabic?
<znoosey>	libreoffice is actually really good
<pyon-ktiert>	worfox: yeah, think collaboratively editing a word document, without the crappy/broken wysiwyg of google docs.
<rindolf>	vdamewood: no idea.
<pyon-ktiert>	worfox: but i'm guessing it was hard to figure out how to monetize users that way. microsoft after all never had google's sophisticated infrastructure for spying on users.
<worfox>	i haven't used ms word more than 1 hour, really.
<worfox>	heh
<znoosey>	pyon-ktiert: lol
<pyon-ktiert>	worfox: where i studied, we used office extensively.
<worfox>	i use libreoffice
<aidanh>	morning everyone
<worfox>	ms office is proprietary :(
<pyon-ktiert>	znoosey: i don't see what's funny about it. :-| if the inability to monetize users in some way prevents useful features from being implemented in a complex closed-source program, that's a good argument against closed-source. [and, indirectly, for open-source.]
<aidanh>	libreoffise is sort of nice, but there are more than a few usability issues :/
<aidanh>	pyon-ktiert: what would that inability to monetize users have to do with it being closed-source?
<pyon-ktiert>	aidanh: nothing.
<dolphindreamm>	howdy
<dolphindreamm>	howdy koderz
<pyon-ktiert>	aidanh: i'm just saying that, back around 2005-2009 [basically, when i was a student], i would've appreciated if office had something like google docs' facilities for collaborating in real time, editing the same document.
<worfox>	aidanh: the inability to monetize users means they don't do those kinds of features. open source software doesn't need to monetize every feature to be worth it.
<pyon-ktiert>	aidanh: while still being microsoft office, not google docs - i feel rather uneasy about google's services - google is creepy.
<dolphindreamm>	c++ variadic macro quetion: https://ideone.com/q1vgr3 .. any ideas what the problems is with this code ? how to make it compile ?
<pyon-ktiert>	dolphindreamm: what are you using variadic macros for?
<worfox>	pyon-ktiert: microsoft is creepy with skype as well.
<worfox>	:(
<worfox>	they fucking ruined it.
<znoosey>	skype for business is awesome!
<znoosey>	you get your own server :p
<pyon-ktiert>	dolphindreamm: afaict, their only legitimate use case is implementing very general-purpose stuff like tuples, variants, forwarding, bind, etc.
<worfox>	skype is supposed to have no servers
<pyon-ktiert>	errr, no, never mind.
<pyon-ktiert>	i was thinking of variadic templates.
<dolphindreamm>	pyon-ktiert, well.. here is why.. i have a plethora of log(...) calls in my code ... wich take (format, ... ).. and i want to have the logs prepend a prefix to the format
<railroadrunner>	dolphindreamm: only one argument to log() macro in line giving error?
<dolphindreamm>	without having to add an extra argument (perefix) to every log command
<znoosey>	worfox: so direct connection between all clients?
<aidanh>	pyon-ktiert: ahh, yeah i'd have to agree there... apart from the creepiness, google docs has that weird almost-native-but-not-quite feel to it
<znoosey>	worfox: doesn't sound scary at all!
<pyon-ktiert>	dolphindreamm: is there any good reason why you can't just use c++'s standard streams instead?
<worfox>	znoosey: no.
<worfox>	some clients become "supernodes"
<dolphindreamm>	railroadrunner, . .. sure that is a problem.. but why calling printlog with one argument works ?
<pyon-ktiert>	aidanh: true that. and i attended a management school, so we cared a lot about visuals - perhaps because we didn't have much to say from a purely technical pov.
<worfox>	and yes you can have direct connection between all clients and that's how it has worked and how it works a bit right now.
<pyon-ktiert>	aidanh: so the lack of good wysiwyg in google docs is really a problem.
<worfox>	that's why your ip can leak from skype.
<gedamo>	dolphindreamm: "the c standard specifies that at least one argument must be passed to  the ellipsis, to ensure that the macro does not resolve to an expression  with a trailing comma."
<znoosey>	windows 10 being shown at build now
<dolphindreamm>	gedamo, oh.. ok.. so calling the printlog directtly with only format and no arguments works.. but not the macro
<worfox>	znoosey: the problem is that they have set up servers that handle 90% of the connections and they can redirect an account to only use their servers if they need to monitor.
<pyon-ktiert>	aidanh: i think it was (and still is!) perfectly feasible, from a purely technical standpoint, for microsoft to make a product similar to office 2003, but with google docs-like collaboration facilities.
<gedamo>	dolphindreamm: that's a function call, not a macro
<dolphindreamm>	yes. i just don't know well enough how ellipses work
<dolphindreamm>	and why woudl ti be a difference between ellipses in macro and in a functio call
<znoosey>	worfox: if you don't want to be spied on, hand deliver letters!
<_x_c_v_b_>	i'm going to learn some webgl
<worfox>	i want to love developing _on_ windows 10. not just developing _for_ windows 10.
<pyon-ktiert>	dolphindreamm: just use a standard stream. you can make a logger class with a pure virtual method, which is overriden to provide concrete logging actions.
<worfox>	znoosey: like i wouldn't be spied on like that?
<pyon-ktiert>	dolphindreamm: or something like that.
<pyon-ktiert>	dolphindreamm: much less convoluted than working your way around cpp's crappy macros.
<dolphindreamm>	gedamo, then what's the best way to inject a log prefix to every log command ?
<znoosey>	worfox: build a tunnel to the person you are talking to
<worfox>	znoosey: lol
<gedamo>	dolphindreamm: why are you using a macro instead of just calling the function?
<dolphindreamm>	pyon-ktiert, i know there is an ellegant way to do it. i do't want to modify other people's code across a large code base just to get my prefix in there if i can do it quick an dirty with a macro (assuming it worked)
<puddlejumper>	what up cs bitches?
<pyon-ktiert>	znoosey: worfox: no idea about where you guys live, but here it's pretty safe to assume that physical letters won't be opened by anyone on their way to their intended receivers.
<aidanh>	pyon-ktiert: i'd be surprised if microsoft weren't working on something of that nature, since it's one of the few things that google docs has over microsoft office at the moment
<znoosey>	pyon-ktiert: here too, but just to be on the safe side!
<dolphindreamm>	gedamo,  the code i'm working on has a ton of log() calls .. with log(format, args).. and i want the logs in some files to have a specific prefix.
<worfox>	pyon-ktiert: i live in sweden and i wouldn't trust that.
<pyon-ktiert>	aidanh: but now office has become just another cloud service like google docs.
<aidanh>	although, of course, i'd say that google docs is much less relevant for 'serious' work
<pyon-ktiert>	aidanh: which is exactly what i don't want.
<worfox>	i thought that they didn't spy on my internets.
<anj7>	i want a good tutorial to make sign up and log in functionalities to my website using php and mysql
<worfox>	they did.
<denommus>	i'm back
<pyon-ktiert>	worfox: i guess it's kinda a blessing that my country, being significantly poorer, doesn't have the technological means to systematically spy on most of its citizens.
<pyon-ktiert>	worfox: but i wasn't talking about the internet, which is intrinsically less safe.
<pyon-ktiert>	worfox: i was talking about physical correspondence.
<aidanh>	pyon-ktiert: ahh, wasn't aware of that; it certainly wouldn't be impossible to implement collaborative features without bundling everything into 'the cloud'
<pyon-ktiert>	worfox: you know, postal service and stuffs.
<worfox>	pyon-ktiert: i thought you were talking about the postal system?
<pyon-ktiert>	yes.
<denommus>	pyon-ktiert: are you from chile?
<denommus>	pyon-ktiert: or peru?
<worfox>	yah, you don't think they have systems that can read every mail?
<pyon-ktiert>	denommus: peru.
<aidanh>	pyon-ktiert: although, i suppose that's another area in which they're trying to expand... in which case it makes sense for them to tie the two together
<denommus>	pyon-ktiert: hm. if you were from chile, i wouldn't bet on that. but i don't know about peru
<pyon-ktiert>	denommus: i know they aren't particularly rich in the grand scheme of things, but, from our pov, they're filthy rich.
<pyon-ktiert>	i mean, chileans.
<kadamurcia>	if you are not into webdev you are not my friend
<pyon-ktiert>	kadamurcia: not like i asked to be your friend! but anyway.
<denommus>	pyon-ktiert: well, i'm brazilian. i would bet most of south america sees brazil as a imperialist scum
<znoosey>	our oil is soon worthless :(
<denommus>	i hope oil in general becomes worthless
<znoosey>	then i need a new country!
<pyon-ktiert>	denommus: not really. here there's a grand total of probably 3 columnists who espouse such views, but we don't take them seriously.
<kadamurcia>	pyon-ktiert: you from peru?
<pyon-ktiert>	kadamurcia: yes.
<pyon-ktiert>	znoosey: is oil worthless? what exactly is rendering it so? :-o
<kadamurcia>	denommus: america sees brasil as one giant booty
<pyon-ktiert>	s/worthless/becoming worthless/
<znoosey>	pyon-ktiert: i said soon, it has dropped by like 50% in value the last year
<kadamurcia>	denommus: gracyanne barbosa is the most acclaimed and glorified person to come out of brasil
<denommus>	kadamurcia: i know. i wish that view was the reality, but the people of my country are really conservative in general
<pyon-ktiert>	znoosey: ah.
<znoosey>	pyon-ktiert: and as like... all... our money comes from oil, this won't be pretty :p
<kadamurcia>	pyon-ktiert: i bought something from china and sent to lima peru, hope it arrives soon
<bg__>	znoosey: are you from norway, or was that xeno?
<pyon-ktiert>	znoosey: is there no manufacturing or service industry to speak of?
<znoosey>	bg__: we both are
<znoosey>	pyon-ktiert: we got some fish?
<bg__>	znoosey: yeah, i remeber some conversation of yours
<pyon-ktiert>	znoosey: ah.
<dolphindreamm>	btw gedamo / pyon-ktiert  / railroadrunner  .. it seems that if you add ## before _va_args__ fixes the problem when no arguments are listed (https://gcc.gnu.org/onlinedocs/cpp/variadic-macros.html)
<znoosey>	we better just buy sweden while we got the chance
<znoosey>	:p
<znoosey>	https://code.visualstudio.com it is out!
<henke37>	and what is it?
<znoosey>	light weight visual studio
<znoosey>	for windows/mac/linux
<dearhawk>	i have a curve. what's the fastest way to find a spot where both x and y is in n?
<delta-nry>	so ms decided to make an application directly for linux
<henke37>	what kind of curve?
<dearhawk>	henke37: some undefined function in r
<dearhawk>	i'm looking for a general solution
<dearhawk>	could be a polynomial for example
<dearhawk>	lets say that it's a polynomial
<dearhawk>	for the sake of ease
<xmppwocky>	dearhawk: what do you mean "in n"
<xmppwocky>	as in the naturals?
<dearhawk>	xmppwocky: natural number (whole number)
<dearhawk>	yes
<henke37>	functions aren't numbers
<dearhawk>	henke37: y = f(x),  y,x is in n
<ams>	pyon-ktiert: what you wrote .. makes no sense.
<xmppwocky>	for a polynomial, you can just look at the coefficents
<pyon-ktiert>	ams: what specifically?
<henke37>	or you could try the black box approatch
<dearhawk>	xmppwocky: interesting
<dearhawk>	x,y aren't in n for the function definition, but i'm looking for all solutions where x and y both are in n
<xmppwocky>	henke37: the isssue there is that you cna't use floating point
<ams>	17:37 <pyon-ktiert> ams: also, "effect segregation" is only good if you consider "equational reasoning" a good thing and want to maximize the extent to which it's applicable. if you don't, then segregating effects is just a waste of effort.
<ams>	pyon-ktiert: i understand the sentence, it is still buzzword bingo.
<henke37>	xmppwocky, i don't see how that's relevant
<xmppwocky>	henke37: because for a black box, you can't say the result is natural
<xmppwocky>	because float precision
<dearhawk>	for some functions, there are only one spot where x,y is in n
<dearhawk>	so you need an exact solution
<dearhawk>	btw, does anyone see what i'm trying to do here? :p
<pyon-ktiert>	ams: "equational reasoning" is simply using [i feel tempted to insert "high-school"] algebra to show that two syntactically different expressions have the same meaning. usually, you want to show that an efficient program computes the same thing as a more obviously correct, but less efficient one.
<henke37>	something requiring an abstract syntax tree?
<vdamewood>	dearhawk: find where the curve of the function over laps with the lines on my grid.
<ams>	pyon-ktiert: blah blah blah ..
<pyon-ktiert>	ams: i don't see what's "buzzword bingo" in that.
<vdamewood>	dearhawk: or rather, the intersections.
<ams>	pyon-ktiert: it doesn't solve any real world problem.
<pyon-ktiert>	ams: now, you may not consider equational reasoning is important. that's okay.
<pyon-ktiert>	ams: but it's a well-defined thing.
<znoosey>	visual studio getting objective-c support...
<pyon-ktiert>	ams: it solves the problem of guaranteeing that a program meets a formal specification!
<dearhawk>	vdamewood: yeah, but try to do that with numbers of 2k integers :p
<znoosey>	didn't apple switch to swift now? >.<
<pyon-ktiert>	ams: just because you don't care about solving this problem, it doesn't mean that the problem doesn't exist.
<ams>	pyon-ktiert: which is not useful.
<vdamewood>	znoosey: not exactly.
<vdamewood>	znoosey: apple's official stance is that they will coexist for the foreseeable future.
<znoosey>	vdamewood: ah, i try to stay away from the apple world
<pyon-ktiert>	ams: well, dunno, i find it pretty useful. but to each their own, i guess.
<vdamewood>	i love the apple world.
<pyon-ktiert>	ams: i don't look down on people who just roll up their sleeves and get their hands dirty. i mean, not anymore.
<delta-nry>	they are pretty strongly trying to migrate everyone to swift
<ams>	apple is evil.
<pyon-ktiert>	ams: but it's still something i don't want to do myself.
<ams>	pyon-ktiert: well, i guess you don't wanna write programs?
<pyon-ktiert>	ams: um, a formally derived program is a program.
<pyon-ktiert>	ams: i don't see what exactly your point is. different people think in different ways, and correspondingly program in different ways. is that too hard to accept?
<ams>	pyon-ktiert: please write me tetris.
<ams>	pyon-ktiert: formally derived and all.
<mike802>	sounds like a tourist
<pyon-ktiert>	ams: you see, i don't care about computer games. why should i write programs i don't care about? i care about organizing data to make it easily queryable / updateable, decomposing algorithms into lego-style recombinable small pieces, etc.
<generalvagueness>	so, decompose them into tetrads instead? :d
<ams>	ok, write me .. mm.. ls
<pyon-ktiert>	ams: give me a good reason why i should write programs you care about, instead of programs i care about.
<ams>	or better yet, irc client and server.
<pyon-ktiert>	ams: are you paying me?
<vdamewood>	ls -alh ams
<ams>	so what use are formally derived programs? none.
<pyon-ktiert>	ams: not useful *to you*. and that's fine.
<znoosey>	i think ams is a bit to set in his way, and everything that is different is dangerous
<ams>	not really.
<ams>	i used a monad today.
<znoosey>	lol
<znoosey>	ams: did it tickle you in wierd places?
<ams>	no
<ams>	it was dead on derivation
<vdamewood>	i used a nomad once. it ate batteries like crazy.
<mike802>	you think one person makes a programming language
<mike802>	thousands of people do that
<mike802>	one person does not make up an entire gaming studio
<diphtherial>	hey, have a kind of database question. specifically, i'm trying to store english text as well as tokenized+attributed versions of that same text, but i'm trying to do it in a way that's at least somewhat efficient
<diphtherial>	(fwiw, it's currently in a relational db, but i'm willing to take suggestions for alternatives)
<znoosey>	microsoft edge... new name of their browser...
<diphtherial>	it'd be ideal to not have to store the individual token text redundantly, but i don't know if it's worth having to join against the original text every time you need the actual word...
<mike802>	how much data do you have?
<diphtherial>	(the attributes consist of a part-of-speech tag currently, but could include things later like whether it's a "named entity", user annotations, etc.)
<rindolf>	znoosey: are you watching an ms talk?
<diphtherial>	mike802: currently the gmail for like ten people in my lab; it's a research project, so i don't think it's going to go past that
<znoosey>	rindolf: yup, from /build/
<rindolf>	znoosey: ah.
<worfox>	wait, can they run ios apps in windows phone or what are they talking about?
<diphtherial>	i can refactor it into something more efficient should the need arise, but even now i have trouble storing my email history...i'm just storing a single bag-of-words model of my text where each token is keyed by its value + the timestamp of the message in which it was contained, and it's quite large
<diphtherial>	forgive me for being imprecise; i'm mostly just looking for random suggestions, not a solution per se
<znoosey>	worfox: yes
<mike802>	just sort it on file
<worfox>	jesus.
<mike802>	then limit how much you display
<znoosey>	worfox: they needed some way of catching up on the number of apps :p
<worfox>	yea
<znoosey>	the vs code thing actually runs fine on linux, i was expecting it to crash... :p
<worfox>	eh, it shows that it is just for web dev.
<denommus>	linux 4.0 is out :-o
<znoosey>	yeah, it looks like it is mostly made to make asp.net 5 stuff
<znoosey>	which is fine, as that is mostly what i do >.<
<worfox>	lol. windows is doing the ubuntu thing.
<znoosey>	windows owns ubuntu don't they? :p
<worfox>	http://www.pcworld.com/article/250356/ubuntu_for_android_will_bring_the_desktop_to_your_phone.html
<denommus>	znoosey: uh... no
<delta-nry>	isn't the ios support cordova or is it actually native?
<ycros>	vs code also appears to support nodejs dev out of the box
<worfox>	delta-nry: native.
<puddlejumper>	ubuntu on your android device sounds terrible
<puddlejumper>	actually as long as it's "your" device it's all good nevermind :p
<delta-nry>	worfox: link plz
<worfox>	it's what they showed in the video.
<denommus>	i wonder if i can install sailfish on my moto g2
<worfox>	delta-nry: they were compiling objective-c code files.
<anj7>	i have a problem with mysql
<anj7>	it says it can't connect to server.
<njcomsec>	i want install linux to my car
<njcomsec>	where to put kernal loader?
<rindolf>	worfox: hi, long time.
<worfox>	rindolf: hey
<vdamewood>	anj7: it's not exactly clear what your situation is.
<rindolf>	worfox: how have you been?
<_blizzy_>	hmm, i want another rails project
<_blizzy_>	but idk what
<rindolf>	_blizzy_: a drupal-like cms.
<anj7>	vdamewood: i just restarted the server now its working fine. and thanks :)
<rindolf>	good night all. i'm going to sleep.
<flonk>	is o(2^n * log n) the same as o(2^n) ?
<_w_>	no
<_blizzy_>	is it weird that i name my rails projects based on birds?
<_w_>	should be pretty elementary to prove in fact
<_blizzy_>	my first app was called bluebird
<_blizzy_>	next one is jackdaw
<flonk>	_w_: didn't want to bother and find a piece of paper :d
<flonk>	was just wondering, logarithm being sublinear and all
<flonk>	but i guess it doesn't matter
<railroadrunner>	flonk: yes, but log(n) can exceed any value of c you choose.
<flonk>	railroadrunner: yeah i see it now
<flonk>	minor brainfart i guess
<railroadrunner>	flonk: the logs of those two things are o of each other (i think)
<flonk>	o(n) + o(log log n) = o(n)
<flonk>	sounds about right
<railroadrunner>	flonk: yes, log(log(n)) < n so c=2 would probably work
<lseactuary>	anyone here know of an alternative tool to tableau that is simple for data visualisation and works nicely with sql etc scripts?
<ambro718>	list of foos - name it foolist or fooslist?
<_slade_>	ambro718: foos
<ambro718>	okay :)
<ambro718>	but, when you must use "post-hungaruan" notation for whatever reason?
<flonk>	std::vector<foo>, obviously ( ͡° ͜ʖ ͡°)
<ambro718>	particularly for compile-time meta-lists on c++ :d  using fooslist = somemagictemplateexpressions;
<ambro718>	helps to know it's a list
<flonk>	ambro718: let's hope neither of us ever has to write with post-hungarian variable notation, but in that case foolist is fine too. just be consistent
<flonk>	i even prefer foolist over foos simply because it will be weird if your class name ends with s
<ambro718>	i invent infix-hungarian notation!  personstringname lol
<_w_>	well it only makes sense
<flonk>	ambro718: i'm hungarian and over here we strip away the name completely and call our classes only string and integer
<xqo>	how do you choose the best searching algorithm?
<xqo>	im looking for an algorithm to find a sequence in an array of numbers
<_w_>	xqo: search for one and pick the top hit :p
<ambro718>	and of course you are not allowed to use single words for names, so there is no inconsistency with the infix-hungarian
<_w_>	xqo: run-searching is a well-studied field
<flonk>	xqo: my flowchart looks like this: can you mold your data easily into a heap? yes: heapsort. no: quicksort
<ambro718>	i think he's asking about string search not sorting
<xqo>	_w_ what is run-searching?
<flonk>	mhm, seems so
<_w_>	xqo: finding a sequence, such as the "1234" in "612347195"
<ambro718>	http://en.wikipedia.org/wiki/string_searching_algorithm
<xqo>	thank you ambro718
<xqo>	i dont understand big o notation, can you tell which of these algorithms are faster when the pattern is short, but the length of the searchable text is very long? http://en.wikipedia.org/wiki/string_searching_algorithm#single_pattern_algorithms
<_w_>	xqo: it's not that hard to understand
<xqo>	_w_ which one is faster?
<_w_>	asymptotic runtime can be thought of as an equation that gives you a sense of scale
<ambro718>	probably the naive algorithm for the conditions you have described
<_w_>	i can't think of many situations where i would pick a search algorithm
<flonk>	xqo: to be honest, if you don't deal with gigabytes of data, it won't matter that much - just try to write efficient code, because it's easy to slip in an extra o(n) in there if you're not careful
<_w_>	for small data, i don't care, for big data, i'll use someone else's solution
<flonk>	^ pretty much that
<metalhead77>	in terms of databases, which is better for security, stored procedures or views?
<ukrainianalek>	pm me if you want a very quick encryption project (5-10 min)
<salutteki>	hello, how can i get write permission in program file folder ? (windows 7 / c++)
<salutteki>	my updater don't work in program file folder :( but he work in every other folder in my windows
<ukrainianalek>	salutteki:  easily searchable on google
<salutteki>	ukrainianalek: hello, the only think what i've found is -> launch updater with admin right. it is correct ?
<ukrainianalek>	are you making a new file? you can do so with accessing it through the admin account on our comp.
<ukrainianalek>	your*
<apetresc>	okay guys, how can i subtly break a server in a way that is fixable but requires a bit of manual digging to find?
<flonk>	salutteki: either you run the script with elevated permissions (==admin rights) yourself or, if you know your way around the winapi (i don't), you do that in the code. either way, you need to get past user account control (and that's not really a programming issue) and get the user to confirm first
<salutteki>	flonk: thanks you
<sasazuka>	http://techcrunch.com/2015/04/29/microsoft-launches-its-net-distribution-for-linux-and-mac/
<iszak>	meh
<kino`>	how long is the keynote?
<kino`>	i've got an app to finish before 7pm, but i kinda want to watch it
<iszak>	why not just use mono?
<grill>	yo
<diminoten>	yo
<iszak>	lo
<grill>	anyone see any problem with me compressing three years of internships into one item on my resume so i can add some research experience + ta work too?
<iszak>	ta? territorial army?
<impaloo>	how do you guys pronounce repl?
<nickedes>	ta? target assembly
<iszak>	impaloo: rep-el, you?
<impaloo>	iszak: same
<impaloo>	just wondering
<impaloo>	also, what about /usr and /etc?
<grill>	are you being purposefully dense, or do you actually not know what a ta is
<dgpratt>	like ripple, but with an e instead of an i
<iszak>	grill: genuine
<nickedes>	grill: i don't know
<grill>	teaching assistant
<grill>	you know, college?
<nickedes>	hmm
<nonconvergent>	i love padding loc. delete one extraneous empty line = 1 commit. not that anyone checks in our company.
<impaloo>	grill: not everyone lives in the us doe
<broolucks>	or has english as a first language
<grill>	you're telling me that tas only exist in the us?
<iszak>	grill: how long can your cv be? i think all 3 would be good
<grill>	1 page. it's not a cv, it's a resume
<iszak>	grill: no we have ta in the uk but i have never heard of them called ta
<grill>	what are they called there
<iszak>	grill: resumè to be precise
<impaloo>	grill: as in ta in the context of college education in us, no
<iszak>	grill: as in there is no known acronym to my knowledge.
<broolucks>	if you're going to take the word from french, it's résumé
<impaloo>	i mean yes
<impaloo>	only in us*
<iszak>	broolucks: :)
<woggle>	grill: i assume the internships are all at the same company in substantially the same group?
<grill>	yes
<grill>	very different projects, but all in the same group
<broolucks>	though in french résumé doesn't mean cv
<iszak>	oh then i'd condense
<iszak>	what are you applying for grill ?
<grill>	software engineering job at one of the top 5 companies
<iszak>	think you'll get it?
<grill>	i plan on giving it my all
<iszak>	good luck
<grill>	thanks
<grill>	i'm also considering a "skills" chart
<nickedes>	all d best grill :)
<grill>	something like this
<grill>	http://graphicdesign.stackexchange.com/questions/15488/is-having-a-skills-bar-chart-on-a-resume-a-good-idea
<_blizzy_>	i finally installed sqlite3
<_blizzy_>	<3
<django_1>	anyone here know the basic amperes law?
<django_1>	int(b*dl) = u_0*i
<grill>	i've been exposed to a large number of technologies (c, ruby, etc.), but i am far from an expert in them. similarly, there are a bunch of technologies that i haven't used for quite a while
<nickedes>	yaa django_1 read about ampere law
<iszak>	grill: so what makes you exceptional then?
<django_1>	nickedes, for this: https://www.dropbox.com/s/livi91w6fsz4c2j/b-longwire.png?dl=0
<django_1>	how do you get that the int(dl) = 2pi*s
<ams>	django_1: uhm .. yes ..
<django_1>	what is the dl?
<nickedes>	dl is differential length
<grill>	iszak compared to my cohorts? a ton. i made the company i interned for a few million $$, developed software that is still being used, started my own company (which still exists), and have a pretty high gpa in school
<django_1>	nickedes, from where to where?
<nickedes>	django_1: int(dl) = 2pi*s = circumference of circle
<ams>	so .. like .. nothing to do with amperes law ..
<nickedes>	django_1: its all over the circle...that's why int(dl) is from 0 to 2pi*s
<iszak>	grill: sounds like you're a shoe-in then
<django_1>	nickedes, s*int(dθ) from 0,2pi
<grill>	perhaps
<horny-sama>	i really should just become a teacher instead of programmer.
<grill>	i plan to spend a month preparing for technical interviews
<django_1>	horny-sama, ehh at some point they will become futile :s
<iszak>	horny-sama: explain/
<ams>	grill: why?
<grill>	yo woggle what do you think. you never said
<iszak>	grill: oh man, the sad state of technical interviews :/
<horny-sama>	iszak: could not program well so teaching is my only option
<grill>	i'm not really a fan, but i understand why they are the way they are
<nickedes>	http://en.wikipedia.org/wiki/amp%c3%a8re%27s_circuital_law django_1 read this :)
<woggle>	grill: the answer being yes is a necessary condition to combining them, i think.
<nickedes>	django_1: the integral is closed line integral
<grill>	ok
<grill>	i agree
<grill>	what do you dudes think of skills charts though?
<woggle>	grill: whether it's best to combine them (versus shorten/tweak other things) probably depends mostly on how helpful mentioning the projects is versus the other things you would be including.
<iszak>	grill: i would say no, due to your previous comments of a lot of experience but lack of mastery
<grill>	hm
<grill>	i mean
<iszak>	but then at the same time some practical experience will be beneficial and if you're not indicating as such, it will be a negative
<grill>	i know javascript + java super well
<iszak>	no one knows javascript super well.
<grill>	as well as can be known
<grill>	*nearly
<woggle>	grill: avoid listing things on your resume you don't want to be asked a tricky question about in an interview.
<grill>	yeah
<grill>	been there, done that
<impaloo>	grill: what is the output of `'foo'.__proto__.__proto__.__proto__`
<grill>	i'm thinking of adding an "exposed to" section
<iszak>	.__proto__ is non-standard? or did they standardise it?
<grill>	impaloo i couldn't tell you.
<iszak>	well string has a prototype of object, object has a prototype of empty? i think, but you can't access that.
<impaloo>	well the output is null
<ajkthx>	anyone here play csgo
<grill>	huh. that's interesting
<impaloo>	or array(14).join(3 / 'robin') + ' batman!'
<grill>	haha
<grill>	i know this one
<grill>	the batman song
<impaloo>	nan :)
<iszak>	grill: http://wtfjs.com/
<grill>	seen it
<grill>	so yeah
<grill>	i think i am going to begin linking my stackoverfow + github accounts on my resume
<horny-sama>	grill: i link my resume to my github
<horny-sama>	but the problem is in my place most big corps are oil and gas not tech
<horny-sama>	so hr cunt be like wtf is that
<winny>	iszak: see ascii(5)
<iszak>	winny: wat?
<grill>	i guess the only problem there is that there's a lot of dumb code on my gihub
<horny-sama>	grill: me too
<winny>	iszak: that's part of all regexes
<grill>	get the job done becase time is limited type stuff
<horny-sama>	some projects be like rape simulators
<winny>	[a-z includes all bytes in between a to z
<iszak>	winny: what are you on about?
<winny>	➜  ~  echo \\ | grep '[a-z]'
<winny>	\
<winny>	not weird at all
<horny-sama>	and hr cunt be like you sexist scum no hire
<iszak>	winny: what are you on about?
<grill>	wha
<winny>	it's in that wtfjs site iszak
<grill>	t
<winny>	author is like omg [a-z] matches \\
<winny>	:^p
<horny-sama>	grill: some of my code is really not corp friendly
<iszak>	winny: oh right,
<iszak>	horny-sama: do you really want to work for "corps" ?
<winny>	sorry, i was kind of going on about some random article, :)
<horny-sama>	iszak: i just want a job tech related
<grill>	don't lie. if you do, i promise that you'll eventually get caught.
<horny-sama>	:p
<grill>	implemented javascript
<grill>	gotta take that off the resume
<horny-sama>	grill: then be like what implemented rape simulator coz it is ool
<tenshi998>	hey guys i got this weird problem, i want to test dynamic memory allocation however the memory isn't allocating properly: http://pastebin.com/dghcvpzx
<horny-sama>	fyi, reading up on js atm
<tenshi998>	replace 1000 by a large number, but i don't see any of my ram being used
<_slade_>	tenshi998: optimized out?
<ams>	tenshi998: what do you expect?
<tenshi998>	sorry, i didn't really catch that
<tenshi998>	what am i doing wrong?
<horny-sama>	iszak: youth job market in canada is pretty bad
<horny-sama>	10% unemployment rate = awesome
<horny-sama>	in our eyes
<ams>	tenshi998: when you allocate on modern operating systems you only can a "promise" that you can use that much ..
<gedamo>	tenshi998: you're not actually using the memory
<ams>	tenshi998: so you can infact allocate 100000pb on your computer.
<tenshi998>	so how do i make it fill the memory? i just want to test it
<ams>	only that when you read/write from that block where it extends beyond the size of your memory it will crash
<ams>	tenshi998: loop over it, write a byte to each thing.
<tenshi998>	ok, i'
<tenshi998>	i'll try
<ams>	gedamo: urgh, what is this called?
<ams>	when you like ... allocate stuff, but not really ..
<gedamo>	yeah ... er ...
<_slade_>	mapped memory?
<_slade_>	virtual memory?
<sparr>	are there any channels on freenode where competitive programming is topical? code golf, topcoder, spoj, stuff like that?
<ams>	_slade_: no, nothing of the sort.
<ams>	greedy allocation?
<_slade_>	optimistic allocation?
<ams>	yeah!
<ams>	that is the magical word ..
<ams>	the word is the bird, ..
<ams>	overcommit was the word i was looking for ...
<iszak>	horny-sama: sorry had to do stuff, why not just choose to simulate something else which has the same traits as the original experiment?
<horny-sama>	iszak: original experiment ?
<ams>	gedamo: overcommit it is ..
<iszak>	horny-sama: the sexist one
<ams>	i always forget that word ..
<horny-sama>	be me bombarded with cultural marxist bs in uni, want to program sth i like on my spare time
<horny-sama>	iszak: ok
<gedamo>	ams: i forget many words :|
<tenshi998>	hold on, i just can't get it right
<ams>	gedamo: me too :(
<iszak>	horny-sama: tell me more about your situation/history
<tenshi998>	could anyone (re)write my program to make it use a lot of memory?
<ams>	just write a byte to each cell.
<tenshi998>	sorry, i'm still a complete newbie. how do i do that?
<gedamo>	for (i = 0; i < size; ++i) arr[i] = i;
<ams>	for (int i = 0; i <= size; i++) foo[i] = 1;
<ams>	gedamo: hugs!
<gedamo>	:p
<horny-sama>	iszak: i did two russian roulette simulator (don't know if i should put it on my resume coz don't want the employers to think i like the theme of death ) othello and gonna work on my ren py visual novel
<horny-sama>	will be about cultural marxist
<gedamo>	ams: <= size? tsk, tsk :p
<ams>	gedamo: dude, it is 22:20 .. i'm drunk.
<horny-sama>	i always want to raise awareness to the cultural marxist
<iszak>	object pool pattern
<tenshi998>	i'm getting segmentation fault errors
<horny-sama>	tenshi998: c?
<tenshi998>	c+=
<tenshi998>	c++
<ams>	tenshi998: most prolly cause the kernel kills it.
<tenshi998>	i don't understand i managed to do it a couple of days ago
<gedamo>	how much space are you allocating?
<ams>	what do you want to do?
<tenshi998>	i want to make it fill at least one gb
<ams>	why ..
<horny-sama>	c+= is some feminazi bs if i recall correctly
<tenshi998>	i want to test it
<ams>	horny-sama: please stop.
<dtscode>	no thats c+ horny-sama
<dtscode>	tenshi998, use something to allocate memory then
<dtscode>	like malloc
<dtscode>	or mmap
<iszak>	horny-sama: yeah come on now, no need for that comment
<ams>	horny-sama: you have now made several time sexist remarks.
<horny-sama>	http://knowyourmeme.com/memes/events/c-plus-equality-c
<ams>	dtscode: remeber that malloc overcommits on gnu/linux
<dtscode>	ams, what does overcommit mean in this case?
<ams>	just doing malloc will do absolutley nothing.
<dtscode>	sure it will
<ams>	dtscode: that it will almost always return non-null no matter what input you give it.
<dtscode>	yeah
<tenshi998>	ugh, i just want to make a pointer allocate enough memory from the heap to fill at least one gb
<ams>	dtscode: with no memory usage difference.
<tenshi998>	but it still doesn't work
<dtscode>	sure it will
<dtscode>	if you do it right
<ams>	dtscode: not if you just malloc.
<dtscode>	<dtscode> sure it will
<dtscode>	<dtscode> if you do it right
<tenshi998>	yeah, i managed to do it a couple of days ago. but now it doesn't work wtf
<ams>	dtscode: ok, please tell me how you can do it with just malloc.
<tenshi998>	this is the code now: http://pastebin.com/ue2lqyhf
<tenshi998>	what the hell am i doing wrong?
<ams>	dtscode: so you don't know.  good.  shut up now.
<dtscode>	i do know. you are obviously upset that you dont. shut up now
<ams>	tenshi998: you might wanna .. allocatesomething?
<ams>	dtscode: no, cause just using malloc, you cannot do it.
<dtscode>	sure you can
<dtscode>	google it
<gedamo>	tenshi998: you've only allocated space for one int
<tenshi998>	ams, yes. allocate memory from the heap so i can fill up some of my ram
<ams>	dtscode: either you have to modify the behaviour of the kernel, or you have to access all elements that have been allocated.
<ams>	dtscode: no, you can't.
<dtscode>	yes you can
<ams>	dtscode: nope.
<tenshi998>	oh wait i see it
<tenshi998>	now let's try
<dtscode>	if you cant see a way and refuse to google it then i cant help you not say stupid things
<ams>	dtscode: you don't even know what the heck overcommiting is.
<tenshi998>	still doesn't work
<tenshi998>	my ram usage stays the same
<dtscode>	you are right. i have never seen someone use the word overcommit when it comes to memory
<ams>	tenshi998: you really think you will see 10k change?
<dtscode>	none of the osguys, the c++ guys, the programming guys
<dtscode>	but good for you for wanting to use esoteric words
<ams>	dtscode: so nobody doing kernel work, lovley.
<tenshi998>	oh wait i got it working lol
<dtscode>	lolwut?
<_blizzy_>	do you sometimes look at your old projects when you're making new projects
<_blizzy_>	to remember stuff
<ams>	_blizzy_: sure
<tenshi998>	i needed to allocate 100 million int to make my ram usage spike
<tenshi998>	xd
<tenshi998>	okay, thanks guys
<ams>	dtscode: you can start reading: https://www.kernel.org/doc/documentation/vm/overcommit-accounting
<dtscode>	you can start using www.google.com
<ams>	dtscode: i don't use spyware.
<dtscode>	good excuse for being ignorant
<ams>	right ..
<ams>	use google is rather the excuse for people who like to stay in denial, and have no clue abyout anything
<dtscode>	lolwut?
<ams>	22:29 /ignore dtscode
<tsumetai>	:/
<joshumax>	sorry, but this is the funniest thing i've ever seen ms do -- https://twitter.com/stroughtonsmith/status/593462573497982976
<_blizzy_>	this channel died
<_blizzy_>	like my love life hurrdurr
<_blizzy_>	c:
<srpx>	not sure if related, but why do i have to provide my address when registering a domain? can i do it anonymously?
<_w_>	srpx: many ways to do it anonymously, sure
<srpx>	i.e. is there any problem if i just type a fake address?
<_w_>	anonymizing services, having an agent register it (e.g. your lawyer) etc
<_w_>	and sure, you could fake the info
<henke37>	nobody trusts it
<_w_>	provider probably have a clause that they own the domain if they discover it though
<_w_>	but they won't
<kino`>	i've got a friend that always enter banana street in ghanah
<kino`>	-h
<henke37>	id probably go for the automated telephone clock service
<srpx>	lol okay
<joshumax>	unrecognized option: -h
<srpx>	guess i'm moving to banana street today
<kino`>	 /s/ghanah/ghana
<kino`>	?
<kino`>	i don't really know my searches yet.
<joshumax>	kino`: your query just broke my irc client xd
<kino`>	what?
<henke37>	get a better one
<joshumax>	this is why you don't spend 2 hours designing your own irc client in rust kids
<kino`>	hah
<dtscode>	<joshumax> unrecognized option: -h
<dtscode>	you dont come with help?
<kino`>	guys help
<kino`>	i'm starting to put global variables
<iszak>	joshumax: wat?
<kino`>	just a quick question: does anybody know the method that is called when a fragment is shown?
<kino`>	(android)
<x1>	how would i label handling of serialized data (csv, json, yaml, xml…) ?
<denommus>	hi
<denommus>	x1: serializing and deserealizing?
<x1>	i can't call that 'data science', so looking for a more precise description
<denommus>	x1: data storage? serialization?
<x1>	will use 'serialization', ty
<tsoutseki>	hello. is it possible to print a number under iostream in c++ just like that? cout << 3;                  or do i have to name it as a variable or print it like text? int x; x = 3; cout << x;       or              cout << "3";
<impaloo>	tsoutseki: sure, you can print integer literals
<tsoutseki>	impaloo, thanks. i have another question. what is the syntax like (under iostream) for boolean logic in c++?
<stumbles>	why doesnt,  if ( str(sys.argv[1]) is '-help' ): print a_help() ...
<stumbles>	python2
<tsoutseki>	impaloo, do i have to introduce it as variable-like? what does it look like in an 'if' 'function'?
<tsoutseki>	and how will i introduce it
<impaloo>	tsoutseki: not really following you
<tsoutseki>	impaloo, never mind, i have an idea. i will just use 0 and 1, using a variable called truefalse like this: int truefalse;       truefalse = 0;     if blah blah     {something;    something; truefalse = 1;)    if truefalse = 1 { something; something;) etc.
<tsoutseki>	impaloo, i was just thinking of whether or not there's some boolean thing already there so that i'd not have to do it this way
<tsoutseki>	but np
<x1>	tsoutseki: how about setting vs not setting a variable?
<rounin>	doesn't c++ have boolean or bool?
<rounin>	not that it's needed of course
<rounin>	since you can just use 0 and non-zero
<rounin>	but still
<notachiles>	i will do nearly anything to work for elon musk, except actually apply.  what should i do?
<_w_>	notachiles: procrastinate
<stumbles>	https://www.youtube.com/watch?v=ub33iuvkzyu spoken poetry about usa from someone who lives in europe
<stumbles>	gives you a big idea on how objective thinking cant happen while youre in it
<impaloo>	stumbles: wtf
<stumbles>	?
<pyon-ktiert>	rounin: c++ does have a bool type. it is not terribly useful because of implicit coercions from and into it, though.
<stumbles>	oh fuck
<stumbles>	wwrong channel
<stumbles>	shit
<stumbles>	my bad
<impaloo>	:d
<notachiles>	how long for _w_?
<_w_>	notachiles: yes
<notachiles>	understood. i am off to procrastinate. i will report on progress tomorrow _w_
<ronjohn>	hey guys. im using youtube-dl and ffmeg for my audio conversion site. how can i scale this? since it can only use 1 cpu and the site keeps on crashing from traffic
<stumbles>	"it can only use 1 cpu"
<stumbles>	i dont understand
<stumbles>	ronjohn: are you wanting to multithread downloads?
<ronjohn>	yes
<stumbles>	ronjohn: learn some simple python2 module multithread with urllib2
<stumbles>	youll be able to do it fine
<stumbles>	or even with a shell script
<stumbles>	i think wget/curl will multithread
<ronjohn>	we are using php right now to execute the youtube-dl commands
<s2013>	anyone ever have an issue when paypal sends an error over certain amount? if you integrated it
<stumbles>	ronjohn: i gave you my opinion
<ronjohn>	so im not 100% sure what you mean
<ronjohn>	how will urllib2 be able to help?
<stumbles>	it parses sockets so you can work with them
<stumbles>	depeding on what you want to do
<stumbles>	i think you should use a shell script personally
<stumbles>	with wget or curl
<stumbles>	https://en.wikipedia.org/wiki/comparison_of_youtube_downloaders ronjohn  here
<stumbles>	there are 5 right there with multithreading
<stumbles>	6*
<s2013>	anyone?
<ronjohn>	ok  i will check out that library
<ronjohn>	ah i also had a question. is it possible to convert a php site to an exe file?
<stumbles>	ronjohn: im sure if you check pip there will be better youtube modules
<ronjohn>	maybe some sort of webview?\
<stumbles>	in to a binary executable?
<stumbles>	uhm
<stumbles>	no
<ronjohn>	yea
<ronjohn>	:(
<stumbles>	rewrite it in c/c++
<stumbles>	then compile
<stumbles>	???
<stumbles>	.exe
<ronjohn>	you cant do any sort of webview?
<stumbles>	webview?
<stumbles>	maybe you should consider some javascript
<stumbles>	it sounds like to me
<ronjohn>	like it just embeds the website into an exe
<stumbles>	wat
<stumbles>	just
<ronjohn>	javascript for exe?
<stumbles>	<iframe src="http://example.com"></iframe> | frame.html
<ronjohn>	yea but that needs to then be compiled to an exe
<stumbles>	what
<hasselsaurus>	iexplore.exe
<_blizzy_>	i notice that i say "!=" instead of "not equal to" when i type
<hasselsaurus>	it sounds a bit like you're trying to eat soup with a pair of pliers
<hasselsaurus>	just... entirely not the right tool for the job
<stumbles>	_blizzy_: i find myself doing that sometimes
<stumbles>	and == instead of "exactly"
<stumbles>	lol
<_blizzy_>	well
<_blizzy_>	i officially hate the act
<_blizzy_>	it can go fuck itself
<pyon-ktiert>	_blizzy_: why?
<_blizzy_>	pyon-ktiert, because, it's stupid
<_blizzy_>	it basically determines if you can get into a college or not
<_blizzy_>	what if billy is great at, say, building stuff? that's not on the act
<electrojustin>	no, the sat's can determine that too :p
<_blizzy_>	or what if john is amazing at biology? that's not on the act
<_blizzy_>	well, biology is on the act, kind of
<_blizzy_>	but still
<pyon-ktiert>	oh, well.
<pyon-ktiert>	here, each university takes its own entrance test. (and some universities are known for having much harder entrance tests than others.)
<electrojustin>	that...doesn't sound much better actually
<winny>	is there an easier way to do [1, 1, 1, 1].map(function(unused, idx) { return do something with idx; }); in js?
<pyon-ktiert>	electrojustin: it's actually worse, because it means that profit-driven "universities" can lower their admission requirements purely for the sake of admitting more students.
<pyon-ktiert>	which, as a matter of fact, actually happens.
<electrojustin>	that happens in the states too
<electrojustin>	admissions is always a sort of fuzzy business
<electrojustin>	there's enough ambiguity that colleges can nudge their admission rates to whatever they want
<electrojustin>	at least with the test there is some objectivity
<pyon-ktiert>	anyway, i'm not really sure whether a university education is the best thing a programmer can possibly get.
<electrojustin>	perhaps, but for getting a job it seems to help
<pyon-ktiert>	i wish i could travel back in time, and tell my 17-year-old self to get a job immediately.
<electrojustin>	also learning the mathy and theoretical parts seems hard outside of uni
<pyon-ktiert>	"mathy and theoretical parts" --> how many people care about them in actual practice?
<xeno>	pyon-ktiert: if you find out a way to travel back in time, please tell me
<pyon-ktiert>	electrojustin: those who really care, can learn that stuff on their own.
<electrojustin>	that's significantly harder to self-teach
<pyon-ktiert>	which is, as a matter of fact, what i did.
<pyon-ktiert>	xeno: lol
<xeno>	pyon-ktiert: i think people who are like "i wouldn't change a single thing" are either full of shit or fundamentally different than me... i would probably start when i was 8 year old or something (since that's the furthest back my memory goes), and just start to change my way forward...
<electrojustin>	b-but paradoxes!
<electrojustin>	what if you change something and then you start disappearing from all the photographs and have to travel back to the future
<electrojustin>	:p
<xeno>	electrojustin: you know what paradoxes are? paradoxes are an indication that either your logic, the premises or the conclusion are wrong - even though you think otherwise...  so in that case, i guess we would find out which one...
<electrojustin>	it was a joke
<electrojustin>	a shitty reference to a movie in fact
<generalvagueness>	xeno, the thing is everything that happens to you affects who you are and what you do and what happens to you later
<xeno>	electrojustin: dangerous to mention stuff like that, i read a book on paradoxes like 2 weeks back
<generalvagueness>	to use a simple and relatively extreme example, if you didn't break your arm jumping out of that tree, you might have continued monkeying around on trees and fallen and died
<electrojustin>	lol sorry i guess
<pyon-ktiert>	electrojustin: anyway, my point is that the average programmer doesn't need a university education. there's no shame in attending a vocational school. (1) it cuts the crap short and focuses on marketable skills. (2) as a result, it takes less time to get a degree. (3) you get a job faster, start earning money faster, and everyone's happier - especially your parents.
<electrojustin>	for the average programmer i agree
<xeno>	generalvagueness: yeah, so the question is: how would it resolve? would the original future turn into a part of the past? (so that the timeline doesn't follow time)? is it already resolved so that any future interferences are already part of our future? ...and so on and so on...
<electrojustin>	but some folks are motivated by more than money
<pyon-ktiert>	electrojustin: let's face it, how many people supposedly studying "computer science" are really going to end up doing computer science research?
<wafflejock>	not me and graduated with highest honors
<xeno>	pyon-ktiert: how many people studying "computer science" are even studying "computer science"?
<ajkthx>	any sourcemod devs or pawn devs here?
<pyon-ktiert>	electrojustin: what's the point to giving people diplomas saying "xyz scientist" if they aren't going to do scientific research? it's just a lie.
<pyon-ktiert>	a lie to students, a lie to their parents, a lie to their future employers, a lie to the whole of society.
<wafflejock>	pyon-ktiert, eh it's not a lie because you do have that capacity whether your actual job uses that or not is different
<pyon-ktiert>	wafflejock: except 95% of those people aren't really capable of doing scientific research.
<generalvagueness>	i find it hard to believe you can get a reputable computer science degree without something along the way that teaches you the scientific method
<pyon-ktiert>	wafflejock: what they are is "programmers". i have no fucking idea how being a programmer makes anyone a scientist.
<wafflejock>	pyon-ktiert, agree lots of people in my classes didn't seem to know what they were doing at all like couldn't get a running program to submit, which is bad and people i worked with who never got a cs degree and were great programmers
<puddlejumper>	hello ladies and gentlemen
<wafflejock>	pyon-ktiert, also sort of agree on the scientist label being a bit off but think that mostly came from people who were scientists becoming computer programmers for their science
<pyon-ktiert>	wafflejock: well, the first programmers might've been respectable scientists in their area of expertise, but there's very little evidence that they applied the scientific method to programming specifically.
<pyon-ktiert>	wafflejock: and the idea that, today, a programmer is a scientist, is utterly ridiculous.
<wafflejock>	pyon-ktiert, yup agree mostly there are edge cases but for the most part programmer != scientist
<pyon-ktiert>	(of course, some programmers are scientists. but other programmers are artists, writers, whatnot.)
<wafflejock>	pyon-ktiert, i actually loved science on the side but it never came into programming irl
<pyon-ktiert>	yeah.
<puddlejumper>	scientific mindset
<puddlejumper>	problem solving
<puddlejumper>	a lot of this goes on while programming :p
<wafflejock>	yeah but rarely rigorous use of the scientific method
<pyon-ktiert>	puddlejumper: not all problem-solvers are scientists.
<wafflejock>	might as well call programming math
<pyon-ktiert>	puddlejumper: the scientific method is just a very specific way to tackle a very specific kind of problems.
<puddlejumper>	pyon-ktiert: i do a lot of programming this way
<wafflejock>	guess it just makes more sense than it being an "art" but that's somewhat questionable really given how much programming is used for marketing type tasks
<puddlejumper>	but i was a math major before getting into cs
<puddlejumper>	i wasn't born using the web and learned html then call myself a programmer
<wafflejock>	i suppose if you do tdd it has some likeness to the scientific method but it's a stretch
<puddlejumper>	i think once you get into algorithms that require 3 years of calculus and 2 years of discrete math then you're delving into the scientific realm :p
<wafflejock>	puddlejumper, programming on the web is really done in js html is just for the markup to describe a static page with links and other markup to give the content meaning, css is used for layout and other style details (typography colors etc.) and js is used for actual computation and communicating with servers
<puddlejumper>	but not making tic tac toe for your myspace page
<puddlejumper>	wafflejock: yes
<_blizzy_>	has anyone tried vs code yet?
<puddlejumper>	_blizzy_: what does that mean ?
<puddlejumper>	visual studio ?
<puddlejumper>	that's the only vs i know of
<pyon-ktiert>	puddlejumper: does calculus really help much when designing algorithms? (besides numerical algorithms.)
<wafflejock>	puddlejumper, i started off self taught doing html/js back in the 90s when i was in 7th grade, learned c a bit on my own, when i went to college learned c/c++/java, leaving school did flex/as3 development for the gov for a few years and now back to js/html since it works on mobile devices, gotta use the tool for the job at hand doesn't make you a better or worse programmer because of using a particular language or platform
<puddlejumper>	pyon-ktiert: i don't create the prerequisites for advanced algorithm courses
<pyon-ktiert>	lol
<wafflejock>	heh yeah can't think of a time i've really needed multi-variate calculus but the more basic stuff in calculus can be helpful to understand in some scenarios
<puddlejumper>	wafflejock: i agree
<puddlejumper>	wafflejock: i concur
<xeno>	generalvagueness: it was an earlier discussion here - no point in repeating that - but in short, "computer science" is not a science, and only a small fraction of it can ever become a science.
<_blizzy_>	puddlejumper, it's a new editor
<xeno>	generalvagueness: so the scientific method is actually not that relevant...
<_blizzy_>	https://code.visualstudio.com/
<_blizzy_>	try it out everyone
<generalvagueness>	xeno, from what i've seen i agree
<puddlejumper>	_blizzy_: i'm happy with vim
<_blizzy_>	puddlejumper, oh
<generalvagueness>	computers by their nature are well-understood things at a low level
<puddlejumper>	wafflejock: i think the best part about all the higher level maths at university is when you have that aha moment when you can apply it to your algorithms
<generalvagueness>	most of the real theory from what i can tell is just math relating to computation
<generalvagueness>	aha, heh, just realized, math about math
<xeno>	generalvagueness: but when that is said, everyone should know at least the basics of how to do science (you're not getting me to say "the scientific method" btw)
<generalvagueness>	you have something against the scientific method?
<xeno>	generalvagueness: it's too scripted and imperative... i prefer to focus more on the requirements and targets... like how a scientific theory is required to be falsifiable
<xeno>	(which didn't use to be the case)
<generalvagueness>	mm
<ihatehex>	xeno's winter bike is falsifiable
<ihatehex>	good night
<wafflejock>	puddlejumper, yeah it's certainly satisfying to get to apply that knowledge to a problem and to come up with a solution, most of the interesting stuff to me recently is typically based on some old algorithms and math that's already been done and i'm just translating that into a program so it can be applied to different kinds of data to get more information
<puddlejumper>	wafflejock: yeah, a lot of that knuth stuff is still well designed
<xeno>	ihatehex: it's not
<xeno>	ihatehex: or, well, it kinda is
<_slade_>	i think feyerabend offered some good arguments as to why there isn't a "the" scientific method
<_slade_>	disagree with a lot of his conclusions, though
<puddlejumper>	scientific method is too generic
<xeno>	ihatehex: like, i can go down in the basement and touch it, and if my finger passes straight through it, then "the physical world exists and behaves like i think", "i'm not insane" and "my bike exists and is a normal bike" together would be false
<puddlejumper>	scientific method is the basis for other methods
<xeno>	the "scientific method" is more like a work description for low paid office workers
<exponential>	hey, i'm a real c noob. could someone tell me what i've done wrong here? : http://pastebin.com/csqyln08
<electrojustin>	that's not how scanf works
<exponential>	oh, so if i wanted to read some input from the user, how would i do that?
<electrojustin>	try 'scanf ("\nenter a number: %d", value)'
<electrojustin>	without the single quotes obviously
<electrojustin>	been a while since i've used scanf (usually just use read or fgets), so that might be wrong
<electrojustin>	oh wow
<electrojustin>	that is wrong
<electrojustin>	it should be
<electrojustin>	scanf ("\nenter a number: %d", &value)
<winny>	first arg of scanf is the format of the input, not the output
<exponential>	so scanf("\n enter a number: %d", &number); should work?
<belxjander>	printf() and scanf() ?
<electrojustin>	^
<winny>	what is going on here
<winny>	:)
<belxjander>	where printf takes format, arg, arg, ...
<belxjander>	and scanf takes format pointer, pointer, ...
<electrojustin>	printf ("\enter a number: "); scanf ("%d", &value);
<belxjander>	with the pointers for where things get stored ?
<electrojustin>	suddenly remember why i don't use scanf
<exponential>	so i have scanf(" %d", &number); now
<exponential>	but the loop doesnt seem to work
<winny>	exponential: you should always check the return code of scanf
<exponential>	if i have assigned the scanf input to &number, how would i use that in a for loop?
<winny>	exponential: it tells you how many values were parsed
<exponential>	so my current output is :
<exponential>	how many numbers would you like to eneter?
<exponential>	2
<exponential>	1
<exponential>	0
<exponential>	so i enter 2
<exponential>	so you'd think the loop does 2 iterations?
<electrojustin>	err
<raj>	now that youtube allows personal notes to be added to videos in a plyalist, how can i programmatically add notes to youtube videos?
<raj>	i don't see any api from googling
<wafflejock>	exponential, it works fine here
<wafflejock>	exponential, http://pastebin.com/dv5xvgdr make sure you recompiled after your latest changes, can output some variables to the console or use gdb to debug further
<exponential>	wafflejock: oh my how did i not see this... int smallest = 0.... of course no non-negative int is going to be smaller than that.
<lseactuary>	anyone here familiar with pig or scalding?
<exponential>	wafflejock: error: use of undeclared identifier 'int_max', what am i missing here?
<wafflejock>	exponential, i added an include for that it's in limits.h
<exponential>	wafflejock: oh right, working now. thanks for the help :d
<wafflejock>	exponential, np
<lf94>	ams: i see the light that is emacs.
<lf94>	the flipping package system. holy fuck.
<lf94>	super nice.
<lf94>	ams: evil + emacs = heaven
<mki>	hey guys
<mki>	is it possible to have two programs in different languages "talk" or "work together" ?
<ori_b>	mki: yes, but the programs have to be somewhat designed for it.
<ori_b>	see: unix pipes, dbus, ole (and rpc in general)
<generalvagueness>	i have situation where i think the best route for a given set of conditions is a null block
<ori_b>	generalvagueness: ?
<ori_b>	that statement, at least with no context is generally vaugue.
<generalvagueness>	which is to say, i have: if (stuff && things) { // don't do anything-- the necessary action was already taken }
<generalvagueness>	as part of a larger if-else block
<generalvagueness>	is this bad?
<generalvagueness>	it only shows up once
<ori_b>	why not 'stuff && things'?
<ori_b>	the 'if' is a no-op.
<ori_b>	or even
<generalvagueness>	huh?
<ori_b>	generalvagueness: "if (stuff && things) {}"
<ori_b>	is exactly the same as
<ori_b>	"stuff && things"
<ori_b>	the two statements are interchangable.
<ori_b>	or even
<ori_b>	if (stuff) things;
<generalvagueness>	i have to catch that combination of conditions because otherwise it'll be caught by a different if-else and cause wrong operation
<generalvagueness>	but there's nothing more to be done, in that case-- the error is in doing anything but continuing with the loop the block is in
<ori_b>	if (!stuff || !things) {the things you would fall through to} would work too.
<generalvagueness>	i don't want to skip ahead to the next go-around of the loop though because there's error-checking stuff at the end of the loop body
<generalvagueness>	hmm
<ori_b>	i usually do 'goto doneiter' in that case.
<ori_b>	but, meh, i there's nothing /wrong/ with empty blocks.
<generalvagueness>	actually it might be more proper to have my else be and else-if that's more specific, and then leave that edge case uncaught
<generalvagueness>	as it stands the else block is the one that runs most of the time
<generalvagueness>	which feels not quite right
<ori_b>	heh
<stumbles>	why is it when i try and compare sys.argv[1] to a string it never works. python2
<generalvagueness>	thanks for being a sounding board, ori_b
<stumbles>	if ( sys.argv[1] is "-test" ):
<stumbles>	but it doessnt work
<ori_b>	stumbles: look up what the 'is' operator does.
<ori_b>	hint: it doesn't check for equality.
<stumbles>	even if i use == it doesnt work
<ori_b>	try printing sys.argv
<stumbles>	you use == when comparing values and is when comparing identities.
<generalvagueness>	are you sure it's [1] and not [0]?
<stumbles>	[0] is the progname
<ori_b>	stumbles: there's no reason that '==' shouldn't work.
<ori_b>	so, you're probably doing something wrong; print argv and see what argv[1] actually is.
<stumbles>	ori_b: i just tried it out in a seperate enviorment
<stumbles>	and == works
<stumbles>	i dont know what i was doing last night
<stumbles>	but for the life of me it wouldnt work
<stumbles>	now can i do something like, if ( sys.argv[1] == '-help' or '-?' or '--help')
<ori_b>	yes; 'is' checks if they're exactly the same object
<ori_b>	so, eg, '2000 is 1999 + 1' is false.
<ori_b>	probably.
<stumbles>	does python use or, or, ||
<ori_b>	'or'
<stumbles>	okay
<stumbles>	ori_b: it seems i had one if statement above the rest of the code that was fucking with my original script. i moved the statement down a few lines and now the sys.argv[1] -help thing works
<stumbles>	thanks for jus pointing me in the right direction
<stumbles>	+1 ori_b
<ori_b>	stumbles: also, look at the argparse module.
<stumbles>	oh i use it
<complex>	hey
<ori_b>	ok.. well, you shouldn't need to check if argv[1] is '-help' then.
<stumbles>	i just like sys.argv[n] more because its less work to type a command
<stumbles>	python2 script.py 2 5 6
<stumbles>	vs
<stumbles>	python2 script.py --first 2 --second 5 --third 6
<ori_b>	er? you don't need to that.
<complex>	i have a random graph, what is "directed complete cyclic graph" called in computer science?
<stumbles>	with argparse?
<complex>	the thing is, i must find the minimum number of edges to add to have a directed complete cyclic graph
<stumbles>	excuse me, but can you show me a example where i dont have to use options with argparse
<stumbles>	its how they get identified, or is there some unspoken truth about being able to without naming each variable in the command line
<ori_b>	parser.add_argument("list", metavar="l", help="a list of things")
<ori_b>	args = parser.parse_args()
<ori_b>	print(args.integers)
<ori_b>	er
<stumbles>	args.list
<ori_b>	args.list
<ori_b>	yes.
<ori_b>	so, that should work for 'foo a b c'
<stumbles>	uhm. hmmph
<ori_b>	and args.list will be ['a', 'b', 'c']
<stumbles>	i think sys.argv has less overhead
<stumbles>	i use argparse extensivly and in this case i jus dont think its appropriate
<stumbles>	github/imstumbles
<ori_b>	*shrugs*
<stumbles>	tyvm for help :)
<ori_b>	no prob.
<wafflejock>	mki, just scrolled back agree with what ori_b said would add socket communication as a pretty easy way to establish a connection between disparate software (potentially running across different machines) and communicating
<wafflejock>	suppose a lot of what was already listed sits at some level above regular ol' socket communication but for simple things it might be all you need
<ori_b>	sure; listing all the options would probably go for pages.
<wafflejock>	should clarify too i suppose i mean udp network connections using sockets
<ori_b>	udp is usually a bit painful -- most of the time that ends up reinventing tcp, since there's no reliable delivery.
<ori_b>	(sometimes it's ok to lose data, but.. yeah.)
<wafflejock>	ori_b, yeah tcp for things that need reliable connections udp if you just need the latest but don't always care about being right
<stumbles>	wafflejock: udp usually includes some error checking for things liek that
<wafflejock>	last time i did something major like that (not counting web development) was using a kinect to read the rgb data using some java on one machine then sending it to another machine that connected via a socket connection using as3 to make a flash thing to interact with google maps.... just started hacking around with the kinect again the other day, gonna try to write something here to just dump the data points into an obj fil
<wafflejock>	e for further use in blender
<ori_b>	stumbles: hm? basically all udp does is rejects corrupt packets.
<ori_b>	it doesn't do much more.
<wafflejock>	yeah i didn't actually mean to be saying udp over tcp either just that i meant "networking" when i said "socket" in case someone might take that to mean something else
<generalvagueness>	whereas tcp gives the packets an order and a checksum, iirc
<stumbles>	ori_b: something to do with cross-checking data
<stumbles>	im also drunk
<stumbles>	cant be fucked to talk tech
<wafflejock>	generalvagueness, it wants an ack and has a window and deals with throttling and lots of other business i believe too irl
<ori_b>	heh.
<stumbles>	vodka and mountain dew
<ori_b>	considering it's my job these days :p
<stumbles>	https://github.com/imstumbles/pymasterlock/blob/master/pymasterlock.py py script i just finished u for unlocking masterlocks in ~10 tries
<myrl-chan>	ayyy
<ori_b>	beee
<stumbles>	sea
<myrl-chan>	seeee
<myrl-chan>	stumbles: fek. :<
<stumbles>	rekt :|
<myrl-chan>	uguu
<stumbles>	https://github.com/imstumbles/pymasterlock/blob/master/pymasterlock.py you joined right after i posted my new script
<stumbles>	take a look around my github and follow me. im trying to build a tech. rep.
<ori_b>	stumbles: and now i'm reminded that i should fix my command line parsing api a bit.
<ori_b>	it should at least generate usage messages.
<stumbles>	command line parsing api ?
<stumbles>	ori_b: fuck you ill add argparse back in
<stumbles>	i literally have a version with it
<coldblackice>	stumbles: cool stuff! i dig it
<stumbles>	http://dpaste.com/1b9s96y ori_b
<stumbles>	coldblackice: if you could follow me it would be much appreciated
<stumbles>	twitter/imstumbles as well
<myrl-chan>	stumbles: i have a feeling you're me from an alternate world.
<stumbles>	myrl-chan: i am
<stumbles>	we all are :)
<stumbles>	we all are the multiverse :>
<stumbles>	we all came from somewhere, maybe we came from the same star :>
<ori_b>	stumbles: for my language.
<myrl-chan>	stumbles: here's mine. https://github.com/myrl
<stumbles>	ori_b: see i have a argparse module version
<stumbles>	https://www.youtube.com/watch?v=ht86qshfksw ninjastep - production line
<stumbles>	if anyone wants to vibe with me
<ori_b>	i have a getopt like api (http://git.eigenstate.org/ori/mc.git/tree/libstd/optparse.myr)
<ori_b>	(usage: http://git.eigenstate.org/ori/mc.git/tree/mbld/main.myr)
<ori_b>	so, i need to make that less cruddy :)
<stumbles>	what the fuck is .myr
<stumbles>	sorry for my french
<njcomsec>	implement design pattern omega!
<ori_b>	stumbles: my pet language.
<ori_b>	http://eigenstate.org/myrddin/
<ori_b>	stumbles: compiles to native code, doesn't even depend on libc :)
<stumbles>	binary executables?
<ori_b>	yep.
<stumbles>	what compiler?
<ori_b>	my own.
<stumbles>	i dont trust it
<stumbles>	seems backdoored
<ori_b>	uses the gnu assembler at the moment
<stumbles>	oh okay
<stumbles>	you hve a dependancy
<ori_b>	but that's probably going away soon.
<stumbles>	makes more sense now
<ori_b>	the compiler has dependencies; the generated binaries don't.
<ori_b>	self hosting will come eventually.
<stumbles>	not to be offensive, just my opinion. it looks like a bastardization of c++/c# and javascript
<ori_b>	meh.
<stumbles>	just what it "looks" like syntaxically to me
<stumbles>	nothing at all against you bro
<ori_b>	statically typed with full inference
<stumbles>	im actually quite impressed
<ori_b>	ml style pattern matching
<stumbles>	do you have a ide
<ori_b>	nope, i just use vim.
<stumbles>	you should make a gui :)
<stumbles>	or at least a sublime plugin
<ori_b>	contributions accepted.
<stumbles>	* feels the hate coming *
<wafflejock>	stumbles, eh sublime is good
<ori_b>	support/ directory in the source tree is there for various plugins/scripts/utils.
<stumbles>	wafflejock: people hate on it cause its... uhm.. not freeware, not paidware
<stumbles>	but like mirc is, whats that called
<stumbles>	where it reminds you to register every so often
<stumbles>	i cant remember...
<wafflejock>	stumbles, i've been using phpstorm a bit lately which is basically intellij + plugins that's pretty nice for web dev stuff
<stumbles>	subl2 you could hex edit to get pro version without ads
<wafflejock>	stumbles, yeah "nag ware"
<stumbles>	but they fixed that in subl3
<stumbles>	no not nagware. it has a more official name
<wafflejock>	i paid for it actually
<wafflejock>	stumbles, yeah but that concept i get ya, not sure what the term is
<stumbles>	isnt it drm free
<stumbles>	gib mu ur c0d3
<ori_b>	shareware.
<ori_b>	and, meh. i don't care what you use.
<stumbles>	ori_b: is that it? i thought it was a little more offensive
<stumbles>	spamware or something
<stumbles>	buyware
<stumbles>	idfk
<stumbles>	oh i stand corrected ori_b is correct
<stumbles>	shareware is the pc term i suppose
<stumbles>	trialware/demoware as well
<ori_b>	hm, and i just realized i want syntax for indexed initializers.,
<ori_b>	something like c's 'int array = {[10]=123, [5]=333}'
<ori_b>	stumbles: anyways, if i get a sublime plugin, i will ship it.
<ori_b>	i don't personally use it, so i don't know how it should behave, or have a good way to test it.
<stumbles>	ori_b: the plugins are written in python
<stumbles>	there are plenty of example code
<ori_b>	sure. but i've got enough other stuff to work on to write a plugin for an editor i don't use.
<ori_b>	i can help/debug/..., though.
<denommus>	how i *love* soap
<denommus>	holy cow, best technology ever
<denommus>	if it worked at all
<ori_b>	denommus: indeed. soap has done more for public health than just about any invention in history.
<denommus>	ori_b: hah
<ori_b>	just a little lye, fat, and you're good.
<newb1p>	hello
<newb1p>	can someone tell me how to deal with integer input overflow in c++
<denommus>	seriously now
<denommus>	it seems qtsoap completely refuses to accept "soapenv" as a namespace for envelop
<denommus>	and only produces a message with namespace soap-env
<denommus>	but the web service i need to call only accepts soapenv
<newb1p>	by this i imean, i want to check whether the input going into my int var is overflowing past (2^32)-1
<stumbles>	redefine?
<newb1p>	:o
<newb1p>	helllllllllllo
<denommus>	stumbles: redefine what?
<stumbles>	i dont know >.<
<stumbles>	seems like a definition problem
<stumbles>	>.<
<ori_b>	newb1p: depends on the operation.
<ori_b>	there's no built in way, and in fact, overflowing itself is undefined behavior.
<ori_b>	(if you overflow, you already lost)
<stumbles>	python overflows take like... terabytes
<ori_b>	the easiest way is to use a 64 bit value
<denommus>	the funny thing is that w3c clearly defines the namespace as soap-env
<denommus>	why does soap ui use soapenv? why is the web server using soapenv?
<denommus>	nobody knows
<ori_b>	int64_t val = a * b; if (val > int32_max) { handle_overflow };
<ori_b>	stumbles: yeah, but python also clearly doesn't care about performance.
<stumbles>	ori_b: clearly
<stumbles>	everything is a object
<ori_b>	several allocations, a floating point multiplication, and a bunch of branches for every multiply.
<ori_b>	denommus: *shrug* thankfully, the closest i've had to use was protobufs or thrift.
<darkelement>	how can i check if a name belongs to a user on a channel, with an irc bot?
<darkelement>	also, what would be the best way to store questions-responses for said irc bot
<darkelement>	i would think a log file would be alright
<stumbles>	or locally in the script
<stumbles>	depends what language and how many responses
<stumbles>	sometimes doing file i/o relies on a lot of overhead
<darkelement>	yea,
<darkelement>	ive got some ideas now
<dexx1_>	(for a programming project): if i have x1, y1, z1 and x2, y2, z2 -- what is the best way to compare height width length (x, y, z) to see if x1/y1/z1 will fit on top of x2/y2/z2 and if not, finding the proper scaling factor (delta)?
<jrslepak>	what exactly do you mean by "fit on top of"?
<jrslepak>	are you asking if boxes of those dimensions can be stacked without any cantilever/spillover?
<myrl-chan>	welp.
<myrl-chan>	had to load my phone. lol.
<myrl-chan>	so... why are functions monads?
<dexx1_>	jrslepak: good question. it's for a 3d printer: http://www.3ders.org/images/type-a-machines-next-generation-3d-printer-2.jpg --- so, i want to compare the "design file size" with the "bed size", then figure out if it fits. if it doesn't, i need to find a delta (scaling factor)
<jrslepak>	so it's more of a "fit inside" than "fit on top of"?
<jrslepak>	(the 3d printers i've seen all have a finite height)
<exponential>	hey, is there an easy way to make gcc work compile using c89, rather than having to add -wall -std=c89 everytime?
<dexx1_>	jrslepak: yea, thats what i meant. the printer bed has finite x, y and z
<jrslepak>	so you need to find some permutation p where p(x1) <= x2, p(y1) <= y2, and p(z1) <= z2
<dexx1_>	jrslepak: my logic right now is basically this: if (x2 - x1 != 0 && y2-y1 !=0 && z2-z1 !=0) {....it'll fit inside! } -- but it's pretty rudimentary i think. also, i haven't accounted for circular bed's in some printers (which has a set diamater (d) )
<jrslepak>	(might as well just use brute force, since there are only six permutations on three elements)
<dexx1_>	(where x2, y2 and z2 are the printer bed size)
<myrl-chan>	dexx1_: `a - b != 0` == `a != b`
<jrslepak>	if it has a cylindrical print space, your requirement is sqrt(p(x1)^2 + p(y1)^2) <= d
<jrslepak>	(and p(z1) <= z2)
<myrl-chan>	jrslepak: eh.
<dexx1_>	hmm
<dexx1_>	myrl-chan: thanks. whats the `
<dexx1_>	myrl-chan: also, what's a and b in terms of x, y, z and x2, y2 and z2
<myrl-chan>	dexx1_: i use backticks to separate (pseudo-)code from english.
<dexx1_>	oh
<myrl-chan>	dexx1_: a is {x,y,z} while b is {x2,y2,z2}
<myrl-chan>	meh, i shouldn't have used set notation for that.
<jrslepak>	myrl-chan: fun with functors?
<jrslepak>	. o o ( fmap fmap fmap )
<myrl-chan>	dexx1_: basically, `x2 - x1 != 0` == `x2 != x1` and so on.
<myrl-chan>	jrslepak: monads are burning my brian.
<jrslepak>	myrl-chan: in the case for functions, you can easily see how to turn a "foo" into a "function that returns a foo"
<nitestryker>	anyone in here any good with c gtk
<jrslepak>	myrl-chan: the function just ignores its argument an returns that foo you constructed it from
<jrslepak>	*nad
<jrslepak>	**and
<nitestryker>	i am writing a c program using a glade file i am trying to figure how to connect the buttons to my c program
<jrslepak>	myrl-chan: then if you have a `t -> (t -> foo)`, you can make a `t -> foo` by just reusing the type t argument
<myrl-chan>	jrslepak: reusing?
<jrslepak>	myrl-chan: join f = \ t -> f t t
<myrl-chan>	jrslepak: ah, i see.
<dexx1_>	jrslepak: for cylindrical bed space, i would do this right? sqrt( ( x ^2 ) + (y^2) + (z^2) ) = d1 and then compare d1 with d2 (bed size) ?
<jrslepak>	dexx1_: that's only if you plan to orient the thing corner-to-corner along the diameter; i would have expected edge-to-edge instead
<myrl-chan>	ah, cool. `join f == f <*> id`
<dexx1_>	jrslepak: i do want some "tolerance" so it's not edge to edge
<dexx1_>	jrslepak: ie: when you eat dinner on your plate, the food is generally in the middle and not touching the edges
<jrslepak>	myrl-chan: and you can still fmap over a function by just applying the fmapped operation to the function's output
<jrslepak>	dexx1_: add whatever tolerance you want into the check
<myrl-chan>	jrslepak: i see.
<dexx1_>	jrslepak: got it
<myrl-chan>	jrslepak: like, `fmap f x = f . x`?
<myrl-chan>	hmmm..
<myrl-chan>	wait
<myrl-chan>	actually, yeah.
<myrl-chan>	jrslepak: is that correct?
<puddlejumper>	hello friends and non-friends and creatures inbetween
<cobracommand>	random ass questions: what do you use more in your life, sub procedures or functions?
<myrl-chan>	cobracommand: i don't differentiate between the two.
<gitup>	anyone know how to get an invite to #php?
<cobracommand>	myrl-chan which one do you use more?
<puddlejumper>	cobracommand: one returns something the other doesn't i forget which is which :p
<nitestryker>	gitup, no but the people in ##php are fucking idiots
<cobracommand>	function returns a value
<myrl-chan>	puddlejumper: sub procedures don't return. functions do.
<myrl-chan>	cobracommand: how can i use something more than the other if i consider them to be the same?
<_blizzy_>	gitup,you need to register
<puddlejumper>	myrl-chan: i'm in your ship i just use the things i don't think about it much
<cobracommand>	they're not the same
<puddlejumper>	int something() or void something() :|
<myrl-chan>	cobracommand: they're the same.
<cobracommand>	they're not the same.
<myrl-chan>	yes they are.
<cobracommand>	no they aren't.
<cobracommand>	are they similar? sure.
<_blizzy_>	nvm about my opinion
<myrl-chan>	...
<_blizzy_>	of channels
<puddlejumper>	_blizzy_: are you being random again?
<_blizzy_>	most language specific channels are just sad
<gitup>	thank bliz / nites
<_blizzy_>	puddlejumper, i'm always random
<gitup>	thanks*
<myrl-chan>	cobracommand: next thing you're going to say, `int f()` == `char f()` aren't the same, so one must be a function and one must be not!
<cobracommand>	why did they make #php invite only? to keep the noobs out or something?
<_blizzy_>	php isn't invite only
<_blizzy_>	you have to register
<puddlejumper>	they made it so only registered people can join to keep the trolls out
<myrl-chan>	cobracommand: functions are a special type of subroutines, since functions 'return' a value.
<cobracommand>	i am registered
<cobracommand>	but it forwards me to ##php now
<denommus>	ok, it was not what i thought it was
<denommus>	the message seems well formed
<cobracommand>	it's not a type of subroutine, it's a type of procedure
<myrl-chan>	cobracommand: pls.
<puddlejumper>	freaks
<_blizzy_>	nothing like getting hated on based on what you like
<puddlejumper>	_blizzy_: quit being gay
<_blizzy_>	puddlejumper, i can't ;c
<myrl-chan>	cobracommand: who the heck taught you that functions and sub procedures are different?
<cobracommand>	they are different
<myrl-chan>	fucking shit.
<cobracommand>	lol
<puddlejumper>	the only difference is the abstract terms
<puddlejumper>	in practice they use the same rules
<myrl-chan>	besides, sub procedures are shitty since they rely on side-effects.
<cobracommand>	in practice they work differently
<myrl-chan>	...
<cobracommand>	functions return a value
<_blizzy_>	til i hate all programmers who think they are elitists
<_blizzy_>	because of php.
<myrl-chan>	cobracommand: functions can return functions too.
<myrl-chan>	also, just so you know, "functions" don't really exist.
<myrl-chan>	it's a fucking convention.
<o0elise0o>	cobracommand::deploy('ninja');
<myrl-chan>	where there's a certain register in which you put the value.
<myrl-chan>	heck, it doesn't even have to be a register.
<cobracommand>	sub procedures are invoked using a call statement
<cobracommand>	and does not return a value where it is invoked
<cobracommand>	functions invoked without using a call statement, and returns a single value where it is invoked
<myrl-chan>	...
<myrl-chan>	fucking shit.
<cobracommand>	so there is an ambiguity
<myrl-chan>	cobracommand: do you know assembly?
<puddlejumper>	myrl-chan: should just walk away
<cobracommand>	but anything that can be done with a sub procedure also can be done with a function procedure and therin lies your lumping them in as the same thing
<myrl-chan>	...
<cobracommand>	4.99999 does not equal 5
<cobracommand>	i took assembly once why
<lf94>	so guys, i got a dvb/dab/fm transceiver
<lf94>	what should i do with it?
<myrl-chan>	`sub x(args) ... `eax = returnval` == `fun x(args) ... return returnval`
<myrl-chan>	there's no fucking difference.
<puddlejumper>	lf94: transmit :)
<myrl-chan>	that's how assembly works.
<lf94>	puddlejumper i don't want the police at my front door
<myrl-chan>	functions are just subroutines which follow a return passing convention.
<puddlejumper>	lf94: encrypt :)
<lf94>	puddlejumper they can follow signals
<lf94>	encryption or not
<puddlejumper>	lf94: turn it off
<cobracommand>	i agree with you
<puddlejumper>	put it in the closest and never touch it again
<cobracommand>	so you're saying at a low level they work the same, but at a higher abstraction level they can be used differently
<myrl-chan>	cobracommand: partially, yes.
<cobracommand>	so wer're both right, i wasn't even getting into the assembly, i was talking about vba hahaha you got trolled
<myrl-chan>	cobracommand: yes, i'm aware that you're talking about vba.
<cobracommand>	how did you know
<myrl-chan>	cobracommand: i've studied vb6, and it makes a distinction between functions and subroutines.
<_blizzy_>	some people can't take jokes man
<puddlejumper>	_blizzy_: why would you take a jester anywhere?
<_blizzy_>	puddlejumper, idk.
<_blizzy_>	some people are too up tight
<puddlejumper>	_blizzy_: what do you call a person that constantly worries about other people ?
<_blizzy_>	puddlejumper, idk?
<puddlejumper>	_blizzy_: what do you mean by uptight?
<o0elise0o>	myrl-chan::what is the distinction between the two in vb6?
<_blizzy_>	puddlejumper, someone said ...
<_blizzy_>	i said ...?
<_blizzy_>	he basically called me a dick
<puddlejumper>	_blizzy_: i don't get it
<_blizzy_>	i don't get it either
<puddlejumper>	maybe you are a dick
<_blizzy_>	i hope not.
<myrl-chan>	o0elise0o: one returns a value(function) and one does not. subroutines are mostly used for callbacks, output interfacing and things which require side effects without returning.
<_blizzy_>	i have school tomorrow.
<puddlejumper>	_blizzy_: maybe they're just more gay
<_blizzy_>	puddlejumper, maybe.
<o0elise0o>	i cant remember, is the sub scope the 'same' as a function scope?
<showerbeer>	so.. void dosomething() is not a function?
<puddlejumper>	so printf in c is a function
<puddlejumper>	because it returns an int
<myrl-chan>	showerbeer: as what cobracommand has said.
<myrl-chan>	puddlejumper: as i said, i don't make a difference between "sub procedures" and functions.
<myrl-chan>	o0elise0o: s/subroutines/sub procedures/
<icetooth>	has the world gone mad???  https://twitter.com/code/status/593449017398407169
<o0elise0o>	my idea of a function requires it to return something and not access anything higher then the function itself except by way of the input arguements
<puddlejumper>	myrl-chan: http://dpaste.com/2747zd2 :p
<genbattle>	icetooth, it's a cold night in hell, for sure
<myrl-chan>	puddlejumper: please don't python on me. i hate python.
<myrl-chan>	having programs which require python makes me mad.
<puddlejumper>	myrl-chan: why do you hate python?
<lf94>	types.
<lf94>	(lack of types)
<lf94>	it appears dynamically typed was the wrong way to go
<myrl-chan>	lf94: i'm fine with dynamically typed languages.
<lf94>	type inference is what we really wanted
<myrl-chan>	lf94: and i actually like python's typing.
<myrl-chan>	but i simply hate python.
<lf94>	hate is a strong word
<puddlejumper>	myrl-chan: why do you hate python?
<lf94>	dislike maybe?
<myrl-chan>	puddlejumper: it makes distinctions where it shouldn't.
<o0elise0o>	it doesnt seem to be a very popular language
<myrl-chan>	puddlejumper: if a function is in a class, it must pass the class to itself.
<myrl-chan>	puddlejumper: or rather, the function.
<puddlejumper>	the more languages i learn the more python sinks to the bottom of my list of liked languages
<myrl-chan>	puddlejumper: in lua, it goes "fuck that", and says "it's your fucking job to use either methods or functions, i'm not forcing that shit to you."
<o0elise0o>	lua is pretty cool
<oldornew>	i don't like any language out there. not a single fucking one. and i'm a perfectionist at times. this means my blood is boiling 24/7.
<puddlejumper>	myrl-chan: there's @staticmethod
<myrl-chan>	puddlejumper: and because of that, one can make a convention where methods are used for destructive operations, and functions are used for non-destructive operation.
<showerbeer>	oldornew, make one you like then
<oldornew>	showerbeer: that's what i'm doing!
<showerbeer>	nice, tell me more
<_blizzy_>	oldornew, try out c#
<myrl-chan>	_blizzy_: lol
<showerbeer>	hehe
<puddlejumper>	myrl-chan: so, what do you prefer ?
<_blizzy_>	myrl-chan, why lol?
<puddlejumper>	myrl-chan: c#? :d
<o0elise0o>	im surprised no one made a c--
<puddlejumper>	o0elise0o: b exists :p
<_blizzy_>	c++ wasn't made by an asian
<o0elise0o>	isnt there all the way up to f now?
<_blizzy_>	is there a language for every letter?
<puddlejumper>	o0elise0o: possibly z
<_blizzy_>	applescript, b?
<_blizzy_>	c, d, erlang, f#, go, haskell, i?
<myrl-chan>	puddlejumper: lua and haskell.
<cobracommand>	http://en.wikipedia.org/wiki/list_of_programming_languages
<showerbeer>	brainfuck :)
<_blizzy_>	true
<_blizzy_>	thxs, co
<showerbeer>	it's eso, though
<_blizzy_>	thanks, cobracommand
<denommus>	oldornew: yeah, every language has their problems. personally, the ones that are closest to my personal preferences are haskell and ocaml
<denommus>	oldornew: i'm still undecided between the two
<_blizzy_>	julia, k, lua, m, n, ocaml, python, q, rust
<myrl-chan>	algol?
<_blizzy_>	i put applescript for a
<nes173>	is there a site like this? https://www.cs.usfca.edu/~galles/visualization/btree.html
<showerbeer>	of course every language is going to have it's flaws. you're not going to see someone build a house with just a hammer in his tool belt
<nes173>	where i get to draw the b tree?
<myrl-chan>	python
<showerbeer>	you pick what you nee whe nyou need it
<_blizzy_>	s, t, u, v, w, x, y, z
<_blizzy_>	wow
<myrl-chan>	since it's another name for shit.
<myrl-chan>	so it starts with an s.
<myrl-chan>	jk.
<_blizzy_>	..
<_blizzy_>	lol
<puddlejumper>	scala
<_blizzy_>	ok.
<myrl-chan>	ye, scala.
<myrl-chan>	a should be for assembly, since it was the first.
<puddlejumper>	i got nothing for t
<pleiosau1>	tcl
<puddlejumper>	:d
<myrl-chan>	u?
<myrl-chan>	v for verilog.
<_blizzy_>	w?
<_blizzy_>	quick, someone create a programming language and name it x
<_slade_>	x86 assembler
<_blizzy_>	nice
<myrl-chan>	_slade_: boom. :d
<_blizzy_>	y seems harder
<myrl-chan>	u though.
<nes173>	waffej
<wafflejock>	nes173, are you looking to do this in browser?
<nes173>	wafflejock,
<myrl-chan>	yaml?
<_blizzy_>	yas
<myrl-chan>	er
<_blizzy_>	z would be hmm
<nes173>	i want it to be a program, that does insertions and deletions on b-tree
<nes173>	like the site i linked
<myrl-chan>	are we restricted to programming languages?
<_blizzy_>	well, yeah, let's stay restricted
<nes173>	i just want to draw the b-tree first, before doing the insertion and deletion operations
<_blizzy_>	gg with y and z
<myrl-chan>	_blizzy_: well, yaml and webgl aren't really programming languages.
<nes173>	i don't want to just draw it
<puddlejumper>	zeno
<_blizzy_>	yas
<_blizzy_>	whitespace
<myrl-chan>	yaaaay
<wafflejock>	nes173, k don't think you said anything yet about what you're trying to develop this for or what language or framework you plan to use?
<myrl-chan>	_blizzy_: we still need a u.
<_blizzy_>	https://en.wikipedia.org/wiki/z%2b%2b
<_blizzy_>	for z
<puddlejumper>	myrl-chan: unity
<puddlejumper>	unreal script lol
<nes173>	wafflejock, i just want to check a few things with b-trees
<nes173>	nothing special
<puddlejumper>	unix shell!
<_blizzy_>	yep
<_blizzy_>	unreal script or unix shell
<_blizzy_>	gj puddlejumper
<nes173>	i wouldn't need a site like that if you can tell me the order of insertions for this b-tree, that if i inserted the elements in that order, would give me this: http://i.imgur.com/9vcnjzp.png
<_blizzy_>	now lets do numbers
<_blizzy_>	jk.
<puddlejumper>	4999999 is the largest prime i know
<myrl-chan>	o0elise0o: get visual basic out of there, in favor of verilog...
<o0elise0o>	oh i thought of another
<puddlejumper>	visual j# ?
<o0elise0o>	assembly, basic, c, , , fortran, go, haskell, , javascript, , lua, , , objective-c, perl, , ruby, scala, tcl, , verilog, , , , .
<_slade_>	there's a d
<o0elise0o>	just d?
<_slade_>	yup.
<_blizzy_>	just the d
<o0elise0o>	assembly, basic, c, d, , fortran, go, haskell, , javascript, , lua, , , objective-c, perl, , ruby, scala, tcl, , verilog, , , , .
<puddlejumper>	does m$ have a patent for languages that start with 'v' :p
<o0elise0o>	the visual is to indicate it has a wysiwyg gui creator
<_blizzy_>	visual basic
<_blizzy_>	oh
<o0elise0o>	what about for e?
<wafflejock>	erlang
<_blizzy_>	erlang
<puddlejumper>	e f g
<belzelutte>	erlang
<_blizzy_>	ninja.
<o0elise0o>	isnt that a compiler?
<wafflejock>	or ecmascript but that's sort of cheating
<_blizzy_>	https://en.wikipedia.org/wiki/erlang_%28programming_language%29
<_blizzy_>	nah it's a language
<myrl-chan>	s/javascript/j/
<o0elise0o>	assembly, basic, c, d, erlang, fortran, go, haskell, , javascript, , lua, , , objective-c, perl, quickbasic, ruby, scala, tcl, , verilog, , , , .
<myrl-chan>	also, d and erlang.
<o0elise0o>	lol, if i wanted to i could use a basic dialect for like 6 letters
<puddlejumper>	need one for every letter for my resume :p
<o0elise0o>	i put a comma after lol
<stumbles>	puddlejumper: lol
<stumbles>	x? y? k?
<o0elise0o>	xbasic is the only thing i can think of for x
<puddlejumper>	m2001, nasm
<stumbles>	https://en.wikipedia.org/wiki/list_of_programming_languages
<myrl-chan>	m is moonscript.
<o0elise0o>	assembly, basic, c, d, erlang, fortran, go, haskell, , javascript, , lua, , , objective-c, perl, quickbasic, ruby, scala, tcl, , verilog, , xbasic, , zebra.
<puddlejumper>	o0elise0o: xml count ?
<wafflejock>	x10
<o0elise0o>	thats not a programming language
<nes173>	is my answer correct? http://i.imgur.com/lomaxwk.png
<stumbles>	actionscript !!
<o0elise0o>	nasm isnt a programming language either
<stumbles>	basic
<o0elise0o>	its just an assembly assembler
<stumbles>	c
<myrl-chan>	o0elise0o: yas.
<stumbles>	delphi
<o0elise0o>	oh!
<o0elise0o>	revision
<stumbles>	eiffel
<o0elise0o>	assembly, basic, c, delphi, erlang, fortran, go, haskell, , javascript, , lua, , , objective-c, perl, quickbasic, ruby, scala, tcl, , verilog, , xbasic, , zebra.
<stumbles>	fortran
<stumbles>	go
<stumbles>	haskell
<o0elise0o>	no, zebra isn't a language i just suspect there is no z unless we could something like z80
<wafflejock>	yaml?
<stumbles>	icon
<stumbles>	java
<stumbles>	karel
<stumbles>	lisp
<_slade_>	zonnon
<o0elise0o>	i need an i and a k
<myrl-chan>	o0elise0o: moonscript.
<nes173>	can't someone help me?
<stumbles>	maya
<o0elise0o>	myrl-chan::i've heard of that but i dunno what it really is
<stumbles>	o0elise0o: icon and karel
<o0elise0o>	i'm only using ones i'm actually aware of
<myrl-chan>	o0elise0o: moonscript is a language that compiles to lua. :d
<o0elise0o>	oh thats where i heard of it from
<wafflejock>	nes173, you haven't really been clear on what you know or what you're using or what you're looking to accomplish, just got the general gist but no details makes it hard to suggest anything
<o0elise0o>	no one cares that zebra made it into the list?
<o0elise0o>	haha
<nes173>	wafflejock, this is what i was trying to check: is my answer correct? http://i.imgur.com/lomaxwk.png
<stumbles>	z notation, zopl, zpl, zeno
<nes173>	i wanted a site that lets me do that, to check if my answer here is correct
<o0elise0o>	assembly, basic, c, delphi, erlang, fortran, go, haskell, , javascript, , lua, moonscript, , objective-c, perl, quickbasic, ruby, scala, tcl, , verilog, , xbasic, , zebra.
<o0elise0o>	u?
<stumbles>	n?
<dexx1_>	jrslepak: what did you mean corner to corner vs edge to edge ?
<stumbles>	ubercode, ucsd pascal, umple, unix shell
<stumbles>	unity
<stumbles>	nickle, nice, nsis nqc nxc
<o0elise0o>	unity, barf
<o0elise0o>	oh i know nsis
<o0elise0o>	hah.
<o0elise0o>	assembly, basic, c, delphi, erlang, fortran, go, haskell, , javascript, , lua, moonscript, nsis, objective-c, perl, quickbasic, ruby, scala, tcl, , verilog, , xbasic, , zebra.
<_blizzy_>	unrealscript
<pieceofpie>	hey
<pieceofpie>	need help
<o0elise0o>	i doubt there will be a u that i know
<_slade_>	whitespace
<_slade_>	one of the better known esoteric languages
<_blizzy_>	pieceofpie, which what?
<o0elise0o>	lolcat language?
<_blizzy_>	*with
<stumbles>	ibm basic assembly language, ibm hascript, ibm informix-4gl, ibm rpg, ici, icon, id, idl, idris, imp, inform, io, ioke, ipl, iptscrae, islisp, ispf, iswim
<_blizzy_>	wow.
<myrl-chan>	stumbles: no isis?
<_blizzy_>	wouldn't ibm fall under basic.
<stumbles>	this is wikipedia not me
<stumbles>	https://en.wikipedia.org/wiki/list_of_programming_languages
<_blizzy_>	oh.
<_blizzy_>	i don't think there is a y
<o0elise0o>	haha.
<wafflejock>	_blizzy_, yql or yaml
<stumbles>	yorick
<stumbles>	yql
<wafflejock>	nes173, yeah i see what you're getting at here
<wafflejock>	nes173, don't know of anything that will let you piece together the data structure easily though
<_blizzy_>	yql.
<_blizzy_>	that's it
<nes173>	so, is my answer correct?
<_blizzy_>	gj, wafflejock and stumbles
<nes173>	if it is, i don't need further confirmation
<wafflejock>	nes173, this site does a nice job with visualizing the changes to a tree but you'd need to build it up vbs sucks for trying to do anything big but gives you easy hooks into
<_blizzy_>	so that'e every letter
<_blizzy_>	wait nvm
<stumbles>	yahoo!_query_language
<wafflejock>	nes173, oops bad paste
<6jtaa0ke4>	_blizzy_:bliss
<_blizzy_>	k.
<_blizzy_>	hmm
<wafflejock>	nes173, http://ats.oka.nu/b-tree/b-tree.manual.html
<_blizzy_>	6jtaa0ke4, nice one.
<_blizzy_>	kotlin
<stumbles>	k, kaleidoscope, karel, karel++, kee, kixtart, kif, kojo, kotlin, krc, krl, krl (kuka robot language), krypton, ksh
<o0elise0o>	wikipedia doesnt even have qbasic or quickbasic listed under q
<_blizzy_>	this shows how many languages we really do know.
<stumbles>	o0elise0o: add entries
<stumbles>	get famous
<stumbles>	????
<stumbles>	profit.
<vendu>	good early morning :)
<pieceofpie>	_blizzy_: i'm trying to use strtoll to get an input and convert to long long int
<_blizzy_>	pieceofpie, oh.
<_blizzy_>	ok.
<o0elise0o>	adding to wikipedia seems like a lot more work then its worth to me
<pieceofpie>	do i have to first scanf to get the value?
<pieceofpie>	or do i use strtoll independently to grab the input?
<puddlejumper>	pieceofpie: why not use scanf to get long long int
<puddlejumper>	vendu: morning
<vendu>	hey puddlejumper :)
<vendu>	puddlejumper, what's up?
<puddlejumper>	vendu: just chilling, it's night here :p
<vendu>	6:05 am here :)
<puddlejumper>	11pm here :d
<vendu>	welcome to the wake and bake experience
<vendu>	:)
<puddlejumper>	no smoking for me :)
<vendu>	:)
<vendu>	hmm
<puddlejumper>	especially the week before finals :p
<vendu>	hmm :)
<exponential>	i must be missing something basic, but in c, how come my default switch case is always running? : http://pastebin.com/hrvae2en
<puddlejumper>	exponential: use '\n'
<guidex>	where i work, the work seems to increase the more i do it, what does that mean
<guidex>	it's like multiplying tenfold
<exponential>	could someone explain -> to me, i have never come across it before (c that is)
<_slade_>	a->b == (*a).b
<puddlejumper>	_slade_: dereference ?
<_slade_>	puddlejumper: yes
<generalvagueness>	nice dereference man, your dereferences are sick, everyone knows that
<eatyourguitar>	is there a chan for low level stuff and processor architechure?
<generalvagueness>	there are several
<generalvagueness>	which architecture?
<eatyourguitar>	intel
<eatyourguitar>	i do this for fun not my job or school
<eatyourguitar>	i wonder if i should study the old intel 8051
<eatyourguitar>	and learn asm
<eatyourguitar>	or just keep reading the college material on current intel architechure
<tunage>	eatyourguitar: asm is tough.  o.0
<myrl-chan>	tunage: eh. not really.
<generalvagueness>	and learning it for an obscure architecture, hoo boy
<anj7>	morning
<eatyourguitar>	i think asm would be easier than a lot of the programming stuff i have tried
<myrl-chan>	eatyourguitar: i suggest you study risc instead.
<myrl-chan>	eatyourguitar: such as arm.
<eatyourguitar>	risc for dsp?
<eatyourguitar>	i am also interested in dsp
<eatyourguitar>	i have started learning fft and dft
<eatyourguitar>	so arm is based on risc then?
<tunage>	myrl-chan: you have to pretty nifty with your binary to hex conversions. and those endians will scalp you you call it wrong.   o.0
<myrl-chan>	tunage: please. everyone knows big endian doesn't exist.
<generalvagueness>	oh ok, it looks like ##asm deals in assembly languages of all kinds, and they have plenty of people
<planckwalk>	middle-endian is the one true endianness
<generalvagueness>	i suggest that, eatyourguitar
<myrl-chan>	planckwalk: how would that even work? :p
<eatyourguitar>	i think learning intel architechure will benefit two ways, to learn how buffer overflows and bad ram pointers work
<planckwalk>	very well, thank you.
<eatyourguitar>	and to learn how firmware viruses work
<xmppwocky>	eatyourguitar: ... there is a very big difference between those two..
<eatyourguitar>	i was watching this defcon presentation that showed they are related very much
<eatyourguitar>	there is protected areas of ram
<tunage>	http://stackoverflow.com/questions/4752715/why-are-both-little-and-big-endian-in-use  o.0
<eatyourguitar>	they use internet infections to to run code that then has access to protected ram that then has access to the bios
<eatyourguitar>	so i need to learn it from both sides i think
<eatyourguitar>	it would be nice to study an early c compiler maybe
<eatyourguitar>	on a 386 or older
<darkelement>	quick question guys can you have an asterisk(*) in your nick
<icetooth>	seems like there are no easy answers to that question
<darkelement>	yea i was expecting y/n
<darkelement>	:p
<eatyourguitar>	try ##freenode
<myrl-chan>	guys, i put my hamster in my microwave and it became a ferret, what shuld i do? :(
<eric_lagergren>	hi guys and gals
<eric_lagergren>	myrl-chan: free upgrade?
<eatyourguitar>	myrl the drugs will wane with time
<icetooth>	when in doubt, refer to the incredibly confusing rfc! https://tools.ietf.org/html/rfc2812#section-2.3.1
<darkelement>	phrik
<myrl-chan>	icetooth: will it help my hamster?
<darkelement>	oops sorry
<darkelement>	!give darkelement test
<darkelement>	ok it's not on this channel
<icetooth>	myrl-chan, hmm i'm no hampsterologist  but maybe it can do something
<eatyourguitar>	freenode is a pretty easy channel to hang out in
<eatyourguitar>	as long as you are not talking a lot or saying anything useless or abusive
<myrl-chan>	rather, #freenode.
<eatyourguitar>	actually it is probably my fav channel since the mods are not so godly or specific
<eatyourguitar>	##electronics is the same 5 people
<icetooth>	darkelement, if 'm interpreting this correctly, the special characters allowed in irc nicks are :    "[", "]", "\", "`", "_", "^", "{", "|", "}"
<wagonboi>	if i inherit from an object, will my object also have the same instance variables as that object (java)?
<jrslepak>	you don't inherit from an object in java
<wagonboi>	or do i also need to declare them in my own "child" object?
<wagonboi>	well, i'm "extending" the object and using inheritance. but im not sure if my child object will have the same instance variables
<jrslepak>	a class which extends another class inherits all of the superclass's members
<wagonboi>	what is this saying supposed to mean? "we  are going dutch for this event."
<jrslepak>	each person paying their own way
<pyon-ktiert>	has anyone here ever read dijkstra's "a discipline of programming"? i'm really enjoying his explanation of his guarded command language. it's particularly cute how he motivates "skip" and "abort" (sequencing's unit and zero, respectively) without requiring the reader to know any abstract algebra.
<joshumax>	i've finally ruined nano! behold, lisp plugins! http://imgur.com/hqpay3y
<wagonboi>	in java, what is a reason why an undirected graph should throw an unsupportedexception from its gettopologicalorder method? if the graph in question contains a cycle, right? since a topological order can't be created in that case
<pyon-ktiert>	joshumax: lol
<nes173>	could someone explain to me what this question means? http://i.imgur.com/vrdzzw9.png
<pyon-ktiert>	nes173: they're basically asking you to implement the moral equivalent of "select * from some_table where some_table.primary_key between k1 and k2".
<nes173>	records associated with keys? between key k1 and key k2?
<pyon-ktiert>	nes173: remember when i told you b+ tree nodes have pointers to their right siblings?
<nes173>	yeah
<pyon-ktiert>	nes173: this is where those sibling pointers come in handy.
<pyon-ktiert>	nes173: oh, and also the fact that the actual entries are stored in the leaves.
<nes173>	b+trees can be implemented in arrays?
<pyon-ktiert>	wut
<pyon-ktiert>	no.
<pyon-ktiert>	well, each b+ tree node contains an internal ordered list, which could be implemented as an array.
<pyon-ktiert>	but the entire tree is decidedly not an array.
<nes173>	linked lists then
<nes173>	?
<nes173>	i've answered all the questions, i think this one i'm going to skip
<wagonboi>	im going to shout, hopefully for the only time in my irc lifetime... here goes...
<joshumax>	muahahah...a curses-based plugin manager has been implemented. i am unstoppable
<wagonboi>	new dragonball series announced... 18 years after the last one ended!!
<nes173>	http://i.imgur.com/sm9hnur.png
<nes173>	the new dragon ball will suck
<nes173>	the battle of gods sucked
<amigojapan>	wagonboi: that is not really surprising, but is it a reboot?
<wagonboi>	http://goo.gl/nsoz1r
<amigojapan>	reboots suck
<nes173>	not a reboot
<nes173>	a continuation
<nes173>	and it will suck
<pyon-ktiert>	wagonboi: not enough magical girls [together with transformation sequences, of course].
<amigojapan>	ok,   better than a reboot though
<pyon-ktiert>	what do i care about watching dudes and even aliens fight?
<amigojapan>	pyon-ktiert: unfortunately sailor moon crystal was terrible…    unlike the original
<pyon-ktiert>	amigojapan: heh.
<nes173>	dbz was the best series ever made, pyon-ktiert
<nes173>	best anime, best show
<nes173>	nothing beats it
<wagonboi>	http://www.toei-animation.com/files/press_release_dbs_eng_0.pdf
<amigojapan>	dbz was not so great, the original db when goku was a chidl was better
<nes173>	both were great, dbz just is eternal
<amigojapan>	dbz, when it just became, “lets become stronger and stronger” got boring
<lf94>	is there software to visualize mutex locks, context switching, etc?
<lf94>	pyon-ktiert, because i'm trying to find a race condition that i think is non-existent.
<neochronomo>	i'm not sure if there's a better channel for this, but if i have a form on one website, is there a way i can pretend to be sending the form from another?
<neochronomo>	changing the referrer i think?
<planckwalk>	concurrency models tends to vary quite a lot between development environments.
<planckwalk>	neochronomo: there's a limited amount of faking you can do, though it depends upon which aspects you have control of (1st server, 2nd server, client)
<planckwalk>	if you have control of all three, fake away to your heart's content
<planckwalk>	otherwise you tend to run into cross-site request forgery protections
<neochronomo>	planckwalk: there's this site called hacker.org, and one of the challenges is to submit a form with whitehouse.gov credentials. do you know how one might do that?
<neochronomo>	planckwalk: i thought it would be enough to place the form on whitehouse.gov using f12 tools and submitting it from there, but that didn't work
<o0elise0o>	im pretty sure faking whitehouse.gov origin would be a pretty severe crime?
<planckwalk>	neochronomo: i can think of a few ways, the most reliable ones being definitely illegal.
<neochronomo>	o0elise0o: it's just meant to be fun... you'renot supposed to hackinto their site or anything :p
<o0elise0o>	you don't get it
<neochronomo>	there's gotta be a way like i mentioned i tried... something non-invasive and non-illegal
<planckwalk>	it's more a test of what that hacker.org site is configured to accept than a generally applicable task.,
<planckwalk>	they can make it arbitrarily difficult.
<o0elise0o>	faking credentials is never not illegal, as far as i know
<anj7>	hey i have a problem with mysql can anyone help me?
<planckwalk>	anj7: yes; use postgresql instead. ;-)
<neochronomo>	o0elise0o: there's gotta be a harmless way to do this... it's a fun website
<planckwalk>	anj7: sorry, kneejerk response.  ask away :-)
<anj7>	planckwalk: i think i'm using that
<anj7>	planckwalk: nikhiljoshua.tk/signup.html
<o0elise0o>	neochronomo::there's probably a million ways to do it
<anj7>	planckwalk: its connecting to database but its not updating the values
<planckwalk>	anj7: what does the sign_up.php look like?
<anj7>	planckwalk: http://pastebin.com/8mfnl6ze this is sign_up.php
<anj7>	planckwalk: sorry this one is sign_up.php http://pastebin.com/zwv7pwgt
<anj7>	that was connection.php
<planckwalk>	anj7: right, that does indeed look like it should connect to the database, select the db, and then stop.
<planckwalk>	oh okay
<anj7>	planckwalk: any progress?
<anj7>	planckwalk: hellooooo? are you there?
<planckwalk>	anj7: you haven't shown any code that woudl do anything with the db after connecting to it.
<planckwalk>	if that's all the code you have, then i can see where the problem is.
<planckwalk>	otherwise, i was waiting for you to show the ret.
<planckwalk>	rest*
<planckwalk>	oh, looks like i missed a link.  my apologies.
<anj7>	<anj7> planckwalk: sorry this one is sign_up.php http://pastebin.com/zwv7pwgt
<planckwalk>	you do have a table 'try' in your 'test' database, with those columns?
<anj7>	yea
<planckwalk>	what is teh first column?
<anj7>	number
<anj7>	its an int
<planckwalk>	not a primary key or anything then?
<anj7>	idk, i forgot the setting. i just used it for test
<planckwalk>	it might be useful to check for errors =
<anj7>	how can i?
<planckwalk>	mysql_query return false on error
<planckwalk>	then it's something like mysql_error() to describe the error
<cojabo>	planckwalk: mysql_query *is* an error.
<planckwalk>	(it has been a while since i last used php though)
<cojabo>	a pretty bad one at that.
<planckwalk>	php is a pretty bad error too imo, but shit happens.
<cojabo>	use pdo
<planckwalk>	but yeah, even within php and mysql, mysql_query is havily deprecated
<cojabo>	and parameterized queries, unless your goal is to provide free root access to everyone on the planet.
<anj7>	planckwalk: brb
<vdamewood>	hi, people, etc.
<anj7>	planckwalk: i'm back. are you there?
<planckwalk>	occasionally :)
<vdamewood>	he's always there. sometimes he's not here.
<lf94>	emacs > vim
<lf94>	it's official
<lf94>	ams would be proud
<planckwalk>	yes, emacs is larger than vim.
<myrl-chan>	lf94: go kill yourself.
<lf94>	more specifically: emacs + evil > vim
<lf94>	because i get vim functionality in emacs.
<lf94>	a side effect of using emacs is, i can click shit and manage buffers much easier too
<pyon-ktiert>	lf94: clicking shit is useless.
<pyon-ktiert>	lf94: and i say this as an emacs user.
<pyon-ktiert>	lf94: plus you can click shit in gvim too.
<lf94>	pyon-ktiert, well i happen to like clicking shit
<lf94>	so f u! and f u! and f me!
<myrl-chan>	i use both emacs and vim.
<lf94>	so do i. at the same time.
<lf94>	b)
<lf94>	that's what evil is
<vdamewood>	someone should have made an editor called vimacs.
<myrl-chan>	vdamewood: i'm making a modal editor with high extensibility.
<vdamewood>	i forget what emacs is short for, it's either eventually malloc()s all core storage, or escape meta alt control shift
<ams>	neither.
<ams>	editor macos
<vdamewood>	i know what it really means. editor macros
<ams>	so you forgot, but still know?
<vdamewood>	the i forget part was a blatant lie to setup for a joke.
<ams>	i didn't find it funny.
<ams>	emacs uses less memory than vim these days.
<ams>	(that is funny though)
<vdamewood>	i personally prefer kate.
<ams>	i have no idea what that is.
<ams>	people who make stupid jokes about emacs taking up memory have no clue.  emacs is not and never was a memory hog.
<vdamewood>	ams: it runs in x11... need i say more?
<jeaye>	ams: vim also has more sloc than emacs.
<jeaye>	also fucking ridiculous.
<vdamewood>	well, i didn't make the joke; i just repeated it.
<jeaye>	the numbers change with neovim though.
<vdamewood>	jeaye: s?
<ams>	jeaye: it does?
<jeaye>	vdamewood: https://en.wikipedia.org/wiki/source_lines_of_code
<jeaye>	ams: mmhmm
<crocket>	nowadays, many remote jobs require ruby on rails.
<ams>	you mean that vim has more than a million lines of loc?!
<vdamewood>	jeaye: oh, o got the concept. i've just only heard it called loc.
<vdamewood>	s/o/i/
<crocket>	is it possible to make 500$ a month by working 5-10 hours a week?
<jeaye>	ams: as of 2013, vim has 1731 kloc of code (1142 in c + 506 stock distro vimscript + 83 makefile-related), whereas gnu emacs has 1623 (just 299 in c + 1270 stock distro emacs lisp + 54 makefile-related).
<ams>	jeaye: like, 1.1 million lines of lisp, 276k lines of c in emacs
<crocket>	as a freelancing programmer, i mean.
<ams>	jeaye: wtf ...
<ams>	jeaye: and it still can't edit text?
<crocket>	276,000loc of madness.
<ams>	jeaye: :-)
<jeaye>	ams: that is from https://en.wikipedia.org/wiki/editor_war
<ams>	this is hilarious
<vdamewood>	so, emacs is now a lisp interpreter rather than an editor.
<crocket>	emacs is a good editor
<vdamewood>	maybe they should rewrite the editor in elisp.
<jeaye>	i still prefer modal editing, vim-like navigation, and the usage of text objects. i strongly believe that vim, as it's implemented, is shit though.
<ams>	jeaye: each to their own .. i just find it hilarious.
<jeaye>	it is.
<crocket>	emacs is a decent editor.
<ams>	specailly form the vim camp who loves to bitch that emacs is "bloat" and what not ..
<vdamewood>	maybe the reason that emacs now has fewer lines of code than vim is that rms got it right the first time and didn't need to add anything later while vim was catching up.
<ams>	not even saying vi camp since nobody uses vi ...
<crocket>	compared to ides, emacs is not bloat.
<vdamewood>	ams: desperate bsd administrators still use vi. :)
<ams>	vdamewood: they are like unicorns.
<vdamewood>	ams: do you have a unicorn tied up in your back yard too?
<vdamewood>	that reminds me. i need to go feed my bsd administrator.
<vdamewood>	kind of sad though, about bsd. i would have loved to see a thriving free software community with more than one kernel and more than one userland.
<anj7>	planckwalk: you there?
<anj7>	hey what's the best ide for php? open source and free
<vdamewood>	hmm... looks like the network i'm on is congested.
<ams>	emacs is an ide, and was one of the first ides to be wirtten.
<bytefire>	 hi all, i cloned kernel source code from https://github.com/torvalds/linux.git and compiled it using my existing .config. my machine is 64 bit. however after compiling the image created under /arch/x86_64/boot/ directory is a symlink to the image under /arch/x86/boot/.
<bytefire>	is this 64 bit image? if not how to create it? my .config is set for 64 bit
<lf94>	anj7: eclipse pdt.
<ams>	bytefire: if you need to ask, you shouldn't be compiling linux.
<bytefire>	ams, with respect that is a shit answer
<lf94>	ams: let him try!
<lf94>	bytefire, yes, you probably compiled it for 64 bit.
<anj7>	lf94: will it show errors?
<lf94>	bytefire, unless your previous kernel was for 32 bit.
<lf94>	anj7, yeah
<anj7>	lf94: ok, i'll try
<vdamewood>	bytefire: what does file say it is?
<bytefire>	lf94, thanks. the previous kernel was 64 bit too
<bytefire>	vdamewood, it says x86 boot sector
<ams>	bytefire: well, it is the true answer.  if you are afraid of playing around and fubaring your system, you shouldn't be compiling linux.  simple truth.
<bytefire>	ams, have you done it before?
<ams>	yes, like yesterday infact.
<lf94>	>takes my laptop 2 hours to compile kernel
<bytefire>	well then you should know that you learn by trying
<ams>	obrut: right, so try it, see what happens.
<bytefire>	i have done it too. this time i have a problem
<ams>	bytefire: ^^
<lf94>	bytefire, he's saying be ready for a broken computer
<ams>	bytefire: also, the docs do tell you where the resulting compiled linux binary is.
<lf94>	because it's going to happen
<vdamewood>	i remember when i first built a kernel from source. i was surprised that it worked.
<bytefire>	lf94, that's fair. it didnt boot. so i booted using my old kernerl
<bytefire>	that's how iam online now
<lf94>	bytefire, you may be missing drivers
<lf94>	bytefire, are you 100% sure you used your old config?
<lf94>	because it should have booted no problme.
<lf94>	problem*
<bytefire>	lf94, yes, i've checked again
<vdamewood>	bytefire: which distro are you using?
<bytefire>	the boot stopped with a kernel oops.
<bytefire>	vdamewood, ubuntu
<bytefire>	14.04 lts
<ams>	maybe try reading the kernel oops ... and deducing where it crashed.
<bytefire>	lf94, it's possible that when i did `make oldconfig` that would have modified the .config. but still the .config file says 64 bit, not x86
<lf94>	ok
<bytefire>	ams, it failed when loading sda2. but the point is the kernel image is x86
<ams>	how do you know?
<bytefire>	ams, i did `file bzimage`
<bytefire>	it returned x86 boot sector
<ams>	and if it failed to load a sda driver, then you don't have sda drivers available.
<ams>	bytefire: you realise that being a x86-64 elf binary and being a x86 boot sector are totally different things?
<bytefire>	ams, then how did my old image load successfully?
<ams>	bytefire: how the hell should i know what you did?
<bytefire>	ams, don't comment then
<ams>	bytefire: don't ask then.
<vdamewood>	interesting, he got bzimage, i think my default is to use xz
<bytefire>	ams, you're just being problematic
<myrl-chan>	"< lf94> bytefire, are you 100% sure you used your old config?  < bytefire> lf94, yes, i've checked again" is clear proof that you haven't.
<bytefire>	ams not asking you
<ams>	if you cannot be bothered to explain what you did, and then assume that everyone here knows what you did .. well, don't ask.
<ams>	bytefire: yeah you are, i'm in this channel.
<bytefire>	vdamewood, aha
<ams>	bytefire: you should read the documentation.
<ams>	simple as that.
<ams>	because the kernel image is not a x86 bootsector image.
<bytefire>	vdamewood, do i need to untar it first?
<lf94>	could i pm someone about concurrency (mutexes specifically)? i'm going to go effing nuts here.
<vdamewood>	bytefire: tar does something entirely unrelated in this context.
<bytefire>	vdamewood, fair
<anj7>	lf94: can you suggest something good for ubuntu?
<lf94>	eclipse pdt
<lf94>	ice creame
<lf94>	sandwiches
<vdamewood>	bytefire: the kernel is compressed, not archived. there should be a routine in the file to decompress the embedded bz2 data.
<lf94>	spaghetti noodles
<lf94>	with lots of sauce
<lf94>	and meatballs
<ams>	vdamewood: and it should not be a "x86 bootsector".
<ams>	but hey .. the docs actually say what the linux image actually is called.
<bytefire>	ams, i find your replies useless and patronising. normally i don't respond to people like you. but recently i have had too much of that.
<ams>	and the bootsector on x86-64 and x86 machines is exactly the same.
<lf94>	install a nutri green bar to compile
<bytefire>	vdamewood, ok
<ams>	bytefire: maybe cause you are to fucking lazy to actually listen and bother reading some simple documentation.
<ams>	bytefire: or just that you are stupid ..
<bytefire>	ams, thanks for proving what i said
<lf94>	guys eat some of your dinnors
<lf94>	alphagetties
<ams>	:-)
<lf94>	ams are you a concurrency master
<lf94>	because i want to die
<lf94>	terminate
<ams>	i am.
<lf94>	logout
<ams>	i am a master of all things.
<lf94>	are you busy?
<vdamewood>	hmm... i just checked my kernel. it's bz(2?) compressed.
<lf94>	i need about 30 minutes of your time
<ams>	but we must listen to bytefire .. cause i am useless.
<lf94>	i would really appreciate it.
<ams>	lf94: .. so why you wasting it on not asking?
<ams>	vdamewood: there are some binaries that look like mbr in the build didrectory, which bytefire is looking at.  but he would have known what the image is called if he bothered reading a simple text file.
<vdamewood>	ams: i forget, what does the z mean?
<ams>	compressed
<vdamewood>	makes sense
<vdamewood>	honestly, i'm not quite sure which text file he should be reading. i just know what the kernel is called because i've done this before.
<vdamewood>	and i used to wonder what this one file was doing in my boot directory, a long time ago.
<bytefire>	vdamewood, that image i have is still not the right one.
<bytefire>	vdamewood, i didnt run `make install` with creates the vmlinuz image in /boot directory
<bytefire>	had a long day and late at night after hours of kernel compilation, i missed that step :)
<ams>	vdamewood: readme is a good start.
<vdamewood>	ams: indeed.
<bytefire>	ams, this info is not in readme :)
<bytefire>	ams, sorry for my outbust
<bytefire>	outburst
<ams>	bytefire: yeah it is.
<bytefire>	but really that was a bit discouraging and didnt really help solve the problem
<ams>	bytefire: maybe you should read it before you start speaking.
<bytefire>	i've just read it again. taking your advice
<bytefire>	you can read it too. it's not there
<vdamewood>	holy crap. linux kernel version 4?
<ams>	bytefire: all the ifnormation on how to install a new kernel is there.  and explanation of various formats.
<bytefire>	vdamewood, yeah... but this is just to keep version numbers manageable
<bytefire>	no big change
<vdamewood>	so it's the same as when 2.6.39 when to 3.0
<vdamewood>	s/when/went/
<bytefire>	incremental changes but still 2.6
<bytefire>	.39
<bytefire>	vdamewood, there is a funny story about the poll to see how people react to version change: http://www.zdnet.com/article/linux-kernel-turns-over-release-odometer-to-4-0/
<vdamewood>	that is funny.
<bytefire>	:)
<bytefire>	alright rebooting hopefully to come back with v4.1.0
<hotcoder>	people were right
<vdamewood>	good luck.
<hotcoder>	bing is best place to look for porn
<vdamewood>	now i want a 4.0 kernel just because it's shiny.
<vdamewood>	bytefire: uname -r?
<bytefire>	vdamewood, linux bytefire-computer 4.1.0-rc1-00056-g3d99e3f #1 smp wed apr 29 23:19:41 bst 2015 x86_64 x86_64 x86_64 gnu/linux
<bytefire>	thanks for helping :)
<vdamewood>	did i actually do anything *useful*?
<icetooth>	don't forget to config_strict_devmem=y
<bytefire>	vdamewood, it helps to think when bouncing ideas
<vdamewood>	always glad to sit and do nothing, then take credit for it.
<bytefire>	icetooth, sure thanks
<pulse_>	morning
<vdamewood>	hey, pulse.
<pulse>	hi vdamewood
<vdamewood>	i just learned a valuable lesson.
<vdamewood>	if you're planning on getting your motherboard replaced at the apple store, remove the authorization from itunes.
<freezingcold>	so what's the exact opposite of a gpl license?
<vdamewood>	'opposite'? how?
<ams>	freezingcold: a non-free software license.
<freezingcold>	vdamewood: like "if you share this crap, i'm gonna kill you.
<aawe>	looking forward to upgrading my kernel to "hurr durr im a sheep"
<vdamewood>	hehehe @ aawe
<anj7>	freezingcold: its meltinghot here, lol xd
<anj7>	its about 41c
<aawe>	i think the opposite of gpl would be some modern licenses where you do not own the software you buy
<ams>	any non-free software license would be the opposite.
<aawe>	ams: the opposite would be an extreme on a spectrum
<aawe>	non-frees might be on the other side of the spectrum, but finding extreme examples is fun
<aawe>	vdamewood: and agree to never distribute or try to decompile his copy, on pain of death
<ams>	so .. non-free software.
<vdamewood>	well, i guess a true opposite license wouldn't allow running the software either.
<vdamewood>	but other than that, ams is right.
<ams>	such a license that does not allow you to run the program at all would be illegal.
<aawe>	the user hereby accepts to not modify the run-time memory of the program, explicitly or implicitly through interacting with the program
<ams>	such a license would be illeagl.
<vdamewood>	the user hereby accepts probing, as defined in section 1.2(c).
<xeno>	ams: why would such a license be illegal? if it's a scam, of course it's illegal - but plain out, if people willingly pay for the informed chance to not run software, then they're fools...
<vdamewood>	xeno: contracts require quid pro quo.
<ams>	just cause it is a "scam" does not mean it is illeagl.
<vdamewood>	no quid, no quo, no contract.
<ams>	copyright lcienses aren't contracts.
<vdamewood>	good point.
<ams>	and there are things in contracts that are illegal as well.
<xeno>	ams: depends on the justice system, but if it's purposely markedet and presented in a misleading way that presents it as if you're allowed to run it, and after you pay, it turns out you're not - then that would typically be illegal
<vdamewood>	user agrees to assign all rights to firstborn (defined in section 1.2(f)) to the company.
<ams>	xeno: no, nothing to do with marketing.
<xeno>	ams: but could be that i'm colored by the system here... where you're not allowed to do misleading marketing for instance...
<ams>	you cannot put illegal stuff into a copyright license, those bits will be null and void.
<ams>	and copyright does protect the right to run a program.
<ams>	(for personal use, and some other stuff ..)
<xeno>	ams: the copyright itself is not the issue, the issue is the intent to trick someone
<vdamewood>	ams: where exactly does it say that? i might need to reference it.
<ams>	and you are allso alowed to work around subverstions like digital restriction managment, no matter what the license says.
<vdamewood>	ams: not in my jurisdiction. here, drm is enforced by law.
<ams>	vdamewood: which jurisdiction is that?
<aawe>	the user hereby waive all legal rights pertaining to fair usage of software and ownership of digital property, as further specified in section 12.4(a)
<vdamewood>	ams; the us.
<ams>	vdamewood: in that case, you are wrong.
<vdamewood>	ams; how so?
<ams>	vdamewood: the dmca has even provisions for this.
<ams>	https://www.eff.org/issues/coders/reverse-engineering-faq
<ams>	aawe: such a line is illegal. you cannot waive fair usage under copyright law.
<ams>	you could wave it under a contract, but then you hjave to be compensated.
<ams>	but contracts still can't do things that are illegal, like "you must murder ams if you sign this, and get a cookie in exchange"
<vdamewood>	i wouldn't need the offer of a cookie.
<vdamewood>	and i think i'll bookmark this page.
<aawe>	but can i make a contract say "if, by any cause, aawe would cease living during the span of this contract, the user may claim the right to be fairly compensated for emotional damages the loss may have incurred. the monetary value of this compensation is further specified bla bla....
<ams>	aawe: i'll give you proper legal advice, and it was the only advice that is 100% correct.
<ams>	aawe: "maybe."
<vyadhaka1>	how to access individual char of "string ar[1]", so at index 1 there is a string, i need to go over each char in that string at index 1, i tried ar[1][i], char *k = &(ar[1]), then *(k+i) ... getting errors, any suggestions
<planckwalk>	sounds quite a lot liker third-party life insurance, which is on shaky legal ground
<vdamewood>	vyadhaka1: you seem to be under the assumption that we know what language you are using and what a 'string' is.
<aawe>	ar[i+1]
<aawe>	no wait
<aawe>	why doesnt ar[1][i] work?
<vyadhaka1>	vdamewood: it's c
<vdamewood>	vyadhaka1: then what's a string?
<aawe>	vdamewood: a string is simply a container in the category of pointer arithmetic
<vyadhaka1>	not sure, i am guessing it's char *, it's given to us by using a special library
<vdamewood>	vyadhaka1: well, what does the header file say it is?
<vdamewood>	vyadhaka1: if it's a char * then you should see a line like typedef char *string;
<vyadhaka1>	yep thats right
<vyadhaka1>	typedef char* string
<vyadhaka1>	not typedef char *string
<vyadhaka1>	btw thats the difference
<vdamewood>	vyadhaka1: in c, there's no difference between the two.
<vyadhaka1>	ok
<vdamewood>	vyadhaka1: so, when do you assign a string to ar[1]?
<aawe>	vdamewood: putting the star with the name instead of the type is just confusing - it's part of the type. the semantics for multiple declarations of the same pointer type does not matter
<aawe>	let's fight
<password2>	fight fight !
<vyadhaka1>	as soon as i run the prog, input through console
<vdamewood>	vyadhaka1: paste code to a paste site
<ams>	indeed.
<aawe>	gcc should be rewritten in php, and compile c down to hiphop vm bytecode
<aawe>	for ultra speed
<vdamewood>	typedef char/**/*/**/aawe;
<vdamewood>	now i'm tempted to write a .net runtime backend for clang.
<vdamewood>	i might have to leave soon, but the problem looks to me like no actual string is getting allocated and so ar[1] is a pointer to a bogus memory address.
<vdamewood>	foo = malloc(2 << 31);
<aawe>	vdamewood: i will never again touch c code if i have a choice in the matter
<vdamewood>	aawe: why not?
<vyadhaka1>	vdamewood: no the pointer is referencing it right and there is test there, i think i figured it out, thanks
<ams>	vyadhaka1: show code.
<aawe>	vdamewood: when i finish a c program, it feels like i've finished a card house - really fragile, probably going to tip over any second. when i finish a c++ or rust program, it feels like i've build something with bricks and mortar - i know it's solid
<ams>	c++? solid?
<ams>	..
<aawe>	ams: have you used c++11,14?
<vdamewood>	ams: spoke too soon?
<ams>	aawe: 11 at least.
<aawe>	ams: the project i'm working on now is c++, and i exclusively work with smart pointers for memory management. it feels great
<aawe>	and it kind of almost has lambdas. in fact i miss a lot of things in c++, but it will do
<aawe>	it will do until rust kills it off
<ams>	common lisp will win, join us!
<aawe>	it's not a systems language tho
<aawe>	unless your system is a lisp machine
<vdamewood>	(if (will-win-p 'common-lisp) (yay) (boo))
<jeaye>	modern c++ can be very nice.
<password2>	wow , i need to play catchup with c++ , have not used the smart pointers yet
<vdamewood>	well, gotta fly.
<jeaye>	password2: smart pointers have been being used in c++ for over a decade.
<ams>	aawe: huh?! cl is definitly a system language ...
<ams>	aawe: it was designed for being a systems language
<jeaye>	they just weren't part of the standard (they were in boost, though) until 2011.
<aawe>	ams: is there a kernel written exclusively in lisp?
<aawe>	or maybe that's unfair, perhaps all kernels have some asm thrown in
<password2>	jeaye, i did not realise that tbh , i have used qts smart pointers though
<ams>	aawe: is there a kernel (that is activley used) written in c++?
<aawe>	jeaye: the standard smart pointers work much better
<jeaye>	aawe: that's irrelevant.
<jeaye>	the only reason they'd "work much better" is because we now have move semantics for a better unique_ptr.
<aawe>	jeaye: i rudely disagree
<aawe>	ams: ah... i have no idea
<jeaye>	aside from that, shared_ptr and weak_ptr haven't changed much from boost -> std.
<password2>	i need to partake in some kind of c++ project so that i can get some peer reviewed feedback
<aawe>	jeaye: but now that they are not part of boost, there is no excuse not to use them, which makes all the difference
<aawe>	so now noobs can use smart pointers from day 0
<jeaye>	ams: there are certainly a lot more in c++ than in lisp. ;)
<ams>	aawe: so how can c++ be a "systems langauage" while cl is not by that definition?
<ams>	aawe: oh possibly, but there is more php than c++ ...
<jeaye>	aawe: that means they're better? this is your argument?
<aawe>	ams: does cl compile to machine code?
<ams>	aawe: uhm, yeah ..
<jeaye>	ams: because there _are_ kernels in c++ all over the place.
<ams>	jeaye: well, there are kertnels in cl as well.
<ams>	or rather, cl+some stuff.
<pulse>	what's the disadvantage of using smart pointers as opposed to `regular` pointers in c++11 ?
<aawe>	pulse: none
<jeaye>	pulse: in a greenfield project, _nothing_.
<aawe>	and the advantage is that you get automatic memory management without gc and without overhead
<jeaye>	pulse: in an existing project, mixing smart pointers with existing owning raw pointers can be dangerous if not done well.
<freezingcold>	any suggestions on where to find decent programmers to pick up super small programming gigs?
<freezingcold>	like, basic scripting shit.
<pulse>	aawe, jeaye, thanks for the input
<aawe>	freezingcold: freelance sites
<ams>	freezingcold: what kind of gigs?
<jeaye>	pulse: note that overuse of shared_ptr is basically overuse of globals.
<jeaye>	though i'm guess aawe will disagree.
<freezingcold>	aawe: elance is what i'm currently thinking of going back to, but they always seemed like people wanted longer contracts
<jeaye>	pulse: your go-to pointer should be unique_ptr, then weak_ptr, then unique_ptr.
<aawe>	jeaye: i have no idea what you're talking about, but it would be interesting to hear some elaboration
<freezingcold>	ams: "write an opencv program that flips my image in real time. use python's cv2 bindings."
<jeaye>	wait, then shared_ptr last.
<ams>	freezingcold: i'd rather use a proper language.
<jeaye>	unique, weak, then shared.
<freezingcold>	ams: cool, if you're willing to do it in c++, by all means.
<ams>	freezingcold: you looking for a job, or looking for people?
<freezingcold>	looking for people.
<ams>	freezingcold: i said proper language ...
<pulse>	i was just wondering if there's a distinct disadvantage to using them
<aawe>	jeaye: hm. i think i need to convert a lot of my code to weak_ptr
<aawe>	thanks
<freezingcold>	ams: what, are you one of those kids who thinks js is a real language?
<ams>	freezingcold: nope.. defintily not.
<pulse>	freezingcold, js /is/ a real language.
<aawe>	is english a real language?
<jeaye>	shared_ptr removes a lot of the worrying about who owns what, making it very much like a global and making it leaky.
<freezingcold>	aawe: no.
<freezingcold>	aawe: tons of stupid syntax rules.
<ams>	freezingcold: i'm one of those old farts that still uses a 60 year old language.
<aawe>	like perl?
<pulse>	ams, :d
<freezingcold>	aawe: otbasic
<freezingcold>	aawe: tons of localized standards that nobody follows
<freezingcold>	ams: like....
<pulse>	freezingcold, i make a bunch of money doing javascript. before you diss the language again, think about that for a second
<ams>	freezingcold: common lisp.
<jeaye>	we should prefer values, references, and then pointers based on extremity of ownership (unique is extreme on one end, weak is on the other -- shared is in the middle)
<freezingcold>	pulse: haha i know the top end js devs make bank.
<freezingcold>	pulse: ...would you be able to control opencv with lisp? :p
<ams>	sure..
<ams>	https://github.com/ryepup/cl-opencv
<pulse>	freezingcold, i don't deal with computer vision
<pulse>	i do front-end webdev
<freezingcold>	ams: " they do not promise to be complete "
<ams>	shurg, neither does the python cv library.
<ams>	and it is trivial to add new bindings.
<aawe>	jeaye: i have a vector of verts, and a vector of faces. each face references 3 verts. i currently store shared_ptrs in the verts vector and 3 shared_ptrs in each face. if i instead store weak_ptrs in each face, do i need to convert the verts vector to something else?
<freezingcold>	ams: cool, you're hired. enjoy your $7.50.
<ams>	freezingcold: sorry, my rate is 1k/h
<freezingcold>	i can give you a kwh.
<freezingcold>	deal
<ams>	nope.
<freezingcold>	yes.
<freezingcold>	anyway.
<aawe>	freezingcold: can you offer exciting new opportunities?
<freezingcold>	so... elance?
<jeaye>	aawe: your faces don't "own" your verts, they just reference them.
<freezingcold>	aawe: think of it more as re-experiencing the world for the first time, rather than an unpaid internship!
<jeaye>	aawe: i don't see why your faces wouldn't use references
<aawe>	jeaye: what kind of reference? position in the vert vector?
<freezingcold>	jeaye: i don't see your face.
<jeaye>	aawe: depends if the vert vector is changing.
<jeaye>	aawe: if it's not, use a vert& directly.
<aawe>	jeaye: i want to keep the potential for random removal
<aawe>	and changing the verts to a set
<aawe>	or something like that
<jeaye>	aawe: are your verts owned by the vector?
<jeaye>	as in, vector<vert>
<jeaye>	or is it more like vector<some_owner<vert>>?
<aawe>	currently, vector<pointref>, typedef pointref shared_ptr<point>
<jeaye>	then you can reference it directly.
<jeaye>	if they move in the vector, it doesn't matter.
<jeaye>	the shared_ptr won't be deallocated, so the vert stays in the same place.
<jeaye>	thus, the face can use vert&
<aawe>	is it acceptable to circumvent the shared_ptr ownership and reference the raw pointer? it feels unsafe
<jeaye>	you shouldn't need raw pointers here at all.
<jeaye>	i don't yet see why you need shared_ptrs.
<aewffwea>	aawe: why would you do that?
<jeaye>	aawe: why not have the vector own the verts?
<aawe>	jeaye: because i need to reference them from the faces, and those references point to memory positions if the verts are directly laid out in the vector, which means the faces are invalidated by a random removal of a vert
<aawe>	also i may need a circular reference to quickly collect the faces that use a vert
<aawe>	in the future
<aewffwea>	aawe: what's the context of your full problem?
<jeaye>	aawe: once you create the faces, what do you do with the verts?
<jeaye>	aawe: do you still use them for something else?
<aawe>	i am thinking of doing some mesh manipulation - removing all faces in a volume to make space for another mesh
<vendu>	hey guys :)
<jeaye>	aawe: why not copy the verts into the faces?
<jeaye>	hell, i have an algorithm already made for that. ;)
<jeaye>	coincidental, my consume example uses verts and faces: https://github.com/jeaye/jtl#algorithm
<aawe>	jeaye: but then i get duplicate verts when i export everything
<aawe>	virtually all mesh file formats first list the verts, then list the faces by referencing the vert numbers
<jeaye>	aawe: ok.
<jeaye>	aawe: the ownership of your verts *is not shared*
<jeaye>	as i said, people so wrongly use shared_ptr.
<pulse>	hi vendu
<jeaye>	aawe: it seems like you're better off with vector<unique_ptr<vert>>
<jeaye>	aawe: from there, your faces can use vert&
<aawe>	jeaye: do i need to think of unique_ptr as unique ownership, not unique reference?
<vendu>	hey pulse, how's it going? =)
<jeaye>	aawe: unique_ptr mean unique ownership.
<jeaye>	aawe: nobody else has any say in how long it lives.
<pulse>	vendu, morningy atm. you?
<jeaye>	o/ vendu
<vendu>	pulse, wake and bake experience, second time today :)
<vendu>	hey jeaye :)
<password2>	morning vendu
<vendu>	hey password2 :)
<pulse>	vendu, oh, that's more or less standard for me as well
<vendu>	pulse, hehe yeah, but it's the second time i wake up and it's not even 11 am yet %)
<aawe>	time to pop some focus drugs, this won't do at all
<pulse>	vendu, heh
<vendu>	pulse, labor day :)
<vendu>	the big annual student party :)
<pulse>	i don't care for parties
<adsc>	can i come, too?
<vendu>	pulse, used to party like hell this time of year :p
<adsc>	i like student parties
<pulse>	i find people getting drunk uninteresting
<adsc>	hah
<vendu>	adsc, if your idea of a party is sitting on the computer out of your mind, sure :p
<jeaye>	pulse: aye.
<adsc>	not necessarily the first part, but definitely the second part
<adsc>	i don't think i can come to finland any time soon, though :(
<ams>	vappu!!!
<hotcoder>	:)
<hotcoder>	why do java programmers not get laid?
<hotcoder>	because they treat women like objects
<hotcoder>	get it?
<adsc>	ohohoh
<hotcoder>	because java is object-oriented
<ams>	hotcoder: please refrain from sexist jokes, and remarks.
<hotcoder>	yall niggas better start laughing real fuckin soon
<ams>	jeaye: ^^
<adsc>	they also need a intimacyallowancefactory instance first
<hotcoder>	lol
<hotcoder>	i like programming jokes :d
<adsc>	well, it's easy to make fun of java
<tr00p>	well, i did it.
<tr00p>	http://lpst.tk/?lqkl
<tr00p>	marvelous.
<adsc>	my favorite java joke is still: "i had a problem, so i decided to use java to solve it, now i have a problemfactory"
<aewffwea>	hotcoder: programming *is* a joke
<aawe>	tr00p: what does it do
<tr00p>	prints stars...
<tr00p>	brainfuck is awesome
<hotcoder>	speaking of java
<hotcoder>	time to make some coffee and start coding :d
<hotcoder>	whats up?
<adsc>	lima beans, extra strong, no milk
<exponential>	hey, so i'm doing questions on java exceptions and i have to make this snippet of code work. it has to be the smallest possible answer and the answer replaces [?????] i've tried throws throwable, throws emptyarrayexception and throws runtimeexception. could anyone explain what i'm missing ? : http://pastebin.com/8z9tsnnr
<jeaye>	adsc: man, coffee really works on me.
<jeaye>	adsc: i had a coffee _with lunch_ a month or so ago and couldn't sleep all night.
<adsc>	maybe i should start drinking it someday, too
<rounin>	exponential: why, i'd be delighted to explain that
<adsc>	never tried
<ams>	jeaye: i would recommend that you eat something now ..
<rounin>	exponential: if only you were her right now
<ams>	jeaye: and some coffee. ..
<rounin>	oh well
<rounin>	guess i'll get to work instead
<hotcoder>	>.>
<jeaye>	adsc: so i don't drink it. plenty of tea though.
<hotcoder>	am i quieted here?
<ams>	jeaye: no food for a month .. gruesome! :-)
<jeaye>	ams: i've had worse! ;)
<jeaye>	it's just a flesh wound.
<adsc>	i am too lazy to "make" a beverage when i can drink pure water
<aawe>	hotcoder: no
<aawe>	you're just too hawt
<jeaye>	hotcoder: not yet.
<hotcoder>	aawe, :$
<jeaye>	adsc: gnu make me some tea.
<aawe>	adsc: well, gnu make is not really made for beverage compiling anyway
<ams>	aawe: are you sure?
<aawe>	ams: not entirely, i must admit
<ams>	i think it would be perfect ..
<hotcoder>	do you guys have an offtopic
<hotcoder>	i want to relax from all this coding
<hotcoder>	for a bit
<jeaye>	hotcoder: #defocus
<ams>	make wort, make mash, make move-wort-to-tank
<rounin>	what's up with that name, by the way
<hotcoder>	jeaye, its unavailable
<aawe>	ams: ninja > gnu make
<rounin>	it's like having an emergency exit labelled "lens flare"
<ams>	make lautering
<hotcoder>	redirects me to #unavailable and i'm quieted there
<rounin>	why not call it something nice
<ams>	would be cool .. a full brewing process using make!
<ams>	make beer
<ams>	make whisky
<ams>	make all --> really lots of booze
<kino`>	make luv
<aawe>	kino`: oh dear
<jeaye>	kino`: no lua, please.
<adsc>	jeaye, aawe: that's the sad thing about coffeescript, it doesn't even need gnu make
<aawe>	adsc: gnu make is horribly slow for large projects
<password2>	ams , seeing how often make fails for me , if i had to use make to get beer then i would be sober all the time
<jeaye>	chaiscript uses it, adsc.
<adsc>	:)
<ams>	password2: i doubt it is make that fails, but rather the recipie.
<password2>	well , all i know is that i run make and get errors that i'm somehow able to sort out
<ams>	right, so not make, but your recipie.
<rounin>	password2: why, don't forget that you need autotools to generate the pre-pre-compile-script!
<password2>	!?
<rounin>	i suppose the ideal solution would have to be to have a configure.sh that then ran make, which ran cmake
<ams>	rounin: not really.
<ams>	seeing that cmake does not replace automake or autoconf in any shape or form.
<rounin>	ams: let's see... one is a build tool, and the others are... help me out here
<ams>	build tools.
<rounin>	ah!
<ams>	they can still do things differently.
<rounin>	m-hm.
<ams>	cmake has no means of checking for system configuration
<ams>	which is a prerequisit for being able to build stuff.
<rounin>	so the "does not replace in any shape or form" was kind of not true then
<ams>	rounin: ofcourse it is.  it doesn't replace it cause cmake is utterly basic in nature, and doesn't even do half of the things that are needed to be a proper build tool.
<rounin>	or to put it another way... not true in any shape or form
<ams>	cmake for cross compilation is a pain in the ass for example
<aawe>	ams: are you familiar with swedish contract law?
<ams>	aawe: relativley
<rounin>	does it run the compiler? does it run the linker? these are things that i can do in bash
<rounin>	a proper build tool is one that doesn't exist
<rounin>	at least not in my project directory
<ams>	autotools is a proper build tool
<ams>	aawe: why?
<aawe>	ams: do you see any potential pitfalls in the idea of providing a contract platform where users can collaboratively customize/create an agreement, then (if they choose such an agreement) pay money to the agreement pool, which can then be spent by the agreed proxy
<aawe>	(as a website)
<aawe>	i don't know exactly how contractual freedom works with 3rd party services and the internet
<ams>	aawe: hmm...
<henke37>	well, obviously you can't edit the contract after signing it
<henke37>	at least not without all parties agreeing in another contract
<aawe>	henke37: i think the act of paying money to the pool would freeze and formally accept the contract
<ams>	hmm.. mm.. hmphtu
<henke37>	there is a race condition there
<ams>	yeah
<henke37>	who can slip in a clause before the payments start?
<ams>	but i am not thinking of that ..
<ams>	so i mean.... you create this contract thing ...
<henke37>	i think you'd need a setup like in multiplayer game lobbies. lock the settings, then people can agree to them
<ams>	people can cutomize it ..
<ams>	modify it ..
<ams>	at some point they have to "accept the contract"
<ams>	and as soon someone accepts it, it should be locked for changes ...
<aawe>	henke37: good point
<ams>	or somehow revert the acceptance thing to not-accepted
<ams>	so you lcok it, by some nature, you have already accepted the contract, and it should automatically go into this "payment pool" thing...
<ams>	problem is rather, how do you know who signed it?
<henke37>	the site obviously has to have a list for each contract
<henke37>	if you want to be fancy then use crypto
<henke37>	but all that's really needed is a bit saying that the user accepted the contract
<ams>	depends on the contract too.. this wouldn't be valid for house sales and such ..
<ams>	since that requires at least in swedish law, witnesses.
<aawe>	ams: and a paper contract
<ams>	or a outright signature on paper ..
<ams>	aawe: and/or you mean..
<henke37>	who is to say that you can't offer a witness online?
<ams>	some contracts can be done using no paper, but with witnesses.
<ams>	henke37: the law.
<aawe>	some contracts can be accepted by nodding
<aawe>	in swedish law
<ams>	yeah ..
<ams>	aawe: "talk to lawyer"
<ams>	i don't see any _direct_ problems
<ams>	you can enter a contract over the internet ..
<henke37>	just use a crypto signature if there is any doubt about the legitimizy of the signature
<ams>	and if in sweden, personal numbers would really seal the deal..
<henke37>	yeah. personal numbers are sometimes easier to get than phone numbers
<ams>	maybe a signature that is scanned ..
<henke37>	swedish personal numbers are not secret
<ams>	no, i don't see any real problems.
<ams>	other the usual issues with digital stuff ..
<ams>	https://simplesign.se/
<x1>	i want to write a parser. how do i approach the task?
<rounin>	is it like in norway, where it's "not secret", but unwitting bank employees and others still accept them as an ad hoc form of identification, so if you reveal it to anyone, you'll find yourself having surprise credit cards and loans?
<ams>	you have a bunch of those .. and elektronical signatures are also valid.
<henke37>	rounin, it's on any and all id cards. it's part of prety much any non anonymised list that you can buy from the government
<ams>	x1: sit infront of computer, open editor, a: write code, test, if it works, return, else goto  a.
<ams>	henke37: not the last 4 though
<ams>	but yaeh pnos are idiotic ..
<henke37>	ams, not for swedish numbers. they are public too
<ams>	henke37: the full number is not public.
<henke37>	after all, the first six/eight is just your brightday
<rounin>	perhaps they could enact a new law whereby the numbers got prominently listed on the internet so that everyone could see them
<henke37>	ams, i disagree
<ams>	henke37: then disagree with the law.
<rounin>	then all the naïve bureaucrats who think they're a form of authentication would have to shape up
<henke37>	which law exactly?
<rounin>	a new one
<rounin>	oh, what ams was saying
<ams>	henke37: you can try pul
<henke37>	for the non swedes, that's personuppgiftslagen, or "the personal information law" in english
<ams>	pnos are definitly not public in sweden, in any shape or form.
<rounin>	in norwegian it means "fuck"... in the imperative
<henke37>	it basically says "no collecting personal data without reason and try to not leak your database"
<ams>	henke37: and? they are still not public data.
<ams>	you are not allowed to publish a list of pnos
<ams>	they are not "secret" data either.
<ams>	but they are not public.
<rounin>	that's the thing that kind of ruins it
<rounin>	it's not secret, wink wink
<ams>	yeah.
<ams>	pnos are iditoic.
<rounin>	and in a few years, they'll start repeating the same mistakes with biometrics
<henke37>	they aren't even guranteed to be digit only
<rounin>	"well, the machine says he was there, your honour"
<rounin>	"a perfect picture of his retina was registered by... uh-oh, picture..."
<ams>	henke37: they have never been digit only.
<ams>	henke37: the - in a pno actually is significant...
<henke37>	most people wouldn't know of this fact
<ams>	+ for old farts, - for new farts.
<rounin>	i want my number to be "david oftedal" then
<rounin>	that would be hilarious, only not for any other david oftedals
<rounin>	i could go with david j. oftedal
<henke37>	i meant things like t for non swedish people who need to be tracked because of <reasons>
<ams>	yymmdd{+,-}xxxc is the syntax, where c is odd for women, and even for males, and xxxc being a check sum calculated by a stupid formula
<henke37>	i have no idea how you compute the checksum for t
<ams>	t?
<henke37>	ams, it's the second last digit that's the gender. the last digit is the checksum
<ams>	that isn't a vlaid pno
<ams>	henke37: ah, right .. confused there.
<rounin>	perhaps it's not included in the checksum
<henke37>	ams, not just a single t, something like 020202t001
<ams>	that isn't a valid pno afaik.
<henke37>	it's aparently used when they need to tax non swedish people
<ams>	never seen it, it is not in the legal texts i read ..
<ams>	yymmdd{+,-,a}xxxc
<ams>	actually ..
<ams>	people born 2000+ have an a in the middle.
<henke37>	uppdrag gransking had an episode some years ago where these unusual pnos were used for some scam setup
<rounin>	främling, vad döljer du för mig, på din schweiziska konto!
<henke37>	rounin, ditt, "konto" is a t-word
<rounin>	ah! there's always some snag
<henke37>	n and t words are fun. no rule about which class each word has. and it's used in at least four gramatical spots
<rounin>	haha yeah
<rounin>	and the different kinds of plurals... like, if i have multiple pears... is that "pärar", "päror", "päron", "pärer" or something entirely different
<rounin>	one could spend a lifetime just memorizing things
<ams>	pnos are so idiotic ..
<ams>	they can be calculated ..
<ams>	they can be checked ..
<henke37>	calculated? you mean predicted
<henke37>	it's two and a half digits to guess
<ams>	no, calculated.  they are randomly assigned, but a pno doesn't have that many different combinations, and you can easily check if it exsits in the skv database.
<henke37>	fair enough
<ams>	can't find anything on this t type pno ..
<ams>	never seen it ..
<henke37>	most haven't
<ams>	well, i used to work in finance ..
<ams>	i probobly saaw every single pno in all of sweden when i worked there ... :)
<henke37>	if you want to check the ug reference i made, it was the cars to africa scam episode
<henke37>	for those curious: buy a car using one of these special numbers, ship the car to africa and sell it without telling the government. the special number will act as a dummy owner while the government has no idea where the car is
<ams>	yeah
<henke37>	so at your work, did you see the pno for <famous non-swedish artist>? they'd use one of these t numbers
<ams>	henke37: they don't, such a number is really not valid.
<txdv>	africa
<henke37>	valid enough to own a car aparently
<ams>	go figure.
<rounin>	sounds like a pretty bad scam... not only aren't they stealing anything, but they're buying something in a high-cost, high-tax country and selling it to a presumably poor one
<rounin>	that's like scamming oneself, really
<ams>	henke37: do you have any skv texts on it?
<henke37>	i don't even know what skv stands for
<ams>	skatteverket
<henke37>	i don't think i have _any_ of their texts to be honest
<henke37>	for the lazy: skatteverket=tax agency
<ams>	henke37: maybe you are thinking about the adb database?
<henke37>	adb?
<ams>	henke37: yeah ... :-)
<ams>	henke37: it is the internal database used by skv, where each pno is stored as a 12 digit number
<ams>	they are not normally vbisible by people ..
<henke37>	i do not think i was refering to such a db specifically
<apoplexy>	just worked 13hrs straight
<apoplexy>	my feet smell like parmesan
<winsoff>	i disagree with the "right tool, right job" argument.
<winsoff>	how does that argument apply to python versus perl?
<winsoff>	python and perl do almost exactly the same tasks in their own way--there is no "perl does x, python does y" argument.
<ams>	who cares?
<winsoff>	ams: everyone who says "right tool right job" when people discuss programming comparatively.
<ams>	the right tool is the one you can use.
<winsoff>	it makes no sense, because people stick to their own language, and then write utilities to keep sticking to the language.
<winsoff>	people program functionally in javascript, for instance.
<ams>	there is no right tool for the right job.
<ams>	it is a totally hogwash meme
<henke37>	there are however many wrong tools
<ams>	nah
<winsoff>	so what do we say when we want to compare languages?
<ams>	everything can be right under special circumstances.
<winsoff>	that was the only thing preventing people from discussing that: "languages are jus tools mang xddd"
<ams>	winsoff: i don't know, you tell us.  i know how i compare a language to another one.
<winsoff>	ams: how do you?
<ams>	"does it solve my problem so i don't have to go crazy?"
<winsoff>	ams: right, so the best language, in your opinion, is the language that can do that most often?
<ams>	no, the best language is the one _i_ can achive it the most often.
<winsoff>	right, for yourself.  that is what matters in the context.
<ams>	if i could write sane programs in brainfuck then i would consider that the best language for my tasks.
<aawe>	what is the purpose of hurd? linux is already gpl
<ams>	heck, it could be the best language .. it is serialized, you could encode it in 3-bits, send it over serial to a 8-bit pic ..
<ams>	aawe: the hurd existed before linux.
<aawe>	ams: linux was released long before hurd
<ams>	aawe: (but linux contains non-free software)
<ams>	aawe: not true.
<aawe>	hurd is almost at 1.0
<ams>	well, it isn't.
<ams>	but whatever.
<ams>	the first release was in 1990 something
<ams>	the hurd also hasn't changed at all since basically that release ..
<txdv>	nobody uses hurd
<txdv>	:d
<aawe>	what software in linux is non free?
<ams>	(like .. you still don't have usb drivers .. beat that!)
<ams>	aawe: check linux-libre for an exahstive list.
<ams>	as for why the hurd? cause it is a nice idea
<ams>	where you move as much as possible to user space ... allowing you to do cool stuff
<txdv>	"cool stuff"
<ams>	like debugging the tcp-ip stack as a user process, or your file system..
<txdv>	:d
<txdv>	ok that is cool
<ams>	or where you can have real user file systems
<txdv>	emphasis on real
<ams>	linux is kinda catching up with such things using monolithic hacks .. where root needs to be in the loop.
<txdv>	not that fake shit you get around the corner
<ams>	txdv: it is a plain user process, it cannot crash the system.
<ams>	txdv: fuse file systems are not really real user processes, they have direct access to kernel crud
<ams>	aawe: http://www.fsfla.org/ikiwiki/selibre/linux-libre/
<aawe>	ams: found that page, can't find an exhaustive list of things removed
<ams>	aawe: the changelog is not sufficient
<ams>	?
<winsoff>	plan 9 is still the best, bar none
<txdv>	if hurd is so cool, why does nobody use it?
<winsoff>	i just need to totes get my language juices flowing
<winsoff>	txdv: because programming impetus
<ams>	txdv: ask the people who don't use it.
<ams>	linux simple has more monumentum ..
<txdv>	ill stick with ultris
<txdv>	ultrix*
<henke37>	i don't use hurd because i don't use linux
<ams>	and it is all drivers .. drivers is what people want.
<txdv>	best argument tright there by henke37
<ams>	they wanna use their usb devices (gnumach doesn't afaik have usb support)
<ams>	they wanna lsiten to music (no sound support in gnumach)
<txdv>	what is gnumach?
<ams>	it is the name of the kernel
<rounin>	not to mention they already have an operating system
<ams>	the hurd is a bunch of user space stuff
<rounin>	linux
<ams>	rounin: uhm, no.
<txdv>	so no sound in gnumach
<rounin>	or kde/systemd/canonical/anything-but-gnu/linux, as it's properly called
<ams>	you are quite confused and wrong.
<rounin>	wait, are you the same guy who claimed that build systems aren't the same thing as build systems earlier
<ams>	txdv: unles syou count the beep speaker ;-)
<rounin>	you've quite a penchant for quirky opinions, don't you
<rounin>	quirky and untrue
<txdv>	rounin: ask him about c standards
<ams>	rounin: you clearly have comprehension issues.  seeing that is not at all what i claimed.
<rounin>	txdv: i'd rather not!
<txdv>	this dude has been trolling for 20 years
<ams>	txdv: please stop.
<txdv>	ams: well, the music never stops
<txdv>	unless you are using hurd
<ams>	txdv: the naming calling and attacks do.
<rounin>	txdv: music has to be hurd
<sundev70>	i miss calling up random bbs with my 2400baud modem
<txdv>	i thought that is a compliment in here ams
<ams>	sundev70: oo ... that is fast!
<rounin>	sundev70: i guess in the olden days we had a greater scarcity of information, so we appreciated everything we found more
<rounin>	we stored songs on our harddrives, and pictures and small videoclips
<rounin>	now we plow through them by the gigabytes and never store them
<rounin>	i've spent hours just deleting things
<sundev70>	songs? i dont think we had songs all i had was midi
<txdv>	i used to collect tv shows and stuff
<txdv>	now i have free 5tb because it wasn't worth anymore
<rounin>	sundev70: ah, the midi... with the one drum or bass track that's mapped to a nonstandard instrument, so it plays as a completely wrong electric piano tone
<rounin>	hmm yeah... i wonder what will be left of our civilization in the end
<rounin>	will they have the codecs, and will anyone have saved the files?
<sundev70>	those are all just superficials...we got the stuff in our genes
<txdv>	its quite sad that we still have so many propriatery codecs
<sundev70>	txdv: it's because of human nature
<txdv>	im sick of that argument
<txdv>	you are telling me that im a monster deep inside
<sundev70>	no
<sundev70>	wanting to have some wealth or being a bit for self and family isnt being a monster
<txdv>	a bit
<sundev70>	family = your circle
<txdv>	it would be nice if it where only a bit
<sundev70>	i think it's a continuum
<exponential>	anyone know there shit about java exceptions?
<exponential>	their*
<exponential>	-_-
<password2>	_--_
<exponential>	what do i need to replace ??? with to make this work :< : http://pastebin.com/f1w5yyjl
<txdv>	ams: are you using hurd?
<ams>	txdv: i used the hurd for several years.
<johnpoison>	exponential: what's wrong with docs ? https://docs.oracle.com/javase/tutorial/essential/exceptions/declaring.html
<ams>	txdv: i also developed for it for many years.
<adsc>	exponential: have you tried ##java channel?
<txdv>	hurd git master points at a commit from 2009
<txdv>	:>
<ams>	yes.
<ams>	not suprised.
<txdv>	looks like nobody cares anymore about hurd
<ams>	seeing that there was a release just a few weeks ago, and debian gnu/hurd was released recently, i don't see how you figure that.
<dan_s>	i need to populate a deck of cards (not a standard deck, it could have cards of the same type, etc.), which pattern could i use in oop? builder?
<ams>	dan_s: why would you use a pattern at all?
<dan_s>	ams: sorry, i missed that i need to populate different decks
<ams>	right, so why do you need "patterns"/
<dan_s>	ams: because i don´t want to say in my controller which cards to put one at time, i dimply want a .createitemsdeck, .createspellsdeck or something like this, keeping extendibility and using oop correctly
<dan_s>	ams: shouldn´t i need some pattern?
<ams>	what merijn said.
<ams>	you are infact not doing oo properly, nor is this approach extensible.
<dan_s>	marjin: what? i´m required to use mvc pattern in the architecture, didn´t quite understood that sentence
<dan_s>	i´m talking about a creational patterns
<ams>	patterns have nothing to do with oo.
<merijn>	"design patterns are for carpets and wallpapers.", but i should go walk the dog instead of troll oo programmers :)
<dan_s>	well, i guess that not every oo patterns can´t be applied to procedural languages
<dan_s>	pattern*
<dan_s>	what the hell did i write?
<dan_s>	don´t mind the double negation
<aawe>	this is really addictive: http://agar.io/
<ams>	aawe: what does it do/
<txdv>	it wastes time
<txdv>	you are a dot that each other dots
<txdv>	multiplayer fishy
<aawe>	ams: amoeba warfare
<aawe>	with a really interesting split/merge mechanic
<aawe>	but yeah, it wastes time
<txdv>	love, sweet love
<txdv>	aww: how fat are you?
<aawe>	txdv: i got really fat a few times but it's very intense at those sizes
<txdv>	the bigger you are the slower you move?
<aawe>	yes, and the smaller space to move around in you have
<aawe>	those jagged things split you up at large sizes
<rexrat>	.clear
<hotcoder>	how do you guys feel about java?
<adsc>	indifferent
<merijn>	hotcoder: language is sucky-to-mediocre at best, ecosystem and culture is abominable
<hotcoder>	explain how the culture is abominable
<hotcoder>	if you dont mind
<adsc>	enterprise!
<merijn>	very enterprisy, lots of boilerplate and "design patterns" and cargo cult programming
<adsc>	cargo cult programming :)
<merijn>	the only java programmers i know that were excellent programmers were people working on the jvm/runtime itself
<merijn>	although that might be selection bias :d
<ycros>	hotcoder: i don't like it mainly because i've done a lot of c# and whenever i do some work in java it feels really anonying because it's very similar syntactically but at the same time lacking in a whole lot of features i use all the time in c#
<hotcoder>	ohh okay
<hotcoder>	i see i see
<hotcoder>	do you guys do some node.js too?
<hotcoder>	how do you feel about node.js in comparision with java?
<hotcoder>	and in general?
<adsc>	i don't see the value of this comparison
<adsc>	no one in his sane mind would take java for a solution that could be done with node.js
<merijn>	no one in his sane mind would use node.js for *anything* if at all avoidable
<adsc>	the only real reason to use java is if you can't find programmers that can program in anything else
<merijn>	"dealing with lots of concurrent operations and blocking io is hard, lets make everything callbacks, because that's easier!"
<merijn>	it's not like we invented lightweight threading to deal with synchronous io and concurrency 30 years ago...
<merijn>	hell, even go, the most conservative and backwards new language ever managed to get lightweight threading in it...
<adsc>	meh, it is what it is and it works for certain things, which are also things a java solution would be quite cumbersome for
<hotcoder>	damn
<hotcoder>	...
<hotcoder>	lets just relax a little bit
<aawe>	hotcoder: you asked for opinions, programmers tend to have very strong opinions
<merijn>	i have strong opinions even for programmers :p
<txdv>	merijn: js didn't have better primitives for concurrency
<txdv>	the new standard has
<merijn>	txdv: well, maybe that's because js is a terrible language
<merijn>	it's only marginally better than php
<hotcoder>	there are lots and lots of softwares/apis written in java
<aawe>	merijn: people use node.js because it's easy to get started with, and they already know some js
<aawe>	few people are claiming it's the best tool
<hotcoder>	doesn't that give java the value that programmers who know java can import those apis easily?
<hotcoder>	what is your opinion on that?
<merijn>	hotcoder: if you want positive recommendations (in no particular order): rust, c++, haskell, racket, maybe clojure
<txdv>	c++
<txdv>	:d
<merijn>	scala is workable, if a bit messy and slow
<hotcoder>	no no. my focus is on java. i want to know more about it because of pragmatic reasons
<merijn>	txdv: c++14 is pretty decent
<txdv>	"slow"
<aawe>	i heard the scala compiler is a mess
<merijn>	aawe: oh yes
<adsc>	only go for java if you need job security
<merijn>	aawe: i've talked to a few people working on it, it has the basic problem that it wants to make the jvm do things it was not designed for :p
<aawe>	ah right it uses the jvm
<merijn>	oh
<merijn>	i forget erlang
<merijn>	syntax is ugly as sin, but the language model is neat
<aawe>	when i tried scala the mix between functional code and imperative code just confused me
<merijn>	ocaml too, also ugly syntax, but decent language
<hotcoder>	you did not answer that last question. and i want to be as nice as i can and repeat it if you dont mind
<merijn>	hotcoder: only if you value the libraries written in java, and lots of libraries doesn't equate to good libraries
<merijn>	it depends on the code you plan to write
<hotcoder>	if lots and lots of apis, softwares and android etc. are written in java. surely java has some value as in, a java programmer can easily import those things into their application. providing more flexibility
<hotcoder>	like example would be
<merijn>	anyway, i need to go walk the dog
<aawe>	java lacks good libraries... it's a pain to just get a basic http server going without messing around with servlets and containers
<hotcoder>	things like rapidminer, knime and a bunch of other text processors are all written in java
<hotcoder>	so as a java programmer, they can add those programs to their applications and benefit
<hotcoder>	what are your thoughts on that flexibility that java is providing?
<adsc>	hotcoder: have you actually done this?
<hotcoder>	yeah
<hotcoder>	lol
<hotcoder>	i didnt want to reveal that i code java yet
<flonk>	are we hating on java again? lemme grab a beer
<hotcoder>	send me one flonk
<rounin>	let me grab my sensory deprivation tank
<hotcoder>	you merely adopted that tank
<rounin>	so much time and energy is wasted on bashing things
<rounin>	:dd
<hotcoder>	i was born in it, molded by it
<hotcoder>	i didn't come out until i was already a man
<adsc>	you can't become a man in a tank
<hotcoder>	but by then, the sensory inputs were blinding
<flonk>	rounin: (although java *is* pretty shit.)
<hotcoder>	you might be a very good code-reader. but you're not a very good quote-reader
<gedamo>	rounin: don't hate on bash! :p
<adsc>	no, i read it well, if you didn't come out until you were already a man, it means you are still in the tank
<aawe>	rounin: you have a sensory deprivation tank?
<rounin>	aawe: of course! many :d
<aawe>	rounin: i want one
<rounin>	hehe... chuck a carpet over your bathtub and don't suffocate i guess :p
<rounin>	not that i have a bathtub
<aawe>	i need to travel 100km and pay 30eur to use one
<rounin>	what is the obsession with showers nowadays
<adsc>	can't you just buy a coffin and half-fill it with jelly?
<rounin>	when i stay in hotels, all i do is bathe
<rounin>	hmm... intriguing, adsc
<rounin>	and also a good band name... jelly coffins
<adsc>	hehe
<aawe>	adsc: you need water with a very specific concentration of very specific, expensive salts, kept at a very specific temperature. in an insulated space, where no light or sound gets in
<aawe>	it's not trivial
<adsc>	expensive salts?
<adsc>	you mean something better than nacl?
<adsc>	also, the specific temperature is body temperature
<aawe>	epsom salt
<adsc>	why do you need saltwater, though? to keep the body afloat?
<aawe>	and body temperature differs somewhat from person to person, but the important thing is keeping the temperature steady
<aawe>	yes
<aawe>	if you don't float good enough, you cant relax
<adsc>	that's what the jelly is for
<aawe>	but then, when you float, part of your body will be above the water, so you need to climate control the air too
<adsc>	try it sometime
<aawe>	and if you use gel, you will feel the texture/partly uneven pressure
<adsc>	only when you move
<txdv>	salty
<aawe>	for a premium experience, you can swap out the salty water for unicorn tears
<aawe>	orphan tears work too
<future28>	hi, i've done some small scale data mining with a simple oner classifier. oddly, when i build the rule on all of the data, i get a 75 percent accuracy. however when i split the data 70/30, i get a training success rate of 85% - what does this indicate?
<adsc>	aawe: what about orphan unicorn's tears?
<mous>	hello hello
<aawe>	future28: do you split it randomly?
<future28>	aawe yep, stratified
<future28>	aawe: to be fair, it only can classify to "true" or "false" lol
<aawe>	future28: do you mean that you get a 75% accuracy when you train and test on the same data, and 85% when your train on 70% and test on the rest
<mous>	i have homework jady jada i should do it on my own but i am stuck :d so its about making memory allocation (in c, cant use sbrk) so some one gives me some memory space(array of 8bit blocks) and i have to manage it and i want to use buddy for it but i have to store all my data in that memory space i was given, i want to implement buddy with binary tree but for the life of god i cant come up how to organize the tree to be space efficient and also easy to
<mous>	work with, any suggestions?
<future28>	aawe: the first one you said
<aawe>	future28: i said one single thing
<future28>	yes, the thing you said
<future28>	sorry.
<anj7>	amigojapan: hi! o/
<amigojapan>	hi anj7
<anj7>	sup?
<amigojapan>	anj7: nothing much, getting ready cause my russian friend is comming ot visit me in japan on saturday
<amigojapan>	anj7: i promissed to take him around
<anj7>	amigojapan: oh, nice. have a nice time
<amigojapan>	i dont usually promiss this to everyone, but this friend has beem really nice , and i know him for many years by skype
<amigojapan>	ty anj7
<adsc>	amigojapan: you take in a gaijin?
<adsc>	amigojapan: i will report you to the daimyo
<amigojapan>	lol adsc :)
<adsc>	do you live in tokyo?
<adsc>	i mean edo
<future28>	aawe: is that unusual?
<aawe>	future28: http://stats.stackexchange.com/a/109462
<hotcoder>	good night yall
<hotcoder>	<3
<password2>	yuck , now i have to implement sorting in php
<txdv>	no one has ever done this in the history of php
<aawe>	password2: there is a sort function
<aawe>	several, in fact
<password2>	aawe yeah
<password2>	but will it reorder 3 arrays at once acording the the values of one?
<aawe>	that's not sorting
<password2>	why is it not?
<aawe>	because sorting is an operation on a single collection
<amigojapan>	brb
<password2>	what i´m doing is still sorting , just i apply the re-ordering to three arrays , instead of one
<password2>	ie one array is a list of lable and the other two is lists of values
<gedamo>	sounds lie almost like a database
<gedamo>	s/lie//
<aawe>	you have the values column-wise, flip it to store the rows instead
<aawe>	and apply a normal sort
<password2>	well its graphs , derived from db data
<dearhawk>	i have a core duo. getting a new mobo for an i5. do i need a new psu?
<password2>	aawe, not sure what you mean
<password2>	i miss c++ in its arrays
<password2>	it was so much easier to iterate through
<gedamo>	password2: i believe what aawe is suggesting is converting from three arrays to a single array of "structs"
<password2>	mmm , that might be a viable solution , but then i need to seperate them later again
<password2>	for the sake of clarity , this is how my arras look http://pastebin.com/dqnxr46t
<aawe>	the php must flow
<aawe>	password2: there is no reason to store such a thing column-wise
<password2>	aawe, the lib i call thereafter likes it that way
<future28>	aawe: thanks for that
<gedamo>	wouldn't https://php.net/manual/en/function.asort.php do what you want?
<password2>	ooh
<password2>	gedamo, not really actually , the issue being i need to reorder 2 ather arrays in the same manner the array that is being sorted get reorderd
<gedamo>	but the other arrays have the same keys, no?
<password2>	yeah , but the keys aint used all that much
<myrl-chan>	hahahaha..... what the fuck did i do
<gedamo>	password2: but you can sort one array then extract from that in order and use the keys to access the other arrays
<pyon-ktiert>	myrl-chan: saa
<password2>	aah
<password2>	my brian is slow today
<myrl-chan>	pyon-ktiert: uguu~
<myrl-chan>	pyon-ktiert: my dad has an engineer friend, and unsurprisingly, his son's a programmer.
<pyon-ktiert>	myrl-chan: ah :-)
<myrl-chan>	pyon-ktiert: and, at first, he tried to teach me.
<pyon-ktiert>	myrl-chan: nice, what kind of stuff did you make?
<myrl-chan>	pyon-ktiert: so, he showed me some arduino tricks, then he told me things about how his code has problems.
<pyon-ktiert>	problems like what? :-o
<myrl-chan>	pyon-ktiert: it was something as simple as 255 and incrementing by 10. tbh, i didn't realize that.
<aawe>	password2: you have your own brian?
<pyon-ktiert>	:-o
<password2>	yeah
<myrl-chan>	pyon-ktiert: basically, he was modifying arduino code, and debugging his modifications.
<password2>	you don't?
<myrl-chan>	pyon-ktiert: and well, i took over and did the gcc(?) carry flag check.`lastx = x; x += n; if (lastx > x) then {carry_code}`
<pyon-ktiert>	myrl-chan: and that fixed it? :-o
<pyon-ktiert>	aawe: "you have your own brian[sic] ?" --> the human brain is a limited resource: each person has only one. so using it only sparingly is actually not so bad an idea.
<myrl-chan>	pyon-ktiert: yeah. he has a good understanding, he understands concepts such as overflow/carry.
<pyon-ktiert>	myrl-chan: ah. :-)
<myrl-chan>	pyon-ktiert: he seems to only know arduino(c++) though.
<aawe>	pyon-ktiert: i'm talking about a brian
<aawe>	i want a brian that i can command around and force to do boring work
<aawe>	myrl-chan: ++
<aawe>	--
<aawe>	*
<aawe>	a prefix?
<aawe>	typedracket
<pyon-ktiert>	myrl-chan: what do you guys use to debug arduino code?
<myrl-chan>	dialect or implementation. say, if i'm talking about gcc. i'd say `c/gcc`
<pyon-ktiert>	myrl-chan: do you just run it on the arduino, or is there some way to debug it on your pc?
<myrl-chan>	or, if i'm talking about love2d, i say `lua/love2d`
<aawe>	myrl-chan: gcc is not a dialect of c, only perhaps of cpp
<myrl-chan>	pyon-ktiert: i did the latter. i'm not that good at arduino. :p
<pyon-ktiert>	ah!
<myrl-chan>	aawe: i said dialect or implementation.
<wei2912>	hi myrl-chan pyon-ktiert
<myrl-chan>	wei2912: hewwo.
<myrl-chan>	sometimes, i even go more than that, where i use `dialect/dialect language`
<pyon-ktiert>	wei2912: hai
<myrl-chan>	such as `intel/nasm x86 assembly`
<password2>	aawe , be carfeull when commanding you brian to do boring work , it might just give you a headache
<password2>	or make you sleepy
<pyon-ktiert>	"puff, the magic drag" --> that's quite the nick.
<password2>	:/
<myrl-chan>	pyon-ktiert: so, to continue, i then started showing him my github repo, started explaining functional programming and destructive and non-destructive operators. i also started talking about my ideals and conventions. specifically my destructive/non-destructive convention in lua.
<pyon-ktiert>	myrl-chan: ah!
<myrl-chan>	i don't think i should have done that. <.<
<pyon-ktiert>	myrl-chan: why not?
<myrl-chan>	dunno, i think i might have gave a know-it-all vibe.
<myrl-chan>	s/gave/given/
<myrl-chan>	pyon-ktiert: also, i find the exact resource that i needed.  http://brandon.si/code/the-state-monad-a-tutorial-for-the-confused/
<pyon-ktiert>	:-o
<myrl-chan>	s/find/found/
<password2>	iḿ always confused
<pyon-ktiert>	state is just statet identity, what's the problem? :-p
<pyon-ktiert>	jk
<myrl-chan>	;-;
<txdv>	jl
<myrl-chan>	jm
<password2>	jo
<myrl-chan>	jn, you fek.
<myrl-chan>	er
<myrl-chan>	what's the difference between backtracking and bruteforce?
<myrl-chan>	backtracking seems just like a depth-first-search bruteforce...
<pyon-ktiert>	myrl-chan: backtracking doesn't preclude being clever about which alternatives are tried.
<myrl-chan>	preclude?
<pyon-ktiert>	rule out
<vyadhaka>	is there a way to go over each character in a string by accessing it via "char *s", i can print the whole string with printf("%s", s) but want to know if  i can print each char on a new line without copying the string to a new array
<password2>	i like how arsort has a flag for reverse sorting
<myrl-chan>	also, our isp is fucking shit. it takes them at least 24 hours to fucking reconnect.
<myrl-chan>	pyon-ktiert: i see.
<password2>	 /endsarcasm
<kidbeta>	vyadhaka a for loop and %c
<myrl-chan>	pyon-ktiert: so, dfs bruteforce is just one type of backtracknig?
<myrl-chan>	backtracking*
<pyon-ktiert>	myrl-chan: backtracking is simply reverting to a previously visited state s, when you find out that the branch you just visited starting from s doesn't contain [the/a] desired solution.
<myrl-chan>	pyon-ktiert: ic.
<vyadhaka>	kidbeta: sorry i did not mention that char * is at ar[1] so i tried printf("%c\n", (ar[1])+i), put this in a loop, but does not work
<vyadhaka>	kidbeta: keeps saying with pointers need to use %s not %c
<pyon-ktiert>	myrl-chan: conceptually, backtracking is recursive: you just revert to the immediately preceding state. only if there's no solution starting from it, you again just revert to the immediately preceding state, and so on. until you're back to a state from which not-yet-discarded alternatives can be tried.
<kidbeta>	vyadhaka ar[1][i]
<vyadhaka>	yep tried that as well same error
<myrl-chan>	pyon-ktiert: i see, thanks.
<wei2912>	myrl-chan: afaik you'll want dfs for backtracking
<myrl-chan>	 yeah, i just realized that it's not necessarily a bruteforce.
<myrl-chan>	since you may reach a branch which is impossible, meaning that you won't be traversing up to the leaves.
<pyon-ktiert>	myrl-chan: yeah, backtracking is simply the combination of (1) trying several alternatives (2) which can be nested. bruteforce has the additional "requirement" that the search space isn't pruned before the search process begins.
<myrl-chan>	also, wei2912, i forgot all about the poor man's concurrency monad. :p
<myrl-chan>	pyon-ktiert: concerning state monad, it seems something you can just do with `let (x,y) = f z; (x', y') = f x;` or something similar.
<erste>	hi, for web responsive design related topic, which irc channel would suit better?
<myrl-chan>	wei2912: water you donig?
<myrl-chan>	doing*
<myrl-chan>	pyon: apparently, i still don't know how to implement monads with functions... <.<
<myrl-chan>	that, and applicative and functors...
<myrl-chan>	fek...
<pyon>	myrl-chan: what do you mean by "monads with functions"?
<pyon>	"instance monad ((->) a)" ?
<myrl-chan>	pyon: `newtype state s a = state { runstate :: s -> (a, s) }`
<pyon>	oh.
<myrl-chan>	pyon: what'd be the proper term?
<pyon>	dunno
<myrl-chan>	my brain hurts from this. :|
<myrl-chan>	this article did help though
<password2>	arg
<password2>	i hate dynamic types
<myrl-chan>	oh cool.
<password2>	php converted all my keys to int , except the one that has a negative value
<myrl-chan>	pyon: i'm really having a hard time understanding monads. lol.
<frobs>	password2: they are not bad...just undefined jajaja
<myrl-chan>	pyon: i understand maybe and list monad for the most part.
<myrl-chan>	pyon: but what i don't understand is why list is useful as a monad.
<aawe>	myrl-chan: list comprehensions
<aawe>	is syntactic sugar for monad bind
<pyon>	myrl-chan: list and listt are useful for modeling several search problems.
<pyon>	myrl-chan: the kind of thing where one normally says "ah, i'd use prolog!".
<myrl-chan>	mostly about what's the advantage of [x,x[[x, x'], [y, y']] over
<pyon>	well, perhaps not so normally.
<myrl-chan>	er
<myrl-chan>	mostly about what's the advantage of [x, x', y, y'] over [[x, x'], [y, y']]
<aawe>	also - it is very obvious that list is a functor. it is also trivial to think of a join for lists
<myrl-chan>	such as doing `list >>= replicate 2`. the result seems to be more controllable if you instead use `fmap (replicate 2) list`, since you'd have a proper idea of how it's grouped.
<s23>	hi
<pyon>	myrl-chan: errr
<pyon>	myrl-chan: (>>=) and fmap aren't quite the same thing.
<myrl-chan>	pyon: yeah, i know, different things.
<myrl-chan>	pyon: the former returns [x] and the latter returns [[x]]
<pyon>	myrl-chan: the idea with a monad is that it's a generalization of the identity and associativity of a monoid, to a "functorial context".
<myrl-chan>	pyon: but in what case would the latter be more useful than the former? except, i guess that you can easily chain it.
<myrl-chan>	er, switch latter and former there.
<pyon>	myrl-chan: say i give you a value of type [[[a]]].
<pyon>	myrl-chan: and i want to "super-flatten" everything into a value of type [a]
<s23>	i have a quick question. some time ago i knew what the key was to selecting random text in a column but i forgot and cant find it anywhere can someone pls tell me what that keybord key is i am having truble selecting  data in notepad
<pyon>	myrl-chan: what the monad laws, for the case of lists, say, is that it doesn't matter if you flatten the inner [[a]]s first (as a list of [a]s), or you flatten the [[[a]]] first (as a list of [[a]]s).
<aawe>	oooh - lift for [a] is map
<pyon>	myrl-chan: well, that's just associativity.
<myrl-chan>	pyon: ic.
<pyon>	for the sake of concreteness, let's use the 2x2x2 cube: [[[1,2],[3,4]],[[5,6],[7,8]]].
<s23>	can anyone pls help me with my question it would realy save me a lot of time
<pyon>	this can be superflattened in two ways.
<pyon>	first way is to flatten the inner [[a]]s first: [[1,2,3,4],[5,6,7,8]]. and only then flatten the outer list: [1,2,3,4,5,6,7,8].
<pyon>	second way is to flatten the outer [[[a]]]] first: [[1,2],[3,4],[5,6],[7,8]]. and again flatten the result: [1,2,3,4,5,6,7,8].
<pyon>	outer [[[a]]]*
<myrl-chan>	ic.
<myrl-chan>	pyon: how does this relate to monads?
<aawe>	s23: use another editor
<myrl-chan>	s23: er, control-g or something?
<aawe>	myrl-chan: join is a monad operation
<myrl-chan>	aawe: i see.
<myrl-chan>	is it wrong that i still have no idea how this works?
<myrl-chan>	:/
<myrl-chan>	ah, cool.
<myrl-chan>	aawe: i think http://en.wikibooks.org/wiki/haskell/understanding_monads/list has a good example of how list and bind is useful.
<dreams_>	hai
<s23>	its alt + drag in notepad++ :p
<myrl-chan>	s23: you said notepad, not notepad++.
<nexia>	http://prntscr.com/6zw7ez
<password2>	lol
<merijn>	password2: i recommend mentally reading "useful frequently recurssing pattern/abstraction" whenever you read "monad" :p
<password2>	err
<password2>	iĺl try that when i start caring what a monad is , i assume it has to do with functional programming
<ninjapenguin>	nexia: https://www.dropbox.com/s/qiv3pcn41ewfknw/irctheme.png?dl=0
<ninjapenguin>	my theme!
<ninjapenguin>	dark themes rock.
<nexia>	cli client?
<merijn>	rats, i hate it when careful optimisations ends up making my code slower >.>
<ninjapenguin>	hexchat.
<password2>	wanted to say the interface looks familier
<password2>	iḿ on hexchat too
<rindolf>	merijn: yes, that sucks.
<rindolf>	merijn: which language is that?
<merijn>	rindolf: c++/cuda
<rindolf>	merijn: ah.
<nexia>	i use hexchat too lol
<rindolf>	nexia: so do i. :-)
<nexia>	what theme though? ^^
<nexia>	i use 'monokai' as seen here https://hexchat.github.io/themes.html
<merijn>	rindolf: i was trying to prove "see, you can't predict which implementation is faster because it depends on your data!" on the assumption that this published "best known" technique would beat my ghetto simple solution.
<merijn>	but it turns out my homebrew solution just always wins >.>
<rindolf>	merijn: ah, heh.
<merijn>	which kinda undermines the point i was trying to sell >.>
<pyon>	myrl-chan: sorry, my connection has been particularly fragile the last half-hour, but http://ideone.com/7vhagw
<pyon>	crap, he just quat.
<nexia>	because of me >.<
<password2>	i use the default theme
<nexia>	pyon: something about me licking other pipl behind his back lol
<pyon>	nexia: lol
<nexia>	what the fuck. http://www.microsoft.com/en-gb/windows/browser-for-doing
<nexia>	k, no spartan
<nekothunder>	guys, i need help in python.
<password2>	is it just me or is browsers transforming into a os?
<pyon>	password2: such a transformation is fait accompli by now.
<nekothunder>	password2: not just you.
<dreams_>	password2: its just you and the trendy people. i use lightweight browsers.
<pyon>	password2: modern browsers are already oses. sadly, not particularly good ones.
<dreams_>	of course most are trendy.
<pyon>	dreams_: lightweight browsers like...?
<nekothunder>	pyon: so, a formal pronoun is what you use in formal conversation?
<dreams_>	pyon: well, dwb, jumanji and the list goes on. i want to write my own but i'm in the middle of a project.
<nexia>	http://www.independent.co.uk/life-style/gadgets-and-tech/news/microsoft-edge-the-browser-that-killed-off-internet-explorer-revealed-10215037.html
<nekothunder>	dreams_: vimb. :d
<nekothunder>	dreams_: thought, people argue about how using webkit is lightweight.
<password2>	dreams_, do they display acko.net correctly?
<dreams_>	nekothunder: compared to said "modern" they are.
<nekothunder>	also, til, (,) is a function in haskell.
<password2>	hehe
<nekothunder>	either a function or a data constructor.
<nekothunder>	`(,) :: a -> b -> (a, b)`
<wei2912>	yeh
<nekothunder>	wei2912: hey, can you give me resources in helping understand monads?
<wei2912>	nekothunder: well, just figure out how to use basic monads first
<wei2912>	nekothunder: then eventually you'll probably get it
<myrl-chan>	wei2912: i think i understand maybes, lists, eithers, and others monads that holds values. but i don't understand monads that holds functions, such as pmc and state monad.
<myrl-chan>	rather, i don't know "why they work:'
<wei2912>	myrl-chan: same, i don't understand the io monad either
<wei2912>	myrl-chan: i suppose it comes after a while
<myrl-chan>	it seems simpler to understand without using the monads. :p
<nexia>	http://i100.independent.co.uk/article/17-things-kids-these-days-take-for-granted-about-the-internet--xjmaubulgw?utm_source=indy&utm_medium=top5&utm_campaign=i100
<myrl-chan>	wei2912: how did you go through the pmc monad?
<wei2912>	myrl-chan: i didn't. i haven't done haskell in a few months.
<myrl-chan>	wei2912: what have you been doing lately? :o
<myrl-chan>	i have a feeling that our isp will reconnect it in 2 days, because they say "it's 24 to 48 hours"
<wei2912>	myrl-chan: well, it's the year of exams!
<wei2912>	d:
<password2>	dang it , i have no motivation to work today.
<myrl-chan>	wei2912: ah, i see.
<wei2912>	myrl-chan: i'll be graduating from secondary school at the end of this year, so my life is quite filled with work
<grill>	yo
<myrl-chan>	wei2912: what's secondary school again?
<grill>	why won"t opencv allow me to increase contrast
<wei2912>	myrl-chan: in here it's education between ages 11 and 16
<myrl-chan>	wei2912: but you're (15-16), and you're already graduating?
<myrl-chan>	.-.
<wei2912>	myrl-chan: err, 13 and 17*
<myrl-chan>	ah.
<wei2912>	but there're two streams
<myrl-chan>	two streams?
<wei2912>	well, four
<wei2912>	but to keep things simplified, basically some people go through 5 years and take n-level in the 4th year and o-level in the 5th, while others go through 4 years and take the o-levels
<myrl-chan>	wei2912: what would those be?
<wei2912>	to complicate things i'm not even taking the o-levels
<wei2912>	:p
<myrl-chan>	wei2912: is that a good thing?
<wei2912>	myrl-chan: i still go through education for the same number of years (2 more specifically)
<myrl-chan>	wei2912: seems complicated. :p
<myrl-chan>	brb. eating.
<wei2912>	myrl-chan: yeh. https://en.wikipedia.org/wiki/secondary_education_in_singapore
<wei2912>	myrl-chan: i have yet to figure out what happens after i graduate
<wei2912>	completely*
<kidbeta>	wei2912 you get a jewb
<o0elise0o>	i found what seems like a great movie but they speak british english :-(
<gedamo>	what's wrong with british english?
<aidanh>	and what's the movie?
<o0elise0o>	it sounds cool but i can't understand them
<o0elise0o>	"under the skin"
<aidanh>	sounds like it's a horror movie about sex
<gedamo>	presumably it's the accents you can't understand
<anj7>	hey guys can anyone help me with my php and mysql login website?
<o0elise0o>	sci-fi artsy horror sex
<anj7>	i'm learning it
<wei2912>	kidbeta: ?
<kidbeta>	job
<gedamo>	anj7: maybe try ##php
<wei2912>	kidbeta: well, not exactly
<wei2912>	:p
<wei2912>	context is crucial
<rindolf>	hi all, sup?
<myrl-chan>	rindolf: hewwo~
<rindolf>	myrl-chan: how are you?
<myrl-chan>	rindolf: i'm fine.
<rindolf>	myrl-chan: nice.
<myrl-chan>	ninjapenguin: send us a vid.
<ninjapenguin>	i don't have a waterproof camera.
<exio4>	doesn't matter
<myrl-chan>	exio4: :d
<exio4>	re: british english is cute but brits seem to like playing with the pronunciation
<myrl-chan>	nexia: well guess what! i'm not licking you anymore!
<rindolf>	anj7: you should use a cms or a web framework for login.
<anj7>	rindolf: i already created my test login website just check it out. http://nikhiljoshua.tk
<rindolf>	anj7: ok.
<vendu>	ooh, got some old manowar playing :)
<naschine>	carry on!
<naschine>	sry
<vendu>	naschins, it's gonna be the 3rd track from this album
<vendu>	fighting the world :)
<naschine>	carry on was one of my absolute favorite songs when i was a teen :d
<vendu>	:)
<vendu>	playing carry on now :)
<vendu>	hmm
<vendu>	next up, defender :)
<vendu>	hmm :)
<suzurin>	nexia: ;-;!
<nexia>	i want to be licked
<grill>	yo
<grill>	opencv's documentation is horrible
<gedamo>	grill: there's an #opencv channel
<suzurin>	so is awesomewm's. :/
<rindolf>	vendu: (and all) this is a great (imo) track and it's cc-by - http://ccmixter.org/files/destinazione_altrove/49997
<grill>	meh. doesn't matter
<grill>	i figured it out
<suzurin>	fucking shit. how does this work. lol.
<adsc>	how does what work?
<adsc>	fucking shit doesn't work
<adsc>	it doesn't have enough resistance
<adsc>	maybe if you ate some glue or plaster or something
<suzurin>	lol
<suzurin>	how the fuck can one understand monads
<dreams_>	suzurin: phd.
<suzurin>	dreams_: just a phd?
<wei2912>	suzurin: how many different nicks do you have...
<wei2912>	are you going through an identity crisi
<suzurin>	wei2912: is it really that obvious with how i swear?
<wei2912>	crisis*
<suzurin>	wei2912: i think i have 20 nicks.
<wei2912>	suzurin: no, you use ;-;, spoke of awesomewm, wrote "lol." and talked about monads all of the sudden
<wei2912>	used*
<wei2912>	a*
<myrl-chan>	wei2912: hahahaha.
<wei2912>	so i took a careful look at your vhost
<dreams_>	wei2912: not to mention being annoying :p.
<wei2912>	dreams_: lol
<myrl-chan>	it makes me feel good that someone knows my behavior. :d
<znoosey>	myrl-chan: we need to know who to avoid!
<myrl-chan>	znoosey: lol. :3
<dreams_>	znoosey: s/avoid//ignore/
<znoosey>	dreams_: same ting
<adsc>	grill: what's so bad about opencv's docs? they look fine at a glance...
<grill>	adsc tell me how to perform a brightening and contrast maximization operation in python
<grill>	you have 5 minutes
<grill>	(you'll have an aswer to your question in 5 minutes)
<wei2912>	grill: use an image editor
<grill>	wei2912 for 80k images
<wei2912>	alternatively, set all pixels to #ffffff :p
<wei2912>	grill: multiply each colour of a pixel by a number. like, 1.1 if you want a brighter image
<grill>	explain how to do this in the context of opencv and/or numpy in a manner that doesn't cause errors
<grill>	oh, and don't bother looking at the documentation because it's outdated
<wei2912>	numpy pls
<grill>	i really should have just threaded this script
<wei2912>	well
<wei2912>	you probably don't want to
<grill>	no
<grill>	i do
<grill>	i have a machine with many cores and many graphics cards
<wei2912>	well, good luck doing it in python
<grill>	i did it a couple weeks ago
<wei2912>	don't bother looking at the documentation because it sucks
<grill>	multiprocessing, son
<nda_>	i came across a domain name validator that allows full doman names (not fqdn) with a length of 254 octets. i think it's a bug but is it?
<wei2912>	multiprocessing is the devil
<merijn>	nda_: time to dig up the rfc!
<grill>	i guess so
<grill>	if you don't know how to handle concurrency
<wei2912>	the same can be said for opencv and numpy
<myrl-chan>	i heard that the rfc can help me turn my hamster back, because i put it in a microwave and it became a ferret.
<paxcoder>	i don't want to know how to handle concurrency. that's why i'm into fp
<wei2912>	paxcoder: lol
<myrl-chan>	paxcoder: i love you.
<merijn>	i'm into haskell because i'm not smart enough to do python >.>
<wei2912>	paxcoder: well... there're books on parallel and concurrent progrmaming in haskell
<paxcoder>	merijn, :)
<nda_>	merijn: yeah, that's a great idea unless i'm lucky to come by someone who read it already and remembers it. :d
<wei2912>	merijn: lmao
<myrl-chan>	i've never made concurrent code in my life. except for that one time where i made an irc client.
<grill>	what
<grill>	how
<grill>	i can't even understand how a software engineer could make it even a few months without having to deal with concurrency
<wei2912>	it's simple
<wei2912>	you don't be a software engineer
<grill>	ok
<grill>	be an english major
<wei2912>	not everyone here is a software engineer after all
<grill>	that's not true
<merijn>	wei2912: you think i'm joking? i once tried to contribute a bugfix to an open source python project
<mike802>	yeah, some people are hustlers
<merijn>	spend 2 days trying to figure out what ever variable was and were things were being changed, gave up after that time
<grill>	what
<mike802>	math sucks man
<paxcoder>	merijn, are you serious?
<wei2912>	mike802: no
<merijn>	paxcoder: yeah
<paxcoder>	merijn, so did you start with fp or how does that happen?
<kushite>	hi guys! i'm new to programming, im looking for some guidance and nice methods to learn it. im very interested in it and looking for some guidance.
<wei2912>	merijn: was the code just horrible? :p
<merijn>	paxcoder: i ran into a bug in a mercurial extension, from the stack trace i actually *knew* what the problem was, but couldn't find where to fix it because i had no way which variables where located where, etc. so it was impossible to track what came from where
<dreams_>	merijn: its not only you. mutation makes it hard to reason about programs.
<merijn>	wei2912: i dunno? how is mercurial's codebase? i expect it is above average in quality?
<merijn>	paxcoder: my first languages were java and python
<myrl-chan>	pyon: ay, what resources have you studied about monads?
<dreams_>	which you don't worry about in haskell.
<wei2912>	merijn: no idea
<xqo>	what is the bitwise operation called that makes 0xffd8 become 0xd8ff?
<adsc>	grill: gimp has a python console, i think
<pyon>	myrl-chan: wikipedia and ncatlab, mainly. :-|
<wei2912>	merijn: i don't have much hope in the quality of codebases though :p
<myrl-chan>	pyon: and you understand monads...?
<merijn>	for comparison, the three times i wanted to patch a bug in a big haskell codebase (2 in ghc and 1 in pandoc) i had no trouble at all figure out what to change and where
<myrl-chan>	pyon: i've tried reading at least 5 different references, and i'm still so confused. .-.
<wei2912>	merijn: when it comes to python*
<paxcoder>	myrl-chan, i wouldn't assume what works for pyon would work for others.
<merijn>	myrl-chan: i recommend not "studying monads"
<pyon>	myrl-chan: well enough to use them when writing programs. not sure if that counts as well enough.
<merijn>	myrl-chan: my opinion is that people overthink things and over focus on the name "monad"
<wei2912>	the big picture is all about category theory
<wei2912>	*ducks*
<merijn>	myrl-chan: my advice: focus on typeclasses, type signatures and *specific* implementations of monad (good ones are maybe, either, lists, and later state)
<dreams_>	myrl-chan: step back and read about functors first. then read about applicative functors and then monads will makes sense.
<adsc>	grill: i think you can use the gimp library in a non-gimp project, too
<merijn>	myrl-chan: study what the typeclass operations do for *those specific types*
<myrl-chan>	dreams_: i've read about both.
<myrl-chan>	and i still don't understand monads.
<pyon>	merijn: myrl-chan: and parser combinators. and logict.
<merijn>	myrl-chan: i mean, monads are at the same abstraction level as monoids. knowing what they are is not very helpful
<wei2912>	what's the difference between functors and applicative
<adsc>	grill: it should be better suited for your use case of photo manipulation
<merijn>	yeah, parsec combinators are good
<grill>	uh
<dreams_>	myrl-chan: if you understand both you should understand monads. maybe this will help: http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html
<grill>	too late
<myrl-chan>	dreams_: i actually have adit.io bookmarked. it's one of the things that helped me understand monads.
<grill>	i already did it in imagemagik and opencv
<merijn>	i dislike that one, i prefer "you could have invented monads (and maybe you already have!)"
<myrl-chan>	dreams_: at least to the point of maybe, either, and lists. but it breaks down on state and poor man's concurrency.
<merijn>	http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html
<dreams_>	myrl-chan: so you understand monads after all.
<myrl-chan>	dreams_: not fully.
<merijn>	myrl-chan: the thing is there is nothing more to understand beyond "return + >>=" and some laws
<pyon>	wei2912: the functor type class only allows you to fmap a function ("a -> b") into a single functorful ("f a") to get another functorful ("f b"). applicative allows you to map a function of arbitrary arity (e.g. "a -> b -> c ->") into arbitrarily many functorfuls ("f a", "f b", "f c") to get a single functorful ("f d").
<merijn>	myrl-chan: the best way, in my opinion, to understand state is to reimplement it yourself
<doomlord>	some ideas from haskell made more sense after i looked at rust, with its' more familiar syntax
<dreams_>	myrl-chan: what do you mean not fully? you either do or don't. unless you're trying to get into the theoretical background which can be a significant area of study.
<myrl-chan>	merijn: i've been trying it.
<merijn>	myrl-chan: advice i've given so often that i actually wrote down the exercises for it! https://gist.github.com/merijn/098106abd45c940dab09
<wei2912>	pyon: wait, what
<pyon>	doomlord: higher-kinded types are notoriously missing from rust.
<doomlord>	true
<wei2912>	pyon: happened to the example function*
<myrl-chan>	merijn: i think i can understand it, in terms of a series of let statements with the results being decontructed to a tuple.
<myrl-chan>	welp.
<myrl-chan>	i have less than 5 mb left.
<doomlord>	but both monads and typeclasses made much more sense after seeing similar things in a more familiar syntax
<myrl-chan>	i guess i'll just chat rather than research.
<dreams_>	merijn: post-grad?
<wei2912>	dreams_: merijn thanks
<pyon>	wei2912: (f :: a -> b -> c -> d -> e) <$> (m :: g a) <*> (n :: g b) <*> (p :: g c) <*> (q :: g d) :: g e
<dreams_>	wei2912: for what?
<pyon>	wei2912: assuming g has an applicative instance.
<wei2912>	dreams_: the link
<merijn>	dreams_: me? yeah, i'm a phd student
<myrl-chan>	hmmm
<pyon>	wei2912: a special case is "pure", which handles the case of 0-arity: "pure x :: a -> g a". again, assuming g has an applicative instance.
<deithrian>	can someone tell me what kind of a keyboard is most comfortable for use with touch typing please?!
<dreams_>	merijn: nice, what's your area if you don't mind me asking.
<wei2912>	let me guess
<merijn>	dreams_: graph processing, hpc and gpgpus
<wei2912>	something to do with fp
<pyon>	wei2912: err, i meant "pure", not "pure x".
<merijn>	wei2912: hah, wrong! :)
<wei2912>	:(
<dreams_>	merijn: fancy
<csd_>	i'm looking for a web service that will proxy http requests and cycle random externals ip, and which a large pool of external ips. i see proxymesh as one such service. what are some similar, potentially superior services?
<merijn>	i tried to do programming languages, but no funding :p
<wei2912>	lol
<pyon>	merijn: studying where?
<dreams_>	pyon: amsterdam.
<pyon>	ah!
<mike802>	i've never heard someone define what they do like that
<mike802>	##networking is a channel here
<wei2912>	why does haskell still have specific functions like map when there are more general functions like fmap?
<merijn>	dreams_ knows how to /whois :p
<merijn>	wei2912: hysterical raisins
<dreams_>	merijn: nope, your github.
<merijn>	wei2912: it was decided that "map is easier to explain and leads to simpler errors"
<wei2912>	lol
<merijn>	to be fair, overly polymorphic functions can lead to scary errors
<wei2912>	functions are functors? ahhhhhhhhhh
<merijn>	wei2912: and know there's too much inertia to change
<wei2912>	merijn: well, haskell already spits out errors that cause brain trauma
<merijn>	wei2912: "(r ->)" is a functor, yes
<merijn>	wei2912: tbh i would say haskell has some of the better compiler errors
<pyon>	merijn: "knows how to /whois" --> i meant, more like, what university? but never mind.
<dreams_>	pyon: universiteit van amsterdam
<wei2912>	pyon: let me comprehend what you wrote after i finish the article
<merijn>	wei2912: the only downside, from a beginner perspective, is that haskell's errors use rather formal language
<wei2912>	yeh
<merijn>	but once you learn the jargon they provide a high info to error density
<merijn>	unlike, say, c++ template errors
<pyon>	well, c++ is severely hampered by the fact templates are duck-typed.
<pyon>	not really the fault of implementors. the language they have to work with already sucks. :-|
<wei2912>	so applicative is just a way to use a function in a context on a value in the same context? :p
<myrl-chan>	ah, cool.
<doomlord>	i like the fact they're duck typed, imo when it gets concepts it wil be the best of both worlds
<myrl-chan>	i was able to do the first exercise in you could have invented monads.
<pyon>	doomlord: dunno, when using boost, it's really a pain
<pyon>	doomlord: and when not using boost, it's also a pain, because of the lack of abstraction.
<wei2912>	pyon: i get what you're talking about now
<pyon>	wei2912: :-)
<doomlord>	perhaps thats' a symptom of another problem - boost being complex workarounds for other language ommisions (like adts.)
<pyon>	wei2912: well, what you said covers "(<*>)", but "pure" is easier to understand.
<myrl-chan>	oh cool.
<myrl-chan>	tuples in haskell aren't infinite.
<wei2912>	(* 3) <$> pure 2000
<myrl-chan>	you can have at most 23 elements in a tuple.
<pyon>	myrl-chan: why would anyone want such gigantic tuples?
<wei2912>	lol
<wei2912>	who knows
<merijn>	wei2912: yes, that plus the ability to lift arbitrary "pure" values into some context
<myrl-chan>	pyon: i was checking it out because i learned that (,) is a function.
<pyon>	myrl-chan: with -xtuplesections, yes.
<merijn>	haskell tuples are guaranteed to work up to something like 27, i think. ghc caps them at 63
<myrl-chan>	merijn: '(,,,,,,,,,,,,,,,,,,,,,) :: a -> b -> c -> d -> e -> f -> g -> h -> i -> j -> k -> l -> m -> n -> o -> p -> q -> r -> s -> t -> u -> v -> (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v)'
<merijn>	there's a file filled with 63 tuple definitions and a comment that anyone wanting more than 63 elements can go suck it :p
<ninjapenguin>	http://imgur.com/gallery/ru6ddbj
<merijn>	pyon: no, (,) is always a function
<wei2912>	myrl-chan: argh
<myrl-chan>	that's from hugs. ghci outputted the same thing, except with newlines.
<merijn>	pyon: you need tuplesections only for fancy shit like "(2,,3) 'a'" ->
<merijn>	(2, 'a', 3)
<pyon>	merijn: oh, i thought (,) wasn't always available.
<pyon>	and had to be explicitly enabled.
<merijn>	nope, that always works, like other operators
<wei2912>	dreams_: that article you posted is extremely clear
<pyon>	merijn: then why can't i do "foo = a, b", just like in ocaml?
<pyon>	(well, in ocaml it would be preceded by a "let".)
<merijn>	because tuples, like list syntax are hardcoded sugar instead of normal constructors
<pyon>	ah.
<merijn>	and the report defines them as needing parentheses
<merijn>	, is a reserved character and wouldn't be legal as a constructor name normally
<merijn>	anyway, i'm done grading homework, time to go home!
<myrl-chan>	wei2912: i like adit.io for the most part, until we have monads that holds functions. the box analogy seems to only work for values.
<wei2912>	myrl-chan: you can hold functions in boxes too
<wei2912>	well, sort of
<myrl-chan>	wei2912: yes.
<pyon>	myrl-chan: "only work for values" --> functions are regular values.
<myrl-chan>	pyon: tru.
<dearhawk>	myrl-chan: show your hands. this is a real robbery, i'm not kidding. give me your horse.
<wei2912>	https://imgur.com/a/uatkq -- math & physics puns
<myrl-chan>	,,,
<pyon>	wei2912: lol @ "the trivial case"
<paxcoder>	wei2912, i liked them
<rindolf>	wei2912: i didn't like them too much.
<wei2912>	rindolf: heh
<dearhawk>	they misspelled taylor d:
<wei2912>	paxcoder: pyon same here
<rindolf>	wei2912: but thanks for sharing anyway. :-)
<wei2912>	dearhawk: it's meant to be a pun
<patarr>	what's the technical name for a string containing protocol, host, and port? i forgot.
<patarr>	it was like url, uri, connection string, there are too damn many.
<johnpoison>	 does anybody use bazaar?
<rindolf>	johnpoison: the version control system?
<johnpoison>	rindolf: yep
<rindolf>	johnpoison: i used it a little but i'm not an expert in it. it confuses me.
<rindolf>	johnpoison: do you have a specific question?
<johnpoison>	rindolf: same here. it did something strange. i use git mostly. i tried to do something like git pull (update my branch with changes that i did on other pc), but bazaar said my branch is diverged. so i did bzr merge with parent branch, then commited, then did a merge with my remote branch, then commited. then i pushed all changes. before any merges my last revision was 1815, after all merges and push my last revision is the same 1815, but with
<johnpoison>	how's that possible that revision commit message has been changed?
<password2>	hiya
<shaneolondo>	anyone here is an expert on jasperreports or can direct me to a irc channel where i can get support
<johnpoison>	rindolf: http://pastebin.com/w4weaavp my bash history. my branch https://code.launchpad.net/~ivanfateev/pantheon-files/fix-1380139 . any idea?
<gedamo>	shaneolondo: there's a #jasperreports but only 6 people in it
<rindolf>	johnpoison: sorry - no.
<myrl-chan>	er...
<myrl-chan>	`liftm g >=> liftm f` == liftm (g . f)?
<shaneolondo>	gedamo: saw that one. no activity is there.
<shaneolondo>	gedamo: i will jus ask my question here
<myrl-chan>	hmm...
<myrl-chan>	wait, this doesn't seem to be liftm.
<myrl-chan>	it seems to be `lift :: (a -> b) -> a -> m b` or something like that.
<myrl-chan>	`lift f x = (f x,"")`
<myrl-chan>	let's assume the tuple is a monad.
<myrl-chan>	pyon: halp?
<wei2912>	myrl-chan: hmm?
<myrl-chan>	wei2912: in "you could have invented monads" i think `lift :: (a -> b) -> a -> m b`.
<shaneolondo>	how do you prevent line break in text that have special characters in jasperreports. for eg. i know about the non-breaking hypen and space, but i would like to do the same for a block of text.
<aidanh>	wei2912: those are pretty lame
<shaneolondo>	  "d.o.b" gets broken at the period symbol some times. i don't know of a non-breaking period
<wei2912>	aidanh: well, what did you expect? :p
<aidanh>	wei2912: not much, so i liked them :)
<wei2912>	aidanh: heh
<wei2912>	there's the groan factor in them
<johnpoison>	rindolf: lol. there's something like http://zyga.github.io/git-lp/
<myrl-chan>	also.
<rindolf>	johnpoison: git-launchpad?
<myrl-chan>	`random` looks like something you can fit in a state monad./
<veiledspectre>	hey everyone, question, is <> a short hand for logical negation?
<veiledspectre>	im used to !
<rindolf>	veiledspectre: <> is not-equal.
<johnpoison>	rindolf: something like proxy between git and lp repo
<rindolf>	veiledspectre: at least in many languages.
<myrl-chan>	veiledspectre: what rindolf said.
<veiledspectre>	ah ok
<rindolf>	veiledspectre: in which language though?
<rindolf>	johnpoison: ah, i see.
<veiledspectre>	no language - its in a piece of documentation.... they say that if the return value is some_silly_macro it means ok, and if <> some_silly_macro its not ok... so i guess they mean that if the return value isnt exactly equal... then something went wrong... but i just wanted to make sure
<sphinxo>	should i use gsettings or just a flat file to store settings for my terminal emulator?
<rindolf>	sphinxo: is it a gtk+ program?
<sphinxo>	yes rindolf
<rindolf>	sphinxo: then you should preferably use gsettings.
<sphinxo>	i'm thinking about not using gsettings because the actual settings would be configured outside the program
<myrl-chan>	hmmm
<sphinxo>	and i'm trying to make it as minimalist as possible
<sphinxo>	which means i probably don't want to include some kinda of settings page
<myrl-chan>	liftm == fmap?
<champloo>	can an anonymou function be recursive?
<dreams_>	champloo: how would it be recursive when there is no name to refer to? the body can be of course.
<champloo>	dreams_: i was imagining through some kind of keyword
<mike802>	why would you want it to be annoymous
<champloo>	mike802: convenient for the actions i want it to perform
<myrl-chan>	in racket, it's possible.
<myrl-chan>	i think.
<myrl-chan>	well, depends on what you consider as an anonymous function, iirc.
<champloo>	myrl-chan: stackoverflow says i can give it a name to call within itself but i guess it's not really annonymous just a local function at that point. in javascript i mean
<rindolf>	champloo: there is also the y combinator.
<myrl-chan>	champloo: mhm.
<rindolf>	perl_startup is bouncing.
<rindolf>	amigojapan: hi! are you there?
<amigojapan>	hi rindolf , a little busy
<rindolf>	amigojapan: oh.
<rindolf>	amigojapan: good luck!
<amigojapan>	ty rindolf
<myrl-chan>	i should make a parenthesis language.
<tsousa>	rindolf, i mean. a normal array that i find position using hashing
<rindolf>	tsousa: and which language are you talking about?
<myrl-chan>	gedamo: what do you mean?
<tsousa>	rindolf, c
<rindolf>	tsousa: hmmm...
<rindolf>	tsousa: ah.
<gedamo>	myrl-chan: () {} [] «»
<gedamo>	《》
<rindolf>	||
<myrl-chan>	gedamo: i might use the first 3.
<myrl-chan>	gedamo: (), [], {}, in that order.
<tsousa>	rindolf, do you know the answer?
<rindolf>	tsousa: can't the array be malloc()ed and realloc()ed?
<myrl-chan>	gedamo: i'll be using () for main things, [], probably for things that aren't function calls. {} might be used for functions.
<tsousa>	rindolf, dont know, woulnd that make troubles because of the other already insert positions?
<rindolf>	tsousa: why would it?
<rindolf>	tsousa: are you trying to implement a hash table?
<tsousa>	rindolf, like say that the hash size of 7 and then i update it to 8
<tsousa>	and 22222 % 7 gives me a position
<tsousa>	but 22222 % 8 will give me other
<tsousa>	and i lost that element
<rindolf>	tsousa: that's true.
<rindolf>	tsousa: are you worried about gaps in the vector?
<tsousa>	rindolf, no i just dont want to loss the elements that i already had and still have the performance of the hash to find elements
<tsousa>	but i guess i will have to use a simple linked list and search sequencial
<myrl-chan>	for a second there, i thought everything in haskell was a function.
<csd_>	how can i calculate the memory used by a process and all of its children?
<ori_b>	csd_: that's a pretty hard problem, and it can vary pretty wildly depending on what the process does, thanks to copy on write.
<woggle>	csd_: os? how do you want to count memory that is shared with other processes? how do you want to count memory which is logically allocated but not assigned a location in physical memory?
<csd_>	i don't want to count shared memory
<woggle>	at all?
<csd_>	or rather, i don't want to double count it
<csd_>	if memory is equal between two processes and a page changes, i want to count that one page
<woggle>	some of the memory allocated to your process and/or its children will be shared with unrelated processes on the system. how many times should it count?
<csd_>	 virtual memory
<csd_>	so is there no way to do it?
<woggle>	you haven't answered some of my questions, especially the 'os' one.
<csd_>	sorry can you clarify
<woggle>	i can't give a concrete answer about how to do some version of this without having a particular os in mind. and you have rather different sorts of solutions if you want to measure resident memory versus virtual memory.
<csd_>	oh
<csd_>	i'm interested in linux and os x. preferably both, but if not, os x
<woggle>	i have no clue what apis for this on os x are.
<csd_>	bsd? :-p
<woggle>	on linux, your big options are: (a) run the process using cgroups and read the memory accounting file for the cgroup; (b) walk /proc/<pid>/maps (virtual memory usage only; requires lots of accounting).
<ccccccccc>	when non-programmers talk about "algorithms", do they really mean "script/program with numerous rules, executed in order"?
<ccccccccc>	an algorithm really is a single expression, isn't it?
<iszak>	ccccccccc: when i talk about algorithms i think of non-ambiguous instructions that terminate.
<ccccccccc>	iszak: a single one?
<woggle>	there are also potentially solutions where you load up a kernel module to extract more information out of the linux internal memory tracking structures than is exported through user-level interfaces. (they are reasonably stable, so writing that module would not be very hard.)
<csd_>	woggle: ok let me ask you a related question
<iszak>	ccccccccc: it can be or multiple instructions
<ori_b>	ccccccccc: algorithms are a set of instructions that will terminate.
<iszak>	ori_b: cs grad?
<ori_b>	iszak: semiconductor physics grad, cs minor./
<vdamewood>	me neither, and i'm one of the os x developers in here.
<csd_>	suppose i had full control over my machine and only my process is running. therefore if i spawn a new process, i can look at how much free memory is left
<ori_b>	iszak: working as a programmer.
<ccccccccc>	hmm.
<csd_>	could i somehow use that approach?
<ccccccccc>	so an algorithm really is a program?
<iszak>	well, no
<ori_b>	ccccccccc: a program does not necessarily terminate.
<epitamizor>	like the terminator...
<ori_b>	also, a program can be thought of as a concrete instantiation of a collection of algorithms.
<iszak>	whoa there
<woggle>	csd_: oh, i forgot about /proc/<pid>/pagemap, which is actually much more useful for this, for the resident memory case.
<epitamizor>	my cpu is a learning processor, at 633mhz
<ori_b>	algorithms are concepts.
<csd_>	woggle: does resident memory mean program memory - what's in a swap file on the hd
<woggle>	csd_: resident memory means what's actually present in ram.
<ori_b>	ccccccccc: for example, 'int max(int *arr, size_t sz) { int sum = 0, i; for (i = 0; i < sz; i++) { sum += arr[i]; } }'
<ori_b>	er.
<csd_>	do you know of any program that can do this? or do i have to do this and parse for each pid?
<ori_b>	ccccccccc: for example, 'int arraysum(int *arr, size_t sz) { int sum = 0, i; for (i = 0; i < sz; i++) { sum += arr[i]; }; return sum;}'
<ori_b>	and 'def sum_of_array(list): total = 0; for e in list: total += e; return total'
<ori_b>	are different programs, but the same algorithm.
<woggle>	csd_: yes, and dedup and worry about not reading the mappings at quite the same time, etc.
<woggle>	csd_: if you can run programs under cgroups (and their accounting is enough for you wrt shared memory regions), that is a much easier approach.
<woggle>	csd_: (note that it's possible to place a bunch of processes under cgroups after starting them; the big reasons you might want to avoid this is if something else is already using cgroups for not-accounting.)
<csd_>	woggle: ok thank you
<_blizzy_>	fucking css man.
<_blizzy_>	can't horizontally align a fucking image.
<iszak>	_blizzy_: a builder does not blame his tools
<iszak>	unless it's js
<_blizzy_>	iszak, css is another example of those tools
<_blizzy_>	css is like a trick hammer
<_blizzy_>	sometimes it works, sometimes it doesn't.
<iszak>	i am pretty sure it always works, you're just holding it wrong
<_blizzy_>	well, then let me reword it.
<_blizzy_>	it's like a hammer that is supposed to work with one swing, however it requires 20 swings within a span of 20 seconds, however, you don't know this
<_blizzy_>	screw it, i'm using <center></center>
<iszak>	you are just an apprentice with a hammer
<_blizzy_>	except even experts have trouble with this hammer somtimes
<_blizzy_>	*sometimes
<_blizzy_>	maybe it's the hammer that needs fixing.
<iszak>	_blizzy_: but we can't fix the hammer, it will break backwards compatibility, here, have this experimental hammer that we will change the handling later.
<_blizzy_>	iszak, then it's not the builder's fault all the time then.
<iszak>	_blizzy_: should have chosen better tools
<_blizzy_>	iszak, like you said, it's the only tool he can get.
<iszak>	you're mincing my words
<_blizzy_>	oh.
<_blizzy_>	c:
<_blizzy_>	css is really the only option
<_blizzy_>	[insert sass, less]
<iszak>	exactly
<_blizzy_>	however, those don't fix the all the issues in css.
<iszak>	there's no pleasing some people.
<_blizzy_>	ok. c:
<iszak>	_blizzy_: https://i.imgur.com/q3cug29.gif
<_blizzy_>	iszak, yep.
<peterfa>	this is not the universe in which i wish to live: https://aphyr.com/posts/313-strong-consistency-models
<_x_c_v_b_>	iszak: so true
<peterfa>	some get the wood and the stake, and i'll get the rope. we're going to have ourselves a heretic bar-be-que tonight.
<wagonboi>	i just realized darkcthulhu... :(
<wafflejock>	o0elise0o, hard to say, brilliant but also mad
<camcam2>	i know. i think they’re equivalent questions.
<darkcthulhu>	wagonboi, there isn't recursion for one thing. you could look at some pseudo code for dfs and factor your algorithm into the recursion step and finding neighbors.
<pyon>	wafflejock: the transition to 64-bit wasn't as painful on linux, it seems to me.
<o0elise0o>	camcam2::well they can do the wireless electricity thing now with microwave beams, apparently
<darkcthulhu>	o0elise0o, it has been possible. it's simply too lossy to be cost effective.
<magnus_rm>	even straight through your brain, without too much damage (depending on the value of your brain of course)
<darkcthulhu>	this stupid cold is going to kill me :-|
<wafflejock>	pyon, yeah not sure myself was really just into windows at the time the switch was happening, before that i had only tinkered with linux but in the last few years have full switched over
<wafflejock>	fully*
<pyon>	for some weird reason, i still remember 16-bit windows with fondness.
<darkcthulhu>	lol
<pyon>	everything was terribad... but in a good way.
<darkcthulhu>	pyon, security was broken, but they didn't try to hide it. :d
<camcam2>	windows 3.1 just felt gimmicky and pointless
<pyon>	yeah!
<camcam2>	but then again, i guess i was a kid at the time and didn’t want to do anything but play dos games
<camcam2>	maybe the office applications were decent
<pyon>	""you can now safely turn off your computer"
<darkcthulhu>	ah yes! :-d
<darkcthulhu>	the orange text overlaid on a depressing black screen.
<camcam2>	as i remember it, win 3.1 just ran on top of dos, and you could quit to dos without restarting
<pyon>	camcam2: yep.
<pyon>	darkcthulhu: regarding the chocolate boxes problem, i have an unproven conjecture: assume there are exactly "n" boxes with "k" chocolates each, and no other boxes. then the first player wins iff "n" is odd.
<pyon>	darkcthulhu: for "k = 1", this is easy to prove.
<darkcthulhu>	pyon: :-o that simply?
<pyon>	no, wait.
<pyon>	darkcthulhu: as i said, it's an unproven conjecture.
<wei2912>	what's the chocolate boxes problem?
<pyon>	darkcthulhu: i didn't even gather any evidence suggesting that it might be true.
<lillian>	https://avatars2.githubusercontent.com/u/7135753?v=3&s=460 this is my picture on github and linkedin xd is it too much?
<camcam2>	is it a variaition of game of nim?
<darkcthulhu>	wei2912, https://www.talentbuddy.co/challenge/5241f84c4af0110af3830bb0
<wagonboi>	darkcthulhu: so if i implement dfs, i will need to track visited nodes right? would i do that in another n*n matrix?
<darkcthulhu>	wagonboi, don't you have just n nodes?
<pyon>	darkcthulhu: in any case, i know that [1,1] loses and [2,2] also loses.
<darkcthulhu>	wagonboi. you don't have to visit all edges. simply all nodes. so a boolean array of n should do.
<darkcthulhu>	pyon, hmm
<pyon>	darkcthulhu: actually, [n,n] loses for any n.
<pyon>	darkcthulhu: and that isn't a conjecture, that i'm sure.
<wagonboi>	ok darkcthulhu
<pyon>	darkcthulhu: with [n,n], if the first player eats k chocolates from one box, the second player eats k chocolates from the other box.
<darkcthulhu>	pyon, what if the second player chooses to eat k-1?
<darkcthulhu>	he's also playing optimally.
<pyon>	darkcthulhu: the first player turns the table by eating 1 chocolate from the same box as the second player.
<pyon>	darkcthulhu: think of [n,n] as a hot potato.
<pyon>	darkcthulhu: nobody wants to be there.
<wei2912>	pyon: what is the first player eats k-1?
<pyon>	wei2912: the second player eats k-1 from the other box.
<darkcthulhu>	pyon, ah! makes sense. there is always a way to get the game back into an n, n state and 1,1 fails.
<wei2912>	wait a moment... lol
<pyon>	darkcthulhu: it's much easier to think of it as [0,0] as the final losing state.
<wei2912>	i have a sudden idea
<pyon>	s/as the/being the/
<wei2912>	thanks for distracting me from my exams :p
<pyon>	wei2912: lol
<pyon>	darkcthulhu: so, clearly, the algorithm must begin by grouping the boxes that have the least chocolates.
<darkcthulhu>	i think it could be a dp style solution with the base case being n, n
<darkcthulhu>	hmm
<pyon>	some patterns emerge: [n,n,k] always wins.
<pyon>	i have a better conjecture than before.
<darkcthulhu>	the player playing first wins right?
<pyon>	oh, by "wins", i mean "current player wins".
<darkcthulhu>	ah
<pyon>	the game is symmetric, so wlog let's just consider the current player.
<pyon>	the current player's pov*
<darkcthulhu>	okay.
<pyon>	i have a(n i think) more useful conjecture: [n1,n1,n2,n2,n3,n3...nk,nk] always loses.
<pyon>	actually, it isn't much of a conjecture, because the strategy for winning is a straightforward generalization of the [n,n] case.
<wei2912>	what does the notation represent?
<pyon>	the second* player's* winning* strategy*
<pyon>	wei2912: it means two boxes with n1 chocolates, two boxes with n2 chocolates, two boxes with n3 chocolates, etc.
<wei2912>	pyon: what's n1, n2, n3 chocolates?
<pyon>	n1, n2, n3 are arbitrary numbers.
<wei2912>	ah, okay
<pyon>	wei2912: no matter which box the first player eats "k" chocolates from, the second player also eats "k" chocolates from its "sibling" box.
<whatwhaaat>	wei: you from mcgill?
<pyon>	err, s/k/x/
<pyon>	(changed variables, because it isn't necessarily the same "k" as in "nk".)
<darkcthulhu>	pyon, why do they have constraints on numbers like that?
<whatwhaaat>	wei2912
<pyon>	darkcthulhu: dunno, perhaps to keep the problems small?
<wei2912>	whatwhaaat: no
<whatwhaaat>	k bi
<pyon>	darkcthulhu: i think our current problem is dealing with boxes we can't "pair" with another box having the same number of chocolates.
<darkcthulhu>	pyon, hmm.. i'm still thinking about the conjecture.
<pyon>	darkcthulhu: let's assume that our lists are ordered. also, let n1 <= n2 <= n3 <= n4 ... be an infinite supply of increasingly ordered numbers.
<pyon>	the state we want to avoid landing on is [0,0,0,0...]
<darkcthulhu>	okay..
<pyon>	now, if the current state is [n1,n1,n2,n2,n3,n3...nk,nk], and we eat "k" chocolates from one of the boxes containing "ni" chocolates, then the second player also eats "k" chocolates from the *other* box containing "ni" chocolates.
<pyon>	dammit.
<pyon>	same mistake as before.
<pyon>	correction: now, if the current state is [n1,n1,n2,n2,n3,n3...nk,nk], and we eat "x" chocolates from one of the boxes containing "ni" chocolates, then the second player also eats "x" chocolates from the *other* box containing "ni" chocolates.
<pyon>	for any "1 <= i <= k".
<darkcthulhu>	hmm..
<pyon>	and the new state will also have the form [n1,n1,n2,n2...nk,nk], except that the "ni-x, ni-x" pair might have to be moved to an earlier position in the list.
<pyon>	(to keep the list sorted.)
<darkcthulhu>	yeab
<darkcthulhu>	yeah*
<pyon>	okay, so dealing with "paired boxes" is easy.
<pyon>	now we need to deal with boxes that can't be "paired" in this fashion.
<darkcthulhu>	right..  it's like a recurrence
<pyon>	for [n1,n2], the first player wins: he eats (n2-n1) chocolates from the second box.
<pyon>	reducing to a previously known case.
<pyon>	for [n1,n2,n3]... we need to think.
<pyon>	the simplest such case is [1,2,3]. it seems to me that the first player loses.
<wei2912>	writing this in haskell
<pyon>	wei2912: a naïve solution isn't difficult to write. the problem is that it won't be computationally efficient.
<wei2912>	pyon: it provides some intuition at least
<pyon>	ah, true.
<pyon>	anyway, if the starting case is [1,2,3], whatever the first player does, the possible resulting states are [1,2], [1,3], [2,3], [1,1,2], [1,1,3], [1,2,2]. all of which are winning states for the opponent.
<pyon>	darkcthulhu: but, in this case ^, the idea that "2 or more is the same" breaks". if [1,2,3] is a losing state, then [|,2,4] is a *winning* state.
<pyon>	err, actually, [1,2,4+p], for any natural p.
<darkcthulhu>	hmm
<darkcthulhu>	intuitively, it should boil down to the total number of ways in which a player can force the game to end in odd or even number of moves.
<pyon>	so "unpaired" states will force us to think.
<pyon>	yep.
<pyon>	i think the key to dealing with unpaired states is the differences between consecutive numbers.
<pyon>	in [1,2,3], the differences are [1,1].
<pyon>	in [1,2,4+p], the differences are [1,2+p].
<nso95>	today was my last computer organization lecture, and i feel like i still know virtually nothing about the inner working of hardware.
<darkcthulhu>	pyon, i feel like this analysis is more complicated than it needs to be
<pyon>	perhaps!
<pyon>	i just suck at this kind of thing!
<pyon>	discrete math - not pyon's forte!
<nso95>	pyon: gasp
<darkcthulhu>	but the insights into configurations that guarantee victory or loss should be useful!
<peterfa>	i have this in web.xml and it always errors in tomcat: <url-pattern>helloworld</url-pattern>
<peterfa>	i can't see why.
<peterfa>	aren't i allowed to use exact matches?
<wei2912>	how could i write a function that returns all possible lists when any element is removed from that list?
<wei2912>	eg. [1, 2, 3] -> [1, 2], [2, 3], [1, 3]
<wei2912>	eg. [1, 2, 3] -> [[1, 2], [2, 3], [1, 3]]
<darkcthulhu>	wei2912, combinations?
<darkcthulhu>	of size 2
<wei2912>	darkcthulhu: good idea, thanks
<darkcthulhu>	pyon, how about coming up with a rule based on the oddness or evenness of boxes and chocolates within them?
<pyon>	darkcthulhu: let me see.
<pyon>	darkcthulhu: what worries me is the case when there are multiple odd amounts of boxes with the same number of chocolates within them.
<pyon>	and, sorry, i couldn't find a less weird way to phrase it.
<darkcthulhu>	, i understand how that could be bad.
<darkcthulhu>	1 box, 1 chocolate - win
<darkcthulhu>	1 box, 2 chocolates - win
<darkcthulhu>	2 box, 2 chocolates - lose
<darkcthulhu>	err.. sorry. think typing :-|
<darkcthulhu>	1 box with any number of chocolates is my base case. if either player can get there, they win. now, how do i solve a bigger problem?
<wei2912>	throw in a second box
<wei2912>	:p
<darkcthulhu>	second box, if it has more than 1 element, i win.
<darkcthulhu>	if it has one, i lose.
<darkcthulhu>	is there any other case?
<pyon>	darkcthulhu: you're assuming that the first box has 1 element, right?
<pyon>	because [2,2] most certainly doesn't win.
<darkcthulhu>	crap.
<darkcthulhu>	yeah
<darkcthulhu>	if both have > 1 element, i lose. if one of them has 1 element, and the other has more, i can force a win.
<darkcthulhu>	if both have 1 element, i lose as well.
<pyon>	[2,2] loses. but [2,3] and [2,4] win.
<darkcthulhu>	wait.. 2,2
<darkcthulhu>	argh
<pyon>	the first complex case, it seems to me, is 3 boxes with different numbers of chocolates. let's call them a < b < c.
<pyon>	[1,2,3] loses, but otherwise [1,2,c] wins.
<pyon>	[1,3,c] also wins.
<pyon>	what happens if [1,4,c]? dunno
<darkcthulhu>	yeah. i need paper to work this out.
<pyon>	i'm sure that solving this case will lead us to a more general insight.
<pyon>	well... s/i'm sure/i hope/
<darkcthulhu>	hmm.. i'll brb after dinner. the solution doesn't seem too far.
<pyon>	okay. :-)
<pyon>	bon appétit.
<kino`>	french language spotted
<kino`>	i knew something was odd.
<pyon>	kino`: i wish i knew what the english equivalent of "bon appétit" is.
<kino`>	hmm
<kino`>	let me see.
<kino`>	enjoy your meal?
<pyon>	i used to say "enjoy", but it doesn't seam quite accurate.
<darkcthulhu>	how can one player force the game to reach a 1,x stage, which is the precursor to winning?
<pyon>	seem*
<darkcthulhu>	*when can
<darkcthulhu>	pyon, do you see my line of reasoning?
<pyon>	mmm...
<pyon>	i don't.
<pyon>	please elaborate.
<pyon>	conjecture: in the "[1,b,c]" case, where "1 < b < c", the first player loses iff "b" is even and "c = b + 1". i proved it for "b = 2" and "b = 4".
<darkcthulhu>	a minute. finally, i'm at the whiteboard. let me try this out :)
<pyon>	okay!
<pyon>	also proven: [2,4,6] is the minimum case of the form [2,b,c], where "2 < b < c".
<pyon>	where the current player loses.
<pyon>	(is it a coincidence that [2,4,6] is a multiple of [1,2,3] ?)
<kino`>	pyon: i guess english-spekaing people don't have a "bon appétit".
<pyon>	kino`: heh.
<darkcthulhu>	pyon, (2, x), always loses?
<groidkiller6000>	who wants to make a racist program?
<angleton>	no.
<pyon>	dangit, connection issues.
<pyon>	darkcthulhu: did you say anything after kino` told me "english-speaking people don't have a 'bon appétit'"?
<kino`>	<darkcthulhu> pyon, (2, x), always loses?
<darkcthulhu>	pyon, yes. that
<pyon>	ah.
<nestharus>	hey all, i'm stumped on a data structure problem : )
<pyon>	darkcthulhu: [2,2] loses. [2,x] otherwise wins.
<pyon>	for two boxes, the problem is already solved.
<nestharus>	suppose i have some origin. i have rings around that origin where every element on a ring is at equal distance away from that origin. however, the distance between two elements on a ring is not 0.
<pyon>	[n,n] loses, anything else wins.
<darkcthulhu>	pyon, 2,3 wins how?
<pyon>	darkcthulhu: eat 1 chocolate from the box with 3.
<wei2912>	pucilowski: with the exception of 1, 1, i believe
<wei2912>	err, pyon
<wei2912>	wait a moment...
<pyon>	wei2912: [1,1] loses too.
<nestharus>	now, naturally, i want to organize this into a vector or something with a sort of recursive structure. however, if i were to remove the root, i'd have to shift all of the elements down by 1, which sucks. is there any way to get like a relative structure? a sortedmap won't work.
<darkcthulhu>	pyon, oh..
<darkcthulhu>	yeah
<darkcthulhu>	my mistake. :-|
<wei2912>	pyon: whoops, yeh it does
<nestharus>	and i'd love to be able to look a ring up in o(1) given a distance from the origin.
<pyon>	the losing state [0,0] belongs to the class [n,n]. and, once you're in the class [n,n], no matter how you deviate from it, the opponent can push you back to it.
<pyon>	and this generalizes to [n1,n1,n2,n2,n3,n3...nk,nk].
<groidkiller6000>	what is a great way to make a program that spams the word nigger?
<pyon>	nestharus: "if i were to remove the root" --> what root?
<_blizzy_>	hmm.
<darkcthulhu>	pyon, for (n, k) either opponent will try to avoid a state of (min(n, k), min(n, k))
<nestharus>	pyon: the center of the circle
<pyon>	groidkiller6000: how about you ask elsewhere? racism isn't tolerated here.
<nestharus>	which would require that i move all the rings in towards the center to get a new center.
<_blizzy_>	go heroku go.
<pyon>	darkcthulhu: yep.
<nestharus>	i'm trying to implement a circle data structure where i can access a ring on it in o(1).
<pyon>	darkcthulhu: and the only way to avoid it is to push your opponent into it.
<groidkiller6000>	racism is cool and we must protect it because free speech you dirty commie
<wei2912>	groidkiller6000: improve your trolling skills
<groidkiller6000>	i'm not trolling you fucking nigger lover
<_blizzy_>	0/10 git gud
<groidkiller6000>	i am doing what i can to help the ku klux klan in their fight against the terrorist organization anonymous
<_blizzy_>	ofc he leaves.
<wei2912>	lol
<darkcthulhu>	pyon, so for any (n, k) where k != n, you win.
<pyon>	darkcthulhu: yep.
<_blizzy_>	trying to deploy an app, getting errors
<_blizzy_>	time to play guess and check.
<groidkiller6000>	we haven't had as many chimpouts under a single president as we did with barack onigger
<nestharus>	so if you had to implement a circle with rings as a data structure, how would you do it? it should have o(1) access to a given ring from the origin and it should have the capability to remove any element. also, the elements on the rings aren't guaranteed to be comparable. everything is only comparable to the origin. what is also true is that elements in outer rings "may" be able to compare to elements on rings closer to the circle. for any given e
<pyon>	nestharus: what exactly do you intend to store, for each circle?
<nestharus>	comparables
<nestharus>	in exactly the manner i mentioned : )
<nestharus>	well, really, they are fuzzies.
<erste>	hi, are there pos printers that doesn't require a pc to run with?, like, is there anyone that can be connected with a mobile device?
<pyon>	nestharus: fuzzies? please either stick to standard terminology or define your custom terminology. :-|
<nestharus>	fuzzy logic
<pyon>	what exactly is a "fuzzy"?
<pyon>	i know what fuzzy logic is.
<pyon>	i just don't know what a "fuzzy" (as a noun) is.
<darkcthulhu>	pyon, for a 3 pair, my goal becomes to push my opponent into 1,1,1? because that guarantees victory. right?
<darkcthulhu>	wait.. sorry. other way around.
<pyon>	darkcthulhu: you want to push him [1,2,3], me thinks.
<pyon>	him to* [1,2,3]
<nestharus>	it's an element that checks for equality against another element using fuzzy equality, that is the comparison is an approximation. it also supports comparison from a specific direction with the "canbe" method. if one fuzzy can be represented by another fuzzy, then canbe returns true in that direction. the distance from one fuzzy two another fuzzy, treating the first as the origin, is how unequal the fuzzies are. if this results in infinity, then t
<pyon>	darkcthulhu: and, if you're already *under* [1,2,3], you can push him to either [1,1] or [2,2]. (since this is about reaching a base state, i'm using analogies to well-founded orders - the player with a winning strategy always pushes *down* the opponent to a desired losing state.)
<darkcthulhu>	pyon, i see.
<darkcthulhu>	pyon, why not just have ;,
<darkcthulhu>	sorry.
<pyon>	why not just have what exactly?
<darkcthulhu>	n, n, k as a winning state.
<nestharus>	this data structure is useful for quickly looking up multi-dimensional symbols. for example, an overloaded function may be able to be represented as another overloaded function. by having the same general components and basic properties (like name and length), they will be organized into the same circle and they will relate to the origin of that circle.
<pyon>	nestharus: overloaded functions as in programming?
<nestharus>	yes
<nestharus>	that's an example of what it can be used for.
<pyon>	i have no idea why you're linking this to geometry.
<nestharus>	i'm just showing you what the data structure physically looks like.
<pyon>	nestharus: i'd much rather you say exactly what you want to represent logically.
<wei2912>	pyon: i think i'm getting to a solution for distinct number of chocolates.
<pyon>	wei2912: share! (when you're done.)
<nestharus>	that's the best way i could explain it sadly because i'm unsure of how to represent it in a programmatic manner at the moment, which is why i'm asking.
<pyon>	nestharus: well, don't formulate it in imperative terms.
<nestharus>	the simplest implementation would be a linked list where the first element of the linked list is the origin. every element would in turn have its own linked list. as you go to the next element, you go out a distance of x. the linked list would be sorted by the distance of the elements from the origin.
<pyon>	nestharus: just formulate a bunch of axioms.
<nestharus>	however, i would like to get to a given distance from the origin in o(1).
<pyon>	nestharus: if you have no idea what kind of axioms you want to postulate (and guarantee your program satisfies), i'm afraid you can't be helped.
<pyon>	nestharus: forget about data structures.
<nestharus>	and i would like to remove elements in better time than o(n)
<pyon>	nestharus: we can only discuss data structures when we understand the problem well, dammit.
<nestharus>	i understand the problem well : (
<nestharus>	if you want axioms, i can give them to you.
<pyon>	go ahead.
<darkcthulhu>	pyon, i see why you said 1,2,3. what if we computed the difference between the elements in our tuple and 1,2,3. would that give us the answer?
<nestharus>	for any element within this collection, its children shall be able to be represented by that element.
<darkcthulhu>	some clue rather.
<pyon>	darkcthulhu: some clue, perhaps. not the final answer, necessarily.
<nestharus>	for any child, its position relative to its parent is the distance between it and the parent.
<nestharus>	for any position a distance away from an element, there shall be several elements at that distance.
<nestharus>	or there can be*
<nestharus>	>.>
<nestharus>	for any two elements, if those two elements are the same distance away from a given element that can represent them and one of the two elements can represent the other, then that element shall be a parent of the other element.
<pyon>	nestharus: "its children shall be represented by that element" --> if all children have the same representation, doesn't this make all children equal? might as well just store only one copy, and then the number of times you want it repeated.
<nestharus>	being able to be represented is only part of the puzzle. there is distance inside of equality.
<darkcthulhu>	pyon, you can only arrive at 1,2,3 from 1,2,4 right?
<nestharus>	everything underneath the origin is indeed equal to the origin, but these things aren't equal to each other.
<pyon>	darkcthulhu: from either 1,2,4+p or 1,3,c.
<nestharus>	if all children have the same representation, these children aren't necessarily equal to each other, only to that representation.
<nestharus>	if you think of it like a class with several subclasses, those subclasses can all be represented by that class, but they can't represent each other.
<nestharus>	it's the same deal
<pyon>	nestharus: when i say "axiom", i expect either a formal logical proposition, or something straightforwardly translatable to formal logic.
<pyon>	nestharus: also, when you use the term "class", that tells me nothing, because no two languages agree on the semantics of classes.
<darkcthulhu>	pyon, in order to simplify the problem, i am thinking of assuming that they can only subtract one or two. does this change the meaning?
<nestharus>	like a c++ class
<darkcthulhu>	err.. nvm
<pyon>	darkcthulhu: it changes the game drastically.
<darkcthulhu>	yeah.
<groidkiller6000>	you guys are pussies and nigger loving terrorists and are the reason chimpouts occur
<pyon>	_w_: jrslepak: you guys there?
<nestharus>	pyon: simply put, i want to implement a circle as a data structure and i want to implement it well.
<pyon>	_w_: jrslepak: hate to put it this way, but do your job.
<nestharus>	if you can point me in th eright direction to implementing a circle as a data structure, that'll be a great start.
<nestharus>	because i can't figure out how to organize the rings in such a way that they are always relative to the origin no matter how that origin changes. like a resizing circle.
<pyon>	nestharus: representing a circle only needs two pieces of data: (1) the origin, (2) the radius.
<nestharus>	a circle with rings that can house elements..
<nestharus>	d:
<pyon>	nestharus: since you're talking about something more complicated, presumably you want something more than just representing circles.
<nestharus>	haha
<pyon>	nestharus: i don't see what's funny. if we can't communicate precisely, we can't go too far.
<nestharus>	pyon: http://i.huffpost.com/gen/1222960/images/o-tree-rings-facebook.jpg
<pyon>	nestharus: ok, what about that?
<nestharus>	that's what i want
<darkcthulhu>	pyon, if i add one chocolate to any box from a state that player 1 loses, does that make player 1 win?
<pyon>	nestharus: the picture? right click on it, "save image as...".
<darkcthulhu>	it does right?
<pyon>	darkcthulhu: yes.
<darkcthulhu>	because i can cause the same state to the other player.
<nestharus>	pyon: a data structure that represents that picture
<pyon>	darkcthulhu: because all player 1 has to do is eat that single chocolate.
<nestharus>	yes, i can use a tree, but...
<pyon>	nestharus: file formats are data structures. how about using jpeg to represent it?
<nestharus>	i can't access a level of the tree in o(1)
<nestharus>	pyon: think of a general tree data structure man, with levels. if you are on level 2, that is 2 away from the root of the tree.
<nestharus>	it is true that every element at a given level is at the same distance away from the root as every other element on that level.
<pyon>	nestharus: ok, so you could have a list of circles, sorted by radius. [not necessarily a list data structure, but it has to be conceptually a list - e.g., using a search tree data structure.]
<nestharus>	however, a general tree won't work for this specific problem because all elements are actually children of the root, just organized into different levels.
<nestharus>	arr[0] = root
<nestharus>	arr[1] = list1 (1 distance away)
<nestharus>	arr[2] = list2 (2 distance away)
<nestharus>	arr[3] = list3 (3 distance away)
<nestharus>	i want to get all elements 2 distance away from the root, i read arr[2]
<nestharus>	an element belongs to list2 will then have it's own array of lists
<nestharus>	every element underneath the root can be represented by that root, so if i take an element from list2, it is a root of its own structure where it can represent all elements in that structure.
<nestharus>	all elements within that structure would be 2 away from the main root
<nestharus>	but they'd also be a certain distance away from that list2 element root
<nestharus>	now, if i remove the root, what happens?
<nestharus>	i have to shift the elements of the array around : |
<wei2912>	pyon: the last part is a bit tough... :p
<nestharus>	for one, the root is the only element that can represent everything, so i'd have to break the structure up.
<pyon>	wei2912: last part of what exactly?
<nestharus>	the new roots of the new strucutures would be from list1 and i would add list2+ to those new structures.
<nestharus>	so removing the root is a complex and nasty operation.
<wei2912>	pyon: a bit hard to describe now
<pyon>	heh.
<nestharus>	if the root happens to belong to another structure of the same format, then those elements need to be added to the list that the root belonged to.
<nestharus>	if i add a new element, then it may be that several elements can be represented by it at a distance away from the root.
<nestharus>	so i have to compose a new structure from all of them.
<nestharus>	what's outside of the highest root is a forest of these structures that have no root at all.
<nestharus>	it's called a fuzzy forest : )
<nestharus>	and these structures are called fuzzy trees
<pyon>	nestharus: ok, so it sounds like you want to bootstrap a data structure with nested layers [not talking about the rings, a system of rings around a root constitutes a single layer].
<nestharus>	ok
<nestharus>	the one thing i really don't want is shifting the array elements down when i remove the root
<pyon>	nestharus: this isn't a terribly big deal. but it would help a lot if you described precisely what you need to do with this data structure.
<nestharus>	well, actually, i wouldn't shift them down o-o
<nestharus>	i think i figured it out, i don't think i'd shift anything down, i'd have to decompose it into several fuzzy trees no mater what
<nestharus>	d:
<nestharus>	and when i add a new root, i have to compose a new fuzzy tree
<nestharus>	the next problem is holes
<pyon>	nestharus: data structural bootstrapping is all about treating a whole layer [in this case, of rings] as a child of an element of an upper layer.
<nestharus>	arr[0] ... arr[5] arr[6] ... arr[9] ... arr[11] arr[12]
<nestharus>	yesa
<darkcthulhu>	pyon, still don't see optimal substructure :-| i'm going to give this another shot later.
<nestharus>	i got that, how do i deal with 'dem holes and maintain o(1)?
<pyon>	darkcthulhu: okay. :-)
<pyon>	nestharus: well, so don't use an array?
<pyon>	nestharus: you could use, say, ropes.
<pyon>	ropes are typically used for string manipulation, but they seem perfect for your current problem as well.
<wei2912>	pyon: did you manage to make an observation about [k, k, k...]?
<nestharus>	so just a bst
<wei2912>	darkcthulhu: ^^
<_blizzy_>	i feel like i'm getting laughed at
<_blizzy_>	in other channels
<_blizzy_>	because of my level of knowledge c:
<pyon>	wei2912: [k,k,k...] wins if the number of boxes is odd.
<pyon>	wei2912: just eat an entire single box.
<wei2912>	thanks.
<pyon>	it's a special case of what i said about [n1,n1,n2,n2...nk,nk].
<pyon>	where n1 = n2 = nk.
<wei2912>	pyon: what if it's even?
<pyon>	wei2912: loses.
<nestharus>	i guess i could use an avl tree
<wei2912>	okay.
<pyon>	actually, the even result is the special case of what i said.
<nestharus>	er no
<nestharus>	nvm i can't haha
<darkcthulhu>	wei2912, it's harder to see the structure with varying indices. i think a tiny brute forcer may help see the pattern for small numbers.
<nestharus>	or i can.. it'd just be... the distance calculation is very nasty
<darkcthulhu>	easier than trying to reason about it :-p
<wei2912>	pyon: and what did you say about [n1, n2...]? :p
<wei2912>	pyon: wasn't paying attention
<pyon>	wei2912: note that each ni appears twice.
<wei2912>	pyon: oh, i see
<pyon>	wei2912: [n1,n1,n2,n2,n3,n3...nk,nk] loses.
<pyon>	if the first player eats "x" chocolates from one of the boxes with "ni" chocolates, then the second player eats "x" chocolates from the other box with "ni" chocolates.
<pyon>	and the first player is back to a state of the form [n1,n1,n2,n2...nk,nk].
<_anj7_>	hehe
<_anj7_>	i'm on the top of the list xd
<pyon>	_anj7_: [spoiler] appears above you in my client.
<_anj7_>	pyon: but in my client i'm the first
<_blizzy_>	for now
<pyon>	_anj7_: then your client is wrong.
<_anj7_>	pyon: it all depends upon preference of the client
<_anj7_>	pyon: i use hexchat
<anj7>	i prefer this
<neochronomo>	does anyone mind if i ask for help with a puzzle here? the part i'm stuck on involves ascii
<neochronomo>	i'm asking to ask because it may not be exactly on-topic despite involving ascii
<pyon>	...
<pyon>	just ask.
<neochronomo>	i just didn't want to ask and be pummeled because it wasn't about programming technically haha. but anyway...
<pyon>	pls, this channel goes off-topic more often than it stays on-topic
<neochronomo>	this is the puzzle... i've solved the first part as seen with the words on the right, but the next part is figuring out the "[ascii]" part... i can't figure out any way to get ascii code out of it: http://i.snag.gy/jkxpr.jpg
<neochronomo>	the boxed and non-boxed things i'm guessing are for the morse code, and i'm guessing that the color and shape of the circles/ovals are for the ascii part
<wei2912>	my brain hurts
<neochronomo>	i did a little sleuthing and figured out that the boxes/nonboxes with the purple pieces can spell out red using morse code
<pyon>	neochronomo: dunno, can't help, perhapss someone else
<pyon>	wei2912: mine doesn't - i've switched to a less demanding activity long ago
<neochronomo>	well, if you isolate each color, you can see how i got the words... cure can be spelled with the red pieces when going right to left, orange spells scurvy, and so on. if you do that you come up with green [ascii] and purple [morse].
<_blizzy_>	i wonder how many african american programmers are in here.
<stryyker>	are you asking about black americans or are white africans now in usa acceptable?
<_blizzy_>	black
<neochronomo>	white egyptians are african americans
<_blizzy_>	oh, then i mean black
<neochronomo>	sorry, american egyptians
<_blizzy_>	c:
<kino`>	fuck me
<kino`>	i've waited too long to watch ms's keynote
<kino`>	and now the stream is gone
<neochronomo>	kino`: they should all be somewhere
<stryyker>	they will put a recording online eventually.
<kino`>	yeah, it's not up yet.
<neochronomo>	the hololens demo was excellent..
<neochronomo>	be sure to see that
<neochronomo>	it's fucking amazing
<kino`>	will do!
<stryyker>	during such events they have lots of videos to process so it can take a little while based on teched etc. from last year.
<_blizzy_>	i'm tired. it's 1 am.
<neochronomo>	literally mind blowing.. like.. you probably think i'm joking and exaggerating, but no... holy shit... truly amazing
<_blizzy_>	but programming is fun.
<kino`>	oh wait, i found the day 2 stream somewhat
<kino`>	okay, well see you in one hour and something
<neochronomo>	bai haha
<_blizzy_>	sleeping is for the weak.
<kino`>	nah dude
<kino`>	sleeping is problem solving
<wei2912>	pyon: finally proved the case for distinct boxes.
<wei2912>	distinct number of chocolates*
<wei2912>	pyon: darkcthulhu: http://pastebin.com/spu27var -- there're probably some errors in it.
<pyon>	wei2912: checking.
<wei2912>	pyon: darkcthulhu l50: #4a -> #5a
<wei2912>	my guess is that #4 and #5 can be combined together to form a generalized case
<darkcthulhu>	let me see
<wei2912>	but i need to go now. bye and thanks for sharing the problem :)
<wei2912>	let me know if you manage to get a general case
<pyon>	l38 implies that, from (x, [1,2,3,4]), o wins. this is wrong.
<pyon>	x can eat all 4 chocolates in the last box, resulting in (o, [1,2,3]), where x wins.
<darkcthulhu>	hmm
<pyon>	either that or i'm badly misunderstanding.
<pyon>	but (x, [1,2,3,4]) has k = 4, which is even.
<darkcthulhu>	i've given up for the night. i don't feel well. going to start afresh after a few hours of sleep.
<pyon>	good night. :-)
<darkcthulhu>	bye :)
<kino`>	>we should have called it "window 8"
<kino`>	hahaha
<pyon>	kino`: where's that from?
<kino`>	microsoft's keynote
<kino`>	when they said they met bill
<eze>	is there any way to calculate the rule of three without losing precision?
<kino`>	and said that they were wanting to add back that feature of 1986, resizable stackable windows.
<kino`>	bill responded:
<kino`>	"woah! you know what would be even better? to name the producta after that feature!"
<xmppwocky>	eze: what doy ou mean
<xmppwocky>	eze: ... division by 3?
<pyon>	eze: why would calculating the rule of 3 require losing any precision?
<eze>	xmppwocky, pyon: floating point representation lose decimals
<pyon>	eze: why are you using floating points to begin with?
<eze>	xmppwocky, pyon: i am not, but i will need to
<pyon>	eze: the rule of 3 is for testing whether an *integer* is divisible by 3.
<pyon>	eze: if you use floating-points for calculations that (1) must be exact, and furthermore (2) only involve integers... then you're already doing it wrong.
<eze>	xmppwocky, pyon: i have that m usd are equivalent to n euros, how many  euros is x usd. that kind of problem i am dealing with. the money is represented in long but for the convertion a double will arise
<pyon>	eze: oh, you meant calculating proportions.
<eze>	croos multiplicatio, rule of three (not sure the english name)
<pyon>	(it isn't called "rule of 3" in english.)
<eze>	according to wikipedia it is
<eze>	http://en.wikipedia.org/wiki/cross-multiplication#rule_of_three
<pyon>	weird. i've never seen it called "rule of 3".
<eze>	but that is the issue
<cullendm>	hi! i'm having a problem with some code in vs 2013, it keeps giving me the error "cannot open mfc42d.lib". any ideas?
<eze>	any idea on how to avoid losing money in the conversion?
<stryyker>	cullendm: are you trying to link it with express edition?
<pyon>	eze: floating point multiplications and divisions in general don't lose (much) precision - they work with a fixed number of significant digits.
<xmppwocky>	if you're using floats for money you've already screwed up,
<pyon>	eze: but if you want to be sure, you can always round the intermediate results.
<cullendm>	stryyker: no, i am using 2013 ultimate.
<eze>	xmppwocky: money is in long
<pyon>	eze: or truncate, or whatever happens to be more convenient to you.
<stryyker>	cullendm: did you install mfc support? does the file exist with other libraries?
<eze>	pyon: i will have to be careful then. i was curious if there were any ingenius way to avoid the possible problem
<pyon>	mfc42d.lib -- not only are you using mfc, but a very old version of it! :-|
<pyon>	eze: just round intermediate results downwards or upwards, depending on what's more favorable to you.
<cullendm>	stryyker: yes, i did that first. i think it may have something to do with the code i'm working with. i am modifying some demos from school that were made on a previous version.
<stryyker>	cullendm: can you link to the updated mfc libs instead? (i know ms makes some changes to mfc over time)
<cullendm>	thing is, i am not exactly sure how to do that stryyker.
<eze>	pyon: thanks, i will investigate a little more on what would be the best for my scenario
<stryyker>	cullendm: find the filenames of the mfc libs your edition has. change the linker options of the project
<pyon>	eze: investigate? just round to whatever makes the other party in the transaction give you more money, or receive less money from you.
<pyon>	eze: this doesn't require "investigation", just school arithmetic.
<cullendm>	where would the linker options be?
<eze>	pyon: this are not my transactions :p
<pyon>	eze: well, whatever happens to be in the best interest of whoever is paying you.
<eze>	eze: thanks for the help
<mniip>	guys
<mniip>	i made a thing
<mniip>	https://github.com/mniip/vtshot
<cullendm>	stryyker: ^^
<stryyker>	project settings has a section called linker
<cullendm>	stryyker: what should i actually change in there?
<stryyker>	check to see what extra files are added. if you see mfc42d.lib change that to whatever version your vs has in the atlmfc directory, lib
<cullendm>	it doesn't look like any extra files are there stryyker
<stryyker>	what does it link to?
<cullendm>	what do you mean?
<stryyker>	in the link settings there is an option to show all link options/output and you can see which libs are being linked to
<stryyker>	i notice in my community install it has a number of mfc based libs. i have no idea which is the equivalent
<stryyker>	does one of the source files use #pragma to link mfc42.lib?
<cullendm>	i honestly don't even see what you are talking about.
<cullendm>	it might. lemme see.
<cullendm>	the afx header file in the external dependencies folder refers to mfc but pulls it in based on mfc_filename_ver
<cullendm>	hovering over that gives me 120, which is the correct version that i have on my computer.
<stryyker>	check source files for using the #pragma comment method of linking libraries, http://stackoverflow.com/questions/12821391/c-visual-studio-linking-using-pragma-comment shows examples
<cullendm>	found where the version was hard coded,
<stryyker>	has that fixed it?
<cullendm>	fixed that error, now i have 58 more...
<stryyker>	relating to linking the mfc library?
<cullendm>	well i think i fixed all but 5.
<cullendm>	now it is saying use /md switch for all afxdll builds
<guest75899>	hi people, how can i run an infinite thread and return control to the main thread, after the execution starts in java
<stryyker>	is it a debug build?
<cullendm>	i don't know.
<cullendm>	i am just trying to get the damned demos to work.
<stryyker>	the ui should tell you near the top when you're in the code editor. it should be able to tell you if it is 32 or 64 bit and release or debug build.
<cullendm>	ahh, i changed a setting and that fucked something.
<cullendm>	now i am back to 58 errors.
<stryyker>	i wasn't asking you to change it. i was asking what it is set to.
<cullendm>	it doesn't say.
<cullendm>	all i am getting now is that there is a mismatch between whether it is a md or mt
<cullendm>	mismatch detected for 'runtimelibrary': value 'mtd_staticdebug' doesn't match value 'mdd_dynamicdebug' in main.obj
<stryyker>	if you changed it then it must say.
<cullendm>	stryyker: that's what i am getting now.
<stryyker>	seems you're doing a debug build. are there multiple libraries being linked?
<cullendm>	there are like 80.
<cullendm>	it is using some crazy graphics library and stuff.
<stryyker>	they should all be built using the same runtime settings (static vs dynamic, debug vs release)
<kino`>	wait, when in the hololens demo?
<cullendm>	how can i change the how the specific error throwing library is built?
<kino`>	oh shit
<kino`>	paul hudak died
<kino`>	(the guy who made haskell)
<nisstyre>	kino`: one of them but yeah, sad, sounds like he was a great person
<sky_lightna>	weeellll i don't know haskell, so i'm not particularly moved
<nisstyre>	when the sussman dies i will cry
<cullendm>	stryyker: i found the library in question, how do i fix it?
<pyon>	kino`: haskell was made by a committee. (of course, paul hudak was a part of that committee.)
<kino`>	yeah, sorry for the inacurracy.
<nisstyre>	type classes were invented by phil wadler i believe
<nisstyre>	but now he would probably do it differently
<pyon>	mymind: you quat #anime, why?
<pyon>	mymind: sorry, not for you. that was for myrl-chan
<myrl-chan>	pyon: junka wants me to gtfo. ;-;
<myrl-chan>	welp.
<myrl-chan>	accidentally win-shift-c twice.
<pyon>	lol
<myrl-chan>	pyon: on another note, my dad might give me a laptop.
<pyon>	at last! :-)
<myrl-chan>	pyon: and a hard drive.
<myrl-chan>	at last indeed.
<myrl-chan>	pyon: i'm also learning some things.
<pyon>	what specifically? :-o
<myrl-chan>	at least i like to think that i'm learning some things.
<myrl-chan>	pyon: further refining my understanding of monads,.
<pyon>	:-)
<frunksock>	what is the name of problem where i have n items, each with several properties like 'hot', 'cold', 'lukewarm', and 'big', 'small', and 'green', 'blue', 'orange', and i want to say 'choose k items, get me at least one big one, at least one green one, etc ..'
<aewffwea>	frunksock: simplex?
<pyon>	frunksock: constraint satisfaction problem?
<pyon>	aewffwea: the simplex algorithm is... well... an algorithm, not a problem.
<aewffwea>	pyon: it's more than an algorithm... it's a way of life
<myrl-chan>	what's a simplex? :o
<vendu>	good morning :)
<myrl-chan>	vendu: good moanin.
<vendu>	hey myrl-chan :)
<pyon>	myrl-chan: a n-dimensional polytope with the minimum number of vertices possible. (however, the simplex algorithm really traverses an arbitrary convex polytope, not necessarily a simplex.)
<aewffwea>	myrl-chan: is something so complex... that appears to be simplex....
<pyon>	myrl-chan: triangle, tetrahedron, etc.
<pyon>	myrl-chan: err, actually, it's more like: point, line segment, triangle, tetrahedron, etc.
<frunksock>	pyon: csp looks like what i want, thanks
<myrl-chan>	pyon: doesn't that include "required to make any other n-dimensional polytope?"
<pyon>	myrl-chan: ah, yes.
<pyon>	myrl-chan: minimum number of vertices, once you have fixed the number "n" of dimensions.
<myrl-chan>	pyon: ah, cool. at least i got a proper definition now. i just say "it's a shape, which can make any other shape" lol
<pyon>	lol
<myrl-chan>	pyon: how does frunksock's prolblem relate to simplexes?
<pyon>	myrl-chan: well... it doesn't.
<kino`>	today,
<myrl-chan>	oh.
<kino`>	i install windows 10.
<kino`>	then i start haskell.
<pyon>	kino`: haskell on windows isn't terribly pleasant.
<kino`>	it isn't?
<kino`>	but my archlinux is kinda broken
<myrl-chan>	pyon: oh, sumarin kanojo-tachi updated.
<myrl-chan>	on april 23. lol
<pyon>	myrl-chan: latest chapter i read is 18.
<myrl-chan>	yeah, it's c18.
<pyon>	myrl-chan: i'm pretty sure i read it within 2 days of its release.
<myrl-chan>	pyon: i'm a week behind releases. :<
<pyon>	s/read it/you should read it/
<mniip>	myrl-chan, have you seen the new fancy thing i made
<xardov>	hey guys
<xardov>	i have a small jar file - anyone with a mac want to see if they can run it?
<xardov>	also i promise not to blow up your machine
<myrl-chan>	mniip: what would that be?
<dtcmfounder>	what's the diff betw "mount --bind origdir newdir" and making a symbolic link of origdir pointing to newdir?
<mniip>	myrl-chan, https://github.com/mniip/vtshot
<xardov>	here you go https://www.dropbox.com/s/3klzd3r5oojumxe/villagesimulation.zip?dl=0
<mniip>	dtcmfounder, one is a symbolic link, a file with a pointer in it
<mniip>	another is a mount
<dtcmfounder>	mniip: i know
<mniip>	it's like as if it was a whole filesystem, but actually in the kernel it's just a redirect
<myrl-chan>	mniip: cool. what's this for?
<mniip>	myrl-chan, description says it all
<myrl-chan>	mniip: rather, how is this useful?
<mniip>	well, if you ever need to take a screenshot of your vc or record a gif of it
<dtcmfounder>	man mount says about "--bind": "the same  contents  is  accessible  in  two places".  well, how is that different than what a symbolic link does?
<myrl-chan>	mniip: also, since it can read from fb, it's not necessarily restricted to virtual terminals, right?
<mniip>	yeah
<mniip>	i don't have any framebufferish hardware though :(
<`\\\`>	dtcmfounder, it works acrosss mount namespaces (not sure if symlink does or not)
<mniip>	dtcmfounder, symbolic link is stored on the filesystem
<mniip>	a mount is a runtime entity
<pyon>	`\\\`: your nick gets the prize for being the most cumbersome to type or even tab-complete.
<myrl-chan>	`\\\`: your name annoys me. lol.
<`\\\`>	ty
<myrl-chan>	hmmm...
<dtcmfounder>	"\<tab>": no matches.  lol
<mniip>	myrl-chan, also note the vcsa support!
<myrl-chan>	dtcmfounder: you forgot the `
<mniip>	i haven't found any software that does vcsa yet
<myrl-chan>	vcsa?
<pyon>	dtcmfounder: that is because `\\\` 's nick actually doesn't begin with \.
<mniip>	myrl-chan, man 4 vcsa
<myrl-chan>	oh cool.
<myrl-chan>	pyon: your backslash isn't in your normal keymap layer, whatever you call that?
<pyon>	myrl-chan: sadly, nope.
<mniip>	pyon, sure can
<dtcmfounder>	ok, so "mount --bind" is a runtime structure, whereas "ln -s" is written on the file system . . . i still don't get what's different when it comes to accessing files in the binded/linked dirs ... ?
<myrl-chan>	pyon: that makes me feel weird....
<mniip>	someone needs to nick to `\\\\
<pyon>	myrl-chan: when i bought my new keyboard, i didn't make sure it was a us-english one.
<myrl-chan>	pyon: programming looks like a pain with that. <.<
<pyon>	myrl-chan: and there's nothing more awkward than using a keyboard map that doesn't correspond to your actual physical keyboard.
<myrl-chan>	`\\\\\\\\\\\\\\\: go commit sudoku. :/
<`\\\\\\\\\\\\\\\>	lol
<dtcmfounder>	`\\\\\\\\\\\\\\\: heya
<myrl-chan>	pyon: that's one of the reasons why i stopped using dvorak/colemak.
<`\\\\\\\\\\\\\\\>	dtcmfounder: hi !!
<aewffwea>	pyon: i actually do that xd
<pyon>	aewffwea: good for you.
<aewffwea>	pyon: i admit though, it's weird xd
<dtcmfounder>	i thought ircd-seven only took alnum_ for nicks
<myrl-chan>	urgh
<myrl-chan>	so boaaard
<mniip>	dtcmfounder, []{}\|_-`^
<aawe>	myrl-chan: are you board?
<pyon>	myrl-chan: also, i just realized that i've been banned from ##feminism. apparently, they finally noticed that my username is "suckmy".
<mniip>	pyon, why were you even there
<myrl-chan>	pyon: ...lol...
<myrl-chan>	how would that even be...
<myrl-chan>	i'll go in there and act liek a girl. lol
<rumpledelf>	eh, everyone gets banned from that channel
<aewffwea>	actually, i am not
<aewffwea>	xd
<pyon>	myrl-chan: i haven't tried actually saying anything there - people there are really crazy.
<rumpledelf>	yet.
<dtcmfounder>	bruce jenner is the new trend
<aewffwea>	yet :/
<pyon>	myrl-chan: they make #anime regulars look like a bunch of upstanding, respectable people.
<aewffwea>	i can surely ask a question that will get me banned fairly quickly :p
<aawe>	the channel is not intended for debating, and you wonder you get banned when you enter the channel and start "bringing out your argumentative guns"
<myrl-chan>	pyon: lol
<myrl-chan>	pyon: i wonder how they'd respond if i act like some weeab.
<pyon>	myrl-chan: probably not well.
<myrl-chan>	if they ban me, then they'd be fucking hypocrites.
<myrl-chan>	:d
<pyon>	aawe: well, apparently one can also get banned for not saying anything.
<dtcmfounder>	the kardashian women turned bruce
<myrl-chan>	"trans woman exclusionary radical feminists are not welcome." is this true/
<svetlana>	what is a good simple cms? like ikiwiki, but i would like to be able to specify custom layout and custom style
<dtcmfounder>	"men are pigs.¨  --"uhu, i hear that; you go girl."
<svetlana>	myrl-chan: what you quoted sounds like a description of an annoying person
<myrl-chan>	svetlana: lol
<aewffwea>	dtcmfounder: there are also woman pigs...
<aewffwea>	dtcmfounder: how do they reproduce if not?
<pyon>	it's a contradiction in terms.
<aewffwea>	cms: complex management system?
<rumpledelf>	just use wordpress
<aewffwea>	cms: changes made simple?
<pyon>	aewffwea: supposedly "content", but "complex" sounds a lot more honest.
<pyon>	i think the simplest possible cms is just static page generators.
<aewffwea>	pyon: content minus simplicity?
<pyon>	it isn't terribly simple, but at least the complexity won't kill you.
<aewffwea>	pyon: gogo /var/www/html ?
<kino`>	okay guys i'm desperate
<kino`>	where is my usb key?
<myrl-chan>	kino`: call me.
<myrl-chan>	oh, different desperate.
<myrl-chan>	okay.
<rumpledelf>	in between your couch cushions
<pyon>	myrl-chan: lmao
<myrl-chan>	"for example: if there is a comment about the first woman cosmonaut, and there is a user who chose to comment solely on her hair, this poster is being objectively sexist."
<myrl-chan>	i can't wrap my head around that.
<myrl-chan>	how is that even..
<myrl-chan>	just forget it.
<myrl-chan>	this is harder to understand than monads.
<vendu>	myrl-chan, what's up? :p
<kino`>	rumpledelf: nice guess, but i only found two dollars.
<myrl-chan>	vendu: reading ##feminism's rules.
<rumpledelf>	kino`: buy another usb with it
<dtcmfounder>	myrl-chan: are you a male?
<vendu>	myrl-chan, :)
<myrl-chan>	dtcmfounder: pls.
<myrl-chan>	"voiced users are trusted channel regulars who are women, non-binary, or otherwise not a man™" so....
<svetlana>	could you stop quoting channel rules at me
<svetlana>	i already know them, or am enough of not a dick to not need to know them
<myrl-chan>	"not a man" and "non-binary" fucking what. lol.
<dtcmfounder>	myrl-chan: pls?  that some kind of transgender class?
<svetlana>	dtcmfounder: this chan rules quotes
<rumpledelf>	myrl-chan: i don't think you're going to last long in that channe;
<myrl-chan>	not this chan, rather, ##feminism 's.
<svetlana>	oh sod off
<myrl-chan>	rumpledelf: i'll just put this in autojoin for fun.
<dtcmfounder>	svetlana: ?
<sweet_ride>	the entire basis of ##feminism 's rules are completely sexist against men
<svetlana>	yes
<aawe>	myrl-chan: how is it hard to understand that it's sexist to focus on females looks above anything else? a goddamn cosmonaut, and you can't look past her hair or gender?
<svetlana>	that's why i am politely asking to stop posting them here
<myrl-chan>	pyon: also, that electronics lab i went to had a boobie mousepad. i can't help but be so confused.
<pyon>	:-o
<myrl-chan>	i was trying so hard not to comment on it. lol
<kino`>	what's a boobie mousepad eve like?
<myrl-chan>	nsfw. http://www.amazon.com/boobs-ergonomic-mouse-pad-anime/dp/b009kvhk8u
<kino`>	even*
<kino`>	oh, that's ergonomic
<myrl-chan>	pyon: and yes, it was anime art style.
<kino`>	haha the butt pad
<kino`>	http://www.amazon.com/akezone-anime-computer-mouse-wrist/dp/b00gwyd7f8/ref=pd_sim_sbs_op_4?ie=utf8&refrid=1f3wf8rvjjgr2xpm4544
<myrl-chan>	fucking hell. lol
<myrl-chan>	"this item is fantastic,it is very soft yet holds its firm shape,my son* loves it @_@"
<dtcmfounder>	it would be like a dude who wants to be recognized by his coding abilities, but all he gets is recognition of his buttoned shirt.
<myrl-chan>	lol what?
<kino`>	yeah, nobody likes buttons
<pyon>	myrl-chan: dahell
<dtcmfounder>	a brooks brothers button-down shirt
<pyon>	myrl-chan: i normally keep my porn *in* my computer, not next to it.
<myrl-chan>	pyon: i don't know the name of that boobie mousepad, neither am i interested in knowing it. lol
<pyon>	lol
<myrl-chan>	i should say this in ##feminism and talk about how "i'm utterly disgusted"
<pyon>	myrl-chan: lol, what for?
<myrl-chan>	pyon: i dunno. for fun.
<aawe>	myrl-chan: is there something you want to say? you seem very affected by the existence of this channel
<kino`>	i like how only you guys are talking, and you still hl everytime
<dtcmfounder>	where a symlink is a file pointing to a filesystem object, what's a hard link do?
<myrl-chan>	aawe: nothing really. i just find it pretty weird.
<aawe>	dtcmfounder: a hard link makes an additional path point to a file that already has a path
<aawe>	in the same way as files usually work
<kino`>	that holes stuff was pretty weird
<myrl-chan>	pyon: i know exactly what you mean.
<adsc>	dtcmfounder: http://www.geekride.com/hard-link-vs-soft-link/
<dtcmfounder>	adsc: thanks
<markand>	all ssl versions are deprecated ?
<dtcmfounder>	aawe: the new path point goes to the same inode?
<kino`>	okay, i know you were all worrying, but don't be anymore, my key was on the ground.
<markand>	should i only use tlsv1_method when using openssl ?
<dtcmfounder>	markand: only openssl, some versions.  but i think it has been repaired now.
<aawe>	dtcmfounder: the article adsc linked explains it very nicely
<myrl-chan>	i pressed c-x c-c with one press, accidentally. lol.
<adsc>	dtcmfounder: basically, a softlink is a whole new file, while a hardlink is just another entry in the directory structure pointing to the same file
<markand>	mmm okay
<dtcmfounder>	aawe: cool; thanks.
<myrl-chan>	i planned to press c-x o. but i accidentally put my finger in between x and c..
<dtcmfounder>	adsc: thanks
<adsc>	myrl-chan: and now the finger is stuck there?
<myrl-chan>	adsc: wat
<adsc>	myrl-chan: keyboard gaps are terrible traps
<myrl-chan>	adsc: has anyone ever trapped his fingers in a keyboard gap...?
<adsc>	myrl-chan: many have died from dehydration because their fingers were stuck in keyboard cracks over the weekend
<myrl-chan>	adsc: holy shit.
<pyon>	myrl-chan: c-x c-c and c-x o are pretty far away from each other...
<adsc>	myrl-chan: there is a monument in washington mourning the brave lost souls
<myrl-chan>	pyon: yeah, but x and c is close.
<myrl-chan>	pyon: i pressed control and placed my finger between x and c. now i know a faster way to close emacs. :p
<pyon>	ah.
<pyon>	goddammit... i spend two sleepless nights (admittedly, i wasn't sleepy anyway) studying dijkstra's guarded command language... and it turns out it doesn't support pointers. fuck!
<myrl-chan>	i think i just missed gcj again.
<pyon>	:-o
<myrl-chan>	<.<
<dtcmfounder>	"guarded" refers to?
<myrl-chan>	oh cool.
<myrl-chan>	it's still tomorrow.
<myrl-chan>	rather, 00:00 of the day after tomorrow...
<myrl-chan>	<.< >.>
<pyon>	dtcmfounder: it's a minimalistic programming language, not intended to actually be implemented, but rather to be used for calculating relations between the initial and final states of an imperative program.
<pyon>	https://en.wikipedia.org/wiki/guarded_command_language
<myrl-chan>	also
<markand>	dtcmfounder, okay
<dtcmfounder>	pyon: ah, ok
<myrl-chan>	concerning monads that holds functions, i feel like they're just way to avoid using pattern matching.
<pyon>	myrl-chan: huh?
<pyon>	myrl-chan: it still isn't clear what you mean by "monads that hold functions".
<pyon>	a monad instance exists for a type constructor. in what sense can a type constructor (or any type-level entity, for that matter) hold a runtime value?
<myrl-chan>	pyon: er, say, `newtype state s a = state { runstate :: s -> (a,s) }
<pyon>	oh, right after you quat, i posted a snippet.
<pyon>	http://ideone.com/7vhagw
<aawe>	radix sort looks so cool
<aawe>	"[...] than i care to admit" is such a stupid phrase
<aawe>	"i laughed longer than i care to admit" - what does that even mean?
<myrl-chan>	pyon: is this correct too?
<myrl-chan>	fmap f m = \s -> let (x, s') = runstate m s
<myrl-chan>	  in (f x, s')
<mniip>	i laughed a lot and i thought i should have laughed less
<aawe>	it's like a child trying his hand at grown-up english
<myrl-chan>	pyon: er, ignore the crappy indention. i'm still fixing haskell indention in vim.
<pyon>	myrl-chan: it is correct.
<aawe>	mniip: more like "i laughted but i will not admit that, except now i did"
<pyon>	myrl-chan: i don't like using projection functions that much, though. at least not in haskell.
<pyon>	because haskell records are a god-forsaken ugly hack.
<guest59022>	hi, i want to run an infnite loop but keep me gui active , how can i do that in java. using invokelater doesnt help
<myrl-chan>	pyon: projection functions?
<pyon>	myrl-chan: runstate
<mniip>	myrl-chan, newtype wrapping/unwrapping
<pyon>	mniip: not necessarily newtype wrapping/unwrapping.
<znoosey>	guest59022: threads
<mniip>	well yes
<mniip>	fst, snd
<pyon>	data person = person { name :: string, age :: int }
<pyon>	"name" and "age"
<mniip>	are 'maybe' and 'either' considered projection functions too
<guest59022>	znoosey: i have thread for running the loop, and in actionperformed i am calling that thread using invokelater, but still the gui remains unresponsive
<pyon>	no.
<pyon>	"maybe" and "either" are what coq would call "maybe_ind" and "either_ind", respectively.
<pyon>	in other words, the induction principle.
<myrl-chan>	mniip: pyon: i see.
<znoosey>	guest59022: as i have no idea what your code does i can't help you more than that
<pyon>	except in haskell you have to implement them manually.
<pyon>	(well, not you. standard library implementors.)
<guest59022>	znoosey: http://pastebin.com/bhpxpjsg here is the code.
<guest59022>	and in the thread i am running an infnite loop
<guest59022>	and in the thread i am running an infnite loop
<ams>	morning
<jeaye>	morning
<myrl-chan>	ams: yo.
<magellan>	buenos dias
<kino`>	hey, i just used dd on my usb key, how can i reformat it to its original size?
<ams>	hehe, wife is making jokes about the code i am looking at ..
<myrl-chan>	ams: what kind of jokes?
<ams>	i had a multiple-value-list and and floor, and she was like "so you are trying to take over multiple floors and achive world domination?"
<ninjapenguin>	is your wife a programmer?
<ams>	no
<ninjapenguin>	oh.
<svetlana>	kino`: use a disk format program for your platform
<kino`>	okay, thanks.
<rindolf>	hi all. how are you?
<johnpoison>	rindolf: hi, good day to you! =)
<rindolf>	johnpoison: hi, good day.
<rindolf>	johnpoison: any luck with that problem you were having?
<xeno>	meh!
<xeno>	software foundations makes me kinda question how smart i am :/ - there's a ranking of expected time spent on various difficulty of tasks, and 3 stars is "10-30 minutes", and while most takes me way below that, there are the occasional ones that just takes like hours... :/
<dtcmfounder>	so funny: "it is practically impssible to teach good programming to students that have had a prior exposure to basic: as potential programmers they are mentally mutilated beyond hope of regeneration ..."  --dijkstra
<winny>	xeno: competitive programming is a horrid benchmark, i'd suggest focusing on things you'll actually use either in interviews or for actual projects
<xeno>	winny: it's not competitive, it's pretty useful stuff... and no one are measuring the time...
<znoosey>	yes xeno, listen to winny so you can get a job before you retire!
<znoosey>	:p
<xeno>	lol
<henke37>	i started using basic and i turned out just fine
<henke37>	then again, i am self taught
<erste>	hi, when desiging the ui for a mobile app, do you use any special tools to see how it will **really** look in a phone?? i mean the dimensions etc.. anyone?
<myrl-chan>	keeping track of haskell types seems harder than keeping track of dynamically typed languages. .-.
<znoosey>	erste: i do that for web pages, i don't make native apps
<xeno>	henke37: znoosey: i do have a job, and an education and all that... software foundations is an online book/course mainly focusing on coq (a proof assistant)
<znoosey>	xeno: i know :)
<xeno>	:)
<erste>	znoosey, what do you use? any software or plugin? or a direct live preview on a real phone?
<jlebrech>	idea: a kindle as an extra monitor for the terminal (ssh into your mac)
<znoosey>	erste: chrome
<jeaye>	erste: i've worked at a pretty big mobile game studio. we tested on dozens and dozens of devices and we also at an in-house ui tool, which used our cross-platform engine, which was capable of rendering ui under differently simulated environments.
<znoosey>	erste: it lets you chose between several different devices, it is not perfect but it gives you an idea about sizes at least
<znoosey>	and you can also restrict download speed
<znoosey>	and now i have to go!
<erste>	znoosey, i see .. thnk you :d
<erste>	jeaye, would like to grab that tool :p
<xeno>	the proof i'm stuck on now is a proof that forall m, n,  m + m = n + n -> m = n :/
<rindolf>	xeno: for which numbers?
<xeno>	nat, where nat is either 0 or succ (nat)
<rindolf>	xeno: if it's integers then you can start from 0 + 0 = 0 + 0 and use induction.
<svetlana>	can't you just divide by two?
<xeno>	svetlana: i don't have division defined
<xeno>	rindolf: yeah, that's what i'm doing
<rindolf>	xeno: ah. :-)
<svetlana>	oh, okay
<xeno>	rindolf: the tricky part is that with induction, you then have to prove that m + m = n + n -> m = n  =>  (succ m) + (succ m) = (succ n) + (succ n) -> (succ m) = (succ n)
<fred-fri>	imagine a project with suboptimally written code with little to no testing. the cause is allegedly being constantly thrown new features and lack of resources to refactor and introduce tests etc. im looking for resources on how to turn projects like that around. e.g. how to introduce tdd on already existing nontested legacy code, how to get stakeholders to understand the gravity of being given time to improve the code et
<fred-fri>	c.
<rindolf>	xeno: well, since m = n then (succ m) = (succ n)
<ams>	fred-fri: you are implying that testing is what makes a project coode.
<fred-fri>	ams: if i am i dont intend to
<xeno>	rindolf: you can say that, but you need to handle both sides, and with just a handful of tools, that the proof assistant will accept
<ams>	fred-fri: and that testing will solve things.
<ams>	fred-fri: if all you want is to introduce tests, start document bug fixes as tests.
<rindolf>	xeno: ok.
<ams>	fred-fri: and the more basic functionality
<ams>	fred-fri: the hardest part tends not to be writing tests, but setting up a way of writing them.
<fred-fri>	ams: take your idea of the most suboptimal project and how it could be turned around, whether that be through testing or whatever. what would turning it around entail and are there any resources you would point to?
<fred-fri>	as in, resources explaining how to turn such projects around
<xeno>	rindolf: an example of how it looks like now (in the middle of an attempt): http://pastebin.com/qw8r4abk
<ams>	fred-fri: your question is so general it is impossibe to answer.
<net2014>	hello
<net2014>	if you design the whole software development circle, what would you call this design?
<ams>	fred-fri: it depends on the project, the state of the project, the history, if there is vc or not, how much code, how much you can freewheel and rewrite, how hard it is to test, ..
<xeno>	rindolf: the first of the subgoals is obviously true, btw, since the preconditions are false, but i need to figure out how to properly tell coq that
<ams>	net2014: manager.
<xeno>	rindolf: hmm... no wait...
<net2014>	ams: ah, yes, i suspected that this was
<net2014>	ams: thanks
<net2014>	any other ideas?
<ams>	net2014: manager.
<net2014>	thanks ams
<ams>	you're welcome.
<net2014>	i mean, ideas of other people?
<ams>	i am the only one.
<rindolf>	fred-fri: i've added some tests to codebases without adequate test coverage, but i'm not sure if i used any specific methodology - i just added tests.
<rindolf>	fred-fri: also see what i wrote here - http://blogs.perl.org/users/shlomi_fish/2013/02/essay-just-write-the-god-damn-tests-motherfucker.html
<ams>	tests hide the actual problems in some way ..
<ams>	we have test == good code is not true..
<ams>	tests allow for safe refactoring if anything, and not reintroducing new issues that have been fixed before.
<ams>	given that view on tests, it is easy to see how they should be used.
<net2014>	ams: project management, you mean?
<fred-fri>	i found this resource, looks good http://www.amazon.com/working-effectively-legacy-michael-feathers/dp/0131177052/ref=pd_sxp_f_pt
<ams>	looks boring, and irrelevant to me ..
<fred-fri>	each to his own
<ams>	working with legacy code is easy enough.  it is how much freedom you have to break things that really puts the sand in the cogs.
<ams>	speaking of legacy, "909 out of 42515 total tests failed:"
<ams>	that is a 35 year old code base :-)
<ams>	(38 to be exact ...)
<svetlana>	it is not about freedom
<svetlana>	it is about past experience programming stuff rather than just scripting it
<svetlana>	i mean it's about both, but the latter is leaving me stuck on some ... i know how to find and fix small stuff, but i end up being stuck on big stuff (be that reading or writing)
<raj>	now that youtube allows personal notes to be added to videos in a plyalist, how can i programmatically add notes to youtube videos?
<stryyker>	raj: did you check the api docs?
<vdamewood>	hi, people, etc.
<raj>	stryyker, i don't see it in there
<stryyker>	maybe it isn't possible
<xeno>	rindolf: i did solve it, but i had to cheat and look at a solution someone else did :/ - http://pastebin.com/9lxpu0wy
<xeno>	rindolf: anyway, i missed one important point, and that was that if you have  a -> b as a condition for b, then you can remove it and replace b with a in the goal
<rindolf>	vdamewood: hi, sup?
<ams>	svetlana: when working on legacy stuff i do two tings, tests, and clarify shit.
<ams>	svetlana: but it does boil down to freedom ... how much can you break?
<ams>	svetlana: breaking a pacemaker code base for refactoring .. mmm.. not sure that is a good idea.
<ams>	breaking that idiotic web app that someone wrote in ruby? who cares ..
<vdamewood>	rindolf: not much.
<ams>	svetlana: i'm also convinced most people hhave no clue what a legacy code base looks like.
<elon_musk>	it's just a bunch of functions
<myrl-chan>	uguuuu
<ams>	indeed.
<guest11916>	hi people, i want to know how can i run and stop an infinite loop , in swing without freezing the gui
<ams>	make a thread.
<guest11916>	ams: the thread gets into the infnite loop doesnot return to the constructor function
<ams>	do?
<ams>	if you want a infinite loop, you want a infinite loop.  why would it ever return to its parent?
<guest11916>	ams: i want the loop to run infnitely,but the gui should respond back as well
<ams>	yeah, so run your loop in a thread.
<nestharus>	i have a 3-way cyclical dependency between 3 data structures that i can't figure out how to get rid of.
<guest11916>	ams: http://pastebin.com/gf9b0krv this is the runner class which runs the thread, http://pastebin.com/sh1gcf4u this is the thread
<ams>	sorry, i don't do java.  a thread will run in the background of the process. why you think that a infinite looop should even return is beyond me.
<myrl-chan>	pyon: i think i'll start by making a stack-machine monad.
<myrl-chan>	pyon: to understand shit.
<lf94>	guys, what are some foss projects that really need a hand?
<myrl-chan>	lf94: why?
<ams>	lf94: inetutils.
<lf94>	because i want to help.
<jeaye>	lf94: which language(s)?
<mniip>	thumb-2 from arm
<mniip>	xd
<ams>	lf94: my ivory emulator, but it is secret,
<ams>	lf94: i need a cold world dumper thngie ... write it for me.
<myrl-chan>	lf94: floss*
<myrl-chan>	ftfy.
<lf94>	jeaye: c, python, java
<lf94>	i'm particularly good at those.
<ams>	mniip: or .. a low level debugger so one can inspect stuff and step through things.
<lf94>	oh, and php.
<myrl-chan>	lf94: let's work together if there's one with c. :d
<hotcoder>	fucking java so slow
<ams>	inetutils is c
<ams>	the ivory emulator is also c .. and some lisp.
<mniip>	ams, i was trying to make a pun
<ams>	oh, and i am also trying to migrate symbolics common lisp to ... common lisp
<myrl-chan>	mniip: holy shit.
<jeaye>	hotcoder: all you do is talk shit, every time you join. take it elsewhere.
<myrl-chan>	mniip: i just realized that.
<hotcoder>	sup jeaye how you feelin
<hotcoder>	salty?
<myrl-chan>	mniip: that's fucking nice. lol
<hotcoder>	dont get salty on me
<hotcoder>	i got enough trouble already
<mniip>	i'm not sure whether whoever came up with thumb intended the pun
<mniip>	probably did
<myrl-chan>	mniip: probably.
<puddlejumper>	java is slow when you make inefficient algorithms
<puddlejumper>	so is c and other things :p
<myrl-chan>	puddlejumper: java is slow when you use it.
<ams>	java is slow compared to ...
<lf94>	ams: checking out inetutils :)
<hotcoder>	dissin my algorithms bro
<puddlejumper>	:d
<hotcoder>	i cant even talk shit about puddlejumper
<hotcoder>	he too cute
<mniip>	lf94, any love for c++
<lf94>	hotcoder, stop being an antagonizer.
<hotcoder>	he's my little bro
<lf94>	mniip, yep!
<hotcoder>	wait wat
<puddlejumper>	i'm no ones bro
<hotcoder>	>call people cute
<hotcoder>	>call people a bro
<lf94>	mniip, i do not mind doing c++ stuff.
<hotcoder>	>say you cant diss people
<myrl-chan>	no love for c++ from me. but maybe i will soon.
<hotcoder>	>get called antagonizer
<hotcoder>	tf?
<lf94>	i just want to belong to a group.
<ams>	jeaye: lets put a fizzbuzz test for joining this channel.
<lf94>	i like that idea.
<ams>	lf94: not interested in ivory hacking?
<myrl-chan>	ams: ++
<lf94>	ams i don't know what ivory is!
<hotcoder>	puddlejumper, you're my bro
<ams>	lf94: lisp machine!
<hotcoder>	you been jumping puddles all day
<jeaye>	those poor elephants...
<puddlejumper>	ams: i did that in c when i read an article it was easy :/
<myrl-chan>	lf94: don't mind him. everyone knows my machine is better.
<myrl-chan>	jeaye: ++
<elon_musk>	python is fine
<ams>	lf94: https://www.youtube.com/watch?v=o4-ynlplgtk
<lf94>	ams how do i see a list of bugs for whichamacallit
<ams>	lf94: it is that thing =)
<puddlejumper>	ams: don't you think there should be something more challenging ?
<myrl-chan>	ams: say no to elephant poaching.
<myrl-chan>	:|
<jeaye>	eggs, on the other hand...
<vdamewood>	poached eggs taste better than poached elephants.
<ams>	now back to doing some real work ...
<myrl-chan>	lol
<ams>	(200 new tests in a day is kinda decent ..)
<vdamewood>	and they have fewer bones.
<lf94>	ams: thanks but, i'm not reallyinterested in writing an emulator...
<ams>	lf94: not writing, it is written already.
<myrl-chan>	lf94: my machine is better.
<lf94>	then what am i doing
<lf94>	also looking at inetutils, what needs to be done?
<lf94>	where is the list of things to be done?
<ams>	lf94: rather, what needs to be done is fix bugs, there is an interesting bug with sqrt.. and i would love to be able to create new worlds from scratch.
<ams>	lf94: todo?
<jeaye>	lf94: you said you're ok with c++, you could do some work for openmw.
<ams>	lf94: lots of tests ...
<ams>	lf94: more tests definitly for inetutils
<lf94>	morrowwind?
<myrl-chan>	jeaye: what's openmw?
<jeaye>	myrl-chan: http://openmw.org/en/
<myrl-chan>	would a language be slow if it's hard to parse?
<jeaye>	c++ is a bitch to parse.
<ams>	lf94: more utilities would be cool...
<jeaye>	doesn't mean it has to be any slower than c.
<ams>	lf94: not sure what new utilities, got ideas?
<lf94>	ams: cool. what bugs we got with inetutils?
<lf94>	ams, i'd rather fix bugs :)
<lf94>	who got the boot
<myrl-chan>	like, we all talk about how "<x> language is slower." but of course, etc. etc. languages can't be slow.
<ams>	lf94: i'd have to check ...
<ams>	lf94: if you want bugs i have a nice one in vlm (the ivory emulator)
<myrl-chan>	tl;dr. can't you objectively say "<x> language is slow" if it's hard/slow to parse?
<ams>	it requires you to know alpha axp assembly ..
<lf94>	mmm.
<lf94>	i only know mips and z80.
<ams>	similar enough
<lf94>	maybe i should port an ftp server to z80
<myrl-chan>	lf94: z80 is nice.
<lf94>	b)
<myrl-chan>	:d
<ams>	well, i'm out of ideas ..
<lf94>	ftp between 2 gameboys
<ams>	i'm going to .. do stuff.
<lf94>	ams, has working on inetutils gotten you any credibility?
<ams>	credibility? not sure what that means. .
<ams>	i work on stuff cause it is fun.
<lf94>	recognized, helped you in life, etc
<ams>	no clue.  maybe.
<ams>	maybe not.
<ams>	i never pondered it.
<lf94>	think for a moment.
<ams>	i think it has ...
<lf94>	myrl-chan, what are you particularly good wiht
<lf94>	with*
<ams>	same for any other stuff i have worked on over the years .. all from glibc to gdb to whatever..
<myrl-chan>	lf94: nothing. i just think of theoretical stuff. :p
<ams>	lf94: did you know i made the releases for glibc for a bit? that was fun.
<lf94>	i didn't! that is amazing!
<lf94>	see myrl-chan, ams is definitely someone to look up to.
<ams>	is it? it was fun though.
<myrl-chan>	lf94: who said he isn't...?
<lf94>	myrl-chan we should start our own little project
<lf94>	we are both young
<lf94>	myrl-chan any good ideas
<lf94>	i've got a few
<myrl-chan>	i mean, of course i'd have to respect him. he dominates the world anyway.
<lf94>	1. infinite desktop - a desktop that can pan around and zoom in/out.
<lf94>	2. remote job posting website
<lf94>	requires zero sign-up
<lf94>	which is cool
<lf94>	(i've got the deets)
<myrl-chan>	eh
<myrl-chan>	lf94: an os. in x86 assembly.
<ams>	mm...
<ams>	don't look up to me :(
<myrl-chan>	i've got most of the deets too.
<ams>	hack instead ...
<lf94>	myrl-chan, already done.
<lf94>	myrl-chan, check out minuetos
<lf94>	completely x86
<ams>	myrl-chan: hehe :-)
<myrl-chan>	i don't like minuetos.
<ams>	lf94: why no love for ivory emulator?
<ams>	you wanted to learn lisp =)
<lf94>	ams because i don't know lisp and i know nothing about lisp machines
<lf94>	and
<lf94>	limited time
<lf94>	on this earth
<ams>	learn!
<myrl-chan>	eh.
<lf94>	will people even use it
<ams>	no
<ams>	:-)
<ams>	that is why it is fun!
<myrl-chan>	lf94: it's not about people using it, it's about the fun in programming it.
<mniip>	the list of package blocks doesn't fit in the terminal emulator scrollback
<lf94>	i need exposure!
<mniip>	justgentoothings
<myrl-chan>	mniip: lol
<lf94>	maybe i should finish this gameboy game.
<lf94>	then maybe i'll get a little exposure.
<ams>	finishing is good
<ams>	lf94: trying to beef up your portfolio?
<lf94>	sort of
<jkbbwr>	hey all
<lf94>	i just feel
<jkbbwr>	hows it going
<lf94>	lost?
<jkbbwr>	lost?!
<jkbbwr>	make yourself unlost
<lf94>	i want to start something and get people involved
<lf94>	or get involved with people
<myrl-chan>	i won't even get involved in programming jobs.
<myrl-chan>	except in college/university, to fund my studies.
<jkbbwr>	lf94: do you do mobile dev?
<myrl-chan>	after that, i'll be a lawyer.
<puddlejumper>	doing projects is easier when someone is good at directing lol
<mniip>	i won't mind doing a programming jobs\
<puddlejumper>	i mean with multiple people
<mniip>	i won't mind doing a programming job
<kidbeta>	mniip funny that considering the channel your in
<lf94>	jkbbwr, yeah. i've done android and ios.
<myrl-chan>	mniip: neither would i.
<lf94>	a little rusty on the android side.
<mniip>	kidbeta, funny indeed
<jkbbwr>	lf94: i might be looking for an ios dev in a few days for a project, can't promise you money but we will be aiming for revinue
<jkbbwr>	revenue
<myrl-chan>	lol objective-c
<lf94>	i've only used swift to interface with ios.
<_blizzy_>	i have 2 rails apps open at the same time
<lf94>	just wanted to say, flipping love swift. it's really a shame it isn't open source.
<_blizzy_>	help
<jkbbwr>	lf94: i don't care what you use, we don't have an ios monkey :3
<jkbbwr>	lf94: if you came onboard you would be responsible for managing the ios app including launch and release (i would pay appstore fees)
<lf94>	jkbbwr, only issue is i'd have to be at school to do the ios work :)
<jkbbwr>	lf94: ha
<mniip>	kidbeta, not so funny in the context of my age
<lf94>	i'm no apple fan boy!
<jkbbwr>	lf94: so long as you can make time, i don't care if you program from the moon
<kidbeta>	mniip you can always learn :d
<mniip>	hm?
<jkbbwr>	mniip: how old are you?
<mniip>	16
<kidbeta>	whut
<kidbeta>	im confused by the previous comment
<myrl-chan>	mniip: i have very high respect to you too. :d
<myrl-chan>	s/to/for/
<mniip>	i don't mean that it's "not funny" but rather that it's not as regular as your joke implies
<jkbbwr>	mniip: what languages do you use?
<_blizzy_>	do you freelance, mniip?
<mniip>	jkbbwr, it's easier to list languages i don't use
<mniip>	_blizzy_, i like the idea but i've been unable to find anything decent
<jkbbwr>	mniip: you are too young to get away with saying that answer.
<kidbeta>	^
<_blizzy_>	mniip, oh.
<jkbbwr>	mniip: what languages do you use well.
<mniip>	except that one time i freelance-developed an extension for an altcoin
<_blizzy_>	also what jkbbwr said
<_blizzy_>	i'm 17, and i can't say that
<kidbeta>	brother im 26 and only have 5 languages on my resume
<jkbbwr>	mniip: you shouldn't really ever use that answer as it screams "jack of all trades, master of nothing"
<mniip>	yeah that did sound a bit selfish
<mniip>	c c++ haskell lua
<mniip>	python perl
<_blizzy_>	i would put on my resume, node, ruby, js, python, c#, and java
<jkbbwr>	_blizzy_: (node isn't a language ;))
<_blizzy_>	well, minus java
<_blizzy_>	jkbbwr, yeah, true.
<jkbbwr>	mniip: so if i asked you to build a location matching service, what language would you use?
<_blizzy_>	ruby, js, python, c#, java, some scala, php, and go
<mniip>	"location matching serivce"?
<_blizzy_>	is that too much?
<jkbbwr>	mniip: the phone will post its location every x minutes, your service should post to the phone any users in a x meter radius
<kidbeta>	c, c++, pyton, bash and x86 asm. is what i usually use
<_blizzy_>	jkbbwr, i want to answer that
<_blizzy_>	but i can't. :x
<myrl-chan>	oh cool.
<mniip>	hm
<jkbbwr>	_blizzy_: go ahead?
<myrl-chan>	til. our eyes are logarithmic detectors.
<jkbbwr>	_blizzy_: its not a hard problem
<_blizzy_>	hmm, if its web based.
<jkbbwr>	_blizzy_: its a server application
<jkbbwr>	it manages the incoming locations, and sends updates back out
<mniip>	depends on the scale of things, a python server backend i guess
<_blizzy_>	then i would probably use node, since it's fast and is good with chat like applications
<_blizzy_>	i would probably use a websocket of some sort
<jkbbwr>	mniip: which framework in python :)
<lf94>	jkbbwr, just let me know what to do and i'll do it.
<myrl-chan>	please. i would just compare every element to every element. who cares if it's o(n^2)
<lf94>	i'm here in aus with access to the computers until november.
<jkbbwr>	lf94: cool, expect a pm after tuesday (away for the weekend with girlfriend and bank holiday monday)
<elon_musk>	i have a php question lol
<_blizzy_>	elon_musk, go for it
<myrl-chan>	elon_musk: hahah, evry funny
<_blizzy_>	but be careful, there be php haters
<_blizzy_>	just shake them off
<lf94>	jkbbwr, could you give me a hint as to what i'm doing?
<jkbbwr>	_blizzy_: what are three pitfalls or bad parts of node.js and javascript
<lf94>	elon_musk, i'm all ears.
<lf94>	or eyes.
<jkbbwr>	lf94: location driven gaming ;)
<lf94>	ohhh, interesting!
<myrl-chan>	jkbbwr: alternate reality.
<mniip>	jkbbwr, i haven't done webapp dev in python much, but nginx + some wsgi microframework like flask sounds reasonable
<elon_musk>	_blizzy_: jk lol, php questions not allowed here :d
<_blizzy_>	jkbbwr, tbh, i don't know the answer to that, but i would love to find out.
<jkbbwr>	mniip: good answer :)
<jkbbwr>	mniip: post people don't know when to keep it simple
<jkbbwr>	mniip: can you name three bad features / points of python?
<_blizzy_>	tbh, i could just show my github
<_blizzy_>	and hope for the best
<mniip>	jkbbwr, its swiftness
<mniip>	the gil
<mniip>	hmm, what else
<myrl-chan>	i think i could hold lectures.
<_blizzy_>	i can't.
<jkbbwr>	myrl-chan: swiftness?
<mniip>	oh, reference counting gc is flawed
<myrl-chan>	jkbbwr: wat
<_blizzy_>	the swiftness of swift
<mniip>	jkbbwr, i mean it's slow
<jkbbwr>	mniip: and why is the gil a bad part :)
<mniip>	can't exactly do computation-intensive multi-threaded taks
<mniip>	tasks
<jkbbwr>	mniip: how would you work around that fact?
<mniip>	rewrite all the things in c :)
<jkbbwr>	(yes i am grilling you, a) its fun, b) these questions show alot about a developer)
<mniip>	maybe c++
<jkbbwr>	mniip: why is ref counting broken?
<jkbbwr>	or "flawed"
<mniip>	circular references result in weird things
<jkbbwr>	what would you replace it with?
<mniip>	especially when database handles are involved
<mniip>	with open transactions ;_;
<mniip>	jkbbwr, not an expert in garbage collection, but tri-color mark-and-sweep employed by lua is nice
<kidbeta>	write all the things in ada
<jkbbwr>	mniip: i like you.
<mniip>	i feel like i missed some language in the "i know them very well" list
<mniip>	well does x86 and x86_64 count?
<mniip>	assembly and somewhat machine code
<jkbbwr>	how long have you been programming?
<kidbeta>	can you actually use it, or do you just know it.  because they are two pretty different things
<mniip>	about 8 years now
<mniip>	but i started "actually writing stuff" only about 4 years ago
<mniip>	kidbeta, both
<kidbeta>	and what is 'somewhat' machine code
<jkbbwr>	mniip: one of your parents is a programmer?
<mniip>	i don't remember every instruction encoding by heart but i know a lot about how assembly is encoded in binary
<mniip>	especially with an intel manual at hand
<kidbeta>	well no shit that *tells you how its encoded*
<mniip>	jkbbwr, my, uh, ex-step-dad is
<jkbbwr>	mniip: im not saying i don't believe you but you have covered _alot_ of content, and you started at 12.
<jkbbwr>	its rare
<mniip>	kidbeta, i mean knowing how sib works versus knowing what '02 03' decodes to
<stryyker>	i found knowing some assembly before learning c based languages helped me understand the concepts of pointers, memory etc.
<kidbeta>	can you write a bootloader / tell me how a computer boots?
<mniip>	kidbeta, i know the bios boot process in general
<mniip>	and realmode/longmode switch in general too
<myrl-chan>	mniip: how long have you been programming?
<kidbeta>	what about uefi
<mniip>	myrl-chan, see 8 lines ago
<myrl-chan>	mniip: ah. i started 7 years ago. we're pretty similar. :o
<mniip>	kidbeta, tbf i don't even know it from a user's perspective
<mniip>	i *somehow* managed to setup uefi booting on my server but that's it
<myrl-chan>	jkbbwr: also, he said he started at 8, not 12.
<kidbeta>	i was trying to write uefi program to set the password on my ssd but could never get it linking right. uefis a bitch
<mniip>	had to do it because mbr can't into 3terabyte harddrive, and my bios can't into hybrid mbr
<kidbeta>	shoving a bios through bochs (or qemu) if you can get it working is fun
<mniip>	jkbbwr, would you believe me if i told you i know differential calculus since 14
<jkbbwr>	mniip: not really no.
<myrl-chan>	jkbbwr: eh.
<mniip>	hah
<mniip>	i obviously don't mean the entirety of it
<myrl-chan>	i knew differential calculus since 14 too... at least of its existence.
<mniip>	multivariable calculus is a bitch, and so is complex analysis
<jkbbwr>	mniip: not trying to be offensive, i just find it hard to believe :)
<myrl-chan>	:p
<mniip>	meh
<mniip>	that's enough showing off for today
<myrl-chan>	mniip: lol. :p
<myrl-chan>	mniip: gentoo! \o/
<jkbbwr>	god damn ricers.
<mniip>	actually there's a bunch of blocks from not syncing for over 2 months
<myrl-chan>	mniip: i didn't update my arch linux for 3-4 months.
<mniip>	arch linux isn't that bad to update
<myrl-chan>	mniip: arch linux had new gpg keys, apparently.
<myrl-chan>	mniip: never encountered that problem before and arch wiki wasn't of much help either.
<mniip>	package conflicts in a package manager with no use flags are pfft
<myrl-chan>	i like gentoo and use flags.
<kidbeta>	i run qubes
<mniip>	but i have to say portage has gotten really smarter since last time
<myrl-chan>	kidbeta: how about pubes?
<kidbeta>	and have my computer inside a farady cage
<mniip>	jkbbwr, i have this problem though
<kidbeta>	allso qubes is cool dont diss qubes
<mniip>	i'm a terribly lazy person, i rarely finish my personal projects
<mniip>	last time i checked i had about 30 of them in my misc box
<mniip>	oh look! it's emerging now, i can finally go to sleep now
<myrl-chan>	emerging... he
<myrl-chan>	mniip: misc?
<myrl-chan>	oh.
<myrl-chan>	miscellaneous. okay.
<mniip>	it's not actually caller misc though
<mniip>	just ~/r/
<mniip>	i don't even remember what it stands for
<mniip>	random?
<mniip>	called*
<myrl-chan>	lol
<hotcoder>	i have a question
<myrl-chan>	hotcoder: i may have an answer.
<mniip>	myrl-chan, do you into hardware hackery
<myrl-chan>	mniip: yeah.
<hotcoder>	idk how to even ask this
<mniip>	one of my unfinished projects is a floppy drive midi player
<hotcoder>	okay so how much memory does a java application use
<mniip>	ah right, it hit a snag because i don't have any mobos that can support 2 fds
<merijn>	hotcoder: how much gas does a car use?
<mniip>	hotcoder, depends
<gedamo>	how long is a piece of string?
<stryyker>	james may made a documentary on that.
<gedamo>	what, on string?
<mniip>	how many fingers am i holding
<stryyker>	the length of a piece of string
<myrl-chan>	mniip: i'm planning to make one of my vms into a real machine using 74lsxx ics.
<myrl-chan>	mniip: i'll probably be making a lot of changes such as using only 8, 16-bit gprs.
<hotcoder>	the question is
<mniip>	seriously
<myrl-chan>	since it'd probably cost at least $100.
<hotcoder>	how much ram can i possibly use in my application
<mniip>	hotcoder, how much gas can you buy
<myrl-chan>	hotcoder: on 32-bit, about 3 gb.
<mniip>	myrl-chan, not true
<myrl-chan>	mniip: are we assuming pae here?
<hotcoder>	thanks myrl
<mniip>	i'm sure there's some hackery that can lend all 64gb to the userspace
<gedamo>	stryyker: are you sure it was james may? i just found one with alan davies
<myrl-chan>	mniip: hmmm... paging, perhaps?
<hotcoder>	i want to create an app that stores huge amounts of data
<hotcoder>	in string arrays
<hotcoder>	my windows is 64 bit
<mniip>	myrl-chan, multiple code segments, remapping huge blocks of ram every time
<myrl-chan>	mniip: theoretically, it should be possible with paging.
<hotcoder>	win 7
<hotcoder>	btw
<hotcoder>	just for the record
<hotcoder>	##java is full of pieces of shit assholes
<kidbeta>	how much daa
<kidbeta>	data\
<mniip>	myrl-chan, also, >74ls
<myrl-chan>	mniip: but i don't think people tried to do that with paging.
<mniip>	those are logic gates
<hotcoder>	and honestly these people deserve to be bullied in high school
<myrl-chan>	mniip: yes.
<mniip>	try an fpga instead
<myrl-chan>	mniip: that's no fun! :p
<hotcoder>	i hope they got beat up in hs
<mniip>	you have a wrong definition of fun
<hotcoder>	because this type of bad manners is something they can only do behind a computer
<myrl-chan>	mniip: i agree.
<hotcoder>	in real life, people would fuck them up
<kidbeta>	hotcoder how much data do you reckon
<hotcoder>	i'm so fucking mad right now
<myrl-chan>	hotcoder: please calm down.
<hotcoder>	fuck this question
<hotcoder>	man
<mniip>	i can't assert that mine is correct either, but
<hotcoder>	people like them are the reason why people dont get into programming
<hotcoder>	the community is soooo shit
<xeno_>	hotcoder: ask people to turn their tv's off :)
<hotcoder>	wat
<kidbeta>	hotcoder the communities you goto are shit, dont goto the bad ones
<syzygy>	does anyone know if i should tie my first person cameras turn speed to the framerate?
<hotcoder>	wats tv gots to do with anything
<myrl-chan>	well, java itself is the reason why people don't get into programming.
<hotcoder>	dude kidbeta i'm talking about ##java on freenode
<xeno_>	hotcoder: sorry, was a "network" reference :)
<kidbeta>	hotcoder so ?
<syzygy>	whoops, wrong channel
<kidbeta>	i had ##c be dickbags too
<hotcoder>	kidbeta, i'm on freenode
<hotcoder>	i'd go to the channel for java
<hotcoder>	thats all
<hotcoder>	thats why im on freenode
<kidbeta>	and not everything on freenode is nice and buddies and rainbows
<hotcoder>	for open source software help
<hotcoder>	im not asking for people to kiss my ass
<myrl-chan>	kidbeta: you haven't went to #lisp.
<hotcoder>	but any question you ask, is replied with condescending attitude
<kidbeta>	mniip i accidently clicked that
<xeno_>	hotcoder: https://www.youtube.com/watch?v=epizikgudxa
<kidbeta>	argh
<myrl-chan>	hotcoder: *
<hotcoder>	and these fucks will call you names
<hotcoder>	if you ask them to elaborate
<hotcoder>	everybody was a noob once
<myrl-chan>	don't go to lisp, they'll give you weird looks when you talk about anything else other than common lisp.
<hotcoder>	and if people ask questions, and you react that way, why not
<hotcoder>	just leave freenode
<hotcoder>	helping people might not be for you
<mniip>	myrl-chan, weird looks (() _ ())
<hotcoder>	damn
<myrl-chan>	kidbeta: "<abigailbuccaneer> am i the only one who was worried about kidbeta because of their nickname" lol
<hotcoder>	fuck man
<hotcoder>	i'm so pissed right now
<kidbeta>	myrl-chan ?? i dont see anything wrong with it
<hotcoder>	i wanna strangle something
<myrl-chan>	kidbeta: neither do i.
<hotcoder>	kill it
<myrl-chan>	##feminisim scares me. lol
<mniip>	don't go there then
<hotcoder>	i went there
<mniip>	i've seen enough pastebins from there
<hotcoder>	and they got pissed
<hotcoder>	so i left
<myrl-chan>	like, talk about over-analyzing things.
<myrl-chan>	pyon got banned for his hostname. kek.
<hotcoder>	i really wnat to kill someone
<myrl-chan>	er, not hostname.
<myrl-chan>	user name?
<hotcoder>	honestly if the guys that called me names were in front of me
<boxmein_>	hi mniip
<hotcoder>	and i had a convienient knife
<hotcoder>	i wouldnt hesitate to murder them
<boxmein>	weird
<myrl-chan>	hotcoder: calm down and watch some anime. :d
<hotcoder>	fuck man
<mniip>	ew
<hotcoder>	ugh
<mniip>	anime
<mniip>	dude
<myrl-chan>	mniip: pls no
<myrl-chan>	;-;
<hotcoder>	anime is amazing
<hotcoder>	are u kiddin
<kidbeta>	back into the fray i go
<hotcoder>	watch death note
<gedamo>	kidbeta: where are you fraying? :p
<myrl-chan>	hotcoder: desu nooto*
<myrl-chan>	use the original glorious nihongo namae!
<kidbeta>	hashtag feminism is where lol
<kidbeta>	gedamo how has your glorious life been
<jkbbwr>	myrl-chan: how did you know pyon got banned?
<hotcoder>	onii chan
<hotcoder>	onii chaaaan
<gedamo>	kidbeta: kinda meh
<myrl-chan>	jkbbwr: he told us. lol. if you /whois him, it says suckmy*
<mniip>	jkbbwr, it is what you think it is
<hotcoder>	i wanna meet those guys' moms and fuck them
<hotcoder>	and then their sisters
<hotcoder>	they're probably ugly anyways
<mniip>	myrl-chan is actually a spy from ##feminism
<hotcoder>	thats why they gotta come on here
<hotcoder>	and talk shit
<gedamo>	kidbeta: i'm currently doing an online course https://www.coursera.org/course/nand2tetris1
<myrl-chan>	mniip: plsno.
<hotcoder>	cause thats when they feel actual power
<hotcoder>	man
<kidbeta>	gedamo awesome
<hotcoder>	i hate people
<mniip>	trying to eliminate patriarchy from freenode
<kidbeta>	i was doing the cyrpto one and hardware hacking one for a bit
<mniip>	just look at the nickname
<hotcoder>	>hacking
<jkbbwr>	myrl-chan: don't get why that got him banned?
<hotcoder>	are you aiden pearce
<myrl-chan>	jkbbwr: it's ##feminism, what are you expecting? lol.
<jkbbwr>	myrl-chan: ohh
<kidbeta>	hotcoder theres a hardware hacking course on coursera :d its awesome
<hotcoder>	:d
<hotcoder>	ok
<hotcoder>	i'm done my rant now
<jkbbwr>	so tempted to say "smells like hypocrisy"
<kidbeta>	odd
<kidbeta>	i tried join #feminism and got no where
<jkbbwr>	kidbeta: ##
<gedamo>	kidbeta: which course is that?
<hotcoder>	jkbbwr, ?
<jkbbwr>	hotcoder: ?
<hotcoder>	you talking about me?
<kidbeta>	https://www.coursera.org/course/hardwaresec
<gedamo>	ah
<myrl-chan>	idem-pyon-tent: just realized that this nick's still in ##feminism. lol
<kidbeta>	gedamo i was doing the cyber security stuff for a while but couldnt keep with real uni at same time
<hotcoder>	what are we raiding?
<myrl-chan>	jkbbwr: you're going to get banned for saying that. lol
<adsc>	did someone claim emacs > vim?
<gedamo>	kidbeta: yeah, just because it's online it doesn't mean it's easy :p
<adsc>	what did i miss?
<myrl-chan>	adsc: feed lf94 some acid for me.
<kidbeta>	gedamo yeah thats so true. but i have to say ive been handling uni + work fine probably because work ends at the end of the day
<jkbbwr>	myrl-chan: i don't want to be welcome in a closed minded community
<adsc>	happy trippin
<kidbeta>	##femnisim >> this space opposes free speech >> welp.
<hotcoder>	at least they are honest
<myrl-chan>	kidbeta: lol
<adsc>	hahaha
<lf94>	what.
<adsc>	sometimes it really seems the movement got infiltrated with very cunning saboteurs, because some of these things are so self-destructing
<myrl-chan>	jkbbwr: look at what you did, you started shit.
<hotcoder>	lol kidbeta
<myrl-chan>	lolololol
<hotcoder>	wtf are you doing
<hotcoder>	you're going to get your ass banned
<tnu0>	hello there. i have for now a bash script that allows to use sox (a c console app) easily and in batch mode. i'd like now to create a gui app for that (and preferably multiplatform). i'm a php dev and i know a very little bit c++ and python. i don't know which language to use. i'm completely open minded to learn a whole new language (except java i personnally don't like). would you have a suggestion for my app?
<kidbeta>	tnu0 if youd like to continue with the c/c++ theme qt would probably be the go
<adsc>	yeah, qt seems like an obvious choice
<tnu0>	kidbeta, thanks for your answer. don't you think it will be a bit hard to create something that runs on gnu/linux, os x and windows with a c++ program? does it require special skills, or is it quite doable?
<kidbeta>	tnu0 use qt
<kidbeta>	its pretty much c++ with some extensions
<adsc>	it's very doable
<kidbeta>	itll run on anything
<tnu0>	ok great. that was my first idea (qt + c++)
<tnu0>	thanks for your answers
<kidbeta>	np
<kidbeta>	remember qt is more then just c++ and some of its features are nice (and some are evil) also dont stare at the magic too long youll go blind
<tnu0>	^^
<tnu0>	ok, so in your opinion i should stay close to basic c++?
<myrl-chan>	<hotcoder> but i think it should be called herstory too
<mniip>	qt is not "advanced" c++
<mniip>	qt is not c++ at all, it's a layer over it
<kidbeta>	it just extends the language with the moc
<tnu0>	if i remember it adds a lot of things, and not only concerning human interface
<hotcoder>	myrl-chan, i'm glad you caught that haha
<kidbeta>	tnu0 yeah it had for example range based look syntax before c++11's
<kidbeta>	loop*
<tnu0>	oh
<wei2912>	back
<myrl-chan>	lol
<myrl-chan>	we triggered a +m.
<wei2912>	myrl-chan: hmm?
<wei2912>	what did we do? :p
<kidbeta>	man they sound communist
<myrl-chan>	er.
<myrl-chan>	we're muted, aren't we?
<kidbeta>	yeah
<kidbeta>	they have to +v people
<myrl-chan>	lol.
<hotcoder>	it doesnt say we were muted
<kidbeta>	they did +m
<myrl-chan>	i don't have any problems with feminism, tbh.
<hotcoder>	ye
<hotcoder>	i have with modern feminism
<kidbeta>	i dont
<kidbeta>	but they arent feminist
<hotcoder>	with the overtly sensitiveness
<kidbeta>	they are insane
<myrl-chan>	but they're taking this to the extreme...
<hotcoder>	but other than that
<hotcoder>	yes kidbeta is right
<hotcoder>	ye
<hotcoder>	i like equality
<hotcoder>	but when you become this sensitive
<hotcoder>	and radical
<hotcoder>	you're fucked up
<jkbbwr>	christ that channel was toxic.
<myrl-chan>	heck, even male feminists won't get +v, or at least that's what they claim.
<kidbeta>	they dont want equailty they want domination
<kidbeta>	and communism
<hotcoder>	<agnosticnixie> the disruption caused by an effective protest will always be painted as violent if it has any risk of being a threat to the bourgeois regime even in minute ways
<hotcoder>	what the fuck is she talking about?
<kidbeta>	hence my communist comment
<hotcoder>	also someone called a ban on me
<hotcoder>	for idk what
<reynir>	to me scala seems to suffer from syntactic diabetes
<myrl-chan>	my god. that shit was burnin my brain cells...
<hotcoder>	are they ever going to -m
<kidbeta>	should link them to tumblrinaction
<jeaye>	enough of the cross-channel posting.
<jeaye>	this isn't ##bitchaboutfeminism.
<hotcoder>	oh god
<kidbeta>	good idea for a channel
<hotcoder>	mod came to ruin our buzz
<jeaye>	kidbeta: go make it and bitch there.
<hotcoder>	yo join #bitchaboutfeminism
<kidbeta>	will do
<wei2912>	lol
<myrl-chan>	i was expecting that that would call out the attention of mods sooner or later. \o/
<myrl-chan>	jeaye: what causes `max sendq exceeded`? a flood?
<jeaye>	myrl-chan: yup
<ninjapenguin>	probably a weak internet and the server tries to send message but they don't go through so it drops the connection.
<ninjapenguin>	+s
<myrl-chan>	hmmm
<myrl-chan>	i should make a text editor os(like emacs) for my machine.
<myrl-chan>	ams: what makes lisp machines different?
<myrl-chan>	i guess except for the word length.
<myrl-chan>	oh yeah, they also have dedicated cons, head and tail functions.
<myrl-chan>	meh, forget my question.
<kidbeta>	myrl-chan do you mean instructions?
<myrl-chan>	kidbeta: yes.
<hotcoder>	quick question
<hotcoder>	what software do people use to ddos?
<kidbeta>	i hear that is some sort of low orbit thingy mag jig
<adsc>	ping
<kidbeta>	pod
<llamageddon>	can [random(), random()] be called a list/array literal or not?
<llamageddon>	after all it's not a constant value expression...
<myrl-chan>	hotcoder: well, it relies on a software on other machines.
<hotcoder>	ah so the software commands other computers/networks to send data to the ddos recieever?
<myrl-chan>	llamageddon: in haskell, that'll just be a list of 2 similar numbers. :p
<llamageddon>	no, i mean from a grammar point of view
<myrl-chan>	s/similar/equal/
<llamageddon>	is that an expression outputting a list, or can it be called a literal?
<kidbeta>	hotcoder it depends
<llamageddon>	e.g. "meh" is a literal, and so is 20.5, but is [random()] a literal or just an expression?
<kidbeta>	it can be done in a lot of ways
<kidbeta>	usually you use a bandwidtht amplifier like a misconfigured dns server or something similar
<kidbeta>	something you can send n bytes to and recieve > n frm
<mniip>	llamageddon, i'd say it definitely is a literal
<hotcoder>	ohkay
<llamageddon>	hmmmmm
<hotcoder>	is there a free service technique to ddos?
<mniip>	lua calls {} table literals idepedently from whether values or even keys are constant or not
<kidbeta>	hotcoder a whut
<hotcoder>	like
<llamageddon>	hmmmmm
<hotcoder>	can i ddos for free?
<llamageddon>	okay, i'm convinced enough
<hotcoder>	without the basic cmd ping?
<hotcoder>	like something more powerful than a ping from cmd
<mniip>	it's quite hard to ddos with ping
<kidbeta>	hotcoder well find a misconfigured dns server and goto down
<kidbeta>	town*
<hotcoder>	ehh
<hotcoder>	i'll look into it
<hotcoder>	dont want to bombard you with questions
<myrl-chan>	hotcoder: yes, you can. but you'd have to crack faulty machines.
<kidbeta>	myrl-chan not reall
<hotcoder>	interesting
<myrl-chan>	kidbeta: yes you do... it's not "distributed" if you do it yourself.
<tsumetai>	llamageddon: seems more useful to not consider it a literal.
<llamageddon>	tsumetai: why?
<kidbeta>	myrl-chan but it is if you copy your packets to a bunch of other machines that amplify them and send them to the target
<llamageddon>	it's just a question of naming
<myrl-chan>	kidbeta: i guess so, but that's more or less what i consider faulty.
<kidbeta>	myrl-chan :d
<kidbeta>	theres at uni
<kidbeta>	we have gigabit to it
<tsumetai>	llamageddon: since it requires evaluation. if [random()] is a literal, then isn't every lisp program a literal?
<hotcoder>	interesting
<hotcoder>	...
<hotcoder>	i'll look into it after my current project :)
<llamageddon>	tsumetai: good point
<llamageddon>	but then i don't have actual list literals, but i have... what, instead?
<kidbeta>	myrl-chan faulty implies its doing something wrong
<llamageddon>	a list expression?
<nexia>	myrl-chan: http://i.imgur.com/kmiqk5a.png
<tsumetai>	llamageddon: i think so. what's the context/use?
<kidbeta>	klines are baaaaaaaaaaaaaad news
<llamageddon>	tsumetai: i'm designing a language, and just wondering what to call the various things in my grammar
<llamageddon>	not that the syntax is final already
<myrl-chan>	http://ix.io/iet.png
<myrl-chan>	i had no fun, i decided to do things with emacs.
<myrl-chan>	hmmm
<tsumetai>	llamageddon: expression makes sense to me.
<llamageddon>	hmm. okay then
<merijn>	llamageddon: it depends on which various things you wanna name
<merijn>	llamageddon: what kinda language are you implementing?
<llamageddon>	for now i'm at a designing stage
<merijn>	s/implementing/designing
<llamageddon>	i'm making a low-level language with some high level features and a lot of syntactic sugar
<wei2912>	pyon: did you manage to solve the full problem?
<merijn>	static/dynamic, functional/oo/imperative, which features? first class functions, exceptions?
<llamageddon>	exceptions, first class functions and closures, reflection/metaprogramming, coroutines, static with optional dynamic, structural and imperative, no "real" oo planned for now
<llamageddon>	type system is probably currently more similar to fp languages
<llamageddon>	i have structs, typed unions, interfaces/traits
<llamageddon>	also, my methods are not bound to types, but instead pattern-matching based
<rindolf>	hi all. how are you?
<hotcoder>	yo
<hotcoder>	i gotta say
<hotcoder>	i love jaa
<hotcoder>	java
<merijn>	llamageddon: if you don't have it yet i can highly recommend getting the book "types and programming languages"
<wei2912>	hotcoder: why?
<hotcoder>	wei2912, its awesome. a lot of things out right now are written in java.
<hotcoder>	so its easier to export apis etc
<llamageddon>	merijn: the type system i'm designing is rather unusual, so i doubt that book could help me much :p
<merijn>	llamageddon: it covers all the basics of implementing type systems, including stuff like polymorphism, exceptions, etc.
<hotcoder>	plus i just understand it better
<llamageddon>	besides i've got enough knowledge already, for the most part
<llamageddon>	i've been researching language development related stuff almost since the day i started programming
<merijn>	ok :)
<llamageddon>	merijn: are you interested in becoming a person whom i talk about my language with? @_@
<hotcoder>	wei2912, its good shit man
<llamageddon>	or more like about my chaotic thoughts on it
<hotcoder>	what are you people rambling on about?
<llamageddon>	i am rambling a very slight bit about the language i'm designing
<merijn>	llamageddon: i'm a pl person, i'm just curious about what languages people hack together, as long as they're not "yet another stupid new syntax for javascript"
<wei2912>	hotcoder: for practical purpose, i suppose, but there're better languages for that purpose
<wei2912>	merijn: lmao
<wei2912>	merijn: what is your most hated language
<llamageddon>	nah, my language is... something (relatively) new
<merijn>	wei2912: can i name more than one?
<wei2912>	merijn: of course
<tsumetai>	llamageddon: what are you trying to achieve with it?
<llamageddon>	honestly, i'm not really sure, what my exact aim is
<wei2912>	llamageddon: please elaborate
<merijn>	wei2912: php, visual basic and javascript from most to least sucky
<wei2912>	there're a couple of pple interested in pls
<llamageddon>	i just want to make an usable and fast language that is comfortable to use and additionally following few "experimental" principles
<wei2912>	merijn: lol
<llamageddon>	e.g. compiled to efficient native code, but with a lot of higher level features, syntactic sugar, etc.
<merijn>	i'd recommend (and i say this as ta for compiler construction) hacking together some shitty language and just keep making new ones instead of aiming to get everything right the first time
<wei2912>	merijn: java vs c++ vs c?
<myrl-chan>	merijn: i think vb's the least suckiest out of those.
<merijn>	myrl-chan: it doesn't even have short-circuiting and by default...
<llamageddon>	merijn: i implemented some hacky things already, and this won't be the first language i've made a spec for :p
<merijn>	myrl-chan: case-insensitive variables!
<wei2912>	merijn: what the hell?
<merijn>	wei2912: you need a separate keyword to get shortcircuiting and in vb
<wei2912>	...
<merijn>	wei2912: hmmm, hard question
<myrl-chan>	merijn: true.
<merijn>	wei2912: c++ is the most workable in terms of getting what i want done
<myrl-chan>	merijn: andthen and orelse. iirc.
<wei2912>	merijn: yeh, that's the reason why i'm here
<wei2912>	to ask hard questions :p
<merijn>	c vs java is tricky. c has stupid amounts undefined behaviour and shitty things, but at least it has a niche use case
<merijn>	java is slightly more sane but i don't have a single area where i would pick java over some other language
<merijn>	plus the java ecosystem is filled with "teh dumb"
<wei2912>	haha
<myrl-chan>	languages which i don't like would be c++, python, js, php, vb, java, and probably some more.
<llamageddon>	c should long since be deprecated in favor of a better systems programming language :/
<merijn>	myrl-chan: pre c++11 c++ or old c++?
<merijn>	llamageddon: i'm keeping my fingers crossed for rust
<myrl-chan>	dunno. i just don't like c++. :d
<llamageddon>	rust is a language i very badly need to check out
<merijn>	myrl-chan: i hate it, but it at least lets me express what i want, albeit it very verbosely
<myrl-chan>	i love rust.
<merijn>	which means i can at least make c++ work for me
<merijn>	you know, modulo some goat sacrifices
<myrl-chan>	lol
<wei2912>	merijn: python vs ruby vs lua, golang vs rust vs d
<myrl-chan>	wei2912: lua + rust.
<wei2912>	i had to ask these questions :p
<merijn>	i don't know d, so i'm skipping that
<myrl-chan>	i'm planning to check out d though.
<llamageddon>	lua for embedding, python for webdev/scripts, rust or d for "serious" programming
<merijn>	rust, lots and lots of nothing, and then all the remaining ones on a single heap
<llamageddon>	i'm not really sure how d fares. it's garbage collected, isn't it?
<merijn>	python/ruby/lua/go all suck equal amounts, but for different reasons
<llamageddon>	merijn: why do you think lua sucks?
<myrl-chan>	merijn: lua doesn't suck dough. :<
<merijn>	lua has a great embeddable interpreter, but 1 indexed collections? wtf?
<wei2912>	lol
<merijn>	also it's syntax is so ugly :(
<wei2912>	it's better than php's "array"
<llamageddon>	1-based indexing makes sense
<merijn>	python doesn't have a sane way to do concurrency
<wei2912>	haha
<llamageddon>	it has different advantages and drawbacks than 0-based
<myrl-chan>	merijn: the 1 index collection is indeed bad, but it's more or less just convention now.
<llamageddon>	and my personal opinion is that 1-based is better
<merijn>	ruby has too much funky monkeypatching
<llamageddon>	because in modern applications you run into issues with 0-based indexing more often
<myrl-chan>	llamageddon: eh?
<merijn>	of course python/lua/ruby all lack a decent type system, so they get points docked for that
<llamageddon>	0-based is almost exclusively useful for computing indexes
<wei2912>	yeh, that's why i wanted to compare these 3
<llamageddon>	e.g. n % length for circular buffers, or y*width+x
<wei2912>	but how does go fare against them?
<exio4>	merijn: lua's syntax is extremely simple, though
<merijn>	go has sane concurrency, but braindead typing which might make it even worse than no typing >.>
<myrl-chan>	exio4: and that's the beauty of it.
<myrl-chan>	merijn: also, lua's syntax is fine, since it's meant to appeal to non-programmers.
<exio4>	i don't like it being statement based though
<merijn>	myrl-chan: but i'm a programmer
<merijn>	:)
<llamageddon>	on the other hand, 0-based indexing is a pain because of half-open ranges, when you deal with user io, and harder to reason about
<myrl-chan>	merijn: yes. but there are even more things in lua that appeals to programmer.
<merijn>	to be fair i'm starting to hate c++ inability to be formatted nicely
<llamageddon>	and lua's syntax is just fine
<merijn>	+more and more
<merijn>	lua needs an indent based syntax >.>
<wei2912>	i should probably ask about fp langs, just to start 2 flame wars at once
<llamageddon>	{} for blocks is nice and compact, but it can be confusing if you want {} for maps/sets
<myrl-chan>	merijn: what the fuck?
<xeno_>	wei2912: go on, ask!
<myrl-chan>	merijn: indent based syntax is pure shit. <.<
<llamageddon>	i'm going with lua-style blocks
<xeno_>	wei2912: 2 wars at once is the best
<exio4>	llamageddon: abstract most loops, ??, profit
<wei2912>	xeno_: okay then
<merijn>	myrl-chan: right, that's why when you allow people the choice between braces and indentation everyone picks braces.
<llamageddon>	indent based syntax is pretty cool, but then you have special rules for fitting stuff into single lines
<exio4>	myrl-chan: is it? i find haskell's syntax pretty nice
<merijn>	oh wait, haskell gives that choice and absolutely *no one* uses braces
<myrl-chan>	exio4: except haskell.
<myrl-chan>	merijn: haskell's different.
<exio4>	merijn: i use braces! in the repl!
<merijn>	python syntax isn't bad
<merijn>	exio4: pffft, coding in the repl...amateur :p
<wei2912>	merijn: haskell vs erlang vs lisp vs ml vs ...
<wei2912>	need more suggestions
<llamageddon>	i think lua's syntax for blocks is the best
<myrl-chan>	llamageddon: yep. `do end`
<llamageddon>	because it does not collide with map/set syntax
<merijn>	wei2912: erlang lacks good syntax and types, but the underlying model is neat
<exio4>	merijn: nah, coding in the repl is painful, but sometimes you want a case :p
<myrl-chan>	wei2912: haskell, because it's english.
<wei2912>	lol
<exio4>	wei2912: which lisp
<merijn>	wei2912: haskell is my current goto language, which doesn't mean it doesn't have warts, but they out way everything
<wei2912>	exio4: that i leave to all of you to decide
<merijn>	ocaml is like haskell, but worse
<llamageddon>	okay, so!
<merijn>	ugly syntax, no typeclasses...
<wei2912>	ah, yes. should have asked abt ocaml
<wei2912>	specifically
<llamageddon>	what do people think about "type t" vs "t: type" vs "var t: type" ?
<myrl-chan>	lua best imperative language
<merijn>	i'd like ocaml style functors in haskell, but fortunately edward yang is warking on it
<myrl-chan>	llamageddon: first one's the best.
<llamageddon>	myrl-chan: why?
<wei2912>	myrl-chan: rustttttttttt
<merijn>	llamageddon: i strongly prefer haskell style annotations nowadays
<llamageddon>	merijn: what style does haskell use?
<merijn>	llamageddon: i.e. allow type annotation separate from use/definition
<wei2912>	llamageddon: the first
<wei2912>	llamageddon: well, sort of
<myrl-chan>	llamageddon: because when typing out the variable name, you'd be sure to know the type. :p
<rindolf>	wei2912: no, it's t :: type
<myrl-chan>	haskell's is also nice.
<exio4>	variablename :: int -> int
<myrl-chan>	also.
<exio4>	:p
<wei2912>	rindolf: which was why i said "sort of", since the first is used for type classes
<merijn>	llamageddon: see https://github.com/merijn/snet2.0/blob/master/snet/task.hs
<llamageddon>	well, i can't use "type t" anyway, because type inference and (almost)first class types don't mix well
<exio4>	wei2912: it isn't?
<merijn>	llamageddon: as you can see, the nice thing about haskell style annotations is that you can cleanly linewrap type signatures!
<myrl-chan>	lua is probably the most extensible language, despite being embedded.
<wei2912>	rindolf: though on second thought what i said is confusing
<merijn>	this is a major problem i have in c++ with functions with lots of arguments, don't know how to cleanly linewrap!
<myrl-chan>	oh, and oop is shit.
<wei2912>	exio4: it isn't? integral a => a -> ...
<merijn>	wei2912: i don't know ml and lisp we enough to decide
<llamageddon>	misused oop is shit, properly used oop can be wonderful
<wei2912>	lol
<merijn>	racket is on my list of things to look at when i have time
<myrl-chan>	oop in the general sense is shit.
<myrl-chan>	pseudo-oop is the only properly used oop.
<merijn>	oop is shit, but structural subtyping with row-polymorphism is pretty cool
<exio4>	wei2912: typeclasses are just parametrized types
<llamageddon>	myrl-chan: but oop is so much more than c++/java/c#/python present :/
<myrl-chan>	llamageddon: yes, i'm talking about that exact oop.
<llamageddon>	because oop is originally about a lot of things
<myrl-chan>	llamageddon: pseudo-oop is better.
<llamageddon>	not just polymorphism and inheritance
<wei2912>	llamageddon: perhaps you know of a language that does oop well?
<merijn>	llamageddon: i'm pro structural subtyping, but strongly against inheritance
<myrl-chan>	wei2912: imo, c and lua does oop well. :p
<merijn>	also, no "methods"
<llamageddon>	wei2912: no clue, i have been out of the loop for a while because of anxiety problems
<myrl-chan>	merijn: i like methods on some languages.
<merijn>	(storing first class functions in structs is ok)
<llamageddon>	oh god, oop in c is horrible
<llamageddon>	:c
<wei2912>	myrl-chan: no inheritance :p
<myrl-chan>	wei2912: not necessarily.
<llamageddon>	and anyway, you can do good oop in c++ as well
<exio4>	merijn: closures to the rescue!
<myrl-chan>	wei2912: in c, you can have a struct in a struct. and then you can use the type of the internal struct to refer to the struct that inherited the internal struct.
<myrl-chan>	i'm not sure if that's in the standards, but that probably works.
<myrl-chan>	because structs have no metadata.
<llamageddon>	myrl-chan: tl;dr: non-typesafe c++ single inheritance without actual polymorphism
<wei2912>	myrl-chan: that sucks a lot
<myrl-chan>	wei2912: eh, i don't think it does.
<rindolf>	llamageddon: you can have pointers to functions inside the structs.
<llamageddon>	which are failure-prone as well, because you have to care about those manually, as opposed to automatically like in c++
<myrl-chan>	wei2912: also, i don't use that either, since i don't use inheritance.
<wei2912>	^^
<wei2912>	lol
<myrl-chan>	not much use for inheritance, really.
<wei2912>	btw, what exactly are church numerals?
<myrl-chan>	wei2912: ogm, religion discussion
<myrl-chan>	ben
<wei2912>	church numerals, then
<exio4>	the only thing that 'oop' was said to do nicely, was something ml modules and typeclasses did better, abstracting over an interface
<wei2912>	^^
<myrl-chan>	also, look at this girl complaining about how there are a lot of balls. http://ix.io/ieu.png
<exio4>	there are things like subtyping which _may_ be pretty cool in some contexts, but it's not the polymorphism you probably want
<exio4>	the first (
<llamageddon>	myrl-chan: that returns something that seems to be html but is not rendered by my browser to me
<gedamo>	myrl-chan: your images aren't working correctly here
<wei2912>	myrl-chan: wooooo garbled png
<myrl-chan>	wat
<wei2912>	is this a psychology test
<gedamo>	myrl-chan: possibly not being supplied with the correct mime type
<myrl-chan>	yeah.
<myrl-chan>	probably not.
<merijn>	wei2912: church numerals == nats encoded using "church encoding"
<gedamo>	text/plain
<merijn>	wei2912: which is a specific encoding scheme for data types into untyped lambda calculus
<merijn>	there others, like scott-encoding
<myrl-chan>	though, i got more audience than i expected! :p
<myrl-chan>	gedamo: this loads well for me. http://ix.io/ieu
<myrl-chan>	oh wait.
<llamageddon>	not for me
<myrl-chan>	i see what's happening now.
<gedamo>	nor for me
<myrl-chan>	i normally don't load it fully.
<myrl-chan>	2wait.
<wei2912>	merijn: i see, thanks
<wei2912>	exio4: thanks, btw. i forgot to reply back
<exio4>	wei2912: what did i say? :p
<darkcthulhu>	morning all
<llamageddon>	hello darkcthulhu
<myrl-chan>	llamageddon: gedamo wei2912 http://i.imgur.com/gqxow8a.png
<darkcthulhu>	llamageddon, lol. i like your nick. llamas are definitely the animals i'd associate with armageddon. :)
<llamageddon>	well, my nick has a long history
<wei2912>	exio4: abt typeclasses
<llamageddon>	by now not a lot to do with armageddon :p
<wei2912>	darkcthulhu: hi, wait a moment.
<wei2912>	darkcthulhu: hv you checked the theorems for the chocolate boxes problem which i put up?
<wei2912>	a couple of hours ago
<darkcthulhu>	hi wei2912. i didn't check that thing out yesterday. i wasn't feeling quite well. could you give me the link again?
<darkcthulhu>	i have a talk to attend in a couple of hours. i'll check after that because i'll have my whiteboard again.
<wei2912>	darkcthulhu: sure, http://pastebin.com/spu27var
<wei2912>	darkcthulhu: l50: #4a -> #5a
<darkcthulhu>	wei2912, okay. bookmarked. will check it out :)
<kushite>	hey guys
<wei2912>	at this point, brute forcing with heuristics should make the process a lot faster. but is there a way to go further?
<gedamo>	hi kushite :)
<myrl-chan>	can your vim do this? checkmate. http://i.imgur.com/2ypvasb.png
<wei2912>	myrl-chan: why would i need that?
<wei2912>	hi sadale
<sadale>	wei2912, hi :3
<myrl-chan>	wei2912: i don't know either.
<darkcthulhu>	wei2912, optimal substructure is what we should be looking for.
<wei2912>	darkcthulhu: i agree
<myrl-chan>	wei2912: i think i'll make a stack-based interpreter with the use of monads.
<wei2912>	darkcthulhu: but i'm not sure how to proceed. if we generalize theorem #5 to work for n_p <= n_{p+1} for all p, then we get the final theorem
<wei2912>	and pyon's conjecture would be correct
<darkcthulhu>	wei2912, yeah..
<pengwan>	hey everyone
<sir_galahad_ad>	hi
<wei2912>	myrl-chan: for what?
<wei2912>	myrl-chan: i wrote a dfa and nfa using monads -- you could try that out
<myrl-chan>	wei2912: dfa and nfa?
<wei2912>	myrl-chan: determinstic finite automata, non-determinstic finite automata
<myrl-chan>	hmmm
<sir_galahad_ad>	is that like finite state and non-finite state machines?
<myrl-chan>	wei2912: do you have other things?
<wei2912>	sir_galahad_ad: yeh, same thing
<wei2912>	myrl-chan: my mind hurt quite a bit while i was trying to get these to work
<pengwan>	may sound naive. i'm trying to figure out which grad program to attend. would appreciate some perspective.
<myrl-chan>	wei2912: ah, i like fsms.
<wei2912>	sir_galahad_ad: err, nfa isn't a non-finite state machine, btw. there're still a finite number of states
<pengwan>	would it be too big a stretch to join a ms software engineering program with a weak programming/cs background?
<kidbeta>	pengwan the only one i know who joined has a phd
<sir_galahad_ad>	wei2912: i should've picked up on that from the names, dunno what i was thinking
<darkcthulhu>	pengwan, phd or master's?
<wei2912>	myrl-chan: use a list if you want to train your monad skills
<pengwan>	hey it's for a masters
<pengwan>	carnegie mellon at silicon valley. a little bit at a loss as to how to approach it.
<darkcthulhu>	pengwan, any of the top programs then, but look for the number of courses they offer in your area of interest and the number of faculty members.
<darkcthulhu>	ah.. that sounds like it's a professional masters program.
<darkcthulhu>	must be very expensive.
<pengwan>	yea
<darkcthulhu>	do you plan on a phd later on?
<pengwan>	no i don't. im doing this over a career change
<darkcthulhu>	i see.. you should check the roi (return on investment) ratings for that course then.
<darkcthulhu>	cmu is incredibly well known, but i don't know if it's professional programs are really worth it.
<pengwan>	i visited teh campus and met the folks there, i've been accepted, but i wanted a sanity check before i potentially choose the wrong program
<darkcthulhu>	hmm.. the program should be good. the primary weighing factor should be whether you want to spend that kind of money and the opportunities after you complete.
<pengwan>	i guess to give some perpsective, i did my undergrad in electrical engineering. got into finance for a bit. programmed a little at work and for some projects as an undergrad
<darkcthulhu>	pengwan, doesn't sound too far off from my story :)
<pengwan>	hmm
<adsc>	electrical engineers make the worst programmers :p
<pengwan>	i did some matlabby type stuff whilst in finance. wrote a phone app last year. just dabbling. but that's basically all i've ever done in terms of this
<darkcthulhu>	pengwan, i went with a general ms program, because i wanted the option of doing a phd later on. but if the end goal is the industry, si valley is the place to be.
<pengwan>	yea that's teh real gotcha. it's either choose ms se or usc for a ms cs program
<darkcthulhu>	pengwan, programming isn't cs. that's the first thing to see. they're very different. if you want to learn the science, go with the latter. if you want to make money quickly, look at the pmp in more detail.
<pengwan>	where did u do ur masters in?
<adsc>	wait, you have electrical engineering and finance background?
<adsc>	you must be my arch nemesis
<darkcthulhu>	pengwan, in progress. texas a&m
<pengwan>	nice
<arch>	rawr
<adsc>	heh
<pengwan>	adsc i did a financial engineering degree after my ee
<pengwan>	stumbled into trading and hated my life for a year
<adsc>	please make sure you are not the antichrist
<darkcthulhu>	pengwan, sell out to wall street during your internship. :d nothing pays as much.
<pengwan>	ah that's why i left
<pengwan>	all i did was click buttons and make sure our systems didnt blow up at work
<arch>	i can't wait to finish studying cs, this year was atrociously boring
<pengwan>	i realized that cs != programming. but seems like to get into the field, cs is the way to go generally
<darkcthulhu>	heh.. usc has a good program though and folks usually complete it in a year and a half. the advantage would be internship experience i guess. i don't know if a professional program allows for that.
<adsc>	cs is certainly a good background for any programming endeavour
<darkcthulhu>	yes. vice versa, not so much.
<pengwan>	cmu's thing does. it's 1.5 years too. it's just that since it's a satellite campus, they only have a limited selection of foundational stuff
<darkcthulhu>	ah
<pengwan>	basically some intro to computer systems course over the summer. and then they throw you into the pit
<darkcthulhu>	both are in ca, which means opportunities should be plentiful in either course.
<darkcthulhu>	you'll probably do more practical things in the cmu course.
<pengwan>	yes. it's project oriented, though i feel like with the lack of background it's not much use no?
<pengwan>	what are you focusing on at tamu?
<darkcthulhu>	pengwan, it depends. how much of the cs fundamentals are you good with? even in ms programs, you usually are encouraged to take grad level courses and not the undergrad-is h fundamentals courses.
<darkcthulhu>	pengwan, systems group.
<ams>	myrl-chan: lots of things make them different .. they have bunch of stuff for the garbage collector, for handling lists, for handling bignums.
<ams>	myrl-chan: i woudln't call them lisp machines, more like dynamic language machines
<darkcthulhu>	pengwan, programming languages and parallel computing.
<pengwan>	darkcthulhu, sounds cool! what are you hoping to do afterwards?
<ams>	myrl-chan: http://bitsavers.trailing-edge.com/pdf/symbolics/i_machine/ has good stuff
<darkcthulhu>	pengwan, i'm headed for an internship this summer. after graduation, probably work a couple of years and then head out for a phd.
<pengwan>	wow im pretty envious
<pengwan>	can i ask where at?
<darkcthulhu>	pengwan, the ms for me was more of figuring out where my interests lie.
<darkcthulhu>	pengwan, internship? google. phd - not yet decided where at.
<pengwan>	wow congrats! that's the dream for many haha
<ams>	horrible ..
<ams>	so you will be at a place where you cannot discuss anything with anyone
<pengwan>	i didnt get a chance to visit the google campus when i was in the bay, but my friend showed me facebook. was like disneyland
<ams>	on top of that, you will be helping the spy machine.
<ams>	google is one of the worst companies every to exist.
<ams>	do not work for google!
<darkcthulhu>	pengwan, haha.. yeah, these places are very nice to work for.
<darkcthulhu>	ams, why so?
<ams>	i just explained why.
<pengwan>	i guess when im comparing cmu's program vs a mscs, my stomach turns since i feel like i gotta study everything on my own on the side
<kidbeta>	ams whut
<kidbeta>	google is pretty open
<darkcthulhu>	ams, why can't you discuss anything with anyone? o_o.
<ams>	kidbeta: no, they are not.
<pengwan>	such secret
<darkcthulhu>	i guess that would depend on the team as well.
<kidbeta>	yeah
<ams>	google is exactly like apple, or microsoft.  evil companies that people should stay away from.
<adsc>	well
<adsc>	google doesn't have to be open or secretive
<pengwan>	who's less evil then?
<adsc>	since its members freely join a cult and generally don't leave the facilities
<darkcthulhu>	pengwan, if you don't have good fundamentals, i'd be inclined towards  the general ms cs from usc. it makes you just as employable if you take the right courses.
<ams>	lots of nice little companies out there worth working for
<darkcthulhu>	pengwan, then again, that's probably because i know people who are at usc doing just that. i don't know any pmp folks from cmu.
<kidbeta>	ams that pay well too ?
<ams>	kidbeta: better than google.
<pengwan>	darkcthulhu, thanks. i think i sold myself short when i applied, im stuck in a scientists and engineers track when they spoonfeed me some undergrad before i choose my last 3 electives
<kidbeta>	ams show me
<ams>	if you are in it for the pay, get a different job.
<adsc>	i think google is pretty okay, it's just that clause in the terms where you forfeit ownership of your own children to google that's a little worrying
<darkcthulhu>	i think it depends more on what you learn. for an internship, the work they offered was pretty exciting.
<ams>	kidbeta: show you? go talk to some other people, instead of being a cult member.
<adsc>	or maybe the term where you agree that in case of death all your harvestable organs belong to google
<kidbeta>	ams already got a job :p
<ams>	googles pay is actually very bad compared to other companies.
<kidbeta>	but if you can get me more pay ;)
<numb3rz>	rindolf: wats up buddy thats for the python doc it was very helpful
<ams>	doing your own contracting is actually the best way to get better pay.
<adsc>	also google's plans to build prison ca...i mean provide housing for all of its employees for free
<adsc>	but otherwise, they are a fairly cool company
<ams>	yeah, google .. the prison company.  you live, breath, and die on google campus.
<ams>	they don't do any interestign research either.
<pengwan>	darkcthulhu, i guess im just bummed that i might be giving up a name brand and location over not taking a course in os, networks, or algorithms, etc.
<ams>	google has also one of the most evil ndas in existence, apple being the worst..
<darkcthulhu>	pengwan, i understand. it is a tough choice to make. i think talking to grads who are there will help you make a decision.
<kidbeta>	ams how so
<pengwan>	darkcthulhu, what did you undergrad in?
<pengwan>	cthu
<darkcthulhu>	pengwan, electronics engineer.
<ams>	kidbeta: "everything you do, think, shit, is owned perpetually by google, if in the event of having children, they to will be google property"
<pengwan>	cool. in texas too?
<kidbeta>	ams even outsidse work ?
<ams>	kidbeta: ofcourse.
<kidbeta>	wtf
<darkcthulhu>	pengwan, in a different country. :) a lot of microprocessors, and little choice in terms of electives.
<ams>	kidbeta: you are not even allowed to talk about the nda
<ams>	kidbeta: when you visit google prison, you sign a similar nda, where you cannot talk about anything.
<pengwan>	i made it through my ee program and promptly forgot everything.
<ams>	how fun can it be to work for a company where you are not allowed to talk about what you are doing?
<darkcthulhu>	hehe.. can't say i remember much.
<kidbeta>	ams theres plenty of jobs like that
<ams>	sure, staying away from them is easy.
<rindolf>	numb3rz: hi! which python doc are you talking about?
<ams>	http://gawker.com/230407/this-nda-never-existed example of the visitor agreement.
<kidbeta>	ams maybe some people dont mind :)
<ams>	kidbeta: oh, and the nda never expierces.
<ams>	(which is illegal but shurg)
<pengwan>	darkcthulhu. i got a chance to talk to the grads at cmu, basically they say i'll be fine.
<magellan>	well if it's illegal then you can break it
<numb3rz>	rindolf:the doc.python.org changed my nick from godsgift
<magellan>	without worry
<ams>	kidbeta: maybe they should mind if they want to become good programmers.
<rindolf>	numb3rz: i'm mostly fine - feeling kinda sick today, and it's mailman day too, so i get many notifications from my mobile phone.
<kidbeta>	ams why ?
<pengwan>	but then i look at general coding interview information and i feel like, i've basically got to study cs on my own then...
<rindolf>	numb3rz: ah.
<ams>	kidbeta: how can you learn if you are not allowed to ask?
<rindolf>	numb3rz: i see. :-)
<rindolf>	numb3rz: you're welcome anyway.
<ams>	kidbeta: how are you to learn if you cannot get help?
<darkcthulhu>	pengwan, interview coding is a pain. most of them put you through 8-10 rounds and constant practice certainly helps.
<numb3rz>	rindolf: yea it seem pretty easy to write now im jus browsing thru all the functions to see wat they are for
<kidbeta>	ams no doubt you can get help within a group
<numb3rz>	rindolf: im noticing that alot of the programming languages are similar and noticed that python can be used with c. can it be used with other languages as well?
<ams>	probobly not.
<myrl-chan>	hmmm
<magellan>	so google = north korea
<magellan>	ok
<kidbeta>	ams that sounds like rubbish
<rindolf>	numb3rz: yes, it can - see for example - https://metacpan.org/pod/distribution/inline-python/python.pod
<ams>	kidbeta: people are competeting to get up the corperate lader.
<magellan>	sounds like a load of rubbish to me
<ams>	uhm, yeah .. go talk to an ex-googler.
<kidbeta>	great proof
<ams>	shurg, seeing you do not belive me, what else do you want?
<numb3rz>	rindolf: thank ill check it out again thanks for all ur help man its kinda hard learning on your own -i dont have money to go to school for it and no friends that even know anything about this to get info from so thanks really appreciate it
<rindolf>	numb3rz: you're welcome .
<rindolf>	numb3rz: you should work on your punctuation, though.
<kidbeta>	ams some sort of verifable proof
<jkbbwr>	ams: how is it going
<ams>	kidbeta: talk to an ex-googler.
<numb3rz>	rindolf: ok will do :-$
<ams>	jkbbwr: good good .. 200 tests written since yesterday.
<kidbeta>	ams but the nda says they cant say anyhting :p
<rindolf>	numb3rz: thanks!
<kidbeta>	it sounds more draconian then a intelligence agency
<rindolf>	ams: wow! that's a lot.
<adsc>	kidbeta: well, it is an intelligence agency
<magellan>	you write about it like some kind of conspiracy theorist
<kidbeta>	adsc well its a pretty shit one
<adsc>	maybe
<wei2912>	can you people improve on your trolling skills
<wei2912>	please
<adsc>	how?
<adsc>	i would love to
<magellan>	next you're going to say google uses their nest acquisition to spy on us inside our own homes
<magellan>	and keep us prisoner to them
<adsc>	they don't have to keep us prisoners
<adsc>	the best prison is the world, where you control all the information about everything
<magellan>	lol
<adsc>	a prison is really just a reduction in space, because it is hard to keep track of the prisoners if they roam free
<wei2912>	no
<wei2912>	just no
<adsc>	okay, i tried :)
<wei2912>	that's not how a prison goddamn works
<wei2912>	you should be thrown into prison for that statement
<adsc>	i have already been in prison
<dogpolice>	wtf is going on here.
<magellan>	a gulag prison
<wei2912>	dogpolice: i honestly don't know.
<adsc>	it was talk about google that started it all
<dogpolice>	conspiracy theories are stupid.
<adsc>	well, the good thing about google in this regard is that there is no conspiracy...everyone can see what they are doing
<wei2912>	dogpolice: from what i see, ams complains about google's nda, shit gets real
<wei2912>	i can't tell if the logs are satire or plain trolling
<rindolf>	wei2912: i think ams was serious.
<encapsulation>	ok
<wei2912>	rindolf: yes he was
<wei2912>	adsc's comments on "you agree that in case of death all your harvestable organs belong to google" certainly wasn't
<myrl-chan>	mein gott.
<myrl-chan>	i love you luajit
<ams>	there is little conspiarcy about google.
<adsc>	wei2912: i was serious, too, although my statements shouldn't be understood literally
<magellan>	wei2912: obviously not
<ams>	it is rather not conspiracy theorists that are the problem, but naive people.
<magellan>	lol here we go
<wei2912>	adsc: i'll assume that it's satire
<adsc>	i am usually trying to make my points in a way that is easy to ignore for those who choose so
<ams>	magellan: hm? so you mean that the leaked versions of googles nda where you are not allowed to talk about anything are just made up thingies meant to hurt google?
<magellan>	ams: no, i completely believe they have ndas
<myrl-chan>	wei2912: i'm going to try doing a project euler in assembly. lol
<magellan>	it's perfectly normal
<wei2912>	myrl-chan: o_o
<adsc>	myrl-chan: which number?
<myrl-chan>	adsc: just 5% difficulty. #92.
<ams>	magellan: they have ndas for ndas.
<rindolf>	myrl-chan: heh , nice, good luck!
<magellan>	lol no
<magellan>	just no
<myrl-chan>	e
<myrl-chan>	er
<magellan>	please stop
<myrl-chan>	on second thought, nah.
<_blizzy_>	well, that's the final straw.
<_blizzy_>	i can't trust cops.
<ams>	magellan: hm? so you really mean that you can talk about a nda that you have signed with google?
<magellan>	perhaps somewhere in their nda, it says you shouldnt mention you're under an nda, but you dont sign and nda for an nda
<rindolf>	_blizzy_: what are you talking about?
<_blizzy_>	rindolf, so much police brutality.
<ams>	magellan: yeah you do.
<myrl-chan>	i'll probably do another one. not this though.
<ams>	magellan: sweetie, i just quoted such an nda.  i suggest you back it up this time around.
<magellan>	yeah, bullshit. that is just retarded
<aidanh>	myrl-chan: is haskell gcd / have a runtime?
<ams>	magellan: well, google is evil.  it isn't anything new.  another good example is the siphoning it allowed for the tla's.
<ams>	magellan: very little conspiracy, simple infact truth.
<myrl-chan>	aidanh: i'm guessing that it is.
<myrl-chan>	aidanh: i don't really know though.
<adsc>	_blizzy_: where do you live?
<aidanh>	myrl-chan: ahh, seems that the ghc has a gc
<_blizzy_>	adsc, united states.
<adsc>	_blizzy_: oh...yeah, well, i guess i can understand you, then
<myrl-chan>	aidanh: i don't do memoization in haskell though.
<magellan>	ams: why is google evil? how has google personally griefed you
<aidanh>	myrl-chan: what does memoization in haskell have to do with having a gc?
<myrl-chan>	aidanh: nothing. i was thinking that the haskell topic was brought from me talking about pe.
<aidanh>	myrl-chan: ahh, nope
<ams>	magellan: actually, yes.  google is spying on you, me, and everyone else.  sending that data to the us goverment, and subverting eu and international law.  so yeah.  they have activley hurt me, and millions of oterh people.
<kidbeta>	ams and thats why the nsa has to find back doors in? because google is cooperating ?
<aidanh>	well, clearly that's a matter of opinion
<ams>	kidbeta: uhm, it doesn't need backdoors, google is activley working with them.
<kidbeta>	ams only as much as is legally required
<aidanh>	kidbeta: nsa would be grossly negligent if they depended on google for surveillance
<kidbeta>	aidanh of course they dont
<kidbeta>	they suck up everything
<ams>	kidbeta: uhm, no.
<darkcthulhu>	my location: bryan, united states
<wei2912>	honestly, blame your government
<kidbeta>	ams proof? because im sure if you actually had any you be'd black bagged faster then you can blink
<ams>	kidbeta: google, and snowden's leaks show it, explicitly allows control of their machines by the nsa.
<kidbeta>	ams show us
<ams>	kidbeta: i don't travel to the us.  so ...
<magellan>	define actively working.
<ams>	maybe i am black flagged, it is impossible to know.
<kidbeta>	ams you think the us's power stops at its doorsteps?
<kidbeta>	you can be black bagged anywhere
<magellan>	volutarily? or forcefully?
<ams>	kidbeta: uhm, now who is the conspiracy theorists.
<ams>	i doubt the us cares about me
<aidanh>	kidbeta: i meant that the nsa finds/implants back doors because that's their job; it's unrelated to google
<kidbeta>	ams exactly because you dont know shit
<kidbeta>	aidanh yeah obviously
<ams>	uhm, yeah, greenwald also doesn't know shit and his phone is tapped.
<wei2912>	lol
<kidbeta>	doesnt know shit -> has access to all of snowdens leaked documents
<kidbeta>	whut
<adsc>	_blizzy_: have you ever considered emigrating to another country?
<kidbeta>	is this real life?
<aidanh>	everyone's phone is effectively tapped, it's just a matter of degree
<_blizzy_>	adsc, no
<wei2912>	aidanh: seems like the only one making sense right now
<kidbeta>	aidanh i wouldnt say 'everyone' but a large amount of people sure
<ams>	aidanh: nod, and it is also trivial to tap them.
<ams>	for any of the telcos ..
<adsc>	_blizzy_: why not? there are countries where many of the state's core foundations are in better shape than in the usa
<_blizzy_>	adsc, i'm only 17
<ams>	kidbeta: i don't need access to all of the docs, i have read what ha s been published, that is sufficient.
<aidanh>	wei2912: probably only because i haven't said much yet :p
<adsc>	_blizzy_: oh, i see...yeah, it's kind of hard to build a new life in a foreign country at that age
<magellan>	ams: what's your search provider of choice
<ams>	magellan: i generally don't use a search engine.
<magellan>	ams: then how do you find things?
<wei2912>	ams: how do you survive?
<aidanh>	kidbeta: i'd definitely say everyone; not necessarily by us agencies but by country-local ones, although the us has probably wormed its way into most systems in the world to monitor people it finds 'interesting' more closely
<ams>	wei2912: i get more work done! :-)
<ams>	magellan: i use wikipedia sometimes, it is nice.  and some academic journals and such.
<kidbeta>	aidanh id say it would be nearly everyone
<aidanh>	well, destitute people in poorer countries are probably safe from that, but i'd say they have far bigger problems
<magellan>	ams: so you never use search engines
<dearhawk>	omfg, don't you hate it when you think you've solved the problem of the century .. and then realizes that you just have fallen to a trap and found nothing?
<aidanh>	i think everyone would hate that
<dearhawk>	what are you guys talking about? i just got here. something about search engines
<ams>	magellan: i didn't say that.
<ams>	magellan: i like ddg, maybe use it once twice a month..
<magellan>	ams: when you do use search engines, which one(s) do you use?
<wei2912>	dearhawk: no, you should have been suspicious and extremely critical of your own work from the start
<ams>	magellan: ddg
<wei2912>	that's why it's "the problem of the century"\
<aidanh>	dearhawk: ubiquitous surveillance and related topics
<magellan>	what's their search algorithm like? any good?
<wei2912>	magellan: not as good as google's :p
<dearhawk>	aidanh: well, the thing is that most of us are just... unimportant individuals. no human will ever look at our data, even if it's there.
<magellan>	haha
<dearhawk>	that being said... i myself always use tor to search.
<dearhawk>	i don't store cookies unless i need to etc.
<aidanh>	dearhawk: using tor is a good way to get yourself looked at
<dearhawk>	lol yes
<wei2912>	dearhawk: that's under the assumption the government doesn't become orwellian. i'm certain that it's easy to identify your opinions with algorithms
<magellan>	dearhawk welcome to the nsa watch list
<aidanh>	that too; your search patterns would probably be enough to deanonymize you within a single tor session
<aidanh>	i dare say this little freenode chat is enough to bump our scores up a few notches anyway
<wei2912>	s/opinions/identity/
<wei2912>	heh
<dearhawk>	but the thing is... nobody would bother to begin with. also, i'm not that shy. i'm willing to share whatever; just come at me (big)bro. i'm not pretending to be a super human that doesn't have to search for "how to cure retardation".
<dearhawk>	wei2912: yes, and that is the true danger with it.
<aidanh>	that's a pretty absurd counter-argument, to be honest
<dearhawk>	in my opinion. but it's a matter of preference. some sets the bar lower.
<aidanh>	why would they collect it if they weren't going to use it?
<aidanh>	if you're willing to be promiscuous with your information, that's ok, but other people won't like that idea
<aidanh>	and this all assumes that 'their' capabilities and motivations remain static, which is a very naive assumption to make
<ams>	magellan: no clu w what their search algorithm is .. the results vary.
<dearhawk>	aidanh: i mean, some even film their genitals and puts it on the web. that's what i mean by "preference". some just don't feel threatened by it.
<aidanh>	dearhawk: good for those people, i guess
<wei2912>	such information can be used against you. you can claim that you have done nothing wrong, but that's not the point -- the point is whether you will face consequences from it
<dearhawk>	aidanh: i'm just throwing in some reasonable arguments. but my _real_ personal standpoint is more like yours.
<aidanh>	dearhawk: well, i'm not sure that i agree that they're reasonable :p
<aidanh>	they sound somewhat convincing, but i think that's all
<magellan>	ams: what browser are you using?
<dearhawk>	wei2912: well, there's one thing there too. to be frank, what value is there really in some of the information we leak? sportsmen for example (in many cases) want their opponents to be aware of their powers.
<dearhawk>	aidanh: well, a few billion users online. yes, nazi germany would love to be able to do what the nsa and similar capabilities can do today.
<wei2912>	dearhawk: some information you leak out is of course useless (looking at pics of cats, for example), but if you were to leak out information that shows you may belong to a certain group of people that society or the government rejects, then you're screwed
<dearhawk>	wei2912: yes, and it's dangerous. won't necessarily happen, but shit can go crazy.
<aidanh>	in my (pretty limited) experience, shit always goes crazy without fail
<aidanh>	myrl-chan: starting out with lyahfgg... here we go.....
<aidanh>	holy hell... 900mb just for ghc
<dearhawk>	the dumb mass won't be of any use in this war. you'll have to hope that the "right" side of all powerful organizations wins.
<wei2912>	the dumb mass can, in fact, easily threaten your existence
<aidanh>	that's too simplistic; for any particular group there are always other groups that love them, and other groups that hate them
<dearhawk>	wei2912: yes. (related, but i haven't seen it yet https://www.youtube.com/watch?v=bfczg_qvst8 ).
<dearhawk>	wei2912: we don't live in a sustainable society yet
<wei2912>	aidanh: which comment are you replying to?
<dearhawk>	wei2912: we want to look hot and sexy, so we buy new clothes all the time instead of reusing the old. how do you get out of that?
<dearhawk>	and so forth
<wildchild>	hi. i'm learning algorithms and data structures. all the basic/elementary stuff. anybody know a good place to get data sets for the usual ones?
<wei2912>	wildchild: what data sets, and what usual ones?
<myrl-chan>	holy cow...
<aidanh>	wei2912: dearhawk's
<dearhawk>	wildchild: not sure if that's a course name you're speaking of. but the set of algorithms are infinite.. it's not something you learn
<myrl-chan>	divmod can be used in a state monad. this greatly simplifies things...
<wildchild>	wei2912:  the sorts (bubble, shell, quick) and searches (for starters) ?
<dearhawk>	or, you do. but.. there are infinite algorithms out there to learn, so to speak.
<myrl-chan>	i think.
<wei2912>	wildchild: i'm not sure of what data sets you're talking about. none of these involve training of models
<myrl-chan>	i'm not sure, really. lol.
<wei2912>	wildchild: are you looking for problem sets?
<wildchild>	wei2912: problem set is probably what i'm looking for. that sounds close
<camcam2>	so, i’m at kind of a weird point in my devlopment. i feel fairly proficient in java, little bit of c++, python, etc, but i haven’t touched any of the web stuff. should i learn javascript? should i learn node.js? can i learn both simultaneously by jumping right into node?
<wildchild>	do you get problem sets for the typical data structures, algorithms problems?
<wildchild>	i just don't want to think too hard everytime i have to initialize the ds with values
<wei2912>	wildchild: well... i guess you could ask us for some
<aidanh>	camcam2: depends what you want to work on
<camcam2>	aidanh: i have no idea. i just want to get a job programming.
<wei2912>	wildchild: mergesort looks at runs of one item long. natural mergesort exploits naturally occuring runs (increasing and decreasing). implement natural mergesort.
<wildchild>	camcam2: what do you do now?
<wei2912>	i know that open data structures has loads of problems on data structures, but i'm not sure of where to get problems on algorithms.
<wildchild>	wei2912: point noted
<nikio__>	whats a good gis channel on irc?
<camcam2>	wildchild: well, it’s been a crazy ride. i was in the navy, then i got out and got a bs in engineering on the gi bill, then i worked at a nuke plant for a couple years, then i looked around and saw everyone making a lot of money in software, which i had always had a peripheral interest in, so i quit my job and started working on a masters in cs
<wildchild>	wei2912: i have a whole bunch of books on algorithms. i just want to try working on implementations and profiling with data sets etc.
<aidanh>	camcam2: well, what have you been doing so far with regards to programming?
<aktx>	http://www.nbcsandiego.com/news/local/mysterious-lights-spotted-above-san-diego-301729021.html
<wildchild>	wei2912: so i don't think i am short of problems to implement. just wondering how to have fun while implementing
<camcam2>	aidanh:just doing the stuff with the courses so far at this point, so working with java and data structures and algorithms, a little bit of sql stuff, some haskell, some prolog, a c# mooc, a python mooc....
<camcam2>	aidanh: some programming contests
<aktx>	anybody live in san diego see this? ^
<dogpolice>	aktx: are you really serious right now.
<aktx>	dogpolice, nbc news
<_blizzy_>	mfw this website just emailed me my password as a reminder.
<_blizzy_>	in plain text.
<dogpolice>	aktx: my bloody mind.
<aktx>	the video footage has me stumped
<dogpolice>	window.
<dogpolice>	possibly heat distortion and mirroring.
<aidanh>	compu: a mooc?
<aidanh>	camcam2: ^
<exio4>	massive open/online course
<aidanh>	ahh
<exio4>	coursera, edx, udacity, ...
<aidanh>	that.... doesn't help all that much
<aidanh>	oh
<camcam2>	the freebies on edx and mit ocw
<aidanh>	camcam2: what sort of stuff have you made?
<wildchild>	camcam2: figure out a niche  or a role you'd want to stick to. systems/network - related stuff, web development, general application development, embedded development, qa etc. and then try to refine your skill set for that area is what i would recommend. that way you won't be wasting time learning stuff you won't need. web dev is all over the place. you need to learn stuff all the way from databases to systems to javascript to qualify to be a fulls
<wildchild>	tack programmer
<_blizzy_>	or you could be a backend or frontend
<_blizzy_>	or be both, like me. c:
<aidanh>	_blizzy_: why both?
<_blizzy_>	aidanh, why not?
<_blizzy_>	i like both.
<camcam2>	aidanh:and that’s my problem. i have no personal projects other than schoolwork.
<_blizzy_>	camcam2, do you have a github?
<aidanh>	_blizzy_: well, i personally can't stand working with front-end webdev work
<_blizzy_>	if you don't have a github account
<_blizzy_>	you should git one
<aidanh>	camcam2: that's fine, what sort of projects did you do?
<camcam2>	_blizzy_: i do. it occured to me i should start saving my schoolwork.
<wei2912>	_blizzy_: bad pun
<_blizzy_>	wei2912, c:
<_blizzy_>	camcam2, oh.
<_blizzy_>	wei2912, you're right
<_blizzy_>	i'll rebase my jokes next time
<camcam2>	aidanh:oh, the most complete one was a java application that performed sql queries and built a database from parsing text files
<_blizzy_>	wow, you seem really commited to slapping me, aidanh.
<camcam2>	aidanh: i’ve also written some programming contest problems
<aktx>	im studying data structures and algorhitms for my upcoming on-site interview, but i dont think that will help me much...
<_blizzy_>	based on my github, idk if people would hire me for a junior job
<camcam2>	aidanh: and slved a few problems in haskell, prolog, antlr…. also built an assembler in java that converted from assembly to machine
<camcam2>	aidanh: but that’s just over the limited isntruction set that we had for that class
<aidanh>	camcam2: well, as wildchild said, try different things; try developing desktop apps or websites for example, or if you've done electrical engineering you might want something related to that
<wei2912>	_blizzy_: stop branching off from the topic
<_blizzy_>	wei2912, lol, i'm just pushing your limits
<wei2912>	_blizzy_: go fetch that ball you dog
<myrl-chan>	ugh.
<fashioncc>	hello , in c i have fread a fp into a buffer
<aidanh>	camcam2: it sounds like your courses don't have much focus; while it's good to have an understanding of lots of different areas of cs in order to get much done, it's also important to focus on a particular area
<reynir>	hi aidanh who i don't know after all :d
<wei2912>	_blizzy_: and put it in your nice little stash
<myrl-chan>	i don't know how to make <*>
<myrl-chan>	<.<
<camcam2>	honestly i just want some job with some degree of security, good insurance, and paid vacation and a 401k.
<camcam2>	ha
<_blizzy_>	wei2912, you win.
<aidanh>	reynir: heh, hello :)
<fashioncc>	0x5cc11300 is the buf[0] to buf[3]
<wei2912>	_blizzy_: haha
<fashioncc>	how do i get that?
<aktx>	dogpolice, it was witnessed by a news crew, and several people from across san diego. so it's definitely not a reflection on glass.
<fashioncc>	aktx: oh yes the ufo report
<_blizzy_>	its aliens.
<fashioncc>	i saw it on /x/
<aidanh>	_blizzy_: every bad pun deserves a bit of slapping :p
<aktx>	fashioncc, it was all over 4chan yesterday
<_blizzy_>	aidanh, :p
<aktx>	and reddit
<wei2912>	_blizzy_: all i did was to cherry-pick commands from the manpage
<fashioncc>	it's probably nothing
<_blizzy_>	oh god. the puns.
<fashioncc>	so how do i get 0x5cc11300?
<wei2912>	well, i guess i'll checkout now
<aktx>	fashioncc, ppl say it's either stationary drones, a large blimp, weather balloons, or holographic projections from the military
<wei2912>	glad i showed you the way
<camcam2>	well, in your opinion, what area of focus would provide the best opportunity to get work in a big company and/or government?
<wei2912>	time to clean my house
<fashioncc>	aktx: it's a tower
<fashioncc>	a crane, rather
<aktx>	well, that must be a really tall crane
<_blizzy_>	camcam2, you shouldn't focus on the money
<_blizzy_>	but what you like
<aktx>	because that thing whatever it is, is at least cruising altitude
<fashioncc>	so how do i get 0x5cc11300 if it's buf[0] to buf[4] in c
<aidanh>	camcam2: if you want to work for the government, have good connections and be incompetent
<camcam2>	right, but i know i like the problem solving and programming aspect already. so from here i just want security and money. i don’t care about starting my own company or becoming a billionaire.
<aidanh>	in all seriousness though, if you're good at cs, you're pretty much guaranteed to get a good job somewhere
<wei2912>	_blizzy_: well, i apologize for being a git just now, but i couldn't think of any other way to use "fetch" and "stash"
<camcam2>	like 75k a year and decent insurance. just enough to provide for my familty comfortably without sacrificing all of my free time
<_blizzy_>	wei2912, it's ok. :d
<_blizzy_>	camcam2, hmm.
<_blizzy_>	web dev is big right now.
<_blizzy_>	you'll probably make more money going full stack.
<camcam2>	full stack means being competent in everything?
<_blizzy_>	but be careful, full stack is a windy road.
<magellan>	crazy money for full stack devs
<_blizzy_>	camcam2, give or take, yes.
<exio4>	web dev is what people called slavery
<aawe>	full stack means "i know both php and javascript, lol"
<magellan>	mind you, you can still make a killing whether you're an awesome front or back end dev
<camcam2>	ok, so back to that and getting my toes into the javascript thing… can i skip javascript intros and go right into node?
<reynir>	there's also other things than web development
<aidanh>	and a good thing too
<_blizzy_>	aawe, it's more than that.
<aidanh>	camcam2: not really no
<_blizzy_>	don't skip js
<_blizzy_>	you won't know front end
<_blizzy_>	unless you wanna go backend only.
<_blizzy_>	front end is basically js, html5, and css3.
<aidanh>	_blizzy_: so what constitutes full stack, in your opinion?
<camcam2>	oh ok, i didnt realize that.
<ams>	magellan: i normally use eww in emacs.
<_blizzy_>	aidanh, i mean, like, aawe was right, but it's not just only php
<_blizzy_>	like it could be js + ruby, or js + python, etc.
<_blizzy_>	i personally use ruby, node, python, c#, go, and php
<ams>	magellan: i really don
<camcam2>	html/css seems so trivial. i mean, do i really need to be proficient at designing webpages from scratch? i can understand the code just fine, isn’t that enough when most pages are made with dreamweaver or whatever? do i need to have that stuff memorized?
<_blizzy_>	in order of proficiency.
<aawe>	_blizzy_: i said it tounge-in-cheek. people call themselves full-stack developer because they write shitty php web apps
<ams>	magellan: t browse the web.. most of what i read is articles, and stuff which i prefer printing anyway
<_blizzy_>	aawe, oh.
<reynir>	_blizzy_: how do you like go?
<_blizzy_>	i've wrote a php app. c:
<aawe>	_blizzy_: i have, too
<camcam2>	is php still mustknow?
<_blizzy_>	reynir, it's going great atm.
<aawe>	camcam2: no, php sucks
<_blizzy_>	jokes aside, i like it.
<wei2912>	camcam2: honestly, designing a page from html and css results in a way cleaner solution that is actually maintable and easily extensible
<reynir>	camcam2: no!
<magellan>	ams: fair enough. i think i'd go mad using eww
<wei2912>	camcam2: sorry, from scratch
<_blizzy_>	camcam2, if you want to learn php, go for it.
<wei2912>	camcam2: also, no, php is not a must know
<_blizzy_>	php still have a high market share.
<_blizzy_>	and is still popular.
<aawe>	php is hell to worrk with
<_blizzy_>	if you learn php for one thing, learn it for laravel
<aawe>	learn ruby or python instead
<_blizzy_>	or, learn php and ruby/python
<ams>	magellan: for the usual new outlet reading i find it fine .. but maybe if one uses web stuff alot it might be annoying.
<aidanh>	_blizzy_: i've always though backend encompassed system administration as well
<_blizzy_>	aidanh, oh.
<_blizzy_>	i can go from start to deploy.
<aidanh>	... i have no idea what that means
<reynir>	is full stack also not system administration as well?
<_blizzy_>	start, as in like the idea
<_blizzy_>	to deploy, as in like making the webapp live.
<ams>	magellan: i use newticker in emacs as well for the occasional news stuff ..
<_blizzy_>	full stack is a flexible term.
<_blizzy_>	also, people still use dreamwaver?
<reynir>	is it like "cloud"?
<ams>	magellan: and some usenet groups, but meh, mostly infested troll holes.
<_blizzy_>	eh.
<_blizzy_>	idk really.
<magellan>	ams: considering i work as a front end dev, yeah lol
<_blizzy_>	if you're learning programming, don't go with vim first.
<_blizzy_>	c:
<aidanh>	but do pick it up along the way, of course... or emacs i suppose
<_blizzy_>	yeah, just learn the basics
<_blizzy_>	that's all i know, and i use sublime.
<aidanh>	my classmate who sits next to me knows the basics...
<reynir>	rob pike is rude https://github.com/robpike/filter/pull/1
<aidanh>	watching him use vim is the most painful thing i do every week
<myrl-chan>	fucking shit.
<myrl-chan>	how does this work
<reynir>	aidanh: heh, i know that feeling
<wei2912>	reynir: lol
<aidanh>	reynir: it's basically like watching someone use notepad while forbidden from touching the mouse
<aidanh>	it's absurd
<myrl-chan>	...
<reynir>	i was also on the other end once. me and two other students were working on a project, and we decided to do pair (or rather triple) programming. the others use emacs so rather than starting a new editor every time i used emacs :v
<myrl-chan>	why isn't it updating.
<myrl-chan>	my mind is fucked.
<myrl-chan>	hmmm
<ams>	reynir: what is the package comment?
<myrl-chan>	ugh.
<myrl-chan>	am i doing something wrong
<myrl-chan>	clearly, once you start asking that, the answer is yes...
<reynir>	ams: basically "you shouldn't use this" https://github.com/robpike/filter
<reynir>	and that you should use "for" loops
<reynir>	lol
<anj7>	hey anyone who believes in jesus can join me at ##godhelps
<henke37>	it's a nice story
<adsc>	i hate errors in libraries that make no god damn sense
<henke37>	we all do
<adsc>	hmmmm
<myrl-chan>	...
<myrl-chan>	fucking shit.
<myrl-chan>	well, at least i learned how to use divmod with state..
<reynir>	adsc: what's the error?
<adsc>	it seems to be an apache problem
<adsc>	for some reason, installing php5-curl package didn't enable it in apache
<webstrand>	a finite state machine consumes a stream of 'events' which it uses to transition between states. if, during a transition, the fsm were to push an event back onto the stream, is it then a pushdown automaton?
<aidanh>	webstrand: a pda is just a dfa with a stack
<rindolf>	hi all! sup?
<aidanh>	the stack and the alphabet of symbols that can be pushed onto and popped from the stack are separate from the alphabet of input 'event' symbols
<ams>	reynir: ah
<ams>	reynir: well, pike isn't all what he makes himself to be ..
<ams>	reynir: horrible code to ...
<webstrand>	aidanh: i understand. is the ability to push new symbols onto the input stream equivalent to having a seperate stack?
<aidanh>	webstrand: you cannot push new symbols onto the input stream
<reynir>	ams: yea, it's not pretty
<adsc>	hello rindolf, how's the evening coming along in the holy land?
<rindolf>	adsc: fine, fine. i've felt sick today.
<ams>	reynir: it looks like all code i have seen from pike, and the other unix beards... 60s assembly style.
<rindolf>	adsc: but now i feel much better.
<reynir>	ams: i was struggling a bit with one of the tests - i had the argument in the wrong order, but i only got an opaque runtime error.
<reynir>	arguments*
<adsc>	rindolf: that's good to hear, the opensource community doesn't want a stalwart warrior like you to die from a random sickness
<reynir>	the joys of runtime type checking in a statically typed language :p
<rindolf>	adsc: heh. :-)
<reynir>	i'm glad i don't write go
<aidanh>	webstrand: the reason this is so is fairly trivial; given a state transition that would push any given symbol onto the input stream 'stack', the next symbol is already known (the one you just pushed), therefore the next state transition is known already, and you can just transition without needing to push and pop from the input
<rindolf>	adsc: i also discovered a great tune on ccmixter.org .
<tsousa>	in a good day on average on many lines of code you guys write?
<ajkthx-work>	bout tree fiddy
<ams>	reynir: yeeah, well. go isn't a very good language..
<reynir>	tsousa: about 150 i guess
<webstrand>	aidanh: ah, that makes sense, thanks
<rindolf>	tsousa: there was one weekend where i added something like 2,000 lines and removed 1,000.
<dogpolice>	https://youtu.be/4qwtbbk7_4q
<ams>	rindolf: nice.
<rindolf>	ams: heh, yes.
<aidanh>	webstrand: that's not the only reason; e.g. nfas are equivalent in power to dfas, but we keep them around just because they're useful; a dfa that can treat its input as a stack... isn't all that useful really
<tsousa>	rindolf, 1000 lines of new code?
<aidanh>	trivially implementable as a pda anyway
<adsc>	tsousa: depends on the state of the project
<adsc>	tsousa: in the beginning, i usually write a lot of code and progress is fast
<adsc>	tsousa: when features become more complex, speed goes down
<tsousa>	adsc, what do you consider complex?
<adsc>	tsousa: anything that is not simple crud
<adsc>	tsousa: sometimes even crud if the relationships between entities and workflow overlap are many
<reynir>	tsousa: why do you ask btw?
<tsousa>	reynir, just wondering if i coded in a slow pace.
<aidanh>	tsousa: slow and good is better than speedy and shitty
<reynir>	tsousa: how much do you write yourself= :)
<adsc>	yeah
<adsc>	just keep at it and your speed will improve
<ams>	1kloc is not that much for many generic problems that one has solved several times over.
<tsousa>	reynir, today only 100 new lines
<adsc>	what are you writing?
<adsc>	100 loc can be good if it's complex stuff
<ams>	1 loc can be good if it is complex stuff..
<adsc>	per day? hardly
<tsousa>	i am writing an application to manage a warehouse. i am implementing the linked lists
<adsc>	implementing? why are you not using one from a library?
<myrl-chan>	any line of code is good since it indicates progress....
<guest42917>	hello. my website is periodically infected by trojanjs/redirector. what may be the cause ? old apache ? (my php files dont use user input so i dont know how its exploited)
<tsousa>	adsc, no, i am using c
<ams>	myrl-chan: i prefer to count progress by removing lines.
<myrl-chan>	tsousa: to manage a warehouse?
<adsc>	c has no linked list libraries?
<myrl-chan>	it does.
<adsc>	i know
<tsousa>	i could use glibc but it's for college so no libraries.
<adsc>	ah, an exercise
<tsousa>	no an exercise, a project
<adsc>	uh, if it's not an exercise, why the no libs requirement?
<tsousa>	they are brain dead.
<myrl-chan>	this sounds so simple...
<tsousa>	it's simple.
<aidanh>	hopefully you're permitted to use glibc
<adsc>	tsousa: you shouldn't listen to brain dead people
<rindolf>	guest42917: it could be an exploit in php too.
<myrl-chan>	adsc: ++.
<tsousa>	adsc, yeh. but if the brain dead people are my professors i have to do what they say
<tsousa>	:/
<aidanh>	eh, you should listen to them, and try not to be like them
<adsc>	tsousa: no, you don't
<adsc>	tsousa: they don't rule you
<myrl-chan>	(they kinda do.)
<adsc>	bullshit
<myrl-chan>	it's not.
<tsousa>	indeed. but at least in this project and in the course i have to
<adsc>	in my time i called many a professor on his crap and always won
<tsousa>	at home i do as i please
<myrl-chan>	being expelled from your class would give you bad record.
<adsc>	if necessary, i took it to the department head
<guest42917>	rindolf: my php code doesnt take any input so it cannot be injected -.-
<tsousa>	adsc, did cs?
<adsc>	there's nothing worse than teachers not doing their job
<rindolf>	guest42917: there may still be a different kind of exploit.
<adsc>	tsousa: just ask your professor again why you can't use libs and if he doesn't have a satisfactory answer, tell him that you are going to use libs anyway
<myrl-chan>	tsousa: what are you doing anyway?
<myrl-chan>	something about warehouse and linked list?
<tsousa>	myrl-chan, yes a software to manage wareshouses
<myrl-chan>	tsousa: i don't even know how a linked list is relevant there.
<tsousa>	i need linked lists too keep track of incomming and outgoing products
<tsousa>	client lists
<tsousa>	and stuff like that
<myrl-chan>	tsousa: why would you need a linked list over <x> structure?
<tsousa>	why not'
<aidanh>	myrl-chan: perhaps as a bastardized implementation of a queue... still weird though
<myrl-chan>	aidanh: exactly!
<myrl-chan>	aidanh: that's my problem!
<gedamo>	sounds more like a database
<aidanh>	myrl-chan: oh?
<myrl-chan>	aidanh: a queue and a linked list together is a recipe for disaster.
<aidanh>	myrl-chan: probably yeah
<myrl-chan>	aidanh: either you get an constant enque and a linear dequeue or the other way around.
<myrl-chan>	of course, you already know that.
<myrl-chan>	enqueue*
<rindolf>	myrl-chan: you can get an o(1) of both
<myrl-chan>	rindolf: not if you're using a linked list.
<myrl-chan>	though!
<rindolf>	myrl-chan: yes, you can - by keeping track of the last element.
<myrl-chan>	we could use the double linked list trick...
<myrl-chan>	rindolf: i guess that works too.
<myrl-chan>	would be simpler if it was a doubly linked list...
<adsc>	what if a customer leaves the queue because he decided it's not worth to wait?
<myrl-chan>	adsc: well, fuck him for destroying shit.
<adsc>	hehe
<adsc>	a customer left the queue
<adsc>	the warehouse is burning
<myrl-chan>	or you can use any other data structure which supports deletion.
<adsc>	please panic and wait for the firemen to arrive
<adsc>	oh, a linked list supports deletion, just not in o(1)
<myrl-chan>	adsc: either way, you can have a second queue.
<myrl-chan>	which will be the "deleted queue"
<adsc>	how does that help?
<myrl-chan>	either way, using a linked list for a queue is shit.
<myrl-chan>	except for the double stack/double linked list method.
<myrl-chan>	(linked lists are stacks! :d)
<aidanh>	myrl-chan: heh, yeah as rindolf said it's doable, but in general the two aren't that well matched; ring buffers are nicer for queues
<myrl-chan>	aidanh: aren't ring buffers circular linked lists?
<myrl-chan>	well, not necessarily a linked list.
<aidanh>	myrl-chan: no
<ams>	400 tests wriutten since yesterday...
<myrl-chan>	aidanh: yeah, ring buffers are better.
<aidanh>	myrl-chan: well, it's not the most concretely-defined term; to be more precise, i prefer array/buffer-backed queue implementations
<aidanh>	as always, it depends though; priority queues may get a performance boost from using linked/skip lists, etc.
<ams>	and only 11 fail! woo!
<aidanh>	~~!!!!~~ new highscore!!! ~~!!!!~~
<myrl-chan>	aidanh: no skipped list please.
<myrl-chan>	s/skipped/skip/
<myrl-chan>	random access lists are better. :<
<aidanh>	myrl-chan: got a link? google isn't spitting out much
<myrl-chan>	aidanh: skew binary list.
<adsc>	ams: unit tests?
<myrl-chan>	aidanh: tl;dr "tree and list had a drink in a bar... got drunk, and fucked"
<myrl-chan>	aidanh: basically a linked list of trees.
<ams>	adsc: aye.
<myrl-chan>	aidanh: what language do you know? i can try moving my haskell implementation there.
<ams>	ok ..
<ams>	 (eql (abs -0.0) -0.0) =>  true
<ams>	that has to be a typo ..
<myrl-chan>	ams: eh.
<myrl-chan>	ams: doesn't floating point define -0 == 0?
<adsc>	that's a weird assertion indeed
<ams>	myrl-chan: no.
<ams>	why would it?
<myrl-chan>	"according to the standard, negative zero exists but it is equal to the positive one."
<ams>	whcih standard?
<myrl-chan>	ieee 754. probably.
<aidanh>	as far as i'm concerned the negative/positive zero thing is just fucking weird
<ams>	the world isn't ieee 754 you know..
<myrl-chan>	ams: it should be. :p
<ams>	not really
<ams>	i need better precision than ieee 754 allows
<myrl-chan>	ams: ieee754 defines up to 128-bit floats.
<ams>	 if an implementation supports positive and negative zeros as distinct values, then (eql 0.0 -0.0) returns false. otherwise, when the syntax -0.0 is read it is interpreted as the value 0.0, and so (eql 0.0 -0.0) returns true.
<ams>	lame.
<ams>	myrl-chan: still to low.
<aidanh>	myrl-chan: uhh... a few.. lua's good!
<reynir>	ams: what about comparing nan to nan?
<myrl-chan>	aidanh: good. my first language. :d
<ams>	myrl-chan: errors can propagae over multiple iteration of operations.
<myrl-chan>	reynir: nan != nan.
<ams>	reynir: nan?
<ams>	i don't have no stinking nans
<myrl-chan>	reynir: for one, nan, in ieee 754 has many different values.
<reynir>	myrl-chan: i know, i'm asking if the language implements that as well
<myrl-chan>	reynir: oh.
<myrl-chan>	reynir: okay~
<reynir>	heh
<ams>	i don't have stinking nans .;..
<reynir>	my professor showed nan != nan in javascript as an example of a "wat"
<ams>	i do have fixed one test case, so only 10 to go..
<myrl-chan>	ams: i guess it's useful for -0 != 0. considering if they're equal, then `y == z; x/y == x/z` would break down.
<ams>	no it wouldn't
<myrl-chan>	ams: yes it would.
<ams>	uhm, no.
<reynir>	fite!
<ams>	0/0, -0/0, ... are all division by zero, so it doesn't really matter.
<myrl-chan>	no, really, except if you'll do a "division by zero error"
<ams>	which is exactly what happens!
<myrl-chan>	ams: well, inf is also another possibility.
<ams>	no.
<ams>	it is never another posibility.
<ams>	dbz is the answer.
<myrl-chan>	i guess.
<ams>	so says the standard.
<myrl-chan>	which standard?
<ams>	the only standard, the truth, the bible, our holy book, the common lisp standard
<myrl-chan>	hahahaha.
<ams>	myrl-chan: you dare to laugh at the holy book?
<myrl-chan>	ams: sorreh. :c
<xeno_>	ams: guy steele's "common lisp: the language"? ...or the actual costly ansi standard?
<xeno_>	i haven't bought steele's book, since it has generally gotten pretty mediocre reviews...
<myrl-chan>	though, i'm quite intrigued that a language also defines the floating point standard. i'm guessing that it also consists of implementation details?
<myrl-chan>	aidanh: ping.
<ams>	xeno_: well, i like cltl better ..
<ams>	xeno_: but the real spec is also good.
<ams>	xeno_: where did it get mediocre reviews? it is a really good book ..
<xeno_>	amazon
<ams>	myrl-chan: ?
<ams>	myrl-chan: cl leaves most details up to the implementaiton.
<xeno_>	ams: ...mediocre, as in 4/5 :) - so well... not crap...
<xeno_>	ams: the 1 and 2 star reviews are of course useless though...
<ams>	mm
<aidanh>	myrl-chan: pong
<ams>	imho it is one of the best language books ever written.
<ams>	but maybe i am biased ..
<ams>	tcpl is imho crap ..
<myrl-chan>	aidanh: i'm trying to make it look like haskell, would that be fine/
<myrl-chan>	aidanh: i can also write it using my own coding convention in lua, but it probably won't resemble the original, and neither would it use a linked list(i'll just use a table, emulating a linked list.)
<aidanh>	myrl-chan: don't worry about it, i can just go with whatever you've got
<aidanh>	is it something like an in-order tree traversal?
<myrl-chan>	aidanh: it's a list of trees.
<myrl-chan>	aidanh: and if, you insert, there are 2 trees of the same size, you merge those 2 trees with the insert value as a new node.
<myrl-chan>	s/a new/the root/
<aidanh>	myrl-chan: oooooo that sounds kind of nice
<aidanh>	sounds like it could become unbalanced fairly quicky though
<myrl-chan>	aidanh: basically, this has every advantage of a linked list/stack. cons and push are o(1), head/peek is o(1), and tail/pop is o(1).
<myrl-chan>	aidanh: but there are added benefits. due to the fact that this is a list of trees, indexing is instead o(log n) rather than o(n).
<myrl-chan>	aidanh: skew binary is best waifu. it makes everything better. binomial heaps and random access lists are derived from skew binary.
<aidanh>	myrl-chan: how would indexing be o(log n)? each tree root stores the number of nodes in the tree?
<pyon>	aidanh: each tree can only possibly have (2^(n+1) - 1) nodes, for some n.
<pyon>	aidanh: so you either store "n" or store "2^(n+1) - 1" directly.
<myrl-chan>	pyon to the rescue! :d
<pyon>	aidanh: actually, the latter is more convenient, because it reduces the calculations required for indexing to mere additions and subtractions.
<aidanh>	pyon, myrl-chan, hmm, any paper/article on this?
<myrl-chan>	aidanh: yeah.
<myrl-chan>	pyon: also, i was able to use state monad in action today.
<myrl-chan>	"use" and "in action" oh, how i love redundancies.
<rindolf>	pyon: hi, sup?
<aidanh>	myrl-chan: any link then? :p
<pyon>	rindolf: c#ing a little. you?
<rindolf>	pyon: c#?
<pyon>	aidanh: not a paper - chris okasaki's book.
<pyon>	rindolf: yes.
<pyon>	myrl-chan: "state monad in action" --> cool!
<rindolf>	pyon: today i felt kinda sick.
<pyon>	rindolf: oh. :-(
<pyon>	rindolf: a cold?
<rindolf>	pyon: now i feel much better though - maybe it was a 24 hours virus.
<rindolf>	pyon: felt like a flu, yes.
<pyon>	rindolf: ah!
<myrl-chan>	pyon: random access lists are in chris okasaki's book, right?
<pyon>	myrl-chan: they are.
<myrl-chan>	aidanh: ^
<rindolf>	pyon: and i finished watching the first four seasons of my little pony.
<pyon>	myrl-chan: what i'm trying to make is something like random access lists, but which supports o(log n) splitat.
<rindolf>	pyon: did i tell you about my dentist appointment?
<rindolf>	pyon: what are you writing in c#?
<pyon>	rindolf: you didn't.
<myrl-chan>	pyon: yeah.
<rindolf>	pyon: ah, i had one yesterday.
<myrl-chan>	pyon: also, i just realized today that i don't know how to do updates at all.
<aidanh>	pyon, myrl-chan, allllright, thanks!
<pyon>	rindolf: a proof of concept that using c# won't be too different from what what we already do in vb6.
<pyon>	rindolf: ah.
<rindolf>	pyon: nice!
<rindolf>	vb-sicks.
<pyon>	heh
<rindolf>	pyon: :-)
<rindolf>	pyon: i also discovered a great track on ccmixter.org .
<rindolf>	well, great imho.
<pyon>	myrl-chan: updating a ra-list begins the same as lookup: you locate a tree within the forest, and then a path down to the subtree whose root is the desired element.
<pyon>	rindolf: what track?
<myrl-chan>	pyon: yeah, but i don't know how to update a tree either. :p
<dna113p>	does anyone has massive trouble with the word "totals" ? i type it as "toatls" more often than not. so much so that half the time my code will work properly because i typoed the same multiple times.
<myrl-chan>	pyon: the only way i can think of is to reconstruct the whole tree. which would be an o(n) operation, where n is the size of the tree.
<pyon>	myrl-chan: in the simplest case, if you want to update the root... well... you create a new tree with the same branches, but a different root.
<pyon>	myrl-chan: you don't need to rebuild the whole tree.
<myrl-chan>	pyon: yeah.
<pyon>	myrl-chan: newroot (t a x b) x' = t a x' b
<rindolf>	pyon: this one - http://ccmixter.org/files/destinazione_altrove/49997 - let me know if you like it.
<rindolf>	it's also cc-by.
<pyon>	myrl-chan: "a" and "b" can be arbitrarily complex subtrees - they don't need to be rebuilt.
<pyon>	rindolf: checking.
<myrl-chan>	pyon: i see.
<generalvagueness>	dna113p, not me, my big thing is "just"
<}>	can hirschberg's algorithm be used to find the optimal string sequence to edit based on a pattern? i.e. string="this is an algorithm", pattern="is not an", result="this is not an algorithm"
<myrl-chan>	pyon: i'm currently sleepy right now, can you me the whole code for updating a node of a certain key?
<pyon>	}: optimal according to what metric?
<generalvagueness>	i have like 3 auto-correct things in this client that actually fix spelling and jsut->just is one of them
<}>	pyon, smallest edit distance
<}>	pyon, smallest series of operations to transform string to result based on pattern
<archilius>	sup everyone.
<pyon>	}: anyway, wikipedia says the answer to your question is "yes".
<}>	pyon, i didn't fully understand it, it says "sequence alignment"
<}>	so i was not sure
<pyon>	}: "hirschberg's algorithm computes the optimal alignment of two strings, where optimality is defined as minimizing edit distance."
<}>	pyon, what page is that on? i'm reading this http://en.wikipedia.org/wiki/hirschberg%27s_algorithm
<pyon>	}: the page on "edit distance".
<}>	oh
<}>	ohh
<}>	alright then, thank you
<}>	that edit distance page is only in english, no one made a translation yet...
<pyon>	}: well, that wouldn't annoy me - i prefer reading articles on math and cs in english.
<}>	it's just that i initially searched in a different language, and found hirschberg algorithm, then searched for it and found the wikipedia page
<njcomsec>	hello interpoos
<darkcthulhu>	i just attended a talk by amd's research division. they're doing some interesting things!
<myrl-chan>	darkcthulhu: aren't you with nvidia?
<darkcthulhu>	myrl-chan, i used to be. now i'm a master's student.
<myrl-chan>	darkcthulhu: cool. :o
<cylon512>	any hint on interesting things?
<darkcthulhu>	the unified memory model, hsa and their vision of huma moving forward.
<darkcthulhu>	most of all, i liked how much easier it is without cuda's explicit device-host copying of data and they showed off some impressive stats with the number of kernels they dispatched and ran per second.
<archilius>	hey anyone agr
<njcomsec>	im making a game. i currently have a tilemap 100x100, and tilecomap[100][100][0]; [xcoordinate][ycoordinate][tiletypehere], so when i render the map in vision field, i just check what tile[][][tile] to draw at the coodinate...... but now i want to make a procedural map which starts at 0x0(xxy) and have almost infinite coordinates(like minecraft) going minus or above zero.....
<njcomsec>	but i cant think of a collection which will allow me to easily map the tiles xy coords  for this
<njcomsec>	so should i abandon the tilecomap colection all together, and just use an entity map?  instead, which shows the entity and it's coordinates
<archilius>	anyone around here know a good place to start to learn reading code. i mean reading and understanding whole code from the project?
<cylon512>	darkcthulhu: thank you, do they have youtube channel or something with video on subjects or it's just internal talks?
<}>	archilius, just find an open source project you're already using, and patch it
<}>	archilius, that's the best way to learn
<pyon>	so, i have a very rough idea of what i should do, but the details aren't entirely clear. i want to modify the b+ tree insertion algorithm so that i can insert a contiguous sequence of elements at once. the sequence is already ordered. furthermore, i know that no b+ tree element element falls within [min(sequence) .. max(sequence)].
<njcomsec>	i think writing code is the best way to learn how to read it
<darkcthulhu>	cylon512, this one seemed internal. they were looking for phds and postdocs to intern with them. it had some incomplete work for example. not sure if it can be found online.
<pyon>	so it should be a "straightforward" modification of the algorithm for inserting just one element.
<pyon>	(for some value of "straightforward".)
<archilius>	} the main problem is most of it goes over my head. i am just a student and not used to such large blocks.
<darkcthulhu>	cylon512, you could look for some talk on chapel by them. they covered a part of that in the talk.
<darkcthulhu>	pyon, couldn't you build a smaller tree and then splice two b+ trees?
<pyon>	i'm not sure but i think merging b+ trees isn't particularly easy.
<darkcthulhu>	that comes to mind because of your constraint on the range of values. splicing with a-b trees is o(h1 -  h2)
<pyon>	ah!
<pyon>	what i wanted to do is something like this: (1) locate the leaf where the sequence must be inserted. (2) if the leaf has enough room for the sequence, just insert it there. (3) otherwise, split the leaf and allocate enough new leafs in between them to store chunks of the sequence.
<pyon>	for each new leaf, including one of the halves of the original leaf that we split, we need to insert a node in the parent.
<pyon>	which gives us a new sequence.
<pyon>	(to insert at the upper layer.)
<pyon>	but the devil is in the details!
<darkcthulhu>	pyon, don't you wish we only had case 1's :)
<darkcthulhu>	1 and 2 rather.
<ajkthx-work>	how many of you are actually obese neckbeards
<darkcthulhu>	oh wait. i'm neither
<darkcthulhu>	pyon, why are you inserting at the leaf? shouldn't you be inserting at a higher level?
<darkcthulhu>	because all leaves need to be a the same height. or maybe i'm misunderstanding
<darkcthulhu>	the splicing algorithm does that. inserts at the appropriate height, and then deals with splits all the way up and in the worst case, splits the root and adds a  level of height.
<pyon>	darkcthulhu: b+ tree insertion and deletion always begins at the leaves, and then bubbles upwards.
<pyon>	ok.
<pyon>	time to properly understand the splicing algorithm, then.
<milos>	lol this question -> http://serverfault.com/questions/687017/i-want-to-convert-ms-word-file-and-styles-to-clean-html-using-php
<pyon>	milos: checking.
<pyon>	lmao
<milos>	terrible
<darkcthulhu>	i hope for his sake that he is trolling.
<pyon>	who knows.
<darkcthulhu>	i want to convert my nosql to openmp code using excel vba. please help.
<milos>	it almost sounds like spam you get in e-mail except this one doesn't ask for money it asks for converting ms word file into clean html using php
<archilius>	he must be trolling. how can such people exist in real life ?
<pyon>	what's the point to trolling stack exchange sites?
<archilius>	i want to convert my windows into a mac for free. please help.
<pyon>	trolling ##programming i can understand.
<darkcthulhu>	i want to download ram, please advise.
<pyon>	but trolling stack exchange? what's to be gained from that?
<milos>	i need to receive help but i need help to do so. please help.
<darkcthulhu>	perverse pleasure from wasting people's time?
<archilius>	and something for discussion on irc
<pyon>	darkcthulhu: it doesn't take much time for a stupid question to get downvoted to oblivion and then closed.
<pyon>	usually less than 3 minutes.
<pyon>	[well, depending on how big the community is for that particular site.]
<}>	pyon, do you happen to know that from personal experience? :-d
<milos>	woah that nick
<darkcthulhu>	pyon, yeah.. except during the slow hours. the new move they came up with which gives the gold badge holders more powers in closing questions was a good idea.
<pyon>	}: i don't ask stupid questions deliberately *there*.
<}>	it was just a joke
<pyon>	darkcthulhu: yeah!
<milos>	do you even curly brace
<pyon>	}: oh, i do ask stupid questions... just not there.
<}>	oh i see
<}>	milos, ?
<milos>	nothing nothing, just seems like something that would commonly appear in the chat() { stmt; }
<danishanish>	emacs vs vim
<danishanish>	tickets at the door
<}>	danishanish, get over it
<danishanish>	huehuehue
<pyon>	danishanish: only useful when ams is here.
<archilius>	sublime text
<danishanish>	lol
<}>	pyon, a proper troll would ask that on serverfault, "emacs or vi to edit my php script that converts word to html?"
<danishanish>	can we start some kind of debate
<milos>	can we start an easy debate?
<danishanish>	emacs or vi to edit my php script that converts word to html?
<milos>	nano vs vim
<danishanish>	emacs or vi to edit my php script that converts word to html?
<pyon>	}: a proper troll would find a better community to troll.
<archilius>	let's start on 'should we start a debate?'
<danishanish>	a "proper" troll
<pyon>	}: "better" in the sense that it's more likely to flame for hours.
<milos>	lol
<danishanish>	;-;
<pyon>	}: stack exchange closes stupid questions too quickly.
<danishanish>	i try
<danishanish>	^
<}>	looks like you've got this trolling thing all figured out
<pyon>	}: so there's no use to trolling there.
<danishanish>	i guess the site is trying to be professional
<archilius>	:)
<danishanish>	which is right
<danishanish>	but still
<danishanish>	i cant troll im bad
<danishanish>	so hows life
<}>	"systemd vs sysvinit" is the new "emacs vs vim"
<myrl-chan>	pyon: a proper troll would of course be talking about the symbolisms of boku no pico.
<danishanish>	systemd vs systeminit
<danishanish>	which is better?
<milos>	what about openrc?
<pyon>	myrl-chan: heh
<danishanish>	boku no pico is a masterpiece you lil shit
<archilius>	what are they?
<}>	archilius, what?
<danishanish>	porn hentai
<danishanish>	oh
<danishanish>	not tjhat
<danishanish>	nvm
<}>	danishanish, u wot
<}>	systemd is my waifu
<milos>	:/
<danishanish>	huehuehue
<danishanish>	guis a grill
<_w_>	danishanish: behave
<danishanish>	;-;
<diminoten>	senpai compiled for me today
<danishanish>	so what's your opinion on directx 12
<danishanish>	any gamedevs here?
<myrl-chan>	}: systemd is our waifu. :d
<}>	diminoten, i segfaulted for you (´・ω・`)
<diminoten>	probably not, most gamedevs are probably beign overworked as we speak
<danishanish>	haha
<danishanish>	one of the coolest things is the crossplatform sli/cf
<danishanish>	i wonder how equaling will go tho
<diminoten>	i can hear bobby kotick cracking his literaly whip
<danishanish>	haah
<}>	archilius, what were you asking?
<thebigdeal>	}, sup!
<}>	thebigdeal, hello
<archilius>	systemd and systeminit
<archilius>	never heard of these. then again in college you don't.
<thebigdeal>	}, your nick is awesome :d
<}>	archilius, sysvinit is the program your kernel loads at startup
<}>	archilius, systemd is a very large set of tools, including an alternative to sysvinit
<archilius>	}  : ty
<}>	archilius, sysvinit is very simple and "dumb" it doesn't do much, and takes no effort to learn, systemd is very complicated and has many features
<}>	so there's much debate about it
<archilius>	will check them out.
<milos>	because
<milos>	systemd is an entirely new philosophy
<archilius>	especially since they are the new emacs vs vim
<}>	pyon, it's mostly the people managing packages that care, it's a lot of work to convert a sysvinit distro to systemd
<milos>	it involves change, and people don't like change, especially when they think it changes too much
<pyon>	how does that "philosophy" affect my ability to use my computer for what matters most - watching porn?
<}>	(´･ω･`)
<pyon>	}: ah. that makes sense.
<pyon>	milos: i don't mind change, as long as the new alternative is strictly superior.
<}>	pyon, well that and one of the main systemd devs is hated by a lot of people
<milos>	i guess if you just use a gui the whole time it will make no difference to you
<aawe>	pyon: because systemd is much neater
<milos>	if you manage from the cli, you will have an opinion
<ori_b>	it also changes the way logging is done, and a whole bunch of other fundamental things.
<pyon>	milos: that is, the benefits have to oughtweigh the costs.
<pyon>	milos: i don't use guis too much.
<}>	ori_b, journalctl is great for logging, systemd also entirely replaces udev
<milos>	well do you use systemd?
<}>	i do
<pyon>	milos: basically, the only gui applications i ever use are emacs, firefox and mpv.
<ori_b>	basically, systemd replaces a huge amount of the linux ecosystem.
<milos>	i know you do }, it is your waifu
<pyon>	milos: arch made the choice for me - i use systemd.
<}>	milos, :)
<darkcthulhu>	what is systemd
<}>	pyon, time to update to 4.0.1
<archilius>	danishanish got his debate
<ori_b>	if you're actually doing system administration, it basically completely changes the way you have to do your job.
<}>	darkcthulhu, read above i explained it
<milos>	i hate how arch is like "we give you all the power!" and then they just have no support for the conventional init system.
<pyon>	}: i already updated my kernel, like, 2 days ago.
<arch>	we give you all the power!
<dexx1_>	is this a good way to find the largest circle that will fit into a non-circular design? math.sqrt(design_x*design_x + design_y*design_y + design_z*design_z);
<}>	dexx1_, what kind of design? if it's for instance the shape of a star, knowing x,y,z wont help
<darkcthulhu>	}, i see. why does it matter in general?
<}>	darkcthulhu, for the general user, completely irrelevant, for people working on distributions and sysadmins, quite a lot
<pyon>	ori_b: "changes the way" --> for the better or for the worse?
<}>	for better!
<milos>	for worse
<darkcthulhu>	hmm.. more control?
<}>	sysvinit cant even handle dependencies
<milos>	less control
<}>	unless you manually do it
<archilius>	wow.
<pyon>	milos: less control or less need for manual intervention?
<pyon>	milos: those aren't quite the same thing.
<milos>	that's why i don't use sysvinit or systemd
<milos>	i use openrc :-) it handles dependencies.
<pyon>	milos: for example, using a garbage collector in c reduces the amount of manual memory management you have to do - but you can still do manual memory management if you want to.
<milos>	pyon, 'control' is very arguable.
<}>	pyon, sysvinit is essentially a set of manually written scripts, it gives you full control, but doing anything takes ages, even very simple things (handling depenencies or auto-restarting services) has to be done by hand
<pyon>	milos: for me, it's pretty simple. control is about what you *can* do. i want to be able to do more, but i want to *have* to do less.
<darkcthulhu>	} ...while systemd is more of an abstraction?
<ori_b>	pyon: i don't interact with it enough to really have an opinion.
<exio4>	}: using sysvinit alone is pretty dumb, too, the problem with sysvinit is that it replaced too many tools with things that now don't work in all the cases they worked before
<milos>	then it sounds like you'd like systemd pyon
<pyon>	ori_b: ah!
<ori_b>	pyon: esthetically, i don't like the system - it's a bunch of separate programs, but it's also very monolithic.
<}>	darkcthulhu, systemd as a whole, is very very big and complicated, it's not just an abstraction, it completely replaces a lot of linux tools
<exio4>	}: considering that half of systemd is also a bunch of daemons written because nih
<milos>	what made you want to use it } ?
<ori_b>	tbh, i'd like to experiment with 'make' as the init system :)
<ori_b>	handles dpeendencies pretty well, i think.
<milos>	hah
<pyon>	ori_b: lol, could be fun
<}>	exio4, not so much nih, as replacing redundant code, systemd cut the total code in half or so
<milos>	just make sure you don't have clock skew ori_b
<}>	exio4, while adding more features
<ori_b>	pyon: i /do/ like one of the ideas systemd is built around -- socket activation -- though.
<pyon>	:-o
<ori_b>	(basically, systemd creates a socket in the file system, and when you try to use it, it will lazily start the service.
<}>	ori_b, yes socket activation is amazing, dont start services until its actually needed
<ori_b>	think inetd, but for local crap)
<exio4>	}: adding more features, yet old features, aka, things that worked before, don't work
<dexx1_>	}: any design
<ori_b>	...still, wish they stopped there.
<dexx1_>	(jesus christ, that maybe the most annoying username to tab complete)
<exio4>	if systemd was just an init, there'd no discussion
<milos>	when would you use socket activation exactly.
<exio4>	they basically replaced the whole low-level userspace with half-baked replacements, the people that used the other half got angry
<milos>	can someone provide a real-world example?
<}>	dexx1_, if it's any design, including concave objects, you will need a library that does this, it's quite complicated
<exio4>	and "sysvinit is flawed, let's replace it with an even more flawed design" isn't cool
<exio4>	everything cool systemd does was also done by standalone programms that mainstream distros didn't happen to use, but there are "sysvinit" init systems like openrc, which are really advanced in that sense
<}>	dexx1_, look at computational geometry libraries
<pyon>	exio4: well, it would be nice if there were a generally agreed upon set of criteria for what makes an init system "good".
<exio4>	pyon: if it worked, and didn't crash, and relied on unstable things like dbus, it'd be at least good enough for my use case
<aawe>	a good init system should use pid 1
<milos>	ok, i just had a look at the parallelisation benefits of socket activation
<myrl-chan>	i'ma sleep now. nite.
<milos>	i can agree that it's pretty amazing now.
<pyon>	aawe: always?
<pyon>	myrl-chan: gn
<exio4>	good night myrl-chan
<}>	aawe, systemd does use pid 1
<}>	man init
<exio4>	pyon: (i haven't had good experiences with systemd either, i had (and still have) to restart my system when i upgrade because systemd segfaults
<exio4>	)
<}>	"when run as first process on boot (as pid 1), it acts as init system that brings up and maintains userspace services"
<exio4>	also, the _first_ process to live is always pid 1
<ori_b>	milos: let's say that i want a login manager running.
<ori_b>	milos: that login manager needs x11 running, so it tries to connect to x11.
<aawe>	ori_b: sudo pacman -s gdm
<milos>	<milos> ok, i just had a look at the parallelisation benefits of socket activation
<milos>	<milos> i can agree that it's pretty amazing now.
<ori_b>	ah, ok.
<ori_b>	yep.
<exio4>	ori_b: that's just managing dependencies
<milos>	ori_b, i got, it's pretty neat.
<milos>	exio4, no
<exio4>	milos: you can have "parallel boot" without all the systemd crap
<ori_b>	exio4: yes, transparently and automatically.
<milos>	exio4, it's a lot more, did you read into it?
<}>	pyon, see, now that was proper trolling.
<pyon>	exio4: i haven't had any bad (or good or anything) experiences with either sysvinit or systemd.
<aawe>	exio4: but systemd is superior
<pyon>	}: lol
<}>	pyon, emacs vs vim wont get anyone started, systemd vs sysv works every time
<pyon>	}: dunno, i don't see anything wrong with the current discussion.
<ori_b>	hah, sysv also sucks.
<pyon>	}: it's relatively civilized for our standards.
<exio4>	the whole fuss about systemd is just "i am comparing a script that doens't work with a whole low-level userspace, it sure works in my own case"
<dexx1_>	}: it doesn't need to be that complicated. if it's a star, i want to find the stars maximum x, y and z, then find a circle that fits within that x, y, z envelope
<aawe>	systemd is a joy to use, because you have a level of abstraction above needing to know anything about /etc/init.d
<pyon>	}: generally, the point to trolling is to generate a more heated discussion than would arise without the trolling.
<}>	dexx1_, so you dont care if the circle overlaps the lines of the star?
<exio4>	you're still comparing crappy sysvinit with a crappy low-level userspace
<}>	pyon, well it wasnt as heated before :d
<}>	dexx1_, or do you want it to be a circle that *surrounds* the star, instead of being *within* the star?
<pyon>	}: it still isn't heated - it's just people saying sharing their opinion, experiences and knowledge. [or, in my case, just absorbing them, because i don't really know a thing about init systems.]
<exio4>	most of the cool things of systemd don't really need their design decisions
<dearhawk>	seriously, factorization in linear time is bullshit. the problem is so f-ing hard, seriously. it's bs.
<dearhawk>	ffs. makes me mad.
<exio4>	if it happened to be just an init, too, there would no discussion, i have said this too
<dearhawk>	i don't sleep or eat well because of it.
<ori_b>	dearhawk: makes me happy, since without it we wouldn't have crypto.
<}>	sure we would
<aawe>	exio4: could you point out any specific bad design decision?
<}>	ori_b, all your assymetric cryptography still uses symmetric cryptography to encrypt the data
<exio4>	aawe: using dbus?
<dearhawk>	ori_b: makes me sad though. i eat 1 liter of ice cream, keeps trying to break it, can't sleep, gets up again and repeat. no time to cook food. gotta break the mystery.
<aawe>	exio4: which is a bad thing(tm) because?
<ori_b>	}: ok, let me ammend that: usable crypto. walking over to google for a secure key exchange doesn't quite scale :)
<}>	ori_b, ;)
<exio4>	aawe: dbus is extremely unreliable a thing on its own, and now you're making your whole system more unreliable_
<exio4>	?
<exio4>	the init should be extremely dumb, and _don't die_ if a daemon happens to die too
<aawe>	exio4: my arch install has never ever crashed, something i can't say about my ubuntu install (based on some initv shit)
<exio4>	aawe: try to kill dbus, and start it again
<}>	aawe, ubuntu is based on upstart i think
<aawe>	why in the world would you kill dbuss
<dearhawk>	i get the sense that i'm the only one trying. or that there aren't many of us trying to break it?
<exio4>	it's just a daemon
<}>	also my systemd systems only crashed once in 2 years
<aawe>	}: ah
<milos>	dearhawk, what are you doing?
<}>	aawe, also ubuntu switched to systemd a few days ago i think
<aawe>	}: i am glad to hear that
<dearhawk>	milos: want to factorize composite numbers in linear time.
<exio4>	most problems with systemd aren't in the init part though
<dearhawk>	why can't penn and teller do a bullshit show about it? because that's what it is, it's bullshit.
<}>	milos, he wants to become a multi-billionaire by sitting at home in his underwear
<milos>	that's an excellent idea
<milos>	why don't we also solve p=np
<exio4>	if it managed everything outside the pid-1, and could handle things like dbus crashing
<aawe>	exio4: dbus should never crash or be killed
<exio4>	that's a good assumption
<dearhawk>	}: i am literally doing that. i am sitting in my underwear in a dark room.
<bacon1989>	anyone here ever deal with caching issues involving windows webviews?
<exio4>	make your system rely on things that happened to be called "desktop bus"
<}>	dearhawk, ok, when you gain access to every bank in the world, and every single bitcoin or other crypto currency, can i have some?
<bacon1989>	i clear the cache a million times, and the webview is still holding onto some old page on my site
<dearhawk>	milos: yes, why not? people aren't trying hard enough! they do other stuff.. they aren't obsessed enough!
<pyon>	exio4: aawe: doesn't the very design of unix processes make it impossible to guarantee that no process will crash or be killed?
<pyon>	s/no process will/a process will not/
<exio4>	pyon: systemd assumes everything is going well
<dearhawk>	}: yes, ofc. i'll let everyone share everything equally, á la communism
<exio4>	pyon: nothing crashes, nothing goes wrong, everything is alright
<dexx1_>	}: that works too...the smallest circle that will surround the star (or any object), wouldn't this do that? math.sqrt( math.pow( x, 2 ) + math.pow( y, 2 ) +math.pow( z, 2 )); -- assuming x, y and z are from the star (or any object)
<milos>	dearhawk, it's because you aren't paid to do it, you have to do it in your own time, and it's tiring... unless it was somehow somebody's full time job to do that, not a lot of people will have the time, among other things like the amount of skill required to even get started.
<exio4>	the problem arises when that doesn't happen
<aawe>	pyon: no idea. but killing the init system / message bus seems particularly stupid, even if it's the os doing it
<exio4>	aawe: no, not the init system, an external process the init system is using
<pyon>	aawe: i'm of the idea that, if you've already determined something is stupid, then you should make it impossible.
<dearhawk>	milos: what if the solution is comprehensible to someone who only has understood the problem?
<bacon1989>	i guess we don't have any windows people here
<}>	dearhawk, what is x, y, z here, the width,height,depth of the object?
<exio4>	anyway, some of the concepts are cool, it's just that when systemd happens to be in a non-extremely-cool case, it just crashes
<dearhawk>	bacon1989: few. but i've done some windows coding back in the day.
<}>	oops
<}>	dexx1_, ^
<milos>	damn it, i really want some bacon now
<milos>	this is your fault bacon1989
<aawe>	bacon1989: microsoft internet information services nunchuck extension pack service pack 2 release candidate 4
<exio4>	aawe: you may want to upgrade dbus, too
<milos>	very long capitalised words that mean nothing (tm)
<exio4>	aawe: so a common thing you may want to do, is kill it, and start it again right
<pyon>	aawe: extension packs also get service packs and release candidates? sounds super complicated. :-|
<exio4>	aawe: well, you can't start it again if the process of starting depends on it
<dearhawk>	aawe: vlcwtmn acronyms inc
<aawe>	exio4: one does not simply kill the supervising process
<pyon>	1, 2, 3... 32085, 32086, 32087...
<exio4>	aawe: dbus is not the one doing that
<exio4>	aawe: dbus is just a tool they use
<milos>	dearhawk, what do you mean by comprehensible to someoen who only has understood the problem?
<milos>	pyon, at the rate we're going at it's going to be called firefox 32768 soon.
<aawe>	exio4: but dbus is the context that the supervisor exists in, and the connection to other processes
<exio4>	aawe: there are lots of assumed things which may don't hold, things like a _concurrent_ process existing
<pyon>	milos: lol
<dearhawk>	milos: the problem is "simple": you need x and y in n where x*y=c
<aawe>	it's like saying "the init system should survive cycling power"
<exio4>	aawe: it may crash
<dearhawk>	milos: one problem is the carry ripple. you can't just reverse that
<dearhawk>	milos: it's like mashing a potato and restoring the original.
<exio4>	that's why the init should be extremely dumb and happen to make sure the core things should work, you could have a small init that starts systemd and dbus, and makes sure to keep both of them alive
<exio4>	aawe: because dbus crashing is a posibility
<pyon>	exio4: is it absolutely impossible to guarantee it won't crash?
<milos>	yes
<exio4>	pyon: you could handle the case of "timeout'd telling stuff to dbus, we could try to restart it"
<pyon>	exio4: it's significantly easier to program when you can statically rule out certain classes of bad behavior.
<generalvagueness>	bad ram and processor bugs can make any crash possible
<exio4>	pyon: dbus is not a trivial program
<pyon>	generalvagueness: it isn't the role of software to protect you from bad hardware, me thinks.
<exio4>	pyon: dbus crashing is not an impossible thing
<milos>	you could have a solar flare cause a double bit parity error in the dbus memory section and cause a segmentation fault.
<milos>	bam.
<generalvagueness>	pyon, fair enough, but if the question is "can you guarantee no crashes?", the answer is a clear "no"
<milos>	dearhawk, yeah, so it's not simple!
<}>	redraw
<}>	oops
<milos>	 /nickserv identify pyon4life
<shayanjm>	that awkward moment
<exio4>	because you can't rule out everything it doesn't mean you should practically only work when everything is working, the system should stay alive if the oom happens to kick on and kill something important that it is allowed to kill, or because you tried to restart the network
<exio4>	pyon: dbus is just one of those things
<pyon>	exio4: ah.
<dearhawk>	milos: i've got to break it!
<pyon>	well, then it is indeed bad design.
<dearhawk>	pyon: you're a pretty smart guy. why can't you break it?
<exio4>	dbus can crash randomly, too
<exio4>	it even happened in the past, you can google "dbus crashing network restart" and get links like https://bugs.launchpad.net/ubuntu/+source/dbus/+bug/1072518
<exio4>	inb4 "it's ubuntu! it doesn't count!"
<pyon>	exio4: then, perhaps the solution in this case is erlang, not haskell. (by "erlang" and "haskell", i mean their approaches to dealing with failure, not the languages themselves.)
<exio4>	pyon: i haven't played much with erlang :(
<exio4>	i said in other channel "systemd is amazing, when the default config happens to fit you, if it doesn't, you are pretty much fucked" too
<dearhawk>	milos: have you ever tried to solve the problem?
<merijn>	erlang would be great if we could just hack haskell's type system onto it and a nice syntax >.>
<exio4>	bugs fixed in the past 20 years in things like dnsmasq are new bugs in the nih-daemons rewritten in the systemd side
<pyon>	merijn: does't haskell already have libraries that do what erlang has baked into the core language?
<merijn>	pyon: haskell doesn't have hot swappable code!
<pyon>	oh.
<merijn>	also, can't transfer arbitrary closures to remote machines, although there's some work on that
<milos>	dearhawk, i have not :(
<vendu>	hello guys :)
<dearhawk>	milos: why not?
<milos>	dearhawk, it hasn't crossed my interests really
<pyon>	merijn: how would that even be done? wouldn't that require compromising on making lambda abstractions... well... abstract? [as in, the only way to making observations about a lambda abstraction being applying it to different values.]
<merijn>	pyon: any closure that contains only serialisable objects is serialisable
<merijn>	pyon: you don't want to transmit the actual binary code, because that's machine dependent
<pyon>	merijn: okay, obviously a serializable closure can only capture variables with serializable types.
<merijn>	you just need a unique name for the actual code + a way to serialise the values captured in the closure
<pyon>	merijn: "a unique name for the actual code" --> well, as long as the compiler and runtime system enforce that this unique name can only be used for identifying the actual code, i guess it's okay.
<pyon>	in other words, the only thing i'm afraid of losing is functional extensionality.
<snyp>	don't you need much higher level process like a vm to do these, coz haskell compiles to machine code.
<}>	dexx1_, hey sorry, my tmux got weird and /redraw didnt work
<pyon>	snyp: i don't see what the issue with machine code is.
<pyon>	snyp: although a portable bytecode certainly would make things easier.
<merijn>	pyon: they "working on that" i mentioned is the staticpointer exception which lets you register values (actual values, closures, etc.) and register them so they have a globallu unique id
<}>	dexx1_, assuming your object is at the origin, you take the point that's farthest way from the object, (that is the norm is the largest), and that will be the radius of your circle
<merijn>	pyon: eh, trivial answer: running the same program in 32 and 64 bit version resulting in different sizes for data structures
<dearhawk>	excuse my language, but fuck it! i never thought i'd do this... but my electricity bill will rise to the roof. fuck this! i'm going to brute force the shit!!!
<dearhawk>	i am so angry.
<pyon>	merijn: wouldn't the serializability criterion already take care of this?
<dearhawk>	this will be the most stup project i've done ever
<merijn>	pyon: not if you naively wanted to ship the code of the closure over the network
<}>	dexx1_, so lets say you have a rectangle, the left corner is at {-1, -2}, the right corner is at {1,1}, you have to calculate norm({-1,-2}+{0,0.5] = 1.80278, which is the radius of your circle
<merijn>	pyon: you need some way to tell the remote side which code is involved in the closure
<}>	dexx1_, you add the {0, 0.5} in this case to center the rectangle at the origin
<}>	dexx1_, but this finds the smallest circle that will enclose your object, for the largest that fits inside your object, it's extremely complicated for concave objects
<pyon>	merijn: oh, i already took that for granted, since you said "you just need a unique name for...".
<}>	dexx1_, hope that helps
<merijn>	pyon: right, that's the part they're working on ;)
<ams>	pyon: mm?
<snyp>	pyon: hmmm... yeah... so you would need to transfer a description of the closure (bytecode or whatever) to the other machine and let an interpreter compile it to machine code and then transfer control to that code... yeah the runtime would of course get more complex to implement that... and i have no idea how radically ghc would need to change to implement this feature.
<ams>	why woulod you send it compiled?
<ams>	build a sexp based version, send that.. tree shake out all thingies, send that.
<snyp>	ams: yeah something like that.
<}>	dexx1_, so the whole algorithm is basically norm(farthestpoint()+(leftmostpoint()+rightmostpoint()/2))
<pyon>	merijn: i'm afraid that this kind of thing requires function/closure types to be smarter than they already are in haskell. for example, in rust, the type system can talk about a closure that only captures things that can be moved from one thread to another.
<snyp>	i am just spitting out stuff.. i don't even know erlang
<ams>	erlang is cute.
<snyp>	or haskell that well
<pyon>	merijn: but perhaps there's some other solution, and i just lack the imagination to see it.
<pyon>	a
<jesin>	how does lldb compare to gdb for debugging c++ code?
<}>	jesin, lldb is not finished
<}>	work in progress
<pyon>	ams: "sexp based version" --> even if that's what internally happens, i don't think that should be exposed to the programmer. it's very easy to break functional extensionality that way. on the receiver side, it would be too easy to write code that distinguishes two syntactically different forms that are supposed to denote the same function.
<snyp>	pyon: what if the closure captures very large amount of data?
<jesin>	}: lldb 3.6.0 is in the arch linux official repositories already though
<pyon>	snyp: afaict, rust's all about single-machine concurrency, not distributed programming, so that isn't an issue.
<}>	jesin, sure
<ams>	pyon: send it as normal code.
<snyp>	pyon: oh you're talking about rust, not haskell
<sl33k_>	i have been given words and a string containing those words. how would i filter out words of my liking from the string in java?
<pyon>	snyp: what i said is that, *it seems to me*, haskell closures would need smarter (even if more cumbersome) types.
<pyon>	snyp: and offered rust as an example of that.
<snyp>	oh
<sl33k_>	would this involve a complex regex?
<ams>	sl33k_: does java have a remove like or delete like function?
<alphaatom>	hi, what options should i look at for finding a programming job in the us as british student, i wanna move to new york, probably crazy but can't hurt to try
<sl33k_>	ams: not that i can recall of
<ams>	such a big langueg, and lacking such basic functionality ..
<snyp>	alphaatom: somecompany.io
<snyp>	jk
<ams>	it would be nice if one could rewrod a commit in git while rebasing directly in the buffer one gets..
<dearhawk>	we have an integer i = c. and five other variables a,b,c,d,e (can be used however). let a procedure (max length 100 instructions) for a maximum of 100 cycles try to solve a bunch random rsa-100 problems. if it succeed (a randomized procedure) we might have factorization algorithm with p-time?
<}>	no, you might just get lucky
<dearhawk>	but it could also be a generally working algorithm, no?
<_w_>	dearhawk: may i suggest a computer science course or two?
<dearhawk>	_w_: what am i missing here?
<generalvagueness>	source-ier and more thorough article about the latest test: http://www.nasaspaceflight.com/2015/04/evaluating-nasas-futuristic-em-drive/
<_w_>	dearhawk: i think you misunderstood me
<dearhawk>	_w_: i'm aware of false positives. but a working algorithm is more likely.
<dearhawk>	_w_: i did? :p
<dearhawk>	_w_: ofc you can :)
<_w_>	your problem lacks rigor and consistent terminology - i suggest you take a computer science course or two so you can approach such problems in a more formal manner
<}>	_w_, i get the feeling many compsci papers lack consistency ;) in the sense that no one can reproduce them
<}>	conveniently, the source is often not available
<merijn>	}: what are you talking about the source is always...
<merijn>	oh you beat me to it
<}>	hehe
<merijn>	i asked my internship supervisor for the source to one of his papers (mind you, one of the more important papers in the area!) and i was told he lost it
<}>	my dog ate it - "every postgrad student working with source code"
<merijn>	so i had to reengineer it from code snippets in the paper (all of which were buggy and/or wrong, of course) and 2 of the 3 optimisations the paper covered weren't even in the snippet
<merijn>	i'm auto rejecting any empirical cs paper without available source
<snyp>	abstract - cure for cancer algorithm.
<snyp>	dog ate source code as well as pseudocode
<}>	the thing is
<}>	even if you send an e-mail to the author asking for source
<}>	there will be no reply
<mike802>	if the snipets are wrong
<mike802>	you're either taking a different approach
<mike802>	or using outdated material
<dearhawk>	_w_: i get what you mean. but what i'll do is simply randomize algorithms and try them on a randomized set of problems until an algorithm succeeds.
<mike802>	i wouldn't assume people are stupid
<mike802>	especially the guy in charge
<}>	mike802, there's even a book published on how to falsify data in compsci papers
<}>	but that one mainly has to do with parallel computing if i recall right
<mike802>	lol, you mean patent troll stuff?
<mike802>	i don't think they do anything that's legit
<snyp>	}: what is it called?
<snyp>	i mean the name of the book
<}>	snyp, i'll google it, see if i can find it
<snyp>	ok
<}>	cant find it yet, but one of the top links in google is "can i repeat your parallel computing experiment? yes you can't"
<}>	not a book obviously
<pyon>	merijn: "empirical cs paper without available source" --> those are really annoying. especially when it comes data structures that are supposed to be "fast in practice", even though no formally proven complexity bounds are provided.
<ahuegyua>	.
<ahuegyua>	did usa intelligence supply isis with weapons like they did with al-qaeda to justify creating wars?
<ahuegyua>	did usa excute the creative mess in the middle east like they said they will, does the creative mess include explosions with uncertain responsibles to create wars?
<ahuegyua>	plz, send my qs to help limiting usa & israel aggression against others& may then lessen number of people killed in the middle east.
<ahuegyua>	.did usa intelligence supply isis with weapons like they did with al-qaeda to justify creating wars?
<}>	ahuegyua, what
<diminoten>	_w_
<pyon>	ahuegyua: wrong channel. try "/join ##politics".
<}>	snyp, do you know any good synonym for falsify that i can google
<dearhawk>	now... consider this. you're a dot, moving through a grid. a line is drawn behind you for every unit you move. you have a decreasing counter for every discrete unit you move. you can move right or up. with no memory of your past moves or knowledge of where you're heading, you cannot know whether what you're doing creates a pattern unless you already knew that pattern. if you create a pattern that's repeating in the grid, you have successfully
<dearhawk>	factorized a composite number.
<snyp>	}: ... disprove?
<snyp>	uh.. no
<}>	tried fake but it shows data generating libraries
<}>	"falsify" found two papers explaining falsified data in parallel computing papers
<sasazuka>	http://www.theguardian.com/business/2015/may/01/us-aviation-authority-boeing-787-dreamliner-bug-could-cause-loss-of-control
<}>	snyp, also found this, http://www.ncbi.nlm.nih.gov/pmc/articles/pmc2685008/ 33.7% scientist admit to using questionable research practices, 2% admit to falsifying data
<}>	cant find the book yet
<snyp>	i see
<bytefire>	hi all, is anyone here doing eudyptula challenge?
<}>	"forge" or "distort" might work
<toccatanfugue>	in c, what is a good datastructure to read a file with lines such as: 1 32423
<toccatanfugue>	i was thinking structs?
<}>	toccatanfugue, what will the data structured be used for ?
<}>	s/structured/structur
<pyon>	wait, data structure choices depend on the language in question?
<toccatanfugue>	i will be making a virtual address to physical address translation. i have 2 files, page table in form 1 23424 and a tlb file, in form x y zzzzzz a b cccccc
<}>	pyon, yes
<pyon>	}: that's totally ridiculous. if a language makes it hard to work with a data structure i need, i switch languages, not data structures.
<toccatanfugue>	pyon: but but, this is a systems programming class and we *must* use c
<}>	pyon, are you saying you would use the same data structure in prolog, c and haskell?
<toccatanfugue>	heh
<pyon>	~
<mike802>	even if you had all the information
<mike802>	which you don'
<mike802>	that's not possible
<pyon>	}: if i'm facing a complex algorithmic problem, i don't use c, period.
<mike802>	go home thug, jail is warm
<}>	pyon, well some of the most complicated algorithms are written precisely in c, i.e. fast matrix operations
<toccatanfugue>	here are the 2 file formats: http://hastebin.com/zedirobofe.rsl
<encapsulate>	can *anyone* be a programmer?
<pyon>	}: sounds like a job for a dsl that can be *compiled* to c.
<snyp>	encapsulate: no.
<mike802>	and what are you going to do
<mike802>	sexually assault women?
<}>	pyon, i don't disagree with that
<toccatanfugue>	damn i asked about a data structure and we're at assaulting women
<dearhawk>	may i ask you guys something... don't you want some hard core challenges instead of doing those easy normal stuff?
<mike802>	i think the closest it's possible to get is like a 10 mile radius
<dearhawk>	pyon: why dont you try some thing really hard core? like, writing an assembler or something?
<dearhawk>	or general artificial intelligence
<snyp>	for x86?
<snyp>	no way
<mike802>	which still isn't nice, if you're umm, a registered sex offender
<encapsulate>	is strong ai possible?
<}>	dearhawk, you cant write an assembler for any modern architectue by yourself
<}>	there's too much extremely specific things
<}>	that are probably not even fully documented
<mike802>	sexual assault over the interent is a serious problem that the authorities need to be made aware of
<snyp>	there's already nasm, yasm, fasm, gas, masm, someotherasm
<_blizzy_>	how do you even sexually assault someone over the internet
<toccatanfugue>	~*~* win32asm *~*~
<oleo>	tasm
<}>	snyp, you forgot tasm
<}>	heh
<oleo>	borland
<mike802>	is that a rehitorical question?
<mike802>	how do you assault a robot?
<redpill>	tasm was my first for x86
<snyp>	}: ah
<toccatanfugue>	} -- not sure if you are eventually going to go back to my initial question or not, thanks for your input anyways :)
<}>	toccatanfugue, ?
<}>	toccatanfugue, what question
<toccatanfugue>	regarding the datastructure
<}>	toccatanfugue, oh right
<}>	toccatanfugue, i was distracted
<toccatanfugue>	i know :)
<snyp>	toccatanfugue:  1 098098 means 1 is mapped to that right?
<toccatanfugue>	yeah
<snyp>	so use a hash table
<snyp>	umm.. an array
<snyp>	an array would do just fine
<toccatanfugue>	here are the 2 file formats: http://hastebin.com/zedirobofe.rsl
<toccatanfugue>	a 2x4 array you are saying for the page table?
<mike802>	are you threatening everyone?
<mike802>	this is not acceptable behavior
<}>	toccatanfugue, an array would store it just fine, it's accesing it won't be very nice probably
<dearhawk>	}: then, who write sthem?
<}>	toccatanfugue, i mean you would have to look up a number, by traversing the entire array
<_blizzy_>	aw shit https://www.reddit.com/r/news/comments/34isvq/freddie_grays_death_ruled_a_homicide_by_states/
<_blizzy_>	here we go
<}>	dearhawk, ?
<dearhawk>	}: "can't write assemblers for modern architectures"
<horsik_>	does anyone work with visual paradigm?
<}>	dearhawk, i mean you, random person on the internet, cant do it alone, they're written with support from intel/etc
<dearhawk>	}: "by yourself". how does the gnu guys deal with it? who writes the stuff?
<}>	dearhawk, because they dont even document every instruction
<dearhawk>	}: ah
<}>	dearhawk, and the manual is freaking huge!
<dearhawk>	}: so the gnu guys get helps from intel?
<}>	dearhawk, look at "intel architecture software developers manual"
<gedamo>	dearhawk: if you want to write an assembler, this may be useful http://ref.x86asm.net/
<}>	dearhawk, its in several volumes 2000+ pages
<puddlejumper>	good morning/afternoon/evening
<snyp>	gedamo: was gonna post that
<snyp>	dearhawk: writing a good assembler is not trivial
<}>	gedamo, hello
<dearhawk>	gedamo: wait.. what kinds of human beings deals with such things?
<snyp>	and the ones who do it, do it out of a need and/or interest.. not everyone is interested in that, this is what i think.
<gedamo>	hi } :)
<}>	gedamo, why does that guy maintain a list of instructions when intel does it already?
<gedamo>	}: it's in a machine readable form unlike the intel manuals
<}>	ah i see
<}>	very good point
<gedamo>	it also lists amd differences
<}>	gedamo, are you still writing in stack based languages? must be easy to transition to assembly
<gedamo>	i still like forth, haven't done much with it recently
<}>	i have this dream that languages will have flexible syntax trees, and you won't be restricted by syntax as much
<}>	probably why i still dabble in prolog
<}>	i mean mainstream languages
<}>	more metaprogramming for all
<ninjapenguin>	}: was { taken? :d
<gedamo>	}: are you familiar with the viewpoints research institute?
<}>	gedamo, i am not
<bacon1989>	don't lisp languages have a pretty flexible syntax tree
<}>	bacon1989, they do
<gedamo>	their steps project has the aim of building a complete computing system (os, dev tools, apps) in less than 20kloc
<}>	bacon1989, lisp and prolog are homoiconic, and both have incredibly simple syntax trees
<}>	which allows them to be flexible
<gedamo>	i particularly like this paper: "peg-based transformer provides front-, middle and back-end stages in a simple compiler" http://www.vpri.org/pdf/tr2010003_peg.pdf
<bacon1989>	yeah, i'm in the process of learning more prolog
<grill>	banned
<}>	gedamo, arent there several os's in less than 20kloc?
<}>	i guess this will be even more impressive
<}>	oh wait, the 20k loc will include the compiler?
<gedamo>	yes
<}>	ohh
<}>	holy crap
<gedamo>	multiple compilers in fact
<gedamo>	that paper is about their system for implementing dsls
<ninjapenguin>	who just got banned?
<ninjapenguin>	i'm really curious.
<_w_>	read the rules and keep commentary on moderator actions out of ##programming, take it to ##programming-ops
<}>	gedamo, i wrote a very basic compiler-compiler at one point, but havent put much thought into it, this looks intereting
<_w_>	(or ask one of the many irc-newbie channels here for help on how irc works)
<}>	the simple stupid  grammar i used as a test in my compiler compiler, http://termbin.com/kvuo , it uses no regex based matching, so it features a token based and char-by-char based mode for identifiers
<ninjapenguin>	okay, i see.
<bizarrefish>	hi all
<gedamo>	}: the rest of their papers are here, check out the steps progress reports http://www.vpri.org/html/writings.php
<}>	gedamo, i will!
<}>	gedamo, who is funding this?
<gedamo>	}: it appears to be the us national science foundation
<bizarrefish>	i have a concurrency design pattern type thing, and i'd like to know what it's called. consider a set of modules. a module is a bunch of code with shared state, yada yada, like any standard program. the module can be called into from other modules. when a thread is in the module, the module is locked, no other threads can occupy codepaths in the module. the module is consistent. when the module calls into another module, it unl
<}>	gedamo, so essentially, their "peg transformer" does parsing, transformation and code generation in one step?
<gedamo>	bizarrefish: your message was cut off "module calls into another module, it unlo"
<}>	i'm not sure i fully understand... i'll keep reading
<bizarrefish>	gedamo: thanks for the heads up, will pastie
<gedamo>	gedamo: there may be multiple transformation steps for a particular language but all the steps use the same tool
<bizarrefish>	http://pastie.org/10124155
<gedamo>	er, sorry, } ^
<}>	ok i read their example and now i get it
<}>	does this have limitations? it says it will work with anything generated by the front end, but can the front end generate any ast?
<dearhawk>	do you guys think the problem of factorizing composite numbers with linear complexity is unbreakable?
<gedamo>	it reads and writes text, so anything that can be represented as text
<_w_>	dearhawk: i think that with a little computer science under your belt you'll not ask such questions :)
<woggle>	dearhawk: uh, "linear complexity" is generally not what one targets for the "breaking crypto" or "breaking common conjectures" part of that.
<dearhawk>	_w_: i'm not claiming to be a phd, but high motivation is the driving factor here
<}>	gedamo, i understand that, they show some examples of the rules the parser can understand, but they dont go into any details (but i havent finished reading), can you write the rules in an lr(n) grammar or do you need to transform it to something more simple for it to understand?
<_w_>	dearhawk: i mean for your own sake as well
<_w_>	if you truly have interest, seek out education
<}>	gedamo, i mean if they're going to fit in under 20k loc, they cant add all the bells and whistles
<gedamo>	}: it's based on pegs, i'm not sure if there are limitations in what they can parse
<}>	ok
<}>	"any parsing expression grammar can be converted directly into a recursive descent parser. due to the unlimited lookahead capability that the grammar formalism provides, however, the resulting parser could exhibit exponential time performance in the worst case.", so i guess it has no limitations
<pyon>	gedamo: it seems to me that pegs correspond to a strict subset of context-sensitive languages, but it's a subset big enough to contain all languages that are interesting in practice.
<}>	and peg is generally more powerful
<pyon>	context-sensitive languages are a pretty damn big class already.
<}>	"peg packrat parsers cannot recognize some unambiguous nondeterministic cfg rules"
<}>	not that its a big deal
<pyon>	}: nondeterministic context-free languages are generally undesirable anyway.
<pyon>	also, the memory consumption of peg parsers can be limited with a prolog-like cut operator.
<pyon>	err s/peg/packrat/
<}>	i don't much about peg, so far glr was "good enough" for me
<}>	don't know*
<pyon>	by ruling out backtracking past a certain point, the cut operator can help the garbage collector reclaim more garbage.
<}>	well i know how cut works :) i mean i wasn't familiar with peg until gedamo's link
<pyon>	basically, anything that's only accessible only past the point beyond which backtracking is ruled out.
<pyon>	parser combinators are essentially builders for peg parsers.
<pyon>	i mean, parser combinators which allow arbitrary backtracking by default.
<merijn>	pyon: do you happen know whether attoparsec happens to do such cutting?
<pyon>	merijn: dunno
<}>	pyon, when i did my compiler-compiler, at first the parser was really dumb, and i thought about extending it to glr or such, but i figured out ann easier way is to simply transform the grammar into something easier, i.e. remove left recursion by transforming grammar instead of making the parser handle it
<merijn>	bummer, that means i have to do my own research and i'm lazy...
<pyon>	:-p
<}>	which is why gedamos link is so interesting
<}>	that is, multiple transformation steps
<pyon>	merijn: just checked attoparsec's api, and there doesn't seem to be any cut operator.
<pyon>	wait.
<pyon>	attoparsec has try
<merijn>	it's a no op
<merijn>	for parsec compatibility
<pyon>	oh.
<pyon>	well, there's no cut operator in data.attoparsec.combinator.
<pyon>	which seems like the most natural place for such an operator.
<merijn>	well, i wonder if you can't get away with inserting "non-cut" points since backtracking can only happen for things combined using <|>
<}>	merijn, from my prolog knowledge its often possible to convert a piece of code with cut into a cutless version with the same effect
<}>	don't know if its applicable to attoparsec
<pyon>	merijn: i vaguely remember seing an idris parser combinator library that allows backtracking by default, but has a cut operator.
<pyon>	merijn: also, for convenience, it has a distinction between <*> and <!*>, the latter not allowing backtracking if the right parser has already been entered.
<goodperson>	we
<goodperson>	we
<goodperson>	we
<pokeymantrainer>	i just made a c program, and i get this. warning: no newline at end of file.
<hotcoder>	hello all?
<pokeymantrainer>	the source compiles fine. why do i need a new line?
<hotcoder>	merijn, yo
<electrojustin>	you don't
<electrojustin>	link the code perhaps?
<merijn>	pokeymantrainer: because the standard says you do
<merijn>	electrojustin: yes you do
<gedamo>	pokeymantrainer: you don't /need/ one that's why it was only a warning
<merijn>	electrojustin: the standard says that proper c files are newline terminated
<merijn>	because that's how unix text files are
<electrojustin>	oh, so that's normal
<pokeymantrainer>	ok. wow. never knew about that.
<electrojustin>	wait, what kind of text editor are you using?
<gedamo>	a lack of newline may indicate a problem
<pokeymantrainer>	notepad++.
<pokeymantrainer>	on linux.
<gedamo>	:|
<electrojustin>	why
<electrojustin>	yeah, that'll be your problem
<hotcoder>	where my peeps at
<toccatanfugue>	<!-- right here bro
<toccatanfugue>	im here 4 u
<hotcoder>	gonna start coding some java soon :)
<hotcoder>	toccatanfugue, <3
<hotcoder>	swolemate
<merijn>	windows has a different line ending scheme
<toccatanfugue>	<3 java <3 (i hate it)
<merijn>	might wanna check notepad++ to check whether it's using the right setting
<electrojustin>	yeah windows has carriage returns in addition to newlines
<electrojustin>	it might not matter for c, but in general you'll want to avoid that
<bacon1989>	pokeymantrainer: add a newline to your makefile
<bacon1989>	?
<electrojustin>	no, the issue is that the lines are \n\r instead of just \n
<t_rex>	when working on a freelance programming project, does it make sense to be asked for a by-hour breakdown of tasks ?
<bacon1989>	ah nvm, i just read peoples stuffs
<hotcoder>	how are yall
<electrojustin>	adding another newlines won-yeah
<hotcoder>	any plans for today?
<hotcoder>	or nah
<njcomsec>	i need to be able to look up what tile should be drawn at xy coordinate... i can do this now with a 100x100 map, i just have tilecomap[xcoordinate][ycoordinate][tiletype]; , but i want to make my map expansive/dynamic/procedural like minecraft(except 2d/topdown), so i want start position to be 0x0 and you can explore to -100x-500 for example...
<}>	pokeymantrainer, if you're using windows, you can use the cat command, it will fix the line endings
<njcomsec>	so for every tile the player finds, i will have a positive or negative x and y coordinate and the type of tile found there... and i need to store it in a collection
<njcomsec>	but what collection to use? regular array i cannot store negative index for coordinates
<merijn>	t_rex: depends on the rate you ask :p
<njcomsec>	i suppose i could use a hashmap and use the x/y coodinates as a key to find the tile there... but that seems weird
<pokeymantrainer>	i just thought that warning was weird and wondered about it. it works if i add the newline as it said. i've wrote tons of code on windows and mingw never complained.
<merijn>	isn't mingw gcc based?
<njcomsec>	maybe i can just use more multidimensional arrays and use one sub array as negative and flip it to a positive value
<merijn>	gcc will happily accept all manner of invalid c code
<njcomsec>	any thoughts?
<merijn>	hell, most people don't even realise that casting function pointers to void* isn't allowed by c
<n0name>	hi guys
<bizarrefish>	merijn: til :)
<bizarrefish>	n0name: howdy
<pyon>	merijn: i wouldn't blame them - keeping all of c's ad-hoc rules in one's head is just too hard.
<merijn>	bizarrefish: for bonus til points: the reason you can do it is because posix requires the cast to void* be valid for function pointers
<merijn>	so any posix platform supports it
<bizarrefish>	merijn: any specific posix thing/syscall which depends on it?
<dexx1_>	if the maximum possible value is 65 and i have three values: [70.000001430512, 31.298002958298, 1.9980001449585] -- how do i find the "scaling factor" and scale all three values down proportionally so that it is within the upper limit of 65?
<merijn>	bizarrefish: the reason is that c requires that void* can address any "memory object", but it doesn't require code to be in the same memory as data (think read-only flash in embedded systems), therefore code pointers may have completely different representation than object pointers
<bizarrefish>	merijn: makes a lot of sense in 1975, sure
<merijn>	bizarrefish: no, it's a compiler thing and posix platforms need to have a compiler that supports that
<bizarrefish>	also makes some level of sense now
<dearhawk>	so i learned today that the intel x86 reference is over 2k pages long, complicated and parts of it even undocumented. so, what kind of freaks writes assemblers for intel cpus? what kind of people are they? some kind genetic multi billion dollar secret organization experiment?
<dearhawk>	(from outer space)?
<merijn>	bizarrefish: clearly you don't know electrical engineers developing embedded systems ;)
<bizarrefish>	merijn: i've just been working in embedded linux too much. we're spoiled :p
<bizarrefish>	i guess with avrs, 8051s, etc, it doesn't make sense
<bizarrefish>	*does make sense
<merijn>	while i'm on the topic of obscure c knowledge...
<ninjapenguin>	merijn: speaking of obscure c, there's ioccc.org
<merijn>	quick poll: is this program's behaviour standard defined, implementation defined or undefined and what does it print? https://gist.github.com/merijn/0392ae239b9a091986ae
<bizarrefish>	dearhawk: intel is actually an anagram of 'legacy'. also 'gullible'
<ninjapenguin>	merijn: do you know the answer or are you asking because you don't know?
<merijn>	i know
<ninjapenguin>	i'd say implementation defined.
<n0name>	guys, will i have more time after finish my study, when i will go to a job?
<pyon>	merijn: implementation-defined, it seems to me.
<pyon>	merijn: but i'm not an expert in c.
<ninjapenguin>	i'm not an expert in c either. :d
<bizarrefish>	merijn: my brain says it will probably crash
<ninjapenguin>	i know the least about c!
<electrojustin>	oh christ
<ninjapenguin>	but in c++, i'm pretty sure it'd be implementation defined.
<bizarrefish>	oh wait'
<merijn>	i'll wait for bizarrefish' revised opinion before sharing the enlightenment ;)
<electrojustin>	i want to say implementation defined
<electrojustin>	and it might read some invalid memory
<ninjapenguin>	it may be in a very very edge case be undefined.
<electrojustin>	sorry did i say implentation defined?
<pyon>	merijn: are you talking about the fact that sizeof(0) might be greater than the length of the string constant?
<electrojustin>	i meant undefined
<merijn>	hah, you're all wrong :p
<bizarrefish>	sizeof(0) is 4/8 depending on machine. "abcd" evaluates to a pointer to the interned string.
<merijn>	the answer is: it's standard defined and prints 1
<merijn>	i like to title this explanation: "why you should never write sizeof(x)"
<merijn>	so, raise your hand if you knew sizeof is a unary operator
<ninjapenguin>	is (0)[] evaluated first?
<pyon>	merijn: i did know that.
<merijn>	ninjapenguin: *ding**ding*
<ninjapenguin>	ohhhhhhhhhhhhhhh.
<merijn>	suffix operators have higher precedence than prefix
<ninjapenguin>	get the fuck out of here.
<ninjapenguin>	:d
<ninjapenguin>	that's a good one!
<ninjapenguin>	i'm gonna ask the same question on another channel!
<merijn>	'(0)["abcde..."]' evaluates to 'a' (since x[y] is equivalent to *(x+y) and string constants are just a pointer to that constant)
<merijn>	so it's doing "sizeof 'a'" and char always has size 1
<electrojustin>	so apparently c has a comma operator
<merijn>	you should generally do something like "foo = malloc(10 * sizeof *foo);" (since sizeof works on arbitrary expressions)
<merijn>	this has the advantage of remaining correct when you change the type of foo since the sizeof automatically follows
<merijn>	unlike "size_t foo = malloc(10 * sizeof(int));" <- whoops forgot to update sizeof when changing the type
<pyon>	merijn: in practice, i (1) avoid c, (2) if i absolutely must use it, i just make macros of the form #define foo_size (sizeof (struct foo)).
<dearhawk>	bizarrefish: "intel is actually an anagram of 'legacy'. also 'gullible'", what's your point? :p
<ninjapenguin>	merijn: i asked another channel and 2 guys answered the same thing i answered, which is implementation defined. :d
<bizarrefish>	dearhawk: most of that document is stuff that needn't be there any more
<ninjapenguin>	merijn: i love questions like this!
<merijn>	ninjapenguin: if you want more obscure c knowledge i recommend http://blog.llvm.org/2011/05/what-every-c-programmer-should-know.html
<ninjapenguin>	i wish i had programmer friends who i could ask the question.
<ninjapenguin>	oh oh oh, i know one!
<ninjapenguin>	he's not online. gosh.
<ori_b>	ninjapenguin: what's the question?
<ninjapenguin>	[00:06:08] <merijn> quick poll: is this program's behaviour standard defined, implementation defined or undefined and what does it print? https://gist.github.com/merijn/0392ae239b9a091986ae
<ori_b>	ninjapenguin: either implementation defined or undefined
<ninjapenguin>	ori_b: standard defined and prints 1, actually.
<ninjapenguin>	:d
<ninjapenguin>	[00:12:30] <merijn> '(0)["abcde..."]' evaluates to 'a' (since x[y] is equivalent to *(x+y) and string constants are just a pointer to that constant)
<ninjapenguin>	[00:12:47] <merijn> so it's doing "sizeof 'a'" and char always has size 1
<aname_work>	so i've been playing with json on jsfiddle , and i was able to pull the data i was looking for from an api, and i'm ready to start fleshing things out to actually do something with that data. but when i try to make a local copy, it starts giving me crap about the same origin policy. i know what the sop is and why it exists, but why does it work fine on jsfiddle but not in my  local copy?
<aname_work>	... and now it works fine
<ninjapenguin>	i love when someone explains what undefined behaviour can cause, they most of the time say "it can format your harddrive."
<aname_work>	web stuff is silly...
<aname_work>	ninjapenguin: ... wut
<aname_work>	i mean, i guess if you had undefined behavior in a write operation, that could cause problems, but shouldn't the os protect the filesystem from that?
<xmppwocky>	the compiler is allowed to do *anything*
<aname_work>	xmppwocky: right, but the os should prevent a write operation like that, yeah?
<ori_b>	ninjapenguin: eh, the usual one i use is "send unpleasant emails about toenail clippings to your mother"
<ori_b>	or something along those lines.
<ninjapenguin>	whaat, no way.
<xmppwocky>	ori_b: "open nethack" is my favorite
<ninjapenguin>	the usual is what i said. :d
<xmppwocky>	ori_b: http://feross.org/gcc-ownage/
<ori_b>	aname_work: the compiler is allowed to work around that.
<ori_b>	xmppwocky: yep, i'm aware.
<xmppwocky>	usually what actually gets you with ub is the  optimizer deciding things can't happen
<aname_work>	ori_b: right, it can have the operation compiled in, but the os would go 'naw, you don't have permission to do that', right?
<aname_work>	unless you're running as root/system or whatever, of course.
<ori_b>	aname_work: maybe.
<ori_b>	aname_work: the compiler could legitimately include code to start a keylogger and record your admin password, and use that to wipe the disk.
<ori_b>	it's not /likely/, but the language spec allows it.
<nikio_>	looking 4 a wizard
<merijn>	it's xmppwocky one of my favourite blogposts positted the idea of a "maximally malicious standard compliant c compiler" for security discussions
<ori_b>	nikio_: try #hogwarts
<xmppwocky>	iirc, for example, int *x = &*some_pointery_thing; if (x != null) { printf("%d", *x); }
<nikio_>	i mean an old experienced it wizard
<merijn>	i.e. "could this code do something bad if we assume the most malicious compiler that is still standards compliant"
<xmppwocky>	a surprising number of compilers will just remove that null check
<aname_work>	nikio_: this is irc: rule #1 : don't ask to ask, just ask
<ori_b>	nikio_: oh, ok. try #camelot
<ori_b>	:p
<ori_b>	(seriously, don't ask to ask. just ask.)
<xmppwocky>	because you dereferenced some_pointery_thing
<aname_work>	ori_b: on second thought, let's not. it's a silly place.
<xmppwocky>	and null deref is ub
<nikio_>	when using php to exec  get
<nikio_>	 error while loading shared libraries: liblaszip.so.5.0.0: cannot open shared object file: no such file or directory
<xmppwocky>	so therefore, some_pointery_thing can't be null
<nikio_>	i get
<berndj>	merijn, i've wanted a compiler like that for a long time!
<nikio_>	when excing pdal in php
<xmppwocky>	and thus there's no need to check it
<nikio_>	how to solve
<ori_b>	nikio_: you're missing 'liblaszip.so.5.0.0'
<ori_b>	nikio_: find the package that provides it and install it.
<nikio_>	i got t
<nikio_>	it works through the shell
<nikio_>	but in php it doesnt
<}>	i decided to write a testcase for that circle problem, because i was confused why it didnt work for the author  ─>http://i.imgur.com/jpsbde8.jpg
<ori_b>	install it to a place php can find it.
<}>	but i forgot who it was, oh well
<nikio_>	:/
<nikio_>	this whole system is already installed and works in the shell
<nikio_>	i cant relocate files
<nikio_>	it wont solve it
<ori_b>	look up ld_library_path and set that before php runs
<nikio_>	did that
<ori_b>	'strace' can help see where it's looking (beware, it's noisy)
<xmppwocky>	http://goo.gl/levonr no null check here
<nikio_>	in man different ways
<nikio_>	i uset putenv
<nikio_>	i tried setting the env in some apache config files
<nikio_>	pff
<nikio_>	two days now
<ori_b>	try putting into /etc/profile
<}>	try strace -f -v > /tmp/log 2>&1
<}>	err add your command to that
<nikio_>	ori_b,  i know where the lib is
<nikio_>	and it worsk through the shell
<nikio_>	just not php
<}>	run php from the shell then
<ori_b>	nikio_: yes, you have made that clear.
<ori_b>	you are going to have to set the env var *before* php is loaded, most likely.
<}>	ori_b, this is one thing systemd does good too
<nikio_>	ori_b, if i su as www-data (apache user)
<}>	setting environment variables for processes that load before user
<nikio_>	and i try to set the env vars there and exec pdal i have the same error as when php tries itm
<nikio_>	makes sense
<nikio_>	ori_b, i gotta go
<nikio_>	overl
<ori_b>	}: er. you mean for itself?
<ori_b>	because under most init systems, they get set as a side effect for free too.
<}>	mm
<ori_b>	there's no support needed; /etc/profile gets loaded by init scripts, so you get env vars set as normal for them.
<}>	ori_b, at what stage is /etc/profile read?
<ori_b>	at shell startup, and since all the scripts that start daemons are shell scripts...
<ori_b>	it comes for free.
<ori_b>	i mean, yes, doing that shit is something that systemd needs to do
<ori_b>	it's just odd to list it as a feature.
<ori_b>	it's like saying "doesn't segfault on startup!"
<}>	i just thought systemd exports the variables you set in the services to all dependencies, but maybe i mixed up with something
<}>	that is you can set a variable in the service script itself
<ori_b>	no idea about that
<}>	its in man systemd.exec i think
<}>	" sets environment variables for executed processes. ... "
<}>	but it doesnt mentioned dependencies
<njcomsec>	i just taught my mum how to open a docx file with word. in a month she will be a pro
<}>	"processes started by the system are executed in a clean environment in which select variables listed below are set, system processes started by systemd do not inherit  variables from pid 1, but processes started by user systemd instances inherit all environment variables from the user systemd instance"
<}>	still doesnt mention how service variables are handled
<allay>	hey all, i'm working on my homework, and i have to come up with a recursive aswell as an iterative way to calculate a (somewhat different) fibonacci number. i've got the recursive one, but i can't figure out how to modify my iterative method to get the same result as my recursie one. if someone could take a look at it that would be awesome! http://ideone.com/95cjks
<patarr>	allay, the iterative solution would be the way you do it with a paper and pencil.
<patarr>	literally do it right now using a scratch pad.
<merijn>	allay: eh, why does your recursive one add 1 to every recursion?
<allay>	alright! i'll report back :)
<merijn>	also, needs to be rewritten to be tail recursive so it's linear instead of quadratic (or worse?)
<allay>	@merijn it's not an exact fibonacci number, thats the definition we've got as an assignment: l(n) = l(n - 1) + l(n - 2) + 1  wenn  n > 1
<allay>	"wenn" being german for "if"
<merijn>	then why doesn't your iterative one not do that?
<allay>	that's my question, i can't figure out where to add the +1 in my iterative method
<ori_b>	allay: ok, do it on paper first :)
<allay>	cause wherever i think it should go it just messes up the calculations
<}>	allay, why do you substract in the iterative method
<merijn>	}: to avoid a temporary variable
<merijn>	which is probably why adding the 1 fucks it up :)
<}>	might as well add memoisation to it or calculate it in logarithmic time for more points
<ori_b>	let the guy solve it first, then suggest bonus points :)
<kino`>	man, i'm pretty bummed with that grooveshark thingy
<dexx1_>	can someone check my code? i am getting incorrect values for "scale": http://pastie.org/private/b134zhve3wmptdagpfia -- i am trying to do the following: a printer bed has a finite six (say x=100, y=100, z=150) a 3d object has a x, y and z. i want to make sure the 3d object fits on the printer bed and if not, i want to find the largest size of the 3d object (that doesn't fit), find the proper scaling factor and scale down the
<}>	dexx1_, did you see the image i pasted?
<}>	i forgot your nick
<}>	dexx1_, http://i.imgur.com/jpsbde8.jpg
<}>	that's what you were doing wasnt it?
<dexx1_>	}: yea...i think. or thats what i am attempting to do
<}>	dexx1_, this is the code i used to generate that image http://termbin.com/1ply
<}>	dexx1_, x has to be the bottom left point, y is the top right point
<}>	works even if the object is not centered at the origin
<dexx1_>	}: i have no idea how to translate that code into mine
<njcomsec>	i cut my own hair today
<njcomsec>	now i look weird
<njcomsec>	i look like a girl
<dexx1_>	}: lines 23-29 is where i think things are going wrong
<}>	dexx1_, if your object is of width 200, and your printer bed is 150, all you need to do is scale it by 150/200=0.75
<}>	i.e. find the dimension that doesnt fit the most (width, height, depth), then divide the printer bed dimension by that value
<dexx1_>	}: but i also need to scale the other sides proportionally and .75 is not a 'universal' scaling factor
<vdamewood>	hi, people, etc.
<}>	dexx1_, why not? you scale the entire object by 0.75
<}>	dexx1_, if you dont, it won't be uniform
<dexx1_>	hmm
<}>	dexx1_, i.e. if you have a toy soldier, and it doesnt fit in terms of height, you cant just scale the height
<}>	or you will get a gnome soldier
<}>	dexx1_, in your code you already have a delta_max variable but you never use it
<}>	dexx1_, i mean you calculate it, but you never use it for some reason
<}>	that's exactly what you need to use
<pyon>	}: "but you never use it" --> it's just to keep the compiler awake
<}>	heh
<pyon>	}: he's just testing whether the compiler properly eliminates unused variables
<}>	pyon, an interesting consequence of very complicated languages is that compilers cant reliably remove code that doesnt do anything
<wagonboi>	sorry for my constant disconnects, my comp likes to sleep
<}>	pyon, i.e. neither clang or gcc can optimize void f(string s) { s += "3" ; } in c++
<dexx1_>	}: i used it and got a wrong result. you mean: printer_max / delta_max right?
<}>	dexx1_, yes, what was the wrong result?
<}>	dexx1_, you will need to use (printer_max - tolerance)
<}>	dexx1_, since you calculated delta_max with tolerance
<}>	i think
<pyon>	}: well, i take the dijkstra approach to undefined and even implementation-defined behavior: it makes the program meaningless.
<}>	i lost the link
<stangeland>	anybody knows how to make captions on images in markdown and how to make crossreferences to images ? same goes for tables
<dexx1_>	}: i don't think so, you only have to account for tolerance once ... otherwise it'll be 2 x tolerance
<}>	dexx1_, gimme a moment i'll find your link again
<dexx1_>	}:  http://pastie.org/private/b134zhve3wmptdagpfia
<}>	dexx1_, ok theres a few issues
<}>	dexx1_, you want to scale a large object down right? not a smal object up
<}>	dexx1_, in your calculation, if the object is large ... x_delta = (printer_x - this._fit_tolerance) - design_x; , this will be a negative value, since design_x is larger than printer_x
<}>	dexx1_, and yet later you check x_delta > 0 to scale it
<dexx1_>	}: correct, but i still need to have the appropriate information (scaling factor etc..) just in case i want to scale up objects because ultimately scaling up or down is the user's choice. i want to make sure the damn thing fits on the printer bed.
<}>	dexx1_, a calculation like x_delta / design_x wont give you the correct scale, for instance ... x_delta = -50, design_x = 200, -50 / 200 = 1/4
<}>	err -1/4
<}>	dexx1_, i guess you could get the correct scale by doing design + scale*design
<graceboy>	hii
<graceboy>	just wanna know about game engines which are results
<graceboy>	which are open source and easy to use
<njcomsec>	the one you build yourself
<graceboy>	not like unity which adds slash screen
<graceboy>	splash screen*
<njcomsec>	what kind of game you wanna make?
<graceboy>	i want to games like flappy bird
<njcomsec>	lol
<graceboy>	lol :( ?
<kino`>	eveything is fine, then, no?
<njcomsec>	for 2d stuff might as well code it yourself
<kino`>	i mean, you would use fna or sdl
<kino`>	and code the engine yourself.
<kino`>	 /s/would/could
<njcomsec>	im making a 2d game from scratch for android only using the sdk
<graceboy>	but i dont know where to start
<kino`>	you know any languages?
<graceboy>	python
<kino`>	isn't there pygame?
<kino`>	yeah, you could use pygame.
<graceboy>	c/c++ ,python ,some java php
<graceboy>	but pygame is not for android games?
<kino`>	ah, you wanna make android games
<graceboy>	i have just created a project digsort.com which is like search engine
<kino`>	so yeah, you could use sdl.
<graceboy>	if both are programmers can you give me marks for my digsort.com it is mobile friendly search engine
<graceboy>	sdl ? i never heard of it kino
<bizarrefish>	there's also cairo, higher level than sdl iirc
<bizarrefish>	at least for drawing
<electrojustin>	i've heard good things about sdl
<graceboy>	kino which programming lang u know?
<bizarrefish>	but these things won't give you much more than you have with android's graphics api
<graceboy>	cocos2d is good
<graceboy>	and unity is also good but it have splash screen
<graceboy>	in free version unity have splash screen
<graceboy>	is there any anybody  is indie dev here?
<ninjapenguin>	i'm not!
<ninjapenguin>	yay me!
<bytefire>	lol
<bytefire>	anyone doing eudyptula??
<njcomsec>	im an indie dev
<rumpledelf>	merely a paid corporate dev here
<vdamewood>	unemployed.
<ninjapenguin>	vdamewood: i've seen your name before.
<ninjapenguin>	i forgot where though.
<vdamewood>	probably here.
<njcomsec>	lol
<vdamewood>	i've been a regular here for years.
<ninjapenguin>	maybe.
<ninjapenguin>	i remember you asking some basic questions or something.
<bytefire>	rumpledelf, do you find people showing off their knowledge?
<ninjapenguin>	don't know. brb, more booze.
<vdamewood>	me asking basic questions... that's funny.
<bizarrefish>	corporate dev, but am the only dev in the sales team, so i get to do what i think best, not what someone tell me. it's not bad
<rumpledelf>	bytefire: er, how you mean?
<bytefire>	i hate this competition thing in corporate world
<graceboy>	lol ok then nj give me work just 20 $ in hr
<vdamewood>	unless they were basic questions.
<rumpledelf>	what competition thing
<bytefire>	rumpledelf, just developers thinking they are the best
<rumpledelf>	that would assume more than one developer on the team i imagine
<bytefire>	lol
<bytefire>	yes
<rumpledelf>	what is it with sales teams only having one dev, is this a thing?
<bytefire>	rumpledelf, dont know.
<bytefire>	do you work in a tech business?
<rumpledelf>	i don't think i can answer that
<vdamewood>	i find the idea of a sales team having more than zero programmers an odd concept.
<rumpledelf>	vdamewood: someone has to implement all the online marketing campaigns
<vdamewood>	rumpledelf: ambiguous answer or nda?
<rumpledelf>	vdamewood: ambiguous question
<graceboy>	guys i have created http://digsort.com/ this thing can u guys tell me it is good project or not its basically for college
<rumpledelf>	my unit is tech, and there's other tech units, but the business per se is education
<bytefire>	rumpledelf, ok
<vdamewood>	rumpledelf: in that case, i usually answer no.
<rumpledelf>	another senior dev starts soon. then i can nick off elsewhere without feeling guilty
<rumpledelf>	harder to find a job when you already have a job, oddly
<vdamewood>	my last company cut steel plates so that the cut pieces could be assembled into vehicle parts. i wrote database software and worked some it. i didn't work for a tech company.
<graceboy>	pygame is not for android is there anyone who used kivy?
<bytefire>	vdamewood, i agree
<vdamewood>	i want a job.
<vdamewood>	i think the last job i interviewed for decided not to hire me because i have asperger's.
<bytefire>	vdamewood, what technologies do you work on?
<rumpledelf>	i'm still waiting to hear back from people
<vdamewood>	bytefire: pretty much anything.
<rumpledelf>	my last interview i haven't heard anything from yet
<graceboy>	i am new on irc and i like this channel verymuch people are really chatting in other channel people are like died not talking
<rumpledelf>	the two before that i got knocked back on cultural fit
<graceboy>	vfamewood u worked on android ?
<vdamewood>	the things i'd be cautious about jumping into are web backends in java, embedded systems, and kernel development.
<bytefire>	vdamewood, isee
<vdamewood>	graceboy: once, a long time ago in a company far, far away.
<bytefire>	and which area would you prefer to work in?
<vdamewood>	no preference.
<bytefire>	ui?
<bytefire>	winforms?
<rumpledelf>	i'd be tempted to start my own agency but consistent income worries me
<bytefire>	you said databases, which dbms?
<graceboy>	vdamewood i feel when i program i use another people code like library i know its dumb thought but i get so many time
<bizarrefish>	hardest stuff i've ever had to do is kernel development (more awkward/time-consuming than hard, tbh), and ui
<rumpledelf>	kernel/embedded is fun
<rumpledelf>	i haven't done that for years
<bytefire>	bizarrefish, what did you do in kernel?
<vdamewood>	bytefire: if you're trying to fish for a specialization in me, you won't find one.
<bytefire>	and which kernel?
<bytefire>	vdamewood, :)
<vdamewood>	bytefire: https://damewood.us/personal/resume
<bizarrefish>	bytefire: some drivers for a soc mainly. linux.
<bizarrefish>	just for boring things like gpios, power management
<bytefire>	vdamewood, that's quite impressive
<bytefire>	surprised you're not working. are you choosy about next job?
<vdamewood>	no. i'm autistic.
<bytefire>	:)
<rumpledelf>	not being completely 'normal' does make it a bit harder
<bytefire>	seriously? employers can't say no for that reason, can they?
<rumpledelf>	sure they can. they can label it with cultural fit
<vdamewood>	^
<rumpledelf>	that's the fallback for 'we don't like the look of you'
<bytefire>	bizarrefish, nice. i've just ordered linux device drivers book. oreilly one
<graceboy>	vdamewood bro u havent reply me
<graceboy>	:(
<vdamewood>	my last interview ended about 2 minutes after i said 'autistic'.
<bytefire>	basterds
<bizarrefish>	bytefire: cool; you going into such a job?
<kenndel_>	is there any reason i the computing power of a mbp over a mba for undergrad cs courses (no mac hate please!)
<bytefire>	bizarrefish, no, my job is mainly java. but i have an interest in kernel dev
<vdamewood>	kenndel_: mbp will handle virtualization better.
<kenndel_>	the 2.2i7 for the air vs the 3.1 i7 on the pro is gonna be something i regret not getting?
<bizarrefish>	bytefire: java not so bad. my current job is very javaish
<bytefire>	vdamewood, i think all that sort of attitude springs from the need for the business to make money
<bytefire>	in other words 'compete'
<vdamewood>	bytefire: also, asds are noted for social difficulties, it's very difficult for me to even *look* for a job.
<bytefire>	fucking hate competition
<vdamewood>	graceboy: you didn't say anything that provoked a response.
<bizarrefish>	asd definitely doesn't always equate to someone you don't wanna hire, tho
<bytefire>	bizarrefish, what is it?
<rumpledelf>	i really enjoyed my last interview, not liking the wait to hear back from them
<rumpledelf>	the job doesn't start for 2 months so they are taking their time interviewing people
<njcomsec>	if they dont hire you
<njcomsec>	you can sue them for sexism
<bytefire>	vdamewood, that isnt good
<njcomsec>	im joking
<vdamewood>	kenndel_: a faster processor means shorter compile times.
<kenndel_>	good point. thanks!
<electrojustin>	somehow i doubt compile time is relevant for undegrad cs...
<rumpledelf>	i talked to some folks who have adult/gaming clients and an all male team, that was one of the first things that came up
<bizarrefish>	bytefire: iot stuff. we do a cloud-connected framework for running on edge gateways. lets you quickly hook up sensors to the internets. i'm sales team's engineer-bitch. i build demos n stuff.
<bizarrefish>	vdamewood: hard disk speed probably has bigger impact in most cases
<rumpledelf>	they're also not in a rush, they've been looking for someone for 6 months
<njcomsec>	and every job has dozens or even hundreds of applicants
<njcomsec>	especially in a city
<rumpledelf>	not every job
<vdamewood>	bizarrefish: for compile times?
<bizarrefish>	vdamewood: ya
<rumpledelf>	we hired someone for our last job and he was the only applicant
<bytefire>	haha it's nice spot though. no end-users to worry about
<bytefire>	just your team mates
<electrojustin>	wait how is hard disk speed relevant for compilation
<vdamewood>	kenndel_: also, my mention of virtualization is from personal experience. i can run windows, linux, and mac at the same time (and sync source with git) using a mbp from 2011.
<electrojustin>	source files are kilobytes max
<bizarrefish>	electrojustin: jumping around the disk takes time
<electrojustin>	bizarrefish: not that much time
<vdamewood>	bizarrefish: in this case, both systems will come with an ssd
<electrojustin>	maybe 10s of milliseconds if your source tree is really fragmented
<vdamewood>	my system doesn't even come with a defragmenter.
<kenndel_>	vdamewood, you mention you have a 2011 mbp too so can i ask one follow up! i have the mid 2010 mbp with the 2.4ghz i5. is it worth it to me to upgrade out of this or will i be able to continue just fine. she is getting kind of old and finiky with loud fan noise
<bizarrefish>	i imagine for repeated compilations it would help to have a sizeable amount of ram
<kenndel_>	upgraded to 8 with a 250gb ssd
<kenndel_>	but the new guy can go 16
<bizarrefish>	would let the os cache a lot of the source tree
<bizarrefish>	tb
<_blizzy_>	https://www.reddit.com/r/news/comments/34isvq/freddie_grays_death_ruled_a_homicide_by_states/
<vdamewood>	kenndel_: my system works well enough for most thing, including programming on mac os x, but my system slows down when i try to run more than 2 virtual machines at once.
<_blizzy_>	well, let the shit flying begin
<bizarrefish>	was probably the most worthit thing i bought
<vdamewood>	kenndel_: i plan on upgrading as soon as i possibly can.
<kenndel_>	i usually just use one to go to ubunto and it runs fine but honestly ive never tried to use both concurently
<kenndel_>	i just vm in and full screen
<vdamewood>	i also have problems running windows and solaris at the same time, but they both take 2 gigs of ram.
<kenndel_>	yea the cap at 8 is totally fine for one os but i can see how it could be limiting if you go past 2
<vdamewood>	actually, i need to try things out and see what actually happens.
<kenndel_>	i just have ubunto and osx go 4 and 4
<vdamewood>	kenndel_: ubuntu only needs 1.
<kenndel_>	i know it didn't need it but i assign that much cause yolo
<vdamewood>	it slows down mac without helping ubuntu.
<kenndel_>	i see they havent upgraded the 15 in mbp yet and maybe this summer so i suppose we should both wait for that. wonder when
<vdamewood>	but if you have 8gigs of ram, you should be fine.
<vdamewood>	i only have 8 gigs. and a 2.2 ghz i7 sandy bridge
<vdamewood>	the only thing i'd worry about is if the fan will bother your class mates, and if your battery can last through the class.
<kenndel_>	oh the fan is a major issue i couldn't bring it into a classroom
<gagabone>	visual studio code. "when this tool crashes, we automatically collect crash dumps so we can figure out what went wrong. if you don't want to send your crash dumps to microsoft, don't install this tool."
<gagabone>	no way to turn this bs off?
<vdamewood>	there's a suggestion right in there.
<peterfa>	in java, if i do something like string string = isok()? "string1" : "string2" + "string3"; what are the strings in case isok() == false or not?
<wafflejock>	peterfa,    if predicate? then : else
<wafflejock>	if predicate is true, does then, if predicate is false does else
<peterfa>	wafflejock, well, would java evaluate the concationation a part of the else or the whole tertiary result?
<_w_>	peterfa: sounds like you're asking about operator precedence
<_w_>	which is well documented
<_w_>	http://docs.oracle.com/javase/tutorial/java/nutsandbolts/operators.html
<peterfa>	ok, then the ternary is last, so the + applies first.
<peterfa>	which means i'll not get what i want in this case.
<wafflejock>	peterfa, yeah should evaluate the right hand side of the equation before the assignment occurs
<wafflejock>	peterfa, otherwise need to add in some parenthesis
<wafflejock>	er something
<peterfa>	wafflejock, i think that's what i need to do. i don't know about using parenthesis in this context but i'll find out.
<gagabone>	vdamewood: i want the program. i don't want the bs.
<wafflejock>	peterfa, yeah not positive on that
<vdamewood>	gagabone: then pay for it.
<generalvagueness>	do you want either string1 or string2, and then string3 added on? or do you want either string1 or string2 plus string3?
<gagabone>	vdamewood: huh?
<peterfa>	generalvagueness, the first case, so that string3 always ends up at the end of ether string1 or string2.
<generalvagueness>	then you should put a left parenth after the = and a right parenth before the +, i do believe
<peterfa>	generalvagueness, i'll try it.
<protist>	hello!!!
<vdamewood>	great, protist, you killed the channel.
<protist>	vdamewood: sorry :(
<peterfa>	generalvagueness, wafflejock, _w_, it worked to use parenthesis to force order of operations. the string building context accepted it.
<rumpledelf>	well, with a statement that contentious ...
<generalvagueness>	cool
<peterfa>	protist, you're not sorry, you jerk. you did it to piss us all off and it worked.
<protist>	peterfa: :'(
<vdamewood>	better to be pissed off than pissed on.
<peterfa>	vdamewood, i'd imagine that's only true for some people.
<munt>	lol
<vdamewood>	well, it's certainly not *my* kink.
<kino`>	those people are golden.
<electrojustin>	the fucking puns
<peterfa>	electrojustin, the christian grey puns? huh?
<vdamewood>	there's a row of chinese food restaurants: the golden palace, the golden horse, the golden dynasty. someone opened the golden shower near there... it wasn't popular and it didn't last very long.
<wafflejock>	peterfa, ah good to know
<wafflejock>	peterfa, regarding the ()
<peterfa>	wafflejock, yes.
<vdamewood>	peterfa: why?
<peterfa>	vdamewood, he says he doesn't "make love," but instead, he "fucks." the idiom is important to his life and it's vital that he makes this distinction.
<electrojustin>	now i'm perplexed
<electrojustin>	i did not have sexual relations with those puns
<vdamewood>	i haven't read the book or seen the por... ahem... movie. but i'd presume it's to demonstrate that he's just a horrible person.
<vdamewood>	it says right here in his file, he is a horrible person.
<electrojustin>	ok glados...
<vdamewood>	;)
<vdamewood>	string s = ok() ? "tru" : "fals" + "e";
<winny>	vdamewood: pressy sure ? : has higher precedence than +
<dexx1_>	}: fixed it. now i need help with fitting an object onto a circular print bed? http://pastie.org/private/ml1piifxsfetxxzvxig7q
<winny>	pretty sure, even.
<winny>	vdamewood: also easier to just type string s ? ok() ? "true" : "false";
<vdamewood>	winny: i just ran it in a test case. ?: has the second-lowest precedence in java, above only assignment.
<winny>	oh it does :(
<winny>	til.
<corrosiveeye>	hi noobs
<njcomsec>	can someone explain this statement "be aware that r-trees can degrade badly when you have discrete data" i dont see why
<powersource>	the wonders of bugs... i begin with a gray texture, set some to red and the rest transparent. the transparent end up exactly the way i want them but the rest end up black.
<powersource>	setpixels in unity fyi. and the profiler ends up with a massive amount of calls to color.get_black()
<vdamewood>	i want to wipe my system clean.
<vdamewood>	rm -rf /
<njcomsec>	i need to wipe my screen clean
<vdamewood>	clear
<darkcthulhu>	it's all about winning...
<winny>	vdamewood, njcomsec sledgehammer is the most effective choice
<powersource>	well fuck me i had attached an old script to the prefab. that's what i get for not moving away from the visual dev. completely
<daspirit>	what's the advantage of first-come first-serve disk scheduling?
<magnus_rm>	simple and natural
<magnus_rm>	:)
<magnus_rm>	so it is fast and probably not so bad
<nikio_>	ori_b, hey
<daspirit>	it is not fast.
<magnus_rm>	right, it can be slow
<ori_b>	nikio_: yes?
<nikio_>	ori_b, the problem is related to this
<nikio_>	but i have mod_php
<ori_b>	ok, and?
<nikio_>	ori_b, maybe this ?
<encapsulation>	https://github.com/adafruit/adafruit_python_dht/tree/master/source
<encapsulation>	how do i use this?
<ori_b>	the error is clear; php is not finding the library you are trying to call.
<ori_b>	as far as how to configure it, you can look at the docs...
<vdamewood>	i think i'll do that. when i get home tonight, i'm going to make one last backup, then wipe my system.
<nikio_>	orbixx, if it was so simple
<nikio_>	im on it or two days
<nikio_>	ori_b,
<future28>	hi, i have some data pertaining to the demographics of people in a city, including things such as income, maritial status, etc. i'm trying to cluster the data, but cannot get any interesting clusters output. is there some best practice method i should be following?
<ori_b>	nikio_: ok, and...?
<ori_b>	what did strace say about where it was looking for these modules?
<nikio_>	ori_b, how can i do strace?
<nikio_>	i am running it from php
<yh>	so
<yh>	what's the deal with most programmers apparently can't do a fizzbuzz
<yh>	bullshit, right?
<njcomsec>	a fizz uzzz?
<_x_c_v_b_>	yh: can you???
<njcomsec>	is that some kind of algorithm
<yh>	_x_c_v_b_: yes, please make your trolls insightful
<nikio_>	ori_b, ?
<encapsulation>	https://github.com/adafruit/adafruit_python_dht/tree/master/source how do i use this?
<_x_c_v_b_>	njcomsec: google it
<pyon>	future28: just play with the data. statistical techniques can tell you how to look for patterns, but they will not tell you what patterns to look for in the first place. :-p
<future28>	pyon: i suppose the main thing that i can do is remove attributes that might not be interesting?
<njcomsec>	ohh its some algebra test
<future28>	pyon: would discretising numerical inputs be useful?
<pyon>	future28: dunno
<pyon>	future28: *what* are you looking for?
<future28>	pyon: anything interesting really, i have no real hypothesis, just trying to find some neat trends/groups
<pyon>	future28: can't discuss techniques before discussing goals.
<_x_c_v_b_>	njcomsec: now make a computer do
<future28>	pyon: however, i do believe income will be related to education, for example. perhaps i will try to cluster within those attributes
<njcomsec>	im building a 2d game from scratch for android.... i dont have time for your silly iq tests
<stoopkid>	future28, there are lots of clustering algorithms out there
<stoopkid>	future28, ex. pca
<stoopkid>	actually on second thought i'm not sure if that's technically a "clustering" algorithm or other
<_atom_>	http://animu.demeter.feralhosting.com/frideynight/
<pyon>	stoopkid: it isn't. it's more like a change of basis, so that the new basis variables are uncorrelated.
<_x_c_v_b_>	njcomsec: then why are you talking on irc
<njcomsec>	this is my automated response ai speaking
<njcomsec>	the real me is working hard
<puddlejumper>	nlp :)
<_x_c_v_b_>	njcomsec: i thought bots were banned on this channel
<njcomsec>	this is not a mere bot, but a sentient ai, granted the same privlage as "free thinking" humans
<pyon>	_x_c_v_b_: bots and artificially intelligent programs are banned, but artificially stupid ones are allowed.
<_x_c_v_b_>	njcomsec: how hard would it for you to make a fizzbuzz
<njcomsec>	level 2
<yh>	i just feel like this "loads of programmers can't fizzbuzz" stuff is just a myth
<yh>	to make everyone feel like they're good
<puddlejumper>	yh: it is a myth
<_x_c_v_b_>	puddlejumper: or is it
<stoopkid>	yh, i think any programmer that couldn't fizzbuzz is probably not actually a programmer
<yh>	puddlejumper: why is it being perpetuated?
<yh>	stoopkid: yeah, surely it's only the unemployed people failing them
<njcomsec>	i think all programmers are different
<puddlejumper>	yh: the original data is from higher level cs students and they can't code anyways
<njcomsec>	but yeh from what i saw it seemed simple
<puddlejumper>	yh: ergo not real world programmers
<yh>	puddlejumper: well a lot of stuff in this industry has been adopted whilst coming from unreputable sources - the source barely matters anymore
<ori_b>	nikio_: see 'man strace'
<yh>	just look at agile
<pyon>	stoopkid: yh: fizzbuzz might be an extreme example, but i've seen programmers who don't have even the most basic grasp of data structures and algorithms.
<puddlejumper>	making something as simple as fizzbuzz only requires what ? understanding of conditional statements and mod
<ori_b>	puddlejumper: i've interviewed people that didn't.
<pyon>	stoopkid: yh: what's worse - i've had to fix their code.
<ori_b>	not many, mind you, but they exist.
<njcomsec>	im terrible at doing maths in my head.. and terrible at solving even simple problems very quickly... which is why i dont do well in iq tests.... but i am good at solving very complex problems in a longer time
<_x_c_v_b_>	njcomsec: well make a fizzbuzz. then you will be a true programmer
<puddlejumper>	ori_b: didn't know how to do it ?
<nikio_>	ori_b, i dont think php will allow strace
<ori_b>	nikio_: yes, it will.
<ori_b>	'strace <your-command>'
<yh>	_x_c_v_b_: i'm not impressed, thought you had more inspired content & motives - might have been confusing you with someone else
<puddlejumper>	ori_b: starting to realize why people don't take education as seriously anymore
<nikio_>	ok i try
<njcomsec>	universities seem more focused on political correctness than anything else these days
<puddlejumper>	by people i mean employers not the students
<yh>	pyon: maybe i suck at algorithms myself.  at least - preset ones i've not had to work with/innovate/write
<ori_b>	puddlejumper: this is not part of php.
<ori_b>	er, nikio_
<farrioth>	njcomsec: how about profit?
<denommus>	hi
<njcomsec>	profit too
<_x_c_v_b_>	yh: you are confusing
<ori_b>	puddlejumper: heh, yeah. one of the guys i'm thinking of.. i feel sorry for his students.
<ori_b>	apparently he taught programming.
<pyon>	yh: not knowing algorithms by heart is okay. not being able to understand or come up with one - this isn't okay.
<nikio_>	ori_b, sh: 1: strace: not found
<yh>	_x_c_v_b_: confusion is the precursor to growth & understanding
<ori_b>	how? fucked if i know, because he sure as hell didn't know it.
<ori_b>	nikio_: ...so install it?
<nikio_>	ori_b, i told u
<puddlejumper>	ori_b: at the same time knowing that i know how to do fizzbuzz doesn't give me a good feeling because it is so elementary :/
<nikio_>	php doesnt work that way
<ori_b>	puddlejumper: yes, it is kind of elementary.
<nikio_>	u can run strace in bash, not in php
<ori_b>	if you don't know how to do it, you should probably practice a bit.
<ori_b>	nikio_: yes, and you can strace whatever command is failing.
<nikio_>	not from php
<ori_b>	php runs on linux; if it's a command on linux, you can strace it.
<puddlejumper>	ori_b: what are some other things you ask on interviews ?
<nikio_>	ori_b, nope, cant even do whoami
<ori_b>	if it's an already running process, 'strace -p <pid>'
<_x_c_v_b_>	php is scary
<ori_b>	nikio_: in that case, you've got a pretty broken environment.
<nikio_>	thats the problem
<nikio_>	nope ori_b thats how php works
<nikio_>	u have to set envs in some files
<nikio_>	god knows where
<stoopkid>	_x_c_v_b_, lol why, it's like the easiest language
<future28>	thanks pyon, stoopkid. i'll see how i go with some minimised attribute sets
<ori_b>	nikio_: php isn't magical.
<ori_b>	it's just another program.
<yh>	ori_b: php has many magic functions though, don't forget ;)
<_x_c_v_b_>	stoopkid: no it's not
<_x_c_v_b_>	it's not web scale
<_x_c_v_b_>	almost
<nikio_>	ori_b, nevermind, you odnt understand how php works
<yh>	php is an artefact of old shared hosting days
<stoopkid>	_x_c_v_b_, ah, yea php isn't necessarily a "good" language, it's just simplistic
<ori_b>	nikio_: haha, i've read the source code for php and written a couple of languages for fun.
<yh>	organizations would do well to rid themselves of their php stacks and especially their proponents
<ori_b>	you can use strace on *any* program that you have permissions to ptrace
<puddlejumper>	in order to fully understand php you must obtain a wizard hat and convince people that you're special
<ori_b>	puddlejumper: so, one question that i don't ask, but is a good representation: the celebrity problem.
<_x_c_v_b_>	stoopkid: were you get "simplistic"
<stoopkid>	_x_c_v_b_, idk, it's just always been an extremely easy language for me, i thought others felt similarly (could be wrong?)
<ori_b>	nikio_: i was also looking at working on the team that writes facebook's php implementation (hiphop), but decided i'd far rather work on their networking hardware :)
<yh>	stoopkid: simple-minded, it is
<_x_c_v_b_>	stoopkid: it's not hard
<_x_c_v_b_>	stoopkid: it's just, well
<ori_b>	nikio_: as far as writing php, it's been years since i've used it heavily; i dn't like the language.
<_x_c_v_b_>	badly designed
<stoopkid>	oh
<stoopkid>	i'm not arguing with that haha
<_x_c_v_b_>	all those $$$$$$$$$$$$$
<puddlejumper>	ori_b: i see there's quite a market for books on interview questions, have you thought about writing one :p
<stoopkid>	if i want to do a simple task, i can do it in php in like 10 mins
<stoopkid>	if i want to do a complex task, i'm not using php :)
<ori_b>	puddlejumper: so, celebrity problem: given a directed graph of people, find the celebrity; the celebrity is someone who is known by everyone, and knows nobody.
<nikio_>	ori_b, ok well i cant fix it
<ori_b>	nikio_: ok, if you can't figure out how/where php looks for libraries, and you can't change it, then you're right.
<puddlejumper>	ori_b: i've read about it somewhere
<_x_c_v_b_>	stoopkid: i would just use node.js
<ori_b>	puddlejumper: and i don't care enough to write a book :)
<ori_b>	i should go home.
<stoopkid>	_x_c_v_b_, i've played around with that looking for a php replacement
<stoopkid>	i'm not a huge fan of js either though
<stoopkid>	i've been considering some of the haskell frameworks
<yh>	stoopkid: i'm guessing you don't know ruby ?
<stoopkid>	but i have to finish learning haskell before i can actually do anything with that
<nikio_>	ori_b, http://stackoverflow.com/a/21571588
<nikio_>	maybe
<stoopkid>	yh, nah, never used it
<yh>	stoopkid: well, i know you don't if you're still considering php
<yh>	stoopkid: there you go
<stoopkid>	yh, do you use ruby?
<yh>	one does not know ruby and still think "i'm going to use php for this simple task"
<stoopkid>	ah
<rkazak_>	yh: choose python.
<_x_c_v_b_>	stoopkid: https://www.youtube.com/watch?v=5gpofwbfrcs
<yh>	stoopkid: it is the language i find myself using the most
<stoopkid>	_x_c_v_b_, lol
<yh>	rkazak_: i don't find it as agreeable for some reason.  i prefer the ruby documentation too.
<rkazak_>	yh: yep thats another good choice.
<stoopkid>	well, right now, i'm about half way through getting my ass completely kicked by haskell
<yh>	we're moving into an age where language zealots are starting to become antiquated
<stoopkid>	yh, actually i feel the opposite
<stoopkid>	especially after finding this chatrooms
<yh>	stoopkid: how you mean?
<stoopkid>	i think people are starting to realize better metrics for evaluating languages
<stoopkid>	and better languages are being created
<stoopkid>	and more people are getting on board with why it's a good idea to do things these new-fangled ways
<yh>	stoopkid: we may actually be in agreement after all, if i expand upon my point,
<yh>	with microservices proliferating, polyglot is the way forward, not clinging to a single language
<_x_c_v_b_>	https://www.youtube.com/watch?v=fdapobrgzco
<yh>	and using those better metrics, the right languages can be chosen for the right use cases
<yh>	rather than one-size-fits-all
<yh>	same goes for data stores now.
<stoopkid>	yh, ah, yea i definitely agree with that
<yh>	it's no longer just "mysql/$something rulez for everything!"
<nikio_>	ori_b, too much output when doing stracce
<stoopkid>	nikio_, | less
<nikio_>	i cant see what was in the begining
<nikio_>	stoopkid in one command
<nikio_>	or now?
<stoopkid>	nikio_, > <yourcommand> | less
<yh>	one command buddy.  strace is always noisy.  computers do a lot. ;)
<nikio_>	still not enough spac
<ori_b>	actually, you'll need '-o filename'
<ori_b>	since it prints to stderr
<stoopkid>	oh
<farrioth>	don't forget the 2>&1.
<stoopkid>	ori_b, good to know
<yh>	not needed with -o i think
<farrioth>	yeah, or -o foo.
<nikio_>	command -o foo?
<farrioth>	strace -o foo command
<yh>	i'm concerned that if nikio_ requires this much up-front assistance, things will only get worse when the actual strace output needs reading
<farrioth>	mmm.
<farrioth>	what's actually the problem that's supposed to be getting solved using strace?
<ori_b>	trying to figure out why php is failing to load a library (specifically, where the hell is it looking?)
<farrioth>	ah.
<yh>	probably a whole lot easier to just print the load path.
<yh>	like, a lot, easier.
<nikio_>	ori_b, well its looking where i found the file with find as root
<ori_b>	apparently nikio_ tried setting ld_library_path, although, i guess it's worth making sure that it's being set correctly.
<nikio_>	so nothing unexepcte
<nikio_>	ori_b, as i said before the problem is not that it doesnt work
<nikio_>	in in the shell it works after setting the env vars
<yh>	huh, i'm talking about php's include path
<nikio_>	in php it desnt
<yh>	http://php.net/manual/en/function.get-include-path.php
<yh>	<?php print get_include_path(); ?>
<ori_b>	yh: that includes libx.so?
<ori_b>	(not php libraries)
<nikio_>	ori_b, now how can i make sure that php will look in that directory?
<yh>	ori_b: looks like the details of this have been spread out by a lot of strace talk
<ori_b>	yep.
<ori_b>	anyways, i really need to get home; will look later.
<yh>	https://pbs.twimg.com/tweet_video/ccpdktuveaaborb.mp4
<nikio_>	yh, what do u mean?
<yh>	our industry is in some serious turmoil
<yh>	i don't see any others that have so much egregious content to occupationally critique about in the form of funny albeit scary jokes
<yh>	perhaps it's where software isn't actually an industry in and of itself at all
<yh>	if software was its own organism as an industry, like the others, nature would make it healthy
<nikio_>	why is the shell weird when i su into a specific user?
<hotcoder>	hello all :)
<hotcoder>	how it go
<yh>	the art of asking questions..
<hotcoder>	:)
<yh>	a meditation: our skillsets & work are far too advanced to be applied in such mediocre business contexts.
<_blizzy_>	i notice that i name my rails projects after birds.
<_blizzy_>	c:
<farrioth>	_blizzy_: if you get a pet parrot, will you name it after a software project?
<_blizzy_>	farrioth, maybe.
<_blizzy_>	bluebird, jackdaw
<_blizzy_>	next will be idk.
<darkelement>	i haven't heard of the idk bird
<darkelement>	is it a new breed?
<gagabone>	in php, how can i make sure that the current hour is between 17 and 06 (24-hour clock format)?
<yh>	not enough talk about industry itself here (in my most humble opinion)
<yh>	perhaps that is reflective of the state of industry too, and developers' social status within the strata
<farrioth>	yh: not everyone here is actually in the industry; that may be part of the reason.
<puddlejumper>	have any of you guys tried treehouse?
<luvenfu>	hello, good day, how i do a installer for my program?
<farrioth>	luvenfu: begin by telling us which operating system and distribution, if applicable, you are packaging for.
<luvenfu>	farrioth, linux
<farrioth>	luvenfu: and bare in mind that on package-managed systems, a package is preferable to an installer.
<luvenfu>	hmmm, ok, apt-get?
<farrioth>	s/bare/bear/
<farrioth>	luvenfu: you're packaging for debian-like systems in that case?
<luvenfu>	farrioth, yes, i use ubuntu
<puddlejumper>	echo "mv program /usr/bin" > installer.sh
<farrioth>	luvenfu: see http://packaging.ubuntu.com/html/packaging-new-software.html
<yh>	farrioth: most definitely; i wish i had larger & more diverse communities to talk such with than small immediate cliques whereever i physically work at a given time
<luvenfu>	farrioth, right, the package system cover uninstallation?
<farrioth>	yh: mmm. not being in the industry myself, i'm afraid i can't recommend any, though.
<farrioth>	luvenfu: once you have made a deb, you will (un)install it the way you (un)install any other deb.
<farrioth>	luvenfu: note however that you will want to also distribute a source tarball so your software can be used by users of linux / unix-like systems other than ubuntu as well.
<yh>	farrioth: if i may ask, what do you do?
<yh>	it seems a waste to have such technical knowledge and not exploit it
<yh>	ofc, you may be an expert elsewhere (i'm always interested in what others who know similar things as i would otherwise choose to do)
<nikio_>	ori_b, fixed it
<farrioth>	yh: i'm a linguist.
<nikio_>	thx for the strace advice
<nikio_>	very hacky solution
<nikio_>	i just popped that lib into a folder it was searhing it
<nikio_>	usr/lib
<yh>	farrioth: i had an interest in linguistics (from afar) - what does being a linguist entail day-to-day ?
<ori_b>	yh: heh, personally i don't find too much about the industry (in the abstract) interesting.
<nintendo3ds>	is there some kind of conspiracy to ruin the web?
<nintendo3ds>	mozilla is pushing to deprecate nonsecure http and switched their default search to yahoo, google got rid of npapi
<yh>	ori_b: it is the abstract which informs decisions to make in the concrete
<yh>	and the concrete is all that is real :)
<nintendo3ds>	eventually the web is going to devolve into nothing but minimalist-style "web apps" with fancy javascript transitions that use 100% of the cpu, which can't actually do anything because they're in such a security straightjacket
<puddlejumper>	nintendo3ds: better standards better web
<nintendo3ds>	these are not better standards
<nintendo3ds>	i shouldn't have to pay for an https cert in order to host my own web server
<nintendo3ds>	that's about as anti-open-web as possible
<nintendo3ds>	mozilla should just drop the pretense of caring about 'freedom' et al
<farrioth>	yh: doing primary research -- collecting/recording and analysing language data form informants, sometimes things like conducting focus groups; doing secondary research -- reading books and journal articles; writing about my research; teaching, if the university has enough money for it.
<puddlejumper>	nintendo3ds: i agree you shouldn't but people should have the right to know you're just some random person putting data on a server
<nintendo3ds>	who else would i be besides that?
<nintendo3ds>	the browser tells you if the connection is secure
<yh>	nintendo3ds: i'm looking to move further from the web if possible.  it's too constrained, boring, and the problem domains are pretty similar.
<yh>	half the job is just doing standard web stuff.  the backend systems that feed the people doing the same web stuff over & over get more diverse
<puddlejumper>	now i just want to play my nintendo3ds
<hotcoder>	hello puddlejumper
<hotcoder>	<3
<_blizzy_>	i feel proud
<_blizzy_>	i added ajax comments to 2 of my web apps.
<luvenfu>	thanks farrioth
<puddlejumper>	hotcoder: hello
<hotcoder>	hey :)
<denommus>	i'm bored
<denommus>	entertain me
<electricsheep>	drugs
<denommus>	i don't have any
<denommus>	i wish i had
<denommus>	electricsheep: do androids dream about you?
<electricsheep>	if i had a nickel
<denommus>	i wanted to make some code
<denommus>	but my computer is broken
<denommus>	if only there was a editor for haskell and ocaml in android
<_x_c_v_b_>	would wastenode.net be a good name for a social networking site
<_blizzy_>	no
<_blizzy_>	imo, no
<_blizzy_>	name it something like
<ori_b>	electricsheep: if you had a nickel, they'd dream about you?
<_x_c_v_b_>	dreamnode.net
<_blizzy_>	actually nvm idk.
<felishia>	:o
<_blizzy_>	sounds like an irc server.
<_blizzy_>	especially with the .net.
<felishia>	my boss is weird :p
<_x_c_v_b_>	oh
<_x_c_v_b_>	it's token
<felishia>	who uses a preorder tree transversal result as a way to organize nodes?
<_blizzy_>	what about
<_blizzy_>	noder.io
<felishia>	:o
<_blizzy_>	i'm about to jump back into c#
<puddlejumper>	_blizzy_: when did you jump out of c# ?
<erste>	hi, anyone ever used lilplay.com ?? for buying books?. is it safe?
<_blizzy_>	puddlejumper, i stopped using c# to build two of my rails apps.
<puddlejumper>	erste: no, i've always used amazon
<_blizzy_>	i was working on a .net project.
<_blizzy_>	but i put it off to the side.
<erste>	puddlejumper, i see .. :p
<denommus>	rails is boring
<_blizzy_>	the rails apps are named after birds. :3
<puddlejumper>	_blizzy_: .net stuff should be simple enough? draw a picture add a few lines of code
<papashou>	for someone starting out, is javascript the preferred language nowadays with node/angular? or is python still a better choice?
<_blizzy_>	papashou, depends.
<njcomsec>	pascal is the best
<_blizzy_>	what do you want to do?
<_blizzy_>	puddlejumper, yeah, .net is simple.
<_blizzy_>	i love .net.
<denommus>	papashou: go through the sicp
<papashou>	sicp?
<denommus>	structure and interpretation of computer programs
<papashou>	isn't that an old text?
<denommus>	it didn't stop being relevant
<wagonboi>	aka yes
<denommus>	it is a great introduction to programming, imo
<_blizzy_>	papashou, i would start with python
<papashou>	i've done some light (albiet very basic script) in python and it just seems to evade me on how i should structure my scripts/applicaitons
<puddlejumper>	i tested mostly human on the voight-kampff test :/
<denommus>	this fear of old things of the enthusiasts of our field makes us reinvent the wheel all the time
<wagonboi>	i like java, but our prof forced us to think about proper program design
<wagonboi>	so i feel like java gave us a good intro to program design and how to handle diff types, data structures
<puddlejumper>	wagonboi: i like the design of java and the api docs
<denommus>	i think a book called "structure (...) of computer programs" will cover the structure of computer programs
<denommus>	but that's me, anyway :-p
<papashou>	heh is the book available online in some freely available form?
<denommus>	papashou: yes
<wagonboi>	mhm, and i made a python bot later and thought, "wow, glad java forced me to think about data types". python is good but i like a little more "strictness"
<denommus>	on the official website
<puddlejumper>	denommus: you don't have to program long before knowing you can structure a program in many ways
<puddlejumper>	denommus: or maybe some people need longer :/
<papashou>	i'm a sysadmin, and i'm looking to get into programming
<papashou>	i thought about devops
<denommus>	wagonboi: you prefer static typing. one day i shall recommend you haskell or ocaml
<wagonboi>	why? what's the diff
<denommus>	wagonboi: they have stronger guarantees about your datatypes than java
<denommus>	and they are more flexible
<denommus>	puddlejumper: but it's a common anxiety that beginners suffer
<papashou>	with python, i'm kind of thrown off by python 2 vs 3
<papashou>	is the situation improved with that? the general consensus seems to be go with version 3, unless you have a need for version 2 - in which rhel5 and 6 are all still on python2 as well as mac osx
<papashou>	i'm not sure if rhel7 is on python3 yet
<papashou>	seems to be 2.7
<wagonboi>	im sure macosx will move up to 3
<denommus>	papashou: you can have both installed in your system anyway
<papashou>	this is true
<papashou>	i'm easily confused.. but you are right
<felishia>	damn it!
<felishia>	is it the programmers fate?... to bleed randomly...
<myrl-chan>	felishia: is it the programmer's fate to bleed every fourth time?
<denommus>	felishia: i think the programmers' fate is being overworked
<felishia>	my clothes!
<_blizzy_>	i feel so slow somtimes.
<_blizzy_>	like now.
<bytesandcoffee>	is java easy to come to from python?
<dreams>	i think i just implemented parser combinators in oop.
<dreams>	unintentionally..
<exio4>	we didn't want to know you were masochist
<bytesandcoffee>	combinators?
<exio4>	dreams: i'd like to look at the code, if that's possible :p
<exio4>	https://en.wikipedia.org/wiki/parser_combinator
<dreams>	exio4: not done yet but will keep you posted, its actually for parsing some simple user arguments. well the main device is hashtables and delegations.
<exio4>	nice, and yeah
<exio4>	parser combinators pretty much arise anywhere when you are parsing anything ... if you happen to know them
<myrl-chan>	mah uguu
<dreams>	exio4: i use parser combinators a lot in haskell, which is why i automatically adapted the idea to oop.
<myrl-chan>	fecking sadale
<myrl-chan>	you baka
<exio4>	dreams: pretty much what happens when you know them :p
<myrl-chan>	it's not like i'll miss you while you're gone. <.<
<exio4>	one more tool in the toolbox
<myrl-chan>	dreams: what language?
<dreams>	exio4: heh. yeah these ntested imperative iterations are ugly.
<dreams>	nested*
<felishia>	i can-t find a documentation plugin for brakets
<dreams>	myrl-chan: sadly java.
<dreams>	myrl-chan: i think of the beauty of an idea rather than the unnecessary details of the language. true its a bit ugly to apply but when you think of the computation in your head its still beautiful. because you're thinking abstractly.
<myrl-chan>	i guess.
<puddlejumper>	lol @ beautiful
<myrl-chan>	ayyy sadale-kun
<myrl-chan>	sadale-kun talk to me you baka
<dreams>	puddlejumper: i would add to that sexy.
<dreams>	sexy computations.
<myrl-chan>	aho...
<myrl-chan>	;-;
<puddlejumper>	what is it called when you use useless adjectives
<myrl-chan>	puddlejumper: redundancy?
<puddlejumper>	myrl-chan: works for me :p
<exio4>	it's just what we like those fancy things
<myrl-chan>	pleonasm?
<exio4>	and yeah, those combinators are sexy
<sadale>	myrl-chan, i'm here right now
<sadale>	myrl-chan, was you looking for me?
<sadale>	myrl-chan, hold on. it's ##programming here, not #anime >///<
<pyon>	dreams: what do you mean by "sexy computations"?
<myrl-chan>	sadale: the power of lub is everywhere
<myrl-chan>	s/lub/lick/
<puddlejumper>	pyon: whatever algorithm mpv uses to parse your pron video
<myrl-chan>	lol
<myrl-chan>	prawn video*
<pyon>	puddlejumper: heh
<dreams>	lol
<dreams>	pyon: computations that gives you pleasure.
<pyon>	dreams: ah, then what puddlejumper said wasn't far off.
<puddlejumper>	lol
<pyon>	dreams: wat
<nitrix>	dreams: are you talking about branch prediction?
<myrl-chan>	nitrix: well, it doesn't really approximate.
<dreams>	pyon: i know its undecidable but there must be an approximation, when you have literals for instance.
<dreams>	nitrix: yes.
<pyon>	i think gcc has an unlikely macro, or something like that, for marking, well, unlikely branches.
<myrl-chan>	branch prediction isn't approximation dough..
<pyon>	saa
<nitrix>	dreams: framwork's a big word. there's not a large difference between that of a framework by software and of a physical cpu.
<puddlejumper>	whenever i have a special case i create a special case function
<puddlejumper>	and carry on :|
<dreams>	nitrix: i meant a mathematical framework.
<nitrix>	how does that differs from the alu part of the cpu ?
<sparkyflary>	anyone tried both wxwidgets and qt?
<nitrix>	a computer is your giant calculator. it's just hardware instead of software. all you have is a couple abstraction levels. i don't get your definition of framework.
<nitrix>	branch prediction is a field of its own.
<sparkyflary>	its non of your business
<electricsheep>	idk if i would call branch prediction a field of its own.
<dreams>	nitrix: static analysis is backed-up by a mathematical framework which you allows you reason about the analysis itself.
<nitrix>	electricsheep: then come with a better term.
<electricsheep>	its not about terms
<nitrix>	dreams: i don't see branch prediction related to static analysis.
<dreams>	nitrix: and i never saw the term in abstract interpretation hence my question.
<nitrix>	if anything, branch prediction (as it's currently done today) would be dynamic analysis.
<dreams>	nitrix: well i'd imagine an abstract domain with {true,false} which can tell you when it can "this branch will be 100% executed", i imagine its easy when you have literals but it gets undecidable as the conditional expression gets complex.
<nitrix>	dreams: i see. there is, ehm, data-flow analysis i think, which is ehm, lattice based approach to find all the possible set of values; from which, i suppose, you could infer the flow.
<nitrix>	i think a language with algebraic data types would greatly help for this.
<nitrix>	dreams: this is how gcc determines that code isn't reachable and will optimize blocks away.
<dreams>	nitrix: yup, that would open new possibilities of optimizations. ghc does something similar for case expressions but at run-time.
<sniper1>	hi, quick question. i'm trying to implement floyd's algorithm and running into an issue. http://pastebin.com/fqrb9msv
<sniper1>	sample output: http://pastebin.com/3dn46zbe (d0 is inputted array)
<nitrix>	of course, gcc cannot optimize false positives, so yeah, i wouldn't be surprised to find more stuff related to that with functional languages.
<sniper1>	note: c++ is used
<nitrix>	dreams: what's the goal exactly? i missed the begining.
<quarterback>	any programmers who want to learn c++ here? i'm looking for a coding partner who can work on books for 4 to 6 months. i am working on stroustrup-c++ programming language , 3rd edition. . communication regarding work would be via email or with irc chat. please respond if interested.
<nitrix>	quarterback: we're not a dating website, lol.
<nitrix>	there's plenty of c++ programmers, experienced and inexperienced in here.
<nitrix>	just go through your book and ask your questions as you go :p
<dreams>	nitrix: that was pretty much it. i'm currently using strictness analysis but its not suitable for the optimization i am trying to apply. i have to reverse the analysis. but was the sort of analysis i mentioned above would be a boost.
<quarterback>	nitrix: i'm looking for a problem solver who would work in parallel, to discuss style, design of c++ algorithms.
<nitrix>	dreams: well you can. i think i can save time by just linking wikipedia: http://en.wikipedia.org/wiki/data-flow_analysis
<pyon>	quarterback: just ask your question whenever you have one.
<nitrix>	dreams: they describe forward and backward analysis a bit.
<quarterback>	pyon: thanks, i actually prefer one or two programmers who can work with me
<pyon>	quarterback: if you want a tutor, hire one, or attend university/school/whatever.
<nitrix>	it's hard to tutor someone when you're not yourself any better at it.
<quarterback>	pyon: don't need a tutor, i need people who can learn by themselves, like me.
<dreams>	nitrix: yeah i have a generic idea about data-flow analysis and thought there is a less specialized analysis for branches. anyway thanks.
<nitrix>	i personally would suggest an external reference.
<nitrix>	pyon's idea.
<nitrix>	:)
<nitrix>	pyon: hi btw !
<pyon>	nitrix: hi!
<quarterback>	nitrix: there are very few experts on c++, perhaps a hundred or two hundred in the entire world. not sure where you are.
<nitrix>	quarterback: certainly not a c++ expert.
<nitrix>	if i could learn the entire c++, i would have no space left for anything else.
<quarterback>	nitrix: good means relatively good. are you good compared to einstein?
<pyon>	chestia: nice nick. :-)
<chestia>	pyon: thanks.
<tmillc>	i think i need new music to code to my streamlined cloud solutions
<pyon>	quarterback: afaik, einstein didn't know c++.
<pyon>	quarterback: also, c++ is a huge language, even by mainstream language standards.
<chestia>	lol
<quarterback>	pyon: whichever it is, science, math or computing.
<tmillc>	https://www.youtube.com/watch?v=q4moxasp9by
<pyon>	quarterback: in any case, several people know c++ here at a reasonably decent level, including yours truly. whenever you have a c++ question, just ask.
<quarterback>	pyon: thanks, i will ask if needed.
<nitrix>	i can help with c, if you change your mind :p
<quarterback>	i can help with c too
<nitrix>	don't chose the dark side!
<tmillc>	there's also the c++ beginner's channel which i forget, but have enjoyed asking random questions to in the past
<nitrix>	blue pill ;-;
<quarterback>	pyon: get the dennis ritchie book and do it completely without leaving even one sentence. you will become an expert.
<nitrix>	pyon: i think you'll get it quickly. you understand undefined behaviors and types very well.
<nitrix>	pyon: your blocker, as far as i remember, were aggregates. arrays and structs.
<quarterback>	c's syntax is very easy but algorithms take days or weeks, months to implement sometimes.
<pyon>	nitrix: arrays. i've used primarily std::vector.
<pyon>	quarterback: i'm reasonably confident in my algorithms-fu. it's the core c language that i need to learn, because i'm not used to being careful with undefined behavior.
<extor>	i thought c was going out of fashion. why are people learning it for no reason
<nitrix>	pyon: yeah okay. so, building effective data structures out of those aggregates is your challenge then :p
<nitrix>	pyon: and, you can't sadly just match the types, it offers no guarantees. a pointer needs storage associated with the pointed object, etc.
<nitrix>	pyon: that'll make you sad xd
<quarterback>	pyon: use good coding standards and design strategies, you will avoid undefined behavior in c then. i have good desgin , coding standard compared to fortuned 50 companies, so my programs dont have undefined behavior. this is important for your programming career imho.
<pyon>	nitrix: doesn't matter, really. i've realized that, in a low-level language, i actually don't want generics or strong static types or anything.
<quarterback>	pyon: i can help you with coding standards if you want.
<nitrix>	pyon: different way of thinking entirely. geez, lua did miracles on you :p what's going on xd
<pyon>	dunno
<quarterback>	features of c which cause undefined behavior: dynamic memory allocation, recursion, function syntax, incorrect use of pointers for starters.
<quarterback>	avoid these, its that simple.
<pyon>	nitrix: it's just that i realized that algebraic data types, implemented naïvely (rust enums, or boost::variant in c++), are actually terribly inefficient. the key to implementing them efficiently is using optimizations that are incompatible with a naïve, straightforward representation.
<pyon>	and using a complicated representation is itself incompatible with giving the programmer full control over the memory layout of data structures.
<wei2912>	hi pyon
<nitrix>	correct. it's almost always a tradeoff.
<pyon>	wei2912: hi.
<quarterback>	pyon: does that make sense to you? follow strict "coding standards" which will result in robust code.
<nitrix>	pyon: i guess that's the part that interest you? learning those tradeoffs?
<pyon>	quarterback: for the most part, i don't believe in coding standards that i can't enforce with a static type checker.
<pyon>	nitrix: that's one thing. another thing is providing better low-level infrastructure for high-level languages.
<quarterback>	pyon: your static code analysis tools do the same, enforce coding standard compliance which the "static analysis tool company" had in mind. it is also possible to have a coding standard which is accepted by many industrise in a domain.
<nitrix>	an ambitious goal :/
<quarterback>	usually such common coding standards make it easy for your static analysis tools so that they wont cry.
<pyon>	quarterback: i like certainty. where most other people see "90% confidence", i just see "uncertainty".
<quarterback>	pyon: avoid other people when it comes to design. there can be 90% people who are extremely sloppy in programming, in usa, asia or europe.
<pyon>	anyway, time to continue hacking this "enhanced b+ tree insertion".
<wei2912>	pyon: have you seen the pastebin i put up yesterday?
<pyon>	wei2912: yes.
<pyon>	wei2912: and i'm afraid it contained an error.
<wei2912>	pyon: where would that be?
<quarterback>	pyon: try to enforce a good coding standard or make up your own.
<nitrix>	quarterback: i think you missed the point.
<pyon>	wei2912: could you provide the paste link again?
<quarterback>	nitrix: what's that?
<wei2912>	pyon: sure, http://pastebin.com/spu27var
<pyon>	quarterback: my point is that "good practices" merely give you "80-90% assurance". i want mathematical proofs, the only way to get 100% certainty.
<pyon>	wei2912: l38
<pyon>	wei2912: counterexample (x,[1,2,3,4]). you claim o wins. that's false. x can eat all 4 chocolates in the last box, and o is left with a losing position.
<nitrix>	quarterback: take referential transparency for example. you could have all the conventions you want, you can't enforce such thing, even if you use call-by-value (take c pointers for example). you need a greater guarantee at the type level that your data is immutable.
<quarterback>	pyon: yes, i think so too, you can be assured that 90% assurance is a certainity in coding, 100% is hard to achieve, you do so by testing your code and then re-designing your code.
<quarterback>	its like a iterative cycle
<wei2912>	pyon: thanks.
<nitrix>	it's been a while i haven't coded in cycles.
<nitrix>	i write it once. it just works.
<pyon>	quarterback: well, i don't need to be taught mainstream software engineering again. i understand how it works. i even use it at work. i just refuse to use it in my personal stuff, because i dislike uncertainty.
<archilius>	that's so lucky.
<quarterback>	pyon: i usually write code which is usually gives 95 to 100%  correct results because of quality, design standards, there are few errors so that i wont have to redesign or modify my designs over and over.
<quarterback>	pyon: i think i code the same at work or for personal stuff.
<pyon>	quarterback: the only thing that gives me 100% confidence that a piece of code works is a mathematical proof (formal or mostly formal) that it meets its specification.
<pyon>	quarterback: tests can tell you "there's a bug here", but they can't tell you "there are no bugs".
<pyon>	(well, unless you test the entire input space, but i don't think human lifetimes are long enough for that.)
<nitrix>	false positives, no wrong negatives.
<quarterback>	pyon: you do that with validation, to see if your final code meets its requirements ( which should be detailed)
<pyon>	quarterback: what part of "tests can't cover every single possible input" is hard to understand? :-|
<quarterback>	pyon: i agree, tests should cover all possible inputs, outputs, conditions, loops
<nitrix>	they can't.
<nitrix>	and only inputs and outputs matters, technically
<quarterback>	nitrix: dont write any line of code which you can't test. this is an important coding rule of c.
<pyon>	quarterback: in the best case, if you partition your inputs in "broad classes", you can pick "good enough representatives" for each class.
<wei2912>	pyon: my base case looks completely wrong.
<pyon>	quarterback: but the classes themselves will be very large.
<nitrix>	quarterback: it's not about testing. testing in itself is flawed, that's what pyon has been trying to say.
<quarterback>	nitrix: testing methods or approaches can be flawed.
<pyon>	quarterback: that a program meets a specification is typically a statement of the form "for every x in t, p(x) holds", where t is either an infinite or at least very large set.
<nitrix>	quarterback: if the type system is good enough, you have a formal proof of the code being correct.
<pyon>	s/good/powerful/
<pyon>	"good" depends on other factors, like, the power-to-cost ratio.
<quarterback>	pyon: it is better you follow a top-down approach in software engineering like i do: concept-requirements-design-implementation-verfication-validation.
<pyon>	(e.g., scala's type system is powerful enough, but it still isn't good.)
<pyon>	quarterback: yeah, i know about software engineering. it's just that i'm not interested in it.
<rockpile>	good = mvp
<quarterback>	pyon: then you wont have bugs in your code , atleast major bugs.
<pyon>	quarterback: i'm interested in mathematics, you see.
<nitrix>	quarterback: this is no better than crossing your fingers. many things can go wrong with those processes. what are you going to do? test your tests?
<wei2912>	pyon: have you found any counterexamples to your conjecture?
<quarterback>	nitrix: things can't go wrong in each stage, thats why there would be audits in each stage to see if you missed any flawed code or approaches.
<pyon>	wei2912: i haven't worked on the problem today.
<rockpile>	devs are the last people who should be testing their own stuff
<wei2912>	pyon: ok.
<pyon>	rockpile: why?
<toccatanfugue>	can someone tell me why does printing some_array[0][0] print [1][1] and some_array[0][1] print [2][2] -- http://hastebin.com/vixahusaso.cpp
<nitrix>	quarterback: that's inacceptable to me.
<pyon>	rockpile: i don't see how anyone else writing the tests should give me more confidence.
<toccatanfugue>	why are 2d arrays so difficult in c
<quarterback>	in most companies i worked, there would be different people:  architects, requirements engineers, software engineers, testers,quality engineers. quality engineers do audits for every code change or new code to be defined, implemented.
<rockpile>	its not about giving you, the dev, more confidence
<nitrix>	toccatanfugue: primarily because people don't understand that arrays in c only have one dimension.
<anj7>	hey what mouse should i buy for programming?
<pyon>	quarterback: "auditing" --> that's just saying someone else will check the code, but that doesn't guarantee that the check will be perfect.
<quarterback>	pyon: i stress design standards for the same reason, to achieve high quality.
<rockpile>	its about making sure what you coded is doing what the project says its supposed to do
<grill>	yo
<quarterback>	pyon: it will be perfect, our job is to make things perfect.
<pyon>	quarterback: lmao
<pyon>	quarterback: if perfection were our business, i'd have died of starvation already.
<nitrix>	quarterback: i wish i could be like you and live in denial with the comfort of buzzwords.
<grill>	question: if i do research for an independent study (under a professor) in college, am i a research assistant?
<quarterback>	pyon: correc would be the right term, if perfection is achieved with that, its all good for us.
<toccatanfugue>	nitrix: will attempting to print array[0][0] ever work then?
<quarterback>	pyon: correct would be the right term, if perfection is achieved with that, its all good for us.
<toccatanfugue>	or should i attempt to print *(array + 0, + 4, etc) for ints
<nitrix>	toccatanfugue: depends, you haven't stated your problem yet. it could be the same as printing some `x`. what are you trying to do?
<pyon>	quarterback: you can only claim a program is "correct" when you're 100% sure the program works as specified under all circumstances - even in the tricky corner cases.
<toccatanfugue>	nitrix: i have some more info in that hastebin -- i'm readin a file that has 2 ints per line. i want to store that in a 2d array
<nitrix>	toccatanfugue: *(array + 0, + 4) is a syntax error.
<quarterback>	pyon: i make sure the program works correctly in all scenarios , even if you run the program for 50 years without the off switch.
<grill>	question: if i do research for an independent study (under a professor) in college, am i a research assistant?
<toccatanfugue>	i know, i just wanted to express moving the pointer up the size of an integer
<pyon>	quarterback: are you really sure about that?
<nitrix>	toccatanfugue: you could declare a multidimensional array, which is an array who values are other arrays.
<kahrl>	quarterback: how do you test if the program runs for 50 years, without... actually running it for 50 years? (since you don't want to prove that it does)
<quarterback>	pyon: that is how robust programs work, think of chemical factories, airplanes, automobiles.
<pyon>	quarterback: i think you missed the "100% sure" part.
<nitrix>	toccatanfugue: int arr[50][50]; for example.
<grill>	question: if i do research for an independent study (under a professor) in college, am i a research assistant?
<toccatanfugue>	i have done that nitrix
<nitrix>	toccatanfugue: then, what?
<toccatanfugue>	let me give you a code snip, one sec
<nitrix>	toccatanfugue: you iterate with indexes.
<kahrl>	quarterback: in fact, i read today that a boeing 787 shuts off after running for 248 days, because of an integer overflow that apparently wasn't caught in the tests
<nitrix>	toccatanfugue: err, indices.
<quarterback>	pyon: you are talking for the sake of talking, i dont think you have any idea of what you are talking here.
<toccatanfugue>	nitrix: http://pastebin.com/nmwzr4xn
<kahrl>	(for the curious, 248 * 86400 * 100 is about 2^31)
<pyon>	quarterback: i'm pretty sure what i'm talking about.
<pyon>	quarterback: it's frigging hard to provide a convincing proof that a program is correct.
<nitrix>	toccatanfugue: okay, what's the issue?
<pyon>	quarterback: and i also know very well that the endless cycle of programming-testing-[not finding bugs yet]-deploying-crashing-auditing-[fixing bugs]-[introducing other bugs] doesn't lead to perfection.
<quarterback>	there are no endless cycles. there are only limited cycles if you know a programmming language. if you dont know programming then the cycle would take eternity.
<nitrix>	most programmers only know that cycle though.
<rumpledelf>	wait what, software things get finished and bug free?
<rumpledelf>	when did that happen?
<toccatanfugue>	nitrix: the original hastebin - http://hastebin.com/vixahusaso.cpp, printing some_array[0][0] prints 1,1 and some_array[0][1] prints 2,2
<pyon>	quarterback: lol, i know several programming languages well, not just one - and knowing languages/libraries/whatever alone doesn't free you from bugs. the only thing that frees you from bugs is using a mathematical approach to derive programs from formal specifications, which avoids introducing bugs in the first place.
<toccatanfugue>	nitrix: actually i want to apologize
<toccatanfugue>	i have gone retarded
<toccatanfugue>	printf("[%d][%d]\n", pt_array[0][0]) <-- look at that and tell me whats wrong
<pyon>	quarterback: and it's too expensive to actually do it in the real world.
<toccatanfugue>	fuck my life
<quarterback>	pyon: i am also in favor of such quantitave or qualititave approach.
<quarterback>	pyon: i am also in favor of such quantitative or qualititave approach.
<rumpledelf>	pyon: some places in the military do it, but your point about real world stands ;)
<pyon>	quarterback: quantitative?
<pyon>	quarterback: there's nothing quantitative about formal proofs.
<rumpledelf>	i do not thing that word means what you think it means
<quarterback>	pyon: your approach itself should be measured or proved.
<nitrix>	toccatanfugue: it seems impossible for me to get 1,1  or 2,2  or x,x for that matter. the numbers in the test file being all unique and the interators being post-incremented, it's impossible.
<pyon>	quarterback: it's symbol-crunching, but the symbols typically aren't numbers.
<nitrix>	toccatanfugue: i think your test case is incorrect.
<toccatanfugue>	nitrix: thats because i have 2 %d
<pyon>	quarterback: so there are no "quantities" to speak of
<toccatanfugue>	and i'm pointing it to a single int :\
<toccatanfugue>	nitrix: it should read printf("[%d][%d]\n", pt_array[0][0], pt_array[0][1]);
<nitrix>	toccatanfugue: possible, you haven't shared that code with me.
<toccatanfugue>	nitrix: and i hate myself for that.
<nitrix>	ahah.
<nitrix>	glad you found it though :p
<toccatanfugue>	thanks :)
<quarterback>	pyon: i need to think about such approaches to see what could be possible.
<_x_c_v_b_>	http://www.contentamp.com/wp-content/uploads/2013/04/meme7.jpg
<nitrix>	pyon: ultimately, formal proofs yields true or false?
<pyon>	nitrix: that's one way to prove things - to write an arbitrarily complex proposition, and then "massage" it to show that it's logically equivalent to "true".
<nitrix>	well, truth-values?
<nitrix>	yeah. i've had a glimpse of it when doing type/category theory, with the elimination rules.
<nitrix>	i should continue :)
<pyon>	nitrix: what exactly constitutes a "proof" depends on what formal system you use to prove things.
<pyon>	if you use natural deduction, a formal proof looks like a huge tree.
<nitrix>	yeah, deductive systems?
<pyon>	some formal systems are deductive systems.
<nitrix>	bunch of axioms, transformation rules and whatnot.
<nitrix>	see, that was fun. i should have kept at it.
<nitrix>	pyon: i'm going through the entire esoteric language list to maybe find a gem.
<pyon>	heh
<nitrix>	i guess that's the dev equivalent of doing sports.
<archilius>	anyone here know about chef language?
<nitrix>	!sauce
<archilius>	seriously worth checking out. it's the recipe for success.
<wei2912>	archilius: horrible pun there
<sparkyflary>	do companies nowadays still take out a life insurance on their employees?
<sparkyflary>	i would hate to have an employer that wants me dead after working for them
<sparkyflary>	i hear hitmen are cheap nowadays
<pyon>	sparkyflary: they've always been cheap. at least here.
<anj7>	hey guys what mouse do you use?
<hotcoder>	hello all :)
<anj7>	i'm thinking to buy a mouse
<pyon>	sparkyflary: sometimes even formal, well-known businesses resort to hiring hitmen to settle issues.
<archilius>	wei2912 yep. i try.
<sparkyflary>	yeah what banks would do is after firing their executive they pay like half of 100000 dollars to cash in 300000 in insurance
<sparkyflary>	on a hitman
<sparkyflary>	does guru.com charge taxes after doing a software job for someone?
<hotcoder>	guys
<hotcoder>	why is java hated so much?
<hotcoder>	personally i code fine with it
<pyon>	hotcoder: languages reflect how their users think. and different people think in different ways.
<pyon>	hotcoder: and, no matter how open-minded we might seem, deep inside, we're emotionally attached to the way we think. it's a part of what defines us.
<hotcoder>	thats kind of a backhanded way of calling me slow and painful isnt it? lol
<pyon>	hotcoder: no.
<pyon>	hotcoder: i'm not calling you anything.
<hotcoder>	i'm just kidding :)
<hotcoder>	but i've been called that by a few people on irc
<hotcoder>	before
<sparkyflary>	it does what c++ can do with worse defaults and some handholding
<hotcoder>	comparing me to java cause java is slow and has security
<hotcoder>	issues
<pyon>	sparkyflary: some of java's defaults are better than c++'s.
<pyon>	sparkyflary: for example, no memory corruption is a good default.
<rumpledelf>	try being a php programmer and dating someone who uses an infinitely superior language. or so i am told. often.
<pyon>	hotcoder: i don't think java's main issue is runtime speed.
<sparkyflary>	i meant things like vectors and arraylists
<pyon>	hotcoder: or even security issues.
<hotcoder>	then why does everybody complain about it?
<pyon>	hotcoder: that varies from programmer to programmer.
<hotcoder>	i know
<hotcoder>	i know the opinion thing
<pyon>	hotcoder: dynamic language users will complain that java isn't dynamic enough.
<hotcoder>	its old shit it doesnt need to be repeated
<hotcoder>	what is the most popular reason for the hate on java
<sparkyflary>	it doesnt play by the rules
<pyon>	hotcoder: people who like typeful programming (like me) will complain that java's type system is useless as a reasoning tool.
<sparkyflary>	vectors should be better but somehow in java its not
<dreams>	hotcoder: i think the community part has an impact too.
<ori_b>	my complaint about java isn't the language
<hotcoder>	typeful programming?
<ori_b>	but the culture surrounding it.
<pyon>	ori_b: the culture around it?
<hotcoder>	example?
<pyon>	heh.
<dreams>	ori_b: exactly.
<hotcoder>	ori_b, what is the culture?
<ori_b>	abstractfactoryfactory
<ori_b>	basically, let's make everything super-abstract and configurable
<ori_b>	and put everything into tiny, dependency-injected modules
<pyon>	hotcoder: typeful programming is when you design your program in ways that make the typechecker your ally, not your enemy. it means making it so that "it type checks, ergo it's correct" holds.
<ori_b>	and layer everything in dozens of wrappers
<sparkyflary>	java has the best tutorials out there, oracle put good effort into it being spread fast
<dreams>	aka over-engineering.
<ori_b>	so when i try to read code, i find myself jumping through so many layers of indirection that i can't figure out where the algorithm is, or what the core data structure is.
<ori_b>	dreams: it's a specific kind of over-engineering, though
<pyon>	ori_b: i'd say abstraction itself isn't the problem. the problem is that java forces you to write a lot of code for each abstraction layer..
<dreams>	ori_b: well its the language fault.
<dreams>	yup ^
<ori_b>	dreams: no, no it's not.
<pyon>	abstraction in haskell is basically painless.
<hotcoder>	i hate the wrapper thing
<hotcoder>	what ori_b
<hotcoder>	said
<hotcoder>	thats so true
<ori_b>	you could write simple and straightforward code.
<ori_b>	it would be less abstract, but, for example, the lua vm in c is in an even less featureful language.
<dreams>	ori_b: yeah then when you abstract little by little you fall in the layers trap.
<hotcoder>	the abstraction
<hotcoder>	ah yes
<hotcoder>	you guys are showing me the other side of the grass
<pyon>	imo, abstractions are okay as long as they aren't leaky and they aren't verbose.
<hotcoder>	so many problems mentioned here, i just accepted as fate
<ori_b>	they *could* do similar abstraction shit, but instead they just write straight though code.
<hotcoder>	because all i ever coded was java
<ori_b>	pyon: sure, i don't necessarily disagree.
<hotcoder>	now its like "whoa, you can do that easier in other languages?"
<dreams>	the abstraction mechanism itself can make you write verbose code.
<ori_b>	my point is that it's a cultural problem.
<ori_b>	it's not the fault of the language.
<pyon>	dreams: well, if your only way to abstract over a component is to use what oopers call "composition", of course abstraction will look bad.
<ori_b>	hotcoder: you can write clear code in java.
<ori_b>	it's just that people don't, and then you have to deal with it if you aren't working in a world of your own.
<hotcoder>	no you cant
<hotcoder>	you need a thousand wrappers
<pyon>	dreams: what oopers call "composition" is, deep inside, encoding higher-order functions in a very cumbersome way.
<dreams>	pyon: i hate heterarchy and favor composition.
<ori_b>	hotcoder: why? you can just write the code that does what you need.
<ori_b>	the wrappers are unnecessary.
<hotcoder>	wat...
<hotcoder>	what are you talking about when you say wrappers
<hotcoder>	give an example
<dreams>	hierarchy*
<ori_b>	ever used guava or guice?
<ori_b>	ever tried to trace where code is coming from with a significant application?
<hotcoder>	no
<hotcoder>	ye second one yes
<hotcoder>	first one no
<pyon>	ori_b: heh, it must suck to navigate the entire call stack when you write idiomatic java. :-p
<dreams>	pyon: i never face these kind of abstraction troubles with fp. well only in few occasions.
<pyon>	dreams: what oopers call "composition" isn't function composition.
<ori_b>	yeah. instead of all the dependency injection crap, just do 'x = new foo()'? it's a bit less generic, but you know what you're getting.
<pyon>	dreams: that's why i used scare quotes.
<dreams>	heh
<ori_b>	and instead of tons of objects, why not just call a function?
<pyon>	dreams: function composition, of course, is beautiful.
<pyon>	hotcoder: the problem with java is that its type system has a very low power-to-cost ratio. its type system is static enough that you need to be aware of it when designing your programs. but it isn't expressive enough that you'll get useful correctness guarantees out of typechecking.
<encapsulation>	https://ideone.com/xr0fdf why output nil?
<pyon>	what's the point to typechecking if "it typechecks" doesn't mean anything? basically, there's none.
<ori_b>	pyon: yes, that can make java clunky, but.. meh; in the end it's not something that hurts me as much as all the other shit i mentioned.
<hotcoder>	true
<numb3rz>	watssss uuuuppppp
<pyon>	ori_b: totally agreed about the layering thing. when trying to trace the source of a problem, it's definitely annoying.
<hotcoder>	in the end i like it
<numb3rz>	.
<hotcoder>	cause i'm used to it
<pyon>	hotcoder: sure. ultimately, it all boils down to "i'm used to foo, i don't want to have to learn bar, because it's so different from foo."
<ori_b>	i find that i don't actually make all that many non-bleeding-obvious type errors
<hotcoder>	haha yeah
<hotcoder>	i feel like, while i code java, i still dont understand efficient programming
<pyon>	ori_b: that's exactly the problem. the language isn't powerful enough to turn many logical errors into type errors.
<hotcoder>	the way the professionals do it
<hotcoder>	i feel like i waste too much memory
<ori_b>	pyon: eh, i guess i should play with idris.
<hotcoder>	what can i do to learn more efficient progamming?
<pyon>	ori_b: when the set of "type errors" doesn't include a significant subset of the set of "logical errors", the type system becomes annoying.
<pyon>	and you'd much rather have no type system.
<pyon>	at least that's how it works for me.
<ori_b>	but the kind of logical errors that i've made most recently were things like "oh, it turns out that the connection times out if i block waiting for a message, so i need a keepalive"
<ori_b>	or the most recent one was "i forgot to update the string we're comparing against in a unit test, and forgot to run the test before submitting"
<pyon>	:-o
<ori_b>	(changed the functional spec, didn't update the expected results.)
<hotcoder>	what do you guys think about efficiency in programming?
<hotcoder>	do tell
<njcomsec>	efficiency is bad
<ori_b>	hotcoder: know what your profile will be.
<ori_b>	have an idea of what kind of messages/io you will be doing.
<dreams>	hotcoder: if you mean memory, i think few programmers knows what it means to write space-efficient programs.
<ori_b>	worry about microoptimizing hot spots later.
<hotcoder>	yeah that. memory in terms of ram used
<hotcoder>	i want to be as efficient
<hotcoder>	so the user's computer dont slow down while my process is running
<ori_b>	memory is cheap, but not free.
<ori_b>	keep an eye on your big o.
<ori_b>	overall, the details depend on the problem.
<hotcoder>	i dont want them to require huge amounts of ram to use my software lol
<hotcoder>	big o?
<hotcoder>	whats that
<ori_b>	o(n)
<ori_b>	etc
<ori_b>	http://en.wikipedia.org/wiki/big_o_notation
<hotcoder>	oh i heard that in
<hotcoder>	discrete math
<hotcoder>	i learned that
<hotcoder>	but
<hotcoder>	how does it appy to programming?
<dreams>	hotcoder: what you want to keep an eye on is the lifetime of memory objects, with respect to their memory consumption.
<hotcoder>	dreams, do go on :)
<ori_b>	uh... basically you want to know how your algorithms and data structures scale with respect to inputs.
<ori_b>	how does it /not/ apply to programming?
<hotcoder>	how do i make sure these lifetimes are most efficient?
<darkcthulhu>	how do you know you're doing as well as you can.
<hotcoder>	give me some advice/links/literature on the matter
<darkcthulhu>	hi ori_b, what's up?
<dreams>	hotcoder: you can't, unless your programs are simple. the common solution is use a profiler, identify hotspots in programs and replace long-lived object consuming high-memory with cheaper ones. of course, algorithmic choices contribute to your overall (space * time) ratio.
<ori_b>	darkcthulhu: not too much.
<encapsulation>	big o notation
<encapsulation>	qualitative algorithmic analysis
<hotcoder>	alright
<hotcoder>	thanks guys :)
<hotcoder>	i just want to make the fastest,most efficient version of this project possible
<dreams>	hotcoder: but an understanding of the underlying implementation would also help (eg. how to make an object dead in the eyes of the garbage collector).
<ori_b>	hotcoder: 99% of the time will probably be spend in 1% of the code.
<myrl-chan>	ori_b: ++.
<ori_b>	as long as you don't do something utterly boneheaded, and keep an eye on the profiles, you should be ok.
<pyon>	myrl-chan: just watched the first episode of plastic memories.
<myrl-chan>	when i started using haskell, i don't really care about microoptimizating my code anymore.
<hotcoder>	profiles?
<ori_b>	micro optimizing is fun.
<hotcoder>	what profiles?
<pyon>	myrl-chan: yes, that's the best side effect of using haskell!
<myrl-chan>	pyon: i like her hair. it looks like wins.
<pyon>	myrl-chan: isla?
<hotcoder>	sorry if its a stupid question
<myrl-chan>	pyon: wings* and yeah.
<myrl-chan>	ori_b: yeah, it's fun.
<ori_b>	hotcoder: http://en.wikipedia.org/wiki/profiling_%28computer_programming%29
<myrl-chan>	ori_b: but sometimes, you'd just like to get your shit done.
<ori_b>	myrl-chan: sure.
<pyon>	myrl-chan: haskell is the only language in which i feel comfortable implementing a non-optimal algorithm first.
<myrl-chan>	pyon: ikr?
<pyon>	myrl-chan: in other languages, even ml, i feel morally obliged to make everything optimal right from the beginning.
<ori_b>	huh; i usually go to non-optimal in c first.
<myrl-chan>	pyon: in c and lua, i feel like "it doesn't work if it isn't optimal"
<pyon>	ori_b: i'd hate to rewrite any significant amount of c code.
<pyon>	that's my main reason for optimizing right from the beginning.
<pyon>	but rewriting haskell code isn't painful.
<ori_b>	eh, rewriting is easy.
<myrl-chan>	pyon: ++.
<ori_b>	i do it pretty often.
<dreams>	hotcoder: well 'real' memroy profiling started in funcitonal languages, in particular haskell. a good early papers on memory profiling is in ( http://tinyurl.com/mk3jfjc ) it will set your mind on what memory efficiency.
<myrl-chan>	everytime i code, i usually just write a function once, and never touch it again.
<myrl-chan>	mostly in c and lua.
<myrl-chan>	never touch it again, in the sense of rewriting it.
<hotcoder>	ok
<hotcoder>	what is this profile thing you keep talking about and i need to get educated on that matter
<dreams>	hotcoder: the authors of this paper were the first to write memory profiling tools for programmers, before that memory profiling was used by researchers to study the efficiency of run-time implementation techniques.
<hotcoder>	thank you so much dreams
<hotcoder>	and i bookmarked :d
<pyon>	myrl-chan: rewriting c or c++ code is nasty.
<dreams>	no problems.
<pyon>	myrl-chan: "why should i have to manually prove again these invariants that took me so much hard work to establish?"
<ori_b>	hotcoder: see the last link i posted.
<hotcoder>	oh shit
<hotcoder>	yeh
<hotcoder>	thanks ori_b
<hotcoder>	:)
<ori_b>	dreams: er, what? i'm pretty sure profiling was a thing in the '70s, before ml even really a thing...
<dreams>	ori_b: nope.
<dreams>	ori_b: the first memory profiler for programmers in early 90s.
<ori_b>	ibm mainframes in the '70s.
<myrl-chan>	pyon: also, "i feel morally obliged to make everything optimal right from the beginning." it's even worse once you realize that once you've written your code, you'll find a more optimized algorithm!
<pyon>	myrl-chan: ikr
<dreams>	ori_b: link your paper? i wrote a literature review on memory profiling there is no link to memory profiling "for programmers" before 90s.
<pyon>	myrl-chan: it took me a week to implement and prove b-trees correct.
<pyon>	myrl-chan: and then i realized i need b+ trees instead.
<dreams>	ori_b: ah by the way
<myrl-chan>	pyon: that feeling.
<pyon>	(because b-trees don't support bulk insertion.)
<pyon>	(or bulk deletion.)
<dreams>	note i said "real" memory profiling; allocation count profiles do not count because they can mislead you.
<rockpile>	what does memory profiling even mean
<ori_b>	dreams: so what are the properties of "real" profiling?
<ori_b>	dumping sizes of allocated memory at intervals in the program seems to be basically the core idea...
<dreams>	rockpile: its a summary of how memory varies over the time the program takes to run.
<ori_b>	for all memory profiling i'm aware of.
<dreams>	ori_b: allocation count is not a measurement of how much space you program need.
<rockpile>	dreams: if that didnt happen before the 'nineties' i would be very very surprised
<ori_b>	er?
<dreams>	you could have 1000 allocations taking constant space; allocated, freed and re-used.
<numb3rz>	are there any pat's that you recommend
<ori_b>	...er, yes; i'm not aware of any systems that count allocations.
<dreams>	ori_b: memory-used is measured by showing how much *live* space your program consumes.
<ori_b>	because that would be useless for anything other than trying to estimate cpu usage.
<ori_b>	yes.
<dreams>	yup.
<ori_b>	malloc(sz) { live += sz; ...}
<ori_b>	free(ptr) { live -= size(hdr(ptr)); }
<dreams>	ori_b: it did not happen before the 90s.
<ori_b>	i'm pretty certain that this was around for quite a while.
<dreams>	ori_b: before the 90s it was used for studying implementation techniques by researchers only.
<rockpile>	dreams: nothing was invented in the 90s
<rockpile>	except for maybe shake-weight
<ori_b>	dreams: erm... i'm pretty skeptical of this, considering it's a bleeding obvious idea.
<ori_b>	it probably didn't have papers because if you don't have a gc, i don't think there's anything to write about.
<ori_b>	maybe trying to do thread local stuff for performance.
<ori_b>	"yeah, we incremented and decremented a running total..."
<rockpile>	whats the point of this argument?  dick measuring contest?
<dreams>	ori_b: well, if you can prove it i'd be surprised. because there is no link at all. i even know the inventor of the first memory profiler "for programmer", he took the credit of memory profiling.
<dreams>	ori_b: nope, if it was something which contributed to programming, it would have a paper.
<rockpile>	dreams, fucking newsflash, lots of shit happened before the 90s there is no link to on the internet..
<dreams>	rockpile: papers exists from the 60s online.
<rockpile>	dreams: papers from the 1600s exist online, that doesnt mean anything
<dreams>	rockpile: of course, few by then. the 70s 80s paper are a lot.
<dreams>	actually my favourite papers are from the 80s.
<myrl-chan>	"when the heart has stopped, attempting defib only risks damage to the heart muscle (hint: a heart electrocuted into medium rare is not very suitable to pumping blood)"
<myrl-chan>	lol
<rockpile>	dreams: well, thats specific
<jeaye>	rockpile: nothing was invented in the 90s?
<rockpile>	jeaye: shake-weight was, didnt you see my comment?
<jeaye>	linux? vim (not vi)? lots of popular software.
<dreams>	jeaye: don't bother his a troll.
<rockpile>	not a troll
<myrl-chan>	hmmm
<jeaye>	that's exactly why i'm bothering, dreams.
<rockpile>	the idea that memory profiling was invented in the 90s is absurd
<dreams>	rockpile: read the history part at the end in http://tinyurl.com/mk3jfjc
<dreams>	section 5
<rockpile>	yes, it says there was true memory profilers invented in the 70s.. whats the problem here?
<dreams>	they were not for programmers. for researchers studying efficient implementation techniques for implementing programming languages.
<dreams>	i said above, the first profiler "for programmers".
<dreams>	*memory profiler
<rockpile>	they still existed.. who cares who used them
<encapsulation>	https://ideone.com/xol2qo https://github.com/adafruit/adafruit_python_dht/blob/master/source/raspberry_pi/pi_dht_read.c
<encapsulation>	where di o go wrong!?!?!?!?!?!?
<dreams>	i thought you said " the idea that memory profiling was invented in the 90s is absurd"
<rockpile>	i did, it wasnt invented in the 90s
<rockpile>	is there an esl thing going on here?
<dreams>	rockpile: it was, i am talking about memory profiling for programmers.
<rockpile>	according to this paper, the tools were invented in the 70s, programmers didnt start using them until the 90s.. whats the problem?
<njcomsec>	90-70=20
<dreams>	sigh
<rockpile>	the paper is just the authors opinion anyways.. who cares?
<dreams>	rockpile: nevermind.
<farrioth>	encapsulation: since you're passing the addresses of humi and temp, you probably want to print their contents, not what they point to.
<encapsulation>	farrioth, it wont even compile
<encapsulation>	farrioth, main.c:14:27: error: invalid type argument of unary ‘*’ (have ‘float’)
<farrioth>	encapsulation: it's telling you that you can't dereference a float, which probbaly isn't what you want to be doing, anyhow.
<xgc>	encapsulation: void func(float *x, float *y) { }   int main() { float z1, z2;  func(&z1, &z2); return 0; }
<kazagistar>	a company that recently hired me wanted to do a background check through some subcontractor called hireright. i filled out their form, and they have been sending me emails to prove my past employments by sending them tax/salary information. is this normal? it smells like some corporate bullshit.
<farrioth>	kazagistar: that sounds suspicious to me.
<kazagistar>	well, its not illegal to not have any tax information anymore, so i can just say i don't have any of that documentation (ie "sod off").
<farrioth>	kazagistar: isn't tax information supposed to be confidential, anyway?
<kazagistar>	yeah, thats what i thought
<kazagistar>	plus, past salary information can be used against you in negotiations (though in this case, the compensation is agreed on already).
<kazagistar>	i guess i am just verifying that a bit of pushback is in order
<farrioth>	kazagistar: yes, some "sod off" is in order :p
<encapsulation>	https://github.com/adafruit/adafruit_python_dht/blob/master/source/raspberry_pi/pi_dht_read.c how do i use this?
<encapsulation>	i don't understand at a basic level how to use this existing code
<encapsulation>	there doesnt appear to be sufficent documentation to learn how
<encapsulation>	this is my first c program
<encapsulation>	i've been learning c++ but it's not seeming to help at all
<kazagistar>	encapsulation: well, why do you want to use it? what do you expect it to do?
<encapsulation>	i want to read from my dht22 sensor
<encapsulation>	and change two vars in my program
<encapsulation>	i've been trying to start by making a basic test program
<kazagistar>	ok, so first start at the type signature of the function... there are 2 inputs, and 3 outputs
<encapsulation>	kazagistar, https://ideone.com/0jobwi
<encapsulation>	main.c:14:27: error: invalid type argument of unary ‘*’ (have ‘float’)
<numb3rz>	encapsulation: i have the arduino but heard that the raspberry pi is better is this true??
<encapsulation>	they are different
<encapsulation>	arduino can read analog
<encapsulation>	pi needs acd
<encapsulation>	adc
<kazagistar>	the return value, int, seems to be an error code. you should check it to see if it errors or not
<encapsulation>	pi is faster and more capable overall perhaps it runs full os
<kazagistar>	the first value is a type... search the code for where it is used to see what possible values are
<encapsulation>	kazagistar, i can't get it to compile
<kazagistar>	the second value is a pin
<encapsulation>	first value is the sensor type
<encapsulation>	22 for me
<encapsulation>	then pin yeah
<kazagistar>	uh
<encapsulation>	then i don't quite understand the pointers
<farrioth>	encapsulation: did you read my comments above?
<kazagistar>	else if (type == dht22)
<kazagistar>	the pointers are also return values
<encapsulation>	farrioth, i sort of understand
<numb3rz>	adc??
<farrioth>	encapsulation: what bit are you stuck on?
<encapsulation>	all i wanted to do was get the humi and temp from my sensor without having to use python
<encapsulation>	i can't get it to compile
<farrioth>	numb3rz: alalog to digital converter.
<encapsulation>	i posted my main as of right now
<encapsulation>	my error and the library
<numb3rz>	gotcha
<farrioth>	numb3rz: most (all?) arduini have one build in, so you can read analog sensors easily.
<encapsulation>	gcc *.c -o test -std=gnu99 -lrt that was my compile command
<farrioth>	encapsulation: "... you probably want to print their contents, not what they point to."
<kazagistar>	well, your compile error is that you adont have a common_dht_read.h file
<farrioth>	encapsulation: does this make sense?
<kazagistar>	wait fuck
<kazagistar>	im too tired for this lol
<encapsulation>	i thoguth i was dereferencing them
<kazagistar>	nvm me
<numb3rz>	farrioth: oh ok i habe the arduino.uno
<encapsulation>	to get their values
<encapsulation>	i only know c++ right now
<encapsulation>	and barely
<farrioth>	encapsulation: you are, but you shouldn't be.
<farrioth>	encapsulation: humi and temp will contain values, not pointers to values.
<kazagistar>	type of humi == float;  type of &humi == pointer to float; type of *humi ==.... dereference a float???
<encapsulation>	oh
<encapsulation>	i thought humi was a float pointer
<xgc>	kazagistar: well, he could be using the wrong include file.  your comment isn't completely off.  when he corrected the program, as i showed, he just didn't like that it compiled and ran without doing anything obvious.
<encapsulation>	nevermind i changed that
<encapsulation>	i see
<kazagistar>	"*humi" means, semantically "go to the memory location pointed to by the number "humidity"
<xgc>	encapsulation: you needed to pass &varname, not *varname.
<xgc>	encapsulation: at least in the orignal program.  for printf, just pass varname if it's float.
<farrioth>	numb3rz: its pins a0-5 are connected to an adc internally.
<kazagistar>	xgc: i was just looking at the ideone compile error, which was obviously useless lol
<xgc>	kazagistar: *nod* i know.
<aawe>	i am looking for a word x: "temperature is either x in kelvin, celsius or fahrenheit", "the vector data is x in the wgs84 projection"
<encapsulation>	ok
<farrioth>	aawe: x = ""
<kazagistar>	lol farrioth, well played
<farrioth>	aawe: also, "data are" or "datum is".
<xgc>	encapsulation: the fact that the call did not do what you thought isn't something we can do anything about.  but fix the printf call.  you write that to work with float *temp;
<encapsulation>	it compiles now, https://ideone.com/rokaoo but the output of humi is 0xd and temp is (nil)
<kazagistar>	its degrees though
<xgc>	encapsulation: now that you have float temp;, just pass temp to printf.
<aawe>	no correct answers as of yet
<kazagistar>	aawe: thats what your teacher wants, "degrees"
<aawe>	does no word for this exist?
<aawe>	kazagistar: my teacher?
<kazagistar>	well, i dunno, seems a silly question, so i assume it is homework
<xgc>	encapsulation: now you have a question for the authors.
<encapsulation>	xgc, i do?
<farrioth>	aawe: the sentences are grammatically correct to me if x == "".
<xgc>	encapsulation: unless you like that behavior.
<encapsulation>	i don't like it at all
<encapsulation>	i wan't to read from my sensor
<encapsulation>	it cost me 2.50
<farrioth>	aawe: (assuming you fix the subject-verb agreement in the second one.)
<aawe>	kazagistar: you and your silly answers
<xgc>	encapsulation: does someone here know about this api?
<encapsulation>	nobody i've asked anywhere seems to =\
<xgc>	encapsulation: i bet there's a forum which supports it.
<encapsulation>	there is
<encapsulation>	there is the adafruit forums, but it seems like most people used python
<encapsulation>	instead of the underlying c code
<encapsulation>	i'll dig deeper
<farrioth>	encapsulation: read the man page for printf; you don't want to be using %p to print a float.
<encapsulation>	thats probabl;y a good idea i've never used printf
<encapsulation>	i just found that line online
<xgc>	encapsulation: maybe stop using c.  the cost / benefit can be rather high.
<encapsulation>	i only need it for this one little bit
<xgc>	encapsulation: %p was because you initially were using pointers.
<kazagistar>	irc tends to be better for general questions;, special libraries for special hardware are hard to find someone online for, reading and understanding a couple hundred lines of code is a lot of work to ask
<aawe>	farrioth: i don't care that it's gramatically correct, i want a descriptive word about the semantics of the data, and not "if the filtered data is not wgs84, it is converted to it" which reads childishly
<xgc>	encapsulation: read about c, if you really want to learn c.
<xgc>	encapsulation: don't bother with this api until you have a better grasp of c, in a few years.
<encapsulation>	a few years? lol
<encapsulation>	i need to finish this program in a few weeks
<xgc>	encapsulation: or more.
<encapsulation>	i can't wait years
<farrioth>	aawe: "if the filtered data are not in wgs84 format, then they are converted to it." that reads fine to me.
<aawe>	encapsulation: ignore him, c is not a complex language. you'll know it good enough in a few weeks of hard work
<encapsulation>	i'll study hard
<xgc>	encapsulation: trust me.  it can take many years to begin to understand all the things you don't quite understand, even as a professional. it's one of the more difficult languages to use properly, with very little benefit for that level of work.
<encapsulation>	surely this single function library should be easy enough to use though
<encapsulation>	its from adafruit
<xgc>	encapsulation: after about 35 years of c, i have a slight understanding.
<encapsulation>	they are supposed to be all about easy to use get right into things
<farrioth>	encapsulation, xgc: sure, lots of things can be hard to do well in c, but it's not too hard a task to understand enough c to get data from this sensor with this api, and print them.
<xgc>	encapsulation: i started with c professionally.
<aawe>	jesus christ xgc, you really are trying your hardest to make encapsulation give up c
<numb3rz>	damn xgc: that makes u kinda old
<kazagistar>	its not that bad, you can get it working in a bit
<farrioth>	encapsulation, xgc: incedentally, i have used a dht22, although with a different api.
<xgc>	aawe: no. i want him to understand what he's getting into.  he won't stop.  i know that.
<encapsulation>	farrioth, was it easy to use?
<encapsulation>	im not commited to this library
<encapsulation>	api?
<encapsulation>	whatever it may be
<kazagistar>	encapsulation: you should add -wall or something to your ggc line, so it will tell you about your printf errors
<farrioth>	encapsulation: this one was for the arduino, and i think it was pretty similar, really.
<xgc>	encapsulation: c is a challenge.  many people love a challenge.  nothing wrong with that.  just be more careful to test your understanding before confusing yourself in the context of another api you also don't know.
<kazagistar>	that i can get behind ^^^
<farrioth>	encapsulation: the api you're using looks simpler, actually (the one i used was in c++).
<encapsulation>	i managed to get the reading printing 0.000000
<kazagistar>	i just spent the last few weeks looking at opengl code, which exposes what seemed like an impressively terrible api
<farrioth>	encapsulation: cool; that might mean that you're using the api correctly, but it's returning an error.
<farrioth>	encapsulation: i suspect the function's return value will indicate an error.
<myrl-chan>	opengl makes no sense to me. <.<
<encapsulation>	ok
<encapsulation>	it returns -4
<xgc>	encapsulation: one of the first things the function does is assign 0.0f to your floats, after which it might return an error.  there's also one case where it might return an error before that initial assignment, when you pass a null pointer.  but you're not doing that.  so look at the error returned.
<aawe>	myrl-chan: have you read anything about it at all?
<kazagistar>	myrl-chan: it makes a teeny bit of sense once you realize that basically everything is being passed around as either global "binding" state, or gluint pointers to some kind of formless state on the graphics card <_<
<myrl-chan>	aawe: i checked out the tutorial in ##opengl's topic.
<farrioth>	encapsulation: either the api's documentation or its code itself should tell you what a -4 means.
<encapsulation>	ill check now
<kazagistar>	encapsulation: the header file will define a dht_<something> for it
<xgc>	encapsulation: the include files will provide the error codes as well.
<encapsulation>	 #define dht_error_gpio -4
<xgc>	encapsulation: grep for 'dht_error*'
<xgc>	perfect.  now you know.
<kazagistar>	if (pi_mmio_init() < 0) { return dht_error_gpio; }
<encapsulation>	i just saw that
<encapsulation>	hmm
<encapsulation>	so now i need to look at pi_mmio_init
<kazagistar>	somehow the mmio is not initializing
<encapsulation>	int pi_mmio_init(void);
<encapsulation>	looks like its a function i need to call
<encapsulation>	to init it maybe
<aawe>	myrl-chan: you create memory slices - vbos etc - on the gpu memory, load data into it and have the gpu run your shader programs in a massively parallel fashion over each of the vertexes, then each of the screen pixels (simplified)
<myrl-chan>	aawe: welp
<kazagistar>	aawe: one thing i was thinking about that the class didn't get to... can you mutate parts of the data buffers on the gpu?
<encapsulation>	thjat didnt work still -4
<xgc>	encapsulation: doesn't look like it.  pi_dht_read calls the init function for you.
<xgc>	encapsulation: there's something else going on.  now you need to debug, to find out why pi_mmio_init is failing.  that's another error code.
<numb3rz>	maybe you can write the code to where your getting the absolute value of if your not suppose to get -4
<xgc>	encapsulation: pi_dht_read hides that error code.
<encapsulation>	     // map gpio memory to location in process space. this is where it fails
<encapsulation>	i think
<encapsulation>	in pi_mmio
<xgc>	encapsulation: yes. but there are several possible ways for that to fail.
<encapsulation>	https://github.com/adafruit/adafruit_python_dht/blob/master/source/raspberry_pi/pi_mmio.c
<encapsulation>	 pi_mmio_gpio = (uint32_t*)mmap(null, gpio_length, prot_read | prot_write, map_shared, fd, gpio_base);
<encapsulation>	it must be that line
<encapsulation>	oh wait
<encapsulation>	maybe it doesnt have to be that
<kazagistar>	encapsulation: that makes no sense, which return value is it giving? mmio_error_mmap, or mmio_error_devmem
<encapsulation>	let me check
<encapsulation>	ill call it manually then
<encapsulation>	to check it sreutnr
<numb3rz>	you don't use the stdio.h for this
<xgc>	encapsulation: learn to use gdb as well.
<encapsulation>	i used a little bit of gdb it seemed terrible
<encapsulation>	it made my head hurt
<encapsulation>	i've been using monodevelop debugger for some stuff
<encapsulation>	its gui frontend for gdb i guess?
<xgc>	encapsulation: well, it would likely help.
<bizarrefish>	encapsulation: there's 'insight', a graphical gdb frontend.
<xgc>	encapsulation: in the most trivial cases, like this, you can easily get around it.  but eventually, you will be assimilated.
<kazagistar>	if you have a graphical gdb frontend, thats fine too, same thing
<xgc>	encapsulation: ddd is also an option.
<xgc>	same idea.
<bizarrefish>	or strace
<bizarrefish>	strace probably quickest
<encapsulation>	xdc, kazagistar , numb3rz it pi_mmio_unit returns -1
<kazagistar>	the point is, use programs to see variables inside running code instead of printfs
<kazagistar>	well, which error is that?
<xgc>	encapsulation: grep for -1  :)
<farrioth>	kazagistar: "the most effective debugging tool is still careful thought, coupled with judiciously placed print statements."
<felishia>	hotcoder, :o
<farrioth>	kazagistar: although that was before gdb existed :p
<hotcoder>	hey felishia
<felishia>	my design is looking ultra cute!
<encapsulation>	 #define mmio_error_devmem -1
<encapsulation>	if (fd == -1) {
<encapsulation>	my file descriptor when opening /dev/mem is -1?
<encapsulation>	no idea what that means but it cant be good
<xgc>	encapsulation: maybe you just don't have permission for this.  does the device exist?
<kazagistar>	encapsulation: so whats the comment above that error say?
<felishia>	http://i.imgur.com/xs940km.png
<encapsulation>	progres!!!!!!!!!
<encapsulation>	s
<felishia>	posgres!
<encapsulation>	lol
<numb3rz>	man i gotta get a raspberry pi now
<encapsulation>	i ran it as root
<encapsulation>	and now i can see output!!!
<felishia>	numb3rz, i got one :3 they;re so cool
<farrioth>	numb3rz: i'd actually recommend not getting one.
<kazagistar>	lol... guess you need root to access hardware, who would have thought? :p
<felishia>	now i forgot the password t__t
<encapsulation>	ok buty i have a problem still
<encapsulation>	i'm so close
<encapsulation>	50% of the time it returns -2 now
<encapsulation>	error:  -2
<encapsulation>	and no values!
<xgc>	encapsulation: perfect.  now you're completely new to c and running your tests as root.
<farrioth>	numb3rz: if you want a computer, get a better one; if you want to play with sensors, use an arduino, or even an ftdi.
<felishia>	(function(){ encapsulation() })()
<xgc>	encapsulation; nothing but goodness can come from this.
<encapsulation>	this is great
<farrioth>	encapsulation: that's a -2 from which function?
<numb3rz>	well i have the arduino already what's the ftdi?
<felishia>	what's ftdi?
<kazagistar>	xgc: experience is best earned the hard way, amirte?
<encapsulation>	error from pi_dht_read
<felishia>	encapsulation, what are you doing?
<xgc>	kazagistar: these lessons will be remembered.
<farrioth>	numb3rz: it's essentially a usb to serial adapter that can effectively be used as a usb to gpio adapter.
<numb3rz>	felisha what have you made with the raspberry pi??
<felishia>	turn it on!
<encapsulation>	felishia, using this adafruit api to get some readings from dht22 sensor to my rpi
<farrioth>	felishia: see above.
<felishia>	it took me 1 hour to figure
<felishia>	i just came recently
<xgc>	tmi
<farrioth>	encapsulation: okay, what does -2 mean there?
<encapsulation>	     if (pi_mmio_gpio == map_failed) {
<kazagistar>	i think he's got it, he is just tracing it like before, i believe in our little encap
<xgc>	encapsulation: -2 means, "never run as root"
<encapsulation>	farrioth, it means memory mapping has failed
<encapsulation>	i could just put it into a loop
<encapsulation>	forcing it to run repeatedly until it returns without -2
<encapsulation>	?
<encapsulation>	but it might be better to find out why thats happening 50% of the time
<kazagistar>	uuuuuuuh
<kazagistar>	yeah
<kazagistar>	but i am out of my league now, memory mapping and shiz
<kazagistar>	time for sleep
<encapsulation>	ty for help
<xgc>	encapsulation: see errno.  mmap sets that to indicate the error.
<encapsulation>	my loop solution actually seems to work well
<encapsulation>	it returns in less than a second with the values 100% of the time now
<encapsulation>	mayeb the sensor is just finicky
<xgc>	encapsulation: it's usually now a good idea to ignore an error.  understand it, even if it turns out to be safe to ignore / loop.
<farrioth>	encapsulation: from memory, you can't read from them that often.
<xgc>	s/now/not/
<bizarrefish>	encapsulation: strace yourprogramname . that'll show you all the system calls like mmap/open as they happen, and what errors they return
<bizarrefish>	assuming rpi has strace available
<encapsulation>	the error is probably nothin
<encapsulation>	i need to get this c code into my c++ program now
<encapsulation>	i hope thats possible
<protist>	do yahl think library names should be descriptive or sound cool and be short?
<encapsulation>	sound cool
<kazagistar>	do both.... like pil for example
<protist>	pil?
<protist>	don't know that one
<kazagistar>	python image library, and has a neat shorthand
<protist>	ahhhhh
<protist>	i have a dynamic html generator
<kazagistar>	(its now defunct, and replaced by pillow, which has no meaning but still sounds cool)
<protist>	uses list structures and interpolation
<encapsulation>	how do i put this c code into my c++ program?
<kazagistar>	probably cool name, to differentiate it from all the other html generators
<ori_b>	i tend to go with puns/references if i can.
<numb3rz>	farrioth: ok i've read up a little on the ftdi and im wondering really what's the difference from arduino and raspberry pi they all can connect to sensors rfids and so forth would it be the code that makes it accurate?
<farrioth>	protist: they should be descriptive. i won't use something just because it sounds cool if i don't know what it does.
<protist>	farrioth: yeah true
<ori_b>	eg, for the hell of it i've been poking at an ssl library. it's named after a famous french fortress, one of the most extensive lines of fortification in the world... the maginot line :p
<kazagistar>	encapsulation: you can call it from c++ just as easily as from c i would guess
<xgc>	encapsulation: see extern "c" {   }
<kazagistar>	oh, derp
<protist>	farrioth: someone suggested cl-html-generatr
<protist>	farrioth: said mispelling things helps the search
<farrioth>	protist: is that a typo?
<protist>	farrioth: on purpose
<farrioth>	protist: don't make typos on purpose, they look like careless mistakes.
<protist>	farrioth: cl-html-gen ?
<o0elise0o>	name it htgl
<o0elise0o>	hypertext generating language
<ori_b>	protist: i might call it, eg, 'html-alternator'
<protist>	o0elise0o: oooooo haha
<farrioth>	protist: that's better. so it geterates html and it's written in cl?
<protist>	farrioth: yep, written in cl
<o0elise0o>	hypertext generating library
<protist>	o0elise0o: that sounds nice :d
<protist>	o0elise0o: and rolls off the tongue like sbcl
<ori_b>	protist: give it a people name.
<ori_b>	name it billy!
<protist>	ori_b: lolol
<ori_b>	html-billy!
<farrioth>	numb3rz: the ftdi doesn't run any code itself; the code is executed on the computer it's plugged into instead. an arduino actually runs code itself, but in many sensor applications, all this code does is read data and send it to your host computer anyway.
<ori_b>	protist: the logo can be a hillbilly chewing on an angle bracket!
<farrioth>	protist: cool.
<farrioth>	protist: re being in cl.
<protist>	farrioth: thanks :)
<protist>	o0elise0o: but do you think htgl might make people think mine is macro based?
<protist>	o0elise0o: maybe i am overthinking it
<protist>	o0elise0o: htgl does sound official
<ori_b>	protist: htgen, then?
<farrioth>	numb3rz: a raspberry pi is basically a crappy computer which happens to have gpio. since you presumably have a regular computer around, you'll probably prefer working on that, and an arduino plugged into the usb port, or an ftdi can give it the ability to talk to sensors in the same way as the pi can.
<o0elise0o>	protist::i think if there's confusion it might be because of the letters gl
<farrioth>	protist: hypertext garkup language?
<o0elise0o>	like opengl or just 'graphic library'
<protist>	farrioth: lol
<protist>	o0elise0o: true....htgl is a name of a disease, just searched it
<protist>	o0elise0o: or an enzyme, whatever
<numb3rz>	farrioth: oh ok lol you did you have a bad experience with raspberry pi?? i was asking because you seem pretty stern about not getting it
<numb3rz>	sorry for the typo im on my phone :-!
<ori_b>	numb3rz: the raspberry pi is just a slow, cheap arm board.
<ori_b>	it's not awful, it's just not special.
<farrioth>	numb3rz: i'm not meaning to be stern, but you may well be underwhelmed, as it seems many have been, and i feel that other hardware is a better investment. i have one, and have been frequently frustrated with its poor hardware design. i do use mine, but wish i'd spent a bit more and got something else instead.
<ori_b>	numb3rz: my usual recommendation is an arduino + regular intel box.
<farrioth>	numb3rz: when i'm doing stuff with linux or reading from sensors and analysing the data in realtime, i have my laptop around, so i'd rather just use that; if i'm doing datalogging somewhere i don't want to put my laptop, i'll use an arduino or some other microcontroller board, since the raspberry pi is overkill for things like that.
<ori_b>	arduino does a decent job talking to various sensors, etc in realtime (it's slow, but has no os to introduce jitter)
<farrioth>	numb3rz: it has a nice as a very small, low-power computer, but there is other hardware in that niche which is better.
<ori_b>	and then the pc does the crunching on what you collect.
<encapsulation>	i don't know how to do this
<encapsulation>	do i need to add #includes in my c++ files
<encapsulation>	do i import the c and h files from this api into my mono project?
<encapsulation>	do i uise the gcc compile options or justr build normall?
<encapsulation>	extern "c"?
<farrioth>	numb3rz: s/nice/niche/
<hotcoder>	hey
<hotcoder>	how did snowden fly to russia without passport papers?
<numb3rz>	farrioth: oh ok i thought the raspberry pi was like 35$, not that much to jus experiment with and use to practice and apply code to.
<znoosey>	raspberry pi 2 with windows 10!
<numb3rz>	farrioth: thanks i think:-&
<numb3rz>	farrioth: so thr ftdi is jus the microprocessors chip i would have to print out my own pcb rite? or jus connect str8 to the pins?
<numb3rz>	znoosey: have you used it? how is windows 10
<znoosey>	numb3rz: no, not with the raspberry pi
<znoosey>	but windows 10 is nice though
<znoosey>	it is like windows 7 with the speed from windows 8
<znoosey>	it also has that microsoft version of siri, but i have my doubts about that one
<encapsulation>	xgc, this is my error now when i try to put it into my c++ program
<encapsulation>	pi_mmio.c:36:20: error: redefinition of ‘volatile uint32_t* pi_mmio_gpio’
<numb3rz>	oh really?
<encapsulation>	not sure if i'm doing it right though
<protist>	farrioth: o0elise0o: i think i may just go with cl-html-gen
<ninjapenguin>	something is redefining it. stop redefining it. find where it gets redefined. i think it sometimes points to the source file that includes the file.
<numb3rz>	gotta go gang my batt. is about to die and i'm finna get some shut eye cya later and nice convos
<protist>	farrioth: o0elise0o: uhg....cl-htmlgen exists
<encapsulation>	ninjapenguin, its some working library from c i'm just trying to use in my c+ program
<protist>	cl-durian it is, then
<ninjapenguin>	encapsulation: i'm sorry to hear that then.
<ninjapenguin>	encapsulation: are you trying to compile the library?
<encapsulation>	ninjapenguin, i got it working and made a basic program in c
<encapsulation>	now i want to use the function it has in my c++ program
<encapsulation>	to modify 2 vars
<ninjapenguin>	m'kay.
<farrioth>	protist: so it's written in cl and it... does fruit?
<protist>	farrioth: lol
<protist>	farrioth: that is the name, now
<protist>	farrioth: making a readme etc now
<farrioth>	protist: no, it's a good name, really. lots of the programs i use have non-descriptive names.
<protist>	farrioth: thanks :)
<farrioth>	protist: will you include a warning to only extract the tarball outside? :p
<protist>	farrioth: outside of what? lol
<sinepreggin>	hi everyone i don't have a high school diploma can i find work as a programmer?
<farrioth>	protist: of the building.
<protist>	farrioth: hehe :p
<njcomsec>	in russia, work find you!
<farrioth>	sinepreggin: i didn't even know high schools gave diplomas.
<njcomsec>	soviet programmer
<sinepreggin>	i wanna move to russia too
<njcomsec>	you dont move to russia, russia move to you
<aawe>	glorious ussr
<farrioth>	sadly, one of my friends is an unemployed russian programmer.
<o0elise0o>	...ok
<aewffwea>	sinepreggin: maybe....
<aewffwea>	sinepreggin: but you should probably get one :p
<sinepreggin>	why is he unemployed?
<sinepreggin>	i'm 36
<farrioth>	sinepreggin: more to the point, do you have any programming projects to show?
<sinepreggin>	i'm working on a portfolio that i am planning on uploading to github
<farrioth>	sinepreggin: because of alcohol, and apparently it's hard to find work as a backend programmer.
<sinepreggin>	he should start his own escort agency and hire girls and develop the site and charge escorts to post ads
<aewffwea>	sinepreggin: the thing is like this... you can probably find work, as long as you are much better than anyone that do has a diploma
<o0elise0o>	sinepreggin::backpage is already around for that
<sinepreggin>	backpage sucks though
<o0elise0o>	you've tried it?
<sinepreggin>	i've used that site and always had some kind of problem
<sinepreggin>	who wouldn't try backpage?
<o0elise0o>	she was fat/not the girl pictured?
<kino`>	what's backage?
<kino`>	backpage*
<o0elise0o>	ive never used it i know about it cuz my friend used to post her ads on there
<sinepreggin>	it's a site where you look for sex
<o0elise0o>	no, that's not all it is
<sinepreggin>	your friend is a hooker?
<sinepreggin>	what's her ad?
<myrl-chan>	ugh
<o0elise0o>	it's basically craigslist, but backpage didn't get in trouble like craigslist did so backpage still has an escorts section
<sinepreggin>	can you hook me up with a discount?
<myrl-chan>	i hate compulsively reading comments.
<o0elise0o>	sinepreggin::she is dead now
<kino`>	what do you mean.
<sinepreggin>	oh
<kino`>	what do you mean, myrl-chan?
<sinepreggin>	that sucks. i'm sorry
<aawe>	myrl-chan: like searching images on karmadecay and searching urls on reddit for comments?
<myrl-chan>	kino`: they're idiots.
<myrl-chan>	aawe: reddit comments are fine.
<kino`>	comments on what?
<sinepreggin>	reddit comments are worse than youtube comments
<o0elise0o>	openpandora is vaporware
<kino`>	yeah, some reddit comments are fine.
<aawe>	sinepreggin: because they won't give you numbers to hookers?
<o0elise0o>	:-|
<kino`>	sinepreggin: so much no.
<sinepreggin>	what?
<kino`>	youtube comments are way worse.
<myrl-chan>	kino`: youtube comments.
<myrl-chan>	exactly.
<o0elise0o>	isnt reddit only comments?
<sinepreggin>	you don't have the fedora douche bags on youtube
<kino`>	come on, fedora people are even a meme on reddit right now.
<o0elise0o>	im so not in touch with the kids internet
<o0elise0o>	so you can just type /r/<some word>?
<kino`>	what do you mean?
<sinepreggin>	go to /r/r4r
<myrl-chan>	/r/unixporn/
<o0elise0o>	theres no actual list of the /r/ directory/
<o0elise0o>	?
<myrl-chan>	hmmm
<myrl-chan>	about "turbo boost technology"
<myrl-chan>	i don't know how that shit works, but hasn't the concept existed for like, almost a decade?
<myrl-chan>	with variable clock multipliers...?
<o0elise0o>	pretty sure yes
<kino`>	o0elise0o: i don't think so
<o0elise0o>	reddit is so white it hurts my eyes
<kino`>	you racist
<myrl-chan>	call the racist police
<kino`>	i'm jokin', but i think you can use night mode with res
<o0elise0o>	the fucking background color
<kino`>	(reddit enhancement suite)
<kino`>	it's a plugin.
<o0elise0o>	holy hell text is really really small with zoom set to 100%
<o0elise0o>	http://linux.slashdot.org/story/15/05/02/0334255/unnoticed-for-years-malware-turned-linux-servers-into-spamming-machines
<kino`>	urgh
<kino`>	those links are so annoying in terminal
<o0elise0o>	i knoww
<myrl-chan>	also.
<o0elise0o>	get a terminal that you can change sizes horizontally
<o0elise0o>	but besides that you dont even need to click it cuz slashdot uses descriptive urls
<myrl-chan>	you don't need an x server to make shit look nice. https://inconsolation.files.wordpress.com/2013/03/2013-03-03-solo-2150-fbterm-tmux.png
<kino`>	that's what i did
<guidex>	the links work good in mirc :)
<kino`>	they do
<kino`>	in hexchat as well
<o0elise0o>	myrl-chan::is that...a facebook terminal app?
<myrl-chan>	o0elise0o: why the fuck do people associate "fb" with facebook instead of 'framebuffer"...
<o0elise0o>	so it's not a facebook terminal app
<kino`>	i didn't see any facebook
<o0elise0o>	funny png
<o0elise0o>	crap i closed slashdot
<kino`>	 /.
<hotcoder>	hello people. quick question i have. how would one programmatically access all the links in a search?
<hotcoder>	in any database?
<o0elise0o>	slow and painfully
<kino`>	i don't know much, but how's your db structured?
<hotcoder>	so lets say i searched "chinese economy" on google. then how would one get the links of the results that pop up. is there some thing common among all search engines that has the same attribute or something?
<kino`>	i dunno.
<hotcoder>	ah okay
<hotcoder>	anybody else?
<sinepreggin>	what are you trying to do?
<hotcoder>	lol
<hotcoder>	ok
<sinepreggin>	crawler?
<hotcoder>	basically what i'm tryuing to do is. lets say you put in a search engine in my program. and it searches a query. i want to take all the results that show up on that page
<hotcoder>	yes a crawler, if you will
<hotcoder>	so i need to find what is common among all search engines/databases to get the links in
<sinepreggin>	language?
<hotcoder>	what is a commonality between any type of search engine?
<hotcoder>	eh java
<sinepreggin>	this is an intermediate/advanced tutorial
<sinepreggin>	http://www.programcreek.com/2012/12/how-to-make-a-web-crawler-using-java/
<o0elise0o>	quick, everyone join the hurd
<o0elise0o>	http://news.slashdot.org/story/15/05/01/1931232/debian-gnuhurd-2015-released
<sinepreggin>	i recommend you learn the basics of programming such as an intro to programming mooc before reading the tutorial
<hotcoder>	um..
<hotcoder>	i already did that
<hotcoder>	lol
<sinepreggin>	if you're not familiar with java
<planckwalk>	o0elise0o: from reading that link you posted, it sounds like if you're a spammer who's also a pirate, you might download a "cracked" mass-mailing program that actually uses your computer to do mass-mailing for other people as well.
<kino`>	>hurd
<hotcoder>	i know what a web crawler is. and i'm familiar with jsoup and htmlunit and i've made clickable headless browsers work etc
<planckwalk>	... and you might leave it running for 5 years without noticing.
<o0elise0o>	planckwalk::interesting
<hotcoder>	all i'm asking is, is there an attribute for all search results in any search engine search taht i need to be aware of
<o0elise0o>	i didn't rtfa, cuz it's barely relevant to me
<hotcoder>	so then my crawler could just take those links out of any search engine and life would be good
<o0elise0o>	last year, nasa's advanced propulsion research wing made headlines by announcing the successful test of a physics-defying electromagnetic drive, or em drive. now, this futuristic engine, which could in theory propel objects to near-relativistic speeds, has been shown to work inside a space-like vacuum.
<planckwalk>	o0elise0o: it looks like it's barely relevant to anyone
<aawe>	o0elise0o: hurd is such a hurdle
<o0elise0o>	http://science.slashdot.org/story/15/05/01/1929200/new-test-supports-nasas-controversial-em-drive
<planckwalk>	o0elise0o: that one is definitely more interesting.
<planckwalk>	i'm still guessing experimental error, but it's much more persistent than most experimental errors :-)
<planckwalk>	they did address the top 3 most obvious failures of their previosu experiment, so that's a plus.
<aawe>	i think the electricity creates a warp field by exciting tiny wormholes between the electrons
<o0elise0o>	i'm always confused when people think we/anyone knows everything about anything
<o0elise0o>	if the drive works it doesn't defy physics it's an aplication of physics
<sinepreggin>	em drive is bullshit
<aawe>	sinepreggin: you are bullshit, you don't even have a physics degree
<sinepreggin>	i don't even have a ged
<aawe>	i have taken a course in sensor physics, so i feel quite qualified to say this: the hype is real, we'll have wrap drives within the year
<aawe>	haha wrap drives
<njcomsec>	your face is bullsh1t
<sinepreggin>	and i will win the lottery and jesus will come tomorrow and turn water into wine
<kino`>	i'm quite happy with my solid state drive though.
<aawe>	wrap drive: https://michelledawnom.files.wordpress.com/2013/07/wrapbig.jpg
<kino`>	i don't need no em drive
<kino`>	:^]
<aawe>	i'd love to see a sandwich wrap drive through
<protist>	o0elise0o: cl-durian is up...will work on improving the readme more later before i submit to quicklisp https://github.com/gordiannaught/cl-durian
<kino`>	wait, what?
<o0elise0o>	protist::cool
<rindolf>	hi all. how are you?
<protist>	rindolf: i'm doing well :)
<o0elise0o>	i think i need food
<kino`>	i think i need sleep
<protist>	rindolf: getting my first open source package ready :)
<protist>	rindolf: https://github.com/gordiannaught/cl-durian
<rindolf>	protist: nice.
<protist>	rindolf: thank you :)
<anj7>	hey rindolf o/
<sinepreggin>	nazi
<rindolf>	anj7: hi, sup?
<sinepreggin>	rindolf he's a nazi
<aawe>	protist: add a license file, and a constributing section to the readme
<rindolf>	sinepreggin: what makes you think that?
<anj7>	rindolf: i'm learning php and mysql. you?
<aawe>	contributing*
<rindolf>	anj7: i went on a short walk.
<protist>	aawe: license dot what?
<sinepreggin>	rindolf o/
<anj7>	rindolf: oh, nice
<aawe>	protist: no file ending
<protist>	aawe: in the cl-durian.asd file i put wtfpl....i'll put that in the license file as well
<rindolf>	anj7: i felt under the weather yesterday.
<rindolf>	today i feel much better.
<aawe>	protist: https://help.github.com/articles/open-source-licensing/
<rindolf>	anj7: yesterday i finished watching the first four seasons of my little pony.
<anj7>	rindolf: oh, nice.
<anj7>	rindolf: the weather here is too unbearable. its 41c here.
<anj7>	rindolf: i can't even step out of my house.
<rindolf>	anj7: ah, where do you live?
<anj7>	rindolf: india
<rindolf>	anj7: ah.
<ams>	protist: please call the file copying ..
<protist>	ams: aawe: thank you for the information :)
<ams>	protist: yahtl?
<ams>	i don't like it.
<ams>	why not just,
<ams>	(with-html-syntax <html><h1>this is the title</h1> ...)
<ams>	maybe a tag for escaping, and entering back to lisp... <lisp></lisp>
<protist>	ams: i don't want to retype ending tags at all
<protist>	ams: but i also take advantage of the list struture...for example
<ams>	fair enough.
<ams>	have you looked at the other html libraries?
<o0elise0o>	http://yro.slashdot.org/story/15/04/30/174218/bitcoin-is-disrupting-the-argentine-economy
<protist>	ams: (html `(html ,(when cookie `(,(user-banner cookie))) (b "body")))
<o0elise0o>	so apparently in argentine you can actuall spend bitcoin?
<protist>	ams: (html `(html ,@(when cookie `(,(user-banner cookie))) (b "body")))
<protist>	ams: fixed
<protist>	ams: that way i can splice something in selectively
<ams>	mmm..
<ams>	(with-html-syntax <html><h1>this is the title</h1> <lisp>(user-banner)</lisp> ...)
<ams>	i find that nicer.
<protist>	ams: when returns nil on fail....so if there is a cookie, make the banner, if not splice in a nil (nothing)
<ams>	<lisp>(when cookie (user-banner))</lisp>
<ams>	well, that isw why my html thingie does anyway... :-)
<aewffwea>	o0elise0o: the ones who actually spend bitcoins are tourists
<protist>	ams: if you splice implicitely...then you will have trouble with things like (html `(html (p ,name)))
<protist>	ams: because that is just interpolating without splicing
<ams>	?
<ams>	<lisp>name</lisp>
<protist>	ams: ah
<protist>	ams: hmmm
<ams>	if true, convert to string, and put it there, if nil do nothing.
<protist>	ams: nifty, but i still prefer s-exps to html
<protist>	ams: what if it is a list?....like (html `(html ,(map #'make-paragraph subjects)))
<protist>	ams: what if it is a list?....like (html `(html ,(mapcar #'make-paragraph subjects)))
<protist>	fixed hehe
<ams>	well, in that case, yo uwould get a list.
<ams>	"(... ... ...)"
<protist>	and your lists turn into html properly?
<ams>	it converts stuff via format and ~a
<ams>	so if you do <lisp>(list 1 2 3)</lisp> you will get "(1 2 3)" in your output.
<protist>	how does yours know when to escape and when not to?
<protist>	like the banner html wouldn't be escaped, but the name would be
<ams>	not sure i follow.
<protist>	if (make-banner) makes html....you wouldn't want it to get escaped twice in (html `(html ,(make-banner)))
<ams>	all "unsafe" tokens are converted to html codes.
<protist>	what if you have <tag attr1=";<>"></tag>
<ams>	protist: cause that would become a recursive with-html-syntax thingie. so it will handle it because of that.
<protist>	ide have to see yours
<ams>	basically, you are asking what happens with: (with-html-syntax <lisp>(with-html-syntax <p>foo</p>)</lisp>
<protist>	i assume yours works right, i don't see why you would prefer to write html, though :p
<ams>	cut and paste.
<protist>	yes!
<protist>	yeah
<protist>	what happens with that?
<ams>	the correct thing.
<protist>	so it can tell that is a call to with-html-syntax
<ams>	yes.
<ams>	in the above, you would get <p>foo</p> in your html.
<ams>	and if you'd do
<ams>	(with-html-syntax <lisp>"<p>foo</p>"</lisp>)
<ams>	you'd get the escaped version.
<ams>	so, &gt;p&lt;foo...
<protist>	(html `(list "<p>foo</p>"))
<protist>	yeah same thing
<ams>	what happens is that there is a small counter that keeps track if we are in lisp or html context ..
<protist>	so yours assumes that all functions return things that shouldn't be escaped again?
<protist>	ah strange
<protist>	i just know when things are a list, and work from that
<ams>	(with-html-syntax .. *html-context* is t ... <lisp> .. nil (with-html-syntax t again)</lisp> nil) ...
<ams>	that also means you can do,
<ams>	(let ((*html-context* t)) "<p>foo</p>") inside <lisp> tags, and get raw html
<ams>	i really prefer raw html, since you can realy share the actual code you are working with..
<ams>	and <lisp></lisp> tags tends ot be simple enough ..
<protist>	(with-html-syntax <html>foo</html>) ....how does it know if foo is a variable or not?
<ams>	it is a string.
<ams>	it is not a variable, variables only exist in the context of a <lisp> tag..
<protist>	ahh
<protist>	and you made this?
<protist>	still don't see how it would know if a function returns something that needs to be escaped again or not
<protist>	<lisp>(returns-html-text)</lisp>
<darkcthulhu>	hi all
<ams>	protist: you are confusing things.
<ams>	protist: html is only returned when the variable *html-context* is t
<ams>	protist: so if returns-html-text returns a plain string, it is escaped.
<ams>	if *html-context* is t, it is returned verbatim with no escaping.
<rindolf>	darkcthulhu: meow!
<rindolf>	darkcthulhu: sup?
<protist>	ams: so you would have to manually set it?
<ams>	protist: that, or exit the tag.
<darkcthulhu>	hi rindolf :) i was just getting started with dependence analysis with arrays in my compilers project. hbu?
<protist>	ams: exit the tag?
<ams>	protist: </lisp>
<protist>	ams: strange
<ams>	protist: if you want a function to return html stuff, you need to use (with-html-syntax ...)
<rindolf>	darkcthulhu: i went on a short walk.
<ams>	(defun foo () (with-html-syntax <p>hello world</p>))
<rindolf>	darkcthulhu: and now i'm thinking about some project euler problems.
<ams>	(with-html-syntax <b><lisp>(foo)</lisp></b>)
<darkcthulhu>	rindolf, i see. it must be around midday for you right?
<ams>	output is, <b><p>hello world</p></b>
<rindolf>	darkcthulhu: yes, it's 12:53
<protist>	ams: but doesn't foo just return a string?
<protist>	ams: and strings get escaped? :/
<ams>	protist: "no"
<protist>	ams: "no"? lol
<ams>	yeah.. when it has done everything a string is returned that is html.  usually passed to a stream to the http server.
<darkcthulhu>	rindolf, which problem are you at now?
<ams>	protist: you have to think of this more like a proper language, than "just strings"
<protist>	ams: ah....i see
<rindolf>	darkcthulhu: i didn't solve them sequentially.
<protist>	ams: so it isn't so much returned as it has side effects on the stream
<ams>	right
<rindolf>	darkcthulhu: you can skip to various problems.
<protist>	ams: clever :)
<rindolf>	darkcthulhu: i'm thinking about this one, for instance - https://projecteuler.net/problem=167
<darkcthulhu>	rindolf, yeah, i understand that. i meant to ask the range that you're solving.
<ams>	there is also a bunch of html syntax checking going on ..
<ams>	like for attributes that only get numbers and what not ...
<darkcthulhu>	rindolf, let me se
<darkcthulhu>	see*
<protist>	ams: did you make it?
<ams>	yes
<protist>	ams: nifty :)
<protist>	ams: i still like my way >:)
<ams>	protist: i also just copied the html spec .. made a parser for that, and it validates quite nicley.
<protist>	ams: :)
<ams>	anyway .. gotta split .. ciao
<protist>	ams: cya :)
<rindolf>	darkcthulhu: thanks!
<vendu>	good afternoon, ladies and gentlemen :)
<bytefire_>	hey vendu
<njcomsec>	how long is a string?
<vendu>	hey bytefire_ :)
<njcomsec>	how long string my cat want play with
<njcomsec>	"cat"
<njcomsec>	lol
<vendu>	hey njcomsec :)
<vendu>	what's up guys?
<rindolf>	vendu: hi.
<rindolf>	vendu: i'm fine - went on a short walk.
<vendu>	hey rindolfski, how's it going?
<vendu>	cool :)
<rindolf>	vendu: what's up with you?
<rindolf>	vendu: now i'm thinking of some project euler problems.
<rindolf>	s/of/about/
<vendu>	rindolf, i think it's ok to say either of or about :)
<rindolf>	vendu: isn't "thinking of" means you're concerned about something or somebody and they are on your mind?
<vendu>	ah hehe i guess it could be :)
<crocket>	how do you compare scala and clojure?
<crocket>	clojure seems to be winning
<xardov>	http://i.imgur.com/uscikcw.png
<protist>	xardov: i hope that is a troll
<protist>	xardov: but in this world, who knows
<xardov>	protist: it's not
<xardov>	she is for real
<protist>	xardov: holy hell
<protist>	lol
<nikio_>	how to write and compile a  c program in cmd.exe?
<gedamo>	do you have a c compiler installed?
<ninjapenguin>	nikio_: by invoking a c compiler from command prompt and well, i think you'll need a text editor to write the code.
<nikio_>	ninjapenguin, but i wanna write it in the prompt
<nikio_>	in one go
<gedamo>	copy con source.c
<ninjapenguin>	nikio_: you might be able to do it with vim.
<nikio_>	heh just cmd.exe : )
<henke37>	i recomed edit.com
<henke37>	that's the best text mode editor i have ever used
<rindolf>	henke37: heh, heh.
<c0rnel>	hello
<rindolf>	c0rnel: hi, sup?
<c0rnel>	compiling a code produces an executable?
<c0rnel>	i mean, i know that gcc nothing.c will produce an executable but, gcc does only compilie that? or it does also something else?
<ninjapenguin>	depends what you consider compiling.
<rindolf>	c0rnel: it may produce just bytecode or an object file.
<rindolf>	c0rnel: it also invokes the linker.
<rindolf>	c0rnel: you can also compile from one language to a different language.
<c0rnel>	so even for a simple code lke int min(){} it eill still use the linker?
<c0rnel>	main
<henke37>	you need a compiler, a linker and a loader
<rindolf>	c0rnel: e.g: http://kripken.github.io/emscripten-site/
<c0rnel>	will
<c0rnel>	eh
<henke37>	the os provides the loader
<henke37>	the task of the loader is to take a finished executable and spawn a process from it.
<c0rnel>	ok
<c0rnel>	but the linker is always used, right?
<henke37>	yup
<henke37>	the linker is used to collect and tie together the object files produced by the compiler
<c0rnel>	ok. reading the above will help me understand whatis the linker doing after compiling a simple empty function like the one above?
<henke37>	it does things like giving functions their location in memory, filling in addresses of functions and such
<c0rnel>	ah
<c0rnel>	now it makes sense
<henke37>	each function needs an unique address. the compiler can't know where the function will go since it doesn't have all the functions
<henke37>	more recently, some parts of the compiler can be run in the linker. this is for optimization purposes.
<c0rnel>	ut for simple code like the one above, the loader can do without the liner, right?
<henke37>	afraid not
<c0rnel>	ok
<c0rnel>	isthere a page where i can read mre about this?
<henke37>	also, "simple code" tends to be rather complicated in pracise with all the features the language runtime offers
<henke37>	outputting a string? that's not simple at all!
<c0rnel>	yes but int main(){} should be pretty simple, i think
<henke37>	thing is, main isn't the real entry point
<henke37>	the c runtime provides that
<henke37>	doing lots of stuff that you don't need to worry about
<c0rnel>	hmmm, then all the books i've read are just oversimplified?
<henke37>	they are theoretical, ignoring the practical details
<c0rnel>	grrr
<henke37>	someone has to prepare the arguments for your main function
<c0rnel>	can you recommend a link for this practical details? :)
<c0rnel>	or a book, maybe
<henke37>	someone has to deal with the system locale. someone has to provide the memory allocator. someone has to construct global objects...
<henke37>	sadly, ive got nothing to recommend
<c0rnel>	:(
<c0rnel>	maybe i have to start wiht reading the processor documentation, or even lower
<stryyker>	what is your goal?
<henke37>	...someone has to implement printf, someone has to convert fopen to native functions like open and createfile...
<ecogiko>	isn't that libc's job?
<c0rnel>	my boss asked that i figure out if the code from a source is reaching the target file system "compiled" or "linked" so i've remembered i do not really understand what is going on there
<henke37>	libc is the c runtime
<c0rnel>	stryyker, ^
<henke37>	c0rnel, that sounds like a file format identification job
<c0rnel>	heh
<henke37>	source code is text
<henke37>	compiled and/or linked code is not
<henke37>	(even if it's traditionally placed in a memory section called .text)
<c0rnel>	but , how can i say if a binary is linked or compiled only?
<henke37>	can't link without being compiled
<c0rnel>	ok
<henke37>	as for detecting being linked or not, check the file extension
<stryyker>	sounds like the boss doesn't clearly know what he/she wants
<c0rnel>	and the one compiled only is ending in .so and such?
<c0rnel>	well, boss is always right so i have to clarify this
<henke37>	object files have .o and .obj depending on the system, while linked has .so, .dll, .exe or no extension at all
<henke37>	object files is compiled, but not yet linked, code
<c0rnel>	that i've figured
<henke37>	both linux and windows tends to use similiar file formats for both object files and executables
<c0rnel>	i have to deal with linux in my case
<henke37>	linux mainly uses the elf format
<myrl-chan>	gah
<myrl-chan>	i can't fine that corgi concurrency image.
<myrl-chan>	i'm not even sure if it was a corgi.
<c0rnel>	where i na linux file system can find an example of code that is not linked but just compiled?
<henke37>	c0rnel, packet managers typically don't include such code
<myrl-chan>	c0rnel: that's not safe.
<henke37>	with the notable exception of static linkable libraries. those are .lib on windows and .a (i think) on linux
<rindolf>	henke37: it's package managers - not "packet managers"
<ecogiko>	myrl-chan: https://i.imgur.com/idvtstr.jpg
<henke37>	rindolf, thanks for the correction
<rindolf>	henke37: you're welcome .
<myrl-chan>	ecogiko: thanks
<c0rnel>	myrl-chan, what do you mean?
<myrl-chan>	c0rnel: that it's not safe. :p
<ecogiko>	myrl-chan: some annotation -> http://what.thedailywtf.com/uploads/default/11505/6f3925bd03870f21.jpg
<henke37>	but the main location for object files is folders when you build your own executables
<myrl-chan>	ecogiko: do you have this bookmarked? :d
<henke37>	object files tend to either sit right next to the corresponding source files or in a closely located folder
<ecogiko>	myrl-chan: i am just a master of searching. :p
<myrl-chan>	ecogiko: ehhh
<henke37>	it depends on the exact build setup where they are placed
<myrl-chan>	ecogiko: what did you query?
<ecogiko>	myrl-chan: how i think multithreaded programming is dogs
<c0rnel>	henke, so an rpm package is not expected to contain code that is not linked?
<henke37>	no, it is not
<myrl-chan>	ecogiko: i'm so amazed right now.
<henke37>	with the exception of devel packages
<c0rnel>	i see
<henke37>	those typically contain code for static linking
<rindolf>	henke37: well, -static-devel packages.
<henke37>	or at least stubs so that the loader can do dynamic linking at runtime
<ecogiko>	myrl-chan: depends if google is bubble filtering you tho.
<myrl-chan>	ecogiko: bubble filtering?
<c0rnel>	hmmm
<c0rnel>	it's obvious i have to read more about it
<ecogiko>	myrl-chan: filter bubble, didn't remember the correct phrase -> https://en.wikipedia.org/wiki/filter_bubble
<c0rnel>	meantime, thank you henke37 , rindolf, stryyker, et all for help
<ihatehex>	how should i handle ssns in a java program?
<ihatehex>	thoughts?
<rindolf>	c0rnel: you're welcome .
<ihatehex>	what should i store it as? an integer? :p
<ihatehex>	seems highly insecure :(
<myrl-chan>	https://www.youtube.com/watch?v=z2bgjh_ctia lol
<c0rnel>	never seen a dog walking that much in its sleep :)
<njcomsec>	in russia, sleep dog walk in you
<njcomsec>	illuminaticonfirmed##
<vendu>	whee %)
<ihatehex>	anyone? how to safely store ssns in java? :p
<vendu>	hey ihatehex :)
<o0elise0o>	http://blogs.windows.com/buildingapps/2015/04/30/a-deeper-dive-into-the-universal-windows-platform/
<ihatehex>	hey vendu
<wei2912>	ihatehex: more context required
<ihatehex>	wei2912, i'm creating persons who have a social security number
<ihatehex>	for a program
<wei2912>	ihatehex: but assuming you're just storing them in ram, you may want to wipe them off the moment you're done with them. that's for paranoid people though
<ihatehex>	haha
<ihatehex>	how would i go about doing that?
<wei2912>	not everyone has the resources to stick ram sticks into liquid nitrogen or some shit
<vendu>	ihatehex, it looks like my malloc should be pretty fast (and i hope i made it more stable a moment ago) :)
<felishia>	hey :o
<wei2912>	ihatehex: just set it to something shitty
<felishia>	is 1400mhz good?
<wei2912>	felishia: for what?
<felishia>	i dunno, i want to play team fortress..
<felishia>	too much programming!
<wei2912>	1400mhz of what? :p
<felishia>	intel i3 1400mhz :o
<o0elise0o>	yikes
<felishia>	clock speed
<wei2912>	not good by today's standards
<aawe>	i need a one-word synonym to "worth it"
<gedamo>	aawe: context?
<felishia>	:<
<wei2912>	felishia: just give it a try first... unless you're buying a cpu
<felishia>	i should get a new computer when i get to the us
<felishia>	meh next year u.u
<felishia>	and i hate ps4
<aawe>	gedamo: "this trade-off is deemed _worth it_, as it allows us to ..."
<njcomsec>	i got ps5 yo
<njcomsec>	90fps 5750p
<aawe>	worthwhile maybe
<felishia>	i don;t have a tv with hdmi support xd
<aawe>	justifiable!
<wei2912>	lol
<wei2912>	that's what i thought, but it sounded too dramatic in my mind
<felishia>	they're all crt
<wei2912>	felishia: :p
<felishia>	i got a crt monitor too :o
<felishia>	actually 2
<felishia>	those things are indestructible!
<wei2912>	yeh, and they're useless nowadays
<wei2912>	:p
<felishia>	to fix them... give them a hard kick!
<felishia>	nuuuu u.u
<felishia>	they work
<o0elise0o>	this trade off is deemed justifiable, as it allows us to regenerate lost limbs
<o0elise0o>	how is a crt useless?
<aawe>	o0elise0o: i want to know more
<rindolf>	hi all. sup?
<o0elise0o>	even my new ish thinkpad still has a vga port
<vendu>	hey o0elise0o
<vendu>	hey wei2912
<o0elise0o>	hi
<wei2912>	o0elise0o: well, try carrying a crt?
<vendu>	o0elise0o, use dvi or hdmi where possible
<o0elise0o>	why would i
<vendu>	for digital signal transport ;)
<wei2912>	precisely
<o0elise0o>	i only own a laptop
<o0elise0o>	i gave up on desktops cuz they aren't homeless friendly
<wei2912>	:p
<o0elise0o>	although now i have so many laptops they amount to the same weight
<njcomsec>	come into one megaaptop
<njcomsec>	combine
<njcomsec>	dual enginnering
<njcomsec>	the elise
<felishia>	it's easy
<o0elise0o>	half life 3 confirmed
<felishia>	just get a cartepillar thing into your room
<njcomsec>	half life 3 confirm
<felishia>	and you can move it!
<felishia>	where? :o
<felishia>	i haven't played 1 yet!
<o0elise0o>	wtf
<o0elise0o>	how old are you
<o0elise0o>	good answer
<rindolf>	o0elise0o: i haven't played any of the half lifes either and i'm going to be 38 soon (on 5 may).
<o0elise0o>	yeah but you're weird so that's ok
<o0elise0o>	i did think you were older then that tho
<wei2912>	o0elise0o: wut
<o0elise0o>	what wut
<rindolf>	o0elise0o: s/then that/than that/
<nikio_>	why did i get: c:/mingw/bin/../lib/gcc/mingw32/4.8.1/../../../
<nikio_>	up+0xa7): undefined reference to `winmain@16'
<nikio_>	collect2.exe: error: ld returned 1 exit status
<nikio_>	trying to compile a c program
<rindolf>	nikio_: you forgot to link with something.
<rindolf>	nikio_: which one?
<rindolf>	nikio_: can you share it?
<nikio_>	rindolf, just instaled the basic mingw
<rindolf>	nikio_: ok.
<nikio_>	#include <stdio.h> int main(void){printf('boom');return 0;}
<nikio_>	thats the program
<rindolf>	nikio_: ah.
<o0elise0o>	you need the windows include don't you
<rindolf>	nikio_: http://mingw.5.n7.nabble.com/undefined-reference-to-winmain-16-td22147.html - there are some insights here.
<rindolf>	o0elise0o: no , why?
<rindolf>	nikio_: ok, and how are you building it?
<o0elise0o>	what do you mean why?
<nikio_>	using gcc
<rindolf>	o0elise0o: why do you need the windows include for that program.
<nikio_>	gcc app.c
<rindolf>	nikio_: ah.
<nikio_>	from mingw
<o0elise0o>	gee i dunno
<o0elise0o>	doesn't the windows include have the stuff to turn main into winmain automatically
<rindolf>	nikio_: http://www.shlomifish.org/files/files/images/mingw-on-win7-vm.png - this appears to work for me.
<rindolf>	nikio_: is the "int main" on the same line as the "#include"?
<nikio_>	yes
<nikio_>	how did you know ? : )
<rindolf>	nikio_: that's not good. :-).
<rindolf>	nikio_: it shouldn't be.
<anj7>	hey i want to create a header.php for the nav of my web site. but the problem is whenever i'm on a page the nav element doesn't get highligted.
<rindolf>	nikio_: because that's how you pasted it.
<rindolf>	anj7: what do you mean by "highlighted"?
<rindolf>	nikio_: put it on a different line and try again.
<anj7>	rindolf: if you are in home page the home tab must be highlighted or styled unlike other tabs
<anj7>	rindolf: so that you know you are in home page.
<rindolf>	anj7: ok, then you should process the current page based on the url.
<o0elise0o>	if you compile as a windows gui program then you need winmain not main, unless the compiler has a special way to do it automatically for you
<rindolf>	i mean process the current entry.
<rindolf>	o0elise0o: it does.
<anj7>	rindolf: how can i do that?
<rindolf>	anj7: using an if statement? :-o
<nikio_>	rindolf, yep i already solved that before you told me : ) good guess though
<nikio_>	thanks : )
<anj7>	i mean how can i know which file i'm in using php.
<rindolf>	nikio_: you're welcome .
<nikio_>	rindolf i wrote the program in cmd.exe. i wanted to try
<nikio_>	just writing a program using the cmd.exe :p
<rindolf>	nikio_: does it work now?
<nikio_>	yep : )
<rindolf>	nikio_: ah, it's not a good idea.
<nikio_>	why ? : ) it almost worked
<rindolf>	nikio_: good.
<rindolf>	nikio_: "almost"... ;-)!
<rindolf>	nikio_: real programmers use butterflies!
<nikio_>	rindolf, :     echo #include ^<stdio.h^> int main(void){printf('bo
<nikio_>	om');return 0;} > hello.c
<nikio_>	i just have to adjust it to add in a newline
<nikio_>	not sure how
<rindolf>	nikio_: why work so hard? and this approach doesn't scale.
<nikio_>	haha : )
<nikio_>	for smalll test programs
<rindolf>	nikio_: you can do separate echo >> statements.
<anj7>	rindolf: i cannot exactly get how to do that. can you explain?
<anj7>	rindolf: if i have to highlight a nave element i have to add a class navi-act, how can i do that using php?
<anj7>	rindolf: this is my website http://www.creationofgod.cf
<o0elise0o>	why are you doing that in php not js
<nikio_>	rindolf, how do you mmean?
<nikio_>	>> ?
<rindolf>	nikio_: append instead of overwrite.
<nikio_>	oh kool
<rindolf>	nikio_: echo "new line here" >> existing_file.txt
<nikio_>	rindolf, what about echoing a string without the beginning and ending quotes?
<nikio_>	so i can make use of string escape methods
<rindolf>	anj7: you're lacking some basics.
<nikio_>	so ¨int blbla. \¨hey\¨ bla ¨
<ninjapenguin>	creationofgod.cf xddd
<nikio_>	and so it will not echo the first and lest quote mark
<rindolf>	nikio_: the quotes are only delimiters - they don't get output.
<rindolf>	if you want a real quote, you need to do """
<rindolf>	nikio_: and you really should not be using cmd.exe.
<nikio_>	rindolf, nope if i echo ¨bam bam¨ > file.txt then it gets echoed with the quotes
<rindolf>	nikio_: that's because these are weird, non-ascii, quotes.
<nikio_>	no in the cmd they are the normal ones
<nikio_>	they are weird here because of some bug
<nikio_>	i never understood
<o0elise0o>	no they are not
<rindolf>	nikio_: oh, you're right.
<rindolf>	nikio_: how strange.
<o0elise0o>	my terminal isn't unicode and they are question marks
<o0elise0o>	not quotes
<nikio_>	i treid to fix it but it was such a headache i just left
<nikio_>	no i have bad quote marks in irc ; [
<nikio_>	*now
<rindolf>	nikio_: what is your irc client?
<nikio_>	i think its a ripped xchat
<rindolf>	nikio_: why not use hexchat?
<nikio_>	it just says xchat
<nikio_>	im notsure, i think i tried it but something about it put me off
<rindolf>	nikio_: xchat is unmaintained. hexchat is its more maintained fork.
<nikio_>	hmm ok
<nikio_>	brb gta claim some bread at the shop
<o0elise0o>	rindolf's answer to everything is use something else unless you are using perl
<o0elise0o>	hehe
<rindolf>	o0elise0o: not true.
<o0elise0o>	it wasn't meant to be true
<reynir>	ugh, cabal is just ridiculous
<rindolf>	reynir: that ghc thing?
<rindolf>	there is no cabal!
<reynir>	yes
<ihatehex>	i wonder if i should use builders for this project
<rindolf>	reynir: ah.
<rindolf>	ihatehex: what do you mean by "builders"?
<ihatehex>	rindolf, i mean for building objects, like "person"
<ihatehex>	or "application"
<ihatehex>	it takes more lines of code but is more readable
<rindolf>	ihatehex: do you mean factories?
<ihatehex>	errrrrrr maybe?
<ihatehex>	can you be more explicit? :p
<rindolf>	ihatehex: no.
<reynir>	i decided to use hakyll long ago, and thought it would be a good idea to put it in a cabal sandbox
<rindolf>	ihatehex: https://en.wikipedia.org/wiki/factory_method_pattern - see this.
<reynir>	i have to wait forever for hakyll to compile with 100% cpu usage :/
<reynir>	just so i can generate some html -.-
<rindolf>	reynir: why does it take so long?
<reynir>	it's compiling all the dependencies
<rindolf>	reynir: ah, hah.
<reynir>	great, it ran out of space in /tmp/ -.-
<reynir>	~8 gb isn't enough
<darkcthulhu>	jrslepak, you around?
<rindolf>	reynir: can you trim old already compiled stuff?
<rindolf>	reynir: all for generating html?
<rindolf>	nikio_: here?
<nikio_>	yep : )
<rindolf>	nikio_: if you encountered a problem with hexchat, then you can open a bug report.
<rindolf>	nikio_: which is more than is possible on xchat.
<nikio_>	yeh for sure
<nikio_>	xchat is dead
<anj7>	rindolf: i thought xchat and hexchat are same
<rindolf>	anj7: they are not.
<anj7>	rindolf: what's the difference?
<rindolf>	anj7: hexchat is a fork of xchat.
<rindolf>	anj7: and they improved it since then.
<anj7>	rindolf: oh, ok
<rindolf>	anj7: xchat has been unmaintained for years.
<anj7>	rindolf: i didn't know that.
<rindolf>	anj7: well, now you do.
<anj7>	rindolf: yea
<rindolf>	https://en.wikipedia.org/wiki/xchat - last release 4 years ago.
<nikio_>	rindolf, btw my hello.exe crashes
<nikio_>	it compiled atleast :s
<nikio_>	this is the code:
<nikio_>	http://pastie.org/10125067
<rindolf>	nikio_: works fine here.
<rindolf>	nikio_: what does it say when crashing?
<nikio_>	cmd freezes
<nikio_>	and then it says: hello.exe has stopped working
<rindolf>	nikio_: did you use .\hello to invoke it?
<nikio_>	just hello.exe
<rindolf>	nikio_: ah.
<rindolf>	nikio_: can you try with the .\ ?
<nikio_>	same problem
<rindolf>	nikio_: ah, how strange.
<rindolf>	nikio_: what is your windows version?
<nikio_>	7
<user123321>	greetings programmers.
<rindolf>	user123321: greetings, earthling!
<najs>	i saw this video on youtube a year ago that everybody should learn coding, so i learned the basics of java and python but have no idea what to use it for?
<rindolf>	najs: contribute to open source projects.
<rindolf>	najs: you can use python for scripts.
<rindolf>	najs: what do you study?
<najs>	i am studying network and linux administration, but i will finish in only two weeks
<najs>	i really want to have a bigger project, maybe some kind of program or website but have no idea what
<nikio_>	rindolf, when i compile like this: gcc -o ho.exe hello.c it works
<rindolf>	najs: what kind of a course is it?
<nikio_>	but gcc hello.c then i get a crashing exe
<rindolf>	najs: is it a vocational school?
<rindolf>	nikio_: ah.
<najs>	rindolf:  yeah kind of
<nikio_>	i wonder why
<najs>	2 years of studies
<rindolf>	nikio_: "gcc hello.c" gives you "a.exe"
<rindolf>	najs: ah.
<najs>	but there were no programming involved, so i learned them on my own
<rindolf>	najs: ah.
<ninjapenguin>	gcc for windows?!
<rindolf>	ninjapenguin: yes.
<ninjapenguin>	with or without cygwin?
<nikio_>	rindolf, ahhhh
<nikio_>	wrong exe : )
<rindolf>	ninjapenguin: mingw.
<ninjapenguin>	riiiight.
<rindolf>	najs: you can join an open source project.
<najs>	yeah, gonna check that up thank you=)
<rindolf>	najs: you're welcome .
<fxh>	an idea how to efficiently remove duplicates whilst holding the first values? instead of reversing the list, removing the duplicates and reversing it again
<fxh>	(lisp)
<aidanh>	hm, turns out haskell is sort of nice
<rindolf>	fxh: can you use a dictionary?
<wei2912>	you could have a set of seen elements in the list. when you see an element in that set, you remove it from the list.
<wei2912>	fxh: ^^
<wei2912>	should be o(n)
<rindolf>	wei2912: a set is not an ideal o(n).
<encapsulation>	how do i use a simple c api in my c++ program?
<rindolf>	it could be an ideal o(n*log(n))
<rindolf>	encapsulation: extern "c"
<wei2912>	rindolf: i can't remember, but you should be right
<encapsulation>	what goes inside that block?
<rindolf>	encapsulation: what?
<encapsulation>	well there are all these c and header files
<aidanh>	if the maximum size of the set is known, it's sort of o(1)
<encapsulation>	i'm not sure how i combine them with my c++ program so i can call the one function the library has
<rindolf>	encapsulation: do they have extern "c" annotations?
<aidanh>	ahh, misread the question though
<encapsulation>	rindolf, i don't think so? i'm not sure
<sky__>	heya
<aidanh>	fxh: what do you mean by holding the first values?
<rindolf>	encapsulation: ok, then try doing extern "c"\n{\n#include <c_headers_here.h>\n};\n
<encapsulation>	rindolf, https://github.com/adafruit/adafruit_python_dht/tree/master/source thats what i'm trying to add to my program
<wei2912>	rindolf: hmm, isn't a set's amortized worst case o(n)?
<henke37>	you can also ask the library author to add in the extern directive themselves.
<rindolf>	wei2912: a set with which implementation?
<wei2912>	at least that's what it says on the https://wiki.python.org/moin/timecomplexity. i haven't looked into sets much
<wei2912>	rindolf: err, ignore me
<fxh>	aidanh: instead of (remove-duplicates '(1 2 3 1)) -> 231, 123
<wei2912>	rindolf: i was looking at insertion in a list
<rindolf>	wei2912: i don't see .h files there.
<fxh>	but i didn't read the problem correctly, i need to remove successive occurrences :d off i go
<sky__>	which programming language is best to create a website?
<sky__>	i'm talking about the client side
<sky__>	i've got python in the background if it helps
<rindolf>	sky__: do you mean in the back-end?
<sky__>	yeah
<rindolf>	sky__: ok.
<nikio_>	rindolf, do you have windows?
<sky__>	i was thinking laravel or javascript
<rindolf>	sky__: well, it needs to be js eventually.
<rindolf>	nikio_: i have a windows vm and my laptop has a windows partition.
<sky__>	yeah
<nikio_>	rindolf, do you trust this file?
<sky__>	is python ideal for the back end?
<nikio_>	http://s000.tinyupload.com/?file_id=95592512862634351884
<rindolf>	sky__: laravel is for server-side.
<nikio_>	its my program ; ]
<aawe>	nikio_: give him the source instead
<sky__>	ah sorry, i don't know any php yet
<nikio_>	rindolf, you can probably dissassemble it and see there is nothing malicious in it
<aawe>	sky__: don't learn any either, php is horrible
<rindolf>	nikio_: i don't - sorry.
<sky__>	so server-end python works well?
<aawe>	yes
<nikio_>	its so simple its probably very little assembly code
<rindolf>	sky__: yes , it does.
<aawe>	and server-side ruby works great
<sky__>	ruby on rails?
<aawe>	ruby in rails is a great ruby framework for web development
<aawe>	on*
<sky__>	right
<sky__>	would you say ruby>python for server end
<sky__>	or maybe use a bit of both
<rindolf>	from what i understood the ruby on rails ecosystem has a big problem with keeping backwards compatibility.
<rindolf>	http://www.shlomifish.org/humour/fortunes/show.cgi?id=compiling-a-c-program-from-20-years-ago - see this for example.
<aawe>	rindolf: i think it's a good thing - if you have solid test suite, adjusting to upgraded gems is easy
<aawe>	moving forward fast
<aawe>	it's self-contradicting to start using a fast-moving framework and then complain about the very thing that made it great in the first place (not caring about backwards-compatibility)
<ninjapenguin>	i don't understand go's syntax for declaring maps.
<aawe>	the ruby ecosystem moves forward fast and cares little about backwards compat, and is a joy to use. php is literally the opposite in both aspects
<ninjapenguin>	like, map[type1]type2
<aawe>	ninjapenguin: [keytype]valuetype
<ninjapenguin>	i mean, i understand the syntax, i don't understand the choice for the syntax.
<aawe>	ninjapenguin: i think it's more intuitive than <keytype, valuetype>
<ninjapenguin>	[type1]type2 would be cool and consistent with array definitions, but map[type1]type2 just looks weird.
<sky__>	also is there an equivalent to brackets in python for maths?
<sky__>	like (3+3)*(3+3)
<ninjapenguin>	you mean, parantheses?
<nikio_>	how to objdump dissassemble looping code?
<encapsulation>	pi_mmio.c:36:20: error: redefinition of ‘volatile uint32_t* pi_mmio_gpio’
<sky__>	no
<sky__>	i mean like mathematical brackets
<sky__>	do this bit first()
<sky__>	then do whats outside the bracket after
<aawe>	sky__: that is parantheses
<aawe>	and almost every language works the way you said
<aawe>	except lisp
<sky__>	that works in python?
<sky__>	o.o one second
<aawe>	lisp would do (* (+ 3 3) (+ 3 3))
<sky__>	oh damn
<sky__>	whoops my bad
<nikio_>	c
<rindolf>	aawe: php keeps breaking backwards compatibility too.
<aawe>	rindolf: only in small ways. when are they going to revamp the "stdlib" ?
<sky__>	how's pythons backwards compatibility
<aawe>	sky__: python has a complex history
<_blizzy_>	females are strong as hell
<aawe>	there's python 2 and python 3. only python 2 is widely used
<rindolf>	_blizzy_: you keep saying random things out of the blue.
<chitza>	^
<aawe>	^
<_blizzy_>	^
<_blizzy_>	oh.
<sky__>	^
<_blizzy_>	i ended the arrow party.
<aawe>	you broke the linked list
<aawe>	_blizzy_: https://www.youtube.com/watch?v=sz2mmm-kn1i
<exio4>	python? you mean the language where its designer hates lambda functions?
<_blizzy_>	aawe, what?
<sky__>	in python, what is __init__
<sky__>	i've looked online and i'm still a little confused :(
<plastefuchs>	sky__: do you know what a constructor is?
<sky__>	nope
<plastefuchs>	ah
<sky__>	i have a book in front of me but i'm not getting it
<plastefuchs>	what book? c:
<sky__>	fundamentals of python
<_blizzy_>	i feel like i have made enemies in other channels
<sky__>	cost my school library £100 haha
<plastefuchs>	sky__: haven't seen that book yet
<plastefuchs>	sky__: have you any programming experience at all?
<rindolf>	_blizzy_: "friends come and go, but enemies accumulate."
<_blizzy_>	rindolf, yep.
<plastefuchs>	rindolf: unless they die :v
<sky__>	to be honest i am a beginner :s but i know some python
<_blizzy_>	c:
<sky__>	and a little javascript
<_blizzy_>	https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md#python
<rindolf>	plastefuchs: no, then they become ghost enemies.
<plastefuchs>	and you are just working through the book and there are more questions than answers for you right now?
<sky__>	actually this is near the book's end, i understood most of it
<plastefuchs>	sky__: also, if they just use __ini__ without explaining it, there is a good chance they will get into that a little later
<plastefuchs>	ah
<plastefuchs>	hum
<plastefuchs>	so, you understand objects in python?
<sky__>	yes
<plastefuchs>	well
<_blizzy_>	if i have a class called book
<_blizzy_>	__init__ is basically instructions that allows me to make another book
<plastefuchs>	it allows you to make instances of that book
<sky__>	right
<olben>	cheers for the books link.
<rindolf>	plastefuchs: instances of the book class.
<agentcarmichael>	quack.
<rindolf>	agentcarmichael: quock!
<plastefuchs>	so bible = book(pages=313, author="that dude") etc
<plastefuchs>	or just b = book()
<agentcarmichael>	echo(quack)
<sky__>	right
<plastefuchs>	the bits in the () will be given the __init__ method and used to setup things
<plastefuchs>	most of the time they will be just assigned variables
<agentcarmichael>	what language is this?
<sky__>	okay
<plastefuchs>	agentcarmichael: the one we are talking about?
<agentcarmichael>	yes
<sky__>	python3
<plastefuchs>	agentcarmichael: python (3 in this case, due to the book they linked)
<agentcarmichael>	oh.
<sky__>	what do you mean used to setup things
<plastefuchs>	oh, that depends on what you are making with that class.
<_blizzy_>	example of a class. https://gist.github.com/notblizzard/2fda917682b325dce776
<sky__>	it has an example here,
<_blizzy_>	well, of init.
<sky__>	def __init__(self, name, number):
<plastefuchs>	99% of the time i use __init__ it is to assign the parameters to instance variables
<sky__>	ohhhh
<sky__>	i see
<_blizzy_>	why is python such a bad language?
<plastefuchs>	sky__: some more words http://stackoverflow.com/a/625098/133453
<_blizzy_>	because it's selfish
<plastefuchs>	_blizzy_: it is not
<plastefuchs>	:v
<sky__>	in this example
<sky__>	https://gist.github.com/notblizzard/2fda917682b325dce776
<sky__>	what's the "self"
<plastefuchs>	the instance of the object itself
<sky__>	(self, title, pages)
<sky__>	right
<plastefuchs>	so you basically say "ok book, your title is the title that is given through the __init__ method
<_w_>	sky__: it's the first parameter to the function, of course
<sky__>	ah i see
<plastefuchs>	sky__: you could name it any way you want, like __init__(beep, title, pages) and then go beep.title = title
<plastefuchs>	sky__: but because people have been doing this thing for a while, we stick to self
<sky__>	ah yes i understand now
<sky__>	thanks a lot!
<plastefuchs>	c:
<plastefuchs>	the #python channel is rather active too if you need some more specific answers
<agentcarmichael>	anyone seen that rammstein code joke?
<agentcarmichael>	http://instacod.es/file/77164
<agentcarmichael>	hilarious
<_blizzy_>	mfw i don't understand something
<_blizzy_>	but i'm too scared to ask
<agentcarmichael>	no need to be scared.
<agentcarmichael>	you may ask.
<sky__>	be afraid
<sky__>	be very afraid
<agentcarmichael>	of the evil dragon of doom!
<sky__>	:o
<agentcarmichael>	conquer the quest and save the world from evil!
<agentcarmichael>	now, in zork online.
<sky__>	lol
<sky__>	sounds more like skyrim to me
<wei2912>	_blizzy_: i'm coming for you if you don't ask
<_blizzy_>	i meant in another channel.
<agentcarmichael>	yeah you have a point there sky__rim.
<agentcarmichael>	:p
<wei2912>	_blizzy_: oh, didn't see "mfw", lol
<agentcarmichael>	which channel would that be?
<_blizzy_>	a channel i would rather not mention.
<agentcarmichael>	i see.
<agentcarmichael>	it's that dark and evil.
<agentcarmichael>	save the world, from the jaws of oblivion!
<agentcarmichael>	i'm not even 1/3rd of the way into elder scrolls iv, can you believe that sky__ ?
<agentcarmichael>	hehehe.
<sky__>	what??
<sky__>	skyrim is amazing
<agentcarmichael>	yeah i bought that game in 2009 i think
<sky__>	played it straight for about a week and bought both dlcs
<agentcarmichael>	too bad i don't have much time in my days.
<sky__>	job?
<agentcarmichael>	student
<agentcarmichael>	overloaded :p
<sky__>	ah right, that explains it
<sky__>	computer science?
<agentcarmichael>	i also take my sweet time with games.
<agentcarmichael>	yes.
<sky__>	how are you liking it
<sky__>	i'm thinking of going into it
<agentcarmichael>	for example, in far cry 4 i make it challenging by not using the map.
<sky__>	o.o
<agentcarmichael>	it was a very hard road the first two years
<agentcarmichael>	but the last year i seemed to get a grip on how to study properly and time management
<sky__>	did you know programming prior to uni?
<agentcarmichael>	nope
<agentcarmichael>	i knew html only
<sky__>	and i'm gonna guess this is a us university?
<agentcarmichael>	nope
<sky__>	ahem
<agentcarmichael>	it's one of the hardest
<sky__>	uk, canada, netherlands, germany
<agentcarmichael>	of course due to privacy reasons i shall not mention it.
<sky__>	yeah sure
<sky__>	but the country?
<agentcarmichael>	my first year i failed 95% of my courses, second year i had to pick them up + do the second year ones, passed 50% of them all. then the third year i managed to find a rhythm and passed all the courses.
<agentcarmichael>	i'll keep that private too.
<sky__>	fair enough
<agentcarmichael>	a friend of mine was an expert in programming prior to uni and he had 100% on his java on the first try
<agentcarmichael>	no one had that
<sky__>	im thinking of trying for a us uni
<sky__>	apparently the ones over here in the uk aren't nearly as good
<plastefuchs>	sky__: where are you from, the uk?
<plastefuchs>	the problem with the us system is that it will cost you
<agentcarmichael>	i thought the quality would be reversed.
<sky__>	yeah, uk
<agentcarmichael>	us is popular of their low quality education..
<sky__>	that costs you too
<ruffel>	lol wat
<sky__>	in the uk the lecturers don't like teaching in general
<sky__>	especially because they're not being paid to teach
<plastefuchs>	that is just false
<sky__>	they're there to research
<plastefuchs>	well, the first part
<plastefuchs>	yes, like any other uni in the world :p
<sky__>	well places like harvard have money pumped into them
<agentcarmichael>	sky__, i found out through my student body organization that some professors were paid to fail a number of students.
<plastefuchs>	this happens in the best unis of the world. there are people there that just want to do research
<sky__>	i'm talking about resources and everything
<sky__>	damn seriously?
<sky__>	they accepted bribes to fail people??
<agentcarmichael>	yes
<agentcarmichael>	and also to reject females in e.g. nursery because they're known to not be flexible with customers.
<sky__>	my brother almost failed his first because a professor set a test on something completely different to what he had taught
<agentcarmichael>	i know it's ugly, but it's the truth. and the source is from my very own dean.
<sky__>	damn.
<ruffel>	hardly matters, most shit's graded on a curve in the us
<ruffel>	can't fail everyone
<agentcarmichael>	you see, if you fail a certain number of students, you normalize the curve and thus the uni gets government subsidiaries
<agentcarmichael>	.. to keep it normal
<agentcarmichael>	money money it's all about the money. :p
<sky__>	damn
<sky__>	that's fucking disgusting
<sky__>	excuse my french
<agentcarmichael>	but yeah, if you have good programming knowledge, i think you'll do fine at uni.
<agentcarmichael>	just don't underestimate it because it can hit you quite hard the amount of work.
<gedamo>	https://www.reddit.com/r/worldnews/comments/33ca62/australian_universities_are_pressuring_academics/
<agentcarmichael>	do you have a fair mastery of the programming languages you know, sky?
<sky__>	they're pretty decent, but i have enough time to perfect them before uni
<agentcarmichael>	excellent.
<sky__>	i'm hoping to make a sort of website thing to increase my chances of getting into a good one
<agentcarmichael>	if there's one language i don't wish for anyone to study, it's microsoft navision c/al.
<sky__>	apparently you need that sort of thing to get into the usa
<sky__>	why not?
<agentcarmichael>	i have to take that course and guess what, microsoft decided not to document it anywhere.
<agentcarmichael>	try studying a language that's extremely poor documented
<agentcarmichael>	not to mention almost no forums on it on the entire internet
<sky__>	haha
<sky__>	is the language any good
<agentcarmichael>	:p
<agentcarmichael>	it sucks badly
<agentcarmichael>	baaadly
<sky__>	yeah microsoft aren't known for being perfectionists
<sky__>	i'd bet any apple language would be good
<agentcarmichael>	anyway it's a pascal cousin which uses sql under the hood.
<sky__>	why do you have to learn it if it sucks so badly
<agentcarmichael>	my own professor of programming 2nd year said he thinks objective c makes him puke on how ugly and unstructured it is.
<agentcarmichael>	and that's an apple language.. so.
<sky__>	really?
<agentcarmichael>	it's just in the curriculum man. :p
<sky__>	damn
<sky__>	i would have thought apple languages would be great
<agentcarmichael>	that's his opinion however and you might find it ok.
<myrl-chan>	http://www.reddit.com/r/aww/comments/2oagj8/multithreaded_programming_theory_and_practice/cmm2w7r
<sky__>	well i guess it isn't really a consumer product so maybe it wouldn't be as sleek as their products
<agentcarmichael>	ah yes, multithreading. good ol' topic.
<myrl-chan>	http://www.reddit.com/r/aww/comments/2oagj8/multithreaded_programming_theory_and_practice/cmlq2n2
<myrl-chan>	haskell! <3
<agentcarmichael>	i recall objective-c was a cure programming language made by apple themselves to make up for the dead flash..
<agentcarmichael>	etc. it has a great history behind it
<myrl-chan>	hmmm, i should learn to use "copy link"
<sky__>	yeah
<sky__>	so..
<sky__>	anyone play clash?
<agentcarmichael>	what's clash?
<sky__>	in python with classes
<sky__>	clash of clans!
<myrl-chan>	welp
<agentcarmichael>	a phone mmo?
<sky__>	i guess not
<sky__>	yeah
<gedamo>	i'm currently playing http://armorgames.com/play/15760/gemcraft-chasing-shadows
<agentcarmichael>	i see, nope, haven't.
<agentcarmichael>	i'm off in a minute :p
<sky__>	so in python
<sky__>	a class is sort of like a database?
<tommycannady>	hi
<sky__>	say i have my class
<agentcarmichael>	a record?
<sky__>	hunger_games = book("the hunger games", 13040)
<sky__>	how do i revisit that
<sky__>	as in could i say hunger_games and get the following info?
<floralshoppe>	gguys if i suck at math like a retard then could i be able to program?
<sky__>	no
<sky__>	xd
<floralshoppe>	so i should consider suicide?
<sky__>	jk no idea
<agentcarmichael>	what the.
<sky__>	probably
<ruffel>	depends what member functions book has
<floralshoppe>	damn
<_blizzy_>	dude
<sky__>	*insert that escalated quickly meme here*
<psybur>	sky__, maps i think.
<floralshoppe>	well programming is where the money is at, and if i cant program then i cant support my family
<agentcarmichael>	floralshoppe, if you suck at math then programming is going to be a challenge, i must say.
<agentcarmichael>	i suck at math too by the way.
<psybur>	map of books by name?
<tommycannady>	i also suck at math
<tommycannady>	=0)
<floralshoppe>	agentcarmichael, are you a back or front end dev?
<tommycannady>	sorta
<agentcarmichael>	both
<sky__>	so for example
<agentcarmichael>	more back
<floralshoppe>	oo
<agentcarmichael>	primarily back
<agentcarmichael>	:)
<sky__>	i want to retrieve a bit of information from a class
<sky__>	like i know the book name
<tommycannady>	hehe i coded an mmo engine and i have very poor math..
<tommycannady>	which is why the engine is 2d i guess.
<sky__>	and i want to find the number of pages in that book
<psybur>	oh so you already have the object.
<sky__>	which i have entered into the class
<_blizzy_>	i think it would be hunger_games.title
<_blizzy_>	*pages
<ruffel>	link to code.
<sky__>	ah thanks!
<sky__>	that worked
<_blizzy_>	np. :p
<sky__>	arigatou :)
<agentcarmichael>	so, you put a dot and then you could access the value.
<agentcarmichael>	looks very oo then.
<psybur>	_blizzy_, i guess encapsulation might be too much at the moment for sky__? dont want to explain making attributes private and writing getters? :d
<_blizzy_>	psybur, idk.
<_blizzy_>	sky__, nice japanese.
<tommycannady>	if you use a pointer to the class... you would use hunger_games->title
<agentcarmichael>	that's just simple.
<sky__>	haha thanks
<agentcarmichael>	the elegance of encapsulation. <3
<tommycannady>	but you can't do that with your version
<tommycannady>	without initializing a pointer
<tommycannady>	i'm going to beef
<sky__>	__str__(a) = str(a)?
<agentcarmichael>	isn't memory allocation, garbage collection and pointer management done for you in python?
<sky__>	yep
<agentcarmichael>	so, it saves you from nightmares.
<sky__>	for now lol
<agentcarmichael>	however, i still recommend doing those manually, say in c.
<sky__>	c++>c isn't it?
<agentcarmichael>	i'd say vice versa.
<agentcarmichael>	depends on what criteria. :p
<agentcarmichael>	but alas, i'm going to eat now
<agentcarmichael>	have fun coding. o/
<slojanko>	hi, does anyone know how well facebook is optimized?
<slojanko>	it seems pretty shitty to me
<sky__>	it looks alright
<slojanko>	not the looks, performance
<slojanko>	whenever i have facebook opened its non stop 100% cpu usage
<sky__>	ah yeah
<sky__>	thats shitty
<champloo>	does default c99 not support pthread_barrier_t
<aawe>	slojanko: facebook is programmed by "brogrammers"
<champloo>	also is there a gcc option to prevent warnings on specific sections of code in the code itself?
<aawe>	champloo: fix the warnings, instead
<champloo>	aawe: i must pass a void* and then i cast the value to a normal type, but the compiler gives me woe and it's just annoying when i need to fix things that are broken
<aawe>	champloo: you can silence the warning by casting explicitly
<champloo>	what exactly does this error mean http://ideone.com/z1bfwu
<rindolf>	champloo: pthread_create accepts a function.
<rindolf>	champloo: or a pointer to a function.
<denommus>	hi
<denommus>	great, a q_object can't be a template class
<denommus>	yay
<rindolf>	champloo: copyints should return a void * - not a void.
<aidanh>	champloo: your function copyints has the wrong type
<droogie_alex>	anyone working on any interesting projects?
<champloo>	oh, i thought that error was related to trying to store stuff into the array to be passed
<champloo>	thanks
<rindolf>	droogie_alex: i'm doing qa work for mageia linux .
<denommus>	droogie_alex: i'm doing a afrp library for ocaml inspired by netwire
<anj7>	rindolf: <li class = "nb"<?php if(preg_match('/index/',$_server["request_url"])){echo "class=\'navi-act\'"}?>><a href="index.php">home</a></li> is this correct?
<rindolf>	anj7: no, it's not.
<rindolf>	anj7: an element should only have one class="..." attribute.
<anj7>	rindolf: then how can i add navi-act?
<rindolf>	anj7: use the . operator.
<droogie_alex>	denommus: nice
<droogie_alex>	i would love to work on a project with some people
<rindolf>	anj7: you seem to be missing a lot of programming basics. perhaps you should learn programming properly before setting up your own web service.
<anj7>	rindolf: i'm ok with the basics of programming, but php is little new for me
<anj7>	rindolf: the new functions etc
<rindolf>	anj7: are you sure?
<anj7>	rindolf: i've been working with c++ since 2 yrs
<droogie_alex>	anj7: what are you working on
<anj7>	droogie_alex: small projects
<anj7>	learning*
<droogie_alex>	php projects?
<anj7>	c++
<anj7>	i'm self taught
<vendu>	yo :)
<rindolf>	vendu: hi, sup?
<anj7>	so i would make up my own ideas
<floralshoppe>	how old are you anj7
<droogie_alex>	anj7: me too
<vendu>	hey rindolf :)
<vendu>	rindolf, not much, you?
<anj7>	floralshoppe: i'm 17
<denommus>	droogie_alex: my project is open for contributors. it's still small, so it's probably welcoming
<denommus>	droogie_alex: but it's better if you can read haskell and ocaml code (haskell because of the library i'm basing myself on, ocaml because it's the language i'm using)
<droogie_alex>	denommus: unfortunately i dont really know those languages
<denommus>	that's fine
<anj7>	floralshoppe: why did you ask btw?
<droogie_alex>	i guess i should learn those
<denommus>	ah, they are very cool
<rindolf>	vendu: i'm trying to help anj7.
<droogie_alex>	denommus: maybe in the future i can help you out\
<denommus>	i hope i can finish it soon, i already have another one in mind
<rindolf>	vendu: and i'm doing qa work for mageia linux.
<droogie_alex>	rindolf: hows that project going i will have to check it out
<droogie_alex>	what distro is it based on?
<pippo>	ciao
<pippo>	!list
<rindolf>	droogie_alex: it is based on mandriva.
<rindolf>	droogie_alex: well, it's a fork of mandriva.
<droogie_alex>	rindolf: oh nice
<rindolf>	droogie_alex: but mandriva is no longer actively maintained.
<droogie_alex>	mandriva was that the onet that was based of red hat\
<droogie_alex>	*off
<rindolf>	droogie_alex: yes.
<rindolf>	droogie_alex: it was originally called "mandrake"
<droogie_alex>	ah yeah
<droogie_alex>	i remember it now
<droogie_alex>	its all coming back to me
<anj7>	rindolf: will php work inside a script :)
<anj7>	sorry inside a string?
<pokeymantrainer>	ah, last time i tried mandriva, it had more bugs than bug's life!
<droogie_alex>	which string?
<rindolf>	anj7: pardon?
<anj7>	like class = " <?php ... ?>";
<varesa>	what do you get when you have nothing to do, a phone, ssh and vim? http://paste.fedoraproject.org/217847/14305821/
<rindolf>	anj7: yes , it will.
<anj7>	oh, ok.
<varesa>	still needs some features, error checking and refractoring but hopefully not on a touchscreen device ;)
<blockeduser>	how do i know if i would make good programmer
<ninjapenguin>	do a personality test.
<tsumetai>	blockeduser: try it and see.
<ninjapenguin>	if it says that you're a smart guy and you don't need to ask about every tiny thing and you are good at reading tutorials, then you'll make a good programmer!
<blockeduser>	i had programming job last year
<pyon>	ninjapenguin: "personality test", "smart guy" --> being smart isn't about personality.
<blockeduser>	they were pretty happy with me i think, and i fixed some bugs
<blockeduser>	but the poor documentation was kind of frustrating at times
<ninjapenguin>	pyon: and personality test doesn't tell you if you're a good programmer. :p
<rindolf>	blockeduser: you need to work on  your articulation - you're missing many "a" articles.
<floralshoppe>	if you think that personaltiy tests tell you whether youre a good progammer or not, then you probably arent
<droogie_alex>	hehe
<blockeduser>	i've done al ot of programming im y life and maybe i'm just burned out now, idk
<blockeduser>	i'm just not sure what i should do next
<blockeduser>	probably just relax
<droogie_alex>	burned out or a burn out
<droogie_alex>	lol
<floralshoppe>	blockeduser, convert to islam
<blockeduser>	not sure if that is totally relevant
<droogie_alex>	i wish i could get a programming job but that will never happen i don't have the education
<blockeduser>	i been hried to work on operating systems this summer
<floralshoppe>	obtain it then droogie_alex
<blockeduser>	kinda like tdavis when he was my age he was hired to worko n  an o.s.
<johnpoison>	droogie_alex: so what? it doesn't matter. i know many programmers without education
<floralshoppe>	lol are you comparing yourself to tdavis lol?
<blockeduser>	no but i suspect i might have some similar experiences
<droogie_alex>	well i live in silcon valley
<rexrat>	i watch silicon valley.
<floralshoppe>	same
<droogie_alex>	floralshoppe: nice
<floralshoppe>	nono i watch silicon valley but i dont live there lol
<droogie_alex>	oh
<ams>	figuring out how multidecade old code works ... is interesting.
<monkeyget>	i tried to watch the show but was too vicariously embarassed by the characters awkwardness
<droogie_alex>	never seen it actually
<droogie_alex>	but i'm sure i could relate to it
<pythonsnake>	hey
<pythonsnake>	i've been wondering about licensing/copyrighting for web code
<pythonsnake>	how does it work when the code is compressed?
<ams>	pythonsnake: depends on the license.
<pythonsnake>	for js/html/css with variable changes making it unintelligible
<pythonsnake>	ams: for example all rights reserved
<ams>	then one cannot use it in any shape or form.
<pythonsnake>	ok, but is it common that people gets sued because they copy css/js/html?
<pythonsnake>	it sounds easy to just compress everything and no one will realize you did anything wrong
<ams>	it isn't wrong to copy and reuse source code.
<vendu>	spice girls has a good song :p
<vendu>	viva forever
<ams>	it might be illegal, but that does not mean it is wrong.
<vendu>	hello folks :)
<pythonsnake>	ams: how so?
<pythonsnake>	you're talking about the fair use thing?
<ams>	law does not define what is right or wrong.
<ams>	it is not wrong to defy unjust laws.
<plastefuchs>	i also doubt that copying code from one program to be used in another is often seen as fair use :v
<ams>	it isn't.
<xgc>	pythonsnake: the interesting thing about that "can't use in any form" is that to even visit the web site (in current designs) all those copyrighted files are sent to you directly and most browsers cache them.  so whether intentional or not, you have a copy.
<xgc>	pythonsnake: and you're using that copy.
<vendu>	hey xgc :)
<vendu>	hello ams :)
<ams>	i seem to recall some cases where people have been infact sued over that ..
<ams>	mostly copyright trolls ...
<ams>	but still...
<pythonsnake>	xgc: funny
<ams>	"all rights reserved" means simply default copyright, and that means also non-free software.   and you cannot use it for any purpose at all.
<ams>	pythonsnake: what is the problem though? you have some code that you would like to use that is under a non-free license?
<pythonsnake>	also, it's not like they can legally look into the backend files to see if you've copied or not
<pythonsnake>	ams: i'm just wondering about how non-free code works
<ams>	it doesn't? :-)
<pythonsnake>	if i write non-free code, how should i protect it
<pythonsnake>	or is there even a point to code non-free
<pythonsnake>	lol
<ams>	you shouldn't write non-free code.
<pythonsnake>	why do people write non-free code if it's so easily stealable?
<pythonsnake>	because they're stupid?
<ams>	you can't steal code.
<pythonsnake>	if i wrote a website or webapp, you can easily steal it by using obfuscation
<hassoon_>	'sup
<plastefuchs>	you can steal it by obfuscating it?
<pythonsnake>	i won't even realize and if i realize i'm not rich eonugh to effectively sue you
<pythonsnake>	no?
<pythonsnake>	plastefuchs: like those compressors/minifiers
<_w_>	pythonsnake: anyone who makes money off of ip relies on the legal system to protect them
<ams>	pythonsnake: you cannot steal it.  unless you steal the computer it is stored on.
<droogie_alex>	i want to play tron
<plastefuchs>	heh
<plastefuchs>	ams is right :d
<ams>	pythonsnake: you can copy it, but that is not the same thing as stealing, which means that you actually lost something.  which you did not.
<plastefuchs>	you can just copy it
<pythonsnake>	ams: oh
<ams>	ip is even a worse term.  it means nothing.
<pythonsnake>	yeah right, i've used the wrong word, sorry
<_w_>	perfectly fine to use "steal" like that
<ams>	not really.  there is no loss of anything.
<_w_>	doesn't have to be a loss of anything to use the word stealing for it in english
<_w_>	it is an inexact language
<_w_>	just like there doesn't have to be any weather involved when someone says you stole their thunder
<pythonsnake>	like i stole your idea
<ams>	_w_: it is a missleading term, which also is meant to pain people who copy software as bad people.
<pythonsnake>	doesn't mean you lost your brain?
<ams>	there is nothing wrong with copying software.
<ams>	yopu can't steal ideas.
<pythonsnake>	heh :d
<_w_>	ams: if you think pythonsnake meant to mislead you should probably accuse him of that, and provide arguments against doing so, instead of arguing about language
<ams>	_w_: the word is meant to misslead.  please refrain to put words into my mouth.
<ams>	you cannot steal software, you can copy it.
<_w_>	words do not intend anything
<ams>	yeah they do.
<_w_>	they are used by humans, it is the humans that have intent
<_w_>	only things with thought can intend things
<ams>	they have intent as well.
<_w_>	words themselves do not think
<_w_>	they are used by us who think
<ams>	here is a good list and reasons of words to avoid: https://www.gnu.org/philosophy/words-to-avoid.html
<_w_>	yeah i'm not going to take language lessons from the freaking fsf
<ams>	18:52 /ignore _w_
<_w_>	they not only mangle language, they mangle legal principles too
<droogie_alex>	hehe
<plastefuchs>	_w_: everyone associated stealing with the physical act. if you use it in that sense in a context where using it does not make sense it distorts what is being done
<_w_>	ams: please don't announce your ignores to the channel, it is very rude
<myrl-chan>	i give up. lol.
<_w_>	plastefuchs: no, i think there are plenty of people who know well the many meanings of the word "steal"
<ams>	and as the nice little web page also mentions, copyright infringement is not theft.
<droogie_alex>	maturity people
<pythonsnake>	sorry for causing an argument...
<plastefuchs>	_w_: then why use it for cases where it does not apply.
<ams>	pythonsnake: don't worry, it is not your fault.
<_w_>	plastefuchs: but it does apply; language is defined by usage
<_w_>	if people use the language that way, that's what it means
<plastefuchs>	_w_: you say that stealing is fine to use in that context, me and ams disagree
<ams>	some people are just intent on spreading fud.
<plastefuchs>	no, it doesn't have to be an agenda ams
<_w_>	for the record, i am strongly opposed to intellectual property rights
<_w_>	i just think it's disingenious to use language as an argument, when there are many actual arguments about consequences
<ams>	pythonsnake: anywho.. want is it you wish to do?
<_w_>	you don't have to nitpick
<ams>	i sitll don't understand that..
<droogie_alex>	you should use the term “covered work”
<_w_>	you can point to how enforcement of copyright legislation allows for very selective enforcement, how it is anathemical to strong property rights and privacy
<droogie_alex>	like its stated in the gnu license
<pythonsnake>	ams: want? i don't understand your question
<_w_>	arguing about whether it is fine to conflate piracy on the high seas with copyright infringement, or using the same words for taking physical property as copying intellectual property, seems to me more to reveal a childish attitude of rebelling for rebelling's sake, poking sticks at the powers
<ams>	pythonsnake: well you asked the questoibn about copyright licenses and stuff ... what you are trying to do, or avoid, or whatebver/
<hassoon_>	piracy and weathern
<hassoon_>	*?
<hassoon_>	wtf brah...
<_w_>	"ha ha you used the wrong word"
<myrl-chan>	oh.
<myrl-chan>	i just learned that you can also swap 2 variables without using xor.
<myrl-chan>	<.<
<ams>	myrl-chan: yes ..
<_w_>	myrl-chan: any number of ways, sure
<ams>	myrl-chan: http://www.hackersdelight.org/
<myrl-chan>	ams: i default to using xor for swapping, or even better, using a temporary variable.
<tsumetai>	_w_: well, people do use the word "steal" and then through that try to pretend it's the same thing as larceny.
<ams>	i default to using a function..
<_w_>	tsumetai: sure, and when they do that, it should be pointed out and argued against sensibly
<_w_>	it is best to attack the intent, not the words
<droogie_alex>	yeah thats true
<myrl-chan>	ams: oh, and of course, a function.
<tsumetai>	_w_: well, that depends on the audience! :)
<pythonsnake>	ams: well i just wondered if (mass) selling code online was "worthy" like people who sell templates/themes
<ams>	pythonsnake: no, why would it?
<plastefuchs>	_w_: and that is why there is an argument against using "stealing" in context of code
<_w_>	"you should not be allowed to copy my music because it is stealing" is a flawed logical argument and you can point out the flaws int he logic
<_w_>	plastefuchs: but i did not see pythonsnake doing this
<ams>	pythonsnake: copyright infringement is illegal, and you can sue for it if it goes that far .. mostly it never does.
<droogie_alex>	http://stealmycode.com/
<droogie_alex>	lol
<pythonsnake>	ams: so i can just go out there and reuse whatever i want too? lol
<ams>	pythonsnake: and get sued if you break the license? yes.
<_w_>	pythonsnake: effectively, you can, and lots of people do
<pythonsnake>	droogie_alex: haha
<_w_>	some get sued, some don't
<pythonsnake>	sueing isn't that easy online i guess?
<pythonsnake>	assuming different countries too
<pythonsnake>	hm i remember having a discussion about it here
<numb3rz>	hey everyone
<pythonsnake>	hi numb3rz
<_w_>	pythonsnake: sure, the international nature of the internet is a roadblock
<_w_>	don't underestimate companies' willingness to put a lawyer on a plane to your country though
<_w_>	and even a claim against you in another country can be enforced if you ever do business there
<droogie_alex>	stealing code reminds me of that movie anti-trust
<_w_>	(and sometimes, rarely, you can be prosecuted for criminal copyright infringement and extradited)
<pythonsnake>	yeah but that applies if you copied big corporates' code while working for them or seomething
<pythonsnake>	not small individuals trying to sell their templates on the net
<_w_>	what does?
<pythonsnake>	sending lawyers
<ams>	pythonsnake: sueing is never easy, but people do it, and it isn't that complicated.
<_w_>	well you never know what small-time sites gets bought up by corporations with lawyers
<ams>	pythonsnake: there have been many cases of where people have sued copyrght infringers over template use ..
<ams>	or photos .. or whatever.
<numb3rz>	(droogie_alex): wats your favorite hacker movies
<pythonsnake>	ams: yeah, media like photos/videos are easily recognizable, if they are heavily modified then copyright doesn't apply anymore. but for code, from a technical point of view, it's hard to even tell if they copied code if said code is obfuscated, right?
<ams>	the software freedom law center helps free software project for example ..
<ams>	pythonsnake: not really.
<numb3rz>	?
<_w_>	pythonsnake: code can be defined in terms of what they do - and obfuscation always preserves what the code does
<_w_>	s/they do/it does/
<ams>	pythonsnake: oracle recently copied lots of code from linux, and they got sued by the sflc or some other such .. because they didn't comply with the license.
<droogie_alex>	numb3rz: my favorite hacker movies, haha not hackers, thats for sure
<droogie_alex>	i like the kevin mitnick movie
<ams>	http://sfconservancy.org/news/2015/mar/05/vmware-lawsuit/
<droogie_alex>	numb3rz: you know which one i am talking about its called "takedown"
<ams>	pythonsnake: enforcing a lciense is always a annoying job .. no matter if you are doing free software, or non-free software.
<droogie_alex>	numb3rz: and war games
<droogie_alex>	hahaha
<pyon>	programming question. too long to write it down here: http://pastebin.com/dz5qsj5z
<anj7>	droogie_alex: your website is nice :)
<_w_>	pyon: at least summarize
<droogie_alex>	there really hasn't ever been any good hacker movies beause they dont know what the f they are talking about
<pythonsnake>	_w_: i see..
<pythonsnake>	_w_: but that'd be too ambigious, no? many different codes can do the same thing
<_w_>	droogie_alex: or perhaps it's just that a realistic hacker movie would be really boring
<ams>	not sure what a hacker movie should be about ..
<ams>	but ... http://patentabsurdity.com/ is good
<droogie_alex>	_w_: yes thats true
<_w_>	no one wants to see a montage of three weeks of some guy sitting by his computer thinking and staring at the screen
<pythonsnake>	anyways writing templates and themes or whatever seems like a stupid idea
<droogie_alex>	_w_: that is very true
<pyon>	i have a linked list whose nodes must contain between `ceil(n/2)` and `n` elements. the data structure represents a logical sequence: how the elements are grouped in nodes is irrelevant for the user. i want to "bulk-insert" an array of elements at a fixed position in the list.
<ams>	hackers wizards of the electronic age from 1985 is nice ..
<ams>	pythonsnake: why? seems like a useful thing.
<droogie_alex>	ams: yes thats why i like war games because its old skool
<ams>	i do not know what that is.
<droogie_alex>	its a movie
<ams>	is it good?
<droogie_alex>	haha well its not great
<_w_>	pyon: sounds like a generalized "what's the best data structure for ordered data?" question - and i know you've already talked about what you dislike about b-trees :p
<numb3rz>	droogie-alex:i havent heard of takedown but i do know war games. have you seen algorithm?
<pyon>	_w_: i've already picked a data structure. what i want is (some help) to sort out the messy details of the bulk insertion process.
<numb3rz>	hey pythonsnake wats up
<droogie_alex>	numb3rz: never heard of that
<pyon>	and i don't really dislike b-trees, it's just that they don't support bulk insertion, sadly.
<pythonsnake>	ams: because later or sooner someone will just publish the code somewhere
<pythonsnake>	and people will start copying
<pythonsnake>	lol
<ams>	pythonsnake: that can happy for any program.  one can do it legally as well: just reimplement it from scratch.
<ams>	i've rewritten several propietery programs as free software ..
<pythonsnake>	you can do that?!
<_w_>	pyon: well, the general principle when designing structures like this is to add on constraints that you can find ways to quickly enforce; perhaps something like "when creating new nodes, all the new nodes and the modified node must differ in size by at most 1"?
<pythonsnake>	or better, take the code and modify the style
<pythonsnake>	lol
<ams>	you can always reimplement something from scratch.
<_w_>	(i haven't thought through what the consequences of that specific one is, but that's the approach i would take)
<ams>	remeber that copyright is about _copying_ (crudley put)
<pythonsnake>	today's lesson is that the best license is http://www.wtfpl.net/
<ams>	as long as you do not copy anything you can always reimplement it.
<pyon>	_w_: ah, thanks!
<ams>	legally.
<ams>	and then there is the interoperability clause which also allows you to modify binaries to make them work on various systems, or back up purposes or whatever
<ams>	the wtfpl is a terrible license, it is legally ambigious.
<ams>	there is no disclaimer of warranty, which can mean in some jurisdictions that you will be liable if something does not work with your code.
<droogie_alex>	numb3rz: you gotta check out takedown because its based on real events
<pythonsnake>	ams: what's your favorite license? gpl?
<ams>	pythonsnake: yes.
<ams>	all stuff i produce for clients is licensed under the gplv3 or later.
<pythonsnake>	including commercial projects?
<ams>	free software can be used commercially.
<numb3rz>	droogie_alex: its funny because i didn't understand the movies until i started coding and practicing pentesting and so forth and alot of movies and tv show use and talk about it for real like there are almost no lies except for maybe the time that it takes to do things
<pythonsnake>	yeah, there is free as in beer and free as in speech
<ams>	pythonsnake: i mean this to be precise: https://www.gnu.org/philosophy/free-sw.html
<pythonsnake>	anyways thank you guys for the insights, it's really helpful :)
<droogie_alex>	numb3rz: the problem i have with movies, and tv shows are they use the terms incorrectly and kind out of context.
<numb3rz>	hey pythonsnake where is there free beer???
<pythonsnake>	ams: hey wait, commercial free software can only be sold once?
<ams>	pythonsnake: no, why do you belive that?
<pythonsnake>	numb3rz: in your fridge :d
<pythonsnake>	ams: once you sell it/publish it once, people can freely use it, no?
<ams>	pythonsnake: the party that got a copy can do so yes.
<ams>	pythonsnake: but if you pay someone to write a program 100k or more, do you think they will just go willy nilly and distribute it to everyone?
<droogie_alex>	gltron\
<numb3rz>	droogie_alex: yea but like the programs and stuff that they use is real i can remember pausing the movie to look up certain platforms that they were running
<ams>	pythonsnake: mostly people don't care about distributing the program, they can .. but they have better things to do.
<pythonsnake>	sounds less stupid than all rights reserved...
<ams>	pythonsnake: and companies generally care about quality, if you can do stuff.  not if they can distribute stuff.
<o0elise0o>	why do tv stations know a show is going to have a season of airing and then not tell people when it starts and stuff until right before?
<droogie_alex>	numb3rz: the worst is that csi cyber
<droogie_alex>	that show sucks
<ams>	pythonsnake: and as a programmer, your job isn't to "charge for software", it really is getting stuff wroking, adding shit, and what not .. which is what companies want to pay for ... not 100k for a program, and then no support.
<numb3rz>	wat???? the acting sucks but i kinda like it do u like criminal minds??
<[alyssa]>	droogie_alex: agreed
<droogie_alex>	yeah the acting is horrible. it was funny though they mentioned the deepweb on one episode
<o0elise0o>	i like that movie where sandra bullock was some hacker chick and at the beginning of the movie she has doom/doom 2 playing a demo on a random computer
<myrl-chan>	programming's scary.
<o0elise0o>	no its not
<exio4>	it is
<pythonsnake>	ams: that's assuming you're in the states
<o0elise0o>	walking down a street at night is scary
<pythonsnake>	kinda
<exio4>	programming in php is more scary than that o0elise0o
<numb3rz>	myrl-chan:yea only to a programmer!!!
<[alyssa]>	what about person of interest?
<myrl-chan>	exio4: lol
<o0elise0o>	no, it's really not
<ams>	pythonsnake: i'm not in the states, my clients are not even in the states :)
<o0elise0o>	i've seen a lot of 'hackers' on movies type bash commands that look complicated but don't actually do anything
<droogie_alex>	o0elise0o: that movie was called "the net"
<o0elise0o>	yes, yes it awas
<droogie_alex>	i remember it
<droogie_alex>	long time ago
<droogie_alex>	lol
<o0elise0o>	with the pi symbol or osmething
<droogie_alex>	in 95
<droogie_alex>	1995\
<[alyssa]>	o0elise0o: !$ cat ~/`curl hacke.rs/virus.exe` | netcat -l 1337 > c:\\system32\backdoor.bat
<numb3rz>	i didnt like blackhat
<o0elise0o>	haha.
<droogie_alex>	numb3rz: i dont think anyone did
<pythonsnake>	o0elise0o: http://hackertyper.com/
<droogie_alex>	that moive was the worst i've ever seen
<droogie_alex>	and it go really poor ratings\
<o0elise0o>	pythonsnake::lowbandwidth();
<[alyssa]>	pythonsnake: laugh now... i've literally seen linux kernel excrepts (that
<[alyssa]>	's what that is) on tv shows .-.
<pythonsnake>	lol
<numb3rz>	lol i fell asleep on it twice
<droogie_alex>	luckily i didnt pay for it
<droogie_alex>	i watched it on g2g
<pythonsnake>	ams: yeah, instead of talking about licensing i should go do productive stuff lol
<o0elise0o>	i think the last movie about hackers that i saw was the movie hackers
<droogie_alex>	and back in 1995 i was on irc
<ams>	pythonsnake: indeed :)
<o0elise0o>	at some point you learn enough to know that movies about hackers are basically making fun of us
<droogie_alex>	hackers came out in 1995 as well
<archilius>	o0elise0o ikr
<droogie_alex>	same year as the net
<numb3rz>	but i haven't seen hackers yet with angelina jolie i hear its good i cant find it anywhere
<o0elise0o>	the assholes know enough to write a bash shell line to mock people that know bash, but then /choose/ to not make the movie have any legitimacy
<o0elise0o>	wait.
<o0elise0o>	hackers the old old movie has angelina jolie in it?
<droogie_alex>	yes
<numb3rz>	yes when she was young
<droogie_alex>	shes really young
<droogie_alex>	lol
<o0elise0o>	acid burn?
<droogie_alex>	still had them nice tities too
<numb3rz>	yessssss
<[alyssa]>	.-.
<droogie_alex>	heheh
<droogie_alex>	:p
<o0elise0o>	they read the actual hackers manifesto in that movie out loud
<[alyssa]>	#actuallyrealyoungfemalehacker
<archilius>	was it a jolie good movie?
<rindolf>	#etoolonghashtag
<numb3rz>	anyone know where i find the movie online? and also a young female hacker lbvs
<droogie_alex>	i forgot there was a women present i might have been more careful with my words\
<droogie_alex>	lol
<[alyssa]>	#lb±
<droogie_alex>	let me look hold on numb3rz
<[alyssa]>	droogie_alex: yeah right i'm a teenager :p
<ams>	stop the sexist bullshit please.
<archilius>	what there is a woman present?
<archilius>	it hurts to be new.
<o0elise0o>	droogie_alex::why would you assume there are only males here?
<numb3rz>	archilius: no.it isnt im.new
<archilius>	btw everyone i am archilius. i joined irc two days ago. i am a student. i love in india.
<o0elise0o>	ams do you still have me ignored?
<ams>	o0elise0o: possibly.
<ams>	o0elise0o: why?
<numb3rz>	i love in bed
<o0elise0o>	:-p
<denommus>	somebody said sexism?
<pythonsnake>	ams: one more question though, reimplementing doesn't mean copying the design?
<o0elise0o>	i was just wondering, ams
<ams>	o0elise0o: in that case, no.  not yet ... ;-
<ams>	)
<[alyssa]>	denommus: hi :p
<ams>	pythonsnake: sometimes it does, sometimes it does not.
<pythonsnake>	i've wanted to reimplement a proprietary voip software too
<pythonsnake>	i see
<[alyssa]>	pythonsnake: use webrtc lol
<archilius>	numb3rz i meant live :p
<droogie_alex>	archilius: because more irc chans are a sasuage fest
<ams>	pythonsnake: not entierly sure about the "desgin" thing .. there have been some famous cases, but it generally is stuff that is so "unqique" that well, it kinda obviously is the same thing, same copy so to speak.
<o0elise0o>	droogie_alex::actually, the smart girls pretend to be guys
<ams>	pythonsnake: not sure what happened with the samsung vs. apple debacle..
<archilius>	droogie_alex sausage fest?
<monkeyget>	sneakers is a pretty good hacker movie
<ams>	pythonsnake: http://en.wikipedia.org/wiki/apple_inc._v._samsung_electronics_co.
<[alyssa]>	o0elise0o: i did that for a while
<denommus>	i never got why some people avoid having some types of conversation near women. if the conversation is offensive torwards women, why should it even be made?
<monkeyget>	but it never seems to get much love
<ams>	pythonsnake: but this is mostly a patent case, and not copyright ...
<[alyssa]>	denommus: <3
<denommus>	just avoid it entirely
<o0elise0o>	[alyssa]::all you have to do is just not bring up gender and either say nothing or agree with the gross stuff
<pythonsnake>	[alyssa]: i can use it, but most people don't, so...
<numb3rz>	ooeliseoo: and some men have women handles too
<aidanh>	denommus: should conversational topics be avoided, just because they might offend someone?
<o0elise0o>	numb3rz::you manually typed my nick wrong
<o0elise0o>	aidanh::yes, that's part of good manners
<denommus>	aidanh: if it offends a category of people who are victims of this type of conversation all the time - then yes
<o0elise0o>	if you aren't worried about being looked down on, then talk about whatever
<numb3rz>	sorry im on my phone
<[alyssa]>	pythonsnake: the lol was there because frankly the *idea* of webrtc is pathetic
<pythonsnake>	ams: for example if you reimplement a proprietary protocol, that's copyright thing?
<aidanh>	o0elise0o: it is if those people are present, then i'd agree that that's basic manners
<ams>	pythonsnake: that is fair use actually.  interoperability and what not.
<pythonsnake>	or reimplement an app mockup?
<ams>	pythonsnake: and is allowed anyway.
<archilius>	numb3rz what app do you use?
<ams>	aidanh: it is also against the channel rules.
<archilius>	numb3rz i am on my phone ree
<o0elise0o>	aidanh::i was assuming the context was 'in this channel', which is a public venue that can have any kind of person in it
<ecogiko>	[alyssa]: what's wrong with webrtc?
<numb3rz>	what was missing from it i thought i typed it correctly
<o0elise0o>	like [alyssa] said she was a teenager
<droogie_alex>	http://angiesrainbow.com/site/images/filmographie/hackers/hackers22.jpg
<droogie_alex>	hehe
<aidanh>	ams, o0elise0o, then that's probably the source of confusion; i just mean in general
<denommus>	aidanh: for instance, i don't think racist comments are acceptable even when black people aren't present. why should sexist comments be acceptable, then?
<pythonsnake>	:( this is becoming more and more complicated
<numb3rz>	archilius: androirc
<ams>	pythonsnake: it is.  hence why i stick to one thing :-)
<o0elise0o>	aidanh:: denommus isn't talking from a manners point of view like i was
<archilius>	numb3rz same pinch
<ams>	pythonsnake: and why i hgave a laweyer :)
<o0elise0o>	racism and sexism are both wrong because they are inherently wrong
<ams>	pythonsnake: but you are allowed to reimplement a protocol, not sure how it is with mockups and such .. that might be a bit to much i think .. unless you do it entierly different.
<[alyssa]>	ecogiko: mostly that webrtc is miles more sophisticated then getusermedia is in its raw form. why is it that i can stream video across the internet easily, but i have to do  hacks with the canvas to take a picture? i'm fine with webrtc existing, but time and place..
<ecogiko>	pythonsnake: mockups as in graphical elements and interface?
<aidanh>	denommus: well, i'd say that what's acceptable is a function of the people present; i'd also find such topics distasteful, but i don't necessarily think that distastefulness should prevent all discussion
<pythonsnake>	monkeyget: yeah
<pythonsnake>	ecogiko: yeah*
<aidanh>	o0elise0o: yep, i know
<droogie_alex>	do you miss the the sound a connecting modem \
<droogie_alex>	lol
<o0elise0o>	i do
<aidanh>	i do
<pythonsnake>	i do not
<ecogiko>	pythonsnake: https://stackoverflow.com/questions/248606/are-uis-copyrighted
<o0elise0o>	i miss picking up the phone and getting your ear blown off by a data stream too
<numb3rz>	anybody find hackers online yet?
<droogie_alex>	haha\
<aidanh>	numb3rz: as in the movie?
<o0elise0o>	how have you not found that movie yet?
<droogie_alex>	yah usually when somoene picks up the other line it disconnects the person
<o0elise0o>	did you even try?
<droogie_alex>	 i remember that happening a few times
<o0elise0o>	droogie_alex::it depends what generation of modem and what your isp was running
<numb3rz>	o0elise0o: srry i thought it was a captial o won't happen again
<denommus>	aidanh: i don't think acceptability is a function of the people present. if it is unacceptable with someone present, it is unacceptable without them present, too
<o0elise0o>	we ugraded to a 56k modem and the isp supported the feature, so you could pick up the phone and get to hear the data stream and not get disconnected
<ecogiko>	pythonsnake: apple have a patent on "slide to unlock." so yeah... fun times.
<pythonsnake>	trashcan... lol
<droogie_alex>	phone phreaking was fun, using the callback numbers at resturants before you leave
<aidanh>	denommus: but people around the world have entirely opposed views on what's acceptable
<numb3rz>	aidanh: yes i haven't seen it and i can't find it anywhere
<droogie_alex>	the payphone
<o0elise0o>	numb3rz::i'm sure i could find the url to it in about 3 minutes(because my connection is slow)
<droogie_alex>	most the resturants back in the day had pay phones by the bathroom i would ask to go to the bathroom and then go make the phones rings back right before we would leave
<pythonsnake>	tl;dr don't copy
<o0elise0o>	posting that url in here is against the channel/network rules tho
<archilius>	denommus: to an extent aidanh has a point. what is unacceptable in the absence of certain people is unacceptable to those absent people
<denommus>	aidanh: that's a non-argument. of course morality is relative to space and time, but that doesn't mean we should try to reach for better morality
<denommus>	*we shouldn't
<droogie_alex>	o0elise0o: were you on compuserv haha
<archilius>	denommus not to the people present. how do you define acceptability without a context?
<[alyssa]>	archilius: try the context of society as a whole
<archilius>	denommus : i am not trying to p
<[alyssa]>	btw, hey [franklin]! heh
<o0elise0o>	droogie_alex::no
<o0elise0o>	i've never used compuserv
<archilius>	oppose anyone or something.
<_blizzy_>	i'm thinking about using aws
<droogie_alex>	heheh
<o0elise0o>	i did use aol before, but we have a private isp
<o0elise0o>	have/had
<droogie_alex>	yeah aohell most people were on that
<denommus>	archilius: if there are no black people near you, do you think it's fine to say black people are thieves?
<aidanh>	denommus: what about controversial topics like education of women? some are ardent supportes of equal opportunities, while there are many that will murder women instead of seeing them in schools; your position would seem to be that any discussion of that issueis offensive to someone, and therefore unacceptable
<o0elise0o>	well we had the client but you'd dial in to the regular isp
<o0elise0o>	we only paid for aol for a very short time before we found a better way
<denommus>	aidanh: you're talking about a whole different topic
<ecogiko>	a different #offtopic
<aidanh>	denommus: i don't see the difference, really
<droogie_alex>	o0elise0o: yea same here
<denommus>	aidanh: i'm talking about people who will be offended by the remark. you're talking about relative morality
<denommus>	aidanh: most of this channel has a western morality
<o0elise0o>	i'm offended by your relative lack of morality
<denommus>	aidanh: sexism is immoral
<droogie_alex>	o0elise0o: you know what my first programming experience was
<denommus>	aidanh: on our social context
<archilius>	denommus i would not mind discussing it. it may be wrong. but it does not mean i cannot say it.
<denommus>	aidanh: what people here are claiming is that it is okay to make sexist remarks if there are no women around
<aidanh>	but people in that discussion be offended by others' viewpoints, just the same as people would be offended by racial slurs
<aidanh>	s/be/would be
<droogie_alex>	o0elise0o: i had a friend who got me into hypercard programming
<denommus>	archilius: you can say anything you want. it doesn't mean that you should
<o0elise0o>	droogie_alex::i have no idea what that is
<droogie_alex>	hahaah
<droogie_alex>	its old school
<droogie_alex>	it was for mac\
<o0elise0o>	denommus::'western morality' is an oxymoron
<droogie_alex>	back in the mac ii i think
<aidanh>	o0elise0o: heh
<aidanh>	denommus: so you're saying making sexist remarks is wrong, simply because sexism itself is wrong?
<o0elise0o>	that wasn't meant as a joke
<archilius>	denommus: but would it not be a restriction. say someone who does not know any black people and based on what he has heard he tries to talk about it. how can he be stopped if he knows not that it is wrong?
<o0elise0o>	droogie_alex::i've never used an apple computer before
<denommus>	archilius: by telling him that he is wrong
<denommus>	aidanh: yes
<droogie_alex>	maybe not the mac ii but one of the early 90's mac i forget which one \
<droogie_alex>	it was like the visual studios of its time kind of
<o0elise0o>	i dunno.
<o0elise0o>	i like pc's on rip offs
<o0elise0o>	not*
<droogie_alex>	i dont like macs
<droogie_alex>	[abut at the time thats what we had
<droogie_alex>	for a while
<aidanh>	denommus: ah; well, what about making a sexist remark and not meaning it? as a joke, for example?
<archilius>	this conversation though philosophical is actually interesting.
<o0elise0o>	did you actually type [a just then or did you somehow broadcast a control sequence?
<o0elise0o>	droogie_al+| [abut at the time thats what we had
<aidanh>	or what if your girl/boyfriend has some weird kink, and likes hearing you say sexist things, even if you don't genuinely believe them?
<droogie_alex>	oops tha was a typo
<archilius>	denommus, aidanh exactly my point. what if someone does it out of not meaning it.
<o0elise0o>	aidanh::i like being called a whore and getting slapped
<[alyssa]>	sexism, as is racism, homophobia, transphobia, etc., is wrong, no matter what your beliefs are. even if you don't agree with this statement, at a minimum treat it like an axiom. saying sexist comments is propogating sexism, which is therefore spreading immorality
<_blizzy_>	i mean, tbh, there are a lot of things that shouldn't be said.
<aidanh>	o0elise0o: come sit over here, babe
<denommus>	aidanh: same thing: you tell the people he shouldn't make such a joke, because it's sexist
<droogie_alex>	in later years after hypercard i programmed in qbasic\
<_blizzy_>	the most common ones atm are racist, homophobia, and sexism.
<_blizzy_>	*racism
<denommus>	aidanh: it's not liking you'll be killing someone
<_blizzy_>	tbh, i don't even understand homophobia
<o0elise0o>	i think homophobia is the fear that they might get raped by a same-sex liking person?
<o0elise0o>	i dunno
<o0elise0o>	other than that i can't see anything to fear
<droogie_alex>	hehe
<archilius>	honest question what is homophobia?
<droogie_alex>	fear of not dropping the soap in the showers
<denommus>	o0elise0o: homophobia is prejudice agains homosexuals
<o0elise0o>	it's when you are afraid of people that like same sex relationships
<o0elise0o>	'phobia'
<denommus>	it's not literally a phobia
<o0elise0o>	it's a fear
<broolucks>	fear can often lead to hatred and persecution
<o0elise0o>	yeah they get scared and lash out and run away
<aidanh>	denommus: so you're against any expression that, on a surface leve, seems to support ideas/views you find immoral
<o0elise0o>	i've totally seen it happen
<archilius>	denommus: what droogie_alex said about the shower was a joke. was it wrong to say it?
<[alyssa]>	bigotry and fear are more or less the same thing in practice
<aidanh>	denommus: as opposed to, just the thing you find immoral itself?
<numb3rz>	fear can lead to the dark.side
<_blizzy_>	like, "hey lets hate people based off of a book even though it doesnt effect you"
<archilius>	denommus : i hope you are not offended by my statements.
<aidanh>	s/leve/level
<[alyssa]>	anyway, i have to go, i hope you all change kthx :p
<o0elise0o>	i have bugaphobia
<denommus>	aidanh: why would that be a binary choice?
<o0elise0o>	i dunno the actual name of it.
<monkeyget>	i just listened to an interesting podcast on the subject of prejudice towards homosexuals http://youarenotsosmart.com/2015/04/26/how-minds-change-the-power-of-contact-and-disclosure-to-change-attitudes-on-divisive-social-issues/
<aidanh>	denommus: well, it's not, but i'm not too sure what your position is
<archilius>	[alyssa] sorry if you feel owned.
<archilius>	*offended
<archilius>	i hate my autocorrect.
<encapsulation>	https://github.com/adafruit/adafruit_python_dht/tree/master/source thats what i'm trying to add to my program
<encapsulation>	pi_mmio.c:36:20: error: redefinition of ‘volatile uint32_t* pi_mmio_gpio’
<encapsulation>	anybody?
<droogie_alex>	hehe owned haha
<ecogiko>	hahaha.
<droogie_alex>	thats hilarious
<o0elise0o>	archilius::that was funny in an ironic sort of way
<denommus>	archilius: i'm not easily offended. that doesn't mean i think it is okay to say offensive things torwards minority groups
<monkeyget>	essentially: in mississippi religion spew a lot of anti homo content but few people have any contact with them.
<denommus>	aidanh: my wife was a victim of such sexist remarks on her previous work
<denommus>	aidanh: it drove her on the edge of depression
<aidanh>	denommus: i'm sorry to hear that
<droogie_alex>	denommus: i am surpised they could get away with that in the workplace
<denommus>	aidanh: and people insist on the argument of "it was just a joke"
<o0elise0o>	teach her how to shank
<ecogiko>	if you stop people from being rasist, sexist, homophobic or are effectively censoring them. how is that not immoral?
<denommus>	droogie_alex: people are educated to not stand up for themselves
<archilius>	denommus : i think what you are saying is correct. but i find it hard to think about the situations in which things may not be meant but are simply said.
<monkeyget>	the contact hypothesis state that you can get rid of prejudice (but not necessarily change their view) by putting the two groups together in a positive way: on the same level, cooperating attempting to achieve a common task
<denommus>	ecogiko: oh, no! what an immorality! someone is taking away my "right" to be racist! what will i do with my life now?
<ori_b>	http://www.openbsd.org/songs/song57.mp3
<aidanh>	denommus: may i ask if you had the same view on possibly-offensive remarks before this occured?
<droogie_alex>	going afk for a few
<_blizzy_>	ecogiko has a point
<_blizzy_>	i don't like the point, but it's a point
<o0elise0o>	is it immoral for me to say that we should burn all the skinheads?
<aidanh>	no-one can take away your right to be racist, really..
<_blizzy_>	yes
<ecogiko>	yes.
<aidanh>	your right to express it, perhaps
<_blizzy_>	we have freedom of speech
<o0elise0o>	cool, but i'd still light the match.
<_blizzy_>	but that means we also have the right to dislike what you said
<denommus>	o0elise0o: well, actually, there are anarcho-skinheads, and they are pretty chill people
<ecogiko>	_blizzy_: yes.
<o0elise0o>	denommus::i don't know what that means
<ecogiko>	denommus: anarcho-skinheads?
<o0elise0o>	i was talking about american history x kind of skinheads
<aidanh>	perhaps o0elise0o is a fashionista and just can't stand the hairstyle
<denommus>	aidanh: i had. this experience made me more empathetic torwards this kind of situation
<denommus>	o0elise0o: ecogiko: skinheads who are anarchists instead of neonazis
<o0elise0o>	aidanh::bald young white guys do look fucking stupid, btw
<ecogiko>	denommus: so basically anarchists. correct?
<numb3rz>	i think we all should be careful of what we type because ppl. read differently anyway like i can say heeeeeyyyyyy and mean it in a happy way but a female may take it like im tryinh to court her
<o0elise0o>	so just bald anarchists?
<denommus>	ecogiko: not every anarchist is a skinhead. i'm not a skinhead
<aidanh>	o0elise0o: ....good thing i still have my glorious locks then
<archilius>	the level of this discussion. i love irc.
<denommus>	http://eng.anarchopedia.org/anarcho-skinheads
<xgc>	numb3rz: did you just make a pass at me?
<ecogiko>	denommus: i am not a skinhead either but a skinhead is a nazi by my definition, is there anything else behind being a skinhead?
<ecogiko>	s/nazi/neonazi/g
<aidanh>	going bald and being embarrassed about it, perhaps
<o0elise0o>	numb3rz::if i ever see anyone tpye 'heeeeeeeeeeeeey' at me and don't suspect them of being anything but male i assume it's pronounced the way it's spelled and that it's a come on
<ecogiko>	lol.
<numb3rz>	no i didnt pass anything....yet
<denommus>	ecogiko: the skinhead movement didn't start as a neonazi movement. it started as a working class movement, and then neonazis absorbed part of it
<o0elise0o>	well, ok then.
<denommus>	ecogiko: they are closer to punk than their neonazi counterparts
<aidanh>	numb3rz: found your movie yet? i'd be surprised if you havent..
<o0elise0o>	i'll correct what i said: any white guy with a swastika tattoo and no hair
<numb3rz>	o0elise0o: i couldnt be jus happy to be on the irc channel with you
<o0elise0o>	numb3rz::it depends who you are, yes
<o0elise0o>	it also matters if you are pming 'heeeeeeeey' or just saying it on a public channel
<numb3rz>	aidanh:no i haven't :-(
<o0elise0o>	seriously?
<o0elise0o>	i found it
<o0elise0o>	between the time i typed 'seriously' and said 'i found it'
<denommus>	o0elise0o: for me it is okay to beat the shit out of neonazis. but then, i support antifa
<archilius>	:d
<numb3rz>	o0elise0o: but like we said sometismes you cant tell from the handle if its a male or female and also if it was a female you dont know if they were gay str8 or bi
<numb3rz>	would u be offended then??
<aidanh>	numb3rz: why do you want to watch it online anyway? the quality on those sites always sucks, and they always use the shittiest flash players imaginable
<o0elise0o>	haha the first comment is
<o0elise0o>	"i know this is piracy but i find it sort of ironic downloading a film called "hackers""
<archilius>	+1 to that comment.
<aidanh>	o0elise0o: just saw that comment too
<o0elise0o>	oh wait, did you wait to stream it or download it?
<o0elise0o>	i have zero idea how to find streaming movies because i can't afford a real internet connection to stream stuff with
<numb3rz>	i guess i can find a rental place and hope they have it in stock
<aidanh>	you google "<movie-name> watch online"
<o0elise0o>	aidanh::so i know where you looked for the movie now
<droogie_alex>	o0elise0o: are you using netzero lol
<o0elise0o>	no
<denommus>	i just solved a 6x6x6 rubik cube. yet again.
<pythonsnake>	http://imgur.com/gallery/um2s5
<aidanh>	and then brace yourself for eye-bleedingly-low quality
<droogie_alex>	hehe that was joke
<numb3rz>	i dont wanna download it i jus wanna see it
<o0elise0o>	i'm using a 4g lte cell phone with unlimited data that gets throttled after i use 10gb of data
<myrl-chan>	denommus: "meh, happens all the time. it's just like it's a part of me, you know what i'm saying?"
<droogie_alex>	there is plenty of place to stream it you just have to look
<o0elise0o>	numb3rz::it'd be easier to download it
<o0elise0o>	haha.
<o0elise0o>	"i h@xored the nigeria's intarweb after watching this movie and all i got was ebola"
<aidanh>	numb3rz: are torrents heavily policed in your country or something?
<droogie_alex>	lmgtfy
<denommus>	myrl-chan: heh
<o0elise0o>	i wonder if google will return the right result if i google the comments i've pasted here
<archilius>	hey angelina jolie had sort hair in hackers???
<o0elise0o>	oh look, it does
<droogie_alex>	http://lmgtfy.com/?q=watch+the+moive+hackers+online
<o0elise0o>	numb3rz::just google this: i h@xored the nigeria's intarweb after watching this movie and all i got was ebola
<_blizzy_>	well, i can't name a torrent side, but
<_blizzy_>	kool animals talk
<o0elise0o>	you can't name one?
<archilius>	kat
<aidanh>	i wonder how much of this counts as "recommending others engage in it"
<_blizzy_>	aka kickass
<archilius>	kick ass torrents?
<droogie_alex>	short hair on her doesnt look very cute she looks like a lesbo
<_blizzy_>	oui.
<droogie_alex>	haha
<o0elise0o>	krapasstorrents
<_blizzy_>	i was curious to see if someone got it
<_blizzy_>	lol
<o0elise0o>	that site was sort of ok
<o0elise0o>	i immediately abandoned it when tpb came back online tho
<archilius>	tpb came back online? when did that happen?
<droogie_alex>	its not on g2g which is a shame thats a good site for streaming
<aidanh>	the whole thing with achievements on kickasstorrents struck me as sort of weird
<o0elise0o>	archilius::um, months ago maybe?
<archilius>	i tried it yesterday and it was offline.
<droogie_alex>	but for all you who dont know about g2g check out http://g2g.fom/movies
<o0elise0o>	i tried it right now and it's fine.
<aidanh>	archilius: you were probably using the wrong url
<droogie_alex>	oops
<droogie_alex>	typo
<droogie_alex>	http://g2g.fm/movies
<o0elise0o>	archilius::yeah, it ends in .se i think now
<o0elise0o>	the sveedish meatballs can't keep tpb offline
<aidanh>	numb3rz: have you heard of popcorn time?
<archilius>	ok. now i feel like *facepalm *
<droogie_alex>	i need more coffee\
<archilius>	i used to use it and it went offline for some time and i never managed to get it back. ;-;
<droogie_alex>	more caffeine  = more code
<o0elise0o>	the last/latest time it went offline it was off for a little over a month
<o0elise0o>	and no one thought it'd be back and all the fun torrent posters started using kickass instead
<_blizzy_>	real programmers
<_blizzy_>	don't need caffiene
<_blizzy_>	*caffeine
<o0elise0o>	and tpb website had a link to a bittorrent sync url that supposed hosted the /entire/ tpb library
<_blizzy_>	i before e except after c my ass.
<o0elise0o>	but, the size of the sync folder was so so large you'd never be able to sync it all or have the disk space to do so
<mike802>	i just dance instead of drinking coffee
<_blizzy_>	so you just shake it off?
<mike802>	pretty much
<aidanh>	wasn't there that 100mb file of all the torrent magnet links?
<numb3rz>	srry guys im multi tasking now thanks i got it
<o0elise0o>	aidanh::yes, that was old
<archilius>	o0elise0o i to switched to kat. glad to hear tpb is back.
<o0elise0o>	the last time they posted a bittorent sync url/key
<aidanh>	bittorrent sync... ugh
<numb3rz>	srry guys/girls
<mike802>	sometimes i forget to code
<o0elise0o>	aidanh::i tried to sync it
<o0elise0o>	haha.
<o0elise0o>	big big mistake
<o0elise0o>	and it wasn't read only either, so it got bad fast
<_blizzy_>	i still use kat
<aidanh>	if torrents had a way to push updates to files, that'd be an easier way to synchronize somoething like that
<o0elise0o>	probably the first person on it sync'ed viruses too
<o0elise0o>	who knows
<aidanh>	but then i suppose ipfs would be a better solution
<aidanh>	something of that sort, anyway
<o0elise0o>	well bt sync does do that
<aidanh>	o0elise0o: yeah, that sounds like exactly the sort of thing that would happen
<droogie_alex>	here you go everyone
<o0elise0o>	it's basically google drive folder sync or rsync
<droogie_alex>	http://vidzi.tv/jzz6q34xjd41.html
<droogie_alex>	that link works just make sure you have good popup blocker
<droogie_alex>	and close the stupid ads
<aidanh>	droogie_alex: numb3rz already found it
<droogie_alex>	lol
<o0elise0o>	also
<mike802>	first of all, have you seen where they hang out?
<o0elise0o>	do not post a pirate url here
<aidanh>	o0elise0o: the trouble with bt sync imo is that it's made by bittorrent inc
<denommus>	how are owned pointers called in c++?
<denommus>	i just forgot
<o0elise0o>	that was actually my thought too, aidanh
<denommus>	is it auto_ptr?
<o0elise0o>	i didn't trust it
<pyon>	denommus: std::unique_ptr
<denommus>	pyon: ah!
<oflic>	what would you think if a library name was 5 letters
<aidanh>	"hey, you!" also works
<o0elise0o>	i was poking around to find out what the tpb thing was
<oflic>	and it was a c library so it should be repeated for each function
<denommus>	pyon: in qt that would be qscopedpointer, right?
<pyon>	denommus: dunno, i don't use qt.
<oflic>	for example if it is oflic, oflic_something_start()
<oflic>	oflic_get_something()
<oflic>	etc...
<denommus>	no, wait. qscopedpointr is like auto_ptr
<droogie_alex>	i totally lost track of what i was doing \
<aidanh>	oflic: well, seems like reasonable semi-namespacing
<mike802>	get on the ground scumbag!
<pyon>	oflic: that's the only way to get something vaguely similar to namespaces.
<_blizzy_>	anyone have experience with aws s3?
<_blizzy_>	mike802, lol, what are you
<_blizzy_>	an american cop?
<o0elise0o>	is mike802 a bot?
<ser_berry>	pretty much
<mike802>	i am above the law!
<oflic>	aidanh: pyon yep but is 5 letters long?
<pyon>	oflic: in my code, i actually use *two* prefixes: one for the project, another for the module.
<oflic>	it's not like gmp_...
<_blizzy_>	he's pretending to be an american cop.
<pyon>	oflic: 5 letters seems fine.
<aidanh>	pyon: well... you could declare everything in a header file and then define the prefix with a preprocessor #define statement... ugh
<_blizzy_>	(sad joke)
<pyon>	oflic: it's much shorter than what i use.
<pyon>	aidanh: that's just ugly.
<hotcoder>	hello
<o0elise0o>	completely off topic one liners, made me think of a random sentence bot
<_blizzy_>	hi hotcoder
<hotcoder>	how are you all today? :d
<aidanh>	pyon: oh definitely
<pyon>	aidanh: i really hate the preprocessor, and want to keep my use of it to a minimum.
<_blizzy_>	good. you?
<hotcoder>	hey _blizzy_
<o0elise0o>	thanks to smart phones i can pretend to be megahal bot
<oflic>	i hate macros
<hotcoder>	i'm good
<hotcoder>	:)
<_blizzy_>	good. thanks for asking.
<aidanh>	pyon: yeah... definitely one of the wartier sides of c
<oflic>	thank you a lot
<droogie_alex>	anyone have any examples of how to connect buttons from a glade ui with c
<oflic>	that was a quick question
<protist>	goodnight ##programming
<oflic>	see ya!
<pyon>	protist: gn
<o0elise0o>	cya protist
<protist>	pyon: o0elise0o: :)
<hotcoder>	anyone know any offtopic places?
<hotcoder>	where we can just chill and talk shit?
<o0elise0o>	hotcoder:: ##programming
<hotcoder>	oh true?
<hotcoder>	aite eses
<droogie_alex>	hotcoder: try here #talkshit
<pyon>	hotcoder: here, minus the talking shit part.
<droogie_alex>	lol
<aidanh>	pyon: i've started picking haskell up in earnest; the function purity and composability is very refreshing
<hotcoder>	can you guys join #talkshit so i we can talk about life?
<pyon>	aidanh: foo . bar . baz ... is one of the cutest things i've ever seen.
<o0elise0o>	hotcoder::this channel is sort of just a general chatroom for people how have some understanding of programming
<hotcoder>	ye i wanna go off topic
<hotcoder>	which is why i'm saying
<o0elise0o>	its not like the language named channels
<hotcoder>	those who are bored
<pyon>	hotcoder: try #defocus or ##chat.
<hotcoder>	lets talk off topic
<o0elise0o>	...you obviously missed the 30 minute conversation on sexist comments earlier
<hotcoder>	got banned from ##chat by nazi mod bazhang
<pyon>	hotcoder: but, anyway, off-topic chat is allowed here.
<aidanh>	pyon: :) yep; some of the other syntax seems a little strange/inconsistent, like function definitions with guards, but i think i'll get used to it
<droogie_alex>	try #lifenotthegamebutreallife
<hotcoder>	ok
<hotcoder>	can we talk about girls?
<mike802>	try another network
<pyon>	aidanh: actually, guards are pretty. the lack of guards in standard ml makes some code unnecessarily repetitive.
<hotcoder>	so i'm not sure what this is
<mike802>	perhaps undernet or efnet
<hotcoder>	but what happens was
<pyon>	aidanh: however, if...then...else... *is* ugly.
<hotcoder>	my best friend who is a girl
<droogie_alex>	oh boy
<pyon>	aidanh: because you can make a regular function that subsumes it.
<hotcoder>	started accusing me of falling in love with her all the time
<droogie_alex>	here we go
<hotcoder>	and she kissed me the other day
<aidanh>	pyon: oh i quite like them too; it's the little things though, like the lack of an equal sign after the function name
<hotcoder>	should i go for it or nah?
<pyon>	hotcoder: okay, not *that* off-topic.
<pyon>	hotcoder: try #defocus, really.
<hotcoder>	now u tel me?
<hotcoder>	damn
<hotcoder>	its unavailable channel
<hotcoder>	#defocus is unavailable
<hotcoder>	please stop chanting that channel around
<pyon>	hotcoder: oh, it's ##defocus, actually.
<pyon>	hotcoder: it used to be #defocus, with a single #.
<pyon>	but now it's with a double ##.
<hotcoder>	ok
<droogie_alex>	try #misscleo
<hotcoder>	it got married
<droogie_alex>	she will give you romance advice
<hotcoder>	its empty
<hotcoder>	can you stop being a fuck boy and sending me to stupid channels
<aidanh>	guess everyone's focused then
<droogie_alex>	for 9.99 per min
<hotcoder>	ye
<hotcoder>	sucks
<droogie_alex>	ok i will give you a serious one
<droogie_alex>	seriously now
<numb3rz>	nice talkin with everyone i gotta go ttyl
<hotcoder>	i'm not going to any channel mr doobie sends me
<numb3rz>	and thanks
<droogie_alex>	numb3rz:  see ya\
<mike802>	guys
<droogie_alex>	hotcoder: i will give you a real channel i swear
<mike802>	nvm
<mike802>	too much to handle
<mike802>	f'in techno
<hotcoder>	fuck off
<hotcoder>	thanks
<fexilal>	hotcoder : dont waste your time and go for it!
<hotcoder>	finally some advice
<hotcoder>	she has nice tits
<hotcoder>	if i went on that i'd fuck her silly
<droogie_alex>	i wouldnt go for it
<droogie_alex>	if you are good friends\
<aidanh>	well clearly that's the critical factor
<droogie_alex>	it will wreck your friendship
<fexilal>	dm;hs
<hotcoder>	the friendship wont be the only thing thats wrecked ;)
<mike802>	why can't you go to a bar?
<hotcoder>	mike you wanna drink with me?
<fexilal>	hotcoder : now that you have the validation you wanted, go for it
<hotcoder>	anyone around toronto?
<hotcoder>	ye fexilal i gotcha
<mike802>	bro, that's like a 10 hour drive
<hotcoder>	mike802, bro.......
<hotcoder>	lets do it
<hotcoder>	!
<hotcoder>	meet halfway
<fexilal>	or just fly to toronto
<droogie_alex>	try #boredgirls <<-- lots of lonely girls here
<hotcoder>	i'll bring my best friend, you bring your girlfriend and we can all be friends :d
<mike802>	so that's what, 8pm?
<mike802>	i don't have friends
<mike802>	lol
<hotcoder>	but u have gf?
<mike802>	what's this all about
<droogie_alex>	yeah patty palmer\
<hotcoder>	nothing
<archilius>	how to write that text that shows "*archilius did something"?
<hotcoder>	handelina jolie
<mike802>	i'm trying to watch a movie with some action and some boobs
<rindolf>	archilius: using which language?
<droogie_alex>	you type "/me"
<rindolf>	archilius: oh /me
<hotcoder>	lol
<droogie_alex>	without the ""
<rindolf>	/me is lame
<hotcoder>	palmela anderson
<hotcoder>	i love this channel yo
<hotcoder>	we talk about coding
<hotcoder>	then we talk off topic
<hotcoder>	not like the other nazi channels
<mike802>	good point, i don't bring my car into the shop until next week
<hotcoder>	i hate nazis
<denommus>	pyon: you know what is worse than c++?
<hotcoder>	mike offer is retracted
<hotcoder>	cause you have no friends
<_blizzy_>	i did nazi that coming
<denommus>	pyon: not being able to use c++11
<droogie_alex>	you won't get a way with it long most chans are all the same
<hotcoder>	droogie_alex, join this channel #shutthefuckup
<hotcoder>	its good channel bro
<droogie_alex>	nah i think you should join the chan #troll
<droogie_alex>	thats a better fit for you
<hotcoder>	is it full of dumb slutty bitches?
<hotcoder>	i cant even lie
<droogie_alex>	yep
<hotcoder>	my best friend is a bimbo
<hotcoder>	aidanh, thats what i live for
<hotcoder>	i know that this is all you guys have going on in your lives right now
<hotcoder>	so why not spice it up a bit with other life stories that is off topic
<hotcoder>	but no
<hotcoder>	fucking #freenode has to ban everyone whos offtopic
<hotcoder>	then they sit around with no lives and nothing interesting
<hotcoder>	all cause some fucker might lose their precious cloak
<hotcoder>	fuck outta here
<ams>	hotcoder: decorum.
<hotcoder>	alright alright i'll stop
<droogie_alex>	hot coder try this command /part ##programming
<rindolf>	hotcoder: are you drunk?
<hotcoder>	doobie shut up
<hotcoder>	java got to my head brah
<dogpolice>	try this. quell the crap.
<hotcoder>	what can i do
<hotcoder>	dogpolice, i already said i was gonna stop
<hotcoder>	i stopped!
<dogpolice>	so make good on your statement.
<hotcoder>	dont ban me pls :'(
<hotcoder>	thanks
<hotcoder>	gonna code some java right now
<aidanh>	i miss archer a little
<reynir>	the tv show?
<aidanh>	the bot
<droogie_alex>	i would pay money to see that
<manicpanic>	why am i able to process 64bit integers on my 32bit laptop ?
<manicpanic>	i mean like, 527193628241725 should through an error on 32bit pc's right
<denommus>	manicpanic: no
<rindolf>	manicpanic: they are implemented in software.
<xgc>	manicpanic: why were we able to process 64 bit values on 8 bit machines?
<pomf>	dogpolice: hehe u sed cock
<hotcoder>	i know you guys think im slow and painful
<denommus>	manicpanic: a 32bits processor will see the 64bits int as two 32bits int
<hotcoder>	for coding java
<hotcoder>	much like the language itself
<pomf>	manicpanic: bigits
<pomf>	bigints*
<hotcoder>	digits*
<manicpanic>	denommus: oh i see
<pomf>	what denommus also said.
<hotcoder>	i have a question about programming
<manicpanic>	rindolf: yes you could be right
<hotcoder>	if java is object oriented
<hotcoder>	then what other orientations are there?
<aidanh>	i remember using 128-bit integers in c, they come in handy sometimes
<manicpanic>	my laptop is 64bit capable , it might be that too
<hotcoder>	damn aint nobody answer my question cause a girl actually likes me yall jealous
<blockeduser>	why are there so many clothes with skulls on them?
<reynir>	hotcoder: modular programming
<pomf>	hotcoder: it's not orientations, rather it's paradigms.
<hotcoder>	name some modular programming language
<hotcoder>	i wanna know the other side of the grass
<aidanh>	modula-3
<pomf>	hotcoder: almost any language that supports loading
<aidanh>	...maybe
<rindolf>	hotcoder: there's also structured programming, procedural programming, functional programming...
<droogie_alex>	http://dpaste.com/3tdjacj
<hotcoder>	damn
<hotcoder>	big words
<pomf>	rindolf: structured?
<hotcoder>	so much to learn
<rindolf>	pomf: yes.
<manicpanic>	this is good, cause now i can dev on the 32bit pc so facebook id's will work on it
<archilius>	what is the diff between procedural and structured?
<aidanh>	droogie_alex: what is that...
<aidanh>	some sort of tcp emulation?
<droogie_alex>	aidanh: hehe a pen testing script
<rindolf>	pomf: https://en.wikipedia.org/wiki/structured_programming
<aidanh>	droogie_alex: oh
<aidanh>	and it does... what
<droogie_alex>	ddos's
<rindolf>	good night everyone.
<aidanh>	oh, syn flood?
<aidanh>	see you rindolf
<rindolf>	aidanh: bye.
<droogie_alex>	try it out
<aidanh>	droogie_alex: you do realize syn floods are pretty much well-mitigated by now?
<droogie_alex>	watch your packets fly
<droogie_alex>	yes
<droogie_alex>	its old
<ninjapenguin>	and illegal in freenode.
<aidanh>	ninjapenguin: is it?
<ninjapenguin>	yeah, think so. freenode doesn't support any sort of unlawful behaviour.
<hotcoder>	unlawful?
<ninjapenguin>	illegal.
<droogie_alex>	its for pen testing only
<hotcoder>	what can freenode do about it
<hotcoder>	report me?
<aidanh>	i'm not sure that posting a link constitutes unlawful behavior... in the us, probably, but elsewhere, eh
<ninjapenguin>	remove you from freenode.
<hotcoder>	is freenode even a thing in the real world?
<aidanh>	asking the big questions
<ninjapenguin>	no, it's part of the matrix.
<hotcoder>	seems like it
<pomf>	(he doesn't know freenode is a hidden organization ruling the world from the shadows...? <.<)
<hotcoder>	cause when you unplug its like there is no such thing
<ninjapenguin>	pomf: seems like so. :|
<hotcoder>	freenode is here for me spend time on while i code
<hotcoder>	and occassionally ask a useful question
<pomf>	ninjapenguin: this possibly can't end well.
<pomf>	this can't possibly *
<pomf>	aidanh: errr
<pomf>	you're in gmt+8 too..?
<aidanh>	pomf: i am
<aidanh>	s/snack/feast/ possibly
<pomf>	aidanh: what country? i'm from philippines.
<aidanh>	pomf: taiwan
<pomf>	ah
<pomf>	aidanh:
<pomf>	oops
<pomf>	note to self: do not spam return key.
<pomf>	awee
<pomf>	emacs can't read the battery of my phone.
<pomf>	uguu. :<
<hotcoder>	ok gonna eat now
<hotcoder>	i'll catch yall later at night :d
<ltcd2>	hi. can someone help me with a quick android development question? when someone uploads an app to playstore how does playstore know which android version (2.1 for example) the app requires?
<cojabo>	ltcd2: it'd be in the app manifest..
<ltcd2>	is it something in the app (manifest file etc...)? me telling playstore which android version? or playstore detects it?
<denommus>	ltcd2: it is in the manifest file
<ltcd2>	cojabo - just to confirm because i think my android developer is scamming me :-( and purposely breaking things. if someone makes an app, they should specify in the manifest file?
<denommus>	ltcd2: yes. and some features are only available for some versions
<cojabo>	iirc (it's been a while..) it is literally the very first thing the sdk asks you..
<ltcd2>	denommus: so my developer is either an idiot or purposely trying to break things?
<denommus>	ltcd2: i have no idea what's happening to you
<cojabo>	ltcd2: you'd need to be more specific than that
<ltcd2>	denommus: may i privately send you my app? because the person making it said it would only work on newer phones, but on playstore it says from version 2.1  which for sure is wrong because the app doesn't work on a 2011 phone!
<cojabo>	ltcd2: it is possible for the manifest to be wrong; the app dev would have to fix that.
<ltcd2>	i basically think my developer keeps on making hard to notice mistakes to cause issues (i've found loads), problem is they have m money.
<denommus>	ltcd2: it seems he just made a mistake, since he is not claiming it should work on 2.1
<ltcd2>	this is the 50th mistake which would easily have been missed.
<denommus>	ltcd2: he shouldn't charge you for this kind of mistake. that's clearly a bug
<ltcd2>	for a basic app (just calculates a few things) is it normal for it only to work on newer phones? i'm a c coder and my shit usually works from windows 2000+
<denommus>	ltcd2: but mistakes happen. we're human beings, and code is a big thing
<denommus>	ltcd2: i have no idea. it depends on the android features he is using
<ltcd2>	denommus: nah this is a basic app, and this woman has made loads of mistakes which were purposely done.
<cojabo>	ltcd2: i still run 2.3, and that's ancient
<cojabo>	anything older than that is solidly dead
<denommus>	ltcd2: why do you assume it was on purpose? is she charging to fix those mistakes?
<ltcd2>	i know i have 2.1 on my old phone and 4.* on a newer phone. is it normal, or is this developer an idiot? i was so angry when it didn't work on my 2.1 version old phone. she isn't charging money no, but she takes a week to reposition text (which takes 4 weeks as she has no common sense) and then leaves in bugs, never checks things either.
<cojabo>	ltcd2: it isn't reasonable to expect a developer to test on 2.1
<ltcd2>	okay. but what about a phone from 2011?
<cojabo>	only if you specified that up-front.
<cojabo>	phones generally have a 6-month eol at best.
<ltcd2>	i said in requirements i wanted it to work on as many phones as possible.
<cojabo>	so 2011 is dead eight times over.
<aidanh>	cojabo: that seems a bit excessive...
<ltcd2>	but surely it's just a case of changing a few things? like when i code using win32api i ensure i use functions which work from xp on...
<cojabo>	ltcd2: desktop operating systems are different; xp lived for over 10 years.
<ltcd2>	so it's a huge job to make it work on galaxy s2 phone?
<aidanh>	i had a 2009 phone and used it fine until last year
<cojabo>	ltcd2: not particularly, but unless you asked for that, it's a spec change, and the programmer has every right to charge extra for that.
<ltcd2>	not really as i said i wanted it to work on as many phones as possible. 4 years old is not a huge difference. anyway it's annoying that she keeps putting in mistakes and now purposely damaged the manifest.
<cojabo>	ltcd2: "as many phones as possible" is something i would reasonably interpret as "4.0 and up". that gets you 90% of android devices.
<ltcd2>	if i send app can you see which version it accepts, as on playstore it says 2.1 which is wrong.
<cojabo>	supporting 2.3 would get you 99%.
<aidanh>	ltcd2: really, if you explicitely asked for 'as many phones as possible', your developer should have asked for clarification on exactly what that meant
<cojabo>	ltcd2: the app manifest is wrong; it should be fixed (for free) to declare a more modern version. the dev isn't obligated to make it work in a version older than ~4.0
<ltcd2>	if 90% of phones have 4.0+ then i'm happy with that.
<cojabo>	sauce: https://en.wikipedia.org/wiki/android_version_history
<ltcd2>	still feel like app developers are a bunch of scammers now tbh, as i know when i code i would never do that.
<aidanh>	ltcd2: those figures depend on your target market
<cojabo>	ltcd2: it's just the way app dev works, and part of why i don't do much app dev anymore.
<ltcd2>	well my app is for smoking/alcohol/drugs (helping people quit).
<ltcd2>	cojabo you quit as the os changes too quickly, and you can't write code which works on almost all phones?
<cojabo>	ltcd2: partly that, partly that the number of operating systems is too damn high™
<cojabo>	i target html5 exclusively; if someone wanted an app, it would probably just end up being a light wrapper around the html5 version. write once, runs on 99.9% of devices (not just android, mind you, all devices overall)
<ltcd2>	cojabo i'll send you app in private message.
<ltcd2>	webapps are really that easy? can you find them on playstore even if they are html5?!
<pokeymantrainer>	when i do sizeof(myunion) on a union in c, does that return the size of the largest item in that union?
<cojabo>	a lot of the apps there are probably using some html5 components. especially the ones not expected to work offline.
<aidanh>	pokeymantrainer: effectively, yes
<manicpanic>	phonegap is slow
<ltcd2>	cojabo so it can go onto playstore, just make sure user has phone online?
<cojabo>	html5 actually can work offline ofc, but it takes a bit more effort
<denommus>	ltcd2: honestly, if you already had an old version in mind, why didn't you specify it clearly?
<ltcd2>	denommus: i had no idea android was so stupid, but either way she should have asked for clarification.
<ltcd2>	cojabo: but you can put webapps onto playstoee right?
<denommus>	ltcd2: yes, android is a pain to work with. she indeed should have made that clear when making a contract
<cojabo>	ltcd2: you'd have to wrap them as android apps, but essentually yes. only firefoxos currently uses html5 for it's "native" apps.
<ltcd2>	denommus: tbh the amount of bugs she has left in the program is untrue.
<denommus>	ltcd2: was she working by herself? did she have a tester? a qa? if not, bugs are to be expected.
<denommus>	gosh
<denommus>	what a pain
<ltcd2>	basically though a lot of the problems i feel she purposely left in. and sometimes it's obvious she didn't spend 10 secs checking her work.
<ltcd2>	anyway guys thanks a million!
<denommus>	ltcd2: just so you don't misinterpret me: i'm having problems with something else and i was going to rant about it, but then i suddenly thought about a solution
<ltcd2>	denommus: ?????
<cojabo>	ltcd2: programming 101: the simplest problems are the easiest to overlook.
<ltcd2>	my friend had 4.2.2 android, so i'm pissed the app didn;;t work
<vdamewood>	hi, people, etc.
<ltcd2>	anyway thanks people, i'm off.
<alltuna>	hey guys
<alltuna>	i'm in need of some maths help when it comes to making a player jump
<vdamewood>	we're going to need more details than that.
<alltuna>	i want to make my player jump toward h height, and land x distance away
<alltuna>	i'm trying to figure out how to calculate the gravity, mass, and force needed
<vdamewood>	mass is a factor of force, you need mass and acceleration
<vdamewood>	not sure about your world, but earth (on average) is 9.8 meters / s^2
<vdamewood>	err earth gravity
<vdamewood>	does this help at all?
<alltuna>	hmm yes, i'm horrible at maths though
<alltuna>	i'm using unity, lets see, gravity is automatically applied
<aidanh>	usually you'd decide on jump time and jump height, then solve for gravity and initial velocity
<alltuna>	so we can assume 9.8 meters / s^2
<alltuna>	could you give an example please
<vdamewood>	this book might come in handy: http://www.amazon.com/physics-game-developers-science-realistic/dp/1449392512
<aidanh>	v = v_0 + at, so y = v_0*t + (a*t^2)/2 ... i think
<aidanh>	where v_0 is initial velocit, v is velocity at time t, a is gravity (-9.8m/s/s)
<aidanh>	oh, and y is height
<vdamewood>	eww... double fraction.
<vdamewood>	i'm having flashback of calculating projectile trajectories in school.
<joe128>	not sure if this is the right channel, but in excel i know i can click and drag a date across the screen to increment it. but how would i do that for mwf of each day?
<joe128>	like a pattern that does 5-4 5-6 5-8 5-11 5-13 5-15.......
<vdamewood>	i need an updated taocpv1.
<njcomsec>	u wat m8
<vdamewood>	my copy of taocpv1 is old. i need to get an updated one that matches my current v2 and v3.
<njcomsec>	u wot m8?
<njcomsec>	what century you from
<njcomsec>	what i this taocpv1
<vdamewood>	njcomsec: it's a book.
<aidanh>	do taocp version numbers also approach pi?
<vdamewood>	aidanh: no. they are all integers. they also don't match each other.
<aidanh>	vdamewood: well that's very inelegant
<vdamewood>	aidanh: well, earlier volumes went through revisions before later volumes were published.
<aidanh>	ahh, yeah
<vdamewood>	fortunately, knuth has put a moratorium on new editions of v1 - v3 until v5 gets published.
<ams>	is v4a any good
<vdamewood>	i honestly don't know. i only have v1-3.
<vdamewood>	though, i found the answer to my question about the value of pi in v2.
<tenshi998>	hey guys i need some help with my c++ project
<vdamewood>	tenshi998: go straight into actual requests for help.
<tenshi998>	http://pastebin.com/fvlrx41x here, i did something wrong with the resizetable function. whenever i enter a big number and then resize the array to a much smaller size it doesn't free up memory as it should do
<csd_>	question about big theta notation. as i understand it, it's supposed to represent a bound on both sides of function f(n). is it ever possible for big theta not to exist, where one side of the bound isn't possible?
<tenshi998>	the problem should reside in the resizetable function or in the while loop inside main
<vdamewood>	tenshi998: why do you return a pointer to a pointer?
<tenshi998>	that's how you make a dynamic bidimensional array right?
<tenshi998>	because i want the memory to be dynamically handled during runtime and not compilation
<tenshi998>	i'm still practicing with dynamic memory and pointers
<vdamewood>	i'd use a struct/class. it makes managing these things easier.
<tenshi998>	ah well, but do you have any idea why the program doesn't free enough memory as it should do?
<vdamewood>	you are calling delete and not delete[], perhaps.
<tenshi998>	brb trying now
<tenshi998>	nope doesn't work, only a fraction of the memory is freed of what is supposed to be freed
<tenshi998>	for example i entered size of 1000000 ish and then size 10
<tenshi998>	should make my ram usage drop significantly
<vdamewood>	where did you make changes?
<tenshi998>	but only like 10% is freed
<tenshi998>	in the resizetable function
<tenshi998>	replaced delete by delete[]
<vdamewood>	did you change both delete's?
<tenshi998>	yes
<vdamewood>	also, your operating system could have tricks in place so that you're not using actual ram, even though you allocated the memory.
<millerti>	i need some advice.  i'm working on neuralnet based image compression.  basically, i train neural nets to reproduce their input on their outputs with varying numbers of quantized hidden nodes.  initially, i train all nets on all training images.  but consider that different nets are better for different image complexities.  so it seems that i should retrain nets on images that match the nets that can reproduce them.  but to
<millerti>	 what degree of accuracy?  this is lossy compression, so i want to select the lossiness.  then it occurred to me that i could train a 2d array of nets -- one dimension is number of hidden nodes, while the other is error.  the problem i run into is that some error values don't occur for larger nets.  this is where i'm stuck.
<tenshi998>	i've checked the ram usage of the programming with htop
<tenshi998>	don't think my os is the problem
<tenshi998>	i must've made a mistake in the code
<mike802>	stupid client
<mike802>	my hands are too fat, i just mush the keys and it quits the room
<vdamewood>	tenshi998: what does your memory profiler say?
<tenshi998>	vdamewood: what do you mena?
<tenshi998>	i see that the memory usage of the problem spikes if i enter a very larger number in my program but when i enter a small number afterwards very little memory is freed
<vdamewood>	well, a memory profiler is a program that checks memory usage as a program runs.
<tenshi998>	yeah, i use htop for it
<tenshi998>	so... does anyone know what i did wrong?
<vdamewood>	askfornumber doesn't return a value if it reaches the end of its block, perhaps.
<tenshi998>	 no, it does. only on condition that it returns a valid integer
<tenshi998>	ah, never mind
<tenshi998>	i'm going bye
<vdamewood>	that was woefully unsatisfying.
<njcomsec>	have a fap
<vdamewood>	the baristas frown on that.
<njcomsec>	lol
<vdamewood>	is there an mmix disassembler?
<_w_>	csd_: yes, it's possible, but only with very artificial functions
<_w_>	nothing that's even remotely likely to turn up as the runtime of any actual algorithm
<_w_>	well, that's not true; computer science sometimes simplifies. some algorithms, e.g. primality tests, have runtimes that vary wildly. but at that point, there's little to be gained with analyzing big-theta, you'd really only concern yourself with big-o
<_w_>	(and you might talk about the big-theta of the algorithm on the domain of non-trivial numbers)
<vdamewood>	damn. got a cross reference to a section i don't have yet.
<vdamewood>	err, no. i have it, but it's at home.
<puddlejumper>	what up cs bitches?!
<vdamewood>	why is it that whenever i read "foo is undefined." i'm instantly tempted to try to execute foo to see what happens?
<puddlejumper>	vdamewood: because you're a crack baby ?
<vdamewood>	nope. mom didn't do crack.
<srpx>	what is a license that means the people can do anything they want with my code other than holding liable/registering/anything that directly affects me from using my own code?
<srpx>	that is, i don't want anyone to have any obligation including giving credits/whatever
<encapsulation>	how do i undo a git pull?
<vdamewood>	encapsulation: what and how much did you pull?
<vdamewood>	if you only pulled one branch, you can just change the branch to the commit it was before you pulled.
<paxcoder>	srpx, one of the cc public domain licenses?
<caelum>	if you have a project that is under the bsd 2-clause license, but it has some bundled scripts that are under the vim license, can the project as a whole be considered to be under the bsd license?
<droogie_alex>	wow are you still talking about software licensing
<vdamewood>	caelum: no.
<caelum>	ok, so what do i do then
<caelum>	relicense my project under the vim license?
<caelum>	i do have a disclaimer in the license file that bundled plugins are under their own licenses
<vdamewood>	what are you trying to do?
<caelum>	this is only a matter of "what do i tell package maintainers the license is"
<caelum>	i am trying to communicate with a package maintainer about the license issue for my project
<_w_>	caelum: you can distribute different pieces of code under different licenses
<caelum>	yes, that is what i'm doing
<caelum>	but what is the overall license of the project
<_w_>	as long as you have the right to distribute each part, you're fine to bundle them
<_w_>	a mix
<_w_>	it will always be a mix
<vdamewood>	if you have different files with different licenses, there is no 'overall' license for the project.
<eric_lagergren>	hi guys and gals.
<eric_lagergren>	vdamewood: couldn't you pick the most permissive license to encompass the whole project?
<vdamewood>	eric_lagergren: absolutely not.
<eric_lagergren>	provided it complies with the rest of the licenses.
<eric_lagergren>	releasing a product under gpl that uses bsd code?
<_w_>	eric_lagergren: some licenses allow you to use other licenses when you re-distribute, but not most
<_w_>	and it's not a matter of using code, it's a matter of distributing it
<eric_lagergren>	mmmm
<vdamewood>	or modifying it.
<_w_>	using code in and of itself doesn't mean you have to follow any license
<_w_>	no, modifying it is fine too
<_w_>	licensing is only needed for distributing the work or derivative works
<vdamewood>	so, the license is requires for freedoms 2 and 3.
<vdamewood>	(unless i have 1 and 2 reversed in my head)
<_w_>	you're talking about some fsf stuff?
<caelum>	well i guess i can relicense my project under the vim license
<caelum>	or rewrite those parts
<vdamewood>	_w_: yeah. the numbered freedoms come from one of rms's speeches.
<vdamewood>	_w_: though, they are also at https://www.gnu.org/philosophy/free-sw.html without numbers.
<_w_>	yeah i am not a very big fan of fsf
<caelum>	well i guess you can include bsd 2-clause code in gpl projects, since the licenses do not conflict
<_w_>	caelum: you can include whatever you like in gpl projects
<_w_>	including bsd 2-clause licensed code in a gpl project does not mean that code is legally licenses as gpl; it is still bsd 2-clause (and has to retain that notice)
<caelum>	there is nothing in the bsd license that says you can't relicense it
<_w_>	licenses are not restricting freedoms you otherwise have; they give you permissions you don't otherwise have
<_w_>	it's not about what they say you can't do, it's about what they say you /can/ do, and bsd doesn't say you can re-license as gpl
<caelum>	no, you are full of shit
<caelum>	completely
<gagabone>	https://en.wikipedia.org/wiki/algorithm <- i don't understand how this differs from a computer program.
<gagabone>	every computer program is also an algorithm?
<caelum>	yeah
<_w_>	caelum: i'm fairly certain i have a good grasp on copyright legislation and licensing. why do you think i'm wrong?
<gagabone>	then why not call them "programs"?
<_w_>	gagabone: because algorithm is more formal
<gagabone>	odd.
<caelum>	e.g. quicksort
<mike802>	have you seen one before?
<caelum>	is an algorithm
<gagabone>	maybe algorithm is more of an abstract description of what needs to be done, whereas a program is a concrete implementation of said abstraction description?
<caelum>	gagabone: yeah
<gagabone>	ah. then i understand.
<gagabone>	assuming it is that way.
<caelum>	like, binary search
<caelum>	an algorithm you would use in a filing cabinet
<kazagistar>	_w_: https://www.gnu.org/philosophy/license-list.html ... bsd is listed as gpl compatible
<_w_>	kazagistar: the fsf are not very rigorous about their legal definitions
<_w_>	i can't even find a definition for what "compatible" means on that page
<_w_>	and the fsf often are at odds with all other lawyers anyway
<caelum>	well, microsoft includes bsd code in windows, like the ftp and telnet utilities, does that mean windows is also under the bsd license?
<kazagistar>	_w_: https://www.gnu.org/licenses/gpl-faq.html#whatdoescompatmean
<_w_>	well they're just wrong on that one then
<_w_>	well actually they don't explicitly say that you're re-licensing the included code
<_w_>	so as far as what they're saying doesn't disagree with what i'm saying, they're right
<kazagistar>	can you point us to any legal precedent for what you are saying? i have never heard anything saying bsd cannot be relicensed
<_w_>	no there is very little precedence in court about these kind of licenses, mostly because no one goes to court unless it's a clear-cut violation
<_w_>	but a fundamental principle of copyright is that you need the permission of all authors of a work to distribute it
<kazagistar>	or any legal analysis that agrees with what you are saying
<_w_>	also, you'll note that people who do include bsd software with gpl software do in fact include the bsd license
<mike802>	i think the courts do a decent job of deciding what's fair competition
<_w_>	you're free to challenge that of course; remove the bsd license from some bsd software, bundle it up with your own gpl code, and license the whole as gpl, and wait to see if the authors of the bsd project sues (they won't - why would they?)
<ori_b>	caelum: you can mix licenses if the requirements of the license do not contradict; that's basically what ms does.
<_w_>	but someone not sueing doesn't mean they /can't/
<mike802>	can you define a good time when sueing would actually help
<vdamewood>	_w_: the bsd license specifically forbids that.
<_w_>	ori_b: yes, but my point is that the whole then has a mix of licenses
<ori_b>	_w_: yes, that's correct.
<_w_>	you can't say that the whole is gpl software for instance
<mike802>	it would have to be a robbery
<mike802>	and actual robbery
<mike802>	*an
<mike802>	right?
<ori_b>	_w_: basically, what you can do with the software is the intersection of what all licenses allow.
<mike802>	you can't sue a grocery store for selling food
<_w_>	ori_b: of course
<caelum>	the gpl also has a legal disclaimer, and you can mention the author in the documentation, that's all that is required
<ori_b>	(and if one of the licenses is the gpl, that basically means that it's what the gpl allows, since the gpl's language basically requires it to be the most restrictive license in the collection.
<ori_b>	)
<mike802>	but i'm sure there's all kinds of ways to take advantage of s system
<vdamewood>	_w_: that is, the bsd license specifically required that the license itself remain intact in all copies of the code.
<_w_>	and yeah, if i am to take the fsf's words literally here, they are in fact wrong. bsd is not compatible with gpl under their definition
<ori_b>	_w_: which bsd?
<ori_b>	there are several versions.
<_w_>	either
<_w_>	2-clause or 3-clause
<_w_>	neither mentions that you can redistribute under gpl
<nizumzen>	_w_: actually linux has been stealing code from the bsd operating systems and putting it in the linux kernel under the gpl (which really annoys bsd devs because they can't use the modifications in the bsd kernels because it is now under the gpl license)
<nizumzen>	_w_: for years
<ori_b>	_w_: redistribute under gpl != 'compatible with gpl'
<_w_>	nizumzen: well i think they'd have a decent case in court
<_w_>	ori_b: yes, i am talking about what the fsf means by "compatible with gpl"
<ori_b>	_w_: it means you can redistribute *alongside* gpl as part of an interdependent package
<_w_>	according to the linked page https://www.gnu.org/licenses/gpl-faq.html#whatdoescompatmean
<_w_>	that's not what that link says if read literally
<ori_b>	it does -- "you can combine code released under the other license with code released under the gnu gpl in one larger program."
<_w_>	specifically the second paragraph
<mike802>	which linux distro
<_w_>	"...provided the combination is released under the same gnu gpl version. the other license is compatible with the gpl if it permits this too."
<_w_>	but bsd does not permit this
<nizumzen>	mike802: not a distro the actual linux kernel so all of them
<ori_b>	_w_: this is specifically talking about the "uplicensigng" clause within the gpl
<mike802>	bash?
<_w_>	ori_b: yes, but bsd does not have a corresponding "downlicensing" clause
<ori_b>	_w_: you're missing the point;
<_w_>	which is required according to that definition of "compatible"
<nizumzen>	wow de ja vu
<ori_b>	the gpl allows mixing even if incompatible with an additional clause.
<_w_>	yes, which is fine as far as the gpl code is concerned
<_w_>	but the other party of the mix has to agree too
<nizumzen>	mike802: bash what?
<ori_b>	_w_: the point is that gpl v1, v2, and v3 are all incompatible, but you can convert due to that being explicitly permitted in the license.
<ori_b>	_w_: bsd is *not* incompatible, so it does not need that clause.
<ori_b>	in software terms, the gpl versions come with a gpl compatibility adapter layer.
<o0elise0o>	has any of this even been tested in court?
<ori_b>	the bsd doesn't need that layer because it only uses a compatible subset for all of them.
<_w_>	ori_b: that may be, but when they say on one page that "bsd is compatible with gpl" and on another page "a license is compatible with gpl if permits distribution under gpl license"
<_w_>	they are wrong
<ori_b>	_w_: you missed the first half sentence of the second paragraph.
<_w_>	you can't redistribute bsd software under a gpl license; you have to retain the bsd license
<ori_b>	all gnu gpl versions permit such combinations privately; they also ...
<ori_b>	ie, that section is *only* talking about gpl to gpl compatibility.
<o0elise0o>	has any of this even been tested in court?
<_w_>	ori_b: so why add that last sentence? isn't that already covered by the first?
<ori_b>	o0elise0o: i'm not aware of that; the only time i'm aware of it being challenged was when the linux guys took openbsd code into the linux kernel under the gpl. the linux guys backed down.
<_w_>	what does the "if" refer to in that sentence, if all gpl is compatible with all other gpl?
<_w_>	oh wait, they're distinguishing gnu gpls from other gpls
<ori_b>	_w_: dunno, it's not formal legal text; i think what they're saying is that other licenses can add explicit gpl compatibility clauses.
<_w_>	i see, yes, then i guess what they're saying can be right
<mike802>	all this legal mumbo jumbo is pissing me off
<mike802>	i don't have the patience for this
<_w_>	mike802: you don't have to, /part is easy to type
<o0elise0o>	i dont bother to liscence my code i just like freedom
<_w_>	o0elise0o: me too
<mike802>	is that the command?
<mike802>	thank you
<mike802>	i've never bothered to look it up
<ori_b>	_w_: yeah; basically, if you can legally take 'file1.c' under brand x license, and 'file2.c' under gpl, and legally make a derived work (now *that* is what needs to be tested in court), the licenses are compatible.
<ori_b>	o0elise0o: if you don't bother licensing your code, it's under the most restrictive license by default.
<ori_b>	all rights reserved.
<ori_b>	o0elise0o: toss it under the wtfpl if you want.
<o0elise0o>	nah, i like freedom
<o0elise0o>	i just post it and dont care what happens
<ori_b>	o0elise0o: right; my point is that if someone who actually has to care wants to use it, they can't.
<ori_b>	because without further specification, there are no rights at all granted to use it.
<_w_>	i used to publish my code into the public domain (regardless of jurisdictions where that is not well-defined or even have any power), but these days i trust that people will use freely what is apparently made available freely
<_w_>	if they don't, they can join the revolution
<caelum>	ori_b: when did that happen, that linux stole code from openbsd
<mike802>	do you know how much work is involved in learning a new api, nevermind a whole code base?
<ori_b>	caelum: ath5k license dispute.
<ori_b>	iirc
<ori_b>	mike802: depends on the api and codebase?
<vdamewood>	mike802: i  usually don't have much of a problem learning a new api.
<_w_>	yeah some apis are real easy to pick up
<o0elise0o>	system.io.file.stream.reader.read()
<mike802>	i guess so, like if you're working with a google api, like the google maps api
<mike802>	although it's hard to contribute something meaningful
<caelum>	ori_b: i just looked at that slashdot thread from 2007, apparently it was the author who submitted the patch to lkml and explicitly changed the license to gplv2
<ori_b>	ah, ok.
<bustylolichan>	https://www.google.com/search?q=2+megabytes+in+bytes&ie=utf-8&oe=utf-8#q=2+kb+in+b
<bustylolichan>	why is this 2000 and not 2048?
<ori_b>	caelum: it's been a while, might have misremembered.
<_w_>	bustylolichan: because iso
<ori_b>	bustylolichan: look up mebibytes.
<_w_>	or is it si?
<_w_>	yeah si was what i was talking about
<ori_b>	and possiblibytes too.
<caelum>	7 bit bytes on the pdp-11
<vdamewood>	iso sets the si standard, so it works.
<bustylolichan>	i know mebibytes exist.... i just didn't realize the standard had changed...
<ori_b>	bustylolichan: well, more like a standard was created.
<bustylolichan>	yeah...
<vdamewood>	bustylolichan: there never was a 'standard' for megabyte = 1024 * 1024 bytes.
<_w_>	bustylolichan: similarily 1.44mb floppies actually have 1.47456mb capacity
<bustylolichan>	well if you ask google how many bytes are in a megabyte it goes 1000 * 1000
<_w_>	vdamewood: standard can mean many things; was there a formalized standards document that the industry agreed on? no. but it was in common use and common understanding
<mike802>	lol
<mike802>	sounds like jibberish
<vdamewood>	i wouldn't really say it was a common understanding. after all, i could buy a 'megabyte' of ram and it would have one capacity and a 'megabyte' hard drive and it would have another.
<_w_>	including some lawsuits over harddrive manufacturers that used mb and gb using powers of 10 when customers expected powers of 2
<caelum>	how about megabits and gigabits, are those si or base2?
<aewffwea>	_w_: that's nice... all my hdds do that
<_w_>	nowadays mega and giga are always powers of 10
<aewffwea>	that's evil :(
<o0elise0o>	http://politics.slashdot.org/story/15/05/02/1846228/native-hawaiian-panel-withdraws-support-for-worlds-largest-telescope
<o0elise0o>	could the hawaiian royal family take back their country?
<laptop_mini>	do all operating system have some kind of software to "host" a raid on it?
<caelum>	why do they give a shit about a telescope
<laptop_mini>	im trying to understand raids for this database class, but one thing that confuses me is what operating system manages the disks.
<caelum>	"oh noes, someone wants to put something in the lava lake..."
<caelum>	laptop_mini: it's the raid controller for hardware raid, and the os driver for software raid
<caelum>	laptop_mini: bios raid and cheap controllers are also software raid
<o0elise0o>	the vote, which reverses a 2009 decision to endorse the project, strikes a powerful if symbolic blow against a project that, for many native hawaiians, has come to symbolize more than a century of assaults against their land, culture and sovereignty.
<laptop_mini>	im only learning about raids for disks.
<o0elise0o>	the vote follows weeks of protests by native hawaiians who say the massive structure would desecrate one of their most holy places.
<laptop_mini>	as an alternative for storage in a database system.
<_w_>	o0elise0o: if they successfully secede, sure - but the us is probably very eager to make a demonstrative point about the integrity of the union if it comes to that
<caelum>	databases are usually on a raid
<ori_b>	caelum: i think pdp-11 was 8 bits, pdp-10 was weird
<caelum>	ah ok
<o0elise0o>	they are mad cuz dumb mother fuckers have no respect for people
<laptop_mini>	can you have a raid on windows for example?
<ori_b>	supported either 7, 8, or 9 bits dpeending on a selector in the top bits of the address.
<caelum>	laptop_mini: yes of course
<ori_b>	i think
<caelum>	laptop_mini: windows supports both software and hardware raid
<laptop_mini>	ok
<ori_b>	i could ask someone who still uses it (well, an fpga implementation of it) in production, though.
<o0elise0o>	_w_::what does demonstrative point mean?
<generalvagueness>	raid is mainly a hardware and firmware thing, laptop_mini
<mike802>	maybe try ##windows, or ##hardware
<o0elise0o>	i kind of wish hawaiin, alaska, and texas all left the usa
<caelum>	especially texas
<caelum>	give texas back to mexico!
<o0elise0o>	no, i mean so people can regain some freedom
<_w_>	o0elise0o: just what it sounds like. take a stand not because of the short-term pros vs cons, but explicitly to hold to a wider principle
<laptop_mini>	what would be a good thing to look into to get more information about making a raid on windows 7 for example?
<laptop_mini>	i have an htpc, and with this reading, im thinking of experimenting.
<caelum>	laptop_mini: you can make a dynamic disk in disk management
<o0elise0o>	_w_::do you mean like a media campaigne or something?
<_w_>	o0elise0o: no, i mean as in it would take a millitary revolution, and it would have no chance of succeeding anyway
<caelum>	o0elise0o: the civil war was a mistake, the result of which is the plague of republicans
<_w_>	the us is kind of touchy about states seceding since that whole civil war thing
<caelum>	we'd have a progressive, liberal democracy if not for the civil war, instead we have a fascist police state
<_w_>	anyway, probably best to move that part of the conversation over to ##politics or something
<_w_>	in this case it's all symbolic anyway; the telescope is going up
<caelum>	good
<o0elise0o>	i dont understand why they still build them on earth
<o0elise0o>	wtf is wrong with the space agencies?
<_w_>	because it's so much cheaper
<o0elise0o>	are they all really tht broke?
<_w_>	we are putting up some decent space telescopes as well; the webb telescope is due up in 2018
<caelum>	they use an array of small mirrors that can be adjusted to compensate for atmospheric disturbances
<caelum>	modern ground telescopes can take images that rival the hubble
<_w_>	hubble has lots of issues; it's getting quite old
<_w_>	and you can't really point it anywhere near the sun
<_w_>	like, you can't even use it for images of mercury, because it's too close
<caelum>	now, what we need to do is build a gigantic fucking telescope on the moon
<_blizzy_>	what we need to do
<_blizzy_>	is build a giant drill
<_blizzy_>	a drill that shall pierce the heavens.
<_w_>	a drill that will pierce the very heavens?
<_blizzy_>	yes.
<o0elise0o>	build a giant perfectly straight electromagnetic tube going straight through as much of the earth as possible
<o0elise0o>	then just shoot space maglev trains at the sky
<o0elise0o>	id do it myself but kerbal space thing doesnt have that option
<o0elise0o>	if you cover one end with saran wrap and the other end with a vaccum cleaner you can suck the air out of it
<caelum>	did you see the last total recall?
<caelum>	it was a shitty movie, but they used this concept of a train going straight through the earth
<o0elise0o>	yeah i saw it
<generalvagueness>	as for why they build telescopes on earth, just budget is one factor, it's also way more expensive to ship things to space, and people, and pay for what it takes for them to construct things, and there are certain difficulties to deal with
<o0elise0o>	i didnt mean straight through the center of the earth
<_w_>	how tall do you think we can build?
<caelum>	like, a railgun to shoot things into space?
<o0elise0o>	caelum::sort of, but maglev in a vaccum
<_w_>	we have yet to build anything taller than a kilometer
<_w_>	we would get more out of building launchpads on mountains
<o0elise0o>	they way all the space people do things seems wasteful and stupid
<_w_>	why do you think that?
<caelum>	i had this idea, what if for the first stage, instead of solid boosters you'd use a giant hydrogen balloon, then when you're high enough you'd just go off into orbit
<o0elise0o>	aside from that one company that was/is shooting rocket planes off of other regular planes up high
<henke37>	i hear that kerbal space program got out of beta the other day
<o0elise0o>	_w_::lots of reasons but it all basically goes back to human beings not being united enough as a species to work together for space travel
<_w_>	o0elise0o: what does that have to do with things being wasteful?
<o0elise0o>	well like you said, it'd make more sense to launch from a mtn
<_w_>	it's not like rocket launch budgets go into keeping people working on it united
<_w_>	no, it doesn't
<_w_>	i said it made more sense to launch from a mountain than to use some man-made tube thingy
<o0elise0o>	you phrased it in a way that could be taken generally and i guess i did
<caelum>	the mountain wouldn't make that much difference
<o0elise0o>	why wouldn't it?
<_w_>	because rocket launches are not about going up
<_w_>	they're about going sideways
<_blizzy_>	i wonder what would happen if we drilled to the center of the earth.
<_w_>	https://what-if.xkcd.com/58/
<o0elise0o>	someone would die along the way
<o0elise0o>	maybe all sorts of stuff would vent up and kill us all?
<_w_>	_blizzy_: we can't really drill very far even into the crust before things get uselessly warm
<gagabone>	i keep seeing these channel names everywhere, but when i type /join #channel, they don't exist.
<gagabone>	on tv shows and everything, they always have some #name.
<gagabone>	which irc network is it on?
<_w_>	gagabone: funny man
<_blizzy_>	is it considered unsafe to have my post url public in the html?
<_blizzy_>	_w_, true.
<_w_>	_blizzy_: no, why would it be unsafe?
<_w_>	i mean the url has to be there for someone to post to it
<tsumetai>	gagabone: http://en.wikipedia.org/wiki/hashtag
<_blizzy_>	_w_, because then like someone could change the id and post to somewhere else?
<_blizzy_>	like if i have new_comment/blizzy
<_w_>	_blizzy_: how could someone change a url on your site?
<_blizzy_>	no i mean like i'm posting parameters
<o0elise0o>	you have to back end auth stuff
<_blizzy_>	like '/new/:id' where id is a number
<rumpledelf>	if its that unsafe, don't use any parameters in urls like ever
<_w_>	_blizzy_: i think you're being too vague for anyone to give coherent help
<rumpledelf>	get your users to fax their requests to you
<gagabone>	i sit here and listen to these people talk about very abstract and weird stuff. they really do sit there and just blabber on and on about the "cloud" and all these weird terms. i really wonder what that *means*. how exactly is it different from me running my cronjob-executed cli scripts on my server? i don't understand what all these companies need to run and why they need to move it around in "the cloud" and all this stuff.
<gagabone>	do they even know themselves?
<ori_b>	_blizzy_: yes, but if you can trace network requests you can do that.
<ori_b>	_blizzy_: if your service is vulnerable to that kind of attack, your service is broken.
<gagabone>	i almost get the feeling that some (a lot) people really like to make things sound way more complicated than they really are.
<gagabone>	and that they actively go out of their way to do that.
<rumpledelf>	gagabone: 'the cloud' is more a marketing term
<_blizzy_>	well, ok, thanks everyone. :d
<gagabone>	rumpledelf: doesn't explain why they talk about these weird subjects.
<ori_b>	_blizzy_: you will want signed session cookies or a similar mechanism.
<rumpledelf>	gagabone: because its part of their job, or otherwise what they do?
<gagabone>	it's as if they have abstracted everything to the point where it no longer makes any concrete sense.
<_w_>	"the cloud" is a useful abstraction
<_blizzy_>	ori_b, ok, thanks.
<rumpledelf>	yes it is
<_w_>	even though it really just mean "on someone else's computer"
<gagabone>	ugh...
<inphase>	_w_: what are you doing on my cloud?
<rumpledelf>	or a whole bunch of computers. and you don't need to say that because that's what cloud implies :)
<gagabone>	i don't have a good quote now, but this isn't the point.
<_w_>	inphase: this is a communal cloud, perhaps you confused it with ##inphase?
<gagabone>	if you have the free time, watch this video to learn what i am talking about: http://twit.cachefly.net/video/ww/ww0411/ww0411_h264m_1280x720_1872.mp4
<gagabone>	that's the latest episode of "windows weekly".
<gagabone>	i get the feeling that they are speaking to a bunch of executives or something.
<gagabone>	but they are far from the only ones doing this kind of thing.
<_w_>	then chances are they are
<_w_>	most companies sell to other companies
<rumpledelf>	_w_: i'm getting this feeling you're one of those people who operates in the real world
<generalvagueness>	cloud computing has a lot of potential, but it seems like people are more focused on cloud storage
<nitrxgen_>	hax
<_w_>	generalvagueness: cloud storage is much easier to verify
<nitrxgen_>	i've been looking for a factorial script that implemented the gamma function
<_w_>	(and thus trust)
<generalvagueness>	which is already kind of a solved issue-- ahah
<nitrxgen_>	without iteration and without recursion
<rumpledelf>	i'm working on a site that is for the marketing department and totally pitched at vips and the content is a pretty serious buzzwordfest
<_w_>	i'm lucky enough to work for a company that sells mostly to government and big established companies - we get to focus on quality a lot more than some company that is selling to the hype tech crowd, or worse, the public
<inphase>	nitrxgen_: i think that would simply amount to unrolling the iteration for an approximation function.
<generalvagueness>	the really sly thing is that there are certain buzzwords that do represent pretty important concepts, and the layman can't tell them apart from the ones that exist because a marketing department had some free time
<_w_>	no layman ever cared about slas
<generalvagueness>	slas?
<_w_>	just another buzzword :)
<rumpledelf>	service level agreements
<nitrxgen_>	inphase, i stumbled across my php implementation of it to allow me to produce a scientific notation approximation
<nitrxgen_>	the integer and mantissa
<rumpledelf>	_w_: i work for a large company that straddles government and private. i'm currently trying to leave, the red tape annoys me
<nitrxgen_>	someone asked me how to calculate 4!!!! (4 factorials)
<_w_>	rumpledelf: it can get annoying, but it beats cowboy coding
<nitrxgen_>	which is just gonna be a massive bitch to work out number by number
<rumpledelf>	_w_: i just need a change i think. i've spent the majority of my career in governmentish kind of places
<inphase>	nitrxgen_: that is going to be extremely large.
<nitrxgen_>	inphase, yes
<nitrxgen_>	what i recall is stirling's approximation
<nitrxgen_>	that should yield some results
<_w_>	wa to the rescue; http://www.wolframalpha.com/input/?i=%28%28%284!%29!%29!%29!
<magnus_rm>	nitrxgen_, you can make an approximation if you like
<magnus_rm>	but why is this huge number of interest?
<nitrxgen_>	someone said it would help them get extra credit on their work in school
<nitrxgen_>	i have no interest, but i'm trying to remember where the script was i found for stirlings approx
<nitrxgen_>	i think it would probably help him
<inphase>	nitrxgen_: are you sure the assignment wasn't to use the double-factorial function twice, instead?
<nitrxgen_>	i remember it being a rather long script in javascript for use on a page
<inphase>	nitrxgen_: because that would be much more reasonable.
<nitrxgen_>	i dont know
<nitrxgen_>	" i'm taking a math class and the teacher stated, if we can figure out what factorial 4!!!! is for extra credit. i'm not quiet sure exactly what steps that need to be done in order to get the answer. "
<nitrxgen_>	i suppose its open to interpretation
<magnus_rm>	i remember that 69! is the biggest factorial you can make on a calculator limited to results up to 10¹⁰⁰
<nitrxgen_>	magnus_rm, i have this on my site: http://www.nitrxgen.net/factorialdb/
<nitrxgen_>	so i get people ask me questions sometimes
<magnus_rm>	is that a db or does it calculate?
<nitrxgen_>	both
<magnus_rm>	oh ok
<magnus_rm>	fun
<inphase>	nitrxgen_: (4!!)!! is simple enough that you could compute it on paper.
<inphase>	(the double factorial version.)
<nitrxgen_>	inphase, feel free :p i've not looked into that
<inphase>	i already have.  :)
<nitrxgen_>	actually no, lanczos approximation sounds more familiar
<millerti>	interesting.  the glibc round function will round 10.5 to 11, while the x86 sse instructions that convert from floats to ints will round 10.5 down to 10.  (but it does round, because 10.51 will round to 11.)
<bustylolichan>	anyone here have any experience with sending audio data via c?
<millerti>	it's kinda fun trying to make clever use of sse intrinsics.  it's like assembly programming, except it's in c, and the instructions are all wacky.
<millerti>	bustylolichan: you mean like sending data to /dev/audio?
<bustylolichan>	i don't know... i'm about to start writing a ts3 plugin... i think it's going to dump the data over a socket lol
<millerti>	i don't know what ts3 is.
<bustylolichan>	team speak 3... one of those fancy online communication programs
<millerti>	what's odd, though, is that the fact that sse instructions round down in that case doesn't appear to be documented anywhere.
<generalvagueness>	that's so weird they would make it do that in the first place
<darkelement>	generalvagueness: test
<generalvagueness>	darkelement, test
<generalvagueness>	i guess it has something to do with audio or video or 3d rendering or something? i'm pretty sure sse came out after 3dnow and mmx and it incorporated a lot of that into it, whether verbatim or the same end results or the same general functionality, and i think it's still most used for media
<ori_b>	bustylolichan: "sending audio data" in what sense?
<ori_b>	from where to where?
<ori_b>	how?
<bustylolichan>	a bu connect to a server
<bustylolichan>	"audio data" is set to the server which then writes it to a socket
<bustylolichan>	or several client sockets
<ori_b>	ok, so basically pick a codec and send it.
<ori_b>	do you need some sort of synchronization?
<eze>	thinking about ir, i realise that it trivialy must be less than 1
<pyon>	eze: (1) compute the total differential of the expression you're evaluating, say, "y = f(x1,x2...xn)". (2) substitute "dx1,dx2...dxn" with your estimates of the absolute errors for each independent variable.
<pyon>	that should give you an estimate of "dy = f_1(x1...xn)*dx1 + f_2(x1...xn)*dx2 + ... + f_n(x1...xn)*dxn", where f_i is the partial derivative of f w.r.t. xi.
<ori_b>	eze: hm? not sure exactly what you're asking.
<eze>	the expression is simple, and i think my question was really silly (i realise now...)
<ori_b>	eze: you mean, eg, the difference between the true value of 'a/b', where a and b are guaranteed to be integers?
<ori_b>	no, it's not guaranteed to be < 1
<eze>	ori_b: yeah, that is the question
<eze>	why wouldn't it be < 1?
<eze>	i mean, the integer division is exact, and then you have decimals
<ori_b>	you get 53 bits of significand in a double.
<ori_b>	so converting to a double will lose informatino
<pokeymantrainer>	how do i print a size_t variable with printf? i have this line printf("%zu bytes read\n", fread(rom_buffer, 1, fsize, romfile)); and i get 'zu bytes read' as the output.
<pokeymantrainer>	i'm compiling with gcc -std=c11.
<lf94>	ams, you there?
<inphase>	pokeymantrainer: works for me.  what platform?
<lf94>	or maybe i'll have some luck
<lf94>	anyone know how a sequencer is supposed to work?...
<lf94>	(in terms of concurrency)
<lf94>	it only has one atomic operation, ticket(), but how does the system know when to wait
<pokeymantrainer>	weird. changed it to c99 and it worked.
<lf94>	like i'm going to have a seq_ticket() function, but should i have a seq_wait() function too?
<_blizzy_>	time to make a shitty favicon.
<lf94>	purposely make it shitty
<inphase>	pokeymantrainer: both c11 and c99 work for me under 4.9.1
<darkelement>	so guys i want to make a bot to learn from question answers on irc chat, but it's not able to get the majority of messages that do not involve the responder responding in one line(ie: "<responder>asker: answer."). any ideas how i can better find question responses?
<darkelement>	question-responses
<millerti>	aha!  the x86 sse round to nearest mode uses the banker's algorithm, while the glibc round function apparently doesn't.
<magnus_rm>	darkelement, you could make a simple algorithm that puts the fragements together, with the risk of errors of course
<darkelement>	magnus_rm: like those that are within a time frame of each other? this warrants completely different, incorrect responses with that method however. what doyou mean?
<darkelement>	i can't think of an efficient method
<magnus_rm>	darkelement, something like that, and then some checks that discards things which are too unsure
<darkelement>	"too unsure"?
<darkelement>	how would i check if it was unrelated?
<darkelement>	that would make things a lot easier, and i could handle multiple conversations going on at once if it works
<magnus_rm>	yes, like an ocr program, it can read forms that are filled in by people, but sometimes it cannot reliably interpret the form, then it gives it to manual handling
<darkelement>	but i would have to manually do a lot
<magnus_rm>	no, i do not mean you should do anything manually, it was just an analogy
<darkelement>	alright
<magnus_rm>	instead of giving it to manual handling, you simply discard
<magnus_rm>	so only use that info that you can trust to a certain degree
<darkelement>	yea but how do i know what to discard
<magnus_rm>	you will find some good methods when you start to program it
<millerti>	ah. this is interesting:  http://www.gnu.org/software/libc/manual/html_node/rounding-functions.html
<darkelement>	i've been making it with the method i mentioned, however i can't think of any way for it to work now that i've gotten here
<magnus_rm>	darkelement, but understand that this whole project is difficult, it is a cool idea, and by all means give it a good try, but be prepared that there will be a few very difficult parts in it
<darkelement>	yea
<darkelement>	idk, i want to plan this bit out before hand, know that i can actually do it
<tejasmanohar>	is it common for separate backends per county that the app is launched in?
<magnus_rm>	darkelement, i usually start and try and change my approach as i go
<darkelement>	hmm
<darkelement>	magnus_rm, good point
<tejasmanohar>	we've been working on a us app and it deals w/ lottery purchases and rn we're scraping powerball and exporting csvs and using a printing app to print the tickets and renting out retail centers to draw the lottery tickets since in american you cant do all electronic lottery
<darkelement>	magnus_rm, idk
<tejasmanohar>	we're going to do a uk launch first w/ an api over there that allows you to purchase/sell/etc lottery tickets called lottorisq since it's legal in most
<tejasmanohar>	countries, just not us.
<tejasmanohar>	this won't change all of our backend, like users settings and a few generic things will stay the same... but the whole ticket purchasing and payments will be handled by lottorisq
<darkelement>	why is it illegal in us?
<darkelement>	scared of hackers?
<_blizzy_>	ok, i added a shitty favicon. https://jackdawapp.herokuapp.com/blizzard/1zsk13usiboz-w
<dreams>	darkelement: what's the point of this?
<darkelement>	dreams, make a chat bot that learns
<darkelement>	like alice but it doesnt need manual input
<tejasmanohar>	darkelement: online gambling laws are super shaky in us
<tejasmanohar>	federal + state laws
<darkelement>	tejasmanohar, ah, alright
<inphase>	darkelement: i would definitely start with only the most reliable input.  you will get loads of false positives.
<dreams>	darkelement: i'd start with something simpler. an idea you know it works then move up to a more complex one.
<tejasmanohar>	should we maintain two separate apps / backends / servers- one for us, one for uk? or add some country code checks and then separate functionality in 1 backend? the uk one will be much leaner since lots of it is handled by external api- lottorisq
<darkelement>	i was working on it getting inputs from when someone would go:
<dreams>	or improve
<darkelement>	"hey, question?"
<darkelement>	and then another guy goes
<darkelement>	darkelement, answer
<_blizzy_>	darkelement, making an ai as a first project sounds kind of
<_blizzy_>	hard.
<darkelement>	then it takes htose
<darkelement>	its not my first project, just first irc bot. and it's not been so hard so far
<_blizzy_>	oh.
<tejasmanohar>	i'm leaning towards two separate backends and even clients since some of the features may differ by country due to regulations + features of lottorisq.
<tejasmanohar>	but wanna hear what others think / alternatives and weigh them ;)
<inphase>	tejasmanohar: given the scale of the money you are talking about, and the complexity of regulation, i would certainly run these systems on separate servers.
<inphase>	tejasmanohar: although clearly you should reuse most of the code.
<tejasmanohar>	inphase: yeah
<tejasmanohar>	inphase: because lottorisq handles a lot of the things that we have to do manually in america, maybe it should be a separately maintained backend
<darkelement>	i guess i'll stick to this until it works for sure, then work on getting input and multi line questions and responses after
<tejasmanohar>	different features too
<tejasmanohar>	inphase: do you know how mobile marketplacse deal w/ this?
<tejasmanohar>	like apple app store for ios or google play / android
<tejasmanohar>	can i have different app clients per country?
<inphase>	tejasmanohar: it sounds to me like there would be a lot of reuse.  so i would simply make it a configurable backend and try to keep a common codebase.
<inphase>	tejasmanohar: perhaps even use modules.
<tejasmanohar>	oh, i see. not two separate backend apps/codebases?
<inphase>	tejasmanohar: two separate ones sounds smart when you're starting out and thinking about the differences.  but eventually you'll end up with one decaying because nobody bothered to copy and paste all the fixes back and forth between the common parts.
<tejasmanohar>	ah hm
<tejasmanohar>	inphase: for example, we have a feature where users can set x tickets to be purchased every y. and while we deal w/ this with timers in us; in uk, its just one api call to lottorisq
<tejasmanohar>	inphase: we also have to score the tickets in america comparing them to the key we scrape from powerball... but in uk, lottorisq scores
<tejasmanohar>	except general things like user accounts, not much else carries over b/w each backend? inphase
<inphase>	tejasmanohar: yes.  what you actually have is a set of modules with a common interface.  one module interfaces with lottorisq, and another module does more internally.
<tejasmanohar>	we don't even need to model the tickets w/ ticket #s for uk, instead we just have to keep an id to look up on lottorsiq
<tejasmanohar>	inphase: hm, modules... so are you thinking an soa model?
<millerti>	man.  i've been doing rounding wrong all these years.
<inphase>	tejasmanohar: not necessarily.  just loadable modules, one of which farms out the action, and another which manages more of it on the same server.
<tejasmanohar>	inphase: hm, so would you explain a bit more about how that'd work? you get an api request, you check user's country and then you load one module's function respectively?
<inphase>	millerti: don't learn your rounding from gnu...
<millerti>	inphase:  i'm just saying that i've been using the wrong functions.
<crocket>	which language between scala and clojure should i learn to use on android?
<tejasmanohar>	crocket: #androiddev might be a better choice for that question
<tejasmanohar>	*place
<tejasmanohar>	crocket: #android-dev i mean...
<tejasmanohar>	crocket: that said, i think scala is better supported for android rn
<millerti>	haskell ftw
<tejasmanohar>	inphase: was that correct assumption of mine?
<tejasmanohar>	millerti: never seen haskell on android natively, cross-compiling?
<inphase>	tejasmanohar: whether or not that is a good choice depends heavily on the rest of your architecture.
<crocket>	tejasmanohar, i guess...
<crocket>	but, i prefer clojure as a language.
<millerti>	tejasmanohar:  i was joking.
<tejasmanohar>	inphase: our architecture is crap rn so we're about to go through a big refactor either way
<tejasmanohar>	oh lol millerti
<millerti>	crocket:  i prefer closure as an end to emotional challenges.
<tejasmanohar>	well, i guess it's possible http://ajhc.metasepi.org/
<tejasmanohar>	inphase: and how would it work to have each app on a different server?
<tejasmanohar>	inphase: main server sends http requests to interact w/ the other two servers- one for us, one for uk?
<millerti>	what do the brackets mean in clojure?
<inphase>	tejasmanohar: well then you simply have users connect to the server corresponding to their country, so you show them all the correct stuff.  from a marketing perspective this is far more sensible anyway.  and then you simply have your server software running on that server with only the relevant modules for that country loaded.
<tejasmanohar>	inphase: where from / how would the "modules" load?
<inphase>	tejasmanohar: presumably from one of those hard disk things they keep in modern computers.
<tejasmanohar>	lol
<tejasmanohar>	inphase: but how do you have two different servers and 1 backend thats what im trying to get at?
<inphase>	tejasmanohar: one codebase, two servers running it with different configurations.  i don't see what's complicated?
<tejasmanohar>	inphase: yeah nvm that's not complicated
<tejasmanohar>	inphase: and which modules are being used it just controlled by an environment variable or something of that nature?
<inphase>	config files are more conventional.
<tejasmanohar>	inphase: yeah or .env files cool gotcha
<alphaatom>	is 128gb storage good enough for a unity dev machine? or should i get more?
<xmppwocky>	alphaatom: uh, including the os?
<alphaatom>	its osx but no worries i've decided on an external
<xmppwocky>	i have 256gb and am barely scraping by, although i have a lot of steam games installed
<alphaatom>	yeah there won't be any games, its a dev machine only
<gagabone>	why, when i delete a dir in windows, does it have to "discover" all the files inside (which can be literally millions in all subdirs) before it can delete it?
<gagabone>	why not just... delete it?
<crocket>	what
<crocket>	is phonegap the best way to write an ios/android app?
<_w_>	no - making a webapp is
<mike802>	you mean html5/javascript/css3?
<myrl-chan>	gagabone: not necessarily windows specifci
<_blizzy_>	phonegap
<_blizzy_>	sounds cool.
<encapsulation>	https://ideone.com/9zl8sb how would i make thios func work?
<magejames>	ayye i just finished an app in phonegap
<encapsulation>	pi_dht_read the &dhhumi those are vars in my main that its supposed to take the address of
<magejames>	a++, i love it
<encapsulation>	but i need this func to be able to call that func on those global vars
<magejames>	easy to deploy to everything, and you can hook into a ton of core phone functions.
<crocket>	is it possible to make 500$ per month or more with a mobile/web app?
<crocket>	it could be a small business.
<magejames>	i mean...
<magejames>	what app?
<magejames>	you making apps
<magejames>	or*
<aewffwea>	crocket: yes
<wagonboi>	whats your app, magejames ?
<crocket>	aewffwea, how?
<crocket>	is it plausible?
<wagonboi>	when using phonegap, can the app be run in the android dev emulator?
<aewffwea>	crocket: getting a lot of people to use your app
<disconsented>	or make it require a subscription
<magejames>	it was an app for a local cpa firm wagonboi. i had to use file uploads, webcam access, location access, and was able to do it all easily on all platforms.
<magejames>	and was able to hook into their website to retrieve info about the clients to let them log in and access their returns.
<gagabone>	"phonegap is a free and open source framework that allows you to create mobile apps using standardized web apis for the platforms you care about. "
<gagabone>	why do they always use this kind of wording?
<gagabone>	"you care about"
<magejames>	instead of?
<magejames>	hahahah
<magejames>	more like "you are forced to"
<dexx1_>	#math
<aewffwea>	gagabone: because they want to say they support all platforms, but that's not true
<gagabone>	appealing to a bunch of douchebag hipster fuckbag egocentric assholes?
<wei2912>	lol
<wei2912>	welcome to the era of bullshit
<disconsented>	aka marketing
<magejames>	aye
<magejames>	yeah
<aewffwea>	disconsented: how many ads have you clicked in the last year?
<disconsented>	probably in the single digits
<myrl-chan>	ohai wei2912.
<disconsented>	why?
<wei2912>	hi myrl-chan
<wei2912>	aewffwea: 0, adblock plus ftw
<aewffwea>	disconsented: i just want to figure out who clicks on adds...
<aewffwea>	disconsented: i'm pretty sure i've clicked on less than 5 ads on my whole life
<disconsented>	people who don't have adblock
<aewffwea>	disconsented: and i'm pretty sure i've never spent any many because of ads
<disconsented>	aewffwea: why
<disconsented>	aewffwea: you
<disconsented>	aewffwea: keep
<disconsented>	aewffwea: doing
<disconsented>	aewffwea: this
<aewffwea>	disconsented: i like lines :)
<myrl-chan>	aewffwea: i probably clicked on less than 5 ads on my whole life too... and those were all a misclick.
<aewffwea>	myrl-chan: so who actually ends up buying the things they see in ads?
<dexx1_>	i am attempting to figure out how to check whether a 3-dimensional object fits on a circular printer bed. the way i am attempting to do that is by finding the diameter of the 3-dimensional object (by finding the largest circle that will fit inside it's perimeter) then comparing it to the diameter of the printer bed. so far, i am getting incorrect values. can someone help? http://pastie.org/private/dtfqkyznerclzt5f9oto2q
<aewffwea>	myrl-chan: several of the biggest companies rely only on ads revenue
<myrl-chan>	aewffwea: normal peopel.
<myrl-chan>	people*
<aewffwea>	myrl-chan: so google is basically exploiting normal people?
<myrl-chan>	aewffwea: most likely.
<tejasmanohar>	do you use an orm/odm for a kv database like redis?
<crocket>	aewffwea, i have no idea about how to make people use my app or pay for it.
<crocket>	i have to figure out.
<aewffwea>	crocket: what apps do you use?
<crocket>	aewffwea, many apps
<aewffwea>	crocket: why do you use them?
<darkelement>	 hey guys how can i loop through a text file by index? i understandhow to do it normally, but it would be a lot easier if i could do it this way, like how you can do range(len(array))
<darkelement>	python*
<_atom_>	anyone got a link to that fight?
<madmallard>	^ seconded
<myrl-chan>	darkelement: what do you mean?
<myrl-chan>	darkelement: like, iterate on it character by character?
<farrioth>	darkelement: read your lines into a list, then iterate over indeces of the list.
<darkelement>	i actually figured it out. can change file to list using file(fp)
<darkelement>	no wait
<darkelement>	list(file) i think
<farrioth>	s/indeces/indices/
<myrl-chan>	darkelement: i don't think that's a good thing though, on the other hand, "linked lists" may not be linked lists at all.
<myrl-chan>	it could just be an array with an iterator.
<darkelement>	?
<darkelement>	i just want to go through the lines of the file by index
<darkelement>	and the way a list is organized makes this easiest
<myrl-chan>	darkelement: ignore that, i don't know implementation specifics about python.
<darkelement>	myrl-chan, ahh, lol
<myrl-chan>	hmmm, python lists seems to be analogous to lua tables.
<wei2912>	darkelement: python lists are array lists
<wei2912>	err, that was for myrl-chan
<myrl-chan>	wei2912: yeah.
<wei2912>	myrl-chan: and linked lists would probably destroy performance very horribly
<travelr>	hey folks do we have a more compact term for "in-memory data structure"
<myrl-chan>	wei2912: i've had too much haskell. lol.
<travelr>	i'm trying to have an interface for a log that's in memory
<dexx1_>	how can i find the proper scaling factor for a circle? for example, if circle 1 has a diameter of 200 and circle 2 has a diameter of 343, how can i scale down circle 2 proportionally so that it fits within circle 1 with diameter 200?
<myrl-chan>	wei2912: i think tables would have been a better term.
<wei2912>	dexx1_: scaling down circle 2 would give you circle 1? :p
<travelr>	peeps do we have a more compact term for "in-memory data structure"?
<travelr>	i was thinking "transient" but that's innacurate
<farrioth>	travelr: didn't you just ask that?
<travelr>	farrioth: do we have a more compact term for "in-memory data structure"?
<dexx1_>	wei2912: how do i find the proper scaling factor was my question
<dexx1_>	wei2912: i am doing something like this right now, but it's clearly wrong: http://pastie.org/private/dtfqkyznerclzt5f9oto2q
<wei2912>	dexx1_ 200/343 gives you the scaling factor
<farrioth>	dexx1_: 200/343?
<_x_c_v_b_>	in redis is there a way to have a value be tied to client
<_x_c_v_b_>	where when the client leaves the value is deleted
<travelr>	runtime log -> does it sound like "in-memory log"?
<dexx1_>	farrioth: hmm
<dexx1_>	farrioth: wei2912 that works, can you check if my logic is correct: http://pastie.org/private/orpzlpcmhawd15crppks9a
<wei2912>	dexx1_: i don't know what printer_d, printer_z, design_d, design_z, d_delta and z_delta mean
<wei2912>	as well as d_scale, z_scale
<wei2912>	can you explain what these variables are there for?
<gagabone>	aewffwea: i always used to wonder who would click ads, and how they could possibly get any traffic from the ads. then i bought ad slots in many different context and realized that... nobody does click.
<gagabone>	it's all a big scam.
<gagabone>	ads only work in extremely big numbers to very stupid demographics and only as a way to drum in your logo, basically.
<gagabone>	not as a way to "cold-call" new, non-dumb users.
<aewffwea>	i'm pretty sure someone or something clicks ads though
<aewffwea>	you can find some info on that
<eric_lagergren>	facebook ads work well.
<gagabone>	"you can find some info on that."
<gagabone>	?
<gagabone>	bots click ads.
<wei2912>	eric_lagergren: they do? never seen them
<dexx1_>	wei2912: sure. printer_d = diameter of circular printer bed, printer_z = vertical z-axis size of circular printer bed, design_d = diameter of the design file, design_z = vertical z-axis size of design file, d_delta = the difference between the diameter of the printer and design file, z_delta = the difference between the vertical z-axis of the printer and vertical z-axis of the design file, d_scale = the scaling factor for the di
<eric_lagergren>	wei2912: on mobile they "blend in" and appear like posts.. e.g., that nike post might be an ad. on desktop i don't see them because adblock, but they're one of our primary ad vectors at the agency i work for.
<wei2912>	eric_lagergren: ah, that's a good idea
<wei2912>	not intrusive
<eric_lagergren>	mhmmm. it's pretty cool. better than twitter's ads, where they tend to be all political
<floatingpoint>	i've captured a circular outline in an image (in white). i want to subtract it from a binary_not'd version of the image to remove it. the thing is, it isn't working. it doesn't look like the outline is going away at all... wtf? opencv
<wei2912>	dexx1_: hmm
<olben>	make clean all
<olben>	whops,,,
<lopx>	hi
<lopx>	anyone on? need some help d:
<epitamizor>	never worry, superman is here
<epitamizor>	woooooooossshhhht
<lopx>	i do need a hero atm d:
<lopx>	how can something go so well become so bad
<epitamizor>	murphys law, anything that can go wrong will go wrong
<epitamizor>	boya
<joshumax>	so somebody just said to me that `new` is rarely used in c++? is that true? i know that the use of shared_ptr and weak_ptr are a good idea when it seems logical to use them, but i've frequently seen `new` and `delete` used in c++...
<xmppwocky>	joshumax: in *modern, idiomatic* c++, yes. unique_ptr
<xmppwocky>	shared_ptr and weak_ptr should be a last resort
<xmppwocky>	as in, unique_ptr over everything else
<xmppwocky>	now, the vast majority of actual c++ is neither idomatic or modern, usually because it's older than c++11 or whateve
<joshumax>	hmm, then why are there so many applications still using raw pointers?
<joshumax>	ah
<xmppwocky>	also, a lot of really big c++ codebases have their own smart pointers or whatever
<joshumax>	i thought it was best to use unique_pointer for ownership
<crocket>	nisstyre, what ?
<nisstyre>	crocket: as in hackerne.ws
<crocket>	nisstyre, i see none.
<darkpassenger>	damn
<^cheeky>	hey.. i know this is not a question to do with programming but. if your in pain would you call 911 or go to urgent care
<^cheeky>	i heard they cost a lot the urgent care thing even if you have insurence,
<nisstyre>	crocket: that's because it's like 4chan
<nisstyre>	it changes every ten minutes
<protist_>	_slade_: ah, thanks :)
<wei2912>	^cheeky: is that a time-critical question
<crocket>	nisstyre, and?
<crocket>	where's the money?
<nisstyre>	crocket: http://www.nytimes.com/2015/05/03/magazine/want-a-steady-income-theres-an-app-for-that.html
<^cheeky>	wei2912: well after some dental work my gum is infected and i think i feel puss and it hurrts so much .. dentist assistant is an idiot .. so shoud i go to hospital or something
<wei2912>	^cheeky: well, no idea what you should do, but i suggest you make a decision asap...
<^cheeky>	i am just trying to see which way would be less on my insuarence coz i think urgent care cost hella lot
<aewffwea>	^cheeky: how much does it hurt?
<^cheeky>	a lot
<^cheeky>	i am kinda swearting
<aewffwea>	^cheeky: you should probably go to an "dental emergency care"
<^cheeky>	this work was done on monday
<^cheeky>	and its saturday and the assistant is like just come on monday :/
<^cheeky>	errr
<wei2912>	what the hell?
<^cheeky>	i tried looking for one
<^cheeky>	so i dunno who do i call or where to go :/
<_x_c_v_b_>	i figured something out
<_x_c_v_b_>	www.website.com
<_x_c_v_b_>	the www part is a subdomain
<lf94>	how do sequencers (concurrency) work? do you have a seq_ticket() and seq_wait() ?
<nisstyre>	you're asking how concurrency works?
<nisstyre>	that's a huge topic
<mike802>	do you have a language and/or project in mind?
<lf94>	nisstyre, no.
<lf94>	sequencers are a mechanism for concurrency.
<kaendfinger>	i just want to share this video of my company at a summit. we do iot stuff, and we demoed a bunch of stuff. https://youtu.be/azd2-5wcjui
<lf94>	kaendfinger, cool.
<lf94>	kaendfinger, is your company google
<kaendfinger>	nope, but google is one of our partners
<kaendfinger>	cisco, intel, netflix, and a lot of others too
<lf94>	i was just skimming through it because most of it goes way over my head
<lf94>	but looks like a lot of work into it :)
<kaendfinger>	lf94: oh yes, tons
<kaendfinger>	https://github.com/iot-dsa
<lf94>	why dart though?
<kaendfinger>	lf94: dart is extremely simple to work with, and it's fast, really really fast
<kaendfinger>	ford, cisco, leviton, intel, verizon, netflix, schneider electric, pnc, ge, nasa, oracle, ucsf, glumac, climatec, safeway, bmw
<kaendfinger>	that's some of our partners
<kaendfinger>	lf94: dart is ver very awesome
<lf94>	and here i am stuck working with php
<kaendfinger>	lf94: forced or by choice?
<lf94>	is dart statically typed
<kaendfinger>	optionally typed
<kaendfinger>	it's very very cool
<lf94>	so types can be inferred?
<kaendfinger>	kinda sorta
<kaendfinger>	lf94: typing stuff makes no difference on runtime behavior
<kaendfinger>	https://www.dartlang.org/
<lf94>	i use php because php pays the bills.
<kaendfinger>	i'm 15 years old and i get paid $20
<kaendfinger>	an hour
<kaendfinger>	i pay my own bills
<kaendfinger>	lol
<lf94>	well i'm 20 years old and i get paid between $30 and $70 per hour.
<kaendfinger>	dart is what got me this job
<kaendfinger>	lf94: not bad :p when i'm older i'll make a lot more
<lf94>	keep it up though, you're on your way :)
<kaendfinger>	i'm actually already there
<kaendfinger>	pretty much
<lf94>	15 years old...i wish i was as smart with programming at that age
<kaendfinger>	https://github.com/kaendfinger
<kaendfinger>	i've been invited to google twice already
<kaendfinger>	anyways, you should really look into iot
<kaendfinger>	it's uber-fun
<lf94>	kaendfinger, you are clearly an exception to the many other 15 year olds
<kaendfinger>	lol
<kaendfinger>	lf94: if you count all the cool stuff my company buys for me, i probably make more than you
<kaendfinger>	tbh
<kaendfinger>	but, you know, it's equipment
<kaendfinger>	but i get to keep it
<lf94>	why the boasting?
<lf94>	also, when were you hired?
<kaendfinger>	oh i didn't intend it like that
<kaendfinger>	in june 2014
<wei2912>	humblebrag
<kaendfinger>	i meant like, because i work for iot, i get to have a lot of physical stuff
<kaendfinger>	that i get to keep
<kaendfinger>	which is why working in iot is fun
<lf94>	whoops
<kaendfinger>	lol
<lf94>	ctrl+w
<lf94>	working with iot you mean?
<kaendfinger>	internet of things
<kaendfinger>	like, smart devices
<lf94>	you said working for
<lf94>	i'm trying to figure out the company you are working for :)
<kaendfinger>	oops, i meant working with
<lf94>	they sound very liberal
<kaendfinger>	http://www.dglogik.com/
<lf94>	how did they find you?
<lf94>	how did you get started with dart?
<wei2912>	why dart?
<protist_>	would be funny if this were a recruiting tactic
<kaendfinger>	google+, hated java
<kaendfinger>	hmm
<protist_>	"i have to prove to myself that i can beat the 15 year old!"
<protist_>	lol
<lf94>	protist_, hahaha
<kaendfinger>	xd lol nah
<kaendfinger>	that's a stupid strategy
<lf94>	this guy is clearly some exceptional 15 year old
<wei2912>	are you smarter than a xth grade or something
<lf94>	when i was 15 years old i was hacking ocarina of time
<hotcoder>	what
<kaendfinger>	i got started with minecraft
<kaendfinger>	lol
<kaendfinger>	let me show you why iot is awesome
<lf94>	this guy is building a product with a company
<kaendfinger>	http://create.dglux.com/dev/viewer.html?proj=dglux%20showcase_da82
<protist_>	when i was 15 i was a junior in high school...was when i was 14 also...took an extra year so i could drive when i started university
<lf94>	are you doing iot within minecraft?!
<kaendfinger>	dglux5 and dsa are my 2 specialties
<kaendfinger>	lf94: actually yes :p
<kaendfinger>	only on the side
<kaendfinger>	just explore this for a bit
<kaendfinger>	and tell me what ya think xd
<protist_>	i don't like the idea of all my stuff being connected
<kaendfinger>	why not protist_?
<protist_>	because then they all need to be upgraded together
<lf94>	kaendfinger, how did you get started with dart
<kaendfinger>	we are solving this now actually
<lf94>	kaendfinger, what was your first programming language
<kaendfinger>	php
<kaendfinger>	then i moved to java
<wei2912>	i feel a need to counterbalance the spectrum
<protist_>	kaendfinger: good...i'm not buying it until they have a good solution :p
<lf94>	dglux5 is such a terrible name
<kaendfinger>	protist_: basically, the broker (which is what all devices connect to) posts an 'update' message and then yeah
<lf94>	i feel like i'm buying a car in sims
<kaendfinger>	lf94: it means: "dglogik user experience"
<protist_>	kaendfinger: well i mean also hardware
<kaendfinger>	oh that. yes we are solving that too :p
<protist_>	kaendfinger: gotta have some serious reverse compatibility guarantees
<kaendfinger>	we are partnered with tons of companies
<kaendfinger>	yep
<kaendfinger>	what do you think of that showcase?
<protist_>	kaendfinger: but it is in the best interest of the company to retires products and force upgrades
<protist_>	kaendfinger: so it pits the user experience against profitability, kinda
<kaendfinger>	protist_: we are basically taking the middleground on it.
<ori_b>	hm.. so this is interesting.
<protist_>	retire*
<ori_b>	any thoughts on how nfa => dfa conversion can be done while not screwing up capture groups?
<lf94>	kaendfinger, you still haven't answered my "how did you get into dart" question
<lf94>	did you get into it because you heard it was by google?
<lf94>	maybe i should resort to a life purely doing go and dart applications.
<kaendfinger>	lf94: yes, and i also wanted something that didn't feel like i was spending more time compiling than actually writing code
<lf94>	so you went from java to dart
<kaendfinger>	java -> groovy -> dart
<lf94>	when did you start programming
<wei2912>	ori_b: any nfa can be converted to a dfa. i'm not sure what you're asking about?
<kaendfinger>	in 2011
<pyon>	lf94: "because you heard it was by google?" --> let's not assume the worst. it could be "because it was designed by someone as clever as gilad bracha".
<kaendfinger>	pyon: that too xd
<ori_b>	wei2912: yes, but that's for a recognizer.
<lf94>	2011, hired in 2014
<kaendfinger>	gilad is amazing
<ori_b>	regexes do more than just recognizing
<lf94>	that is somewhat amazing.
<kaendfinger>	gilad is a frakin genius
<pyon>	kaendfinger: he's certainly smart, but he tends to have all the wrong opinions, though. :-|
<kaendfinger>	maybe in your eyes
<ori_b>	regexes capture submatches (or at least support capturing them)
<kaendfinger>	https://github.com/directmyfile
<kaendfinger>	https://github.com/directmyfile/dep-destructuring/issues/6#issuecomment-87780023
<nottapesahc>	any socket gurus in the house? looking for some guidance on why my p2p connection isnt reading in like it should be
<kaendfinger>	there is also this
<kaendfinger>	http://www.androidpolice.com/2015/05/01/google-is-working-on-a-high-performance-java-free-app-framework-for-android-based-on-dart/
<lf94>	kaendfinger, are you done high school?
<ori_b>	wei2912: so, for example: '([a-z0-9])*|a([a-z0-9]*)'
<kaendfinger>	lf94: not yet
<ori_b>	or, more of a challenge:
<ori_b>	wei2912: so, for example: '([a-z0-9])*|([a-z0-9]*)a'
<ori_b>	wei2912: other than 'a' as a suffix, both branches *recognize* the same language
<ori_b>	wei2912: but the capture groups are different; the left side of the '|' will capture only the last character of the string
<ori_b>	while the right hand side will capture everything up to the 'a'
<hotcoder>	how is everybody feeling today?
<ori_b>	wei2912: does that make sense?
<ori_b>	(sorry if i'm not the clearest; i am a tad buzzed.)
<lf94>	i take it back.
<lf94>	there's no coding here!
<lf94>	it's like 4000 bug fixes
<lf94>	and fixing typos
<mike802>	learning a code base sucks
<lf94>	myrl-chan, my gameboy menu works b)
<myrl-chan>	nice.
<nottapesahc>	anyone here know about android development?
<protist_>	nottapesahc: i made a tiny app once...barely know anything, though
<nottapesahc>	what about working with socket connections?
<wei2912>	ori_b: i get what you sort of mean
<myrl-chan>	wei2912: ayyy
<wei2912>	myrl-chan: bxxx
<kaendfinger>	lf94: wut xd
<myrl-chan>	wei2912: :3
<lf94>	kaendfinger, how'd you get the job?
<kaendfinger>	lf94: they found me, really loved my work, took a single interview that was like 1 hour (at like 4 am) and bam, send the papers, and i
<kaendfinger>	was hired
<aewffwea>	kaendfinger: where do you work?
<kaendfinger>	http://www.dglogik.com/
<rindolf>	hi all. how are you?
<aewffwea>	kaendfinger: which product?
<wei2912>	hi rindolf
<aewffwea>	rindolf: we are well, and you?
<lf94>	aewffwea, dglux5
<kaendfinger>	aewffwea: i work on dglux5 and dsa
<rindolf>	aewffwea: i just woke up.
<kaendfinger>	http://iot-dsa.org/
<aewffwea>	kaendfinger: how old are you?
<kaendfinger>	15
<aewffwea>	and you work already? that's insane
<kaendfinger>	yep, sure is xd
<aewffwea>	kaendfinger: insane as in, go and live your life... don't worry about work until you are at least 21
<kaendfinger>	my life isn't work, but my life is tech
<kaendfinger>	i live and breath technology
<kaendfinger>	lol
<aewffwea>	kaendfinger: seriously, find something better to do with your life
<kaendfinger>	https://github.com/directmyfile
<kaendfinger>	i write more than just stuff for work xd
<aewffwea>	kaendfinger: get a girlfriend
<kaendfinger>	i've got one xd
<aewffwea>	i love programming... but i think that it's also wonderfull to do a lot of other stuff too... don'
<aewffwea>	don't focus on just "tech"
<aewffwea>	kaendfinger: get a second girlfriend... and then try to convince them into a threesome
<kaendfinger>	xd
<rindolf>	aewffwea: heh, heh.
<aewffwea>	rindolf: now you are fully woken up...
<lf94>	sounds like rindolf has done exactly that.
<rindolf>	lf94: i've done exactly what?
<aewffwea>	rindolf: a onesome....
<dandare>	after spending some hours to resolve a problem you think you did a big job but then when you look there are just some few lines of code
<pyon>	dandare: the less lines of code, the better, don't you think?
<dandare>	yeah thats the good thing about it
<dandare>	its just funny :p
<rindolf>	dandare: often an important fix is short.
<dandare>	i learn already comments are very important in that sense. otherwise when you return someday is like 'wtf is going on here'
<aewffwea>	<pyon> dandare: the less lines of code, the better, don't you think? --> i disagree
<pyon>	aewffwea: nice to know that you're paid by the line of code.
<dandare>	how come? the less the better, thats for sure.. just not forget comments
<aewffwea>	dandare: sadly most people think that way...
<pyon>	aewffwea: of course, one shouldn't sacrifice clarity for brevity.
<dandare>	being paid by number of lines sounds like a torture for me :/
<aewffwea>	pyon: i'm not talking about that....
<pyon>	aewffwea: but, if it doesn't hurt clarity, brevity is better.
<dandare>	clarity?? compiler knows all about it :/
<pyon>	dandare: yes, but the next maintainer (including possibly your future self) won't necessarily know everything about the code.
<aewffwea>	dandare & pyon: for me the most important thing is to have a good model... most programmers i know try to minimize the code, so they end up making assumptions over the problem, by over-simplifying... and then when the problem changes a little, they need to throw away half their code because it doesn't work without that assumption...
<dandare>	pyon, ok i understand
<aewffwea>	dandare & pyon: i think that the most important thing is a "good model" and not "assume things that you actually can't assume" so don't simplify the problem when you aren't sure you can do it...
<dandare>	thats true
<aewffwea>	which end up being usually more lines than what people usually do
<dandare>	it must be expansible
<pyon>	dunno, i'm not so gung-ho about extensibility. it's certainly good, but trying it often requires putting way too much effort on anticipating things that, realistically, you can't accurately anticipate.
<aewffwea>	dandare: it's not about expansible... your program is a model of reality in most cases... if your model is too simple, reality will work one way, and your program in another way... that's usually a "bug"
<pyon>	making predictable things extensible is good.
<pyon>	trying to anticipate the unknowable is just a waste of time.
<dandare>	yeah in most cases
<dandare>	a model must the most objective, no more no less
<aewffwea>	pyon: that's why i like oo... if used properly, it's a methodology that will let you create a good program, anticipaiting the "unanticipable" as you call it... without requiring too much effort....
<dandare>	oversimplify or the contrary have a very abstract sense i guess
<aewffwea>	dandare: that's great... now you just need to apply that theory properly :)
<dandare>	lol yeah :p
<pyon>	aewffwea: it doesn't matter how well you can anticipate scenarios if you can't correctly implement them anyway. better to work with hard data than with conjectures that merely reflect how wild your imagination can run.
<pyon>	aewffwea: plus, programming paradigms and methodologies are quite different things. :-|
<dandare>	or, for how long one can keep coding idiot proof code? the entire day? the entire year or century? :p
<aewffwea>	pyon: that's the thing, i don't actually need to "anticipate" things... i just make a design that makes only the minimal assumptions that are neccesary.... or if i make an assumption, i hide it in an implementation of an object, so if that assumption is false, then i only need to update a single piece of code
<aewffwea>	pyon: the way i do oo is a methodology... but i agree that the way most people use it is a paragidm, or just garbage :p
<njcomsec>	sup poogamers
<myrl-chan>	welp.
<myrl-chan>	should i buy a xeon
<myrl-chan>	well, not like i can buy one.
<njcomsec>	a what?
<wei2912>	myrl-chan: wants to buy xenon
<myrl-chan>	njcomsec: intel xeon.
<njcomsec>	cpu?
<myrl-chan>	yes
<aidanh>	myrl-chan: why do you want one?
<wei2912>	^^
<myrl-chan>	for a desktop, i guess.
<aewffwea>	myrl-chan: bad idea
<myrl-chan>	(why xeon, would be because it has no igpu.)
<aewffwea>	there are ix models without gpus
<dandare>	myrl-chan, one can always use some external vid card really?
<aidanh>	they're not designed for consumer desktops; more for servers and the like
<myrl-chan>	aidanh: i know.
<aidanh>	what's wrong with having an integrated gpu anyway?
<aewffwea>	aidanh: i don't know now, but it used to be that an igpu made an external gpu slower
<aidanh>	aewffwea: as in, framebuffers had to go through the igpu to get to the screen?
<aewffwea>	i've no idea
<aewffwea>	i'm not sure if it applies any more anyway
<aidanh>	hmm... seems like the shittiest of igpus would be able to handle that easily, at least
<aidanh>	alright
<dandare>	server cpu you will probably need server ram server mobo etc
<myrl-chan>	or should i just buy an amd?
<dandare>	and server $$$
<dandare>	myrl-chan, for gaming ?
<aewffwea>	myrl-chan: if you have lots of money, but intel
<aewffwea>	myrl-chan: if not, probably go amd
<myrl-chan>	dandare: light gaming, probably.
<sabotender>	moo 🐮
<myrl-chan>	doto from time to time.
<dandare>	myrl-chan, so whats wrong with igpu? it will serve you for light gaming
<aewffwea>	myrl-chan: amd then
<dandare>	unless you use heavy video for other stuff
<sabotender>	hey i need a bit of help trying to track down some bugs that are causing my application to crash
<myrl-chan>	dandare: well, i was planning to make upgrades sooner or later.
<njcomsec>	i have an intelhd4000 i5, i run new games at 720p lowest settings to get 30-60 fps
<sabotender>	how can i find the stack trace of the crash point?
<sabotender>	i partially understand what i need to do. since this is a remote device, i need to ssh into it an execute the application remotely
<myrl-chan>	njcomsec: doesn't sound too nice.
<njcomsec>	it could be worse
<sabotender>	but i can't remember what to do beyond that point
<njcomsec>	at least i get 30-60fps)))
<dandare>	hi sabotender, but whats code? language? or just os faults?
<njcomsec>	when i was younger i used to max settings and play at 15fps... wat a noob i was
<myrl-chan>	njcomsec: i heard that amd's apus perform way better.
<aidanh>	sabotender: you can use a debugger such as gdb over ssh
<sabotender>	dandare: whats code? um...its c code
<sabotender>	aidanh: i dont think the debugger is going to help me at this point. i just need to know the line it crashed at
<aidanh>	sabotender: a debugger will tell you that
<sabotender>	oh yeah? it hasn't been working for me
<sabotender>	but ill try it again
<aidanh>	sabotender: what debugger do you use?
<sabotender>	since gdb doesn't work in codeblocks im forced to run gdb at the comandline
<sabotender>	but i really need to squash these bugs
<dandare>	do it the primitive way. put a print output line to stdout, reallocate that line until you discover where is crashing :p
<myrl-chan>	njcomsec: dandare: how low can the price get before you'll consider it unusable?
<njcomsec>	the price of what?
<myrl-chan>	of a whole computer.
<njcomsec>	and define unusable?
<myrl-chan>	"too shitty to use"
<dandare>	you do earnings mostly when buying than when selling used computer. you will lose lots of money if you buy the last latest top generation
<njcomsec>	if i was going to buy a new pc, id probably spend about $500
<myrl-chan>	ic.
<dandare>	i always buy 2nd or 3th generation. considering theres a 'new' generation every 6 months ...
<njcomsec>	but i could probably get a pc better than my laptop i use now, for about $300
<myrl-chan>	njcomsec: ah.
<dandare>	it will be very nice when ssd hds became accessible
<myrl-chan>	hmmm
<aidanh>	sabotender: try cgdb; it's a nicer ncurses frontend
<lf94>	gf bought an i7, intel hd 4000, beats audio, usb 3 ports, for $500
<lf94>	around 8 hour battery life
<sabotender>	i dont know how to execute applications remotely :-(
<sabotender>	and gdb is having trouble starting the application too
<aidanh>	sabotender: is it a graphical application you're trying to debug?
<hotcoder>	https://www.youtube.com/watch?v=b-cr0ewwatk
<hotcoder>	check this out you guys ^
<sabotender>	aidanh: nope terminal app
<aidanh>	sabotender: then just ssh in and run it from the terminal, like usual?
<sabotender>	it no work
<aidanh>	sabotender: and the error message is?
<wei2912>	lf94: wut
<sabotender>	error opening terminal: xterm-256colour
<sabotender>	maybe its because i am using ssh on my mac it is having difficulty
<sabotender>	...let me try linux
<aidanh>	sabotender: you probably don't have the right terminfo files for your mac terminal emulator installed on the remote machine
<dandare>	sabotender, if you dont know already check about linux 'screen' its very useful
<sabotender>	yeppers, that was exactly the problem
<dandare>	http://www.rackaid.com/blog/linux-screen-tutorial-and-how-to/
<sabotender>	it fired right up in linux
<lf94>	wei2912, yep
<dandare>	develop in a local machine is much better. do it locally when= its ready copy over the remote thing
<sabotender>	yay gdb gave me the line number and stack trace of the segfault
<sabotender>	...i hate segfaults
<hassoon_>	now i know two sites to refer to when learning webdev, w3schools and mozilla's developers network
<hassoon_>	\o/
<sabotender>	hassoon_: everytime i read your nick, i think of vidal sassoon
<hassoon_>	sabotender: haha, who the heck is that? someone else told me the same thing,
<sabotender>	hmm well he has since passed, but he has a long line of hair care products
<sabotender>	very popular
<aidanh>	sabotender: nice
<hassoon_>	oh..hair care products, interesting, will google him well.
<sabotender>	i don't use his stuff since his products are generally designed for caucasian hair. i am mixed race, so i use aussie brand. much nicer on my hair type.
<sabotender>	aidanh: oh yes, this pleases me very much
<sabotender>	as the bug was stressing me out
<hassoon_>	is that a software bug ?
<rindolf>	sabotender: there's also tmux in addition to gnu screen.
<sabotender>	rindolf: tmux? ill look into that too
<rindolf>	sabotender: thanks!
<sabotender>	lol why are you thanking me like that
<wei2912>	sabotender: meanwhile, i don't need a debugger in haskell
<vendu>	good morning :)
<hassoon_>	vendu: welcome.
<vendu>	hey hassoon_ :)
<vendu>	what's up?
<hassoon_>	now i know two sites to refer to when learning webdev, w3schools and mozilla's developers network
<hassoon_>	:>
<vendu>	:p
<vendu>	i barely recall it was my malloc i was hacking last night :)
<vendu>	was baked outta here, hehe labor day is cool :d
<sabotender>	yay! i fixed it! no more crashy crashy
<aidanh>	hassoon_: fyi, w3schools is widely regarded as a terrible resource
<aidanh>	mdn seems to be of much higher quality
<wei2912>	aidanh: no longer, i believe, but mdn is still of much higher quality
<hassoon_>	aidanh: they seem both friendly
<hassoon_>	i'm not into judging this or that
<hassoon_>	w3schools seems newbie-friendly, and that's good enough for me.
<hassoon_>	mdn is cool and rich of informations too
<aidanh>	wei2912: they've cleaned up their act since then? i'd still give it a wide berth, personally
<wei2912>	http://www.w3fools.com
<sabotender>	w3schools is a great place to get started, and its great for reference too
<hassoon_>	yeah, judging it as a terrible site seems hilariously silly
<wei2912>	it used to be one
<znoosey>	w3schools is great for your first week of webdevelopment
<hassoon_>	oh, i don't know about it's past :)
<znoosey>	after that it is useless
<hassoon_>	i just joined recently
<aidanh>	things might have changed recently, but it used to be absolutely atrocious
<wei2912>	now, it's good for beginners, but you should move on
<wei2912>	it's like codecademy
<hassoon_>	wei2912: alright, i understand
<sabotender>	znoosey: its great for people who are notoriously forgetful, like myself
<hassoon_>	eat memory food oe something :o
<sabotender>	theres no way i can remember all that usage
<hassoon_>	thought salt enhances memory
<aidanh>	sabotender: use them more; everyone forgets the things they don't use often
<farrioth>	as a non-web developer, i find w3schools useful for when i'm forced to do html or css.
<wei2912>	farrioth: heh
<hassoon_>	sabotender: with practise and coding, you'll get everything subconsciously
<wei2912>	yeh, now i can mostly remember the basic tags
<farrioth>	wei2912: you don't approve?
<hassoon_>	farrioth: you code what
<farrioth>	hassoon_: a cross-platform desktop lexicography program, some statistics stuff, some unix things, and a buch of text manipulation.
<farrioth>	s/buch/bunch/
<hassoon_>	text manipulation?
<wei2912>	farrioth: no, just laughing very slightly at "forced to do html or css"
<hassoon_>	are you the dude who asked for ms office-alternatives regardless of libreoffice before?
<farrioth>	hassoon_: text mangling, data reformatting; the kind of thing you'd use awk or perl for.
<farrioth>	hassoon_: probably.
<farrioth>	wei2912: ah :)
<farrioth>	hassoon_: have you found one?
<hassoon_>	farrioth: i see
<hassoon_>	farrioth: i use libreoffice always, it's just perfect
<hotcoder>	question
<hotcoder>	but off topic
<hotcoder>	still a question
<hassoon_>	well shoot
<hotcoder>	is it true that money makes a girl's pussy wet?
<hassoon_>	roflmao...
<wei2912>	hotcoder: no
<hassoon_>	hotcoder: here: ##chat
<wei2912>	next!
<hotcoder>	its a serious question but could had been worded better
<hotcoder>	i got banned from there
<njcomsec>	im pretty sure it is fluids in the woman's body that makes them wet
<hotcoder>	well yeah
<hassoon_>	i see the reason...
<hotcoder>	but you know what i mean
<hotcoder>	because
<hotcoder>	i just got me a 1000 dollar project
<hassoon_>	hotcoder: try ##eros
<hotcoder>	and my best friend trying to get dick now
<njcomsec>	let me guess... the next facebook?
<hassoon_>	hotcoder: a sex-related subjects channel
<hotcoder>	awesome
<znoosey>	hotcoder: :o $1000, that is like a days work!
<farrioth>	hassoon_: sadly i haven't found it perfect. do you use track changes much? apologies if i've already asked that.
<hotcoder>	znoosey, ye ikr
<hotcoder>	this bitch trying to hop on my dick for 1000
<hotcoder>	imagine me finishing the full project and getting 5000
<hassoon_>	farrioth: what you mean by track changes
<hotcoder>	should i fuck this pussy
<hotcoder>	fuck man
<hassoon_>	hotcoder: told you..bring your thing to ##eros
<farrioth>	hassoon_: edit -> changes -> record and friends.
<hotcoder>	no one there
<hotcoder>	all these fuckboys and aint nobody trying to mingle
<hotcoder>	anyway
<hotcoder>	back to my code then
<hotcoder>	fuck these hoes
<hassoon_>	farrioth: i have never used that thiny
<hassoon_>	what it is for?
<hassoon_>	farrioth: i just write my document, save and exit
<farrioth>	hassoon_: for, um... tracking changes.
<hassoon_>	and sometimes i care to read the manual and see if there is an update
<farrioth>	hassoon_: so if someone sends me a document and i make modifications to it, i use track changes so they can see the changes.
<hassoon_>	farrioth: well no clue, it just gets the job well done :)
<hotcoder>	i wish i fucked her sooner tho
<hassoon_>	farrioth: aaah, like sharing
<hotcoder>	she's so stupid
<hotcoder>	oh shit
<hotcoder>	sorry
<hotcoder>	fuckin mods ruin everything
<hassoon_>	farrioth: i should dig up deeper in libreoffice's functionalities
<farrioth>	hassoon_: i'm not sure what you mean by sharing, but sure.
<sabotender>	i'm not a prude, but could you have at least said 'banged' or 'smashed' or something?
<farrioth>	hassoon_: well, there's no point if you don't need the functionality.
<farrioth>	hassoon_: but anyhow i have to be off to make dinner.
<hassoon_>	farrioth: eat well
<hassoon_>	\o/
<farrioth>	hassoon_: cheers.
<sabotender>	zomg i fixed all the really bad segfaults
<sabotender>	all thanks to gdb, my new lover
<hassoon_>	gdb? :o
<sabotender>	you know...i used valgrind on my application, and my code itself doesn't appear to have any memory leaks, but the libraries that it uses sure do
<sabotender>	they might be false positives, i'll never know
<sabotender>	hassoon_: the debugger
<myrl-chan>	hmm
<myrl-chan>	had some thoughts.
<myrl-chan>	perhaps an amd build is not really cheaper.
<myrl-chan>	considering that you'll most likely need a better psu.
<myrl-chan>	oh, and of course, "in the long run" too.
<saturn812>	min|maxing psu is not the best idea
<myrl-chan>	but then again, nvidia + linux....
<myrl-chan>	so confused
<myrl-chan>	;'-;
<saturn812>	go with nvidia, less troubles with drivers. even tho amd improved in that sector, still not the best choice
<myrl-chan>	eh.
<aidanh>	myrl-chan: i have nvidia with linux, works well
<myrl-chan>	aidanh: nv or blob?
<aidanh>	i do use my igpu most of the time though... and bumblebee+primusrun can be a bitch
<aidanh>	myrl-chan: blob
<myrl-chan>	aidanh: ah cool.
<sabotender>	i'm trying to decide on a colour scheme for the scrollbars. since there is no mouse, the arrow keys are used to move between fields
<aidanh>	sabotender: make all colours specifiable in a config file
<sabotender>	yellow(brown) is already used. and im not a big fan of magenta
<sabotender>	aidanh: its not that configurable just yet. i am still putting the finishing touches on the ui
<saturn812>	magenta+black+ occasinal red
<aidanh>	sabotender: in my experience configurability is best done as you go
<sabotender>	i am not certain i want to give the user the ability to change the colour scheme
<aidanh>	then i'm not certain i'd want to use your application :p
<aidanh>	anyway ncurses can also use 256 colours
<sabotender>	aidanh: it is unlikely that you would, unless you owned a gcw-zero
<aidanh>	sabotender: ahh, alright
<sabotender>	hey i have a question, a hypothetical one. how much would it cost to hire programmers to write linux hardware drivers for a new portable device?
<discussedtree>	hey guys
<discussedtree>	what is the use of the "new" keyword in c#? overriding works exactly the same even if i don't use it
<sabotender>	and i mean cost per driver
<discussedtree>	for better readability? of code?
<discussedtree>	*readability of code
<znoosey>	discussedtree: https://msdn.microsoft.com/en-us/library/ms173153.aspx
<sabotender>	lol a channel full of programmers and no one knows the going price of writing hardware drivers?
<znoosey>	sabotender: we are programmers, we do it ourself if we need it
<sabotender>	bah
<znoosey>	we don't hire people, that would be cheating :p
<sabotender>	znoosey: oh i know it
<znoosey>	sabotender: and, the going price for a programmer in india is like $30 a day
<znoosey>	while here it would cost $150 an hour
<sabotender>	oh thats not too bad in india
<sabotender>	where is 'here'?
<znoosey>	norway
<aewffwea>	znoosey: i want to work for $150 an hour... where is that?
<aewffwea>	znoosey: do you want to  hire me? :)
<rumpledelf>	yeah, that does sound like nice rates
<rumpledelf>	agency rates here are higher than that but that's not what you get paid direct
<znoosey>	aewffwea: lol
<aewffwea>	at that rate i can work only 1 week each month
<aewffwea>	o_o
<hassoon_>	shouldnt life in india be so cheap equally the a programmer's relatively low salary ?
<hassoon_>	*to a *
<aewffwea>	hassoon_: life doesn't work that way
<znoosey>	hassoon_: ideally
<aewffwea>	znoosey: i'm serious... for $150 an hour i'm going to norway
<aewffwea>	znoosey: how do i get hired?
<znoosey>	aewffwea: you won't get that if you are hired somewhere
<rumpledelf>	probably start by getting norwegian citizenship
<sabotender>	its not easy for a foreigner to enter norway
<aewffwea>	znoosey: what do you mean?
<znoosey>	aww: you need to have your own business
<znoosey>	aewffwea*
<sabotender>	its very difficult. you would have to have a needed skill, and a lot of money to move to norway
<rumpledelf>	it'll be like here. the business charges $200 an hour and the staff get paid $50 an hour
<aewffwea>	sabotender: what if instead of going thorugh the norway, i go thorugh the souway?
<sabotender>	i'd suggest moving to a different scandinavian country.
<sabotender>	i'm very serious. you can't just 'move' to norway.
<aewffwea>	:(
<aewffwea>	boooohhh
<znoosey>	sabotender: of course you can!
<znoosey>	we let everyone in
<sabotender>	and if you don't like cold weather, you are out of luck
<znoosey>	:o
<znoosey>	it is like 7c here today!
<sabotender>	because that country receives a lot of snow.
<aewffwea>	sabotender: john snow?
<znoosey>	that is true
<znoosey>	we had like almost 5 days of snow this winter
<sloshy>	hi
<znoosey>	was hard, but we got through it!
<znoosey>	hello sloshy
<sloshy>	so im doing this adventure game in c++
<aewffwea>	znoosey: you don't even need a cooler for your pc... you just leave the window open
<sabotender>	znoosey: you are joking, right? tell me you are joking. it is far more difficult to move and get established in norway than, say, england.
<aewffwea>	that's an amazing place to live
<sloshy>	i wrote an adventure game engine in python before and im trying to basically redo it in c++
<feetpicspls>	i think i'll be staying with this nick foever.
<znoosey>	sabotender: no idea, i have always lived here
<sloshy>	because im required to write it in c++ for this school project
<wei2912>	feetpicspls: o_o
<feetpicspls>	wei2912: lol
<feetpicspls>	i wonder if i'll get instabanned in ##feminism for this nick
<znoosey>	sloshy: good luck!
<sabotender>	i'd rather move to iceland, myself.
<feetpicspls>	owait, no cross-channel talk. sorry.
<sloshy>	anyway the way i did it in the python version is had a room object and i initialized each room with an items list as a parameter
<sloshy>	the list of all the items in the room i mean
<sloshy>	but in c++ thats rather problematic
<sloshy>	i know i need to pass a pointer to the objects vector because you cant pass arrays as arguments in c++
<wei2912>	feetpicspls: writing a sudoku solver in haskell
<sloshy>	but i'm not sure how to do that
<feetpicspls>	wei2912: do it in regex!
<wei2912>	feetpicspls: wtf
<wei2912>	feetpicspls: please don't tell me someone succeeded at that
<feetpicspls>	i think someone did.
<wei2912>	i said, don't tell me d:
<znoosey>	wei2912: someone always wants to see the world burn
<wei2912>	those sadistic bastards
<wei2912>	now what will i do with my life?
<feetpicspls>	wei2912: she(?)'s also the same person who made a primality test...
<feetpicspls>	...in regex.
<wei2912>	wtf
<wei2912>	i have lost all hope in humanity
<znoosey>	wasn't it someone in this room that made some regex language?
<wei2912>	i bet he/she also parsed html with regex
<feetpicspls>	wei2912: http://www.reddit.com/r/programming/comments/1awnv/solving_sudoku_with_regular_expressions
<feetpicspls>	wei2912: http://www.reddit.com/r/programming/comments/1awnv/solving_sudoku_with_regular_expressions
<feetpicspls>	oops
<feetpicspls>	i'm stupid.
<lf94>	emacs 24.5 is known to run on all versions of windows from windows 98 and windows nt 4.0 through to windows 8.1.
<lf94>	.
<feetpicspls>	i forgot in 1 minute, that i already sent that message.
<feetpicspls>	<.<
<wei2912>	i knew it would be in perl regex
<wei2912>	as i quote from some guy on that thread
<wei2912>	that expression is far from regular. to make it abunduntly clear, the use of that back-reference is not regular.
<znoosey>	there is only one kind of regex!
<wei2912>	calling it a regular expression is doing a disservice to computer science.
<feetpicspls>	http://perl.abigail.be/talks/sudoku/html/example-4.html
<feetpicspls>	lol
<feetpicspls>	i totally understand that.
<wei2912>	perl regex matching is np-hard apparently
<znoosey>	yes, that is why you get some weird regexes that can take hours to finish
<znoosey>	:p
<znoosey>	i found a post once showing some of them
<sloshy>	how do you set an object's variable from outside the object?
<sloshy>	do you have to write a function to do it
<protist_>	wei2912: well perl regexes can include code within them...that makes them equivalent to the halting problem :p
<sloshy>	or is there a way to do it like object.var = "foo";
<sloshy>	(c++)
<protist_>	wei2912: "this"=~m/t(?{print"code"})his/
<znoosey>	sloshy: as long as the var is public that should be fine, but never do that
<sloshy>	i tried doing that but it didnt work
<wei2912>	protist_: wut
<protist_>	wei2912: yeah you can put code right in the middle of a regex
<wei2912>	how the heck are they regular
<protist_>	wei2912: they aren't
<protist_>	wei2912: "perl regex"
<protist_>	wei2912: ;)
<wei2912>	more like perl irregex
<protist_>	wei2912: yes
<wei2912>	or irgex
<wei2912>	alternatively, ughgex
<znoosey>	sloshy: i think your problem might be that you know nothing about c++ and is trying to use it like python, pick up a beginners book and do a bit of reading
<protist_>	wei2912: they can also have negative lookbehinds, etc
<sloshy>	you're the one who just told me something would work when it doesnt
<sloshy>	so...
<sloshy>	you might need to pick up a beginners book too
<znoosey>	sloshy: i don't need it, i don't code in c++ :)
<sloshy>	then dont try to answer questions people ask about c++
<sloshy>	:)
<feetpicspls>	i think i fucked up.
<feetpicspls>	i accidentally said "need guy" instead of "need guide"
<sloshy>	im pretty sure i can initialize a member array in the constructor by passing by reference but im not sure how to set that up
<znoosey>	sloshy: http://ideone.com/vjoz0y here is how you set it...
<znoosey>	just as i said
<znoosey>	and i don't know anything about c++
<znoosey>	so if you are planing to write a game engine and can't even figure out how to do that... read a basic manual
<znoosey>	and don't be rude to people who try to help you
<sloshy>	znoosey: that doesnt work for an array
<znoosey>	sloshy: you do realize i don't know what you are doing right?
<sloshy>	and i wasnt being rude, you started being rude by saying "you obviously dont know anything about c++"
<sloshy>	don't expect people to be nice to you when you act like a jerk
<znoosey>	sloshy: if you need help with some code, post it, and we might be able to help
<znoosey>	sloshy: heh, try asking your questions in c++ :)
<sloshy>	read a beginners book on social interaction
<znoosey>	##c++
<sloshy>	i did and they were a lot nicer than you
<znoosey>	:o
<znoosey>	good :)
<sloshy>	anyway i figured out a way to do it
<sloshy>	so you can resume consuming your own farts and revelling in own delicious aromas
<sloshy>	*your own
<znoosey>	people always gets so upset when you try to help :(
<lf94>	...
<lf94>	sloshy, you are being extremely rude.
<sloshy>	im tired and my nose is stuffed
<sloshy>	and i dont suffer autists well
<wei2912>	no, he said "your problem might be that you know nothing about c++"
<znoosey>	why does pizza places open so late on sundays? :(
<lf94>	znoosey, not here in australia.
<znoosey>	:o
<znoosey>	too bad you got scary spiders, or i'd have moved
<feetpicspls>	uguuuu
<znoosey>	they need to learn that people got a hangover on sundays and need fat food!
<feetpicspls>	so sleepy.
<rindolf>	hi all.
<znoosey>	good morning rindolf
<rindolf>	znoosey: morning.
<rindolf>	znoosey: what's up?
<sloshy>	his sense of self-importance
<znoosey>	rindolf: nothing much, trying to get asp.net 5 running properly in docker
<znoosey>	rindolf: what about you?
<rindolf>	znoosey: using mono?
<rindolf>	znoosey: i've moved to my laptop because i suspect my desktop machine is causing me headaches.
<znoosey>	rindolf: yeah
<rindolf>	znoosey: ah, good luck with that.
<sabotender>	well that was a nasty lag
<rindolf>	znoosey: is there an already-made container for that.
<znoosey>	rindolf: thank you! and yes there is, but that is boring :p
<travelr>	does anyone know if we have a standard concept for a stream which can't be paused. what you start it, it just keeps calling a "buffer handler" until it runs out.
<rindolf>	znoosey: hmmm...
<rindolf>	znoosey: you know that "may you live in interesting times." is a curse, right?
<znoosey>	rindolf: i do, i just finished reading discworld :p
<rindolf>	znoosey: heh, nice.
<anj7>	does php script return a value?
<justanotheruser>	anj7: maybe
<anj7>	because when i include the footer.php in my page. a value one is display at the bottom of the page.
<lf94>	anj7, in your case, no.
<lf94>	anj7, pastebin :)
<anj7>	i just deleted the footer from my website
<lf94>	oh.
<anj7>	lf94: i added it again have a look at bottom right.
<anj7>	http://www.creationofgod.cf
<anj7>	sorry at the bottom left.
<anj7>	there's a one over there
<lf94>	<_>
<anj7>	1*
<lf94>	i see nothing
<lf94>	just "designed by joshua whoever"
<lf94>	nikhil joshau
<lf94>	ua
<anj7>	and below that there's a gap
<lf94>	oh i see it
<lf94>	blends in well
<anj7>	yea
<anj7>	why did that come?
<o0elise0o>	we need to see the code to answer that
<lf94>	i need to see your code, anj7.
<lf94>	it is impossible to tell
<anj7>	http://pastebin.com/nzudmrk4
<lf94>	anj7, <?= ?> is your issue.
<lf94>	get rid of that = sign.
<anj7>	lf94: oh, ok
<lf94>	man this is a sad supper
<lf94>	soup broth and crackers
<lf94>	like lipton soup level broth
<anj7>	lf94: thanks its gone now :)
<lf94>	no problem :)
<o0elise0o>	im surprised that url didnt lead to an anti-god website
<anj7>	o0elise0o: why did you think so?
<bushido_>	helllo, how to get to undetstand programming from deeply
<ams>	by programming.
<znoosey>	bushido_: by trial and error
<rumpledelf>	practise!
<y0wza>	many many hours
<y0wza>	almost 23
<y0wza>	hundred
<y0wza>	thousand
<ams>	everyday for 10 years.
<o0elise0o>	bull
<bushido_>	how much programming knaolwage you need to get a goodjob
<y0wza>	lol
<rumpledelf>	very little
<ams>	bushido_: a lot.
<rumpledelf>	just get hired by a company who knows nothing
<ams>	is that a good job now?
<y0wza>	then lose ur job few months later
<o0elise0o>	that wasnt worded to indicate a good job doing programming
<rumpledelf>	eh, he said nothing about what 'good' means :)
<o0elise0o>	so the answer is none
<y0wza>	but hey u got somethin on ur resume u can goto another failing company
<rumpledelf>	or what o0elise0o said
<rumpledelf>	y0wza: exactly!
<y0wza>	lol
<rumpledelf>	local training places would say the answer is 12 weeks though
<rumpledelf>	they run a 12 week intensive course and have about a 100% hire rate at the other end
<o0elise0o>	wtf
<ams>	you won't be a good programmer after that.
<ams>	or have a good job.
<o0elise0o>	what is the programming job version of burger flipper?
<rumpledelf>	its enough to get all their graduates into junior dev jobs though
<ams>	there are 12 weeks courses for playing that guitar ..
<znoosey>	o0elise0o: web programmer!
<ams>	and that is enough to be in a shitty band.
<o0elise0o>	so google employes a lot of burger flippers?
<ams>	imho? yes.
<y0wza>	only the best ones
<o0elise0o>	i need coffee, afk
<o0elise0o>	ams::lol
<rumpledelf>	the price of that particular course puts me off. that said, i'm doing a cheaper 12 week course with them
<znoosey>	o0elise0o: the very best educated burger flippers
<ams>	google just employees infinitley many monkeys ...
<znoosey>	i'll classify myself as a monkey if google would hire me
<ams>	why would you ever want to work for google?
<znoosey>	ams: they do cool stuff
<ams>	uhm .. like?
<znoosey>	google glass
<njcomsec>	android
<njcomsec>	google search engine
<ams>	google glass is dead.
<znoosey>	ams: who cares, they still made it
<ams>	the search engine is not where you will end up.
<ams>	android is immensly boring, you might as well spend time improving fedora or something.
<njcomsec>	thats your opinion
<znoosey>	google has tons of cool projects that i guess we will never see too
<bushido_>	archlinux
<ams>	znoosey: google glass existed before google "made" it.
<bushido_>	archlinux ftw!
<ams>	it actually existed back in the 90s
<njcomsec>	ams must work for apple
<znoosey>	ams: yes, i don't really care, it was just an example
<gedamo>	https://en.wikipedia.org/wiki/eyetap
<ams>	njcomsec: i don't develop non-free software, period.
<njcomsec>	so how do you earn a living
<ams>	i write free software programs.
<bushido_>	damm
<ams>	simple as that.
<ams>	gedamo: is that the mit effort?
<njcomsec>	you take donations?
<gedamo>	ams: steve mann
<bushido_>	oh! you running open soruce sotfware . do money with .. are you working alone proejcts ams ?
<bushido_>	njcomsec: he must be
<ams>	bushido_: no, i'm not running open source software.  i run and work on free software. https://www.gnu.org/philosophy/free-sw.html
<bushido_>	oh!
<bushido_>	okay
<ams>	some projects are only me, some are several hundreds of people.
<ams>	gedamo:  yeah yeah
<njcomsec>	im gonna charge people for my software. the evil capitalist scum that i am
<ams>	why would that be evil?
<y0wza>	where u been
<y0wza>	thats all the rage now
<y0wza>	and then
<znoosey>	everything i do is so closed source i'm hardly allowed to look at it!
<y0wza>	!
<ams>	gedamo: seriously though, has google actually done anything interesting that is new? i cannot think of anything ...  they have something like 20k engineers ... and still all they do is "search engine", which is totally unexciting research, mostly solved afaik
<merijn>	znoosey: i violated at least 3 ndas by having some colleagues show me their code during my internship :p
<znoosey>	merijn: lol
<merijn>	ams: you mean besides machine learning, machine translation, self-driving cars, etc.?
<ams>	merijn: not anything google has actually come up with.
<y0wza>	its all bout
<y0wza>	advancement
<ams>	and google hasn't done much on that topic.
<ams>	hence my questoin.
<merijn>	ams: academics don't even do things they come up with themselves
<ams>	last time i checked, they do.
<merijn>	the fact that they're beating the groups that have been doing things like image recognition by several percentage points is impressive
<anj7>	people don't see talent they see certificate. :/
<y0wza>	we should just go back to the star system
<ams>	merijn: but they aren't.
<merijn>	ams: speaking as an academic you didn't check very well. there's so much derivative junk that's not remotely interesting being done :)
<reynir>	lol twitter says reyn.ir is an invalid url
<y0wza>	get a gold star sticker on a piece of printer paper after u get ur masters
<merijn>	ams: they were last time i was talking to our machine learning group (like 2-3 months ago)
<ams>	merijn: they you don't keep tabs on your own research field.
<merijn>	ams: i do, but the h-index "must publish for anything to happen" leads to a flood of poor quality, low content papers
<ams>	and speaking of machine learning, mmeh.. you might as well speaking of "programming".
<merijn>	the fact that not achieving project goals leads to funding withdrawal leads to unambitious project goals for international project
<ams>	merijn: and? why are you conflating issues, diluting the argument with non-essential crap?
<ams>	who cares about low quality papers, that is not where the interesting stuff happens.
<manicpanic>	lol @ all those indian guys who says "i love programming in html"
<ams>	merijn: change univ then.
<ams>	11:45 /ignore merijn
<ams>	no time for this.
<y0wza>	only 1145 not even lunch yet dam
<reynir>	manicpanic: hey, maybe they keep their ast in html
<manicpanic>	reynir: haha, maybe
<protist_>	merijn: what do you really need funding for, exactly?
<protist_>	merijn: if the projects are unambitious, especially
<protist_>	merijn: and in machine learning etc, what do you need funding for?
<reynir>	i know there are people who use xml for their programming language :s
<merijn>	protist_: i don't do machine learning myself, i do hpc so i mainly talk to those guys to help make their shit faster
<protist_>	merijn: hpc?
<merijn>	protist_: high performance computing
<manicpanic>	thats just beyond disgusting.
<protist_>	merijn: ah...well there i can see some hardware involved...but still
<protist_>	merijn: seems like you generally don't need funding in computer science....maybe i'm missing something
<merijn>	protist_: the projects thing is a bit exaggerated, but what it boils down to is (mind you this is only my experience with eu international projects) is that there's fierce competition for grants. but since eu projects expect you to deliver *exactly* what's written in the proposal and screwing up means no more grants
<protist_>	merijn: grants where you can keep the extra?
<merijn>	the end result is that you write your proposal as vague as possible so that whatever you do end up achieving can be sold as "success"
<protist_>	merijn: i don't know much about grants
<protist_>	merijn: or are the grants just for materials for the project?
<merijn>	protist_: salary
<protist_>	merijn: ah
<merijn>	there are no phd students in europe funded by their universities anymore
<merijn>	and even postdoc/assistant professors are on the way out
<merijn>	no 3rd party funding for your/your groups salary == out of a job
<protist_>	merijn: sounds like academic dishonesty to me
<protist_>	merijn: or cowardice....leeching
<merijn>	therefore everyone spends 70-80% of their time chasing funding and 20-30% on actual research
<protist_>	merijn: wouldn't be in this position if people didn't start doing this to start with
<protist_>	merijn: something like this doesn't happen suddenly
<merijn>	protist_: sure, it's been gradual cuts to all science funding over the past few decades
<planckwalk>	it's a casualty by the side of the road called "efficiency"
<protist_>	merijn: i meant more on the side of the researchers
<protist_>	merijn: just guessing though
<merijn>	protist_: i see most professors spending all their time doing administration and writing proposals so they don't have to fire their students and not getting around to their own research
<protist_>	merijn: sad
<planckwalk>	protist_: it's easy: researchers who don't do that sooner or later end up out of a job.
<planckwalk>	the remaining ones all do it.
<protist_>	merijn: my supervisors meet with me for 30min to an hour a week
<planckwalk>	evolution in action :p
<merijn>	protist_: well, you can focus on your research and lose your job or focus on chasing money
<merijn>	protist_: sure, so do mine. but they hardly do their *own* research they want to do
<protist_>	merijn: i wander how much time mine get to spend on theirs
<merijn>	you don't get promoted for research quality, the university promotes whoever brings in the most cash
<protist_>	merijn: idk...i do ask them what they are working on, though
<merijn>	they (uni administration) don't give a rats ass about research quality
<rindolf>	hi all.
<protist_>	rindolf: hello :)
<protist_>	merijn: ah
<merijn>	protist_: the alternative model that the government seems to want to pursue is an "american" model, where you just charge your students into the poor house, the universities spend that cash on researchers and there's less grant chasing. but i think raising tuition would make the world even worse than grant chasing does
<rindolf>	protist_: meow! sup?
<protist_>	merijn: i'm doing background reading right now....so much stuff and so many directions to consider :/
<protist_>	merijn: well to get to that system you have to have people willing to loan out the money or they wont get in
<protist_>	merijn: and if you have the govt handle that then the price just starts to skyrocket as it doesn't model demand because people can't realistically think about the future of paying the loan
<merijn>	protist_: well, it's not all doom&gloom, people still manage to do interesting research. i'm just worried about the current trend persisting to the point where even that stops
<protist_>	merijn: hence why american tuition is broken
<protist_>	rindolf: doing background reading
<merijn>	although all this "performance/efficiency" thinking is having an impact on education too
<protist_>	rindolf: trying not to fall asleep....had a bunch of sugar now i feel like i am going to fall asleep from the insulin spike
<merijn>	university only gets subsidy for students finishing on time -> courses who fail >60% of students are "problematic and magically disappear out of the curriculum
<protist_>	rindolf: >:(
<protist_>	merijn: yeah :/
<martin204>	._.
<protist_>	merijn: add affirmative action on top of that
<martin204>	$35,000 a year
<rindolf>	protist_: ah, i see.
<protist_>	merijn: then you have underqualified people in the school...and if they can't pass the school will dumb it down
<rounin>	i have a relative who works in our local university's administration, and we were debating this notion of what it means to "finish on time"... even he couldn't fully tell
<protist_>	merijn: or the class will disappear
<merijn>	that doesn't really exist here, tuition is cheap enough that combined with universal government sponsorship anyone with the right degree can get into uni without problem
<martin204>	what
<rounin>	like, if you've gone to university a and then changed over to university b... how do they even know how long you spent at a?
<martin204>	is the worst thing... is these 'for profit' schools
<merijn>	rounin: 5 year masters within 5 years.
<rounin>	and i got two degrees in 7 years, but i spent those years in 6 different programs... if i'd finished in 6 years, would i have finished on time?
<merijn>	rounin: because it's centrally registered to track the student financing you get from the government
<rounin>	or did i fail to finish 4 programs on time and finish 2 programs exceptionally fast
<rounin>	merijn: how does that help us if we don't have a definition of what to register in the first place
<rounin>	merijn: say you move from higher mathematics to computer science in year 2
<rounin>	merijn: so now you've aborted one program
<planckwalk>	the bureaucratic solution is simple: don't let people do things that confuse the numbers :p
<rounin>	ye~ah... that's what they're trying to move towards
<planckwalk>	(despite the fact that the numbers are supposed to only be there to help people do things!)
<rounin>	but i stood my ground... the last two years i didn't even show up for the classes... which weren't the standard ones
<merijn>	planckwalk: i spend 3 months getting my master project approved >.>
<rounin>	my relative says i was far from the most difficult one though
<rounin>	they have one student who's been there for decades and never passed a single class
<merijn>	planckwalk: i did it (with prior approval from the exam committee!) at a different university, which ended up giving me 48 credits for the project (their 9 months project)
<merijn>	planckwalk: but my own university has a mandatory "project course" which lists 36 credits, so i couldn't graduate without that filled and they couldn't enter 48 credits for that 6 month project >.>
<planckwalk>	ugh
<planckwalk>	yeah, i can't think of anyone who has every been to university who has kind words to say about the university administration.
<rounin>	merijn: so you couldn't graduate because you had too many points?
<merijn>	and i was lucky, my supervisor was the dean of the degree and just yeled at people until they fixed
<rounin>	nice nice
<martin204>	what country is this in?
<merijn>	rounin: having too many is not a problem, but you had to pass the course and they couldn't fill out that course with the number of credits the other uni awarded
<rounin>	well, i'm very happy with mine, since they just basically let me do what i liked for 7 years
<merijn>	martin204: netherlands
<rounin>	so if you ever study at the university of oslo, you should basically go wild :p
<planckwalk>	i had two options for my last class in my degree.  they scheduled one of them at the same time as another class i had to take (wtf?).  then they cancelled the second one a week into the course.
<rounin>	merijn: that's such an insane problem {¦d
<martin204>	does the rest of the world really think that the best universities are in the us? for the most part?
<rounin>	hmmmmmmmmmmmmm
<rounin>	hmmmmmmm
<merijn>	martin204: i do, but that's mostly due to us universities having more funds
<martin204>	because... that's what they tell us... lol
<merijn>	martin204: but that's for research
<rounin>	i mean, you have some that have fantastic reputations, i suppse... mit, harvard... i'm sure i could think of a handful
<martin204>	but we have a lot of terrible ones as well
<merijn>	for education...probably not
<martin204>	that's what ive been worrying about
<rounin>	i wouldn't be sad if i had a degree from mit
<merijn>	martin204: sure, when i say the "best" i mean "us top league is the best"
<martin204>	i'm an undergrad
<martin204>	and am considering transferring to uc berkeley
<merijn>	martin204: the "affordable" us universities...not really
<martin204>	but.. they seem to be very focused on research
<martin204>	i dont know if berkeley is up there
<martin204>	maybe in some fields
<rounin>	martin204: aren't there various rankings you could check out though? though some of them include research of course
<martin204>	worried that my 'education' won't be focused on
<rounin>	maybe there are rankings of what students get paid after graduating... that'd be nice
<martin204>	maybe
<martin204>	it's definitely more pretigious
<merijn>	i think like 5 out of our 12 or so universities are in the global top 50-100 for various fields, so i wouldn't expect the average us university to be substantially better
<merijn>	martin204: if possible i would probably go to berkely, the education at most universities is kinda meh in general. i would say being surrounded by a bunch of really smart students is far more educational. which is more likely at uc berkeley than the corn university of iowa or whatever ;)
<martin204>	lol
<martin204>	im debating between berkeley, ucla, and ucsd
<rounin>	it says something about the job market, though... i went to a less prestigious university, as far as computer science is concerned, and still did just fine
<rounin>	i guess the job market here is better (for applicants)
<merijn>	rounin: oh, in terms of job prospects i don't think university matters that much
<merijn>	in terms of doing cool stuff with fellow students it would
<merijn>	so it depends whether the goal is to learn cool stuff or just get a degree as cheap as possible
<feetpicspls>	i've sustained a conversation with a female... achievement unlocked?
<martin204>	well... everyone seems to think that getting a degree from berkeley would make me stand out
<rounin>	ah yeah.. good point, merijn
<rounin>	i might not have done the last 2 years from my armchair if randy pausch had been teaching
<znoosey>	feetpicspls: that was just a bot, sorry!
<rounin>	then again, cs was my second degree, so i was jaded by then anyway
<feetpicspls>	znoosey: can i have the datasheet at least?
<znoosey>	feetpicspls: we all know what you would do with them, so no
<martin204>	http://www.payscale.com/college-salary-report/best-schools-by-majors/computer-science
<martin204>	wow.
<martin204>	that's pretty significant
<znoosey>	almost all the top ones are in california
<znoosey>	so the key is, go to a different school and then get a job in cali
<znoosey>	:p
<znoosey>	statistics can always be misused
<martin204>	i picked the right place to be born
<martin204>	err.. my parents?
<martin204>	lol
<martin204>	also... living expenses in the san francisco bay area are ridiculous
<martin204>	so im sure that's why stanford and berkeley are so damn high up there
<znoosey>	slo at #3 is a nice town though
<znoosey>	and not that expensive either
<feetpicspls>	http://en.wikipedia.org/wiki/andrew_peacock
<feetpicspls>	i feel bad for that guy's name. <.<
<feetpicspls>	brb
<oleo>	why ? a peacock is just a fancy turkey too.....
<feetpicspls>	it's hot in here.
<oleo>	lol
<feetpicspls>	oleo: i watched this video, about a year ago, and i still remember how "andrew peacock" sounds weird.
<feetpicspls>	oleo: try shouting it out loud, preferably at your neighbor.
<vendu>	hey again guys :)
<vendu>	hello znoosey :)
<znoosey>	hello vendu
<vendu>	znoosey, what's shaking? :)
<znoosey>	vendu: trying to get asp.net 5 to run in docker
<znoosey>	vendu: what about you?
<hotcoder>	yall still up or nah?
<madmallard>	naw
<feetpicspls>	hotcoder: nope, i'm dead.
<hotcoder>	:)
<hotcoder>	good
<hotcoder>	been waiting for this glorious moment
<rumpledelf>	martin204: yeah, totally choose rich parents who live near a good university :p
<pythonisnotphp>	python or ruby?
<martin204>	im poor
<martin204>	lol
<martin204>	ill get a mostly free ride though
<martin204>	just gotta pay for room and board, the tuition is going to be granted via scholarship they're offering
<rindolf>	pythonisnotphp: for what?
<rumpledelf>	http://imgur.com/gallery/hh2e0 lol students
<rumpledelf>	i keep using rumpleduni as a nick and everyone assumes i'm a student. maybe i should stop doing that :|
<pythonisnotphp>	rindolf: as a third language and as a web development language?
<merijn>	any (g)make guru's here? i wanna define a target whose names has 2 variables inside it, but i can't figure out whether it's possible, i.e. "foo-%-%: stuff\n commands using the two values from those wilcards here"
<pythonisnotphp>	i don't know wether to lean ruby, python or node.js
<vendu>	znoosey, hacking my malloc :)
<rindolf>	merijn: not sure it's easy.
<merijn>	rindolf: the things i want never are ;)
<rindolf>	merijn: what i do normally in this case is generate a sub-makefile and include it.
<rindolf>	pythonisnotphp: ah, i haven't done a lot of serious web dev in either node.js, python or ruby.
<rindolf>	pythonisnotphp: i can recommend against php.
<pythonisnotphp>	lol i am currently a php dev
<pythonisnotphp>	php and java mostly, i would like to venture into something else tbh
<merijn>	rindolf: i don't think that'd help
<merijn>	rindolf: basically, i need to compile the same c file with 15 different define values, so i wanted to have a generic rule "foo-%-%.c: foo_template.c\n gcc -dbar=$* -dbaz=$8 foo_template.c -o $@" style thing
<rumpledelf>	my local ruby community is ridiculously nice so i like ruby. i may be slightly biased
<rindolf>	merijn: why won't it help?
<merijn>	rindolf: what would the submake file contain? or do you mean like recursively calling make?
<rindolf>	merijn: no, it will contain expanded textual rules.
<rindolf>	merijn: individual ones.
<rindolf>	merijn: generated by a script.
<rindolf>	pythonisnotphp: i know that the ruby/rails/etc. ecosystem has an issue with not maintaining backwards compatibility - they keep breaking it.
<rindolf>	pythonisnotphp: i don't know what's the situation with python/django - if you put aside python 2 vs. python 3, that is.
<myrl-chan>	wow...
<myrl-chan>	i'm actually searching on how to choose a good password. <.,
<gluesticky>	make one until the indicator says it is good.
<pyon>	myrl-chan: your last nick was the weirdest one in quite a long while.
<myrl-chan>	pyon: thank you. :d
<myrl-chan>	pyon: i couldn't help but resist, now it's grouped to my account.
<pyon>	myrl-chan: heh.
<myrl-chan>	"-nickserv- nicks      : feetpicspls"
<myrl-chan>	:d!
<rindolf>	myrl-chan: i use a password manager.
<myrl-chan>	rindolf: yeah, that's also something to consider.
<myrl-chan>	but i'm paranoid about many things.
<gluesticky>	why do people obsess about feet?
<myrl-chan>	gluesticky: why shouldn't they?
<gluesticky>	what's so good about them?
<myrl-chan>	...feet?
<ams>	moo
<rindolf>	ams: meow.
<rindolf>	gluesticky: they allow you to walk from place to place?
<ams>	rindolf: woof
<rindolf>	ams: roar!
<rindolf>	ams: oink.
<rindolf>	ams: quack.
<myrl-chan>	err...
<myrl-chan>	welp. took me some time to understand what "lazy" meant here...
<gluesticky>	you're lazy
<gluesticky>	the laziest.
<gluesticky>	even lazier than the guy that just joined.
<myrl-chan>	,,,wat
<myrl-chan>	;-;
<myrl-chan>	gluesticky: you're hurting my feelings. :(
<sirnerd0>	take some nopept pills
<amazonian>	can someone please try to help me find the reason (and solution) for why my data is getting overwritten? http://pastebin.com/xtpueapv the output: http://pastebin.com/ngub3q7q
<amazonian>	it's java, btw
<amazonian>	my fingers are numb, my brain is dead
<amazonian>	this thing is due in a matter of hours
<sirnerd0>	will help you out
<amazonian>	thank you
<amazonian>	tell me if you need the other classes, though i don't think they are entirely needed
<rumpledelf>	gluesticky: the feet part of the brain is a bit too close to the pleasure part of the brain and some people get them muddled up
<ams>	amazonian: you really expect people to read 500 lines of code, which doesn't even have a line explaning what it is supposed to do?
<ams>	amazonian: and on top of that, fix your homework?
<gluesticky>	really rumpledelf wow o_o
<amazonian>	ams: not asking anyone to "fix my homework". if they have question, they can ask
<rumpledelf>	gluesticky: i'm sure there's a more technical explanation out there in some brain textbook :)
<amazonian>	if you are not interested, mess out
<myrl-chan>	til.
<rumpledelf>	amazonian: do try and make it easier for people to help if its urgent
<myrl-chan>	rgb is "squared" before being output.
<myrl-chan>	outputted?
<amazonian>	rumpledelf: so the logic of this is
<ams>	amazonian: lovley, and now you let others do the heavy lifting, you being to lazy to actually figure things out for yourself.
<myrl-chan>	so, basically, `#808080` is not 50% as bright as white.
<amazonian>	ams: not in the mood dude. i've been working on this thing for over a week. some conditions on the project were changed just yesterday
<amazonian>	ive been working on this for over 8+ hours straight
<amazonian>	not being lazy
<ams>	maybe you should have taken a walk.
<amazonian>	again, if you don't feel like giving nice input - mess out
<ams>	no clue what "mess out" means.
<amazonian>	nice way of saying fuck off
<ams>	amazonian: then i suggest you read the channel rules first.
<amazonian>	ams: i suggest you refer to my intial response
<ams>	"no unpaid do-my-homework/do-it-for-me requests"
<amazonian>	ams: not asking anyone to do shit for me. it's 500 lins
<amazonian>	that
<amazonian>	that's not enough of my own work?
<ams>	of shitty code.
<ams>	and you are asking people to fix your homework so you can get a passing grade.
<amazonian>	ams, i'm really not in the mood to get in an argument with some punk on the internet
<amazonian>	really
<ams>	amazonian: i don't care if you are in the mood.
<amazonian>	right
<amazonian>	well, just shows how much of an ass you really are then
<amazonian>	anyway
<rumpledelf>	problem is it just takes an op who is in the wrong 'mood' and you've lost a whole channel of potential help
<rindolf>	ams: he isn't asking us to write his code for him - he's asking it to review it.
<ams>	rindolf: and solve his problem.
<amazonian>	ams: can i not come here with problems?
<ams>	for a homework assignment.
<amazonian>	it's not homework
<ams>	amazonian: sure, if you ask a question, not "here is 500 lines of crap, it doesn't work.  please fix it for me".
<amazonian>	i am asking someone to explain why data is being over written
<amazonian>	not for anyone to write code for me
<amazonian>	try again
<ams>	cause you are overwriting it.
<amazonian>	ams: dur hur
<ams>	simple as that.
<rumpledelf>	not "my program should do this, i've tried that, it doesn't quite work because it does thing instead, can someone help?"
<rumpledelf>	more information the better
<amazonian>	rumpledelf: right. as i was saying...(hold pls)
<rumpledelf>	probably should edit your pastebin or something so its there for everyone to see
<amazonian>	good idea
<rindolf>	amazonian: do you have automated tests?
<amazonian>	rindolf: no. the program shouldn't output that many lines. i can't find a good stopping condition
<amazonian>	it's supposed to be a simple file sharing program
<rindolf>	amazonian: i don't understand.
<amazonian>	rindolf: sorry. about what?
<rindolf>	amazonian: about what you said.
<amazonian>	rindolf: i was assuming your were asking about automated tests because of the output the program gave
<rindolf>	amazonian: no, i was not  - just wondering in general.
<amazonian>	ah
<amazonian>	no i don't.
<rindolf>	amazonian: that's not good. :-(
<amazonian>	rindolf: i know i know. tbh this program was changed a lot in the past 24 hours (teachers instructions). everything went out of the window
<amazonian>	now i'm racing to finish it with the changes
<amazonian>	it's not due for another 15 hours
<rindolf>	amazonian: i think your methods are too monolithic/long.
<amazonian>	hehe yeah
<ams>	491 test on the wall, 11 that don't work, and yet infintie more to write.
<erste>	hi, when designing apps for mobile users, what are the best practices to let your users know that they can swipe to the left or right to view additional controls??
<vendu>	looks like linux 4.0 is out :)
<vendu>	brb, upgrade and reboot :)
<rindolf>	eric: there may be a visual cue.
<johnpoison1>	hi guys! what's up ?
<ams>	test sunday
<johnpoison1>	testing linux 4.0 ? :-d
<rindolf>	johnpoison1: hi! i'm fine - sorting my bookmarks.
<rindolf>	johnpoison: what's up with you?
<johnpoison>	rindolf: i'm trying to figure out how to display app's menu in the panel. in gtk
<johnpoison>	i'm testing elementary os (ubuntu based os). want to improve it
<_blizzy_>	i might not program today
<vendu>	hello :)
<johnpoison>	vendu: hey!
<rindolf>	vendu: hi.
<rindolf>	vendu: how does kernel 4.0 feel like?
<vendu>	hey rindolf, the thing at least booted very fast :)
<rindolf>	vendu: ah.
<johnpoison>	i wonder are there any improvements for laptops?
<rindolf>	vendu: nice.
<vendu>	hey aidanh :)
<rindolf>	johnpoison: kernel 4.0 is now much different from kernel 3.19.x
<millerti>	now or not?
<vendu>	rindolf, what are you up to?
<rindolf>	millerti: "not" - sorrrry.
<millerti>	"vendu" sounds like the name of a wizard or something.  :)
<rindolf>	johnpoison: kernel 4.0 is *not* much different from kernel 3.19.x
<vendu>	millerti, :)
<millerti>	the linux version bump was arbitrary.  i don't know why they even bothered.
<rindolf>	there's already 4.0.1
<millerti>	they could have gone the way of solaris and mozilla version numbers.  drop the first bit and go from 2.19 to 19.
<millerti>	or 3.19 or you know what i mean.
<johnpoison>	i can't find any docs on dbus-exported application menus =(
<millerti>	i'd love to do more coding in lisp, but i can't keep track of the parens.
<protist_>	millerti: it isn't about watching the parens...it is about watching indentation :)
<ams>	do you keep track of parens in c?
<protist_>	millerti: you read it via indentation
<millerti>	i use _fewer_ parents in c.
<ams>	protist_: mm.. i disagree.
<ams>	you read based on the words.
<protist_>	ams: that too
<millerti>	the thing is, the standard convention in lisp is to put all the end parens together on the last line ))))))
<protist_>	ams: but i mean like basic control flow
<ams>	(defun foo (x) 123) is just as easy as the corresponding grinded version
<millerti>	that's where i get lost.  if i put them on lines by themselves like braces in c, it would be easier to read.
<ams>	millerti: yes, where else would you put them?
<ams>	millerti: one per line? so 6 lines for that?
<millerti>	sadiy that would be easier to read.
<millerti>	sadly even.
<ams>	it would be much much more difficult
<ams>	(defstruct foo
<ams>	)
<millerti>	so, it's like vhdl vs. verilog.  vhdl takes a hell of a lot more typing, but once it's written, it's easier to read.
<ams>	(defun foo (x
<ams>	)
<protist_>	millerti: the only reason you don't put them all together in c-like languages is because you need to remember whether to do `)', `}', or `;'
<ams>	123
<ams>	i mean .. come on..
<protist_>	millerti: we don't have to worry about that
<protist_>	millerti: so just stick them together and end the block(s)
<millerti>	mainly i have trouble when it's a crap load of end parens all together, like 15 in a row.
<ams>	millerti: i think your problem is that you don't know what the different forms do..
<millerti>	forms?
<ams>	millerti: do you have a single example of 15 parens at the end of a line?
<millerti>	i've written code like that before, but years ago.
<millerti>	i've also seen it in like macro defintions.
<protist_>	millerti: your editor should hightlight the paren you just matched
<protist_>	millerti: that way you don't have to count
<ams>	millerti: i have some odd millions of lines of code, and i cannot find a single instances of where there are 15 parens in a row.
<millerti>	well, at the time, there weren't a lot of editors in unix that did the paren highlighting.
<ams>	emacs?
<protist_>	millerti: looking at two programs...mine tend to end with at most 7
<protist_>	millerti: you may want to refactor
<millerti>	something that took some getting used to:  the loop syntax is very un-lisp-like.  it's a domain-specific language inside of parens.  very powerful, but grates on the purist in me.
<ams>	and i would probobly refactor that .,..
<ams>	millerti: loop is very lisp like.
<ams>	dsl is all about lisp.
<millerti>	not to say that i was ever good at programming lisp.  i had to do some ai stuff.
<ams>	a form is what people call statements in other languages.
<protist_>	millerti: i like to use map, reduce, every, etc
<protist_>	millerti: i usually don't loop
<millerti>	the thing to realize is that lisp is not a pure functional language.
<millerti>	it doesn't try to be.
<protist_>	millerti: and i recurse
<ams>	millerti: nobody ever claimed that it was.
<ams>	writing straight, imperative code is actually very nice in lisp.
<ams>	:)
<millerti>	well, when you first study lisp in a graduate course in cs, they sorta present it that way.
<ams>	there are _three_ lines in emacs that have 15 parens or more.
<wei2912>	lol
<millerti>	if you want pure functional, use haskell.  but haskell doesn't have the benefit of having code and data structures in the same syntax.  that's the brilliant bit.
<ams>	one of them is for parcing perl code
<millerti>	hense lisp macros, which sets it apart from every other language.
<protist_>	millerti: i think haskell is only purely functional because the definition of functional evolved with it
<protist_>	millerti: and the definition influenced it
<protist_>	well haskell would have been functional before...but the definition of functional has become more aggressive
<millerti>	personally, i side-step macros and template metaprogramming and all that by often writing code that emits other code.
<ams>	www.udpate.uu.se/~ams/foo.el
<ams>	the function that has the most closing parens in emacs.
<millerti>	in one project, ruby code emits c code.  in another, c++ code emits verilog.
<protist_>	millerti: that is basically what a macro is
<millerti>	protist_: oh, i know.
<protist_>	millerti: but with a macro you avoid hardcoding boilerplate
<millerti>	in lisp macros, code is executed at compile time to generate other code that gets compiled.  it's beautiful.
<protist_>	millerti: even if you generate the code then paste it in...then your file is a bunch of generated goop
<ams>	millerti: read time.
<ams>	not compile time.;
<hideseek>	is batch commands considered as proglanguage
<millerti>	ams:  that's splitting hairs.  :)
<ams>	millerti: it is very different.
<protist_>	millerti: it isn't
<rindolf>	hideseek: do you mean dos/windows batch files?
<hideseek>	yes yes
<protist_>	millerti: read-macros can actually alter the behavior of the lisp reader
<protist_>	millerti: you can have a macro that switches into another language entirely
<millerti>	i tried doing neural nets using template metaprogramming in c++.  but it's even better to auto-generate c code that is specifically tailored to the topology you want.
<millerti>	protist_: interesting.
<protist_>	millerti: hypothetically you could have a macro where you just switch right into python
<ams>	hypothetically?
<ams>	https://common-lisp.net/project/clpython/
<protist_>	ams: i think it may exist
<ams>	i use it for somethings ...
<protist_>	ams: wasn't sure if that project used a read macro ;)
<protist_>	ams: have read a bit on that, though
<ams>	https://common-lisp.net/project/clpython/manual.html#python-syntax
<millerti>	gem5 use python to configure how c++ code is hooked up.  it's a bitch to debug.
<protist_>	ams: s/somethings/some things/
<protist_>	ams: just helping you if you are foreign :p
<ams>	both are correct.
<wei2912>	lol
<protist_>	ams: not in that sentence
<ams>	sure it is.
<protist_>	ams: when plural
<millerti>	no, protist_ is correct
<ams>	http://en.wiktionary.org/wiki/something
<ams>	something (plural somethings)
<ams>	    an object whose nature is yet to be defined. #[quotations #]
<millerti>	"some things" and "somethings" are different.
<ams>	not the _best_ source for setteling english disputes ..
<myrl-chan>	oh cool.
<myrl-chan>	microsoft's new browser.
<protist_>	ams: yes, but you cannot use it in the plural form
<myrl-chan>	it's some damn nice eye candy right there.
<ams>	protist_: sure i can.
<protist_>	ams: and `some thing' and `something' have two different meanings
<ams>	sure.
<ams>	and i meant "somethings".
<millerti>	ams:  if you really did, then your sentence was very unintuitive.
<ams>	possibly.
<ams>	and that should be "was not very intuitive"
<millerti>	hence we all read it as a typo.
<millerti>	lol
<protist_>	ams: well wikipedia agrees with you...but dictionaries now bastardize the english language
<ams>	anyway.. when you have 15+ closing parens .. yuou are doing something wrong.
<protist_>	ams: you can now find the emphatic definition of literally in some dictionaries
<protist_>	ams: agreed on that :)
<ams>	protist_: in old as well.
<protist_>	ams: :/
<ams>	15+ parens is like having a 10 level nested if/while/.. thing in c or some such
<protist_>	ams: oh well...if you aren't foreign i'll save my effort...i was trying to help you sound like a normal human being :)
<protist_>	ams: you are technically correct it seems
<ams>	i am not a normal human being, being normal is boring.
<protist_>	ams: s/like a normal human being/less awkward/
<ams>	;)
<wei2912>	ams: you're certainly not on the bell curve
<protist_>	ams: anywhoozle...i gotta get ready to teach in the morning :p
<rindolf>	myrl-chan: last time the world switched to microsoft's browser (msie 6) microsoft let it stagnate.
<protist_>	ams: haha
<ams>	w oparach absurdu .. you should read that book ..
<ams>	if it is available in english ..
<rindolf>	myrl-chan: i wouldn't trust microsoft or any other vendor of proprietary software to control my browser again.
<protist_>	ams: email me the title, and i'll look later :)
<ams>	it is by julian tuwim and antoni slonimski .. hilarious.
<protist_>	ams: i don't know them
<ams>	with useful tidbits like lexiographically sorted list of months, days, and hours.
<protist_>	ams: you should read `a pickle for the knowing ones'
<ams>	i think i might have read that one..
<protist_>	ams: really!?!?
<protist_>	ams: or dare i say, literally!?!?!
<protist_>	ams: :p
<protist_>	ams: i haven't read it...only bits because i read /about/ it lol
<protist_>	ams: the history is hilarious
<protist_>	ams: the author was an american hro
<ams>	oh, tables like the first list of alphabetically sorted numbers from one to a hundred.. i use it quite often.
<protist_>	hero*
<protist_>	ams: lol
<protist_>	ams: ok, really gotta prepare now :)
<secrettriangle>	is there a cleaner way to write this .sort()? https://ideone.com/kuh6zd
<ams>	protist_: and a very useful list of how children develop into adulthood
<ams>	protist_: happy hacking
<protist_>	ams: thank you :)
<ams>	secrettriangle: put the anonymous function into a named function.
<secrettriangle>	i mean, the actual body of the function
<ams>	shurg.,.. it is two assignments, three cases.
<ams>	you are asking how to clean the head of a needle..
<secrettriangle>	s/it is/right now it is/
<secrettriangle>	yes, because the head of the needle is black with tar
<ams>	is this python?
<secrettriangle>	... lol
<secrettriangle>	is there a cleaner way to write this .sort()? https://ideone.com/kuh6zd
<ams>	what? sorry if one doesn't know every single language out there.
<secrettriangle>	it's js
<ams>	i'd use a switch if there is something like that.
<secrettriangle>	did you even read the code?
<ams>	and i'd use a proper printer to format the string.
<ams>	yes, i did.
<wei2912>	secrettriangle: looking
<wei2912>	secrettriangle: can you explain the context?
<secrettriangle>	wei2912: if (opts.v || opts.version) {} // opts = cmdline opts
<wei2912>	secrettriangle: not the code around that piece of code, but what your code is supposed to do
<secrettriangle>	yeah, shows the version of my package as well as its dependencies
<wei2912>	what does object.keys(versions) return?
<secrettriangle>	['node', 'uv', 'openssl', ...] stderr is on the bottom
<rindolf>	secrettriangle: maybe use a lookup table.
<rindolf>	secrettriangle: a dictionary.
<ams>	alist.
<wei2912>	that looks like versions?
<rindolf>	secrettriangle: instead of using .indexof
<anj7>	hey rindolf o/
<wei2912>	well, guess i'll rtfm
<secrettriangle>	rindolf: .indexof is definitely the right solution, the question is how to deal with items that aren't in the array
<rindolf>	secrettriangle: you can build a lookup tables of strings => indexes.
<rindolf>	anj7: hi, how are you?
<rindolf>	secrettriangle: .indexof is o(n).
<anj7>	rindolf: i'm fine and what about you?
<wei2912>	okay, got it
<wei2912>	rindolf: sortorder is like two elements
<rindolf>	anj7: i'm fine . sorting my bookmarks.
<secrettriangle>	rindolf: where n is 2
<anj7>	rindolf: oh, nice.
<wei2912>	secrettriangle: am i right to assume that node and uv only appear once in the array?
<wei2912>	yep, i am
<secrettriangle>	yep, since we're iterating over an object's keys, each key is unique
<bushido_>	o/
<monkeyget>	  \o
<user123321>	|o
<rindolf>	hi all.
<bushido_>	hey
<rindolf>	bushido_: hi, sup?
<vendu>	hello :)
<bushido_>	nm, feeling frusted after long thinking imagining rogramming codes
<bushido_>	programming codes
<bushido_>	whats that
<rindolf>	vendu: what's up?
<bushido_>	typo
<bushido_>	rindolf: hbu
<rindolf>	bushido_: i've been sorting my bookmarks today.
<rindolf>	bushido_: and i want to go for a longish walk.
<bushido_>	nice..
<ninjapenguin>	has any of you made apps for windows phone?
<ninjapenguin>	even if it was to just play around with the sdk?
<znoosey>	ninjapenguin: probably better of asking in #csharp
<znoosey>	off*
<ninjapenguin>	i don't really have an important question.
<ninjapenguin>	i was just wondering their experience on it.
<znoosey>	and we are less important than them?
<ninjapenguin>	wat.
<znoosey>	and yes i have done some
<znoosey>	and i didn't really like it
<znoosey>	but with windows 10 you can now take objective c code or java and compile it for windows 10 :p
<teejay23>	has anyone read code complete? i haven't, should i read it?
<ninjapenguin>	well, i had to go through a lot of trouble just to get the sdk and had to pay 16.38 euros and i still don't have it installed and it's been half an hour and i've lost my interest in it.
<_blizzy_>	til ocd is a bitch.
<znoosey>	teejay23: it is an ok read, i wouldn't say it is important to read it but go ahead
<ninjapenguin>	only today?
<teejay23>	znoosey: ok, thanks
<ninjapenguin>	_blizzy_: ocd is like your worst nightmare. :p
<pythonisnotpy>	when and why would you use node.js, it's not a mvc framework right? you'll still need a backend to use  to
<myrl-chan>	_blizzy_: why do you think so?
<pythonisnotpy>	it *
<ninjapenguin>	if you have it.
<znoosey>	pythonisnotpy: nodejs is just a way to run javascript on the server
<ninjapenguin>	node.js *is* backend.
<_blizzy_>	myrl-chan, when you repeat stuff without noticing
<myrl-chan>	i like to wash my hands at least 3 time in a row.
<znoosey>	pythonisnotpy: when you want to run it is at about the same time as you think dancing on razorblades is a good idea
<pythonisnotpy>	znoosey: i see, why all the hype all of the sudden? six years ago all i head about is how js sucks. now all i hear about is how good js libraries are
<_blizzy_>	myrl-chan, do you really have ocd
<wei2912>	myrl-chan: wut
<wei2912>	myrl-chan: you should be very careful
<_blizzy_>	or is it one of those 'omg i have to keep my room clean im so ocd xd'
<myrl-chan>	_blizzy_: who knows, but i've had this tendencies even way before i learned about ocd.
<_blizzy_>	oh ok.
<znoosey>	pythonisnotpy: opinions change, some people likes it others don't. and js has become a lot faster the past 6 years
<ninjapenguin>	could also be something you've just learned.
<wei2912>	pythonisnotpy: many people still don't like js
<ninjapenguin>	and because you learned to do it and have done it so long, it feels like a must and feels uncomfortable not doing it.
<wei2912>	<--
<_blizzy_>	however js pays the bills
<wei2912>	^^
<myrl-chan>	not only that, i'm also a hoarder.
<wei2912>	myrl-chan: that doesn't sound good
<pythonisnotpy>	i see
<pythonisnotpy>	so, is node js worth learning in terms of employability?
<wei2912>	i'd think so
<myrl-chan>	not much of a hoarder than other people, but if my parents wouldn't nag me to sift through my items, i'd probably have 3 to 4 years worth of schoolwork and empty ballpens by now.
<znoosey>	pythonisnotpy: it is getting more accepted, and if you like js go for it, but it is not better than anything else for getting a job
<wei2912>	myrl-chan: how do you handle that? i kept a year's worth and my table looks like it has been bombed
<znoosey>	myrl-chan: that is not hoarding, that is university life
<znoosey>	:p
<pythonisnotpy>	i am really concerned that all the technologies i use are considered 'bad' by the wider programming community, i mainly use java, php, javascript
<wei2912>	well, loads of languages are considered bad
<teejay23>	pythonisnotpy: but your nick is python :p
<myrl-chan>	wei2912: well, i usually don't. i'm just fine with hoarding my items, but my parents aren't.
<znoosey>	pythonisnotpy: everyone has their favorites, and think everything else is bad, it really doesn't matter
<asteele>	java and php are probably the most employable languages around right now
<pythonisnotpy>	i don't really know python that well i use it every now and then for automation scripts that's about it
<pythonisnotpy>	znoosey, agh
<pythonisnotpy>	znoosey, ah *
<znoosey>	pythonisnotpy: the important part is, find a language you personaly like, experiment with others to set things in context and then do the best with the tools you have
<asteele>	it really depends on what kind of dev you want to be.  if you just want to be employed, the market for java and php is still very ripe imo.  you can learn the latest things in either languages and make 6 figures.  if you constantly like new stuff (like me) you will check out new technologies and adapt to which one best fits your problem
<pythonisnotpy>	ahh i see
<teejay23>	taking about jobs. how important are puzzles and algorithms? i have always struggled with them. but i am good at learning languages and frameworks.
<znoosey>	teejay23: depends on the interview
<asteele>	teejay23 probably depends on the actual job position.  i havent had to really do many algorithms or puzzles in any of my previous interviews
<znoosey>	teejay23: some companies use puzzles to see how you think, so if you get completely stuck at one and just give up they won't hire you
<asteele>	mine were mostly about showing i knew how to think logically, i wanted to learn, and i was able to be presentable and communicate
<teejay23>	hmm. i got really worried after reading this on hn - http://www.smashcompany.com/technology/embarrassing-code-i-wrote-under-stress-at-a-job-interview
<teejay23>	but again i am not really aiming for top notch jobs.
<pythonisnotpy>	naaa don't worry about it
<pythonisnotpy>	are these junior positions you're going for?
<teejay23>	yeah.
<pythonisnotpy>	make sure that what you put on your cv you actually know
<asteele>	if interviewers are tyring to trip you up with tricky questions you should just find another company imo
<asteele>	way too much opportunity in the space to have to deal with retards like that
<teejay23>	pythonisnotpy: : yes. that's actually a great tip. i was once rejected for putting sql express which i have not used much. :p
<user123321>	how about categorizing the knowledge in the cv into "more than average experience", "average experience", "basic experience"? :)
<pythonisnotpy>	user123321: yes
<asteele>	what is average experience?
<asteele>	hard thing to measure
<znoosey>	if you divide it like that you also have to explain what average and basic is
<pythonisnotpy>	average in respect to what?
<mike802>	if they're trying to make you feel bad in the interview, they're just going to do that in the actual job
<ltcd>	hey. in java are private, final, and private final   all the same? not interested in optimisations, just what they do.
<teejay23>	i personally don't like categorizing. you never quite know what the interviewer's yardstick.
<znoosey>	write years of experience and then add a link to github showing some of the code you have done
<pythonisnotpy>	ltcd: they are different
<pythonisnotpy>	very different
<ltcd>	pythonisnotpy: i mean for methods, what are the differences?
<ltcd>	i know private and final variables are different.
<asteele>	just be honest with your experience and write your cv to get an interview.  the whole point of your cv is to get an interview, nothing more.  write an awesome cover letter about your passion etc.  being passionate and personable is so much more important for entry level positions than experience
<pythonisnotpy>	a final method cannot be overwritten by a subclass
<pythonisnotpy>	teejay23: make sure you have a portfolio
<pythonisnotpy>	github, website etc
<ltcd>	pythonisnotpy: mind writing the differences between them? i've searched online and am getting no one.
<ltcd>	where*
<teejay23>	pythonisnotpy: yes. working on that ;)
<bytefire>	hi all
<bytefire>	question: this macro does what sizeof() function in c does: #define my_sizeof(type) (char *)(&type+1)-(char*)(&type)
<bytefire>	why do we need to cast to char * ?
<rindolf>	bytefire: because otherwise you'll always get "1"
<mike802>	you want the value, not the memory address
<rindolf>	bytefire: also - sizeof is not a function.
<bytefire>	:)
<bytefire>	what is it? macro?
<ltcd>	i still don't get the difference between private and final for methods in java sorry.
<henke37>	final is "can't be overriden, but can still be accessed
<bytefire>	rindolf, thanks, but wouldnt (&type+1)-(&type) return the size as well?
<rindolf>	bytefire: no, an operator.
<henke37>	but private is "can't be accessed"
<rindolf>	bytefire: no, it will return 1.
<bytefire>	ah right
<bytefire>	coz it's pointer arithmetic and the type will be whatever the typw of variable being passed is
<ltcd>	so private and final are the same?
<henke37>	absolutely not
<bytefire>	thanks rindolf
<ltcd>	what is the difference between private and final methods?
<rindolf>	bytefire: you're welcome .
<puddlejumper>	ltcd: no, private can be changed within the class
<henke37>	other classes can still access final methods
<ltcd>	final can be accessed anywhere but cannot be changed or overwritten? private can only be accessed within the class, but can be changed?
<henke37>	yup
<puddlejumper>	ding ding ding
<puddlejumper>	henke37 give this guy a prize
<henke37>	the thing is, final can be combined with protected, internal or even private
<ltcd>	i'm 100% correct, about the change part too?
<henke37>	you can't change a method in the same class
<ronjohn>	anyone here know python?
<bytefire>	ltcd, private and final server two different purposes. private (along with protected and public) controls where the variable can be accessed from
<henke37>	veriable or method
<protodev>	ronjohn: don't ask to ask - just ask your question and you will (most likely) get an answer
<bytefire>	ltcd, final says that the variable's value cannot be changed
<puddlejumper>	ltcd: a usual method for teaching java is to show how the public access modifier works first
<henke37>	final for a method says that it can't be overriden
<puddlejumper>	so you get an idea of how to access members from a class that have public modifier
<ltcd>	i understand public, private, protected. i understand how variables and methods can be. just really don't get final sorry.
<bytefire>	ltcd, a variable can be both private and final
<ronjohn>	prodev ok sorry. guys please look at https://github.com/jcalazan/youtube-audio-dl   my buddy told me that the conversion from youtube to mp3 isnt actually in the project. can anyone confirm this?
<henke37>	a variable can also be public and final
<ltcd>	can i send you a private message bytefire sorry? it's hard to focus in irc with so many messages.
<bytefire>	ltcd, sure
<ltcd>	##bytefire
<ronjohn>	hey guys. https://github.com/jcalazan/youtube-audio-dl  my buddy told me that the actual youtube to mp3 conversion isnt located in this project and that it is making some sort of external call.any someone please confirm this?
<puddlejumper>	ltcd: think of final as using private without a setter
<john___>	set bell_beeps on"
<bytefire>	ltcd ??
<ltcd>	i sent you a message bytefire
<bytefire>	didnt get any
<ltcd>	#bytefire
<rindolf>	ronjohn: yes, it's in youtubeadl/apps/downloader/tasks.py
<rindolf>	ronjohn: it calls youtube_dl for help.
<ronjohn>	ok perfect!
<ronjohn>	any idea why this project does the conversion like 10x faster then the poular youtube-dl?
<puddlejumper>	ronjohn: maybe it uses something better. i think youtube-dl defaults to ffmpeg
<protist_>	ronjohn: looks like it https://github.com/jcalazan/youtube-audio-dl/blob/4ec95ab1401ca11a64155150e221a137eea5a807/youtubeadl/apps/downloader/tasks.py
<ronjohn>	puddlejumper hmm weird, youtube-dl is required to install for it. https://github.com/jcalazan/youtube-audio-dl/blob/master/requirements.txt
<rindolf>	ronjohn: maybe it uses a different format.
<ronjohn>	like the output format? (mp3, ect?)
<rindolf>	ronjohn: yes.
<rindolf>	ronjohn: or its parameters.
<puddlejumper>	with youtube-dl you set which you want it to be
<ronjohn>	yea we tested outputing on lowest quality vs highest and there wasnt a difference really.
<henke37>	there is the possibility that it doesn't convert the data
<henke37>	but merely demuxes it
<henke37>	demuxing is much cheaper than converting
<protist_>	rindolf: youtube_dl is used by get_video_info which is used by convert
<ronjohn>	i have never heard of demuxing
<protist_>	ronjohn: youtube_dl is used by get_video_info which is used by convert
<protist_>	rindolf: not you :p
<protist_>	goodnight ##programming
<rindolf>	protist_: bye.
<henke37>	muxing is the process of putting the video and audio streams in the same file
<rindolf>	protist_: sleep well!
<henke37>	demuxing is the opposite, separating the audio and video streams again
<protist_>	rindolf: i will :)
<protist_>	rindolf: but not too well, i have to wake up :p
<rindolf>	protist_: yes.
<ninjapenguin>	should i learn node.js?
<ams>	no.
<ninjapenguin>	hmh.
<henke37>	learn c++ instead
<ninjapenguin>	i know c++ already.
<ams>	no you don't.
<ninjapenguin>	i know enough c++ already.
<ams>	fair enough.
<ams>	usually just knowing that a language like c++ exists is enough ..
<xeno>	ninjapenguin: learn sml
<ninjapenguin>	no.
<floralshoppe>	learn holy c
<ninjapenguin>	can't find it.
<ninjapenguin>	i could learn c+=
<henke37>	i recommend actionscript
<floralshoppe>	http://www.templeos.org/wb/doc/holyc.html
<ams>	c is holy?
<rindolf>	henke37: god, why actionscript?
<rindolf>	henke37: adobeflash--
<henke37>	i like the flash runtime
<henke37>	a solid piece of engineering
<rindolf>	henke37: with many security bugs.
<henke37>	i dare you to show another product with such a performing vector rendering engine
<henke37>	rindolf, not any more than other products
<ninjapenguin>	i feel super lost at the moment.
<ninjapenguin>	i want to learn something new that i could just work on.
<xeno>	floralshoppe: holy c? you're in the church of satan?
<ruffel>	why not give a use case when you ask instead of just asking "what should i learn" and saying no to all suggestions
<rindolf>	henke37: i don't have adobe flash installed here, and i wish to keep it this way. i removed it.
<henke37>	i take it that you aren't a fan of vector animations
<ezekielnoob>	henke37 don't ever do that again lol
<henke37>	do what?
<rindolf>	henke37: i sometimes watch vector animations, but i normally don't produce them.
<myrl-chan>	exio4: which scheme?
<exio4>	racket, actually :p
<serses>	is this the place for algorithms too?
<myrl-chan>	yes. my canine teeth. they sometimes get very sensitive.
<rindolf>	myrl-chan: ah.
<myrl-chan>	rindolf: basically, imagine that you're consciouslly aware that you have teeth.
<rindolf>	myrl-chan: i see.
<ninjapenguin>	it's like getting a piercing on your lip.
<ninjapenguin>	you try to ignore it but it somehow always pokes you and is like hey, i'm here, don't forget me.
<ninjapenguin>	and it takes getting used to. :|
<myrl-chan>	also, does anyone else here compulsively use /me on chat that don't even support it?
<ninjapenguin>	sometimes, depends who i'm talking to.
<ninjapenguin>	i got tired of people asking "what x means, what y means, what?"
<ninjapenguin>	so i've programmed myself to use specific things in specific environments.
<ninjapenguin>	i've couple times used s/// to fix a word while talking to a non-nerdy friend.
<myrl-chan>	lol.
<amigojapan>	i think there is much truth in this “poem” coding sucks: why a job in programming is absolute hell https://www.youtube.com/watch?v=mticypffrp8
<turbosport>	segfault http://wklej.org/id/1702569/
<turbosport>	it occurs in here
<aidanh>	turbosport: try using a debugger
<turbosport>	i tried valgrind but it gave me strange output
<bytefire>	interesting: http://embeddedgurus.com/stack-overflow/2015/05/boeing-dreamliner-bug/
<vendu>	hey denommus :)
<vendu>	hey znoosey :)
<vendu>	hello aidanh, everyone :)
<aidanh>	hey vendu :)
<aidanh>	aidanh: test..
<denommus>	vendu: hi
<monkeyget>	i haven't had motivation to code in a long while
<monkeyget>	i'm in a slump
<_blizzy_>	i redid my portfolio website c:
<monkeyget>	does anybody got a book/article/documentary to get me pumped about programming?
<tsumetai>	what kind of programming? why are you even interested in it in the first place?
<aidanh>	_blizzy_: link?
<_blizzy_>	anthonyasberry.me
<monkeyget>	well, i don't know. that's part of the problem
<monkeyget>	_blizzy_: neat design!
<_blizzy_>	thanks, monkeyget
<aewffwea>	monkeyget: don't do it
<aidanh>	_blizzy_: hm, i'm glad it works without js :)
<_blizzy_>	aidanh, thanks. :)
<aidanh>	_blizzy_: mind if i give feedback?
<_blizzy_>	aidanh, sure.
<_blizzy_>	go for it.
<monkeyget>	sudo apt-get purge emacs
<monkeyget>	 i'll do it, i swear!
<puddlejumper>	monkeyget: && apt-get install vim
<vendu>	aidanh, denommus, what's up? :)
<vendu>	hey puddlejumper :)
<puddlejumper>	sup
<vendu>	so my malloc and friends are fast, but not totally stable yet :)
<denommus>	vendu: doing nothing because i don't have a computer
<aidanh>	_blizzy_: your webapps heading is inconsistently styled, and you appear to be using <br> tags for visual separation
<puddlejumper>	denommus: stuck with just a tablet or something? :(
<denommus>	puddlejumper: yeah, a smartphone
<puddlejumper>	denommus: when my apartment burned down last year i was in that boat :(
<vendu>	denommus, :(
<aewffwea>	puddlejumper: at least you were able to sleep on the boat....
<numb3rz>	hi
<vendu>	i need to fix this malloc stuff, being a bitch to debug :)
<rindolf>	numb3rz: hi.
<vendu>	it shows promise in run speed, though
<puddlejumper>	aewffwea: i was alive so that was good ;)
<vendu>	i know it potentially beats the living hell out of glibc malloc =)
<aidanh>	_blizzy_: also your #greeting h1 is empty with no js :/ also, i think your four sections would look better with padding: 1em or so
<vendu>	unless they've switched from ptmalloc
<numb3rz>	rindolf: watsssss uuuupppppp!!!!!??
<aewffwea>	puddlejumper: why did your apartment burned down?
<puddlejumper>	aewffwea: also encouraged me to signup for github after i lost every program i ever wrote :|
<rindolf>	numb3rz: i fixed a build bug i had with inkscape.
<puddlejumper>	aewffwea: neighbors
<aewffwea>	puddlejumper: did the insurance paid you?
<_blizzy_>	aidanh, thanks. i'll add padding.
<puddlejumper>	aewffwea: they had a cooking acident
<puddlejumper>	aewffwea: i had insurance yes
<aewffwea>	puddlejumper: -_-... how much time till the fireman arrived to your building?
<_blizzy_>	with js enabled, on every refresh, it shows a different way to say hello in different languages
<numb3rz>	rindolf: cool wat was wrong??
<monkeyget>	i'd be so screwed if my appartment were to burn down. computer and backup, 100% loss
<aidanh>	_blizzy_: you'd need box-sizing: border-box; on the section divs for the 50% width and height to still work
<puddlejumper>	aewffwea: i live in a small town so it took awhile
<aewffwea>	puddlejumper: ok...
<puddlejumper>	aewffwea: lets just say everything was destroyed
<rindolf>	numb3rz: a wrong variable was used.
<aewffwea>	i think i'm 5 blocks from the firestation, so that's good xd
<puddlejumper>	aewffwea: in a small town you need a certain amount of people to show up to take out the trucks
<aewffwea>	:(
<aewffwea>	that's why i don't live in small towns
<numb3rz>	rindolf: inkscape is for graphics design rite
<rindolf>	numb3rz: yes, it's a vector graphics program.
<puddlejumper>	denommus: what happened to your computer anyways?
<puddlejumper>	alright then :d
<vendu>	puddlejumper, what's baking? :)
<aidanh>	_blizzy_: oh, you might want to consider a media query to reflow the boxes vertically on narrow screens
<numb3rz>	rindolf: i hate that!!! its my biggest problem when writing code
<puddlejumper>	vendu: just hanging out, getting ready to do some studying
<rindolf>	numb3rz: ok.
<aidanh>	vendu: been learning haskell, it's actually pretty sweet
<numb3rz>	rindolf: inkscape is used for video game design??
<rindolf>	numb3rz: possibly.
<puddlejumper>	vector images for 2d games is good :)
<ams>	phew .. 761 tests ...
<ams>	i think i give up for today..
<vendu>	puddlejumper, hehe i'm baked as a monkey, damn this malloc is interesting (tm) to debug =)
<vendu>	i did identify and fix some lurking bugs
<vendu>	but apparently, got more to go :)
<numb3rz>	rindolf: have you seen avengers yet?
<rindolf>	numb3rz: no, not yet.
<puddlejumper>	vendu: made more while stoned? :p
<vendu>	puddlejumper, nah :)
<vendu>	:)
<vendu>	 /usr/bin/sed: -e expression #2, char 36: memory exhausted
<vendu>	hehe
<vendu>	this is bad :)
<archilius>	hey everyone.
<aidanh>	hello
<aidanh>	vendu: that's a new one
<ams>	vendu: get more memory.
<aidanh>	_blizzy_: ohh you're also missing a favicon
<_blizzy_>	aidanh, idk what i should put for it.
<_blizzy_>	nvm
<_blizzy_>	i'll make one that says 'aa' for my initials
<forthewin>	alcoholic anonymous
<_blizzy_>	yes.
<_blizzy_>	or anthony asberry
<vendu>	ams, hehe that's obviously not the problem :p
<ams>	vendu: from the error it is. :)
<_blizzy_>	vendu, download more ram.
<_blizzy_>	23 more days
<_blizzy_>	i can't wait
<puddlejumper>	8 more days can't wait
<puddlejumper>	6* \
<puddlejumper>	i can count sometimes :)
<archilius>	honest question : how to make the most out of an internship? how to learn the most and what to focus on?
<_blizzy_>	archilius, ask questions.
<puddlejumper>	archilius: find something closest to what you want to do
<archilius>	_blizzy_ my interviewer told me the same. but he said ask the right questions. and that confused me.
<vendu>	ams, :)
<vendu>	ams, hehe well... it's my malloc messing up and so it's related to virtual memory :)
<archilius>	puddlejumper i have heard usually you don't get a choice.
<puddlejumper>	archilius: if you depend on the school to give you an intership no
<puddlejumper>	archilius: if you find your own yes
<archilius>	puddlejumper i got it from my college. so no it is. :(
<aidanh>	_blizzy_: blue background with a white capital a, perhaps?
<puddlejumper>	archilius: why not try and find your own
<_blizzy_>	aidanh, that's exactly what i was doing, lol.
<snake2k>	hello humans and other weird... things...
<aidanh>	hello snake2k
<snake2k>	aidanh: sup?
<archilius>	puddlejumper from college i get better companies. on my own i would never get companies that good. besides it's my first chance at an internship.
<aidanh>	snake2k: studying applicative functors, you?
<archilius>	besides it's just a w
<puddlejumper>	snake2k: dude
<archilius>	2 month internship.
<rindolf>	snake2k: hi, sup?
<snake2k>	aidanh: just chillin >_>
<snake2k>	puddlejumper: duuuuuddeeeeee
<aidanh>	snake2k: that works :)
<snake2k>	rindolf: just chillin, you?
<rindolf>	snake2k: i fixed a bug in inkscape today.
<rindolf>	in its cmake-based build system.
<archilius>	another question : is functional paradigm practically useful? do companies use it?
<aidanh>	archilius: i'd say it's definitely useful; no personal experience, but there's got to be companies using it
<archilius>	i have a bit of free time in my summer vacation during my internship so i was thinking on learning it.
<archilius>	they say it improves your ability to think logically.
<snake2k>	rindolf: nice!
<archilius>	frankly u have heard of lisp a lot more than clojure.
<archilius>	*i
<ams>	clojure lacks alot of basic things that are required to write programs.
<ruffel>	er.
<ams>	archilius: you can do functional programming in common lisp just dandy, and imperative programming, and whatver you want.  this is why it is a nice language, it doesn't put shackles on you.  you can make the language work for you.
<ams>	and .. you don't have to be bothered with java stack traces that are unreadable. :)
<archilius>	ams that sounds promising. do you have any specific resources to suggest?
<ruffel>	though
<ams>	archilius: the common lisp hyperspec, the common lisp language, practical common lisp is a good book.
<ruffel>	i'd have actually suggested an ml based language
<ruffel>	ml / ocaml / f#
<archilius>	ruffle what is ml
<ruffel>	the name of the language
<ruffel>	:d
<archilius>	oh. and how is it different from lisp or clojure?
<ams>	it isn't.
<pyon>	ruffel: f# isn't really an ml.
<pyon>	ruffel: it doesn't have the ml module system, which automatically makes it not an ml.
<ams>	^^
<ruffel>	i said based
<ruffel>	don't be pedantic
<ams>	f# isn't based on ml.
<ruffel>	"f# originated from ml and has been influenced by ocaml, c#"
<ruffel>	hnng
<ams>	yes, not based.
<ruffel>	wut
<ams>	as pyon mentions, just lacking the module system makes it not ml.
<ams>	it is also cute to quote wikipedia as if it is the word of god.
<_w_>	ams: can you try to be a little less combative?
<ruffel>	or asinine
<archilius>	alright. thanks a lot ams, ruffel , and everyone else for the advice. now i will go to sleep in peace and dream in functions. gn.
<ssta>	still talking about languages with zero commercial value? :p
<ams>	which ones?
<ssta>	i've noticed ml, lisp, f#, clojure...
<_w_>	no trolling
<ssta>	okay, fair enough
<rindolf>	ssta: hi , sup?
<ams>	i'm paid to do lisp programming.  seems that means it iz non-zero commercial value.
<ssta>	hi rindolf.  still learning my way around the huge codebase and database at the new job, but having fun
<rindolf>	ssta: that's great.
<jkbbwr>	ssta: grats on the new job
<jkbbwr>	ssta: whats the techstack
<ssta>	ams: i used to be paid to write lisp as well (well, monk, which is r4rs based...now pretty much defunct)
<pyon>	ssta: "zero commercial value" --> standard ml, sure. ocaml and f#, nope.
<ams>	ssta: scheme is not a lisp.
<ssta>	jkbbwr: java core, and supporting a variety of big-name databases (ms sql, whoracle, db2 mainly)
<jkbbwr>	ssta: 0xdbe and intellij are your friends my brother.
<ssta>	jkbbwr: intellij is indeed my friend...it's the major option for all devs there
<indigo>	til 0xdbe
<jkbbwr>	indigo: its a thing. a good thing
<jkbbwr>	ssta: there are hardly any java shops that don't roll it as standard for their devs if not offer it as an option
<ssta>	jkbbwr: not used 0xdbe.  i'm largely using squirrel, but really java's running the queries, the db tool is just to debug them
<ssta>	of course, debugging them is a lot of fun...not
<indigo>	jkbbwr: i currently use navicat and hate it ;p
<jkbbwr>	ssta: 0xdbe rocks.
<indigo>	but it's more because their mac version is shit
<ssta>	jkbbwr: i'll give it a look.  one thing abiout these guys is they're not afraid to spend money to get the right tools
<ssta>	i'm discovering the joys of ctes, which i'd never really used before (most of my database experience bing with mysql)
<ssta>	no idea how i ever lived without them
<ams>	cte?
<ssta>	common table expressions.  basically a way to temporarily create a named view for the life of the query
<ssta>	makes writing complex queries with lots of hjoins much easier
<ssta>	s/hj/j/
<ams>	i just use a general purpose language for querying a database.
<pyon>	ssta: makes recursive queries possible, as well - at least in some dbmss. :-p
<ssta>	pyon: yep
<ssta>	mod dbs do ctes nowadays...not all do recursive, but all that i need to support do i think
<ssta>	irritating needing to write completely portable sql though
<indigo>	ssta: mysql is just a sad database :p
<ssta>	for what it's good for, it's good
<vendu>	brb =)
<learning_c>	howdy folks
<learning_c>	i'm mucking around with some code in c
<learning_c>	this code, specifically
<learning_c>	https://www.allegro.cc/depot/overgod/
<mike802>	try ##c
<learning_c>	gotcha
<ruffel>	how polite
<mike802>	i remember when i started learning c back in middle school
<mike802>	i couldn't comprehend what the point of a boolean was
<mike802>	middle school was a weird time
<puddlejumper>	those early days wtf am i ever going to use "!" for :)
<mike802>	i know!
<mike802>	build a number pyramid
<njcomsec>	i remember when i first started learning ode..before i knew how to create more methods/functions, i tried to make a game stacking conditional statements
<njcomsec>	code*
<mike802>	the old text-based rpg?
<njcomsec>	i think it worked, but it was a short game.. eh
<mike802>	that was my assignment for my high school java class
<njcomsec>	yeh my first projects were console games
<puddlejumper>	njcomsec: i refactored some code i did when i was a noob one function went from 300 lines to 6 lines
<vendu>	who :)
<vendu>	whoa*!
<vendu>	hehe
<njcomsec>	a few years later and now im writing a 2d game engine for android
<vendu>	what's up?
<njcomsec>	how far iv come!
<puddlejumper>	vendu: wb
<vendu>	puddlejumper, for the first time, my malloc seems to work with video players :)
<dexx1_>	can someone check line 12 and see if i am "finding the biggest circle that fits inside the design" or "finding a proper sized circle, then making the design fit inside it": http://pastie.org/private/ecm5xupfe3kdcdi0w8vatg?
<vendu>	apparently the x server didn't like it
<vendu>	probably crashed in some mouse routines, i had no cursor :)
<puddlejumper>	vendu: awesome :d
<vendu>	yep :)
<vendu>	puddlejumper, i got so drawn into code i forgot i've got smoke for hours :)
<puddlejumper>	vendu: better smoke something
<vendu>	puddlejumper, i found and fixed some bugs i didn't expect :p
<vendu>	heh, well, some are fixed now :)
<bushido_>	o/
<bushido_>	hey
<denommus>	ho
<vendu>	puddlejumper, it's the rewrite of my malloc
<vendu>	i'm pretty sure even the old one chucked on some video players
<vendu>	but now this one is crashing compilations (which the old one did fine), so interestingly enough, i need to roll my sleeves again :)
<vendu>	puddlejumper, i've been working on different allocators for hmm
<vendu>	perhaps a decade?
<vendu>	:)
<puddlejumper>	vendu: that's a long time :p
<vendu>	this one's gonna be the mean one :p
<vendu>	i believe i did my first bonwick-style allocator(s) in 2008 :)
<vendu>	rewritten it a time or two since then, but the basic principles remain :)
<xgc>	my first memory manager was around 1978.
<vendu>	xgc, :)
<hololeap>	i was wondering if there is a design pattern that has a central thread-safe queue, several threads that execute methods, and then 3 types of methods: methods that pull from the queue, methods that add to the queue (which need to alert other threads in case the queue runs out), and methods that do both
<hololeap>	the methods that write to the queue may take several seconds if there is a network fetch involved so the other threads would need to be alerted so that they don't think "queue's empty, time to quit"
<xgc>	hololeap: dwit pattern.
<xgc>	it's one of the oldest and most wanted patterns.
<hololeap>	hmmm... it seems like it would be common enough to have its own pattern or maybe a library... i just don't know what to search for
<xgc>	not sure it's ever been documented.
<xgc>	"do what i'm thinking"
<electrojustin>	lol
<timemage>	xgc, :), i've seen that as dwim.
<electrojustin>	that's my favourite design pattern
<menace_>	how can i get noticed designing a website
<dexx1_>	can someone check line 12 and see if i am "finding the biggest circle that fits inside the design" or "finding a proper sized circle, then making the design fit inside it": http://pastie.org/private/ecm5xupfe3kdcdi0w8vatg?
<electrojustin>	some context might help
<electrojustin>	like, a lot more context than a few lines
<vendu>	puddlejumper, damn i need to get around to writing a crime story :( :d
<vendu>	i have some very good ideas for one :)
<electrojustin>	oh i see what you're trying to do
<gagabone>	why exactly do jews not agree with the expansion box christianity, instead making their talmud fork?
<puddlejumper>	vendu: make a game :
<puddlejumper>	:d
<vendu>	puddlejumper, i think both :)
<electrojustin>	dexx1_: probably closer to "finding the diameter of the circumscribed sphere"
<vendu>	perhaps a book and then base the game storyline on that
<vendu>	i think a good game is about a good plot and story :)
<vendu>	puddlejumper, why do rogue-likes keep being popular? :p
<vendu>	well, there's more to it than the story
<vendu>	but hmm
<vendu>	we'll see =)
<vendu>	puddlejumper, i don't think finns are allowed to run kickstarter campaigns
<dexx1_>	electrojustin: circumscribed means drawing a circle in the design or fitting the design in the circle
<vendu>	which is too bad, i'd know rationally-priced but talented people, well, or how to get to them :)
<vendu>	graphics artists, a friend of mine knows some good ones :d
<electrojustin>	dexx1_: making the design inside the circle. like this: https://www.math.nmsu.edu/~pmorandi/math112f00/graphics/inscribedtriangle.gif
<electrojustin>	obviously your design isn't a triangle, but i think you get the idea
<electrojustin>	also it's technically a sphere
<vendu>	puddlejumper, as i must've told you by now, this would be a modern bank robbery :)
<electrojustin>	dexx1_: to get an sphere inside the design, you would find the minimum of design_x, design_y, and design_z.
<puddlejumper>	vendu: did you start it yet?
<vendu>	puddlejumper, i have a bit of a start for the game :)
<dexx1_>	electrojustin: oh ok thanks
<vendu>	and some plot ideas for the book
<vendu>	puddlejumper, i took a video course back in the university... the plots are started by creating good characters :)
<vendu>	one of the kick-butt ideas of twin peaks were the side-plots/characters :)
<vendu>	there was a lot going on :)
<audioburn>	ihatehex, hey man
<vendu>	hmm :)
<vendu>	anyone else lighting up? :p
<puddlejumper>	good characters are important as well as the world
<vendu>	puddlejumper, and the actions of the characters :p
<vendu>	and interaction
<vendu>	puddlejumper, ever see the flick reservoir dogs?
<puddlejumper>	no
<vendu>	i think it's tarantino who started messing with time... going back and forth in time in the storytelling
<vendu>	puddlejumper, do watch it :)
<vendu>	watch everything tarantino :)
<pyon>	inuoppai: are you really interested in dog udders?
<pecorade>	hi.
<vendu>	hey pecorade :)
<pecorade>	hey vendu, 'sup?
<vendu>	pecorade, baked, hacked some code / fixed some bugs. you? :)
<vendu>	hey again =)
<dreams>	vendu: hai.
<vendu>	hey dreams :)
<ihatehex>	hey audioburn
<ihatehex>	what's up?
<audioburn>	nm, chilling, coding, wbu?
<ihatehex>	came home from my menial-ass job
<ihatehex>	coding tomorrow
<audioburn>	what is your position at your job?
<ihatehex>	i'm a cashier/other things at a grocery store
<ihatehex>	i have a completely incompetent coworker. he makes my days a lot less tolerable
<hotcoder>	hello all :)
<pyon>	so, i'm planning to buy three programming books, and still can't decide what should be the third one. the first two ones are "garbage collection: algorithms for automatic dynamic memory management" and "modern compiler implementation in ml". keeping in line with the "compiler and runtime implementation" theme, what books do you guys recommend as the third one?
<_blizzy_>	time to "let's make blizzy feel stupid game"
<dreams>	pyon: "design concepts in programming languages"
<pyon>	dreams: thanks, checking.
<pyon>	dammit, can't be delivered here.
<pyon>	this online shopping thing is incredibly frustrating.
<dreams>	pyon: "virtual machines" by iain d. craig. focuses on run-time implementation techniques using vms. i have not read it yet but its on my get-list.
<o0elise0o>	who wants to see the end credits scene from the new avengers movie?
<pyon>	dreams: never mind, i decided not to be stingy. if i buy a new rather than used one, it can be shipped here.
<aewffwea>	pyon: sicp?
<pyon>	aewffwea: i have already read sicp. also, why would i buy a book i can read for free online?
<aewffwea>	pyon: the art of the metaobject protocol?
<dreams>	pyon: both of my suggested book are expensive but i think worthy. i have the garbage collection book you mentioned (its not a very easy read if you have no run-time background).
<pyon>	aewffwea: okay, checking.
<pyon>	dreams: ah!
<dreams>	aewffwea: isn't that lisp oriented? there is also lisp in small pieces.
<aewffwea>	dreams: it's a great book about design
<aewffwea>	and metaprogramming
<aewffwea>	one of the most useful books i've read
<se_>	art of computer programming
<aewffwea>	se_: that's a reference, not a book to read
<o0elise0o>	http://elise.openverse.com/avengers.3gp
<audioburn>	ihatehex, ah dang. hope you can land a nice programming job
<pyon>	<pyon> (...) *keeping in line with the "compiler and runtime implementation" theme*, what books do you guys recommend (...) ?
<audioburn>	ihatehex, or start your own business
<se_>	then maybe algorithms, 4th edition
<aewffwea>	pyon: that book is great for language design
<wansyth>	hey! any codeigniter people in here?
<pyon>	aewffwea: language design might be a fine topic for next year. since i'm poor, i only can buy so many books each year.
<rumpledelf>	you don't even have to be very poor to have that problem with books
<wansyth>	^^ haha
<bmm>	hello guys
<aewffwea>	pyon: why are you poor?
<wansyth>	that's a really direct question.
<sir_galahad_ad>	i'm poor because i work at subway
<rumpledelf>	and there's so many things that can make you poor, or at least feel poor
<rumpledelf>	i have almost no disposable income and have to live on ramen and stuff but i'd have trouble arguing i'm poor :\
<xeno_>	aewffwea: the art of the metaobject protocol is at least a great book for cl oo people
<xeno_>	aewffwea: but hardly #1 for language design...
<xeno_>	aewffwea: but in general, there's a complete lack of great language design books... there's plenty of language theory books though
<resco>	hey people, any ideas on good scrum books?
<_blizzy_>	could someone explain the diff between bubble and gnome sort?
<resco>	i'm looking into the whole scrum thing as a planning system, i like the whole whiteboard -> post-it idea, as it's very clear what needs to happen... but i'm currently working with one other dev and the minimal requirement for scrum seems to be 3 people
<xeno_>	resco: there's plenty, just check out amazon
<_w_>	resco: in my experience, 3 people is still too little
<xeno_>	the normal saying is 4-7, but i find 7 too many
<resco>	_w_: any other agile forms that allow small teams but scalability?
<xeno_>	resco: kanban
<_w_>	i feel the ideal is more 7-9; certainly that's what has worked best in my personal experience
<rumpledelf>	i miss working in a team with other devs :(
<_w_>	i miss working all on my own
<rumpledelf>	wanna swap lives?
<_w_>	then again i'm a strong introvert with a big ego
<xeno_>	_w_: don't we all?
<_w_>	working alone is always going to appeal to me
<_blizzy_>	i wish i wasn't an introvert
<rumpledelf>	i get left out of everything, its annoying. so i get stuck with all this crap to do
<rumpledelf>	ah well, is monday. back to stalking for jobs on seek
<xeno_>	i never work on team projects on my spare time, cause my capacity for team works is exhausted at work
<o0elise0o>	http://elise.openverse.com/avengers.3gp
<wansyth>	what's wrong with being an introvert?
<xeno_>	wansyth: nothing, except the ideal in software engineering nowadays is hive minds
<rumpledelf>	its nice to know *why* you're building a project, and who for etc
<mike802>	pair programming?
<resco>	xeno_: http://www.bol.com/nl/p/agile-project-management-with-kanban/9200000035724019/ ?
<mike802>	i don't mind pair programming, but it's not required
<wansyth>	i wish companies, especially in software development, would give roles based off of natural talents i.e gallup strengthsfinder
<rumpledelf>	wansyth: yeah, that
<xeno_>	resco: not familiar with it
<resco>	xeno_: other books?
<xeno_>	resco: just go to amazon, and look at the reviews
<rumpledelf>	i'm currently working on all the stuff the junior is better at and i don't like it, and he's been given a task that i'm good at, and he's doing an incredibly bad job because he's never done it before or had any training in it
<gladiator>	hi
<_blizzy_>	why use a for loop
<gladiator>	i need some bash help
<gladiator>	:)
<_blizzy_>	when you can use a five loop
<wansyth>	or a high five loop
<resco>	xeno_: one review, 5 stars
<rumpledelf>	not my call putting someone who has never worked on a project with more than one dev onto project managing a massive project with a team of several people so i'm sure there was a reason for that
<wansyth>	it's everywhere though, management sees everyone as their title and not the person.
<gladiator>	++ [[ value="value here" = \ \v\a\l\u\e\=\v\a\l\u\e\ \h\e\r\e ]]
<gladiator>	hi
<gladiator>	i get the following output from a variable $var
<gladiator>	due to parametre expansion
<gladiator>	how can i fix that?
<pyon>	rumpledelf: can't you two guys (the junior and you) explain to your superior that you're doing what the other one is better at?
<dreams>	xeno_: language theory books are "abstract" language design books in my opinion. semantics books for instance teach you how to design a language without getting into implementation details.
<rumpledelf>	pyon: heh, no. the project is about 6 months behind now and i'm on the verge of quitting, he doesn't listen to me
<gladiator>	original code was like [[ if $value = "$value" ]]; then do something
<pyon>	rumpledelf: whoa.
<rumpledelf>	pyon: so now the junior is so busy mismanaging the project that i'm stuck with all the small brochureware sites
<pyon>	heh
<rumpledelf>	i'm a freelancer on site, junior is full time salary
<pyon>	ah, well... that makes things harder.
<rumpledelf>	yeah. you don't actually work there you get left out of meetings and stuff
<pyon>	if both of you are full-time employees, it's easier to justify swapping tasks.
<rumpledelf>	also the opinion of oh you're a dev, you don't need to know
<pyon>	heh
<rumpledelf>	i know. i get paid at least twice what he does too so the boss doesn't want to 'waste' my time
<xeno_>	dreams: you need to go into semantics for it to be useful, but almost all theory books goes *only* into semantics... :/
<dreams>	xeno_: theory books goes *only* into semantics -- whats the problem?
<xgc>	rumpledelf: what are your main areas of expertise?
<rumpledelf>	xgc: why?
<dreams>	xeno_: i'd not want to see irrelevant implementation details. if efficiency is a concern there are books for that (like algorithms).
<xgc>	rumpledelf: just interested.  it's a very long shot.
<pyon>	dreams: well, some discussion of implementation and pragmatics is useful.
<rumpledelf>	xgc: heh. you sound like you're hiring or something
<nozzre>	 hello
<nozzre>	anyone got good knowledge of c?
<xgc>	rumpledelf: we have been growing for the last 8 years.  i can't find people fast enough.  but we're also careful.  we've been in 2nd / 3rd stage interviews every other day for as long as i can remember.
<pyon>	nozzre: just ask your actual question.
<rumpledelf>	xgc: i'm trying to get a loan so i'm kind of limited to jobs that will let me get a loan
<pyon>	nozzre: yes, there are people who know c in this channel.
<nozzre>	okay
<rumpledelf>	yay for the idiot in pm threatening to hack me if i don't answer his bash question
<gladiator>	lol
<wansyth>	rofl
<gladiator>	haha
<wansyth>	that's epic
<nozzre>	when i attempt to compile my project i get the following error: "error: invalid use of void expression" and the code is: scene->objects[scene->objectindex++] = (void *) object;
<rumpledelf>	wansyth: ikr
<xgc>	rumpledelf: no problem.  we're looking for senior people.
<gladiator>	rumpledelf: is irciing from a mobile phone app
<nozzre>	btw object is type: void *object;
<gladiator>	in australia
<gladiator>	rofl
<o0elise0o>	rumpledelf::careful he might bash you
<rumpledelf>	i am?
<aewffwea>	nozzre: yes
<rumpledelf>	i was under the impression i was on a desktop computer
<gladiator>	no u r not
<aewffwea>	rumpledelf: why do you need a loan?
<rumpledelf>	aewffwea: to buy a house with
<wansyth>	^this guy
<wansyth>	with the crazy questions
<wansyth>	no filter.
<rumpledelf>	wansyth: he's got impressive skills eh
<wansyth>	"why are you poor"
<wansyth>	"why do you need a loan?"
<nozzre>	so can anyone help mr?
<wansyth>	haha cracks me up.
<nozzre>	me*
<gladiator>	 textual irc client: www.textualapp.com — v5.1.1
<aewffwea>	rumpledelf: and why does your job affect the loan thing?
<zz_m>	hey guys, need some general advice
<zz_m>	i picked up programming about a month ago, python. i still am complete crap at programming and i really can't do much. but i hate programming in python, i don't enjoy it one bit. what really interests me is low level stuff. i would really like to do embedded stuff but this really smart guy i talk to says to stick with python until i get good at programming but i hate it and put it off and now
<pyon>	nozzre: we have no idea what the types of all the involved variables are.
<zz_m>	programming feels more like a chore (i want to enjoy programming). should i start learning another language such as c or do i have to stick with python
<rumpledelf>	aewffwea: have you ever tried to get a loan before? you generally need a job to get a loan
<rumpledelf>	gladiator: ?
<zz_m>	sorry for the paragraph heh
<aewffwea>	wansyth: pyon says he is an incredible programmer... from that, one could assume that he'd have a great job, that pays well
<gladiator>	lol
<pyon>	aewffwea: i never said i'm an incredible programmer.
<pyon>	aewffwea: i just hate imperfection. just that.
<wansyth>	now let's not start a bash in here.
<aewffwea>	rumpledelf: loans heavily depend on the country where you live in
<rumpledelf>	all textual says about me is that i'm a mac fanboi
<rumpledelf>	aewffwea: yes, but mostly on your job
<gladiator>	[rumpledelf time reply]: monday, 4 may 2015 7:51:50 am australian eastern standard time
<aewffwea>	rumpledelf: as i said, that depends on the country... there are countries where it doesn't matter that much
<gladiator>	kiwis
<rumpledelf>	gladiator: how about you spend your time asking your bash question again instead of getting obsessive about australian mac users who eat breakfast on irc every day
<o0elise0o>	how about you stop intentionally trying to be an asshole, gladiator
<vendu>	alright, kids, in your corners... settle down :)
<aewffwea>	pyon: where do you live?
<gladiator>	https://www.flickr.com/photos/12099014@n03/
<rumpledelf>	aewffwea: if i lived somewhere cheaper it would be a lot easier but no
<gladiator>	lol
<aewffwea>	rumpledelf: where do you live?
<gladiator>	take off ur glasses , son
<rumpledelf>	aewffwea: sydney
<gladiator>	he lives there
<gladiator>	rofl
<gladiator>	https://www.flickr.com/photos/12099014@n03/
<aewffwea>	rumpledelf: a lot of places will give you a loan, if you have a collateral with more value :)
<rumpledelf>	aewffwea: googled my own suburb yesterday and ouch, apartments are like $750k+
<gladiator>	robyn stanley!
<wansyth>	are you doxing people gladiator?
<gladiator>	not really
<gladiator>	no time for lammahs
<aewffwea>	rumpledelf: that's steep o_0
<rumpledelf>	wansyth: i wouldn't answer his bash question in pm, so he googled me
<aewffwea>	rumpledelf: how much is worth a month's of rent?
<rumpledelf>	aewffwea: 2400 or so
<gladiator>	rumpledelf is a she
<aewffwea>	rumpledelf: that's insane
<wansyth>	why are you picking on rumpledelf? there's 582 other people in here.
<aewffwea>	so the price of the property is 26 years of rent
<gladiator>	i am not picking
<gladiator>	just guessing
<aewffwea>	rumpledelf: are you married?
<rumpledelf>	aewffwea: tell me about it. i'm saving to get a place just *outside* the city
<rumpledelf>	aewffwea: i'm surprised gladiator didn't ask that, but no
<aewffwea>	rumpledelf: maybe you need a job in a new place xd
<aewffwea>	rumpledelf: do you get some kind of tax exemption or something for getting a loan?
<technocf>	i've got this problem that i cant work out, in c i have multiple objects (structs) that need to be of the same base type so that they can be stored in an array together.  how do i give them the same base type?
<rumpledelf>	aewffwea: nope
<aewffwea>	rumpledelf: if you don't it might make sense to wait until you get married until you buy a home
<rumpledelf>	aewffwea: i have no intention of ever getting married, so no
<gladiator>	rumpledelf: you evil woman
<gladiator>	lol
<aewffwea>	rumpledelf: okay o_o... what about having a partner?
<gladiator>	haha
<rumpledelf>	aewffwea: what has any of this got to do with me wanting to get a job that lets me buy a house?
<gladiator>	:p
<aewffwea>	rumpledelf: because buying a house might not be your best move....
<rumpledelf>	aewffwea: heh. or perhaps, i just want to buy a house
<aewffwea>	rumpledelf: perhaps you just want to jump off a bridge... that doesn't make it a good idea...
<wansyth>	aewffwea, why do you want to jump off a bridge?
<rumpledelf>	usually i get this argument in reverse whenever i say i don't want to buy a car
<aewffwea>	wansyth: with a parachute? that seems like fun
<wansyth>	i beat him to the tough question this time.
<gladiator>	caravan
<aewffwea>	rumpledelf: i hate driving... so i don't want to buy a car...
<gladiator>	:)
<aewffwea>	rumpledelf: also houses here are very expensive at the moment, so i'm not planning on buying a house either
<gladiator>	i want to buy a caravan
<gladiator>	lol
<bmm>	hello technocf what if you use an array of pointers to your struct?
<gladiator>	a blob
<gladiator>	a blob is better than a pointer
<rumpledelf>	anyway, put in for a couple jobs last week so hopefully some of those start to come through this week
<macrobat>	technocf: are the structs different? why? how?
<xeno_>	dreams: it's not a question of (only) efficiency, but of sanity. doesn't matter if you make a nice language if it doesn't keep what it promise
<gladiator>	rumpledelf: if no luck, you can pm me.
<gladiator>	:)
<gladiator>	lol
<aewffwea>	gladiator: do you live in sydney too?
<gladiator>	no
<rumpledelf>	i already have a job, i just need a different one
<xeno_>	dreams: type systems are for instance not an implementation detail
<gladiator>	rumpledelf: backroom casting
<gladiator>	:)
<aewffwea>	rumpledelf: coming back to our humane dicussion... i'd also advise you to get a partner :p
<rumpledelf>	aewffwea: getting a partner would do zero for this, so no thanks
<gladiator>	google backroom casting
<aewffwea>	rumpledelf: i'm talking about your happiness
<gladiator>	rofl
<rumpledelf>	i thought you were discussing finances
<wansyth>	i'd advise you to program an ai partner.
<gladiator>	happu ever after
<gladiator>	happy ever after
<rumpledelf>	no way in hell i'm getting into a loan with another person, you know the legal issues that can come out of that?
<bmm>	lol
<gladiator>	lol
<gladiator>	backroom casting
<gladiator>	:p
<wansyth>	ai have no legal rights.
<aewffwea>	rumpledelf: watch this: https://www.youtube.com/watch?v=ebbpkedba5o
<wansyth>	yet
<aewffwea>	rumpledelf: someone to hold you too close. someone to hurt you too deep. someone to sit in you chair, to ruin your sleep,
<rumpledelf>	aewffwea: i'm not married, this does not mean i'm alone
<aewffwea>	rumpledelf: are you searching a home that your partner likes too?
<rumpledelf>	aewffwea: no, for myself
<aewffwea>	rumpledelf: but wouldn't you want to live with your partner eventually?
<gladiator>	rumpledelf: you are welcome to come to my house
<gladiator>	but pls dont bring any partners lol
<rumpledelf>	aewffwea: you are clearly in a different country to me
<aewffwea>	rumpledelf: so?
<gladiator>	i got swimming pool too
<rumpledelf>	in my country people can take your assets if you split etc. so in the interests of not being shafted by some idiot on breakup, i'm keeping my finances etc completely solo. i have a corporation for this
<vendu>	hmm
<gladiator>	rumpledelf: make sure you have a good accountant too before getting married
<njcomsec>	in most western countries in a divorce, the woman takes lots of the man's money
<gladiator>	and a lawyer on call
<aewffwea>	rumpledelf: that's completely fine... but if you are going to live with someone, you should choose the home together... that doesn't mean it's in both your names... but you should both like it
<rumpledelf>	i'm never getting married, so meh
<wansyth>	this is the strangest programming talk ever.
<gladiator>	lawyer, accountant, tax man
<gladiator>	lol
<njcomsec>	people can do what they want
<rumpledelf>	aewffwea: again. i'm getting a house for *me*, not someone else
<aewffwea>	rumpledelf: that's silly :p
<njcomsec>	i dont want to get married or live with a partner
<aewffwea>	rumpledelf: check the song i sent you
<xgc>	rumpledelf: some places have silly laws that also apply to those who haven't married.
<aewffwea>	njcomsec: still silly
<njcomsec>	why?
<rumpledelf>	the nitwit who got me into the cult of apple has very expensive tastes so he'll be coming along to help pick appliances etc, but that's it
<aewffwea>	njcomsec: check the song
<rumpledelf>	xgc: i know, i live in one of them. you really have to be careful
<gladiator>	lawyer, accountant, tax man and data analytics team
<njcomsec>	and a scientologist
<gladiator>	an hr consultant too
<wansyth>	plus a puppy
<gladiator>	have to find the right match
<gladiator>	rofl
<bmm>	can someone please recommend some cool mind blowing tv shows?
<vendu>	hmm
<wansyth>	caprica
<vendu>	i need to install them onto my mini-laptop :)
<wansyth>	get inspired about the future of virtual reality.
<vendu>	i can toss cd images onto a usb stick and then use something like daemon tools :)
<vendu>	ooh! larry, space quest, police quest, other classics again :d
<bmm>	thanks wansyth would check that out
<dreams>	xeno_: that's a skill you get as you go. i agree with you sometimes it can be difficult to get the specification right but its an essential skill for compiler/language writers.
<rumpledelf>	how much demand is there for compiler/language writers these days?
<aewffwea>	rumpledelf: a little, not a lto
<rumpledelf>	ignoring js frameworks, new  one of those every week :)
<aewffwea>	rumpledelf: a lot of that stuff is open source
<dreams>	rumpledelf: it depends on the field. sometimes enough to get you a house ;).
<mike802>	people like that don't really move around
<rumpledelf>	heh. i get paid enough to get a house, its just the wrong *kind* of job >.<
<gladiator>	rumpledelf: to get a house, you need a 40-50k job for 4-5 yrs
<xgc>	rumpledelf: it depends.  sometimes the need arises internally.  it's not necessarily an explicit requirement for a project.
<rumpledelf>	gladiator: where you live maybe
<gladiator>	maybe
<gladiator>	or get a mortgage
<rumpledelf>	i did a lot of compiler stuff at uni and hadn't seen it since
<rumpledelf>	i just need a stable job for long enough to get a loan. no biggie, just have to get one
<gladiator>	http://jobs.com.au/search/?s=502&sal=50000
<aewffwea>	rumpledelf: a stable job? are you good with horses?
<njcomsec>	hahahahaha
<wansyth>	rofl
<gladiator>	ponies
<njcomsec>	im 30 and live with my mum
<gladiator>	im 14
<aewffwea>	njcomsec: that's good
<aewffwea>	njcomsec: for you mum
<njcomsec>	its cool she makes me pancakes every morning
<gladiator>	your mum
<gladiator>	lol
<gladiator>	who had all the pancakes?
<gladiator>	your mum
<gladiator>	lol
<xgc>	rumpledelf: you might not want to advertise only wanting the job long enough to secure a loan.  the job may be somewhat stable, but you don't present yourself is being stable (long term employee).
<aewffwea>	njcomsec: are you this guy: http://newswatch28.com/expelled-from-kfc-for-breastfeeding-her-42-year-old-son/ ?
<wansyth>	the cost of living is too inflated in the first world.
<njcomsec>	hhahahahhaha
<wansyth>	houses shouldn't cost 700k
<gladiator>	rumpledelf: you don't need a loan
<rumpledelf>	xgc: yeah, you don't tell them that. a contract would work too
<njcomsec>	houses in london cost about £700k
<generalvagueness>	in most of the first world, or at least most of america, they don't
<rumpledelf>	gladiator: actually i do
<generalvagueness>	not directly, anyway
<aewffwea>	wansyth: house m.d. costed about 1000k per episode
<gladiator>	you need to save up
<vendu>	hmm
<vendu>	:)
<rumpledelf>	gladiator: i am not waiting *that* long
<njcomsec>	in cities houses are expensive
<gladiator>	well there are different types of houses
<gladiator>	if you want a mansion
<njcomsec>	in rural areas they are 10 times cheaper
<wansyth>	people shouldn't have to be indebted forever to banks to live.
<gladiator>	that's different
<xgc>	rumpledelf: it almost lounds like you plan to quit after getting the loan.  how would that work financially?
<aewffwea>	gladiator: maybe you want a mill-house: http://www.craftster.org/pictures/data/500/medium/millhouse.jpg
<gladiator>	dog house
<gladiator>	:)
<rumpledelf>	xgc: the idea would be to get somewhere worth staying at. i had an interview a bit over a week ago at somewhere ideal but they're still interviewing
<gladiator>	rumpledelf: you need to save up
<gladiator>	end of story
<rumpledelf>	gladiator: it takes too long to save cash for a house
<gladiator>	unpaid mortgages means you may lose what you could be saving too
<aewffwea>	rumpledelf: that's why you should rob a bank
<gladiator>	it doesn't take long
<rumpledelf>	it takes a long time.
<gladiator>	4 yrs time. x 50k
<gladiator>	200k
<rumpledelf>	that's only 200k
<gladiator>	so is that not enough to buy a house
<rumpledelf>	where do you get the other 600k from?
<rumpledelf>	hell no
<gladiator>	what house do u want
<vendu>	one should make at least a mill in 4 years ;)
<gladiator>	a mansion in las vegas
<rumpledelf>	also, 50k is more like 40k after tax, and i pay 30k rent
<rumpledelf>	so could probably save $500 a year on a $50k salary
<wansyth>	it's called a down payment too.
<gladiator>	then move somewhere cheaper
<gladiator>	move to italy, spain
<gladiator>	buy a house for 170k
<njcomsec>	move to romania
<gladiator>	llol
<rumpledelf>	i moved from somewhere cheaper to here. i like it here.
<gladiator>	lol @ romania
<gladiator>	i want a house in mars
<vendu>	njcomsec, if i ever hit millions, i'll get a mansion from transylvania :)
<vendu>	even a castle :p
<njcomsec>	or move to chernobyl, house there is free
<gladiator>	rofl
<gladiator>	poland
<rumpledelf>	castles in europe can be pretty damn cheap actually
<gladiator>	u look polish, rumpledelf
<gladiator>	:)
<vendu>	rumpledelf, indeed :)
<xgc>	rumpledelf: move to baltimore.  they have property they can't give away.
<gladiator>	haha
<wansyth>	detroit
<vendu>	it's too bad the good ol' dracula castle is no more :(
<gladiator>	haha
<vendu>	but there'd be other interesting spots probably open for restoration work :)
<gladiator>	move to uk, outside london
<wansyth>	buy a house for $1 in detroit
<vendu>	gladiator, i'd rather build my own castle in finland :)
<gladiator>	sweden is cool
<vendu>	yeah but finland's even cooler than sweden :)
<vendu>	:p
<gladiator>	nothing beats swedish grls
<gladiator>	haha
<vendu>	i dunno, toking up and coding is pretty cool... don't always need a woman around =)
<xgc>	there's a bad joke to follow that.
<vendu>	xgc, nah :)
<gladiator>	http://www.rightmove.co.uk/overseas-property/property-47599306.html/svr/1715;jsessionid=bf05d0a21aa93e28481b754fb8d75e12
<njcomsec>	vendu im about to toke up now))
<gladiator>	australia - 1/34 poole street, bowen 4805
<gladiator>	£187,697
<gladiator>	save up for 2 yrs. and buy that
<vendu>	njcomsec, :)
<vendu>	njcomsec, i have for today :p
<technodrome>	good day
<gladiator>	rumpledelf: buy a cheap house and rent it
<gladiator>	make it your business
<gladiator>	lol @ technodrome
<gladiator>	lol
<pyon>	technodrome: it was good... then you came (jk)
<pyon>	jk
<gladiator>	splinter
<gladiator>	lol
<vendu>	hmm what? the internet says bran castle is kicking and for sale? :)
<gladiator>	rumpledelf: then come live with me, comply to all my requests. and we can live in a mansion lmao
<gladiator>	splendid
<vendu>	http://www.bran-castle.com/gallery-castle.html
<gladiator>	splinter
<gladiator>	lol
<vendu>	this is the kind of place i'd want to live :)
<aewffwea>	gladiator: i seriously hope rumpledelf is a big muscular man, and you get the surprise of your life
<gladiator>	haha
<gladiator>	splendid
<bmm>	lol
<gladiator>	lol
<vendu>	http://www.scrapbookpages.com/eaglesnest/exterior.html
<gladiator>	http://www.bran-castle.com/gallery-castle.html
<gladiator>	wtf
<gladiator>	even if u paid me, i wouldn't want to stay there
<gladiator>	https://www.google.com/search?q=las+vegas+house&biw=1024&bih=633&source=lnms&tbm=isch&sa=x&ei=ekngvyq6eikjsahpxydyaq&ved=0cayq_auoaq
<vendu>	hey again :)
<gladiator>	hi
<gladiator>	:)
<vendu>	hey gladiator =)
<gladiator>	vendu: are u gona help me with that bash script
<gladiator>	lol
<vendu>	hehe
<vendu>	i'm too sleepy to work on any code :)
<o0elise0o>	https://www.youtube.com/watch?v=2x93u3antco
<vendu>	good night folks :)
<bmm>	good night vendu
<gladiator>	are u off to sleep
<gladiator>	vendu
<vendu>	good night bmm, gladiator, all of you :)
<gladiator>	peace
<vendu>	yeah, i'm off to bed for tonight %)
<vendu>	cya :)
<gladiator>	4 shizzle ma nizzle
<gladiator>	sleep tight
<gladiator>	lol
<vendu>	hmm
<vendu>	i wonder if i should make a little more coffee :)
<winny>	yes
<vendu>	hmm
<winny>	no is never an answer to that contemplation :^)
<gladiator>	black or white sugar?
<vendu>	i think i'm gonna nap :)
<winny>	brown, bruv
<gladiator>	nappy nappy time
<vendu>	gladiator, white, no sugar :)
<winny>	(i prefer my coffee black but yes)
<vendu>	i'm gonna make coffee and get baked the first thing in the morning :)
<gladiator>	..........................
<gladiator>	how do you like your eggs in the morning?
<gladiator>	fertilized ?
<winny>	yes
<njcomsec>	i wonder what a half chicken half human hybrid would look like
<gladiator>	like barney from the flintstones
<gladiator>	haha
<njcomsec>	lo
<njcomsec>	l
<gladiator>	wilma flintstone
<gladiator>	https://www.youtube.com/watch?v=dptmrtog__y
<winny>	oh my god thank you gladiator
<gladiator>	haha
<gladiator>	for what though?
<puddlejumper>	i bought a wiiu
<gladiator>	haha
<gladiator>	yabba dabba doo
<gladiator>	https://www.youtube.com/watch?v=m_h3zravgts&list=plzoq4fb3jrzkvt5mzmgimkaytoppisg8k
<gladiator>	lol
<gladiator>	hey abbot!!
<gladiator>	i need prozac
<gladiator>	!
<gladiator>	help!
<gladiator>	lol
<rumpledelf>	vendu: your mornings sound better than mine. i'm procrastinating travelling in peak hour, then i have a meeting :(
<njcomsec>	i hate travelling in rush hour
<rumpledelf>	that whole standing jammed up against 20 strangers on a train ftl
<puddlejumper>	rumpledelf: that sounds shitty
<puddlejumper>	although i have classes all day tomorrow so i have to be around people all day :(
<madmallard>	why is ui so boring
<technodrome>	what are you guys up to?
<denommus>	madmallard: because people don't approach it in interesting ways
<njcomsec>	a poor workman blames his tools.
<nottapesahc>	im having trouble with forming a socket connection. i have two threads, a server thread and a client thread. the server thread is able to get the input stream, and receive messages from the client thread. the client thread is able to get the output stream, and send messages to the server thread. the problem is that i have one way communication. whenever i try to get the output stream in the server thread, th
<nottapesahc>	e program bogs down, and the same for if i try to get the input stream for the client thread. why could this be?
<denommus>	njcomsec: a crafter will look for better tools
<njcomsec>	a crafter makes his own tools
<denommus>	with tools
<denommus>	good tools
<sten_shi_>	how to use this site?
<pyon>	njcomsec: do flesh craftsmen (aka "swordsmen") make their own flesh-carving tools?
<puddlejumper>	a true crafter uses visual studio
<pyon>	puddlejumper: ikr
<sbrg>	sten_shi_: hmm?
<gune>	hey guys. i have a matrix(think space delimitered csv file) at 1900x187000 in size(5.9gb). i need to reverse it, so that it becomes 187000x1900, what is the best way to do it in c++? they way i currently have it figured out is i append to a temporary file, 1 entry each per the y axis, that'll take long though.
<gagabone>	not even total commander can fucking delete my files...
<gagabone>	"source path too long" appears in total commander too.
<gagabone>	what bs.
<gagabone>	it just won't let me delete the goddamn dir.
<gagabone>	by any means at all.
<gagabone>	because somehow, some file or dir inside of it is "too long".
<gagabone>	don't ask me how it could possibly be there, and obviously created somehow, yet still be too long.
<gagabone>	it's not even long.
<puddlejumper>	christ this wiiu update takes longer than windows update :\
<pyon>	gune: what exactly does each matrix entry contain?
<gagabone>	probably actually means that it contains some sort of fancy char.
<twipply>	puddlejumper, sg:a ?
<puddlejumper>	jk at least wiiu update finishes without crashing
<puddlejumper>	twipply: yep ;)
<someoneigna>	gagabone, you have to mantain routes at less than 256 characters.
<gune>	pyon: an int, around 7 digits in size
<gagabone>	someoneigna: what?
<gagabone>	the full path cannot be more than 256 chars?!
<gagabone>	that cannot be true.
<puddlejumper>	i love it when nerds recognize my nick :d
<someoneigna>	gagabone, just rename folders and files from deepest to single chars to make the route smaller.
<gune>	pyon: too big to load into memory, i need to read it along the y axis, so i figured the best way would be to reverse the matrix first, then just use normal line parsing on it
<gagabone>	someoneigna: yes, that isn't horrible at all.
<twipply>	well, i was watching sg:a not 20 minutes ago, so i had the advantage.
<pyon>	gune: is it represented as an actual int (4 bytes in size), or as a sequence of characters (varies between 1 and 7 bytes)?
<gagabone>	also, the files don't let me rename them.
<puddlejumper>	twipply: first time watching?
<gagabone>	because they are "too long"...
<gune>	pyon: oh just numbers, ie. "4749358 4857638 3948573 3959375" etc
<twipply>	puddlejumper, well, no, i've seen countless episodes over the years, but i've never done a full watch through.
<pyon>	:-|
<twipply>	puddlejumper, i've got up to season 8 of sg1 and am now watching the sga episodes too
<someoneigna>	i'm on a nightmare right now, i have to swap a game textures from 480p to 768p, but the code is awful and the only way to do this is to scale every sprite. but the code is so awful there is no single point of sprite creation to set size only once.
<twipply>	it was unfortunate, 'cus after 150+ episodes of sg1 i hadn't found one i haven't seen before
<puddlejumper>	twipply: cool, i think season 7 was one of my favorites
<sbrg>	gune: do you have ram to load the whole file in ram?
<puddlejumper>	things go downhill after season 8
<someoneigna>	pretty much i have to do this for monday. already seeing suicide as a possibility haha.
<gune>	sbrg: i do not im afraid
<twipply>	puddlejumper, once vala makes an appearance i'm turning off
<puddlejumper>	lol why ?
<hotcoder>	hey puddlejumper  <3
<twipply>	'cus that bitch is annoying
<hotcoder>	whats up my brother
<someoneigna>	gagabone, boot with linux, fix them there. then restart to windows.
<puddlejumper>	hotcoder: hello
<puddlejumper>	twipply: what did you think of universe?
<twipply>	i've only seen a half dozen episodes, but i actually quite liked it
<twipply>	i don't understand the universal (hue) hate for it
<twipply>	maybe i will after i've seen the rest of the episodes
<hotcoder>	whats up
<gune>	sbrg, pyon: any way to do it without increasing the processing time per each row cycle you think? if i use temporary files it'll steadily grow and increase in load time
<gune>	im trying it on a more powerful computer now
<blaziken311>	are any of you taking the ap comp sci exam this week?
<twipply>	so i'm trying to find out if a line intersects with a polygon in 3d space, which seems to be fairly simple if you have the coordinates, but i don't: http://i.imgur.com/uq31zdy.png
<twipply>	i have the coordinates for the shape of course, but that's before a rotation around the z axis is applied
<twipply>	so i don't have its final coordinates
<sbrg>	gune: not really sure. i'm sure there are some smart ways to do this, but i would probably do something with temporary files as well
<twipply>	i could switch over to global coordinates rather than relative ones (to the stem of the tree)
<twipply>	but that just feels painful
<blaziken311>	https://i.imgur.com/cmhcmin.png is there a way to approach this problem without generating random values?
<gagabone>	someoneigna: that's much easier said than done, insane, and also very annoying because these disks are truecrypted.
<sbrg>	blaziken311: yes. boolean algebra.
<sbrg>	you can reduce them
<blaziken311>	boolean algebra? where do i learn that?
<blaziken311>	perhaps, i'll just google it...
<gune>	sbrg: yea, im afraid i cant think of a better way. there's no way to read a csv in reverse without having to traverse along the x axis on each row change is there?
<sbrg>	that's a start. but you normally see boolean algebra in introductory discrete math courses
<sbrg>	gune: you could, in theory, manually change the offset and jump around in the file as you want. however, due to disk seek times(unless you have an ssd) this will be painfully slow, and if the file isn't completely uniformly sized, it will be impossible for you to calculate the file offsets correctly without doing a lot of reads as well
<someoneigna>	gagabone, http://corz.org/windows/software/accessories/long-path-fixer-for-windows.php
<sbrg>	blaziken311: oh, sorry -- i didn't even see the "integer values" part
<gune>	sbrg: yea thought it as well, treating it as pure text and using a formula to calculate the next value, then using seekp(), but they are distances, so they'll vary in size
<blaziken311>	sbrg: oh shiet
<sbrg>	at any rate, you can still attempt to simplify the expressions
<blaziken311>	i'll just substitute in that case
<someoneigna>	gagabone, you could try using extended paths: "\\?\d:\very long path" https://msdn.microsoft.com/en-us/library/aa365247%28vs.85%29.aspx
<vdamewood>	hi, people.
<gune>	sbrg: if my code for reversing this thing is wrong and i find out when im done im gonna be so pissed, lol
<sbrg>	gune: lol
<sbrg>	test on a smaller example
<gune>	did, worked, just saying though
<gune>	lol
<sbrg>	test on a lot of them
<sbrg>	generate a bunch of random examples and test
<_blizzy_>	well, i made this https://careers.stackoverflow.com/blizzard
<gune>	sbrg: running it now, we'll see if it works
<gune>	sbrg: a bit overkill, but i could make it "fill" the values that miss numbers, so that they all become x amount in size, then do the reverse based on a formula, then remove the fillers.
<_blizzy_>	my so career page looks like shit.
<wagonboi>	"i also am a gamer, but programming comes first." non sequitur
<_blizzy_>	oh
<_blizzy_>	thxs for that cathc.
<_blizzy_>	*catch
<wagonboi>	np
<_blizzy_>	i have 0 experience, so i look bad from the start.
<wagonboi>	i think you are doing great
<_blizzy_>	thanks. :)
<_blizzy_>	hmm
<_blizzy_>	i wanna make something in scala
<_blizzy_>	but what
<[franklin]>	a c compiler?
<_blizzy_>	something someone without c knowledge
<_blizzy_>	it's going to use the play framework
<_blizzy_>	so a mvc idea
<hisial>	in ruby, is there a way to delete elements from an array starting at an index?
<hisial>	example, suppose i have an array of 10,000 elements, and i want to perform a check on all elements from index 9000 onward and delete those elements that match a condition. is there a way to do this?
<hisial>	say my array name is the_array. will the_array[start_value..end_value].delete_if {condition} work?
<_blizzy_>	hisial,
<_blizzy_>	if i have a = [1,2,3,4]
<_blizzy_>	then a[1..-1] is [2,3,4]
<_blizzy_>	i can then do a[1..-1].delete_if { |x| x > 1 }
<_blizzy_>	so yes, you can do that.
<hisial>	 _blizzy_ but how do i modify the array in place? can i?
<hisial>	oh, i gues i can just reassign to my array the start of the array and the newly selected elements
<codehalp>	could someone tell me how i could print the decimal value of a char array?
<codehalp>	in c^
<xgc>	codehalp: what does that mean?
<pyon>	codehalp: what do you mean by "the decimal value of a char array"?
<codehalp>	i'm readin in bytes in a file and my buffer is a char array
<xgc>	codehalp: what does that have to do with a decimal?
<codehalp>	i want to get what the value is as a decimal
<pyon>	codehalp: what exactly does this file contain?
<codehalp>	it's a simulation of ipv4 packet headers
<xgc>	codehalp: what does each byte represent and in which order?
<codehalp>	it says the file is written in binary
<codehalp>	xgc: what do you mean?
<xgc>	codehalp: all data in computers you use is binary.
<_blizzy_>	but
<_blizzy_>	is binary written in binary
<codehalp>	xgc: yes, the assignment just says "the file is binary"
<_blizzy_>	that's the questions we should be asking.
<_blizzy_>	you don goofed.
<_blizzy_>	you said assignment.
<codehalp>	i'm not allowed to get help on a certain part of an assignment..?
<xgc>	codehalp: the assignment is incomplete unless you are given the exact format of the stored data.
<_blizzy_>	codehalp, some people will choose not to help
<_blizzy_>	if they know it's homework.
<codehalp>	xgc: oh well yeah it has the format. for example, the first byte contains the version and ihl (since each field is 4 bits)
<xgc>	codehalp: find out what assumptions you are expected to make about that data.  so far, you've not provided enough detail.
<xgc>	codehalp: what does the array contain, exactly?
<xgc>	codehalp: a char in c is not 4 bits.
<codehalp>	xgc: hex characters i guess? i don't know it doesn't say. the file itself is gibberish and some characters don't display
<xgc>	codehalp: a char in c is 1 byte.
<hisial>	will someone please review this method for finding primes, written in ruby for me?  http://pastebin.com/v4vftglb
<codehalp>	xgc: yes i know. that's why i said the version and ihl are in the first byte, first 4 bits for the version and 4 for the ihl.
<xgc>	codehalp: that's the first step.  you need to find out what the file contains, exactly.  guessing isn't good enough.
<codehalp>	xgc: do you know how i could do that? so far i'm just going by the hexdump
<xgc>	codehalp: typically, you deal with bytes in c.  find the struction that represents the ipv4 header.  that will tell you, assuming that's really what you wanted.
<xgc>	structure
<codehalp>	yeah i know the structure, it is given to me. i just need to figure out how to print the decimal of a value greater than one byte. i know how to print the one byte ones by doing printf("%x",array[i] & 0xff)
<codehalp>	i'm just having trouble doing it with multiple bytes xgc
<xgc>	codehalp: the key is knowing the byte order.  do you know that?
<codehalp>	xgc: yes
<xgc>	codehalp: and?
<codehalp>	xgc: it's in big endian order
<xgc>	codehalp: also, you need to know the nuber of bytes.
<xgc>	number
<codehalp>	xgc, yeah for one field it is 2 bytes. so 2 spots in my array
<xgc>	codehalp: well, each byte is, in any system you will care about, 8 bits, which is 2 hex digits.
<codehalp>	right
<xgc>	codehalp: so just print each byte (2 hex digits) in the byte right order.  there's no special calculation.
<xgc>	right byte order  :)
<xgc>	codehalp: you can do it.
<codehalp>	but 0x3c = 60, not 313.
<codehalp>	314*
<codehalp>	i mean 313...ugh
<gune>	g2g, see ya guys, thanks for the tips
<xgc>	codehalp: well, if you just want the base 10 number, use base 10.  %d will do that.
<codehalp>	but how can i get the base 10 of 2 items in an array together is what i'm saying. if i have 0x3c, the base 10 of 3 followed by the base 10 of c isn't the same as the base 10 of 3c
<xgc>	codehalp: if this is an ip4 dotted quad, you don't need to combine the byte values.  you print each separately.
<codehalp>	xgc, no not an ipv4 address. these are from an ipv4 header. so there are parts that are greater than 1 byte
<xgc>	codehalp: ok. then just add and shift to combine the bytes.
<codehalp>	xgc, how? by cocatenating the array?
<xgc>	codehalp: since you;re using c, use an integer type large enough to hold the result.
<codehalp>	xgc, and cocatenate the chars right? i just did that and it seemed to work
<xgc>	codehalp: perfect.
<codehalp>	xgc, thanks! don't know why this was so confusing for me :p
<denommus>	hi
<searchers>	hey all.
<searchers>	i'm learning and i want to code something to search a especif thing in a search field with python.
<searchers>	how can i retrieve the data with python ?
<denommus>	searchers: retrieve the data from where?
<copycat>	hi, can i ask for some help
<copycat>	given a set of nodes i need to find all possible permutations
<copycat>	but i can't think of how to do it in a program
<mike802>	look up recursion
<mike802>	it's a classic
<kahrl>	copycat: c++? use std::next_permutation
<searchers>	foo(bar) and bar(foo). :d
<copycat>	nope, i need to implement it in racket
<copycat>	im a wee bit familiar with recursion, but just the most basic use cases: list eating
<ori_b>	copycat: start by writing it out on paper.
<denommus>	copycat: what do you want? every possible permutation of a list?
<copycat>	yes, every possible permutation
<someoneigna>	searchers, webpage or local program gui?
<denommus>	copycat: look at the haskell implementation as an example http://hackage.haskell.org/package/base-4.8.0.0/docs/src/data-oldlist.html#permutations
<copycat>	denommus: thanks for the link, but i don't know haskell
<copycat>	anyway, mentioning recursion helped me to find a relevant link on so
<copycat>	i will do that, and get back to you guys if i still can't solve it
<copycat>	thanks
<ori_b>	copycat: basically, permutations are similar to counting, although in a mixed radix number system :)
<ori_b>	(each subsequent digit has the numbers selected from a set that excludes the previously picked values.)
<dysoco>	what's a good windows software that does uml modelling? i just need some basic tools for like classes with properties, attributes and arrows between them
<`\\\`>	ms paint is legit
<dysoco>	lol
<ori_b>	huh, people still use uml? weird.
<dysoco>	i'm trying argouml but i'd rather use a pen and paper given how cumbersome it is
<ori_b>	i thought the usual was visio, though.
<dysoco>	i mean not standarized uml or anything, i just wanna plot a bit my class relationships
<dysoco>	yeah but visio is ms office stuff... i'd rather not touch that
<dysoco>	there's dia but i can't remember if it does class relationships and that stuff
<ori_b>	heh, i don't think i've ever seen uml out in the wild in the last decade or so.
<dysoco>	i think it's more basic shapes
<dysoco>	uh weird, i mean, basically every book on software engineering has some plots here and there
<ori_b>	which books?
<dysoco>	uh... all of them? game engine architecture for example
<kahrl>	i remember using metapost/metauml for doing class diagrams for a programming class ages ago
<ori_b>	heh; clearly not all of them :)
<kahrl>	that was quite the pain but still better than ms office, probably :p
<ori_b>	although, i don't think i've gone for more than a handful of books on engineering specificially.
<dysoco>	oh i found how to edit properties and stuff with dia
<dysoco>	i guess i'll use this
<searchers>	damn, i will sleep, tomorrow i keep trying, see ya.
<searchers>	gn all.
<gentilhomme>	anyone has a good resource on networking for beginners?
<neochronomo>	does anyone know if there's a good channel for like.. cryptography?
<woggle>	neochronomo: ##crypto
<neochronomo>	woggle: cool, thanks :) tried #cryptography and couldn't think of anything else
<ori_b>	gentilhomme: any specific topics in networking?
<someoneigna>	gentilhomme, as in low level socket handling?
<ori_b>	http://beej.us/guide/bgnet/ is a classic
<someoneigna>	ori_b, +1 was going to post the same link.
<ori_b>	http://www.tcpipguide.com/ is a decent description of the protocols.
<gentilhomme>	i have no knowledge in networking, but my job is going to make me work closer to the it guys so i want to know what im talking about
<ori_b>	gentilhomme: ...networking is a huge topic.
<gentilhomme>	like different protocols, network architecture...
<ori_b>	you'll need these as you navigate the rabbit hole.
<ori_b>	(the second link i posted is a good starting point.)
<ori_b>	(well, better starting point.)
<gentilhomme>	not really from a programming perspective, but more from general/architecture side
<gentilhomme>	lol thanks ori_b
<aewffwea>	gentilhomme: read tanenbaums book
<hideseek>	how to extract youtube id using python ?
<`\\\`>	hideseek, how do you do it without python?
<hideseek>	i have python '
<gentilhomme>	ok i will start by reading this book. it's not like outdated?
<myrl-chan>	ori_b: i like beej. :d
<ori_b>	one of these days i should start writing up the crud i'm learning on my website
<ori_b>	instead of just putting it into myrddin's libstd...
<myrl-chan>	ori_b: then i realized i hate programming. lol.
<myrl-chan>	i hate network programming*
<ori_b>	myrl-chan: eh, the socket api is complete shit.
<myrl-chan>	ori_b: more or less what gave me traumas in network programming.
<myrl-chan>	(the socket api)
<myrl-chan>	"okay, so you need to make a hello world program? here's at least 100 lines."
<ori_b>	int fd = dial("tcp!eigenstate.org!80", nil, nil, nil); read(fd, buf, sizeof buf)
<ori_b>	^-- yep; that's it.
<myrl-chan>	i also don't understand what "connecting" really means now.
<ori_b>	myrl-chan: depends on the protocol.
<myrl-chan>	i understand that udp and tcp are fundamentally different, with udp leaning more on being "raw"
<ori_b>	myrl-chan: for tcp, it means doign the standard syn/syn-ack/ack handshake.
<ori_b>	for udp, it basically means figuring out what the ip/port/... for the remote machine is.
<ori_b>	myrl-chan: http://man.aiju.de/2/dial <-- plan 9 networking apis.
<ori_b>	and a couple of complete examples at the end.
<toccatanfugue>	could someone help me understand what's going on with this c code? http://hastebin.com/iloguqohis.rb
<toccatanfugue>	i'm quite unclear on waitpid
<planckwalk>	i don't recall anything about the exact details of c/posix memory model and process semantics :-/
<pyon>	holy shit, wtf is this code?
<planckwalk>	i'm guessing academic example
<planckwalk>	just at a first glance, i'm not sure any of those outputs are legal
<toccatanfugue>	d:
<planckwalk>	all of the printfs output a digit followed by a space
<planckwalk>	none of the sample outputs have any spaces
<toccatanfugue>	that's the first thing i noticed
<toccatanfugue>	but i'm assuming that's just a typo
<toccatanfugue>	3 typos...
<myrl-chan>	youtube fucking comments.
<myrl-chan>	"yes, i readed the bug report and now i understand the problem. but it would be easy for mojang to fix this: make the image itself encoded in base64 (no more ddos) and limit it to 16x16 (no more crashes)."
<myrl-chan>	encode everything in base 64! :d
<pyon>	myrl-chan: ikr, awesome
<pyon>	myrl-chan: sooo not wasteful
<myrl-chan>	i don't even know networking, but i'm pretty sure b64 is not a ddos prevention device.
<planckwalk>	it could be in suitably twisted cisumstances, but almost always isn't :-)
<myrl-chan>	not only that, i think laymen have reduced "ddos" to simply "dos".
<inphase>	toccatanfugue: the fork command returns 0 for the child process, and the pid of the child process to the parent.  so the return value of fork splits the parent and child execution path.  the waitpid waits until the child process for the first child exits (which may occur before its own children exit, since there's a second fork.)
<toccatanfugue>	inphase: would you be able to walk me through that example?
<inphase>	toccatanfugue: as for what the correct output is, it's basically a race condition.  it would be painfully annoying to trace through all the possible race variations, but it looks like it might be any of the outputs that are possible (if we ignore the space error).
<myrl-chan>	...
<myrl-chan>	my brain hurts.
<myrl-chan>	i'd say 2{5|3}2{5|3}
<myrl-chan>	such as this one. `235253`
<myrl-chan>	and this is why i don't like concurrency.
<toccatanfugue>	you guys think it'd help if you were to draw it?
<pyon>	myrl-chan: you mean (2(35|53)){2} ?
<myrl-chan>	pyon: yeah.
<toccatanfugue>	http://flockdraw.com/fcomcu
<myrl-chan>	pyon: wait, what's {2}?
<inphase>	toccatanfugue: wait, no, none of those outputs are possible.
<inphase>	toccatanfugue: it must always output 8 numbers.
<myrl-chan>	inphase: wat.
<inphase>	i took the crazy approach of running it.
<pyon>	myrl-chan: it means 2(35|53)2(35|53).
<myrl-chan>	pyon: ah, yes.
<myrl-chan>	inphase: oh, i see the problem.
<pyon>	when i couldn't find good anime, i started reading manga instead. now i can't find good manga either, and i *still* can't find good anime. this is so annoying.
<pyon>	and i have to wait 3 weeks until the books i bought arrive.
<denommus>	pyon: have you watched marco polo or daredevil?
<denommus>	pyon: they're awesome
<myrl-chan>	pyon: i know exactly what you mean.
<myrl-chan>	pyon: most animu are boring. :|
<denommus>	it's not anime, but maybe it helps you while you don't find it
<pyon>	denommus: ok, checking.
<myrl-chan>	i ran it, and i'm so confused now.
<myrl-chan>	how the fuck is it outputing 2 4 times, when you only forked at 2 once?
<inphase>	myrl-chan: yes...  i'm also a little confused.
<inphase>	let me think about this.
<toccatanfugue>	myrl-chan: are you on the flockdraw as well?
<myrl-chan>	flockdraw?
<toccatanfugue>	http://flockdraw.com/fcomcu
<myrl-chan>	i'm getting desperate, i'm turning on my vm.
<myrl-chan>	you should be privilaged!
<myrl-chan>	feel*
<inphase>	myrl-chan: each pid is calling the first printf twice.
<myrl-chan>	inphase: why would it? .-.
<inphase>	myrl-chan: i'm mystified for the moment.
<toccatanfugue>	hm, why wouldn't 23 23 55 work?
<toccatanfugue>	dasit
<myrl-chan>	toccatanfugue: that should also work..
<ori_b>	toccatanfugue: waitpid just waits for a process to exit.
<inphase>	myrl-chan: hopefully in the morning i will be able to blame the confusion on the late hour.  this program is not very long...
<toccatanfugue>	23, exit, 23, exit, then 55's
<ori_b>	ok, so.. let's see. parent process waits for pid on line 3
<ori_b>	child process prints 2, then fokrs
<ori_b>	...acutally, technically, none of the outputs are legal.
<inphase>	http://ideone.com/0pfaun  <--  i added pid outputs to that first printf.
<ori_b>	they're all missing the spaces from the printfs.
<toccatanfugue>	yeah we assumed those are typos for now
<myrl-chan>	i tried without forking...
<myrl-chan>	it output 2 twice.
<myrl-chan>	fucking what.
<inphase>	myrl-chan: right...
<inphase>	myrl-chan: i did the same.
<myrl-chan>	apparently, the second fork is ressuming at the wrong place?
<myrl-chan>	i think we have to fucknig flush the buffer.
<ori_b>	myrl-chan: well, it will output a '2' twice because of the waitpid.
<inphase>	myrl-chan: oh....
<inphase>	myrl-chan: the buffer is being copied.
<inphase>	myrl-chan: good call.
<myrl-chan>	ori_b: i also cleared that.
<myrl-chan>	s/cleared/commented/
<ori_b>	although the yeah.
<inphase>	i suppose i have never tried fork without printing a newline before.
<myrl-chan>	i knew it. lol.
<myrl-chan>	252533.
<ori_b>	there are a number of options, depending on the scheduler.
<myrl-chan>	what ori_b said.
<myrl-chan>	what we do know is that 2 won't be at the last.
<myrl-chan>	it will be either 5 or 3.
<ori_b>	i'd have to scribble out the tree of processes to see the possible interleavings.
<inphase>	now i get 253253
<myrl-chan>	the other thing is that if a 3 is out, it must (?) be followed by a 2.
<toccatanfugue>	ori_b: join here -> http://flockdraw.com/fcomcu
<myrl-chan>	rather, if a 5.
<inphase>	now all the outputs we're getting fit my tree i drew.  the world is sane again.
<myrl-chan>	inphase: i know exactly how you feel. lol.
<myrl-chan>	anyways, that's a pretty nice(ugly) gotcha.
<inphase>	yeah.  :)
<ori_b>	afaik, there's only one valid one from the list; the '5' has to be printed before the second '2'
<inphase>	ori_b: it doesn't actually.
<inphase>	ori_b: only the 3 has to.
<ori_b>	er, wait; did i flip things around?
<inphase>	ori_b: no, i did, nevermind.
<ori_b>	yeah; your first process forks, waits for it's child to exit.
<ori_b>	the child prints "2", forks, prints "5", and exits
<ori_b>	then the parent continues.
<ori_b>	so there could be a '3' interleaved, but there has to be at least 1 '5' before the second '2'
<ori_b>	so i think the last 2 are valid.
<toccatanfugue>	ori_b: i can see 252533
<nickparker>	hi all, i'm fooling around in javafx8's 3d tools, and the mesh rendering is surprisingly nice (quick/responsive to mouse input with boilerplate code), but it's putting triangles in front of each other that shouldn't be. what's the right term for "don't show triangles behind other triangles."? i keep coming back to occlusion and culling, but google's doing poorly for me on those two.
<toccatanfugue>	but how do you get 235253?
<someoneigna>	nickparker, culling
<nickparker>	someoneigna: hmmm, i've scoured javafx8's docs for more culling than "front of face, back of face, or both?" and come up empty, maybe i'll have to implement it myself...
<toccatanfugue>	child prints 2, prints 3, exits (how is the 5 printed now?)
<ori_b>	toccatanfugue: parent forks => pid=2; pid2 prints "2", forks.
<someoneigna>	nickparker, https://docs.oracle.com/javase/8/javafx/api/javafx/scene/shape/cullface.html
<ori_b>	the child of pid2 runs first, prints "3"
<inphase>	so at least one 5 and one 3 must come after the last 2, and there must be a 2*5*2*5* match for every valid sequence.
<nickparker>	someoneigna: yeah, that just lets me set whether triangles are two sided, in effect.
<nickparker>	if i have two triangles, both normal towards camera, one in front of the other, i want the covered up bit of the back one not to show.
<inphase>	from that, only the last two are valid options of the presented five choices.
<nickparker>	default behavior is just to assume the order of the triangles in the array is also order of depth from the camera.
<nickparker>	but that obviously breaks down when the mesh gets complicated, or you move the camera.
<myrl-chan>	ori_b: yeah, the 5 has to be printed before the 2.
<myrl-chan>	ori_b: whether it should be adjacent to each other, is probably unknown.
<ori_b>	hm. yep.
<inphase>	toccatanfugue: and here's the fixed version of the code:  http://ideone.com/nlkvns
<toccatanfugue>	inphase: thanks
<toccatanfugue>	ori_b: thanks
<ori_b>	basically, any topological ordering of {2_1 => 5_1, 2_1 => 3_1, 5_1 => 2_2, 2_2 => 5_2, 2_2 => 3_2} will work.
<ori_b>	where 2_1 is the first thing printed.
<myrl-chan>	2*5*2*5* should probably work.
<ori_b>	http://eigenstate.org/tmp/dep.jpg
<ori_b>	^-- the graph.
<ori_b>	dark circles are fork points, white ones are join points
<ori_b>	top line is always parent.
<ori_b>	edges are labelled with what they print.
<toccatanfugue>	nice
<ori_b>	again, any topological sorting of that graph is valid.
<myrl-chan>	ori_b: is that a whiteboard?
<pyon>	myrl-chan: look at the pen.
<myrl-chan>	pyon: yeah...
<myrl-chan>	pyon:  i was thinking that he either has a huge-ass pen or a small-ass whiteboard. lol
<pyon>	well, it could be a whiteboard that wasn't hung on the wall.
<darkcthulhu>	jrslepak, you around?
<pyon>	s/the/a/
<darkcthulhu>	hi pyon, what's up?
<myrl-chan>	pyon: i see some bezels, so..
<pyon>	darkcthulhu: not much, struggling with cabal-install. you?
<ori_b>	myrl-chan: no, it's a small notebook
<darkcthulhu>	pyon, working on one of the optimizer phases of the fortran compiler. waiting to finish up the semester at this point.
<pyon>	:-o
<ori_b>	i've been considering getting a whiteboard, though.
<pyon>	darkcthulhu: what does this optimization phase do?
<myrl-chan>	ori_b: oh cool. is that a doodle notebook?
<ori_b>	yes; one of the several i have :)
<myrl-chan>	ori_b: do you actually do some doodling? :p
<darkcthulhu>	pyon, this is the one which detects dependencies and then inserts openmp directives to parallelize loops.
<pyon>	ah!
<ori_b>	myrl-chan: yep. slowly learning how to do sketches.
<darkcthulhu>	pyon, not really optimization. but the last step.
<ori_b>	not very good yet, though.
<myrl-chan>	ori_b: how us! :d
<ori_b>	myrl-chan: nah.
<pyon>	darkcthulhu: program transformation, in any case. :-p
<myrl-chan>	ori_b: uguu. :(
<ori_b>	darkcthulhu: huh, that sounds... pretty expensive without some profiling.
<darkcthulhu>	pyon, indeed.
<darkcthulhu>	ori_b, it is in ssa form, and we do simple tests like the gcd test in our case. nothing too fancy.
<ori_b>	darkcthulhu: gcd?
<toccatanfugue>	i have a 15 year mortgage at 2.875%, yet i'm getting mail for a 30 year mortgage at >3.0% what the f
<darkcthulhu>	ori_b, in case of arrays within loops, we just see if there is some flow/output/anti dependencies between iterations by finding solutions to the dependence equation by computing the gcd. if there is no dependence, we insert parallelization directives.
<ori_b>	darkcthulhu: and, i mean that the loop has to be pretty big before parallelizing actually pays.
<darkcthulhu>	http://en.wikipedia.org/wiki/gcd_test
<darkcthulhu>	ori_b, ah.. i misunderstood.
<darkcthulhu>	ori_b, yeah, that is true.
<darkcthulhu>	if the number of iterations is too small, or the loop body isn't large enough, it is definitely better to run it serially. we don't do profiling; it's a research compiler.
<ori_b>	heh, i need to get my language to actually start optimizing.
<ori_b>	but i'll do that once it's self hosting, and has an ssa ir.
<myrl-chan>	hmmm
<darkcthulhu>	ori_b, have you ever dealt with anti-dependences between scalar variables? ssa doesn't seem particularly well suited for it.
<rue_house>	can i take a plain text network app and make it use a secure transport like such as ssh does?
<rue_house>	without lots of pain?
<darkcthulhu>	rue_house, stick a proxy that translates in between on both sides.
<ori_b>	darkcthulhu: nope; although, have you looked at polyhedral representations?
<ori_b>	i've only skimmed the papers years ago, and can't remember a damned thing from them though :p
<rue_house>	i was kina hoping to be able to jab a library into the network read/write calls
<darkcthulhu>	ori_b, i have not seen polyhedral representations. why are they useful?
<rue_house>	looking at it i'm a bit confused
<darkcthulhu>	rue_house, hmm.. both the server and the client are yours?
<ori_b>	darkcthulhu: http://en.wikipedia.org/wiki/polytope_model
<rue_house>	looking at ssh, its encoding, but its still backed with the usual programs
<rue_house>	darkcthulhu, yes
<ori_b>	rue_house: ssh doesn't do any encoding; it just tunnels data.
<rue_house>	ok thats what iw as starting to think
<ori_b>	rue_house: anyways, just use an ssl connection library... openssl works, although it's kind of awful.
<rue_house>	so, i should just be able to poke a library into the calls i'm making
<darkcthulhu>	rue_house, you can have libssh on both sides. it has the parts needed for the server and the client side.
<rue_house>	hm
<ori_b>	really, the way to do it depends on what you need.
<rue_house>	well, its plain text
<rue_house>	right now i use telnet
<rue_house>	can i jab a library into the server end and use ssh?
<sir_galahad_ad>	dun dun dun daaaaaaah
<rue_house>	casue, i get the impression ssh is just telnet with a ssl library
<ori_b>	you can replace telnet with ssh pretty trivially...
<darkcthulhu>	rue_house, yes, you can. you can have the server-end implementing libssh server-side functions and then talk to your server via ssh.
<rue_house>	its my server side that i'm proplexed on then
<rue_house>	i should go look up how to use libssl then
<ori_b>	rue_house: wherever you use telnet, you can probably search/replace with ssh.
<ori_b>	if you're shelling out to it.
<rue_house>	and on the server side i just insert openssl into my calls
<darkcthulhu>	rue_house, https://www.libssh.org/
<rue_house>	:) now if i can just find an example that lets you enter your name and says it back to you...
<darkcthulhu>	ori_b, polytope looks useful. is it meant for complex loops?
<ori_b>	darkcthulhu: as i said, i only vaguely remember it from years ago :)
<darkcthulhu>	it seems like a mathematical framework, much like dataflow and lattices.
<darkcthulhu>	hmm
<ori_b>	darkcthulhu: yes.
<ori_b>	darkcthulhu: used by gcc, by the way.
<ori_b>	https://gcc.gnu.org/wiki/graphite
<ori_b>	but, basically, it's another way of representing data dependencies in loops.
<ori_b>	not sure if it solves all your problems, but it may be worth looking at.
<darkcthulhu>	hmm.. that is interesting. i'll definitely look through it. ty :)
<rue_house>	this is funny, it actaully looks like its easier to do the network io with the ssl library than without it
<ori_b>	rue_house: ssh != ssl
<rue_house>	oh
<ori_b>	http://www.openbsd.org/cgi-bin/man.cgi/openbsd-current/man3/tls_accept_fds.3?query=tls_init&sec=3
<ori_b>	^-- if you want a decent ssl (well, tls) library.
<ori_b>	no idea how portable it is, though.
<myrl-chan>	lol
<myrl-chan>	ori_b: what's tls? :d
<woggle>	myrl-chan: ssl is dead; it's actually tls (and has been for many years)
<rue_house>	there is an example of an ssh remote shell here, and its making complete sense to me
<myrl-chan>	woggle: ah, cool.
<rue_house>	so i'll go with it
<woggle>	myrl-chan: the story is that ssl was netscape's name, and tls is the non-trademarked-ish name ietf used.
<ori_b>	myrl-chan: the new name for ssl.
<myrl-chan>	woggle: i see.
<rue_house>	i thought ssh was only a secure shell app (with lots of bells and whistles on the server)
<rue_house>	so scp ssh sftp are all ssh?
<woggle>	they all use the ssh protocol.
<sir_galahad_ad>	it's true
<rue_house>	ok, this convolution makes sense then
<rue_house>	thanks, i have much learning, i think...
<eric_lagergren>	ssl also refers to an older version of the 'ssl/tls' standard, right?
<eric_lagergren>	like, ssl is 'out of date'
<syzygy>	9.58 e-008 is basically zero right? that's a float error?
<woggle>	yeah, it's ssl 1, ssl 2, ssl 3, tls 1.0, tls 1.1, tls 1.2. tls 1.0 is "3,1" in the ssl/tls handshake because of this, though.
<horny-sama>	ori_b: so you are studying dfa and nfa?
<horny-sama>	i jsut pass that course
<horny-sama>	:p
<woggle>	syzygy: it depends what sort of order of magnitude your inputs had whether that's close to the expected error.
<ori_b>	horny-sama: not so much studying as trying to reinvent lex/yacc for my own purposes.
<horny-sama>	ori_b: ok
<woggle>	syzygy: people usually bound floating point errors in 'units in the last place' of the inputs to some operation (and it varies whether floating point code can even provide reasonable gaurentees of that sort).
<syzygy>	woggle, my input is integers
<ori_b>	syzygy: e-8 is pretty big for a float error.
<planckwalk>	normal for a 32-bit float
<planckwalk>	operating on magnitudes ~1
<syzygy>	alright. then i'll attribute it to that and assume the library i'm using is working correctly
<woggle>	syzygy: for a 32-bit float, 1 ulp when operating on integers is around that order of magnitude.
<woggle>	for a 64-bit float, that's pretty horrible error.
<ori_b>	er, that error depends on the magnitude of the value.
<woggle>	er, when operating on _small_ integers.
<woggle>	note that if you're worried about your library doing something numerically unstable, you likely need to do a bit of work to find test cases where it's bad.
<syzygy>	woggle, it was just a quick look after a first implementation that confused me
<syzygy>	i expected debut output to be rendered, but it wasn't so at first i assumed it's a huge number (exponents scare me for some reason, even though i can deal with them) and rendered out of my view, but obviously that's wrong
<syzygy>	*debut = debug
<ajdfsakljf>	i want to make a 2d game
<ajdfsakljf>	should i build it from scratch or use a game engine
<aewffwea>	ajdfsakljf: engine
<cojabo>	i built a pacman game from scratch once. that was fun. lol
<ajdfsakljf>	which engine should i use
<chishiki>	sdl
<ctrlc>	what language you wanna use?
<ajdfsakljf>	c or c++
<aewffwea>	ajdfsakljf: don't
<ctrlc>	well, that depends on the game.
<ajdfsakljf>	dont use c/c++ or dont use an engine
<ctrlc>	for example: for physics, box2d is good. for graphic: sfml or sdl
<ajdfsakljf>	thanks
<ajdfsakljf>	i want physics
<mike802>	physics is hard
<ctrlc>	sfml is in c++ and sdl in c. i worked with sfml and i liked it.;-)
<ctrlc>	then box2d is for you.:-)
<pyon>	mike802: "physics is hard" --> let's go shopping?
<aawe>	sfml = "satan fucked my life" ?
<myrl-chan>	lol
<pyon>	aawe: yes.
<sloshy>	hi
<sloshy>	i want to print a 2d char array with a double for loop, but i want there to be a space inserted between every char in each row
<sloshy>	how do i do this?
<jeaye>	sloshy: which language?
<sloshy>	c++
<sloshy>	  for(int y = 0; y < height; y++) {
<sloshy>	    for(int x = 0; x < width; x++) {
<sloshy>	      mvaddch(y, x, board[y][x]);
<sloshy>	    }
<sloshy>	  }
<jeaye>	do not paste multiple lines of code in here again.
<sloshy>	here it is
<archilius>	inside the second loop concatenate a space after the char. in the outer one use newline.
<sloshy>	how do i concat a space after the char
<jeaye>	sloshy: just add a space char as well, using the same function call.
<jeaye>	move x along by one more though.
<sloshy>	      mvaddch(y, x, board[y][x]);
<sloshy>	      mvaddch(y, x + 1, ' ');
<sloshy>	like that?
<sloshy>	sorry im very new to c++
<jeaye>	that's a start, but things aren't going to work out properly.
<jeaye>	sloshy: draw it out on paper.
<jeaye>	you're placing a char a y,x but you want to place a char at y,(x + how many spaces on the row so far)
<sloshy>	ah i see
<sloshy>	so mvaddch(y, x+x, char) then
<jeaye>	sloshy: you can work this out. try it and see.
<sloshy>	yeah that works
<vendu>	hey jeaye :)
<jeaye>	o/ vendu
<jeaye>	vendu: anything new going on?
<vendu>	jeaye, not right at the moment, but i did fix some issues in my malloc allocator yesterday :)
<vendu>	the new version now runs ok with video players such as gnome-mplayer :)
<jeaye>	hopefully you wrote some tests for regression checking. ;)
<vendu>	but it doesn't work right with big compilations yet :)
<vendu>	jeaye, i have relatively heavy diagnostics routines for internal data :)
<vendu>	hehee damn my headphone setup sounds good for the price :d
<jeaye>	got new headphones?
<xeno_>	one should never really only consider the price for such... i've had two sets of great speakers... one set was attached to a $400 boombox, the other was part of a $300 pc speaker set from berkeley that i won in a contest...
<vendu>	jeaye, not new, had them for a couple of years or so :)
<xeno_>	my 1 meter tall livingroom speakers are not that great...
<vendu>	jeaya, sennheiser hd-595 :)
<jeaye>	ah.
<jeaye>	i have http://en-us.sennheiser.com/over-ear-headphone-momentum-stereo
<vendu>	:)
<vendu>	senns tend to be good :p
<vendu>	i have a nice little tube amp to drive mine :d
<vendu>	and an external dac :)
<vendu>	usb dac
<xeno_>	*sound
<jeaye>	i had a $20 koss clip-on pair before these sennheisers; they were excellent, for the price.
<vendu>	jeaye, if you want to go budget, you pretty much can't beat the price/quality ratio of koss portapro headphones :)
<vendu>	the model is over quarter a decade old :)
<vendu>	i found a great deal on the senns so i went a bit higher-end :)
<vendu>	xeno, the next ones i'm getting are beyerdynamic dt-990 pro :)
<jeaye>	vendu: yeah, i found these momentums 50% off. different league than the koss i had previously.
<xeno_>	vendu: $190'ish? that's ok if you have them for a while...
<vendu>	jeaye, nice :)
<vendu>	xeno, 190 for what? the senns? :)
<vendu>	i could find koss portapro for perhaps 30-40 euros :)
<xeno_>	vendu: i typically go for cheaper, because i've probably burned through a 2 digit number of headphones (and probably halfway to a 3 digit number of ear plugs) by now...
<xeno_>	vendu: the dt990
<vendu>	i paid about 80 euros on the senns, second hand :)
<vendu>	xeno, oh, i know where to get the beyers for 140-150 euros :)
<mvaenskae>	good headphones? don't forget getting a good soundcard :)
<vendu>	xeno, i always go for quality :)
<vendu>	mvaenskae, got a fine usb dac :p
<vendu>	and a little tube amp :)
<mvaenskae>	i was recommended getting a fiio alpen2 e17k if i wanted something sweet
<mvaenskae>	but that things expensive
<mvaenskae>	xeno_: i went with shure se-215 in-ears
<vendu>	mvaenskae, if you know how to solder or are fine with readily-fabricated units, go for the o2 dac :)
<mvaenskae>	so far they have survived all my torture
<mvaenskae>	i am rather feating the headphone port to die
<vendu>	mvaenskae, http://nwavguy.blogspot.ch/
<mvaenskae>	*fearing
<mvaenskae>	also if the cable dies you can exchange it
<vendu>	mvaenskae, nwavguy is a mythical dude, nobody knows who he is :)
<vendu>	but they assume he's a hard core audio engineer :)
<vendu>	erm, it's odac
<vendu>	o2 is the headphone amp :)
<vendu>	should be very good stuff for the price :)
<mvaenskae>	i will see to reading on the link you posted :)
<vendu>	:)
<naschine>	good morning
<mvaenskae>	i wish that would solve all my sound problems :(
<mvaenskae>	vendu: please write a new audio backend for linux which actually works! everything else is such a hack d:
<vendu>	mvaenskae, i'll see about doing one for zero :)
<pyon>	mvaenskae: the next thing will also be a hack
<mvaenskae>	also have it easier to debug; i have a feeling my soundcard is showing outputs it doesn't physically have d:
<vendu>	hey pyon :)
<mvaenskae>	pyon: we can always make it less of a hack
<pyon>	vendu: hey
<pyon>	sup?
<mvaenskae>	vendu: btw, i found a nice router for myself that runs openwrt :)
<mvaenskae>	vendu: tp-link archer c7v2
<vendu>	:)
<mvaenskae>	it runs very nice with it, no problems so far with it :)
<vendu>	mvaenskae, i still need to figure out some use for my cisco switches
<vendu>	i have 5 catalyst series ones, configurable things :)
<mvaenskae>	vendu: buy cheap sbcs \o/
<vendu>	:)
<mvaenskae>	anyways, gotta go to my university now :) see you guys around
<ams>	morning
<myrl-chan>	ams: moanin.
<ams>	indeed...
<ori_b>	whee, that was easy; nfa generation done; vim indent scripts updated too.
<ori_b>	(considering how much vimscript sucks, vim indent scripts are wonderfully easy to write.)
<ams>	what is a vim indent script?
<ori_b>	a script that handles auto-indentation.
<ams>	examples?
<ori_b>	ie, it's the thing that decides how many tabs or spaces to put in front of a line
<ams>	i am mostly curious how they differ from emacs.
<ori_b>	ams: http://git.eigenstate.org/ori/mc.git/tree/support/vim/indent/myr.vim
<ori_b>	there's a bunch of cleanup i want to do there, but basically, it's just a function that returns the number of spaces of indent.
<ams>	that looks very complicated.
<ori_b>	nothing too special.
<ori_b>	eh, it looks at keywords, and decides if they're indent words, or outdent words, and returns the difference times the tabstop.
<ori_b>	ams: got an emacs example/
<ams>	looking for one that is simple enough ..
<ori_b>	the grammar that i'm indenting there is probably about as complicated as c, for reference.
<ams>	which is immensly complicated.
<ori_b>	c? nontrivial, but not immensely complicated.
<ams>	you are mistaken, it is very hard to get right.
<ori_b>	(although i may be slightly warped by looking at c++ or ada)
<ams>	since you need to parse the language to figure out some things.
<ori_b>	some; mostly knowing what the types are.
<ori_b>	that's just one shared parser/lexer hash table, though.
<ams>	i can't find any simple enough exmaples ..
<ori_b>	it's a hack, but not a *completely* crazy one.
<ams>	in your case, if it is basically c syntax, one would make a derived mode on the c mode
<ori_b>	(compare to c++ disambiguating betwen function defs and constructors)
<ori_b>	ams: it's not c syntax; it's roughly c complexity.
<ams>	ah ok
<ori_b>	http://git.eigenstate.org/ori/mc.git/tree/libregex/interp.myr
<ams>	well, c++-mode  is derived from cc-mode, and java-mode likewise..
<ori_b>	for an example
<ams>	it would maybe be a matter of frobbing it a bit...
<ams>	a bit disapointed though..
<ams>	can't find any simple examples for indentation
<ori_b>	mm; go mode, maybe?
<ams>	usually things work that you have a table of expressions, and indent levels .. and then it just "works"
<ori_b>	(i suspect most of the ones you mentioned would have a huge number of options)
<ams>	yeah, they confuse you a bit...
<ams>	and you have stuff like font-lock and skeletons and compilation bits and what not ..
<ams>	go-mode is 1564 lines ..
<ams>	with coverege support and other cruft
<ams>	(and quite badly written ..)
<ori_b>	ah, vim separates that stuff out.
<ori_b>	the indentation scripts *only* do indentation.
<ams>	nod.
<ori_b>	then there's a highlight script that does only highlighting
<ams>	was just curious anyway..
<ori_b>	that's also pretty ugly, although i don't like coding in rainbows
<ori_b>	so mine's pretty dead simple.
<ams>	sometimes simple is what you need.
<hackal>	hello is there an official equivalent of https://docs.oracle.com/javase/tutorial/ to ios mobile applications? i am looking for some starting point
<ams>	maybe contact oracle or apple and ask them what they consider offical for their own software?
<djhworld>	friends, i need some advice. i've been working in the software industry for over 6 years now, and i do little side projects here and there in my own time, but i'm bored of doing side projects (running out of ideas) and i can't help but feel i'm reinventing the wheel most of the time. like for example recently i've been writing a web crawler so i can get a better understanding of that side of things, but it's nothing new.
<djhworld>	i'm thinking of getting into open source projects, maybe helping out there
<djhworld>	but i have no idea where to start
<ams>	pick one you like, find bugs, fix.
<o0elise0o>	my phone is funny, it had an fm tuner built in but didn't come with an fm tuner app so there was no way to tell
<ams>	djhworld: another tip is to have a infinity project ..
<djhworld>	infinity project?
<frobs>	djhworld: what language you want to use?
<ams>	yeah, one "useless" project you work on just for kicks
<djhworld>	ah.
<djhworld>	frobs: go, java
<djhworld>	i've done a lot of stuff in go, for example my gameboy emulator is probably my "infinity project" but i haven't worked on it in a while (kinda lost interest) https://github.com/djhworld/gomeboycolor
<ams>	seems there is an end to that .. when it can play all games.
<frobs>	djhworld: you can collaborate with https://issues.apache.org/jira/browse/spark/?selectedtab=com.atlassian.jira.jira-projects-plugin:summary-panel for example is a interesting project, with some low-level issues, you will learn a lot
<djhworld>	yeah...maybe i should get back into it. at the same time though i often spend too much time on these things on my own, so kinda feel like i'm missing out learning how others do things.
<djhworld>	frobs: interesting, i do a lot of work with emr/hadoop at work so this would be in line with my currently experience is
<djhworld>	thanks, will check it out!
<ams>	most people have a operating system as a infinity project ..
<ams>	maybe a os for the gameboy
<ams>	?
<djhworld>	haha. good idea!
<djhworld>	i'm gonna do some research...thanks all :d
<ams>	operating systems are fun mostly cause there is alot of nice things to learn..
<ams>	everything from compilers, to editors, to garbage collection, to threading, to process migration ...
<ams>	like you could make a tcp/ip stack or a chaos network stack for it ..
<ams>	have two gameboys play pong over chaos or tcp or udp ...
<ams>	some ai gibberish ..
<djhworld>	haha. or even some plugin architecture or something so people can introduce trainers
<ams>	it is a totally useless project in it self .. but totally useful since you can dig into the details of stuff
<ams>	whatever floats your boat man ..
<frobs>	djhworld: an interesting open source os project https://www.reactos.org/
<djhworld>	nice. interesting idea.
<ams>	djhworld: but if you are more interested in useful things, i'm always looking for people for the gnu network utlities ... it isn't open source, but free software.
<djhworld>	thanks, i'm going to do some research on projects that are out there, i think you're right in the sense that fixing bugs etc is a good start, a way in at least anyway
<rkeu>	hello
<rkeu>	does anyone know any spring framework tutorial that covers more than just the syntax of creating beans and dependency injection?
<aawe>	ams: why not open source?
<ams>	aawe: becasue it misses the point.
<aawe>	why does it "miss the point" to open up to outside contributors
<ams>	https://www.gnu.org/philosophy/open-source-misses-the-point.html
<merijn>	aawe: don't bother arguing with religious free software people
<merijn>	aawe: you're not gonna win vs dogma anyway
<ams>	it is funny that the "open source" people always go into troll mode as soon as someone mentions free software.  one might wonder who the "religious" one is.
<merijn>	i'm not even open source people, i'm a pragmatic "i want software that works, but if it's invariably broken the ability to fix it myself helps" person
<ams>	aawe: make your own judgment.
<merijn>	if that's closed source, so be it. i'd rather use something that works and is closed than something that doesn't and is open
<vendu>	hmm %)
<ams>	it is not about being closed or open, it is about being able to run, study, modify, and distribute.  i have lots of programs that are "closed", i.e. you don't get to access the source code or binaries for them.  but _i_ can still hack on them.
<nikio_>	why is putty and winscp ´network error like´ disconnecting from my server after not using it for 5 minutes : / its very frustrating
<ams>	sounds like your router might be doing something..
<ctrlc>	please don't call those stuff free. open source is the best word.
<abs25>	c++  	bool operator==(const vektor&) const;  what this const at end does?
<ams>	ctrlc: the two have different meanings, different goals and different communities, free software is not the same as open source software.
<ctrlc>	ams: i know what you say. but it is not free anyway. usually they have a lot of limitations. what ever they are, they're not free.
<ams>	what is not free software?
<ams>	free software has a very specific meaning ...
<ams>	https://www.gnu.org/philosophy/free-sw.html
<ctrlc>	you know, like gpl stuff for example.
<ams>	woo... 830 tests!
<ams>	ctrlc: gpl "stuff" is free software.
<ctrlc>	no! "free" has a meaning.
<ams>	yes, see above, that is the meaning, and the gpl falls under that meaninmg.
<ctrlc>	no they are not free. free means without limitations.
<ctrlc>	i read that before.
<ams>	i don't know what "free" means, but i do know what "free software" means, and that is how the gnu project defined it some odd 30+ years ago.
<planckwalk>	that's what the gnu organization want "free" to mean, not what it actually means.
<planckwalk>	or if you want to be chariotable, it's what they mean when they say "free".
<planckwalk>	which may or may not have any relation to what anyone else means.
<ams>	we only say what free software means.
<ams>	not what "free" means.
<rkeu>	abs25, we need to wait a little while they re-invent the wheel
<ams>	we even avoid using the word "free" for things that is not software.
<ctrlc>	that's where you're mistaking. they did not invent freedom so they can define what is free! freedom has it's own meaning. just cause they say this is free doesn't mean it is!
<planckwalk>	"free" is an adjective in general use, "software" is a well-used noun.
<abs25>	 c++   bool operator==(const vektor&) const;  what this const at end does?
<planckwalk>	using the adjective "free" with the noun "software" is a perfectly valid use of english without asking gnu what they mean by it.
<ams>	abs25: please don't repeat.
<ctrlc>	abs25 try #c++
<ams>	kinda proud .. 700+ tests written since friday
<ctrlc>	and which day is today? :-p
<ams>	ctrlc: i don't know, seeing you redefine words and change their meaning completely.
<ctrlc>	haha.
<ams>	free software has a well defined meaning, like open source software.  the two meanings are mostly compatible, but their reasoning differs.  saying that one of them is a  "better" than the other is simply missleading.  what is better is up to the person identifying himself with, not for you to decide, not to mention that the meanings are different.
<ctrlc>	ams: i heard this things like a million time! free has a meaning. it had it's own meaning thousands of years before gnu try to define it! and due to that meaning what ever gnu is, it is not free.
<ams>	weee .. from 30 to 15 failing tests out of my 830!
<ams>	ctrlc: that is a silly argument going nowhere, all words had meaning long before they got repurposed for various purposes, in various situations.
<ctrlc>	it still has it's own meaning!
<ams>	ctrlc: that you are also conflating on purpose the word "free" and "free software" which are not the same is really sad.
<ctrlc>	yes! like free and free man!
<ams>	the meaning of freedom has changed over the centuries you know...
<ams>	but i am not complaning that you are redefining it to not mean what it meant 1000 years ago, words change over the years, and they change depending on the context.
<ctrlc>	doesn' matter! gnu is not free any way. if one day it's meaning changed enough to call someone in jail, "free", then maybe we can call gpl stuff "free software".
<ams>	freedom not so long ago only meant freedom for white males.  so maybe that is what you mean with "free man"
<ams>	ctrlc: i don't know what free means in that context, gnu is certianly free software, since we have defined that term to mean somethin in the context of the gnu project, the free software movement, and various other contexts.
<ams>	maybe we should have picked a more catchy word, maybe a word that would not cause confusion .. but now it is a word firmly cemented and it would do more harm than good to change it
<ctrlc>	that's it! gnu can redefine "water" as "a horse with a horn on his head." but does it change anything? no! water is still what we drink and unicorns stay unicorns!
<ams>	well, in that case .. stop redefining what open means.
<ctrlc>	stays unicorn*
<ams>	you cannot open software, or close it.
<ams>	it isn't a door.
<ctrlc>	open to changes!
<wei2912>	lol
<ams>	ctrlc: you again repurpose the word for something else.
<ams>	ctrlc: stop redefining water to mean a horse!
<ams>	wei2912: yeah ..
<wei2912>	ams: what's this furious debate about
<ctrlc>	the point is we don't redefine! it is what it means.:-)
<ams>	ctrlc: yeah, just like free in the word free software means the freedom to do stuff with the software, like the freedom to study, run, modify and distribute.
<ctrlc>	and if i accept using "open" is redefining, it still doesn't make it free. :-)
<ams>	wei2912: i don't know, ctrlc is being silly cause "free software" doesn't mean what he wants it to mean or something ..
<planckwalk>	the main problem is that "free" wasn't "free" for redefinition.
<planckwalk>	it was already in use.
<ctrlc>	exactly!
<ams>	free was never redefined though.
<ams>	"free software" was defined.
<planckwalk>	free software already meant "software with no purchase cost"
<ams>	not really.
<ctrlc>	yes!
<ams>	not back in the 80s, that was what people would call shareware
<planckwalk>	like every other "free x" where x is a possibly purchasable item.
<ams>	so free can only mean with no cost?
<planckwalk>	yes, back in the 80's.
<ams>	so a free man is a zero cost man?
<ams>	sighs ..
<ams>	11:53 /ignore planckwalk
<ams>	11:53 /ignore ctrlc
<ams>	pointless...
<wei2912>	why the hell are people arguing about such terms
<ams>	no clue.
<wei2912>	can someone enlighten me
<ctrlc>	maybe to stop gnu zombies troll every where?
<ams>	as programmers we define, redefine, and repurpose words for various tasks .. that people are arguing about doing the same in english is beyond me as well.
<aidanh>	ams, sometimes i wonder how long your ignore list is
<wei2912>	lol
<ams>	wei2912: it gets cleaned at midnight.
<wei2912>	ams: ah, explains
<wei2912>	i was just about to suggest that you do so
<aidanh>	ah, that works
<ams>	next thing is that emacs is realy not gnu emacs, but its emacs .. or something..
<ctrlc>	ams ignores aidanh
<merijn>	i just practice ignoring by not reading people, it's good practice for maintaining my composure in person >.>
<ams>	and vi is not really vim, cause whatever..
<aidanh>	ctrlc: :(
<wei2912>	merijn: that's the way it should be
<wei2912>	annoying people on chat are less annoying than annoying people in real life
<aidanh>	wei2912: that's definitely true
<ams>	wei2912: you can hit people in real life, that is fun ...
<wei2912>	the former makes me slightly annoyed, the latter makes me wonder about humanity
<wei2912>	ams: that's reserved for the wilfully ignorant
<merijn>	ams: only fun if you like being charge with assault >.>
<tsumetai>	merijn: hit them harder. :)
<ams>	merijn: if you do it hard enough, and when nobody looking ...
<ams>	tsumetai: :-)
<planckwalk>	i used to work with someone who would troll people in real life.
<planckwalk>	he got fired eventually.
<merijn>	i don't suppose there's anyone expert at c++ template meta programming here? ##c++ doesn't have an answer for my "how do i accomplish something similar to http://lpaste.net/131955 ?" question >.>
<ams>	use lisp.
<merijn>	ams: if i could use something other than c/c++ for gpgpu i wouldn't be having this problem...
<ctrlc>	planckwalk : was he/she a gnu zombie?
<planckwalk>	heh, no.  most of those aren't trolling.
<merijn>	i know how i can do this in like 10 different languages, but none of those help me ..<
<ams>	cl-gpu does somehting related ..
<ams>	(lisp did smid and other fun stuff long before gpu's even existed ... :)
<planckwalk>	this person would deliberately find out what issues annoy various people, and espouse contrary views on those subjects.
<ams>	ecl-compute is a dsl for sse/cuda ..
<ams>	cl-opengl is just a ffi wraper ...
<ams>	merijn: what are you doing anyway?
<merijn>	ams: benchmarking a crap ton of kernels to determine the correlation between input data and implementation performance for irregular algorithms (i.e. graph, in this case) on gpu
<ams>	interesting.
<ams>	work or academia?
<merijn>	it should be, assuming my intuition is right :p
<merijn>	phd student, so academia
<wei2912>	benchmarking seem to be the opposite of interesting
<wei2912>	:p
<wei2912>	seems*
<wei2912>	though i suppose the results are probably interesting
<gedamo>	worth what?
<impaloo>	gedamo: it
<jkbbwr>	worth/easy to learn
<rindolf>	jkbbwr: what do you have to learn about it?
<jkbbwr>	rindolf: how to use it?
<aidanh>	jkbbwr: what do you want to use it for?
<jkbbwr>	emitting compiled code
<jkbbwr>	*machine code
<aidanh>	well, you'd be able to take advantage of the optimization/analysis architecture that llvm already has
<jkbbwr>	i just want to make kiddos first compiler
<jkbbwr>	i have always done interpreted stuff, i want to see the other side of the coin
<ams>	jkbbwr: or do it with gcc: https://github.com/giuseppe/gccbrainfuck
<jkbbwr>	ams: whats the user for?
<ams>	?
<jkbbwr>	oh right it didnt copy
<jkbbwr>	my bad
<biarco>	or you could generate c--
<python111>	if i have some recursion that requires me to check whether some variable (that might have changed now) is equal to its starting value, can i only accomplish that using another parameter?
<ams>	python111: .. could you rephrase that?
<python111>	i have a function in which i have to check if some variable has the same value as its starting value
<gedamo>	"peg-based transformer provides front-, middle and back-end stages in a simple compiler" http://www.vpri.org/pdf/tr2010003_peg.pdf
<python111>	this function is recursive...
<ams>	python111: the problem being?
<rindolf>	python111: it could be a global or outer-scope variable.
<biarco>	python111: i assume your talking about python
<python111>	rindolf, cant do that
<python111>	biarco, c
<rindolf>	python111: ok, then use another parameter.
<biarco>	python111: okay,,,
<rindolf>	http://www.reddit.com/r/programming/comments/34ryql/pony_high_performance_actor_programming/ - another day, another language.
<tsumetai>	python111: you could use a static variable, also.
<python111>	yeah can't do that
<python111>	another parameter is fine...
<python111>	my algorithm is probably "lazy" but i can't figure out how else to solve
<rindolf>	python111: is this homework?
<python111>	no
<rindolf>	python111: then why can't you use a global variable?
<aidanh>	jkbbwr: if you want to learn more about compilers, you might find that llvm does most of the work for you
<python111>	because that's just too lazy
<rindolf>	python111: lazy?
<biarco>	i think he's trying to reach some superstate of programming
<python111>	kek
<python111>	i'm just learning man, global variables feel like cheating
<aidanh>	python111: does python support closures? that seems an easy way to solve it
<python111>	aidanh, idk, never programmed in python
<python111>	lol
<aidanh>	python111: well, the easiest and simplest way is to just pass it as another parameter
<aidanh>	python111: turns out they do; so you can define your recursive function within another wrapper function, and then access local variables within the wrapper function's scope
<aidanh>	as opposed to passing an extra parameter
<python111>	aidanh, i'm not and have never programmed anything in python. i'm doing this in c
<rindolf>	python111: you can also pass in a struct pointer.
<aidanh>	python111: oh... i don't know why i thought that then.. :p
<tsumetai>	or a pointer into an array.
<aidanh>	the cleanest way of solving it would be using an extra parameter
<tsumetai>	it's too simple! he won't learning anything!
<aidanh>	or perhaps convert your recursive function to a loop
<python111>	aidanh, i'm trying to do the opposite
<gune>	hey guys. in c++, is there any way for me to open a file, and add to a line in middle(not replace, add to), without the use of temporary files?
<planckwalk>	gune: not without a lot of bother.
<gedamo>	any way? yes
<aidanh>	python111: converting a loop to a recursive function?
<python111>	yes aidanh
<gedamo>	you'd have to shuffle the data down
<gune>	planckwalk: i see, i have this 5gb matrix file(space delimitered csv file), and i need to reverse the x and y axis. know any easy way of doing that?
<aidanh>	gune: is it just one matrix? how many rows/columns?
<planckwalk>	read in memory, write back out to a new file
<gune>	aidanh: its a file with 187000x1900
<gune>	planckwalk: cant, cannot allocate that much
<aidanh>	gune: do it in place then
<gune>	planckwalk: the best way i can think of without using too many temp files is to insert fake characters so that all entries are uniform in lenght, and then use a formula to calculate the offset position of the value i want, then print that in a new file.
<aidanh>	transpose the first row and first column, then the second row and second column...
<aidanh>	wait, reverse as in, swap the axes?
<aidanh>	independantly?
<planckwalk>	gune: i'd rather do striped reads and sequential writes, but there are cleverer ways to do it.
<planckwalk>	let the os disk cache handle the access pattern :p
<gune>	aidanh: correct, i need to parse it along the y axis for some calculations, and i find no easy way of doing that without it being a ton of reads, so im reversing the axis so that i can parse line by line
<gune>	aidanh: i have a working solution already with use of temp files, read 1 y row, insert into new file, rename/replace, start over. that'll take quite a bit of time though. i feel the formula approach would be faster
<planckwalk>	is the data types in each cell uniform?
<gedamo>	probably easiest to use a binary temp file
<gedamo>	then you can calculate the offset of each value
<gune>	planckwalk: its not, but they are all numbers, im thinking of running a cycle over it and inserting fake characters to make it uniform, then format based on a formula, then remove em
<planckwalk>	yeah, especially if all the cells are easily representable in 32-bit floats or something
<planckwalk>	then you'd have only a 1.4gb file, more likely readable into ram on a constrained machine
<gune>	does treating it as binary mean each entry has an equal size? im a bit rusty tbh
<planckwalk>	(though 5gb is pretty tame anyway)
<gedamo>	gune: yes
<planckwalk>	if they were all 32-bits floats, that would be 4 bytes per entry
<gedamo>	but planckwalk is right, you should be able to read the whole thing into memory
<gune>	i see. so im looking at using std::iostream::bin then, correct?
<gedamo>	i don't know c++
<madmallard>	wat to u do when u have job programming and u really dont feel like doing it but u cant really quit and do something else
<gune>	gedamo: ah sorry
<gedamo>	gune: will the numbers in your file fit into a 32 bit int or float?
<gune>	gedamo: yea, they are at most around 14 digits in size
<gune>	it would be a float, they have decimals
<gune>	planckwalk, gedamo: i think ill do a mix of the approaches then, read as binary but go with the formula approach, that way if i need to do this again in the future with larger files i need not worry about loading it into ram.
<gedamo>	then allocate an array of 187000x1900 floats and read the whole file into it
<ams>	madmallard: you do it and stop complaining?
<gune>	planckwalk, gedamo: think that would work?
<ams>	187kx1.9k array .. big
<gedamo>	about 1.4g
<ams>	nod.
<ams>	depending on the floating point size ..
<gedamo>	should be possible on a 32 bit system
<gedamo>	yeah, assuming 32 bit floats
<madmallard>	ams: how do u do that?
<lethargilistic>	if you're using c, you could just use malloc and the allocation would be virtually instantaneous.
<ams>	madmallard: one good way is to not complain on irc.
<lethargilistic>	it would just return a pointer to a slice of memory on the heap that's as big as you need.
<ams>	lethargilistic: nothing in c guarantees that.
<madmallard>	ams: geez...
<ams>	lethargilistic: and most systems don't even work like that.
<gune>	i may need to do this on larger files in the future though, so ill open as binary and calculate the offset instead, so i dont have to re-code later >< hah
<ams>	madmallard: jeez what?
<ams>	madmallard: if you can't do anything about it, you can't do anything about it.  so one shouldjust shutup and do it...
<madmallard>	except when im not feeling the motivation it takes 12 hours to do something in code that normally would take like 30 minutes...
<ams>	don't do it then.
<lethargilistic>	what part of double* floatarray = malloc(sizeof(double)*187000*1900) wouldn't do what he's asking for? replacing "double" with his system's 32-bit floating-point and assuming he has enough memory in the first place.
<gune>	lethargilistic: well, im doing a 5gb file now, but i may end up doing a 30gb file in the future, so then this wouldnt work
<ams>	13:15 <lethargilistic> if you're using c, you could just use malloc and the allocation would be virtually instantaneous. <-- that statement is false, not that it wouldn't work. it might, if you have enough ram, or swap.
<ams>	malloc doesn't have to be "virtually instantaneous" by any means, mallocing 30g can take 0 seconds or ten years.
<gune>	i got that i can load in array as binary and it'd be smaller, but id like to cover my bases for when i use larger files
<lethargilistic>	you said you were reading in the dimensions somehow. replace the hardcoded dimensions with variables.
<gune>	lethargilistic: im reversing the axis of a matrix yea
<ssta>	i love streams
<ssta>	how did i ever manage without them?
<lethargilistic>	<ams> ah, i misunderstood which part you were objecting to, then.
<sbrg>	any of you guys familiar with scikit-learn?
<reynir>	um. in java, is there a way to check if an ouputstream is still open?
<ssta>	return nums.stream().filter(n -> n<max).reduce(long::sum).tostring();  (even with java's clunkyish syntax, it's a thing of beauty)
<ssta>	reynir: sadly no really reliable way, since the underlying object (maybe a file or a socket) may not know whether it's closed until you try to write to it
<reynir>	ok i'll try write to it then :p
<ssta>	reynir: if you're really really *really* sure that nothing except you could have closed it, then you can wrap it aqnd keep track yourself.  but generally the mechanism is to write to it and handle the exception if it's closed
<reynir>	i'm using cipheroutputstream, and i wasn't sure whether close() would close the underlying stream too
<reynir>	it seems the only way to dofinal the cipher is to close the stream
<reynir>	fwiw it does close the underlying stream
<ssta>	reynir: the javascript for it claims that it does.  trust it
<ssta>	this method resets the encapsulated cipher object to its initial state and calls the close method of the underlying output stream.
<ssta>	it's even autocloseable, so if you can use try with resources and forget about needing to ever close it eplicitly
<reynir>	hm
<ssta>	umm, javascript?  *javadoc*!
<reynir>	heh :)
<ssta>	i've been spending too much time hacking on fugly front end code lately, clearly
<reynir>	i don't need to in this case, but i'm wondering how you would keep writing with the underlying stream
<ssta>	you wouldn't
<ssta>	open it back up again and append to it?
<ssta>	having multiple things writing to a buffered stream is just begging for a race
<ssta>	looks like (as you said) there's no way to have the underlying cipher flush its unfilled blocks without closing it, so don't try.
<ams>	hmm..
<ams>	should benchmarks be with the tests or not .. that is the question!
<ssta>	if their urpose is "is this fast enough for production" then yes.  if they're just for relative penis measurement then no
<ihatehex>	anyone faimliar with intellij?
<ams>	ssta: ?
<ihatehex>	i can't seem to change an .iml file's line endings to crlf
<ihatehex>	(and they have to be, or intellij's git integration refuses to commit)
<ssta>	ihatehex: i'm ony starting to learn it.  try #idea-users (although it's a fairly quiet channel)
<ssta>	ams: if (say) need an operation to run in under 500ms (say because of user responsiveness) then yes, that's a perfectly reaqsonable test to have in a test suite.  if i just want to say "haha!  my computer runs this shit faster than your computer!" then no, that doesn't reallty belong in a test suite
<ams>	it is a benchmark, by definition it is to compare to previous runs.
<ams>	i am personally not interested in penis measuring contests..
<ams>	but ido not see what it has to do with production, tests (and benchmarks) have nothing to do with production.
<ssta>	what does it 'test'?  is there a defined pass/fail criteria?
<ssta>	ihatehex: have you read: https://www.jetbrains.com/idea/help/handling-lf-and-crlf-line-endings.html ?
<ihatehex>	ssta, it was just a bug
<ihatehex>	i fixed it b y using notepad++
<ihatehex>	lol
<ssta>	ihatehex: :)
<ams>	it beats several parts of the implementation, so if the benchmark tests don't return the proper value then obviously it is bad.
<ssta>	so it would be considered a fail?  then it's a test and belongs in a test suite imo
<ams>	i'm not really that strict that things have to have a pass or fail to be considered tests, testing the speed of things is a test, and there is no good definition of passing or failing there.
<aidanh>	there's also nothing wrong with tests issuing warnings
<agentcarmichael>	good day everyone.
<rindolf>	agentcarmichael: hi, sup?
<ams>	aidanh: indeed.
<agentcarmichael>	i am confused about why this c/al code (pascal cousin) shows me the 'not true' messages: http://pastebin.com/umn57skd
<ssta>	ihatehex: i must admit, i (mostly) ignore idea's git integration...except for teh diff viewer and the conflict resolution stuff, which is nice candy.  i find it clunky for things like branching, stashing, etc.  maybe just because i'm more used to the cli way
<agentcarmichael>	if not (true) equals false..?
<ams>	the problem for my little dumb brain is rather that running benchmarks everytime you wish to check stuff is.. pointless .. kinda .. since mostly you are note interested in benchmark results unless you are really fiddling with things are related to speed .. maybe ...
<ihatehex>	ssta, in the ultimate version it's awesome
<ihatehex>	it's pretty awesome now
<ihatehex>	it didn't use to be i think
<ihatehex>	used to be is such a weird thing to write
<ihatehex>	d:
<ihatehex>	"it didn't used to be" seems like awful english but it's probably correct
<ams>	agentcarmichael: i assume so, why wouldn't it?
<ssta>	ihatehex: i have ultimate...i still find it tricky (things like merging from upstream branches confuse me)
<agentcarmichael>	ams, why does it?
<rindolf>	agentcarmichael: 1+1 = 2 is true and not true is false so you get the else.
<ams>	agentcarmichael: cause the negative of truth is false?
<ihatehex>	ssta, i'm just improvising this as i go
<agentcarmichael>	i see, i see.
<ihatehex>	i'm the de facto group leader for my project because i'm the only one who knows kind of what he's doing
<ssta>	agentcarmichael: not(true) is the same as false
<ihatehex>	:|
<ihatehex>	ssta, that's not(false)!
<agentcarmichael>	so what i'm asking in that statement is: "if false".. doesn't make sense..
<agentcarmichael>	i have nothing to compare false against
<ssta>	agentcarmichael: well, it might.  if(false) will *always* go to the else clause
<ihatehex>	agentcarmichael, why would you need to compare it?
<agentcarmichael>	so that i can choose between go to true or go to false.
<ams>	agentcarmichael: if is an implicit if (x == true)
<agentcarmichael>	the goal is to write control logic to control which messages get displayed to a user.
<ssta>	it's unusual to use a compile time constant as a condition in an if statement.  the compiler can (and often will) optimise it away, which may or may not be what you want
<ams>	agentcarmichael: so in that case, if (not (1+1=2) == true) --> if (not (true) == true) --> if (false == true) --> "not true, not true at al"
<iszak>	if i have a 3d array in memory and c[0,0,0] is stored in cell x, then in which cell is c[2, 5, 1] stored? i am assuming x+251?
<iszak>	i should mention c is an array of 10x10x10
<ssta>	not sure about a pascal compiler, many of them are very very basic and don't really optimise much.  dunno if that's stil true tehse days
<ams>	iszak: "depends"
<iszak>	ams: go on
<ams>	iszak: how is your 3d array represented?
<iszak>	ams: 1 continuous row of memory
<agentcarmichael>	so if(x) is really if(x)==true, so it would be cpu inefficient to write the latter then.
<ams>	iszak: and how is that continous row of memory represnted?
<ssta>	iszak: try it and see?  (it might even be architecture specific)
<iszak>	ams: not sure what you mean? ssta this is purely hypothetical
<aidanh>	it depends if matrices are stored in row-major or column-major order
<ssta>	iszak: it's easy to test...like 3 lines of code
<ams>	iszak: well, you have x,y, and z ..
<ams>	iszak: are you storign them as xyz or yxz zxy ... what?
<iszak>	oh right
<ams>	iszak: is there padding?
<ams>	iszak: are things aligned?
<agentcarmichael>	so confusing.. if false=true seems insane.
<ams>	agentcarmichael: uhm, you are confused.
<agentcarmichael>	that test of mine seems pointless then because it will always be false
<ams>	agentcarmichael: it doesn't say that false is the same as true.
<aidanh>	((intptr_t) &c[0][0][0] - (intptr_t) &c[2][5][1])/sizeof(*c) ... ugh
<agentcarmichael>	in c/al, = is the comparison operator, not ==
<ams>	agentcarmichael: if is a conditional, if the "thing" is false, it does the else part, if it is true it does the then part.
<iszak>	[x,y,z], [x,y,z+1], [x,y,z+2], ..., [x, y+1, z], [x, y+1, z+1], [x, y+1, z+2]
<ssta>	agentcarmichael: yep..and as i said, a smart compiler will realise that and remove it totally
<iszak>	ams: no padding, alignment? what are you on about?!
<ams>	agentcarmichael: ok, so (false = true) is false
<agentcarmichael>	yes :)
<ams>	agentcarmichael: and that makes perfect sense.
<agentcarmichael>	i get it though yes
<agentcarmichael>	i just think my own code is stupid then
<agentcarmichael>	regardless, thanks.
<iszak>	ams: what more information do i need to give?
<ams>	iszak: if x is a 4-bit integer, and you pad it to 8-bits, then how you move across the memory block will be different than if your integers are 8-bit and you pad them to 16-bit, or not.
<aidanh>	iszak: do you mean in general terms, at which offset the contiguous array of c[] elements is the element c[2][5][1]?
<ams>	iszak: exactly the way things are represented in memory would be a good start.
<iszak>	aidanh: i think so, ams the offset is just theory, it doesn't take into account padding
<aidanh>	iszak: uh, well... they're separate concepts
<aidanh>	i mean offset as in array index
<ssta>	iszak: if they're bytes (say) then each subarray will (probably) start on a word boundary, leaving some unused space.  it's not all that simple
<iszak>	ah that makes sense, yes it's not that complex
<iszak>	it's just integers
<ssta>	so 32bit values, on a (presumably) 64bit memory map?
<ams>	iszak: draw it on paper.
<ams>	you'll see how you can move over those things
<iszak>	ams: it's okay, i figured it out, it's x+251
<ams>	"depending on things"
<ams>	and probobly not portable.
<iszak>	no but this is for uni
<ams>	seems to be a common attitude ...
<ssta>	ah, so "getting the right answer" is infinitely more important than actually having a clue what's going on?
<ssta>	this is why most graduates suck nuts
<iszak>	yes
<aidanh>	eh, they're both important
<ams>	(incf ssta)
<iszak>	even the sql they teach me is non-standard :(
<ssta>	and are completely unprepared to work
<iszak>	most people will probably go on to program in some high level programming language that they don't need to care for this.
<ssta>	aidanh: i'd say that understanding gives teh right answer 'for free'...just the right answer is useless in isolation
<aidanh>	i was under the impression a few database vendors each had their own variety of sql
<iszak>	anyhow, thank you.
<aidanh>	ssta: definitely agree there
<ssta>	most every database vendor has their own implementation...but there's a core standard that (almost) everyone implements
<aidanh>	ah
<ssta>	sadly the core standard is a bitch to use for everything, so writing completely portable sql is painful
<ams>	like c .. :/
<ssta>	even something as simple as getting the rownumber of the result isn't completely portable across all vendors
<aidanh>	are there languages that compile to sql?
<ssta>	if portable sql were possible we wouldn't need database abstraction layers in languages
<impaloo>	aidanh: transpile*
<aidanh>	impaloo: eh, still a form of compilation
<impaloo>	even though compile is correct terminology, i prefer the word transpile when speaking of source-to-source compilation
<aidanh>	fair enough
<ssta>	that's such a made-up-for-marketing-executives word
<impaloo>	:)
<ams>	impaloo: then just about everything is "transpilation"
<aidanh>	hahah it does have that feel
<ams>	impaloo: gcc is then a source-to-source compiler .. every single compiler is basically that ..
<ams>	totally useless word.
<impaloo>	ams: source-to-source, where source is non-binary, textual representation of another written programming language
<ssta>	yes, that's basically all compilers
<ssta>	since they produce asm almost always
<ams>	impaloo: yup, basically all compilers known to man.
<ams>	yup..
<ams>	and the asm is passed to as .. which then produces a binary.
<ssta>	after being optimised and linked and who knows what else...
<ams>	so the only thing by this definition that is a compile is an assembler ..
<impaloo>	non-binary, non-asm* :d
<ams>	making it even more stupid.
<ams>	impaloo: so source code does not count?
<ssta>	llvm basically is designed as a source-to-source compiler, from teh ground up
<ams>	so is gcc infact.
<ssta>	yep
<ssta>	any modern compiler
<ssta>	and also gcc
<ams>	any lisp compiler will do something similar too..
<ssta>	any bytecode compiler too, which is what most code is written for these days
<ams>	and the result from "source" to "binary" might not even exist ..
<exio4>	impaloo: source-to-source may be a compiler to a special binary representation of the ast for another program, how do you count this?
<ssta>	so basically the runtimes for things like clr and java are the only real compilers
<exio4>	and most compilers don't just compile from the original language to asm
<exio4>	they have intermediate steps with simpler-but-still-expressive languages as middleware
<ssta>	and of course, most modern chips (certainly intel) compile the instruction set they get to the lower level stuff that's actually run on the cpu
<exio4>	optimizations normally happen there, too
<impaloo>	non-binary, non-asm, textual representation of a language that compiles into javascript*
<impaloo>	there we go
<exio4>	happens*
<ams>	that is a transpiler?
<impaloo>	yes!
<exio4>	what, how is js related
<aidanh>	doesn't leave us with much then
<ssta>	it's a marketting buzzword imo
<ams>	ok ...
<impaloo>	just joking
<ams>	buzzwordbingo!
<impaloo>	i admit defeat
<exio4>	ams, i consider that buzzword a fancy name for a compiler
<ssta>	like most buzzwords, it's utterly devoid of any useful meaning :)
<ams>	is converting a binary format to another binary format a transpiler too?
<ihatehex>	'transpiler'
<ihatehex>	that's a sex term
<ssta>	that makes sed a 'transpiler'? :)
<ams>	like i dunno .. elf to a.out .. or a.out to elf ..
<ihatehex>	ssta, don't try to make a hipster see sense
<ihatehex>	unless it's webscale they don't want to hear it
<exio4>	lol
<ssta>	web is a bitch to develop for
<ihatehex>	it's the hat and the moustache, ssta
<ihatehex>	corrupts web's mind
<merijn>	the term transpiler needs to die >.<
<ihatehex>	yes
<ihatehex>	yes it does
<ihatehex>	i don't like it
<ihatehex>	i refuse to use it in any context ever
<ihatehex>	outside of sex
<merijn>	"it's a compiler that compiles to another language" <- that's exactly what a compiler is, you jackass! >.<
<ihatehex>	"it's a knife that cuts things"
<ihatehex>	:d
<ssta>	like wet water
<ihatehex>	ssta, dry water is a thing though
<ihatehex>	:d
<ihatehex>	https://en.wikipedia.org/wiki/dry_water
<ihatehex>	wiki page is stupid, it says 'percent' without saying mass/valume
<ihatehex>	volume*
<ams>	i have used the transpiler a few times for function names .. when it emits stuff to stdout or some such ..
<ssta>	ams: sed?
<ams>	no... i don't use sed if i don't have to.
<ssta>	it's handy sometimes
<exio4>	writing compilers is fun
<ihatehex>	exio4, things not to say if you want to get laid
<exio4>	that's rude, duh
<ams>	ssta: i find it a useful term when "compile" is already used by something else ..
<dysoco>	i just tell em babes that i run arch linux
<ihatehex>	ams, is it used by anything else?
<ams>	but that is about it .. trasnpiler, compiler .. same shit, different name ..
<ihatehex>	lol
<exio4>	dysoco: hi!
<ihatehex>	i want to compile javascript into cobol
<dysoco>	exio4, hey, you still in school or going to uni?
<exio4>	dysoco, uni, second year
<ssta>	ihatehex: masochist!
<dysoco>	exio4, where?
<ihatehex>	ssta, :d
<ihatehex>	naw
<ihatehex>	i wouldn't do that
<ihatehex>	now i have to go have a boring project meeting
<ihatehex>	i bid you all adieu
<ovrh>	hey there!
<jkbbwr>	ovrh: hey
<sir_galahad_ad>	ohi2u
<jkbbwr>	whats everyone doing
<dreams>	jkbbwr: implementing a static analysis, you?
<rindolf>	jkbbwr: i've done some qa work for mageia today.
<sir_galahad_ad>	i can't compete
<jkbbwr>	bored as hell
<jkbbwr>	tired, thirsty and flicking through tons
<jkbbwr>	of random stuff
<dreams>	jkbbwr: good morning.
<sir_galahad_ad>	:(
<jkbbwr>	im still toying with the idea of building a package manager for linux
<merijn>	jkbbwr: because linux *really* needs is another package manager ;)
<jkbbwr>	merijn: yeeeep
<darkelement>	hey guys how can an irc logger get the names of all the users on a channel? current method is having problems
<jkbbwr>	its more because im trying to come up with portfolio bits
<jkbbwr>	darkelement: names command
<jkbbwr>	darkelement: http://en.wikipedia.org/wiki/list_of_internet_relay_chat_commands#names
<rindolf>	darkelement: are you using an irc library?
<ltcd>	java question. a weaker "is_a" relationship is an interface. <--- someone explain this please? i understand "is_a" when it's about person extends student for example, and i know what an interface does but don't understand what they mean by weaker sorry.
<aidanh>	presumably that not as many constraints are imposed with interfaces
<ltcd>	when they say weaker do they mean for example student "is_a" male. and when they mean stronger they mean student is_a person?
<rindolf>	sadale: hi , sup?
<aidanh>	ltcd: interfaces just require that you present a particular interface; derived classes have a lot more baggage
<sadale>	rindolf, hi. exam period :(
<rindolf>	sadale: ah, :-(
<rindolf>	sadale: good luck in the exams.
<sadale>	rindolf, thanks. :3
<ltcd>	aidanh: but why is it weaker?
<sadale>	merijn, agreed. only use inheritance when you have to.
<ltcd>	guys this is for an exam, i have no choice but to learn this stuff.
<aidanh>	ltcd: because an interface doesn't require as much
<sadale>	if you're using inheritance, all classes that has the same parent class should has its function mutually exclusive.
<ltcd>	is it because when i use an interface it's weaker as i have to write my own method code, whereas extend is strong since the code in the method is already wrote in another class?
<rindolf>	ltcd: sounds a too pie-in-the-sky question.
<jkbbwr>	interfaces > composition > inherentance
<jkbbwr>	actually, traits > interfaces > composition > inheretance
<rindolf>	jkbbwr: it's spelled "inheritance" not "inherentance" or "inheretance"
<jkbbwr>	rindolf: dsygraphia.
<ltcd>	a weaker is-a relationship can be represented using interfaces. in the case of an interface the inheriting class has the responsibility for implementing all the inherited behaviour. the interface becomes a contract requiring the class to implement that behaviour
<merijn>	you forgot "parametric polymorphism > the rest of them"
<rindolf>	jkbbwr: ah.
<ltcd>	that's what my lecture slide says, please explain "weaker" part.
<horsik_>	is there any specific term in english/cs for data used to create other data?
<aidanh>	oh, how i hate galois fields...
<horsik_>	i'm getting naming paralysis again
<rindolf>	horsik_: generating?
<aidanh>	higher-level data? sounds stupid..
<rindolf>	horsik_: proto-data?
<rindolf>	horsik_: source-data?
<aidanh>	source data sounds better
<dreams>	horsik_: the term depends on the context.
<rfreeman_w>	c++ sqlite++ wrapper, which one do you prefer? https://github.com/iwongu/sqlite3pp or http://srombauts.github.io/sqlitecpp/ or something else
<darkelement>	rindolf: i was not
<rindolf>	darkelement: well, you really should.
<darkelement>	how can it help me?
<horsik_>	dreams: example, class a requires well-formed data *blank* to be constucted so model leverages *blank*validator to verify correctness
<darkelement>	allow me to send commands?
<rindolf>	darkelement: it will implement the protocol for you.
<rindolf>	darkelement: yes, it will.
<darkelement>	hm. alright
<rindolf>	darkelement: and receive notifications.
<aidanh>	well, irc is about as simple as protocols get
<darkelement>	what one should i use?
<sir_galahad_ad>	irc is deceptive
<rindolf>	darkelement: which languages are you comfortable with?
<darkelement>	rindolf: trying to do this in python
<aidanh>	sir_galahad_ad: oh?
<rindolf>	darkelement: ah, then maybe look into twisted.
<darkelement>	rindolf: connect to the socket? yea i'd been trying some stuff with that
<rindolf>	rfreeman_w: i don't have experience with either or with calling sqlite from c++ in general.
<rindolf>	darkelement: what?
<darkelement>	nvm i meant protocol
<rindolf>	darkelement: protocol?
<darkelement>	it's fine i got it
<rindolf>	darkelement: ok.
<sir_galahad_ad>	the irc protocol is a simple protocol in theory, but it there are lots of odds and ends that aren't part of the original protocol duct taped on.
<sir_galahad_ad>	and different servers may or maynot implement various parts of it
<aidanh>	ah.. that would change things
<dreams>	horsik_: well, it sounds like an interpreter; interpreting data to model something, so you could name it: [insertname]interpreter, yielding a validator.
<darkelement>	perhaps there is a way to log all the names?
<darkelement>	or is there not
<darkelement>	it'd be a lot easier if hexchat could
<aidanh>	darkelement: why do you want to log names?
<darkelement>	for my bot to use to check if a message contains any of the names
<aidanh>	darkelement: why don't you just monitor joins and quits instead?
<inphase>	it's only relevant to his purpose if they follow a question asked.
<darkelement>	aidanh: the people that are online may take a while to get offline
<darkelement>	aidanh: they may not leave/join soon
<aidanh>	darkelement: you'd have the same issue with /names
<darkelement>	alright, i actually figured out my problem. gonna work on fixing it
<darkelement>	ty! :d
<amigojapan>	does a variable (and array) in ruby, declared inside a function survive after the function has stopped executing?   or is it cleared by the garbage collector?
<kidbeta>	id hazard a guess of no
<kidbeta>	it doesnt survive
<dreams>	amigojapan: depends on the implementation.
<amigojapan>	kidbeta: that was my guess too, i made a small plugin for a bot, and the maintainer is acusing my plugin of causing a memory leak…   but i am actually not very familliar with ruby… i cant see anything i think could be causing a moemory leak… it is rather sall, here it is http://pastebin.com/p1mnbyrq
<amigojapan>	if i want to make sure it is cleared, should i set unsorted and sorted to = nil at the end of the funtion? is that the way it is done?
<dreams>	amigojapan: normally local variables are popped of the stack (dead) after the function returns. clever implementations marks the object dead even before the function returns.
<amigojapan>	dreams: well,   we are not really sure if my script is causing a memory leak…    it could be,  but then again, hte bot could have crashed for other reasons
<dreams>	amigojapan: a simple profile would tell if space was the issue.
<binni>	i need to shuffle an array randomly (not pseudo-randomly), so far i have the ability to generate random integers, but what shuffling algorithm can i use that can apply such an integer? would i need many such integers for each shuffle or can a single one be enough?
<amigojapan>	ok dreams
<inphase>	amigojapan: run the bot with your plugin, watch the memory, and see if it grows.  then repeat without your plugin.  then try it with your plugin but comment out the sections you think might contribute to the memory leak.  then you know.
<inphase>	amigojapan: better to confirm the problem before trying to fix it.
<rindolf>	amigojapan: are you collecting things inside @top3?
<aawe>	how do i ignore distcc hosts?
<amigojapan>	inphase: ok,   i guess i also need to write something that calls the plugin’s functions many times, otherwise it should be totally stable
<rindolf>	amigojapan: current_useer => you misspelled "user"
<amigojapan>	rindolf: @top3 is supposed to collect the stats of japanese usage…    but that is funped to a file, and i looked at the file, and it is normal
<amigojapan>	thanks rindolf
<amigojapan>	that is dumped to a file*
<rindolf>	binni: see https://en.wikipedia.org/wiki/fisher%e2%80%93yates_shuffle
<rindolf>	amigojapan: ah.
<amigojapan>	rindolf: thanks for looking at my script
<rindolf>	amigojapan: you're welcome .
<rindolf>	amigojapan: out = out+"..." is better written as out += i think.
<amigojapan>	rindolf: i am a little unsure if unsorted=array.new    could be creating new arrays that are all held in ram each time the top3(msg) function is called….    if at all, that is hte most suspicious line to me
<amigojapan>	ok rindolf
<rindolf>	amigojapan: «"plugin is busy." if @locked» - what does that suppose to do?
<amigojapan>	rindolf: as far as i understand hte framework, that will print the message “plugin is busy” is the plugin is locked for some readon, and the manager tries to unload it… i dont see any reason why the plugin should become locked… i just copied that from the example script file
<amigojapan>	is thee plugin is locked*
<rindolf>	amigojapan: so that what a string in void context does?
<amigojapan>	rindolf: i did not notice it did not have puts now that you mention it… i will ask the creator of the bot… i dont really know why that is there  then
<amigojapan>	rindolf: doesnt runy echo the string if there is no puts around it by default/
<amigojapan>	irb(main):001:0> "test"
<amigojapan>	=> "test"
<rindolf>	amigojapan: that's a repl thing.
<amigojapan>	ah ok
<dearhawk>	omg, how do you efficiently calculate the series of an arithmetic sum?
<impaloo>	does anyone have a lorem ipsum-like snippet for testing transferring of unicode characters?
<amigojapan>	rindolf: do you see anything that sticks out as a memory leak?
<rindolf>	amigojapan: no, nothing.
<amigojapan>	thanks a lot rindolf
<rindolf>	amigojapan: except perhaps the @top3 thing.
<rindolf>	dearhawk: use (a1 + an)*n/2
<amigojapan>	rindolf: yeah,  but as you see on line @storage.write('top3', @top3)    i write all the content to disk…. and i looked at that file after the crash, it only has like 100 lines (so the records of some 20 users)
<rindolf>	dearhawk: or do you mean something else?
<dearhawk>	rindolf: x is a natural number.  x = a_1 + a_2 + a_3 ....  a_n. a_i is also a natural number. given x, how do you get the series a_i?
<rindolf>	dearhawk: there can be any number of series whose sum is x.
<rindolf>	dearhawk: like 1+4 = 2+3
<inphase>	dearhawk: it's undefined unless you constrain a_1 or a_n.
<rindolf>	amigojapan: ok.
<inphase>	dearhawk: i suppose you could also constrain the quantity of numbers.  that should suffice.
<rindolf>	amigojapan: which version of ruby are they using?
<amigojapan>	rindolf: hmm, on my mac, i am nto sure hwo to check the version of ruby i am using personally….  i did irb —version and it says irb 0.9.6(09/06/30)         but as far as i heard, the server where the bot is running on is ruby 2
<dearhawk>	rindolf: there's a constant space between a_i and a_(i+1)
<rindolf>	dearhawk: well, it is an arithmetic series.
<rindolf>	dearhawk: so the delta between two elements is constant.
<dearhawk>	yes
<rindolf>	dearhawk: but do you know what it is?
<dearhawk>	gotta find the arithmetic (of natural numbers) series of a natural number rindolf.
<rindolf>	dearhawk: what?
<rindolf>	dearhawk: what do you know about this series aside from its sum?
<dearhawk>	rindolf: i want to find an arithmetic series of an arithmetic sum
<dearhawk>	rindolf: only know its sum :3
<rindolf>	dearhawk: because the sum is not enough.
<dearhawk>	d:
<dearhawk>	why not?
<rindolf>	dearhawk: because both 1 + 4 and 2 + 3 are arithmetic series and they have the same sum.
<rindolf>	dearhawk: the sum of an arithmetic series is a function of the length, the first element and the delta.
<dearhawk>	rindolf: yeah, and that's hard to find for large numbers
<rindolf>	dearhawk: why?
<kahrl>	dearhawk: umm... just choose n = 1 and a_1 = x?
<kahrl>	or am i completely misunderstanding the problem
<rindolf>	kahrl: heh.
<dearhawk>	rindolf: aside from trivial solutions such as 1+(sum-1), there is no efficient method as far as i know ..  when the sum and expected solution only have natural numbers
<rindolf>	dearhawk: the sum is easy to calculate based on these three parameters.
<dearhawk>	rindolf: yes, but not the reverse :p. let me give you an example since i seem to confuse everybody
<rindolf>	dearhawk: ok, thanks.
<dearhawk>	the sum is 15, that's given. we are looking for an arithmetic series that adds up to 15. the terms in that series can only be natural numbers.  we always ignore the trivial solution, here 1+14.  it has two such series: 1+2+3+4+5 and 4+5+6  (can be denoted just as 1,5 and 4,6 or something). finding those series for really large numbers are  extremely hard it seems, if not impossible.
<dearhawk>	rindolf^
<rindolf>	dearhawk: so you mean series of 3 numbers or more?
<rindolf>	s/numbers/elements/
<dearhawk>	yes
<rindolf>	dearhawk: ok.
<rindolf>	dearhawk: the sum is (a1+a1+(n-1)d)*n/2.
<kahrl>	dearhawk: is the delta always 1, is that why something like 3+5+7 is not a solution?
<dearhawk>	3+5+7 is also a solution
<rindolf>	dearhawk: if n is constant and the sum is constant, then you can find a1 as a function of d or vice versa.
<rindolf>	dearhawk: but you are seeking integer solutions.
<dearhawk>	rindolf: yeah, which forces you to brute force it, it seems. there are some non-polymeric algorithm though afaiik.
<rindolf>	dearhawk: can't you find it using factorisation?
<myrl-chan>	mniip: ping.
<gagabone>	so basically, the snes game "earthbound" had many layers of anti-piracy stuff built in, some checks being obvious and in-your-face, and others being far more evil, such as freezing at the final boss and deleting your save file, or silently causing the game to become much harder if it detects it was running an unlicensed copy. my question is: why didn't they do this with every single snes (and other consoles too, of
<gagabone>	course) game?
<rindolf>	dearhawk: or maybe you can use the chinese  reminder theorem.
<gagabone>	they could easily build in things like that in nearly all games.
<gagabone>	which aren't immediately obvious.
<gagabone>	it apparently took the "scene" 12 years to crack earthbound, so it really did succeed, too.
<dogpolice>	the size of other features probably outweighed any verification mechanisms.
<gagabone>	(and that's assuming they found all the purposely put-in bugs.)
<gagabone>	dogpolice: ?
<dogpolice>	gagabone: large games are hard to verify.
<gagabone>	dogpolice: what do you mean?
<dogpolice>	gagabone: i mean that they wanted to probably save that space for the code to verify the integrity of the game for actual game features.
<dogpolice>	you don't get that for free.
<gagabone>	i don't follow.
<gagabone>	"verify the integrity of the game for actual game features"?!
<dogpolice>	gagabone: ...they traded off the anti-piracy mechanisms for actual game features.
<gagabone>	you mean bug-testing?
<dogpolice>	you don't get piracy prevention for free, that costs code.
<gagabone>	does it have to be either this or either that?
<gagabone>	they could've put on guy in charge for the security stuff.
<dearhawk>	rindolf: exactly. i was afk, but i was going to get to that point: the number of terms is a factor of sum. and we know that factorization is hard for huge numbers :(
<dogpolice>	doesn't matter, do you know how large the carts were?
<gagabone>	and his job would be to find places to put in safe checks.
<dogpolice>	earthbound is a small game.
<gagabone>	dogpolice: what's the size of the carts got do do with it?
<dogpolice>	....
<dearhawk>	rindolf: imagine what we could do with quantum computers. we need them. protein folding etc.
<dogpolice>	everything.
<gagabone>	earthbound is an rpg... not small.
<dogpolice>	earthbound has tons of procedural elements. why don't you do some actual snes programming and see how difficult it is to budget for cart space. :p
<gune>	earthbound is the tits
<gagabone>	dogpolice: what's this got to do with the anti-piracy measures?
<naschine>	lol... they reused assets over and over or generated them proceduraly back in the cartridge days because there was no space
<dogpolice>	^
<gagabone>	i'm not talking about adding huge images or video to the cart.
<dogpolice>	gagabone: i'm not either, but do you think you get anti-piracy measures without actually writing to the cart?
<naschine>	gagabone: that there was no space to implement anti theft protection in the first place
<dogpolice>	^
<gagabone>	i'll admit i have never played through earthbound, but "procedurally" generated stuff in the snes era was not exactly common. more like carefully placed trees and plants.
<gagabone>	dogpolice: the actual code doesn't take almost any space.
<dogpolice>	got a metric to prove that?
<gagabone>	naschine: sounds a bit extreme.
<gagabone>	after all, we are talking about snes era and not atari 2600.
<gune>	there were something though, didnt you need custom carts to be able to play unlicensed nintendo games? maybe not piracy protection but still
<dogpolice>	gagabone: it seems like you're just painfully unaware of what it takes to 1. protect against piracy and 2. write games for small systems.
<gune>	you'd stick the unlicenced game into an actual working cart, and then that into the snes, otherwise it wouldnt run
<dogpolice>	you don't get it for free, and the carts are small.
<gagabone>	i don't consider snes a small system. i consider atari 2600 a small system.
<dogpolice>	then you've never written anything for it.
<dogpolice>	when you're dangerously close to a palette table, trying to squeeze just a few bytes of space in there is difficult.
<rindolf>	dearhawk: i started reading an article on theregister where he claimed that he suspected that quantum computers were impossible to implement.
<gagabone>	don't try to tell me that a game such as a link to the past is *exactly* as big as it can be, and that not a single more sprite could've been added, not a single more dungeon, not a single more enemy ai blob, etc. of course it's not that tight.
<dogpolice>	gagabone: would you like to make a bet?
<gagabone>	not if it's about money...
<dogpolice>	go ahead and try to expand alttp or super metroid.
<dogpolice>	the bank expansions alone cost cart space, which also adds to manufacturing.
<dogpolice>	and with not much return, that cost overhead is not worth it.
<naschine>	the largest official rom sizes were like 48mbit... also were f*ing expensive
<dogpolice>	^
<gagabone>	i know they picked a rom of a specific size and that each "upgrade" added tons of cost, but i still think they could've have possibly got so damn close to the size they settled for to not have some code to check for various signs of piracy.
<dogpolice>	gagabone: if you'd like to prove that, _do it_.
<gagabone>	i think you meant 48 mb. not mb. but that's 6 mb.
<dogpolice>	i'm telling you that it was an economic decision, and it was a good one.
<dogpolice>	gagabone: megabit.
<dogpolice>	not megabyte.
<gagabone>	dogpolice: did i say that i have the skills of japanese nintendo masters? :/
<dogpolice>	gagabone: no, but i'm assuming that if you're talking shit on people who wrote this, you should be able to implement something better.
<gagabone>	dogpolice: um... re-read what i said.
<dogpolice>	else, i suggest you do some research.
<naschine>	gagabone: jup, about 6mb/48mbit
<gagabone>	dogpolice: why would you assume that?
<dogpolice>	because you're speaking on it.
<gagabone>	so you cannot talk about outer space without having been to outer space?
<dogpolice>	no, but i can speak intelligently about space after reading a damned textbook.
<dogpolice>	and i'm saying that if you're talking shit, do you have a better way of compressing the program, adding in anti-piracy mechanisms, and incurring no overhead?
<dogpolice>	are you familiar with traditional techniques for drawing to the screen? do you know how small of an interval you have for updating the screen?
<gagabone>	can't find how big alttp is now... would love to know the exact size in bytes and how many were "filler".
<dogpolice>	if you find one byte of padding that isn't required due to an optimization, please tell me and i will implement a basic checksum for the cart.
<gagabone>	dogpolice: i assume they didn't think it was meaningful to add too much anti-piracy stuff due to the obscurity of those "disk drives" that allowed people to "backup" snes games, but still...
<dearhawk>	gagabone: actually, i was one of the main programmers of a link to the past. we crammed out the very last bit. we came to the point where we only had 1650 bytes left. so we gave one sprite an extra row of pixels that happened to consume 1650 bytes.
<gagabone>	the format itself (cartridges) probably made it nearly impossible to pirate for most people...
<gagabone>	dearhawk: sounds like you are making that up... :/
<dearhawk>	gagabone: lol, does it? :p
<dogpolice>	gagabone: have you taken a look at the actual rom?
<gagabone>	dogpolice: not in a technical sense, no.
<dogpolice>	i used to screw around with super metroid.
<s2013>	hey yall. wha are some major differneces between mysql and pg
<dogpolice>	writing assembly hooks.
<dogpolice>	there wasn't a byte not used, i had to use an artificial bank expansion.
<gagabone>	mysql sucks and pg sucks a little bit less in some senses, basically.
<gagabone>	but pg also sucks more in other ways.
<dearhawk>	dogpolice: if i was an op right now, i'd ban you just to be an asshole.
<dogpolice>	dearhawk: lolwut. :p
<dearhawk>	;)
<dogpolice>	why. :p
<gagabone>	dogpolice: i realize that ocarina of time is for the nintendo 64, but it contained a *ton* of beta/unfinished bloat.
<dearhawk>	dogpolice: iirc, you've banned a lot of people just because you've had a bad day :p
<dogpolice>	dearhawk: lolwut? i haven't banned anybody. :p
<s2013>	any actual answer
<gagabone>	so with that in mind, it seems very strange that they would *exactly* fill up a snes rom with actual data.
<dearhawk>	dogpolice: :ppp:ppp
<s2013>	what do you prefer gagabone? text files?
<gagabone>	s2013: ?
<dogpolice>	gagabone: okay, let me tell you why you're wrong.
<s2013>	you said both mysql and pg sucks
<gagabone>	s2013: oh. i use pg.
<gagabone>	s2013: just saying that it's hardly a dream.
<s2013>	whats your ideal db?
<gagabone>	i don't have one, s2013. i switched to pg mostly because of mysql doing really evil things in 2005 or something.
<gagabone>	pg is *probably* the best overall of the free ones.
<gagabone>	and since i'm both cheap and poor, a paid one is out of the question.
<s2013>	is mysql paid? i thought it was free
<gagabone>	no, it's free.
<s2013>	oh
<s2013>	you mean paid ones are better?
<gagabone>	but pg annoyingly lacks "on duplicate update" or whatever the mechanism was. very useful in mysql.
<gagabone>	s2013: i'd assume they are, without knowing for a fact.
<gagabone>	paid things are generally superior.
<kahrl>	does mysql support recursive queries? last time i checked it did not
<rfreeman_w>	gagabone, pgsql is the king
<gagabone>	not in the least with regards to "polish".
<dogpolic1>	suddenly my lease is dropped.
<gagabone>	i was honestly shocked to learn that the ocarina of time shipped carts contain a ton of unused beta crud.
<dogpolic1>	gagabone: one sec...
<gagabone>	(which are never visible to normal players.)
<dogpolice>	much better. so. the n64 development kits contained a serial cart.
<gagabone>	locations, models, etc.
<gagabone>	so = ?
<dogpolice>	said serial cart contained an eeprom and the like, it was ungodly large, larger than production carts.
<dogpolice>	it was connected, usually, either to an ultra64 prototyping board (sgi workstations were common).
<dogpolice>	(go indy.)
<dogpolice>	or to a pci card that was shipped with custom drivers.
<dogpolice>	rapid prototyping was the focus.
<gagabone>	i mean, if they had to pay for the full rom of a fixed size anyway, they "might as well" ship the beta stuff that's never used in the finished game, but it "feels" a bit strange, especially if what you say about their snes days is true, where they apparently polished every last byte for the final "gold" copy.
<dogpolice>	so developers were encouraged to code -> upload -> debug, and when that was done, they'd send the carts off to make images of them.
<dogpolice>	sometimes people forget.
<gagabone>	:s
<dogpolice>	other times, they're on deadlines.
<dearhawk>	omg.. i really have to puke .. i can't stop eating the ice cream, but i'm so close to an ice-cream high. my stomach is full. but i just need to finish.. so close. but i can't.
<dogpolice>	or other times, errors occur.
<gagabone>	or maybe they did it on purpose to add mystery to the game.
<dogpolice>	nope. just good old-fashioned ignorance.
<dogpolice>	gagabone: let me give you another example.
<gagabone>	do you know of a place that lists and counts all the people (known) to be involved in various famous video games?
<dogpolice>	link's awakening dx.
<gagabone>	i had both link's awakening and the dx version later.
<dogpolice>	the original japanese 1.0 release was 2 megabytes.
<gagabone>	the dx one was a sort of a rip-off.
<dogpolice>	it was 2mb because of a linker error.
<gune>	question, does fstream.read terminate the string it pulls from the file automatically? cause im getting some garbage at the end of em
<ssta>	gune: no, it doesn't.  it sets eofbit and failbit if there aren't enough characters erad to fill the buffer you give it.
<ssta>	gune: see: http://www.cplusplus.com/reference/istream/istream/read/
<gune>	ssta: ah i see, ill set it manually, thanks!
<jkbbwr>	hmmm
<jkbbwr>	what should i do for my portfolio
<markand>	wt
<dogpolice>	back.
<ssta>	jkbbwr: nude pictures of hot women
<dogpolice>	gagabone: so yeah, all sorts of errors lead to that kind of beta crap.
<jkbbwr>	ssta: would be awesome, but alas too distracting
<dogpolice>	gagabone: a lot of documented assembly code was left on the 1.0 dx release.
<gagabone>	strange.
<ams>	moo
<jkbbwr>	boo
<znoosey>	m00
<markand>	=(^.^)=
<markand>	i realize that i often much more improve the code quality than adding new features
<markand>	am i the only one ?
<znoosey>	markand: yes
<markand>	oh :(
<merijn>	markand: no, i do too
<merijn>	my crowning achievement was a net contribution of -8k lines of code during my master thesis while expanding the functionality significantly :p
<markand>	hehe
<gedamo>	http://www.folklore.org/storyview.py?story=negative_2000_lines_of_code.txt
<dogpolice>	hot damn. today's xkcd hits home.
<twipply>	trying to find some intersections between lines (light) and triangles (leaves), example image: https://i.imgur.com/uq31zdy.png
<twipply>	the leaves are positioned by rotating them around the stem, so i don't actually have their coordinates exactly
<twipply>	not sure what method to choose to go about solving this other than switching to global coordinates for the leaves, which doesn't look as nice i think
<tnght>	stackoverflow competitive q&a for nerds <3
<horsik_>	i've been eating kiwi with skin for about a month now and boy i was wrong my whole life
<horsik_>	peeling is unnecessary wake up sheeple
<python111>	lol
<xeno_>	vendu: i also prioritize quality, but convenience is also important...
<macrobat>	horsik_: if you eat the peels, you can't stitch those together for a warming kiwi fur
<xeno_>	vendu: but i can't justify buying $5000 earplugs, cause i store them in my pocket with my keys, smash them in car doors, drop them while biking and all kinds of shit... being my earplugs is a suicide mission
<njmbb8>	hallo
<gedamo>	hi njmbb8 :)
<njmbb8>	anyone here good with mvc?
<znoosey>	njmbb8: just ask your question
<njmbb8>	ok
<njmbb8>	lol
<njmbb8>	does anyone here have any good resources for me tofamiliarize myself with mvc?
<znoosey>	head first design patters is a good book
<horsik_>	macrobat: no need for that i have enough hair as it is :c
<njmbb8>	thanks znoosey
<njmbb8>	i'll check it out!
<anj7>	hey guys o/
<znoosey>	hello anj7
<anj7>	znoosey: sup?
<znoosey>	anj7: nm, watching game of thrones, how about you?
<anj7>	i'm surfing the web.
<anj7>	znoosey: do you know what is integrated graphics?
<znoosey>	anj7: not without the contex
<anj7>	znoosey: in laptop.
<serses>	what is the best method to implement an undo/redo command?
<znoosey>	anj7: basically a graphics card on your motherboard, or as a part of the cpu
<ssta>	a stack
<anj7>	serses: ctrl+z ctrl+y
<serses>	i meant in a programming language
<ssta>	a stack
<inphase>	serses: push the full state on a stack if it's small enough, or a reversible differential if it's large.
<anj7>	znoosey: is it good to have 1700mb for graphic design?
<znoosey>	anj7: no idea, never done any graphic design
<anj7>	znoosey: oh, ok.
<inphase>	serses: a separate redo stack could be maintained during undo steps.
<serses>	a stack make sense
<serses>	thanks
<anj7>	anyone uses blender here?
<aidanh>	serses: undo trees are nice
<serses>	never heard about them
<puddlejumper>	what up cs bitches?!
<ssta>	ropes can be useful for undoing textual changes
<aidanh>	serses, basically just like an undo stack, except it's a tree; if you undo some changes and then make a new change, you can still redo the undone changes
<serses>	i guess i will try that. thanks :)
<aidanh>	easy to implement; every time you perform an action, append a node to the current tree node; undoing is then just moving up to the parent
<aidanh>	exposing a nice ui can be tricky though
<serses>	i need only to implement it.no ui needed
<aidanh>	serses: class assignment?
<serses>	doing some katas
<aidanh>	ah
<ams>	has anyone done the gabriel benchmarks on some other sexp based langagues?
<ams>	i know about benchmarks for common lisp, zetalisp, interlisp, s-1 lisp, and scheme ...
<ams>	but for clojure would be interesting ... maybe even ml, haskell..
<csd_>	in the longest increasing subsequence problem using the o(n^2) solution, you end up with a vector such that s[i] represents the length of the lcs ending at index i. could one use this vector to print the actual lcs by starting at the largest value and working to the beginning of the vector, such that if the new number is less than the previous, include it, else ignore? i'm trying to think of cases that this wouldn't work for but a
<ams>	and erlang ..
<csd_>	the solutions i've seen have a second vector prev, which says for a particular number in an lcs, what the index of the previous number is
<ams>	csd_: you message got cut of ..
<csd_>	can you paste the last you saw?
<uberlambda>	anyone here using emacs? i'm having trouble with the (indent-region) function
<ams>	csd_: wouldn't work for but am
<ams>	uberlambda: sure ..
<csd_>	ams: oh, nothing of ubstance after that
<csd_>	i just can't think of countercases
<ams>	csd_: why are you using the stupid version of lcs?
<uberlambda>	ams: do you know what could be causing it? (indent-to <tabstop>) works as expected, but (indent-region) refuses to do anything
<csd_>	ams: i'm going to study the n log n version after. i just want to make sure i fully understand how i could do it this way
<uberlambda>	i have (setq indent-tabs-mode nil)(setq tab-width 4)(setq tab-stop-list (number-sequence 4 200 4))(setq indent-line-function 'insert-tab) set
<ams>	uberlambda: they are not the same.
<uberlambda>	ams: i know, but atleast i have the other one working :p
<ams>	indent-tabs-mode is buffer local ..
<uberlambda>	ams: i tried it with any major mode i could think of
<ams>	and so is tab-widht ..
<csd_>	uberlambda: in my experience the #emacs channel is helpful if you don't find an answer here
<uberlambda>	ams: yes, i have setq-default on an autoloaded script for that
<uberlambda>	csd_: it seems pretty much dead... i tried asking there, no response
<ams>	uberlambda: i am not sure what the confusion is, indent-to indents differntly from indent-region
<csd_>	also, stack exchange has an emacs sub now
<uberlambda>	ams: ok, i'll get back to the core question then. do you know what could be wrong with my setup for (indent-region) not to work=
<ams>	what does "not work" mean?
<csd_>	how long is your init.el
<uberlambda>	ams: as in "not indenting"
<ams>	it isn't like you have said what doesn't work, in what mode, for what case, ...
<uberlambda>	i'll post my .emacs.d on github
<ams>	no thanks .. please produce a small test case, that works in emacs -q
<csd_>	try deleting shit until it works again?
<csd_>	also if you have it under version control you might experiment with older versions
<ams>	or .. you could tell us _what_ is happening.
<uberlambda>	ams: surely, but i thought i were making an evident mistake
<ssta>	if you don't have it under version control, then get it under version control
<ams>	"doesn't work" is very descrptive.
<ssta>	ams: "it's broken" (is that any better?)
<uberlambda>	ssta, csd_, ams: i'll get it on a vcs for now, then i'll fiddle with it until i'll get it to work again
<ams>	uberlambda: how on earth can one know if it is a evident mistake??! you haven't even said what the fuck doesn't work.
<uberlambda>	ams: it does not indent
<ams>	for what mode? what text?
<uberlambda>	indent-region does not add spaces/tabs
<ssta>	"the internets is broke!"
<uberlambda>	all major modes
<meir`>	i have several mvc apps, and i want to add user logic to them
<ams>	why do you think it should add anything?
<meir`>	the thing is i want the same user set to all of the apps
<ams>	maybe the buffer is already indeted, then obviously nothing will happyen
<uberlambda>	ams: because in evil insert mode, tab is mapped to indent-region
<ams>	really, please produce a example of your case.
<meir`>	is it acceptable to create some global user model, and to share it between multiple apps?
<ams>	uberlambda: do you even have a region marked?
<ams>	uberlambda: you are really not making it easy, and you are pissing me off.
<csd_>	meir`: what does global user model mean to you?
<meir`>	a model to represent a user
<uberlambda>	ams: selected with evil, yes. i don't even know what a "region" really is... i have no idea how emacs works tbh. i just switched from vim to emacs+evil. sorry if i'm pissing you off, lol
<meir`>	to be shared among all apps
<csd_>	oh i see
<ams>	uberlambda: then i suggest you remove all that crap and learn some basic emacs.
<csd_>	i don't see a problem personally but don't have a lot of experience there
<ams>	uberlambda: and i suggest you learn how to ask questions.
<uberlambda>	ams: i'm trying to, but getting productive fast is more important than learning elisp in my todo-list
<uberlambda>	ams: i'll update the files gradually as i discover how emacs work
<csd_>	switching to emacs really involves reading through the manual before you can do much
<csd_>	imo
<ams>	uberlambda: mark a region, and do m-x indent-region.
<uberlambda>	ams: k...
<ams>	csd_: same for vi.
<ams>	or anything.
<uberlambda>	yeah, but the vim config file didn't require this much work
<csd_>	thats because vim cant edit video
<ams>	maybe cause you didn't try to reconfigure vim to work like emacs.
<uberlambda>	exactly. but, evil-mode pretty much worked out-of-the-box, so i thought i didn't need to learn emacs yet
<ssta>	unthink that :)
<ams>	uberlambda: what do you think indent-region means?
<ssta>	emacs is powerful, but it's not very friendly to those unwilling to put in the effort
<csd_>	uberlambda: i haven't used it but some vim friends have enjoyed spacemacs as an alternative
<ams>	it is very friendly to people who do not want to put in the effort.
<ams>	reading the evil documentation to indent a _line_ or region one uses < and >
<ams>	not tab.
<uberlambda>	ams: vim does it, too. but in insert mode, you can insert tabs and they indent/deindent
<uberlambda>	ams: i am in insert mode. standard >> << vim commands work fine in normal mode.
<ams>	evil isn't vim.
<uberlambda>	ams: it emulates most of it
<ams>	maybe if you stoped confusing editors things might work better for you.
<ams>	no it doesn't.
<uberlambda>	ams: have you ever used vim?
<ams>	evil-mode doesn't even bind tab.
<uberlambda>	it does in insert mode
<uberlambda>	c-h k <tab>
<ams>	in ex mode it binds it to evil-ex-completion
<ams>	uberlambda: no, it doesn't.
<ssta>	pointless shit is pointless
<ams>	i am looking at the source code for evil-mode.
<ams>	(define-key evil-ex-completion-map [tab] #'evil-ex-completion)
<ams>	that is the only line where it defines tab.
<ams>	and it is even a prefix map.
<uberlambda>	tab (translated from <tab>) runs the command evil-jump-forward, ion in jump list.
<uberlambda>	to go the other way, press c-o.
<ams>	indent is bound to = in evil mode.
<ooommooo>	csd_: i don't think it works in general if i got what you mean
<uberlambda>	ams: wait a second... autoindent is
<csd_>	ooommooo: whys that?
<uberlambda>	as in, autoindenting a range. not indenting it by one indent
<ooommooo>	csd_: eg. 324518
<uberlambda>	btw, c-i == <tab>
<uberlambda>	evil maps c-i
<denommus>	hi
<ooommooo>	i get 1458 with your method
<ams>	uberlambda: yes, which is not the same thing.
<macrobat>	vim has filetypes for different languages. emacs has modes. indent in vim is more "literal"
<ams>	and it is only defined iv evil-want-c-i-jump is defined.
<ams>	horrible code this crap ..
<uberlambda>	ams: emacs told me that <tab> was binded to that, so it must be. and it must be defined by default since it was autobinded.
<ams>	not really.
<ams>	i suggest you produce a test case.
<ams>	emacs -q, buffer input, exact command run, and output.
<ooommooo>	csd_: interested in multi sequence lcs algos?
<uberlambda>	kk
<ams>	and now you broke my grep of stuff ..
<csd_>	ooommooo: i was only considering single sequence
<uberlambda>	wtf? it works when reloading init.el
<ams>	it had been running for 12 hours too .. annoying.
<uberlambda>	oh well, i'll try to fix my config. thanks. btw don't get so angry at nothing :p
<ams>	it is not nothing.
<ooommooo>	yeah i get that. here's my try at multilcs anyway:http://paste.ubuntu.com/10974940/
<uberlambda>	ams: so what is it? me liking the wrong editor?
<ssta>	no, it's your inability to ask questions
<ssta>	it makes you a time-sink
<ams>	uberlambda: me having to do a 12+ hour run again, and what ssta said.
<uberlambda>	ssta, ams: just don't answer then
<ssta>	happily, we've seen some time-sinks turn into prouctive people, so sometimes teh waste is worthwhile
<ams>	uberlambda: don't fucking ask instead.
<ams>	uberlambda: it is _you_ who are requesting the help of others, it is _your_ job to make life as trivial as possible for those intending to answer your questions.
<ams>	uberlambda: otherwise, i suggest people start sending you invoices.
<ssta>	in fairness (although i have no idea why i'd be fair) asking good questions is a skill that must be learned
<ams>	cause the nerve of thinking that you can waste peoples time just for your own personal amusement is more annoying than you asking unanswerable questions.
<ams>	ssta: sadly .. but there is a corolation .. good programmers know how to ask good questions .
<ams>	mostly since if you cannot, you cannot make the computer do shit for you ..
<benda`>	:d
<uberlambda>	ams: i'm not wasting time for amusement. i tried to fix this thing, and i got a flame war instead
<ssta>	ams: yes, but they have to learn how...they're not usually born knowing how
<uberlambda>	ams: and they're pretty honest, i see, too
<ams>	ssta: true true.
<uberlambda>	i meant humble. fuck english.
<ssta>	aams: every good programmer was once a bad programmer :)
<ams>	uberlambda: you need a flamewar, because of your inability to ask a sensible question.  "doens't work" isn't a question.
<ams>	ssta: not me.
<ams>	:)
<uberlambda>	ams: you could just have asked to clarify, instead of raging at me.
<ams>	uberlambda: i did, multiple times.
<uberlambda>	ams: or, couldn't have answered at all and saved you pain.
<ams>	uberlambda: would you like me to show you?
<ssta>	uberlambda: might i suggest you read this? http://www.catb.org/esr/faqs/smart-questions.html
<ssta>	even if he is an arrogant and irritating asshole at times, he makes some good points here
<uberlambda>	who? me or him?
<ssta>	esr
<ams>	as much as i find esr to be .. vile .. that is one of the few documents worth reading.
<ams>	i suspect it is mostly due to rock moen though ..
<ssta>	exaqctly...just because he's a misogynistic buttlicking asswipe doesn't mean he can't have a good thought once in a while
<rfreeman_w>	ssta, lolz. feminists
<ams>	ssta: you know if there is a original copy of that document?
<ssta>	rfreeman_w: nah, esr is just a pimple on the ass of humaity...a self-serving shithead who shouldn't have the influence he does
<ams>	he doesn't have any influence though :-)
<ssta>	ams: no.  i first read it in like 1999ish, which was probably the original version
<ssta>	ams: he has had
<ams>	once .. for a very brief annoyance ..
<ams>	i'm now wondering how much esr .. esrified the document .. like he did with the jaron files ..
<tsumetai>	he got me interested in python and lisp. :)
<ssta>	ams: he was majorly influential in the osi, catb was pretty influential in its time, he's been on a massive number of standards committees...
<rfreeman_w>	http://i.imgur.com/aaodnxh.jpg <- (;
<ams>	ssta: meh, osi was mainlky bruce perens .. not esr ..
<ams>	ssta: catb was always .. ignored, and being on a massive amount of standards committies causing flamewars all the fucking time .. more like constant annoyance than influential.
<ssta>	ams: not how i remember osi, but okay.  he sgtill had influence on those committees.  he's a shithead, but there are many who will listen to his bullshit
<ams>	at least how i remeber it ..
<ssta>	maddog, bruce and esr all founded it...bruce was mainly influential in making the definition the same as the dfsg (a great move imo, i love dfsg)...esr was the one who pushed for lots of publicity and got it.
<ams>	and we can thank alot of the hatred towards the fsf and free software because of esr.
<ssta>	nah...we can blame rms for most of that
<ssta>	people don't like religious fanatics
<ams>	rms isn't religous in the least.
<ssta>	for rms free software is a crusade
<ams>	not really.
<ssta>	that's how he comes across
<ams>	again, not really.
<ams>	that is how some people portray him though...
<rfreeman_w>	what is esr developing/doing exactly
<ssta>	all you need to is read hos writings
<vdamewood>	hi people, etc.
<ams>	ssta: which is quite sensible, and well written.  and nothing fanatical or religious about it.
<ssta>	ams: not how i read it
<rfreeman_w>	some people are scared of change
<ams>	(or how he comes across in person for that matter ..)
<ams>	one of the nicest people i know too ..
<rfreeman_w>	-let us be free   -no, let's instead stay in democracy and have constant bullshit      kind of people
<rindolf>	vdamewood: hi, sup?
<rfreeman_w>	crusade for free software seems good for us
<vdamewood>	rindolf: my friend wants me to program his solar-panel array.
<ams>	rfreeman_w: i think he was doing some vc-mode rewrite thing ... esr loves rewriting eveything he comes over.
<rindolf>	vdamewood: ah.
<rfreeman_w>	ams, well in my experience, most code is shit, co it could make sense
<ams>	rindolf: before that he annoyed people with a totally useless conversion of the emacs repository into git, when there was a perfectly good, and wel working mirror ..
<rfreeman_w>	vc-mode, in emacs?
<rindolf>	vdamewood: to position it in the right direction?
<ams>	rfreeman_w: yes.
<vdamewood>	rindolf: that and to monitor it remotely.
<rindolf>	ams: who? why?
<rfreeman_w>	people still use emacs?
<ams>	erm, was meant for rfreeman_w ..
*	rfreeman_w </flameattempt>
<rindolf>	ams: ok.
<rfreeman_w>	guthub.com <3
<ams>	rfreeman_w: esr is basically stalling any work on vc by being the self proclaimed maintainer who has time "only available in intense bursts with unpredictible timing" ...
<rfreeman_w>	because that is how most code makes you feel
<vdamewood>	i could take or leave github. it's just a place to store a repository to me.
<pyon>	rfreeman_w: "people still use emacs?" --> yes. for several use cases, emacs is still the best available tool.
<twey>	rfreeman_w: i wish that was a site rather than a redirect ☹
<rfreeman_w>	twey, (;
<rfreeman_w>	twey, btw are you perhaps ircing from inside emacs? i noticed emac users user a lot of ☹ often in irc
<ams>	19:17 *** ams ctcp version rcirc on gnu emacs 24.4.1
<ams>	:-)
<rfreeman_w>	cool
<twey>	re rms: he has very strong opinions on things, which can sound a lot like zealotry if you haven't taken the time to read into the reasoning behind them
<twey>	rfreeman_w: i'm not
<tsumetai>	pyon: which cases are those?
<twey>	pyon: how do you like pony?
<ams>	m-x emacs-uptime: 2 years, 258 days, 18 hours, 16 minutes, 21 seconds
<denommus>	pyon: i'm trying to introduce "empty" in my library
<denommus>	pyon: this is how my code looks at the moment: https://github.com/denommus/netwireocaml/blob/master/src/netwire.ml
<denommus>	pyon: and the signatures: https://github.com/denommus/netwireocaml/blob/master/src/netwire.mli
<denommus>	pyon: now, empty is of course val empty: (_, 'a option) wire
<pyon>	checking.
<denommus>	pyon: i have tried to make let empty = pure none, but it didn't compile (values do not match: val empty : ('_a, '_b option) wire is not included in val empty : ('a, 'b option) wire)
<denommus>	pyon: but it works if i do let empty = wconst none
<vdamewood>	rms: i don't use that because [something sounding like crazy conspiracy theory]. years later: edward snowden: [crazy conspiracy theory] is true.
<denommus>	pyon: do you know why?
<rfreeman_w>	rms would be better if he would be lest commie/leftist
<rfreeman_w>	though obviously his work is very important and advanced freedom
<pyon>	denommus: dunno... maybe it's related to the value restriction.
<pyon>	denommus: but ocaml's type system is *really* complicated.
<ams>	rfreeman_w: lest commie?
<vdamewood>	rms would be cooler if he were less like the strawman i have in my head.
<rfreeman_w>	vdamewood, that is the case with visionariness ;)     on another case, some people me included can tall you already that democracy = slavery, but it will be probably years before people realize
<pyon>	twey: pony?
<rfreeman_w>	ams, well there is no good word for it in english, but it is the leftist-socialists-commie attitude that you can have freedom, but only if you follow my strict rules, in this case: you must join my cause too (gpl your code as well)
<denommus>	pyon: someone said that pure's arguments must be monomorphic, but i didn't understand how that makes things behave that way
<pyon>	tsumetai: "which cases" --> proof assistants.
<twey>	vdamewood: as a techie, i don't think his stuff sounds particularly incredible.  basically all he does is go around pointing out how there are gaping insecurities all over the place in our social and technological systems that someone could take advantage of
<twey>	vdamewood: which we really already all know
<ams>	rfreeman_w: you realise that rms opinions have very little, if nothing, to do with communism and leftism? and that he is more of a liberal than anything?
<twey>	vdamewood: except responds with stuff like ‘but nobody would take advantage of that!’ and then act all surprised like rms said something amazingly prophetic when someone eventually and inevitably takes advantage of it
<ams>	rfreeman_w: there is also nothing of the sort in his, the gnu project, the fsf, or the free software movements attitude that "you have freedom, but only if you follow our rules" ...
<twey>	s/responds/everyone responds/
<rfreeman_w>	ams, gpl
<doomlord>	opensource isn't commie
<pyon>	denommus: i don't really understand (or even know) all the corner cases of ocaml's type checking, sadly.
<ams>	rfreeman_w: and? what about every single propietery license?
<rfreeman_w>	doomlord, it is not.  but gpl limits your freedom - it is a freedom only if you join the fight
<twey>	pyon: http://ponylang.org/
<rfreeman_w>	while openbsd or pd does not do that
<ams>	rfreeman_w: the gpl does no such thing.
<pyon>	twey: checking.
<denommus>	rfreeman_w: if you think freedom is the idea of living without rules, you don't understand freedom
<rfreeman_w>	ams, to use gpl code i must join the fight for open source by open-sourcing my changes in that project too
<ams>	rfreeman_w: you have to do no such thing.
<doomlord>	its a fair tradeoff imo
<vdamewood>	twey: oh, i don't intend to pass him off as prophetic. just right. perhaps i should have said 'mocked as sounding like a crazy conspiracy theory'
<twey>	pyon: latest of the shiny-new-pl crop.  looks pretty nice, though i'm not sure about the ‘capabilities’ system.
<denommus>	ams: rms declared himself to be a libertarian, iirc, which aligns with the ultra-left (anarchists)
<ams>	denommus: possibly.
<rfreeman_w>	ams, what? if you take gplv2 project foo, and patch it up, and then release the binary then when asked you are obligated to release the source code
<denommus>	rfreeman_w: yes. because that would affect other people's liberty to share the code in question
<ams>	rfreeman_w: you are not forced to release anything.
<doomlord>	you want to release it so others can build on it
<rfreeman_w>	ams, but if you release binary, then you are obligated to release source
<ams>	rfreeman_w: and that would limit the freedom of others, your freedom to swing your arms ends where my nose begins.
<twey>	vdamewood: yeah.  but his ‘crazy conspiracy theories’ have never relied on elaborate setups or, well, conspiracies.  the hallmark of rms is that he always just points out things that are already observable and verifiably true, and goes ‘we shouldn't do this: someone could take advantage of it’
<denommus>	i'm really tired of this stupid argument that gpl restricts freedom
<vdamewood>	i find it funny that most of the arguments i heard against the gpl require stawmanning it.
<doomlord>	when its' working right its' just a symbiosis
<vdamewood>	i've heard
<denommus>	gpl only restricts your capacity to restrict other people's freedom. that is, by no means, freedom
<rfreeman_w>	denommus, incorrect
<vdamewood>	twey: fair point.
<twey>	pyon: ‘go done right’ i guess
<ams>	rfreeman_w: should i be able to hit you?
<rfreeman_w>	denommus, that would be the case if gpl would forbid me from arresting people from sharing my code
<doomlord>	it would be nice if the whole world was run on gpl principles but i understand why it can't
<rfreeman_w>	this is slightly but importantly different from
<rfreeman_w>	that i have to release my code
<xeno_>	denommus: of course gpl restricts freedom - but it's up to the one who made the software, software isn't public property just through its existence (despite a lot of people thinking it is).
<generalvagueness>	i thought the argument against gpl was that you can't make money off gpl'd code
<denommus>	rfreeman_w: incorrect under what? could you provide any viable definition of freedom that doesn't involve restricting one's capacity to get in the way of other person's freedom?
<doomlord>	the idea of just giving something away so others can build on it, and it comes back to you more valueable is sound
<rfreeman_w>	ams, hitting is action. arresting is action.     gpl does not just ask you from not attacking me,  it also oders you to do something, to do some work
<pyon>	twey: interesting.
<pyon>	twey: i'm reading the tutorial.
<denommus>	rfreeman_w: gpl doesn't order you to do anything
<rfreeman_w>	ams, notice difference between "you must not do some action" and "you must do some action"
<vdamewood>	rfreeman_w: orders you to do what?
<ams>	rfreeman_w: actually, that is exactly what it does: you are attacking my by restricting my use of the program if you do not allow me the source if you provide me with a binary.
<rfreeman_w>	to publish the code
<ams>	rfreeman_w: you don't have to publish source code.
<denommus>	rfreeman_w: it just prevents you from releasing modified gpl code without using the gpl
<rfreeman_w>	really?  perhaps i was wrong
<denommus>	rfreeman_w: you are not required to publish code
<anj7>	can i know what is best car simulator game which has touch steering from inside the car for android?
<vdamewood>	rfreeman_w: you are not required to publish the code unless you publish the binary.
<rfreeman_w>	but i read about it all the times of people suing people releasing gpl binary-only so that they would release the source
<denommus>	rfreeman_w: gpl explicitly states that you are not required to agree to it if you just use the code
<doomlord>	'pony-lang' - is it garbage collected?
<twey>	doomlord: yes
<tsumetai>	rfreeman_w: there is no difference. you must release the source code. you must not not release the source code. same thing. :)
<rfreeman_w>	oh
<denommus>	rfreeman_w: you are just required to agree with it if you share the code
<ams>	rfreeman_w: you can sit on the source code all you want, but if you distribute the binary, you must distribute the source code because you are then attacking the user by restricting that person freedom to meddle with the program.
<doomlord>	ok fuckit then
<rfreeman_w>	oh god, of course that is what i ment
<rfreeman_w>	in the case where you release the binary, then you are forced to take an action: to release the code
<ams>	rfreeman_w: freedom means that you cannot tell someone _else_ what they can or cannot do.
<denommus>	rfreeman_w: ... no
<vdamewood>	rfreeman_w: you aren't forced to do anything. you always have the option of not using the gpl code.
<rfreeman_w>	vdamewood, re-read my previous statement
<ams>	rfreeman_w: and this "else" is studying, modifying, distributing, and running.
<vdamewood>	s/using/copying, or modifying/
<denommus>	rfreeman_w: you're forcing the boundaries of your own definition of freedom
<rfreeman_w>	gpl says that in the case  where you release the binary, then you are forced to take an action: to release the code  - is that so?
<twey>	rfreeman_w: in an alternative formulation, you are restricted from releasing gpl'd code without also releasing the source.  your distinction is purely a matter of phrasing.
<ams>	usually it helps to look at freedom not as what you can do, but what someone else can do.
<rfreeman_w>	twey, i agree that saying that you just always must do something would be far worse.  and saying that without giving anything even worse
<denommus>	rfreeman_w: if you share the code again, you can't restrict other people from looking at the code. that's what the gpl means
<twey>	doomlord: it's not a rust-like, it's a go-like/erlang-like.
<ams>	the gpl is very similar in spirit to the us constituion, magna carta and what not in that regard ..
<ssta>	i like the gpl (v2 anyway, not so sure about v3)...i just understand that it's not a universal license for everything
<vdamewood>	rfreeman_w: your arguement seems to be based on the idea that you had any rights to the code to begin with. without the gpl you wouldn't have any rights, at all. so, the gpl doesn't take anything away.
<rfreeman_w>	with gpl you releasing the source code is kind of like the "price" of "licencing" the code, in some way
<doomlord>	ok fair enough :) i just get my hopes up for a few seconds
<denommus>	gosh, i really hate anti-gpl circlejerk
<rfreeman_w>	vdamewood, well i believeno one can arrest/attack you for sharing any information
<ams>	rfreeman_w: you are confused.  freedom does not mean that you can tell what others can do.
<doomlord>	i dont understand how you could hate gpl
<twey>	rfreeman_w: that's not my assertion.  my assertion is that the difference between ‘must’ and ‘must not’ exists only in the language used to describe it.
<doomlord>	you dont have to use it
<denommus>	doomlord: exactly
<vdamewood>	rfreeman_w: i believe i can broadcast your medical history to every one without being arrested/attacked.
<doomlord>	its a tradeoff that has a lot of merit to it, take it or leave it
<rfreeman_w>	twey, the difference is that some other not-gpl thing could be more like:    if you release binary, then you must not arrest(etc) anyone who would derived/copy/share your code that is based on my gpl code
<ams>	and really, rfreeman_w .. nobody is forcing you to use copyleft software.
<vdamewood>	rfreeman_w: i believe i can post your personal passwords to every web site on a public forum without being arrested.
<rfreeman_w>	vdamewood, yeap, you should
<ams>	saying that you are forced do to anything is simply a lie.
<rfreeman_w>	vdamewood, though you would be shot in the head while breaking to my home steal my offline computer with passwords ;)   hacking is a special case though
<ams>	the modified bsd license is in this case no different .. it is complaning that i must rreproduce the copyright notice header or something ..
<doomlord>	you can't create something you own with gpl, but one does have to admit, to create 'ownership' of software does require some artificial barriers i.e. a legal system, restricting the ability of hardware to copy something etc.
<denommus>	rfreeman_w: you sound like a typical neckbeard
<denommus>	who thinks people owe you anything
<rfreeman_w>	vdamewood, with medical history i assume you first promised me to not blabber it around before me taking you as my doctor, so there you go
<doomlord>	we have the model of ownership of land, because its' finite. but software can be copied, and it doesnt' degrade
<ams>	denommus: meh, pointless argument ..
<vdamewood>	rfreeman_w: but you're restricting my freedom by doing that.
<ams>	the .. wishy washing back and forth, the totally bogus analogies ..
<rfreeman_w>	denommus, total opposite. no one owes me anything, and everyone can do anything, e.g. fell free to steal my code and all
<doomlord>	and you can still make it economical to give work away, because others can build on it and extend it, which is useful to you again in future.
<doomlord>	the information values itself by the number of copies
<doomlord>	cuts out a whole layer of middlemen
<ams>	denommus: what you ahcking on?
<rfreeman_w>	vdamewood, no, we both agreed, e.g. i contracted you
<twey>	rfreeman_w: even if you don't arrest them, you can still obfuscate the code to death in a variety of ways.  saying that you won't arrest someone for doing something is not the same thing as letting them (read: giving them the freedom to) do it
<aewffwea>	doomlord: ownership if not only about finite things, but about things that require work or investment to produce
<denommus>	ams: every anti-gpl circlejerk is like that. people who either don't understand freedom, don't understand the gpl, or both
<rfreeman_w>	ams, fell fee to keep being wrong =)
<ams>	rfreeman_w: being wrong about what exactly?
<denommus>	ams: i'm working on this: https://github.com/denommus/netwireocaml/
<vdamewood>	rfreeman_w: moving the goalpost eh? whatever.
<doomlord>	aewffwea there is no physical ownership; you need an enforcer
<aewffwea>	doomlord: are you talking about software?
<ams>	rfreeman_w: you have no business telling me that i cannot run, modify, distribute, or study a program.  that is what freedom is about.
<ams>	denommus: nice.
<ams>	denommus: i wrote 831 tests this weekend ...
<doomlord>	aewffwea yes software. i'm not suggesting copyright is evil, but, you have to ask, is it really optimal to structure technology around artificial barriers
<rfreeman_w>	vdamewood, not moving anything. your analogy is invalid because with a doctor i agreed.  if i would contract you to write something and i would in turn agree to publish any patches to the code then it is kind of different then if i would somehow acquire gpl'ed code.
<ams>	denommus: beating the crap out of the zetalisp compiler for kicks ..
<aewffwea>	doomlord: you also need an enforcer to own land...
<rfreeman_w>	vdamewood, agreement > licence.txt file somewhere
<aewffwea>	doomlord: if not, someone bigger and uglier will come and try to throw you out of your home
<doomlord>	aewffwea but its' more of a physical thing.. territory cannot be shared
<denommus>	rfreeman_w: the gpl is a contract
<doomlord>	software can
<rfreeman_w>	ams, exactly, and yet you want to order someone to release his code. now that is sort of contradiction
<denommus>	rfreeman_w: if you want to share the software, you must agree to gpl's terms
<denommus>	rfreeman_w: that's fucking it
<ams>	rfreeman_w: you are not obligated to release the program.
<aewffwea>	doomlord: bank accounts balance can also be shared... we could easily add 10 millon dollars to each bank account in the world...
<ams>	rfreeman_w: so that is simply a lie.
<aewffwea>	doomlord: the only issue is that money will lose value if we do that
<doomlord>	money is a claim on real resources. that would just create inflation.
<rfreeman_w>	denommus, do you see a difference between us negotiating terms and then both agreeing,   versus  finding a dvd disk that has a licence.txt file or not?
<denommus>	rfreeman_w: you don't even need to agree with the gpl if you just want to use the software. but it's clearly stated, as clear as the day, that you must agree to it if you want to share it
<doomlord>	right we can't copy what the money can buy
<aewffwea>	doomlord: the problem is....
<ams>	and that is due to the fact tha you should not be able to restrict _other_ peoples freedom./
<doomlord>	i regard the need for copyright and ip as a regretable side effect of the rest of the world
<aewffwea>	doomlord: you tell oracle, there is no copyright nor anything any more... software from now on is free for everyone... do you think that someone will release a new version of oracle? if they can't charge for it?
<rfreeman_w>	ams, you restrict my freedom to release bin but not src though, you just said it
<ams>	rfreeman_w: no such thing, please stop lying.
<doomlord>	aewffwea people only need to charge for it for acess to other resources
<vendu>	hello :)
<denommus>	ams: and in my day-to-day job i'm doing qt with c++ and qml
<vdamewood>	hello, vendu.
<inphase>	rfreeman_w: the gpl works because you by default do not have the right to modify and rerelease and/or copy someone else's copyrighted material.  the gpl is merely a license which grants you rights that you do not otherwise have, but comes with conditions you must follow to maintain those rights.  if you violate the gpl you have simply removed your own right to redistribute the software, and must stop doing so.
<rindolf>	vendu: hi, sup?
<aewffwea>	doomlord: access to other resources?
<ams>	denommus: nice.
<vendu>	hey vdamewood, rindolf :)
<doomlord>	right, you only charge $$$ for software because you need food etc.
<ams>	denommus: i also converted the chinual from bunch of pdfs to a single pdf ..
<vendu>	not much is up here, how about you guys?
<aewffwea>	doomlord: sure
<doomlord>	software itself has no need to be artificially scarce
<rindolf>	vendu: i solved another project euler problem today.
<rindolf>	vendu: and did qa work for two mageia bugs.
<_w_>	gpl in and of itself is based on the idea that you can own ideas and mathematics
<ams>	denommus: i'd really love to be able to rebootstrap all of genera from scratch that would be so cool..
<rfreeman_w>	ams, i just given you example: you could sue or arrest me for not releasing src/ in case i released bin/ - in the case if i got src/ by forking gpl.  the issue here is that this can happen without a real agreement prior to creating the initial gpl software
<doomlord>	we add artificial scarcity to software because we use it for advantage in the finite, physical world. that sucks.
<aewffwea>	doomlord: a lot of medicine and food and luxury items don't actually need to be artificially scarce... they are just scarce because if they produce too much, the price will drop....
<ams>	rfreeman_w: again, bullshit.
<doomlord>	^we typically need it for gaining advantage.
<pyon>	twey: i can see that the designers of this pony language are pretty game when it comes to dealing with subtyping: (1) both nominal and structural, (2) unions and intersections.
<nisstyre>	rfreeman_w: inphase is right, you're probably thinking of software that has no copyright associated with it
<rfreeman_w>	inphase, yeap, well i just do not give crap about licenses, only about agreements
<rindolf>	pyon: ah, pony.
<ams>	rfreeman_w: i'll refrain from talking to you, since you are purpopsley trying to make falsehoods, illogical claims, and constantly lying.
<doomlord>	aewffwea i tend to think with physical goods , land, food, .. the scarcity is real
<rindolf>	pyon: so you started studying it?
<denommus>	aewffwea: that's... articial scarcity
<aewffwea>	doomlord: not always
<doomlord>	malthusian pressure
<rfreeman_w>	nisstyre, i know what the current law states. i am just saying i do not agree and do not respect it
<vdamewood>	ams: doesn't it suck when people argue in fallacies?
<denommus>	i'm ignoring rfreeman_w
<_w_>	if you do not agree with the idea of intellectual property rights, then obviously gpl is not going to be something you like
<ams>	vdamewood: yes.
<pyon>	rindolf: i'm just reading the tutorial.
<inphase>	rfreeman_w: well that's fine, but if you don't agree to the gpl license, you then do not obtain any rights to use the gpl'd source in any way which would violate the original copyright on it.
<nisstyre>	rfreeman_w: you can't disagree that it's the law though
<nisstyre>	and that the gpl works as intended
<doomlord>	aewffwea i accept there might be exceptions but for anything really important i'd imagine we're right up to the edge
<denommus>	_w_: i don't agree with intellectual property rights. but gpl is a nice "hack" over it
<doomlord>	food, shelter, water,..
<aewffwea>	doomlord: there are a lot of places in the world with a lot of land available
<_w_>	denommus: no, i really don't think it is. i think gpl backs up and supports copyright enforcement
<denommus>	doomlord: nope
<ams>	lets not call it intellectual propery rights ..
<ams>	there is no such thing ..
<doomlord>	i accept its' fair to maintain ip when work was already done in the understanding you'd be paid
<aewffwea>	doomlord: and no one living there
<denommus>	doomlord: there's more available shelter than there are homoless people
<nisstyre>	it's not really a "hack" since it's been held up in court
<rfreeman_w>	nisstyre, i know that is the law (in most of the world), i was instead saying that this law removes a freedom, meaning that you are conditionally forced to do something, and that is not even an agreement
<_w_>	denommus: and is a useful propaganda tool to make programmers think such rights is a good thing
<ams>	it conflates like at least four, incompatible, branches of law ..
<nisstyre>	so it's just the law
<denommus>	doomlord: this "scarcity" is also artificial
<rindolf>	pyon: ah.
<doomlord>	but i think the whole idea of ip is a regretable side effect of other problems. i would much rather see gpl everything.
<ams>	patent law, copyright law, trademark law, contract law .. prolly something else ..
<aewffwea>	doomlord: http://www.huffingtonpost.com/2012/08/21/food-waste-americans-throw-away-food-study_n_1819340.html
<nisstyre>	rfreeman_w: so you disagree with the entirety of contract law?
<vdamewood>	ams: 'trade secrets'?
<nisstyre>	rfreeman_w: you don't think people should be contractually obligated to do things?
<ams>	vdamewood: prolly ..
<rfreeman_w>	nisstyre, i agree with contracts, but not with copyrights or patents
<denommus>	_w_: i don't agree. i think gpl tries to subverse copyright enforcement while it still exists
<_w_>	doomlord: if we cannot defeat copyrights, i would much rather see everything released into the public domain than into gpl
<doomlord>	if my starting point in life was enough land to live off, wouldn't it be nice to just gpl everything and create for myself and for others, for the pure joy of it.
<rfreeman_w>	for me copyright (not based in a contract agreed prior to creation of work) is basically as bad as patents
<doomlord>	however that was not my starting point...
<rfreeman_w>	it is the same things on other scale
<nisstyre>	the public domain will be tiny if the government has its way
<denommus>	_w_: it's more or less how anarchism sees welfare states: while anarchism wants to get rid of the state, the welfare state is better than what most countries have now
<ams>	_w_: that would be hurtful to copylefted software, since people could/would refrain from releasing any soure code, thus suberting peoples rights to computer programs.
<_w_>	or whatever the closest legal equivalwent is
<doomlord>	i needed to engage in artificial scarcity to get tokens to get acess to food and shelter.
<doomlord>	i regret that but i had no choice.
<inphase>	rfreeman_w: do you expect the creator of content to sign an agreement with every human alive to secure exclusivity of sales of something?
<_w_>	ams: i disagree, obviously
<rfreeman_w>	nisstyre, as i said twice, i think people should keep contracts. contracts that they negotiated and both sides accepted
<travelr>	i see this structure from time to time: like a tuple, but a vector of tuples within a single vector, like this: ["a", "b", "c", "a", "b", "c", "a", "b", "c'] how is this called?
<rfreeman_w>	inphase, that is what they would have to do to morally be in position to arrest people for using copies of their software that they acquired somewhere
<_w_>	i think "copyleft" should die - software that does the same thing tend to go in order from proprietary software to copyleft software to public domain or equivalent
<ams>	_w_: there is little to disagree with, apple would simply take gcc and not release any updates to it.  the whole reason why there is a objective c compiler that is free software,.
<vdamewood>	travelr: i can't quite tell what you're asking.
<ams>	_w_: so you cannot disagree with something that is factually correct.
<_w_>	once someone makes software for something public domain, the gpl version isn't useful for any purpose
<ams>	ofcourse it is.
<rfreeman_w>	inphase, this being hard for developers to get money does not change much moral evaluation of this
<_w_>	ams: i don't feel bad about apple doing whatever they want with their own work
<ams>	copyrleft sees that further modifications stay usable.
<vendu>	vdamewood, i'm getting a new game :d
<rfreeman_w>	and luckily has work arounds, people are paid for (gpl and openbsd and public domain) software
<_w_>	ams: they're free to keep secrets if that's what they want
<vdamewood>	vendu: which game?
<ams>	_w_: then you clearly do not get what free software is about.
<vendu>	hey nisstyre :)
<_w_>	and i do not think that is a bad thing
<vendu>	vdamewood, kung-fu master for my atari 2600 :d
<doomlord>	greetings vendu
<vendu>	vdamewood, my friend said it's one of the best games for the 2600 :)
<ams>	_w_: nobody is arguing that they cannot keep secrets, it is fully possible with free sopftware and copyleft software as well.
<vdamewood>	vendu: never heard of it.
<vendu>	hey doomlord :)
<_w_>	ams: i don't care what /you/ think free software is about. personally i am against all ip rights, software or otherwise
<vendu>	vdamewood, you know atari 2600 though, right? =)
<vdamewood>	vendu: nope. is that anything like the atari vcs? :)
<rfreeman_w>	_w_ highfive o/ fuck ip laws and patents
<ams>	_w_: so you wish to live in a totally unusable blobworld.
<generalvagueness>	i forget, if you use some gpl'd code in a project, do you have to provide just that code, or all of it?
<rfreeman_w>	yeah like in openbsd world
<_w_>	ams: we disagree on the outcome of abolishing ip rights
<vdamewood>	generalvagueness: the 'work as a whole'
<ssta>	generalvagueness: depends
<denommus>	i wish we didn't have to worry about licenses and could just talk about actual programming
<ams>	_w_: that is the outcome of abolishing _copyright_ law.  i have no idea what "ip rights" means.
<vendu>	vdamewood, might be the exact same thing, let me link you =) http://en.wikipedia.org/wiki/atari_2600#/media/file:atari-2600-vader-fl.jpg
<inphase>	rfreeman_w: open sharing of ip is something i favor greatly in most contexts for furthering progress.  but this only works in markets where there exists a method of funding the work.  ip law gives us a method of collectively paying for things to be developed in markets where no one has figured out another collective way to fund development.
<vdamewood>	vendu: just kidding of course. yes, i know the 2600.
<_w_>	the idea that companies will release irreversably obfuscated blogs in a world where such blobs hold no special legal protections seems to be ludicrous
<vendu>	vdamewood, this is the 1982-model nick-named 'darth vader' :)
<_w_>	*blobs
<ams>	people who use the word intellectual propery have no clue about law.
<ams>	simple as that.
<rfreeman_w>	_w_ ams caved under my arguments and started ignoring me, but you could tell him about hickstarter for public-domain totally open projects, that works
<vendu>	i have one of these :)
<vdamewood>	vendu: the atari vcs was the earlier name for the atari 2600.
<_w_>	rfreeman_w: don't worry, he's "ignored" me too
<ssta>	_w_: in what way do companies not already do that?
<vendu>	vdamewood, :)
<rfreeman_w>	*kickstarter ;)
<ams>	rfreeman_w: under us and eu law you cannot release something under the public domain.
<generalvagueness>	plenty of lawyers use the term "intellectual property"
<_w_>	ssta: this world is not one where software holds no legal protections
<ams>	generalvagueness: plenty of them are stupid.
<ams>	and have no cluee.
<ams>	:-)
<_w_>	ssta: i was talking about a hypothetical, in case you missed the context
<rfreeman_w>	ams: well pd-like... so  i guess ftw licence or cc0 or whatever
<inphase>	rfreeman_w: having sensible ip law is not just about being able to make money.  it's about ordinary people being able to get things that we wouldn't be able to get if people didn't get paid to make them.
<ssta>	_w_: i know...i'm saying that by and large companies do release unreadable blobs
<denommus>	_w_: the... obfuscated blobs aren't just a matter of legal protection
<ssta>	already
<vendu>	vdamewood, i have circa 30 games for it + basic programming and the keyboard controllers :d
<ams>	19:52 /ignore _w_ rfreeman_w
<_w_>	ssta: of course they do - and if you reverse engineer them and release tools that subverts their control, you get sued and/or prosecuted
<denommus>	_w_: they are a matter of not giving your opponents free advantage
<vdamewood>	vendu: my earliest console is a nintendo famicom.
<rfreeman_w>	inphase, right but  1) some developer being able to earn   and  2) forcing me to do something for "ordinary people"   are both things people should have freedom to ignore
<_w_>	ams: how about this, stop announcing your ignores, whether you truly ignore or not, or be quieted
<ssta>	_w_: indeed.  i don't see why lack of copyright protection would change the blob situation...only their ability to sue
<denommus>	_w_: even if he would not be protected by law, they would try to avoid letting their rivals know about the code
<inphase>	rfreeman_w: i don't quite follow the point.
<generalvagueness>	does gpl have any recourse or whatever for changing your mind? making some code more or less free than you originally did?
<rfreeman_w>	inphase, developers income is not my problem morally
<_w_>	ssta: if there is no ip protection, then any lawsuit is trivially dismissed
<_w_>	denommus: of course they would, and they would fail
<denommus>	generalvagueness: if you're the owner of the code, you can do anything you want
<ams>	generalvagueness: if you are the copyright holder, you can always change the license to something else.
<rfreeman_w>	inphase, some things become not profitable without ip slavery. not my problem.   same as some things became not worth it after abolishing slavery
<generalvagueness>	hmm
<ssta>	_w_: yes, a dream state.  i still don't see how that will change the blob situation at all
<mike802>	hello everyone
<vendu>	vdamewood, i wish i'd have a few hundred euros extra :s
<inphase>	generalvagueness: if you are the original developer, and no one else contributed, you can rerelease gpl'd code under another license.  but you cannot retract the rights you already gave someone else who got a gpl'd copy.
<_w_>	ssta: perhaps you should go back and read what i wrote once more
<denommus>	generalvagueness: but whatever you already released by the gpl is forever licensed to the people you shared
<vdamewood>	vendu: what for?
<rfreeman_w>	there are basically 2 ways into software freedom
<vendu>	vdamewood, sgi origin rack server + some disks for a raid5 setup :)
<vdamewood>	vendu: i wish i had $3500.
<rfreeman_w>	1. force everyone (e.g. who finds and picks up your software of warez ftp)  to work for the foss movement by re-releasing modyfications
<rfreeman_w>	or
<rfreeman_w>	2. let everyone do what the fuck they want to  (do not force them to release anything or do anything in any condition)
<doomlord>	hell i wish someone would copy my pet language
<rfreeman_w>	for me is the full freedom
<rfreeman_w>	of course you can still demand someone to release the code, if your hired or otherwise **contracted** him,  the key difference is that first he agreed and then you given him the code
<rfreeman_w>	the base code
<inphase>	rfreeman_w: i do not accept the notion of "ip slavery".  and i made no suggestion that anyone has a moral obligation to help developers profit.  but we have a societal interest in financially incentivizing the development of new things, so that we get new things.  i don't know about you, but i like new stuff being invented.
<rfreeman_w>	this is in exact opposition to doing following:
<rfreeman_w>	--- exxagerated example ---
<generalvagueness>	does putting the code on a public website mean you've shared it with everyone, then? and would they be subject to the same restrictions as before if you re-released it?
<ams>	vdamewood: what would you do with those 3.5k?
<ams>	generalvagueness: putting something up for download means nothing.
<generalvagueness>	mm
<inphase>	generalvagueness: if you release under multiple licenses, they can choose which to accept.
<rfreeman_w>	main.c  int main() { return 0; }
<rfreeman_w>	          readme.txt   if you ever use this code or something based on it - then you must release your code -or- i will arrest you
<ams>	generalvagueness: the copyright license of something is what allows you to download, or distrinbute, or whatever.
<vdamewood>	ams: buy a new computer.
<rfreeman_w>	^--- this is to what patents,  and copyrights, boil down into
<ams>	no license == not allowed to do anything.
<denommus>	generalvagueness: if you made it public, whoever got it while it was public will keep the rights to re-share it through the gpl
<ams>	vdamewood: such an  expensive computer?
<denommus>	generalvagueness: but you're not required to keep it on public forever just because you made a gpl version
<ams>	well, 5 years .. or so .. if you are re-distribting it.
<serses>	what is the fastest way to count a specific pixel in a 10mb bmp?
<rfreeman_w>	inphase, i am saying that this is immoral. yes perhaps it is good for development of software in general, but this is not freedom
<ams>	serses: just iterate over the bmp file, and count?
<vendu>	vdamewood, get good second-hand parts and cut the budget to half :)
<_w_>	generalvagueness: different jurisdictions have different approaches to implied rights; generally speaking however, if you provide a "download" link that is clearly intentional, and does not otherwise grant any licenses, anyone has at least the right to download and use the software
<_w_>	*implied licenses
<serses>	but if i divide the image in 2 regions and feed each region to cpu?
<serses>	i meant 2 core cpu
<vdamewood>	ams: vendu: it's apple, and i buy the highest end stuff i can get for my main laptop because of virtualization.
<ams>	serses: you could.
<_w_>	inphase: i hold that the societal interest in financing innovation can be done without per-copy restrictions
<ams>	serses: you could pass each odd row to one cpu, and even row to another.
<vendu>	vdamewood, well, i'm not gonna judge you - i must've put 10 times of that up in smoke, literally :)
<vendu>	-of
<_w_>	inphase: many alternatives exist; patronage (private or government), assurance contracts, general bounties, etc
<ace>	i get this following error in python, but cannot find solution on google:   typeerror: unsupported operand type(s) for +: 'form' and 'float'
<ace>	what seems to be wrong?
<vdamewood>	vendu: of?
<ams>	what is form?
<vendu>	vdamewood, -of -> brain fart
<_w_>	ace: what are you doing? pastebin some code so we have a chance at letting you know how to fix it
<vendu>	10 times that :)
<ams>	ace: you are doing summation on something that is a form and a float.  what is form?
<serses>	i got another idea to map the file in memory and do a search in it. but i don't know which one would be faster
<rindolf>	ams: a class likely.
<vendu>	i'd say i have probably blown 30-50k on the smoke... :( :d
<inphase>	_w_: yeah, i think there are a number of other ways.  i would like to see things like software development grants, collective financing (like kickstarter), and so forth.
<vdamewood>	vendu: i didn't even read it. it's as if my brain filtered it out for me.
<vendu>	:)
<ace>	http://ideone.com/3qfsca
<ace>	here's the code, basic cfd problem benchmarking
<vdamewood>	vendu: well, my current system just fell out of warranty, and i'm getting tired of only being able to run 3 vms at once.
<daniellundahl>	anyone that has a short how-to to get data from rpc service? can't find anything useful
<rfreeman_w>	inphase, yeap kickstarer-like should be the future.  other important way is to develop something and keep it a secret
<ams>	ace: it would be helpful with which line the error is at. ..
<rfreeman_w>	inphase, one other things is that companies can do mini "kickstarters", .e.g "we could do our paid project faster if someone would make a library that say packs files"
<_w_>	daniellundahl: rpc is a very generic term
<inphase>	rfreeman_w: trade secrets do not work well with software, since you must distribute it for anyone to use it.
<rfreeman_w>	inphase, most of this things would be better, and with profit for the person paying, if open
<ams>	ace: but hey, we are infinitly many monkeis and can figure out anything!
<daniellundahl>	_w_: i want to get data from a xml-rpc that needs authentication
<ace>	ams: already on it http://ideone.com/tiim8v
<ams>	you don't even need to specify your question ..
<_w_>	daniellundahl: that narrows it down somewhat, but still very vague; what have you tried so far?
<rfreeman_w>	inphase, i mean not sellable software, but stuff that you just host (all kind of servers, services, yt, gmail etc)   and things that you just use (like a software to run your factory)
<vdamewood>	vendu: but the replacement system would have 16 gigs of memory, and a 1 tb ssd, so yay!
<vendu>	vdamewood, cool :)
<horny-sama>	rindolf: i passed all my cs class this semester
<horny-sama>	:p
<vendu>	vdamewood, i plan on eventually building a 4-core system
<travelr>	i see this structure from time to time: like a tuple, but a vector of tuples within a single vector, like this: ["a", "b", "c", "a", "b", "c", "a", "b", "c"] anyone know how is this called?
<vendu>	with 16 gigs
<ams>	ace: i would sgugest you look at what is going on line 44, and what is going on in the file form.py.
<daniellundahl>	_w_: i try to do it on my site built on drupal 7. not used to get data from api's so i'm not sure at all actually how to do it.
<rfreeman_w>	inphase, also sometimes it is in your interest that everyone gets a free copy of your software, example: firefox (google ads),  or altcoins/bitcoins (to early investors)
<rindolf>	horny-sama: excellent!
<rindolf>	horny-sama: good job.
<rfreeman_w>	inphase, this is why i believe that the moral way (no patents / copyright restrictions) is totally doable nowdays
<ams>	travelr: a vector?
<ams>	travelr: a list?
<rfreeman_w>	inphase, and on that note i go for today, cu,  _w_   o/
<rindolf>	vendu: my relatively old computer has 8 gb of ram.
<vdamewood>	vendu: the new system would have a 2.8 ghz quad-core processor, which is better than my current 2.2 quad core.
<ams>	travelr: a rib cage? .. no, that would have had substrcutres..
<inphase>	rfreeman_w: only in some markets.
<serses>	array
<daniellundahl>	_w_: tried to use drupals xmlrpc but i think it's just for letting others get data from my page.
<ams>	travelr: one can also call it a ribcage ..
<ams>	since it kinda looks like one ..
<ams>	though ribcages tend to look more like ((name name name ...) (value value value ...))
<ams>	where the first name has its value in the second pair, first element ..
<bytefire>	hi
<bytefire>	how do you set up mutt mailbox?
<ams>	http://www.mutt.org/doc/manual/manual-3.html
<travelr>	ams:  aah i see
<ams>	bytefire: please donate some money to the fsf so that we can continue providing you with the best search experience.
<vendu>	hmm
<vendu>	anyone play civilization 5? :)
<vendu>	i could get the game of the year edition for 10 euros...
<remram>	is there any way to check downloaded root cacert certificates?
<remram>	i mean, they send them from their https website, signed with their own ca
<remram>	chicken and egg
<bytefire>	thanks ams. i have a specific problem.
<bytefire>	how do you read emails using mutt?
<denommus>	pyon: what do you think is more readable for the public api? <|> or <+>?
<bytefire>	i get the message: /var/mail/$user is not a mailbox
<ams>	bytefire: you're kidding me? go tread the manual.  seriously.
<bytefire>	any one?
<ori_b>	bytefire: 'man mutt'.
<rindolf>	denommus: with the angle brackets or without them?
<denommus>	rindolf: with
<ori_b>	although, judging by that question, you're probably trolling.
<rindolf>	denommus: ah.
<denommus>	rindolf: <|> is the alternative operator. <+> is the arrowplus operator
<uberlambda>	vendu: i'd like to get into rts, but the most "strategic" games i've played are the worms series :p
<rindolf>	uberlambda: i enjoyed warcraft 2.
<rindolf>	uberlambda: i gave up on warcraft 3.
<mike802>	worms 2 is legendary
<uberlambda>	armageddon :d
<uberlambda>	also, revolutions is quite nice
<ams>	mm...
<mike802>	i think i liked the proportions the most
<ams>	oo.. i would love to see one clone of a game .. been thinking of writing it .. but meh, ..
<uberlambda>	256-player worms in realtime
<uberlambda>	just imagine the chaos
<ams>	cannon fodder ...
<uberlambda>	i don't get how you're supposed to integrate, say, networking with functional reactive programming
<pyon>	denommus: i don't think either is more readable than the other, but i don't think there's any advantage to deviating from haskell's naming conventions.
<pyon>	denommus: at least not in this case.
<uberlambda>	how would that even work? a boatload of signals everywhere?
<mike802>	lambda, that's not really the point of functional programming
<pyon>	denommus: the last thing we need is to make it harder for ideas to flow back and forth between ml and haskell. :-p
<mike802>	why wouldn't you just use another language
<mike802>	maybe one designed for that kind of workload
<myrl-chan>	uguu
<uberlambda>	mike802: i'd like to create a simple frp game, but it seems like frp alone can't cut it
<mike802>	i heard someone made a game using just css
<broolucks>	sounds like masochism
<uberlambda>	elm seems nice for simple stuff... but it doesn't seem capable of bigger things
<denommus>	pyon: well, haskell has both
<denommus>	pyon: and in netwire's case, they mean the same
<mike802>	sounds like nerd rage
<pyon>	denommus: ah, true.
<mike802>	i do this and i'm jealous of everything everyone else does
<mike802>	wah
<mike802>	wah wah wah
<denommus>	pyon: should i export both?
<uberlambda>	mikr802: ?
<uberlambda>	*mike802
<pyon>	denommus: yeah. it isn't like it will pollute the global namespace, anyway, thanks to modularity. :-p
<mike802>	are you proposing one universal language?
<uberlambda>	what about non-reactive, functional programming?
<denommus>	pyon: fair enough
<mike802>	i think there's an xkcd comic about that
<mike802>	just like every other language ever written, right?
<uberlambda>	https://xkcd.com/927/
<ams>	mm.. anyone got any good books on 2d games?
<denommus>	ams: most game programming patterns are shitty anyway
<uberlambda>	most games seem to use oop massively
<broolucks>	well, no, some languages never pretend to universality
<broolucks>	and then people manage to make games with them anyway
<broolucks>	:(
<uberlambda>	and mutable state
<mike802>	are you hustling something?
<denommus>	only now they are realising that composition is better than inheritance
<denommus>	and some are even realising that immutability is a good thing
<denommus>	i'm waiting for them to reinvent frp
<uberlambda>	the problem is that i can't see immutable state to always work
<uberlambda>	say, what about big blobs like voxel chunks?
<uberlambda>	do you copy them each frame?
<denommus>	uberlambda: no
<ams>	uberlambda: well, only interested in doing something revlativley simple .. ..
<pyon>	denommus: it's hard for people who think in overly concrete terms to realize that you can deal with time/space-varying values as first-class entities.
<mike802>	how is functional programming different?
<denommus>	uberlambda: you should model mutable state in terms of immutable state
<uberlambda>	ams: i've already rendered some voxels in c, it wasn't that hard. efficiency, though...
<denommus>	uberlambda: just see your behaviors/signals as functions from time to the value on the current moment
<ams>	uberlambda: meh, i already have a language where i can optimize if i need to the level of hand coding inner loops as microcode if i need to ..
<uberlambda>	ams: write assembly by hand, you can't get faster than that
<pyon>	denommus: the problem is that most programmers really think in terms of storing values in memory cells. which isn't really their fault - that's how imperative languages encourage you to think.
<ams>	uberlambda: sure i can, i can write lisp.
<broolucks>	pyon: it's also the way the hardware works, to be fair
<mike802>	lisp looks like an equation, right?
<ams>	uberlambda: http://www.pvk.ca/blog/2014/08/16/how-to-define-new-intrinsics-in-sbcl/ do that in c.
<pyon>	broolucks: there are these things called "compilers", whose task is to translate human-understandable languages into machine-executable ones.
<uberlambda>	most middleware/apis rely on a c-like environment to work. wrapping everything in lisp is a pain
<pyon>	broolucks: get with the times. it isn't 1950 anymore.
<uberlambda>	sure, it can be done, but i don't have time to reinvent/rebind everything
<mike802>	some people just code assembly
<mike802>	go to #asm
<gedamo>	##asm
<ams>	uberlambda: ffi is trival in lisp.
<uberlambda>	mike802: it would make sense for a microcontroller
<uberlambda>	ams: trivial, but requires time
<ams>	i just code lisp, don't have to bothered with assembly =)
<ams>	uberlambda: you mean it is hard to run (process-c-header "foo.h") and get everything for free?
<ams>	yeah .. very much time ..
<uberlambda>	pyon: well, the memory is like that, right?
<uberlambda>	i mean, the actual memory is just a chain of bytes
<broolucks>	pyon: i know that, what i'm trying to say is that a more straightforward mapping from the language to the machine code will sate many people's need for control
<mike802>	pretty obvious stuff
<pyon>	broolucks: need for control? lmao
<mike802>	of course microcontrollers use assembly
<pyon>	broolucks: they aren't in control, otherwise they wouldn't introduce bugs routinely.
<ams>	mike802: meh, they do only because of i dunno what .. i write lisp code for microcontrolers.
<uberlambda>	i mean handwritten assembly
<mike802>	bug fixes are for stupid and lazy people
<mike802>	 ican't think of a use for that
<nitrix>	i think there's a serious problem when 50% of your time is spent towards bug fixing.
<broolucks>	pyon: look, i don't think they are necessarily correct to do things that way, but i wouldn't really judge them for it
<nitrix>	and i'm being very generous.
<uberlambda>	i don't  get how signals are going to save me from storing voxels as a blob
<uberlambda>	i would still need something to store it, right? and they must be aligned
<pyon>	broolucks: i think your argument would be more plausible if everyone used c.
<uberlambda>	aligned as in one after the other
<uberlambda>	i mean contiguous.
<mike802>	did you just copy that from someone else?
<pyon>	broolucks: but pretending that there's a straightforward between c++ and <insert anything else here> is just ridiculous.
<uberlambda>	c is pretty simple to interface with most langs
<pyon>	broolucks: errr, straightforward mapping*
<pyon>	uberlambda: that's isn't really an intrinsic virtue of c, it's a side effect of everyone else bending over backwards to make it easy to interface with c.
<broolucks>	all mappings are somewhat indirect, but some are more than others
<mike802>	lol
<pyon>	broolucks: it's ultimately primarily a matter of familiarity. whatever one's already used to, no matter objectively how convoluted, is "obvious". whatever one doesn't know, no matter conceptually how straightforward, is "weird".
<pecorade>	hi
<myrl-chan>	i think i'm being too mean to my friend. lol.
<pyon>	myrl-chan: why?
<pyon>	pecorade: hi.
<pecorade>	pyon: ;). 'sup?
<ori_b>	pyon: the c abi is pretty easy to interface with.
<myrl-chan>	pyon: first, i gave him pics of trap crossplay, he thought it was pretty hot. then i told him that that was a boy.
<pyon>	myrl-chan: lmao
<mike802>	weird
<pecorade>	myrl-chan: then he was like "/cares" and continued fapping on them.
<mike802>	anyone following this?
<archilius>	hey everyone.
<ori_b>	pyon: this isn't intrinsic in c, but if you had 2 gc'ed languages, you do end up getting interesting times trying to make them play well together
<ori_b>	for example
<pyon>	myrl-chan: i don't see what's the fascination with traps, to be frank.
<rindolf>	pecorade: hi, sup?
<denommus>	pyon: that's a culture we ought to change
<ori_b>	and given modern c++, you basically need a c++ compiler to handle templates
<broolucks>	pyon: oh, for sure, i'm just saying that understanding the hardware already entails some understanding of imperative languages, because that's what's most similar, so there's some synergy there, even if the synergy is ultimately counter-productive
<myrl-chan>	pyon: then just this morning, i added him on my girlish alt account(pls don't ask), and had a good laugh again.
<pyon>	pecorade: "'sup?" --> not much, vbing, how about you?
<pyon>	ori_b: ah.
<ori_b>	more or less, if you have unboxed generics, you end up with a similar pain
<pecorade>	rindolf: hi. i'm trying to deal with qt clustering algorithm. apparently i can't make it work.
<the8thbit|work>	penis
<ori_b>	(you need to know how to take the imports from $other_language and compile it to something $your_language knows)
<pyon>	broolucks: "counter-productive" --> that's going too far. imperative programming is a good thing! just not the only good thing.
<ori_b>	jits? holy shit you're in for a world of pain.
<ori_b>	etc
<pecorade>	pyon, rindolf: also i'm working on my physics project: an hall effect simulation.
<_slade_>	is id considered a higher-order function?
<myrl-chan>	i don't really get how jit works now.
<pyon>	ori_b: well, that's true.
<ori_b>	pyon: the hardest part of c is macros and static inline functions in headers.
<pecorade>	and showing some interesting applications like speed detection.
<ori_b>	90% of the time you can ignore those.
<myrl-chan>	like, does it compile each line, then jump back?
<myrl-chan>	i mean.
<myrl-chan>	like...
<pyon>	mmm... static inline functions in headers aren't that hard.
<myrl-chan>	compile -> execute -> compile -> execute (repeat)
<_slade_>	myrl-chan: typically it only compiles heavily-used code to native code
<pyon>	i'd take them over macros anytime.
<ori_b>	pyon: well, you have to somehow generate code for them.
<_slade_>	myrl-chan: the rest is interpreted.
<ori_b>	pyon: eh, for bindings, it's a similar problem.
<mike802>	i think it means the top layer of function stuff
<myrl-chan>	_slade_: that's also what i was thinking.
<myrl-chan>	_slade_: like, main code is interpreted, loops are compiled.
<rindolf>	pecorade: qt as in quicktime or the "qt" framework?
<myrl-chan>	if everything would be compiled, then why not use aot compilation?
<pyon>	ori_b: you can add a single *.c file, whose sole purpose is to provide non-static-inline wrappers around static inline functions.
<pyon>	ori_b: it's tedious, but easy.
<ori_b>	pyon: sure. you could also manually wrap macros similarly.
<ori_b>	point is that this is the worst you have to deal with in c.
<ori_b>	(a bit of potential weirdness with varargs, maybe?)
<pyon>	i'd rather not touch varargs.
<myrl-chan>	brb
<myrl-chan>	pyon: ++
<ori_b>	i guess, there's potentially some tedious gc interaction to deal with
<ori_b>	eg, c code taking ownership of pointers.
<ori_b>	so you need to pin/unpin that in the gc.
<ori_b>	so, i think there were a lot of design decisions that make c much easier to bind to than most languages.
<pyon>	dunno, to what extent is that a consequence of the fact that today's machines and oses are c machines and oses?
<ori_b>	pyon: it's pretty inherent to the language, i think.
<pomf_>	q
<dogpolice>	pyon: trying to change that.
<ori_b>	the only alternative i can see is defining some completely common way of handing *all* type definitions, inlining, and basically putting a lowest common denominator on language features
<pyon>	thought experiment: we already know that lisp machine users typically wouldn't want to use any other language but lisp. (continues)
<pyon>	but, let's say one of us travels back in time and gets his hands on a lisp machine. unfortunately, he doesn't want to use lisp, he wants to use python.
<ori_b>	and even then, you'd have to change language definitions to match.
<ori_b>	pyon: sure; so python wants to call a lisp macro. what happens?
<dogpolice>	pyon: we're done with serial imperative as a community of programmers.
<pyon>	dunno, that's what i'm trying to figure out
<ori_b>	pyon: simple functions are pretty easy, but i don't see a way to handle macros without a huge amount of pain.
<ori_b>	you could do a lowest common "only simple functions are supported", i guess.
<pyon>	mmm...
<dogpolice>	small processes in large batches.
<pyon>	well, i guess the advantage to using c as a systems language is that the core language is already its "simple" subset. (well, fsvo "simple".)
<dogpolice>	it's only simple because it's legacy.
<ori_b>	pyon: yes; basically, c solves the "hard to bind" features by not having them.
<doomlord>	which is why it endures
<pomf_>	going to sleep, dunno why, but i have a hard time staying awake for 24 hours now.
<ori_b>	there's *one* major way i can see c binding being improved; a language with c-level features, but with a gc shared between all language runtimes.
<ori_b>	since gc mismatches are one of the most painful bits of bindings.
<pomf_>	hmm
<_blizzy_>	oh yeah
<_blizzy_>	i was supposed to find a mvc idea
<pomf_>	welp, too sleepy to understand, i thin this has something todo with gc and c, but i can't seem to make a link between them
<pyon>	ori_b: "gc shared between all language runtimes" --> effectively, making the gc a part of the operating system?
<aewffwea>	pyon: check the microsoft managed os
<rindolf>	_blizzy_: so how can we help you with that?
<_blizzy_>	rindolf, idk
<pyon>	ori_b: sharing the gc across language runtimes has a downside, though: it eliminates the possibility of optimizing the gc for the allocation patterns of idiomatic code in specific languages. :-|
<pyon>	anyway, lunch.
<aewffwea>	pyon: you can always make the gc have configuration options
<pecorade>	hmm let's try this... στο πούτσος μου λουλούδια
<rindolf>	pecorade: is this greek?
<sten_shi>	a sta mislite na ovo?
<fiki>	guys a small tip if possible, i have two options, do a software engineering master and do many extra courses in order to qualify or do business informatics and do some extra courses. my final goal is to be a software developer, however i was told that i won't learn much programming anyway in software engineering, that most of it i will teach to myself, so if that's the case why would i bother doing the extra work if i will
<fiki>	end up doing it myself.
<uberlambda>	we don't even have software engineering here :(
<efsnable>	hey
<efsnable>	is this the place to ask for help
<efsnable>	with
<fiki>	uberlambda where is here?
<efsnable>	boolean expressions, pos , sop and universal gates
<pecorade>	rindolf: yep :d
<uberlambda>	fiki: italy... ew
<uberlambda>	there's only a sort of computer engineering and computer science
<uberlambda>	where computer science is seen as "inferior" for most jobs
<uberlambda>	e.g. they hire engineers for programming sometimes :/
<fiki>	the thing i fear most is that my degree will get in my way
<dogpolice>	programmers who are in touch with the metal tend to do a better job in the end.
<aewffwea>	uberlambda: i have the complete opposite experience
<uberlambda>	aewffwea: where?
<fiki>	dogpolice why is that, that doesn't make a lot of sense to me?
<uberlambda>	dogpolice: yeah, but compsci majors are snobbed
<aewffwea>	fiki: in programming your skills are more important than your degree
<aewffwea>	fiki: what do you expect your work to be?
<uberlambda>	here they don't even look at your face if you're not an engineer
<pyon>	aewffwea: i'm not talking about making the gc faster or slower. i'm talking about optimizations that are only correct under certain assumptions (e.g., we can identify large chunks of the object graph that are directed and acyclic).
<uberlambda>	it's just some kind of status quo
<efsnable>	hey is this the place to ask for help boolean expressions, pos , sop and universal gates
<efsnable>	hey is this the place to ask for help boolean expressions, pos , sop and universal gates
<aewffwea>	pyon: yes... there is nothing preventing you for putting some configurations for only part of the objects...
<dogpolice>	efsnable: spamming is not tolerated, just ask.
<dogpolice>	uberlambda: the people on hardware and the people on software are afraid of eachother.
<aewffwea>	pyon: you already have a generational gc, which threats objects in different generations differently... you could have a "generation set thing" for each program, and use different configurations on them
<efsnable>	i dont understand how to convett pos to sop without noting the expression
<dogpolice>	uberlambda: let's make the two absolutely indistinct.
<fiki>	aewffwea well i have programming skills, though i don't have a lot of bare bore knowledge, as in assembly, microcontrollers and too much theory either
<aewffwea>	fiki: what do you want your work to be?
<uberlambda>	dogpolice: i like hw... but i prefer software
<fiki>	aewffwea making high level software, so not like programming a chip
<uberlambda>	it's just that you see job listings for things like web frontend programming etc... for engineers
<dogpolice>	uberlambda: the discipline is there.
<aewffwea>	fiki: be more explicit... which kind of software?
<dogpolice>	you're an engineer, therefore you are effectively "qualified" to be universal.
<aewffwea>	fiki: most people specialize in one specific area
<dogpolice>	more than you can say for a liberal arts major, which is what compsci is.
<aewffwea>	dogpolice: most programmers i know aren't "universal"
<fiki>	dogpolice could you please elaborate why knowing how the metal works impacts your programming skills, the analogy i see in my head is knowing how an engine works makes you a better driver
<uberlambda>	btw, low-level software doesn't seem to pay much for what i've seen
<dogpolice>	aewffwea: that's why they aren't engineers.
<dogpolice>	fiki: you aren't the driver, you're the mechanic.
<aewffwea>	fiki: do you think that a formula 1 driver knows how the engine works?
<uberlambda>	i prefer lower-level things... but it seems like web developers etc. get paid more
<fiki>	aewffwea i don't think he knows the physics behind it
<uberlambda>	or atleast there's much more demand
<dogpolice>	better analogy: a motorcyclist knows how the assembly behaves.
<dogpolice>	if they don't, then it means life or death if a misfire happens.
<aewffwea>	fiki: i can tell you for a fact that some professional players do somethings learn the physics behind their movements
<fiki>	aewffwea so what is your point :p
<aewffwea>	fiki: there are different levels of "programming skill"
<aewffwea>	depending what level you want to be on, you might be interested in the low level stuff or not
<dogpolice>	indeed.
<fiki>	aewffwea does that mean that if i want to be a better programmer i have to know how the cpu works on a basic level, or a transistor etc.?
<dogpolice>	there was a point in my life where i was able to visualize the switching noise of a 6502 when i was analyzing one of my programs.
<aewffwea>	fiki: cpu certainly... i don't think you actually need the transitor thing though
<dogpolice>	that level is for people who devote their lives to this kind of thing.
<fiki>	aewffwea i mean isn't the whole point of high level languages to abstract the low level so you don't have to worry that much about it, sure some basic knowledge is ok, but do i need to know in depth?
<dogpolice>	fiki: higher level languages are only there to do what you don't need to do for boilerplate.
<dogpolice>	one should only use one if they've moved beyond a lower level language.
<dogpolice>	if you're ever going to be a serious software engineer.
<dogpolice>	once you're inventing a macro system, move on.
<python111_>	fiki, higher level is just macro of lower level
<pyon>	fiki: the point is to enable you to say things that low-level languages wouldn't allow you to say. hiding low-level details is just one way to achieve that goal.
<aewffwea>	fiki: i told you... it depends on how "good" a programmer you want to be
<fiki>	aewffwea the best i can be :p
<aewffwea>	fiki: let's show it with an example
<dogpolice>	be the programmer you want to be.
<python111_>	lol
<dogpolice>	we need a lot of them.
<aewffwea>	fiki: write a function to copy memory from an array a to an array b in the fastest possible way in a x86 architecture
<aewffwea>	void memcopy(array source, array target);
<pyon>	aewffwea: wut
<fiki>	aewffwea ok
<aewffwea>	fiki: how would you write that? assuming that's your program's bottleneck
<electrojustin>	rep stos?
<aewffwea>	pyon: the best implementation of that function depends on the x86 architecture details
<dogpolice>	aewffwea: i don't think that's the point.
<fiki>	aewffwea well assembly would be the best way to do this i guess
<dogpolice>	the point is no matter what, you need to know the lower details.
<uberlambda>	low-level -> speed of computation, high-level -> programmer productivity imho
<dogpolice>	be it x86, arm, 6800k.
<dogpolice>	err, 68k..
<aewffwea>	dogpolice: it is... even if you are in a higher language, if you want to maximize performance, you need to know several low-level details
<uberlambda>	i think most front-end devs don't care about performance until absolutely necessary
<fiki>	plus efficiency isn't everything
<dogpolice>	fiki: say that when your world runs sluggish.
<dogpolice>	the only reason people say that is because the hard work has been done.
<uberlambda>	dogpolice: see most of the web
<aewffwea>	uberlambda: that's why i told him... it depends on how good a programmer he wants to be
<doomlord>	efficiency will become increasingly important
<fiki>	dogpolice of course, because you have to balance your time
<dogpolice>	fiki: i have infinite time.
<aewffwea>	uberlambda: how much effort do you think google spends on optimizing the speed of their applications?
<dogpolice>	start optimizing yourself, and your programs will follow.
<doomlord>	energy bills.. battery life
<uberlambda>	aewffwea: most of their time
<uberlambda>	aewffwea: but i don't think that the frontend devs care much about it
<fiki>	though it does bug me when something isn't very well optimized
<aewffwea>	uberlambda: where does this frontend dev work?
<uberlambda>	it's the backend that does most of the job
<aewffwea>	uberlambda: if he works in google, he'll certainly care
<uberlambda>	aewffwea: i think other people will optimize his code for him
<aewffwea>	uberlambda: you're nuts
<dogpolice>	an application will only optimally if all of its parts equalize.
<electrojustin>	"i think other people will optimize his code for him" dafuq?
<dogpolice>	meaning that no part is holding them back.
<dogpolice>	so no, frontend matters.
<dogpolice>	as well as backend.
<uberlambda>	i mean, by writing middleware that speeds things up
<uberlambda>	e.g. faster content cachers, etc.
<dogpolice>	does not save us the work.
<electrojustin>	and who write the content cachers?
<uberlambda>	the backend developers
<dogpolice>	and i'd like to point you to even the crappiest web design house out there, they'll say the same thing. :)
<aewffwea>	uberlambda: i'm guessing that you've never designed any heavily interactive web-app
<fiki>	so what do i do, i haven't done a bachelors in software engineering, i could do a masters with a lot of additional courses i would need to take to qualify
<_blizzy_>	i never understood why people hate it when a new js framework comes out every week.
<dogpolice>	fiki: choose what you want. you are presumably an adult.
<dogpolice>	we can only give you opinions.
<uberlambda>	aewffwea: no, but i've seen many js-something repos with slooow code on github :p
<aewffwea>	uberlambda: it's quite difficult to implement "smooth" web-apps... specially in mobile
<fiki>	well as far as i can tell i can not be a great software developer without solid bare bone knowledge, however time is also a problem here, since it will take a considerable amount of additional time
<puddlejumper>	_blizzy_: i'm sure most people don't give a shit
<dogpolice>	fiki: the best developers have infinite time.
<_blizzy_>	puddlejumper, browse reddit then
<_blizzy_>	c:
<electrojustin>	implement something like negamax and suddenly the value of optimization becomes very clear
<fiki>	dogpolice i really don't know what that means, a metaphor? :p
<dogpolice>	fiki: yeah. meaning i can budget myself faster than you can.
<_blizzy_>	it means the best programmers have time machines
<_blizzy_>	so they have infinite time
<dogpolice>	^ also that.
<python111_>	yep
<puddlejumper>	_blizzy_: you have people that use frameworks that get shit done and people that think they're cute and don't use frameworks and hardly get anything done
<fiki>	dogpolice how do you budget faster :p?
<aewffwea>	_blizzy_: do these programmers programmed their own time machines?
<uberlambda>	aewffwea: but most optimizations come from the backend, e.g. the renderer/scripting engine
<_blizzy_>	aewffwea, yes
<_blizzy_>	puddlejumper, true
<dogpolice>	fiki: by being close enough to the metal to know what needs my attention first and last.
<_blizzy_>	however, i think there is a point where
<dogpolice>	and for how long.
<_blizzy_>	you shouldn't use frameworks
<dogpolice>	project deadlines for me are in terms of cycles, not weeks.
<_blizzy_>	like, you shouldn't be using 20 frameworks in one app
<aewffwea>	uberlambda: all parts are optimized... if you don't optimize a part it becomes the bottleneck
<puddlejumper>	_blizzy_: it belongs in the wheel reinvention category
<dogpolice>	optimize yourself, and your programs will follow.
<python111_>	lol
<uberlambda>	aewffwea: indeed it will. but people won't care if it's not google or something similiar
<fiki>	i think this is getting philosophical :p
<dogpolice>	go to any engineering college.
<electrojustin>	it always does
<electrojustin>	either philosophical or religious
<puddlejumper>	getting esoteric
<aewffwea>	uberlambda: you are wrong
<puddlejumper>	need that spell to make java work without 1000+ lines of boilerplate
<_blizzy_>	puddlejumper, it's called
<_blizzy_>	scala
<ams>	oh, i missed some gibbberish about lisp machines :(
<ams>	20:49 <pyon> thought experiment: we already know that lisp machine users typically wouldn't want to use any other language but lisp. (continues) <--- not true!!!
<forthewin>	dogpolice: electrocution?
<ams>	lisp machines users used lots of languages, c, ada, fortran, and pascall being the common ones ..
<dogpolice>	forthewin: put it in the rfc.
<puddlejumper>	_blizzy_: i'm not fucking with scala at this moment
<ams>	tex on lisp machines was really knuth's tex writtenin pascal ..
<fiki>	aewffwea i think i get your points now, because when i think of it, i couldn't understand some higher level math well until i really learned the nitty gritty of it well
<puddlejumper>	_blizzy_: maybe next summer
<_blizzy_>	puddlejumper, why?
<_blizzy_>	oh
<uberlambda>	ams: you would also use scheme?
<fiki>	aewffwea like how you don't get statistics all that well until you learn probability
<ams>	20:49 <pyon> but, let's say one of us travels back in time and gets his hands on a lisp machine. unfortunately, he doesn't want to use lisp, he wants to use python. <-- i'd use cl-python, and i sometimes do ..
<puddlejumper>	_blizzy_: this summer is about using java and learning html, css, and js
<ams>	uberlambda: shurg, why not?
<_blizzy_>	puddlejumper, oh ok, nice
<ams>	uberlambda: just a matter of writing a compiler.
<puddlejumper>	_blizzy_: i've played with html and css in the past but never used it long enough to remember anything
<ams>	or a interpreter .. which ever is your poison, but compiler would work better with the rest of the system
<_blizzy_>	puddlejumper, oh
<_blizzy_>	have you tried codecademy?
<_blizzy_>	also, https://github.com/vhf/free-programming-books/blob/master/free-programming-books.md
<ori_b>	pyon: (shared gc:) yesish; currently there's a lot of basic services that go into libc that most languages (go being a notable exception) link to.
<ori_b>	putting gc into something similar would be helpful for that.
<ori_b>	and yes, it has disadvantages.
<puddlejumper>	_blizzy_: i'm going to use treehouse
<_blizzy_>	puddlejumper, nice
<ori_b>	in addition to losing some optimization opportunities for idiomatic allocation, it also fixes the debug format that you'd need to generate in your langauge.
<_blizzy_>	i would use treehouse, but it cost
<_blizzy_>	c:
<ori_b>	(sorry, was out to lunch.)
<puddlejumper>	_blizzy_: i signed up for the free trial and did the java course and it was really nice
<xeno_>	pyon: btw, i hope that when you're implementing a dynamic oo language with gc, that you're testing it for something other than algorithms?
<_blizzy_>	puddlejumper, oh, nice
<pyon>	ams: ah, interesting. but i wasn't really thinking about implementing other languages on top of lisp using metaprogramming. i want thinking about compiling other languages to either native or bytecode.
<ams>	uberlambda: lisp machines had c compilers long before many other systems even had a c compiler ..
<aewffwea>	fiki: good question.... how do you generate a "random" throw of a dice in a game? it can go from 1 to 6
<ams>	pyon: that is what they do.
<pyon>	xeno_: dunno
<puddlejumper>	_blizzy_: it fills in those gaps that education and self-education leave out
<ams>	pyon: they translate c code into lisp, and then call the system compiler on that.
<aewffwea>	fiki: assume you have a rand() function with returns an uniform random number from 0 to 1
<ams>	pyon: which is the native code of the lisp machine
<ams>	pyon: kinda like some languages convert to c, then to machine code.
<aewffwea>	fiki: sorry, let's rephrase that... assume you have randint() which returns a random number from 0 to 2^32-1
<pyon>	ams: ah, makes sense.
<puddlejumper>	_blizzy_: try the free trial if you can get one of your parents to sign up for you :p
<ams>	https://github.com/vsedach/vacietis
<_blizzy_>	heh, one
<ams>	then you have the symbolics c compiler, and zeta c compilers .. which are from the 70s ..
<ams>	or 80s .. or some such.
<ams>	pyon: mostly since well.. lisp is so malable, it doesn't really make sense to convert it directly to machine code ..
<ams>	pyon: you can write quite straigt line assembly in lisp without getting a headache..
<ams>	need goto? got it.  need raw access to memory? got it.  .. nothing special ..
<puddlejumper>	_blizzy_: you just need a credit card to sign up. that's why i say that ;)
<_blizzy_>	puddlejumper, oh
<ams>	so hand optimizing some strange loop into raw stupidity is trivial in lisp .. no need to emit "machine code" for  that .. and if you for some odd crazy perverse reason needed to do that .. there are means .. but i don't wanna talk about those ..
<puddlejumper>	_blizzy_: i'm guessing that after the trial it automatically charges
<puddlejumper>	so you would need to cancel
<puddlejumper>	that's how a lot of these trial things work :?
<ams>	they usually involve doing evil things.
<pyon>	ams: ah, i'm not too gung-ho about hand-optimizing things. generally, i want the compiler to take care of such things.
<ams>	exactly.
<ams>	so if in the crazy event the compiler cannot do some optimization .. you can actually harness the compiler to do it for you ..
<ams>	either using compiler macros, or some other means .. without having to resort to .. crap like "assembly"
<pyon>	ams: kewl :-)
<pyon>	ams: i always hated inline assembly.
<ams>	assembly was dated in the 60s, it is dated today.  just like c.
<electrojustin>	so is lisp by that logic
<pyon>	i mean, writing assembly-only programs is okay. writing c-only programs is... well... annoying, but still okay. writing mixed c/assembly programs is hell.
<electrojustin>	it's from, what, late 1950s?
<ams>	being from some era doesn't mean it is dated.
<ams>	staying stuck in that era is what makes something dated, forexample assembly programming, and c programming.
<electrojustin>	isn't that literally the definition of dated?
<ori_b>	ams: huh, looking at the reference for symbolics c, are you sure that it compiled to lisp?
<ams>	ori_b: yes.
<ams>	ori_b: which reference are you looking at btw?
<ori_b>	http://www.textfiles.com/bitsavers/pdf/symbolics/genera/user_s_guide_to_symbolics_c.pdf
<ori_b>	there are a number of examples that involve basically manually calculating offsets into structs for interfacing with lisp.
<ams>	yes, and?
<ori_b>	i guess it's compiling to the lisp equivalent of asm.js, then?
<ams>	no.
<ams>	it is compiling it to lisp, then compiles the lisp into "native"
<ori_b>	ie, you need to know the abi to be able to do any manipulation of data.
<ams>	(i.e lisp machine instructions)
<ams>	no you don't
<ori_b>	hm?
<ams>	hm what?
<ams>	you don't need to know the abi at all.
<ori_b>	sorry, i mean for c <-> lisp interfacing
<ori_b>	(examples on page 1758)
<ams>	what about it/
<ams>	the users guide to symbolics c only has 118 pages.
<ori_b>	yes, but it starts at page 1706
<ori_b>	i'm going with page numbers on the pdf
<ori_b>	ie, page numbers on the top right corner. (56th page from the start of the pdf)
<ams>	what about that page?
<ams>	you compile a .c file, and you use it.
<ori_b>	i don't know lisp well, but it *seems* that pulling values from structs basically means calculating offsets into a lisp array using some helpers
<ori_b>	again, if you're interfacing lisp and c.
<ams>	like, i dunno .. (c-sys::execute 'c-user::|read_jfif_to_iman| :arguments ...)
<ams>	(from real code)
<ams>	ori_b: interface what? the compiler makes the objects work like any other object in memory.
<ori_b>	i don't have access to one of these systems to play with, anyways.
<ams>	there is no "interface"
<ams>	it is just turtles all down
<_blizzy_>	actually
<ams>	c and lisp just intermingles
<o0elise0o>	https://youtu.be/-iwk5nkxqf8
<_blizzy_>	i wanna make something in php
<ori_b>	ams: hm? if a c function returns a struct, and you want to do the equivalent of 'returned_struct.x'
<_blizzy_>	but what
<ams>	ori_b: what about it? you just handle it as you would normally.
<ori_b>	their example has 3 cases.
<ori_b>	depending on the size of the struct in words.
<ams>	ori_b: you realise that i write in symbolics c once a day? :-)
<python111_>	gooey interface in visual basic
<ams>	ori_b: i have libraries, verbatim, with no mods, compiled, that i use just of the bat .. no "interfacing"
<ori_b>	ams: ok; so can you explain what's going in in 0.0.51, example 3?
<uberlambda>	can the llvm c++ bindings do much more than .ir files + llc/lli?
<ams>	a struct is just compiled down to something that can be interfaced like any other object
<ori_b>	ams: ok, so why are they mucking around with (aref c-array (+ lisp-offset 1)) and such?
<_blizzy_>	hmm, actually, my next mvc will be in php
<ori_b>	...also, the thing that's really confusing me, ((lisp-offset (rot c-offset -2))) <-- is 'rot' the rotate function?
<ori_b>	why would you do that?
<ams>	because they are implementing a c function, to be interfaced in c.
<ams>	i.e. lisp function that is called from c
<ams>	inw hich case you need to know nity grity crap
<ams>	calling lisp code from c is tedious, cause c is tedious.
<ams>	calling c code from lisp, is trivial, cause lisp wonderful
<ori_b>	huh, the example says 'there are three cases you should concern yourself with when passing structures
<ori_b>	from c to lisp:'
<ams>	right, exactly.
<ams>	anyone got any good 2d game books?
<ams>	like a simple sprite based top down game ...
<ams>	language agnostic ideally ..
<ori_b>	ok, i'm probably confused.
<ori_b>	anyways, meh.
<pokeymantrainer>	i know that pointers can't be negative, but i have a function that initializes an array of pointers and sets the last one to -1 to mark the end of a list. i'm doing array[i] = (char*)-1; the compiler doesn't complain since i have that cast, but is it valid?
<_blizzy_>	http://localhost8000.com/
<ams>	ori_b: you are :-)
<pokeymantrainer>	will that set array[i] to 0xffffffff or whatever?
<pyon>	ams: let's say that i can prove that a specific value will be a pointer. is there any way to disable the runtime tag-checking on a lisp machine?
<merijn>	pokeymantrainer: why not do the sane thing and set the end of list to nullptr?
<pyon>	i mean, such a check would just introduces a branch that i've already determined is unreachable. better not introduce the branch. :-p
<pyon>	introduce*
<pokeymantrainer>	merijn: because some of those pointers are allowed to be null.
<ori_b>	ams: so, if i wanted to call a c function with a struct, it takes a completely different argument layout than what it would pass when calling lisp?
<horsik_>	_blizzy_: just a thing to keep in mind when you mention php and mvc http://stackoverflow.com/questions/7621832/architecture-more-suitable-for-web-apps-than-mvc/7622038#7622038
<ori_b>	(c-func struct-arg) vs lisp_func(struct_arg)
<ori_b>	for example?
<_slade_>	i don't think there's any guarantee that pointers can't be negative.
<python111_>	pokeymantrainer, ye it's prolly gonna set it to 0xffffffffffffffff
<pyon>	_slade_: does it even make sense to talk about the sign of a pointer?
<ori_b>	pokeymantrainer: well, valid in what sense?
<ori_b>	pokeymantrainer: it's implementation defined what exactly that means.
<ori_b>	for example, if you're compiling for an architecture that uses segment:offset pointers...
<_slade_>	pyon: eh, there might be some obscure architecture out there where it makes sense
<python111_>	pokeymantrainer, but since you're always checking for -1 it doesn't matter
<merijn>	_slade_: nope
<ori_b>	pokeymantrainer: why not store the length?
<merijn>	_slade_: not in c at least
<merijn>	_slade_: pointer arithmetic is defined to be unsigned
<ori_b>	python111_: i don't think that it's guaranteed to round-trip.
<merijn>	i know this for "obscure issues that cost me 4 days to debug"-reasons
<pokeymantrainer>	like if i can compare it to (char*)-1. it does work on my compiler, but i'm wondering if it's portable and standard-compliant.
<ori_b>	pokeymantrainer: store the length :)
<merijn>	argh...
<merijn>	"error: identifier "nullptr" is undefined" <- if you claim to implement a standard, then actually do so >.<
<ori_b>	merijn: they implement c++11?
<ori_b>	and you're compiling with '-std=c++11'?
<merijn>	ori_b: the docs say they implement "most of c++11" (cuda 7.0 is supposedly fully c++11), but yeah, despite my -std=c++11 flag it's whining
<python111_>	ori_b, what do you mean, if he is doing the (char *) it should always convert it to the same value
<o0elise0o>	cough nitrix cough http://store.necomimi.com/
<o0elise0o>	https://www.youtube.com/watch?v=b4idxi5qk-4
<pyon>	merijn: as a temporary workaround, you could conditionally "#define nullptr null", perhaps. :-p
<pyon>	not that it's good code, but, hey!
<rounin>	pyon: and then #define null nullptr 8|
<xeno_>	gah! all i want for xmas is unicode support in coq
<xeno_>	that and to wake up and discover that half of the programming languages (or more) was just a nightmare i was having...
<pyon>	xeno_: huh? i've managed to enter unicode characters just fine.
<pyon>	xeno_: but you have to define notations.
<_blizzy_>	you know
<xeno_>	pyon: ah
<_blizzy_>	why is always about that bass? why not about that cello? or viola? or violin?
<rounin>	xeno_: imagine if php and vbscript are chief among the ones left!
<o0elise0o>	_blizzy_::one reason, twerk
<_blizzy_>	php isn't that bad
<xeno_>	lol
<o0elise0o>	summer is here finally i guess, it's 81 degreez
<_blizzy_>	well, imo it's true
<_blizzy_>	c:
<ams>	21:58 <pyon> ams: let's say that i can prove that a specific value will be a pointer. is there any way to disable the runtime tag-checking on a lisp machine? <-- runtime type checking is done at hardware level.  most things are not type checked though in hardware, but in sofware.
<sunrizen>	hello eveyone
<sunrizen>	every*
<sunrizen>	someone can help me to reduce my code please ? its a simple triangle in c
<ams>	22:00 <ori_b> ams: so, if i wanted to call a c function with a struct, it takes a completely different argument layout than what it would pass when calling lisp? <-- i am not sure what argument layout means, the object is the same, the calling api is the same.
<sunrizen>	http://ideone.com/watbbr
<sunrizen>	thanks
<_blizzy_>	it's never a language i know
<ams>	sunrizen: move the declarations of j, and i where you assign a value.
<ams>	sunrizen: use a for loop instead.
<ams>	sunrizen: main does not under any circumstances return void.
<sunrizen>	my bad ^^
<sunrizen>	i know now :)
<ams>	sunrizen: the function triangle doesn't return anything useful, remove the return statement, and declare it as a function returning void.
<ams>	the function wac is whacked, use printf, putchar, or similar.
<sunrizen>	ams sorry i paste the wrong code, i 've already correct the code i saw the mistakes
<sunrizen>	thx you
<ams>	you are  using implicit declarations of several functions, include <stdio.h>.
<ams>	well, one.. maybe ..
<ams>	anyway.
<sunrizen>	so let me try the loop
<sunrizen>	ams: wac why you don't like it ?
<sunrizen>	:p
<sunrizen>	i use unistd for write
<sunrizen>	#inlclude <unistd.h>
<ams>	in the example you gave, no you don't.
<sunrizen>	ok den i will use printf
<ams>	printf is not in unistd.h, nor in string.h.
<sunrizen>	stdio.h
<sunrizen>	^^
<sunrizen>	ok now the loop
<ams>	you could use better names for variables.
<sunrizen>	ams: can you explain me the loop please
<ams>	read the c programming language, or a similar book.
<xlirate>	where should i ask for help with vb script?
<merijn>	pyon: sadly i was planning to use more c++11 features, guess i need to whine and tell them to hurry up ordering the new cluster so i can used a newer cuda version :\
<ams>	xlirate: in a place where there are people who know the answer to your question, and possibly are well versed in vb script to be able to figure it out.
<xlirate>	ams: i shouold have asked, "are there any good irc channels to ask for help with vb script"
<xlirate>	if so, which ones?
<pythonisnotlinux>	will ecma6 ever become popular?
<pythonisnotlinux>	is there any point learning it?
<ams>	xlirate: no idea, i don't use such .. languages.
<xlirate>	a potantial employer does, but i think i will not get the position at this rate
<ams>	look for another job.
<xeno_>	python111_: es6 is not only going to be popular, it's going to become omnipresent
<python111_>	kk
<scriptgeek>	does a web app developer need to be skilled with graphic design?
<pyon>	xeno_: "es6 is not only going to be popular" --> do we need more proof that the world is secretly governed by reptilians?
<generalvagueness>	photographic evidence would be nice
<xeno_>	pyon: that's already proven beyond reasonable doubt
<rivarun>	scriptgeek: it's a good skill to have. it's highly valued where i work as you can use it in combination
<ams>	generalvagueness: some people claim i have photographic memory .. does that count?
<xeno_>	pyon: they prefer "lizard people" btw, they're kinda touchy on being called "reptilians"
<rivarun>	you mean "lizard folk"
<on3pk>	hey guys, has anyone used azure notification hub?
<xeno_>	rivarun: they're often known as that too
<xeno_>	but who cares, in 8-10 years it's all over anyway: http://mindstalk.net/vinge/vinge-sing.html
<scriptgeek>	rivarun: i was wondering if there was opportunities for people who could program, but couldn't do art stuff
<rivarun>	scriptgeek: yes, not all of our front-end guys know about design
<rumpledelf>	programmers need to be artists now?
<ams>	pyon: me sad ..
<rumpledelf>	become a backender, stay away from evil pretty things
<rivarun>	word.
<ams>	pyon: https://github.com/luxlang/lux -- "mostly inspired by the following 3 languages" haskell, clojure, ml ..
<ams>	:(
<ams>	something that tries to be a lisp, but ignores all lisps?
<hotcoder>	hello
<rivarun>	it's like someone writes a new language every week
<ams>	rivarun: minute rather
<pyon>	ams: well, dunno.
<scriptgeek>	rumpledelf: would php be a good language to start with?
<pyon>	ams: the jvm is a fundamentally hostile environment to functional programming.
<rumpledelf>	scriptgeek: depends what you mean by 'php' in this context
<rumpledelf>	some decent mvc framework sure
<scriptgeek>	rumpledelf: like joomla?
<ams>	pyon: oh, the jvm sure .. but like .. i mean .. if you are making a lisp .. why not .. like .. stand on the shoulders of giants?
<pyon>	ams: dunno, i don't think most people have any idea what they're talking about when they say they want to make "a lisp".
<ams>	prolly ..
<ams>	just parens i suppose ..
<ams>	that makes it automatically a lisp
<xeno_>	pyon: the jvm might be a hostile environment, but so is the cpu and libc
<pyon>	xeno_: not really. the fundamentally untyped nature of modern cpus makes it possible to cheaply implement many abstractions that would be prohibitively costly on a more dynamically typed environment, like the jvm.
<pyon>	(yes, you read it right: the jvm is a dynamically typed environment. and not even a particularly good one at that.)
<xeno_>	pyon: fundamentally untyped?
<rumpledelf>	scriptgeek: er, thought you wanted to do php
<pyon>	xeno_: "fundamentally untyped" as in "all you have is bytes".
<rumpledelf>	i so don't want to go to work today
<pyon>	xeno_: or "words" or what have you.
<xeno_>	pyon: that is true, but the instructions operate on very limited "types" too...
<pyon>	it's basically untyped.
<vendu>	hey pyon, xeno_, all of you :)
<pyon>	xeno_: and, by "untyped", i mean "not even dynamically typed".
<xeno_>	nah, it's rather fundamentally memory unsafe, even when it comes to registers
<pyon>	xeno_: yes, i never said it's a good environment to program in directly.
<pyon>	xeno_: but it's a great compilation target.
<pyon>	xeno_: it means that you can precisely calculate how much you pay for every abstraction you use.
<nitrix>	o0elise0o: that's cute o:
<pyon>	xeno_: which is in turn why languages like c++ and rust can advertise "zero-cost abstractions".
<xeno_>	pyon: that depends.. if you're ok with 32/64 bit ints and floats, then it's great - if you wanna deviate from that you're fucked
<pyon>	xeno_: huh? implementing bigints doesn't take much effort.
<scriptgeek>	rumpledelf: joomla was created with php and extensions are added via php
<pyon>	xeno_: actually, scratch that. it doesn't take any effort at all.
<rumpledelf>	maybe i'm thinking django then
<pyon>	xeno_: and, last time i checked, the jvm doesn't natively provide bigints either.
<rumpledelf>	php framework i think zend or symfony, people actually use other frameworks?
<xeno_>	pyon: it doesn't
<scriptgeek>	django uses python, me thinks
<xeno_>	pyon: but relatively speaking, bigints are approximately as expensive on both of them
<pyon>	xeno_: correctness is priceless.
<xeno_>	pyon: what happened to "performance uber alles"?
<scriptgeek>	rumpledelf: yeah, there's tons of frameworks like codeigniter and cakephp
<rumpledelf>	scriptgeek: those are the only two i ever see references to
<pyon>	xeno_: errr, i've always been of the view that correctness matters most. it's just that, whenever correctness is unaffected, i'll take the most performant alternative.
<scriptgeek>	rumpledelf: i tinkered with them before and found that user authentication was done independently
<scriptgeek>	user authentication seems like reinventing the wheel
<pyon>	xeno_: i still think that bounds checking is silly. give me wraparound machine integers and big integers. runtime exceptions have no place in mathematics.
<rumpledelf>	scriptgeek: i'm only thinking from a job perspective. here, its always those two frameworks
<rantingdude>	best hash for file integrity checks? i can't choose whether i should go with sha256 or sha384, since the latter one is faster on most 64 bit machines.
<scriptgeek>	rumpledelf: you do a lot of php stuff?
<rumpledelf>	scriptgeek: not in frameworks
<rumpledelf>	i tend to use rails
<ams>	wee .. rebase!
<scriptgeek>	rumpledelf: ruby?
<pyon>	xeno_: but, overall, my views have shifted a lot. i used to favor c++ over c, because "at least c++ offers interesting abstractions". now i see that providing abstractions in an infrastructure language is pointless. you still have to worry about the details anyway, which defeats the point to abstraction.
<rumpledelf>	scriptgeek: yes
<xeno_>	pyon: i only halfway agree with that. i think abstractions are useful, but more safety/convenience abstractions, and maybe not the classical fp abstractions
<scriptgeek>	rumpledelf: i'm setup with treehouse, which is an online technology school, and they offer all kinda of classes with php, wordpress, and even ruby
<rumpledelf>	scriptgeek: eh, depends what you want to do i guess
<xeno_>	pyon: so more abstractions in the common english sense, and not so much in the pure mathematical sense
<pyon>	xeno_: english isn't a language for abstraction.
<pyon>	xeno_: so what you're saying is nonsensical.
<rumpledelf>	i'm on the verge of quitting my job and taking a holiday myself
<scriptgeek>	rumpledelf: i think just getting a job in the field would be nice, being unemployed kinda sucks
<xeno_>	pyon: because you're mind is set on mathematical abstractions
<xeno_>	pyon: it's sort of explaining that you bought a new car to a lisp programmer :)
<rumpledelf>	try freelancing. all the advantages of being unemployed, but with more money
<xeno_>	pyon: "a new car? it's either car or it's cdr. new car makes no sense!" :)
<scriptgeek>	rumpledelf: how to begin with freelancing?
<rumpledelf>	scriptgeek: build a portfolio
<aewffwea>	pyon: now i see that providing abstractions in an infrastructure language is pointless. you still have to worry about the details anyway, which defeats the point to abstraction. --> that's not true
<scriptgeek>	rumpledelf: well, i made a video game and i'm working on developing another one
<rumpledelf>	that doesn't sound helpful for webdev
<scriptgeek>	rumpledelf: yeah...
<scriptgeek>	rumpledelf: i've worked with php and mysql before
<xeno_>	pyon: ...which btw reminds me that i should look check out some more car ads... they're way expensive here... :/
<rumpledelf>	so build a portfolio!
<pecorade>	scriptgeek: who doesn't.
<pyon>	xeno_: my mind isn't set on mathematical abstractions. i draw inspiration from lots of places. it's just that only mathematics can give me the assurance that i'm thinking correctly.
<pecorade>	pyon: do you think oo is overrated?
<pyon>	pecorade: i don't even know what oo is.
<scriptgeek>	rumpledelf: how to build a portfolio without eye candy skills?
<rumpledelf>	i tried to build a portfolio but realised so many sites have been taken down or changed since i worked on them ... portfolios change too much
<xeno_>	pyon: maybe, but "abstraction" is actually a term outside of mathematics too
<pyon>	pecorade: perhaps if you said "what <insert person here> says oo is...".
<rumpledelf>	scriptgeek: use stock themes. make the backend work well
<scriptgeek>	rumpledelf: they took down your sites?
<pyon>	xeno_: is abstraction *precisely* defined outside of mathematics?
<rumpledelf>	scriptgeek: 'they'. yes, 'they' took down sites i've worked on
<scriptgeek>	rumpledelf: joomla has a lot of nice free themes available
<pyon>	xeno_: afaict, outside of mathematics, "abstraction" is just a term used to dismiss ideas because they aren't sufficiently grounded on reality.
<scriptgeek>	rumpledelf: those bastards!!!!
<rumpledelf>	scriptgeek: hardly. it happens
<scriptgeek>	rumpledelf: i bet wordpress has some free themes as well.  and treehouse actually has classes on wordpress, too.
<rumpledelf>	scriptgeek: wordpress has squillions of free themes
<grim001>	that is the most stupid description of an abstraction that i have ever heard
<vdamewood>	i've been considering making a page for each project i'm particularly proud of.
<rumpledelf>	but wordpress isn't a framework, i was thinking more frameworks
<rumpledelf>	vdamewood: if i did that i'd have a rather massive site, realised i've worked on ~200 sites in the last couple years
<scriptgeek>	rumpledelf: isn't wordpress for blogging?
<rantingdude>	whats a good hash to check files for corruption?
<rumpledelf>	scriptgeek: its for whatever you use it for
<scriptgeek>	rumpledelf: i guess i don't understand what you mean by framework
<vdamewood>	scriptgeek: look up codeigniter and yii.
<rumpledelf>	scriptgeek: to the googles!
<vdamewood>	or rails, or django.
<scriptgeek>	rails is a mind rape
<rumpledelf>	i find rails quite lovely
<vdamewood>	rumpledelf: well, of course, i'd make each page as i make each project, and only for project that stick out.
<vdamewood>	i only have a handful of projects right now to catch up on.
<ams>	mm..
<scriptgeek>	i suppose with enough practice rails could become a worthy skill
<xeno_>	pyon: that goes for everything we've said in this channel ever too
<vdamewood>	for example, my next project is going to be building a web/mobile interface to allow my friend to control and monitor his solar panels.
<_blizzy_>	vdamewood, you should name the project
<_blizzy_>	ignite
<vdamewood>	i get to work with hardware interfaces and web apis.
<pyon>	xeno_: dunno, for me, "abstraction" is simply the only way i can possibly conceive for reusing code in multiple scenarios: abstract over the differences between them.
<vdamewood>	i'm not the chief of the project, but i'll pass it along to my friend if i remember.
<pyon>	xeno_: so, for example, a garbage collector abstracts over how memory management is done in multiple platforms.
<pyon>	xeno_: which is no different from how the laws of a mathematical structure (say, group) abstract over the differences between their models (say, integers with either addition or multiplication). it's really the same thing.
<ams>	seems symbolics is finally going totally belly up ..
<xeno_>	ams: they live still? i thought they died in the 70ies
<ams>	uhm, no ..
<vdamewood>	who or what is/was/were symbolics?
<rumpledelf>	so tempted to take a month off to do some serious ruby dev
<ams>	in the 70s they didn't even exist
<rumpledelf>	i have some poor sucker sharing my rent from next week, it'll take longer to go broke
<vdamewood>	emerald
<ams>	and in the 90s they had billion something dollar revenue ..
<vdamewood>	ams: zimbabwe dollars?
<ams>	no, us
<vdamewood>	i still think the joke was funny.
<ams>	the kinda flunked in the mid 90s, early 00s
<xeno_>	ams: what do they live from nowadays? it's a while since lisp machines died
<ams>	xeno_: goverment support contracts lasting decades
<ams>	xeno_: david k schmdit is like the last pedler ..
<ams>	and he is auctioning stuf fout now .. to reduce the warehouse..
<ams>	http://carcaddar.blogspot.se/2015/05/symbolics-macivory-auctions.html
<xeno_>	ams: ah, so they caught the government in a compatibility lock-in :)
<ams>	yeah
<ams>	and note that the macivories are just boards ...
<ams>	it isn't like you need .. room ..
<ams>	and a quadra is like tiny ..
<pyon>	xeno_: "compatibility lock-in" --> isn't that what the technology industry always does?
<pyon>	xeno_: never mind the "openness" slogans.
<ams>	urgh .. .2.5g repo :(
<ams>	don't have ram to gc it either :(
<o0elise0o>	ams what repo is that huge?
<xeno_>	pyon: yes
<ori_b>	o0elise0o: lots of companies have kind of huge ones...
<ori_b>	https://code.facebook.com/posts/218678814984400/scaling-mercurial-at-facebook/
<ori_b>	although, the number quoted there seems... very small.
<ori_b>	i think facebook's codebase has increased pretty significantly since 2013 :)
<ori_b>	https://twitter.com/feross/status/459259593630433280 <-- eh... :)
<starlord>	i'm looking for a famous business white-paper that mentioned big-data? with the 3 vs?
<starlord>	pls help.
<_blizzy_>	https://i.imgur.com/32r4lrb.jpg
<vdamewood>	starlord: i don't think we'll be able to help with that.
<starlord>	vdamewood: y not?
<plazma>	the big 3 what? donuts?
<vdamewood>	starlord: too general of a problem, and not programming.
<ams>	o0elise0o: is that huge? shurg .. this is a 40 year old repo ... bunch of crap in it..
<vdamewood>	i have a copy of a 40-year old repo.
<vdamewood>	40-year-old
<winny>	what do you mean
<winny>	is it cvs?
<winny>	no wait
<winny>	is it a tarball, do you mean
<winny>	cvs isn't 40 years old
<ianp>	rcs came out 33 years ago
<winny>	could it be sccs
<ianp>	cvs was rcs's successor
<vdamewood>	i think it's sccs
<ianp>	ah yea. sccs is 43 years old
<ianp>	crazy
<winny>	oh my it is old
<vdamewood>	it's the csrg (ie, bsd) codebase.
<winny>	i've used sccs before for hoppyist stuff
<winny>	this might be interesting https://stackoverflow.com/questions/13007733/migrating-from-sccs-to-git
<vdamewood>	i bought the whole damn codebase, but i only wanted 4.4bsd-lite and 4.4bsd-lite2
<winny>	purchased a copy?
<vdamewood>	winny: yep.
<winny>	huh
<winny>	isn't that floating around the internet, though?
<winny>	there seems to be quite a few discussions and articles about migrating from sccs online, i just googled migrate sccs to git
<vdamewood>	probably, but it i couldn't trust the sources.
<winny>	good point
<ams>	vdamewood: cool! got a copy?
<vdamewood>	so, i bought it on cd from kirk mckusick. i figured i could trust him.
<ams>	winny: you have gnu cssc or whatever  ..
<vdamewood>	ams: yep.
<twey>	pyon: *nod* they seem to like it
<winny>	i still use rcs today ;_;
<winny>	for managing some projects in dos (hobby)
<rule110>	hey, i have sort of a stupid question
<pyon>	twey: i'm pretty sure the number of capabilities could be reduced if they had a functional-first, rather than imperative-first approach.
<rule110>	well.
<pyon>	twey: seriously, a "transition" capability?
<rule110>	or, lets not
<rule110>	well, there is for example duckmaestro, and his ip-adress is 38.122.6.10 if i have understood correctly...?
<rule110>	so if two are logged in on the same ip-adress, that imply that they are on the same network i guess?
<vdamewood>	rule110: it implies that they are going through the same nat gateway or proxy.
<ams>	which means not much.
<ams>	vdamewood: does that blob include the actual sccs repo?
<rule110>	well, in some cases you can assume that they dont use proxies, so they are on the same router
<vdamewood>	ams: yes.
<ams>	vdamewood: me want..
<rule110>	and if they are in a public spot, say a university, they are usually close to each other
<ams>	*drool*
<rule110>	because they will then be connected to the same router out of a dozen at the university
<vdamewood>	ams: https://www.mckusick.com/csrg/
<ams>	100 bucks .. jeez..
<ams>	for unix? lame.
<ams>	wouldn't pay 1 buck for unix ..
<vdamewood>	that link posting was meant more as a "here's what i bought" link.
<vdamewood>	i'm disapointed that 4.4-lite and 4.4-lite2 are on different discs.
<ams>	hehe
<mniip>	who dared to ping me
<vdamewood>	instead, he put 4.4-encumbered on the disc with lite-2
<denommus>	anyone here used rxcpp?
<mniip>	oh well they left
<pyon>	twey: i don't see a need for more than three approaches to mutability: (0) fake single-threaded mutability with linear and uniqueness types, (1) genuine single-threaded mutability with ml-style reference cells, (2) genuine concurrent mutability [mutexes and locks, stm, whatever]. ideally, (2) would subsume (1).
<vdamewood>	who owns the rights to at&t unix these days?
<ams>	vdamewood: you don't have anything fun related to lisp/
<ams>	vdamewood: the trademark or what?
<vdamewood>	ams: copyright.
<ori_b>	vdamewood: alcatel-lucent, presumably.
<ori_b>	at least, that's who owns the broken remains of 1127 these days.
<ams>	not novell?
<twey>	pyon: i like (0) subsuming both (not sure about the ‘fake’ label)
<vdamewood>	ori_b: novel owned the rights before lucent split off of at&t.
<ams>	or rather, micro focus international.. since they got scoped up in 2014.
<ams>	vdamewood: double l.
<ori_b>	vdamewood: ah, in that case, no idea.
<ams>	i think the sco vs. novell thing settled that nvoell owns the stuff ..
<vdamewood>	i wonder if i could get novell to license at&t unix under the mit or 2-clause bsd licenses.
<ams>	caldera already did ..
<vdamewood>	ams: 4-clause
<vdamewood>	though, i wouldn't mind the 3-clause, but the 4-clause bugs me.
<ori_b>	what i'd like to see is the source for unix v10.
<ams>	vdamewood: was it four?
<vdamewood>	ams: in the link i gave you, look for a link in the second paragraph with text "open source license"
<vdamewood>	ams: correction: third paragraph
<ams>	not that interested
<ams>	i was mostly curious if there are any interesting documents .. like the /usr/group standard documents ..
<vdamewood>	ams: anyway, yes. four-clause.
<vdamewood>	hmm... i wonder if i have a copy of the stuff with me right now.
<lseactuary>	hello. i want to build a tool which can categorise an account into a particular vertical e.g. cpg - food or something and for it to update say on a monthly basis. what would be the best approach for this type of issue?
<vdamewood>	ams: either i don't have it to look or it's hiding from me.
<ams>	vdamewood: eparse
<vdamewood>	ams: scattered?
<ams>	possibly...
<vdamewood>	i ran out of space on my laptop and deleted a bunch of stuff i had on removable media, and i'm not at home to look at the removable stuff.
<ams>	pah
<ams>	ah
<vdamewood>	unfortunately, my hard drive is only 750 gigs.
<pyon>	twey: i can't help but feel aversion to languages that have "periodic tables".
<pyon>	twey: http://tutorial.ponylang.org/capabilities/combining-capabilities/
<ams>	vdamewood: luck you ... i only have 20g :)
<vdamewood>	ams: well, the system came with a 500 gb drive, but i upgraded it.
<ams>	mine came with a 500m drive :-)
<vdamewood>	my first system came with a 20m hard drive.
<ams>	reverse penis contest?
<pyon>	twey: just like there are certain classes of features that programmers can't use right, i think there are also certain classes of features that language designers can't get right. periodic tables, especially if there might be a subtyping relation between the entries, is one of them.
<ams>	my first system didn't have a harddrive. :)
<vdamewood>	ams: i figured you'd win.
<ams>	it was a casio fx720p ..
<ams>	you could add two 8k or 4k solidish state cards to it ..
<vdamewood>	wow, 2k ram.
<vdamewood>	i'm certain my first had >= 1 meg ram.
<vdamewood>	i would have loved to hold on to my first system if only i had the os installation floppies.
<vdamewood>	unfortunately, people don't understand that if it came in the box, you should probably hold on to it for later.
<vdamewood>	i think i need to teach persian soon.
<denommus>	pyon: twey: implemented arrowzero and arrowplus for my library
<denommus>	i'm missing haskell's `where` badly
<pyon>	denommus: "let ... in let ... in ... let ... in ..." is super-annoying. :-(
<pyon>	fortunately, ml's "let" is less retarded.
<denommus>	yeah
<pyon>	err, standard ml's let.
<denommus>	how is it like?
<pyon>	let  (* several declarations go in here *)  in  (* expression *)  end
<pyon>	denommus: in the declaration block, you can even define local types.
<pyon>	and, of course, local exceptions, which basically makes them uncatchable outside the "let ... in ... end" block.
<pyon>	(unless you use a catch-all handler, "handle _ => ...", which is a code smell anyway.)
<bushido_>	hey guys
<bushido_>	whats up
<denommus>	pyon: yeah, in ocaml, if you want a local type, you need... a local module
<pyon>	lol
<denommus>	pyon: but it's rare that you need a local type anyway
<pyon>	well, a local type synonym is useless.
<denommus>	pyon: it's more common to have a type in your module and not export it
<pyon>	true that.
<denommus>	pyon: at least i don't have to do any magic to have strictness evaluation for my steps
<pyon>	heh!
<denommus>	*strict evaluation
<pyon>	anyway, the only feature from ocaml and haskell that i *really* miss in standard ml is pattern matching guards.
<denommus>	i'm finding my code quite simpler than netwire's. except when i need to explain exactly how the type is formed because the inference machine can't figure out the gadt (which is understandable)
<pyon>	heh
<pyon>	ocaml allows explicit type annotations, me thinks.
<denommus>	like here: https://github.com/denommus/netwireocaml/blob/master/src/netwire.ml#l60
<pyon>	i mean, "let foo : 'a foo -> 'b bar -> ('a, 'c) baz = fun x y -> ..."
<pyon>	checking.
<denommus>	pyon: ah, yes, i'm explicitly defining every type in the .mli file. the problem is when i have a gadt. even with the explicit definition on the .mli, the type system may get confused
<pyon>	ah.
<denommus>	pyon: and since a wire is a gadt, that happens somewhat frequently
<pyon>	pattern-matching values of gadts always requires annotations, iiuc.
<pyon>	ah
<denommus>	yup
<denommus>	i mean, not always
<denommus>	map didn't require annotation, even though it is matched
<denommus>	i am not sure how, though
<pyon>	oh.
<pyon>	denommus: perhaps there's some compiler magic specifically for the case when one value of a gadt is being matched.
<pyon>	one lovely think in ghc haskell is -xderivefunctor.
<pyon>	nto sure if it works with gadts, though.
<denommus>	other thing i miss is the composition operation
<pyon>	oh, true!
<denommus>	|> doesn't cut it
<pyon>	standard ml has a composition operator, but it's called "o", which is significantly less convenient than ".".
<pyon>	denommus: but i think part of the reason why mlers don't care much about a composition operator is that the value restriction diminishes its usefulness.
<pyon>	the type of "f o g" can be safely generalized, but ml's typing rules aren't aware of that.
<pyon>	as far as the ml type checker can see, "f o g" isn't syntactic value, ergo, its type must be monomorphic.
<pyon>	isn't *a syntactic value
<champloo>	is there anything wrong with this array allocation in c
<champloo>	int* arrays[4] = {initial, sum};
<pyon>	also, in a call-by-value language, eta-expansion sometimes changes the meaning of a program.
<denommus>	champloo: int* arrays[4] would be an array of pointers to int. are you sure that's what you want?
<denommus>	pyon: that's true
<champloo>	denommus: i wanted an array of pointers yea, not an array of just ints
<pyon>	champloo: the main problem, afaict, is that you're trying to initialize an array of four pointers with two values.
<champloo>	pyon: so what if i use null values for the remaining 2 elements?
<pyon>	cheery: tias
<pyon>	cheery: sorry, not for you!
<pyon>	champloo: tias
<exio4>	pyon: call-by-value plus side-effects
<pyon>	exio4: no, just call-by-value is enough to break eta-equivalence.
<pyon>	exio4: well, assuming non-termination doesn't count as a "side-effect".
<pyon>	if you count non-termination as a side effect, yeah, call-by-value plus side effects.
<hotcoder>	what was wrong with windows me
<hotcoder>	why do everybody hate it?
<exio4>	i think side-effects are the most obvious case for breaking eta-equivalence
<pyon>	exio4: http://www.cs.cmu.edu/~rwh/introsml/techniques/hof.htm
<pyon>	exio4: check the line "fun loopback loop n = loop (loopback loop) n"
<exio4>	right, the typical fix :p
<pyon>	exio4: it's strictly about non-termination.
<pyon>	exio4: there's no other effect getting in the way.
<exio4>	yes, i don't disagree with you, i just account the "more serious" changes to the semantics are in combination with side-effects, as they may be more subtle, :p
<pyon>	ah.
<ams>	somene should remake simant..
<pyon>	anyway, it's lovely how haskell allows "fix f = let x = fix f in f x", or even "fix f = f (fix f)".
<_blizzy_>	i'm excited that i can do
<_blizzy_>	"let 2+2=5 in 2+2"
<pyon>	_blizzy_: can you?
<_blizzy_>	pyon, in haskell
<_blizzy_>	yes
<tnght>	how am i going to get 1680 more rep on stackoverflow
<exio4>	let 2+2 = 5 in 2+2 defines a new (shadowing the old (+)) function that pattern matches on both arguments
<ams>	tnght: i have a course that does exactly that! for only 999.99 usd i'll teach you how to maximize your think tank and synergize your answers on stackoverflow
<exio4>	it's bottom for any other value
<tnght>	what does 4 + 4 equal
<stoopkid>	dogpolice,
<exio4>	let 2+2=5 in 2+1 is just non exhaustive pattern matching
<tnght>	what does sqrt 5 equal
<tnght>	what does sqrt 4 equal
<tnght>	i think your number system is broken man
<dogpolice>	stoopkid: whaddup.
<pyon>	exio4: ah, i just have it beat into my head that shadowing is evil.
<stoopkid>	dogpolice, your interactive graphical holographic programming language that you're working, that has to be a functional programming language yes?
<pyon>	exio4: but perhaps it's just because i experienced the pain of implementing shadowing. (it isn't hard, but it introduces a new class of subtle implementation errors.)
<stoopkid>	dogpolice, like it wouldn't work if it wasn't a functional language would it?
<dogpolice>	stoopkid: state can be kept within processes, so..
<stoopkid>	dogpolice, ah i see i guess i was thinking it worked differently
<pyon>	tnght: how much reputation do you already have?
<stoopkid>	dogpolice, ok i was jw
<tnght>	320
<dogpolice>	stoopkid: doing a lot of work with artificial life and robust systems right now involving starlight.
<pyon>	ah.
<stoopkid>	dogpolice, which project is starlight again?
<dogpolice>	stoopkid: said language. :p
<exio4>	pyon: don't say it too loud
<stoopkid>	dogpolice, ah nice you got it working?
<exio4>	pyon: my little toy pl basically compiled broken programs if you shadowed things :p
<pyon>	exio4: lol
<dogpolice>	stoopkid: better yet, prototypes of hardware are currently on their way here.
<stoopkid>	dogpolice, hardware for what?
<dogpolice>	stoopkid: a hardware implementation of starlight. :)
<stoopkid>	dogpolice, oh what do you mean exactly? the basic internal logic of it?
<tnght>	pyon is this you http://stackoverflow.com/users/286171/robin-pyon
<dogpolice>	stoopkid: lower-level logic to facilitate the creation of robust and expandable processes.
<stoopkid>	you're head of a university comp sci dept. right?
<dogpolice>	computer engineering.
<stoopkid>	ha, yea no wonder
<dogpolice>	stoopkid: a similar architecture was dave ackley's movable feast machine that he keeps touting.
<dogpolice>	(though i don't like his idea of diffusion over strictly organized "bucket-brigade" style pipelines.)
<pyon>	tnght: no.
<pyon>	tnght: this is me: http://stackoverflow.com/users/46571/eduardo-le%c3%b3n
<tnght>	damn sun
<tnght>	wow 7 famous questions
<pyon>	tnght: anyway, what do you need 1680 additional reputation points for?
<exio4>	pyon: i think implementing everything assuming shadowing isn't a thing, and having a first step in the compiler that basically eliminates(?) shadowing, is the nicer approach to this
<stoopkid>	dogpolice, i'll have to look into that, so what kind of artificial life are you making, i've done some experiments before with sort of like artificial cell cultures where each cell had a neural net and could reproduce new cells with different nns using a genetic algorithm
<tnght>	pyon editing privs
<pyon>	tnght: oh.
<tnght>	it's annoying to have to wait for mod approval when editing
<stoopkid>	dogpolice, i didn't really have enough knowledge to analyze the results of what i was doing though heh
<stoopkid>	it was just cool to watch
<pyon>	exio4: "basically eliminates shadowing" --> yeah, like converting everything to de bruijn indices.
<tnght>	pyon do you put it on your resume?
<pyon>	tnght: no.
<tnght>	why noy
<pyon>	tnght: because i don't care.
<tnght>	about getting a job?
<exio4>	pyon, pretty much
<tnght>	:p
<tnght>	potential employers love that shit
<dogpolice>	stoopkid: studying how processes (cells) can collaberate via resource sharing and organize on their own based on environmental stimulus.
<pyon>	tnght: the last thing i need is a hard job. i'm happy with a crappy job that pays decently enough, and where i don't need to think much.
<tnght>	pyon what
<tnght>	dude you know everything though
<tnght>	isn't that kinda benieth you?
<tnght>	(sp)
<_blizzy_>	i almost typed rails server in a laravel project
<_blizzy_>	._.
<pyon>	_blizzy_: lolo
<stoopkid>	dogpolice, nice, are there any specific (types of) things you're looking for? i.e. ways you plan to measure the degree of "collaboration"?
<dogpolice>	stoopkid: degree of performance when left to self-organize.
<stoopkid>	heh seems reasonable enough
<lseactuary>	anyone?
<dogpolice>	stoopkid: hoping to evolve specific cells without human interaction to learn how to "learn" protocols.
<lseactuary>	anyone have any ideas please?
<stoopkid>	dogpolice, ah so the intent is for them to organize themselves into a computation of sorts?
<dogpolice>	mhm.
<stoopkid>	now *that* sounds pretty cool
<dogpolice>	i believe that's the way to a higher level of intelligence.
<stoopkid>	interesting
<stoopkid>	if you considered all the ways the cells could organize themselves to be a "logic", this logic would be inconsistent yes?
<dogpolice>	stoopkid: somewhat. when you take into account that cells organize via asynchronous communication, you'll find that the computation is organized on a sort of meta-level.
<stoopkid>	computations are equivalent to proofs right, via curry-howard?
<dogpolice>	mhm.
<dogpolice>	well, programs are..
<stoopkid>	well, if consistent formal theories can't express arbitrary proofs, then they can't express arbitrary programs either i take it?
<k4-t>	so i'm creating a script that manages my dotfiles... i have the pseudocode and have a test script, but wanted to know if i am missing anything. https://gist.github.com/krak-n/a0b8b944d89b5ff73e5f
<ams>	are your dot files so complicated?
<ams>	maybe you should revisit them instead of adding more complicated stuff ..
<k4-t>	not complicated
<k4-t>	dotfiles are just weird >:(
<champloo>	fixed my code from earlier with this line int* arrays[4] = {initial, sum, (int*)malloc(sizeof(int)), (int*)malloc(sizeof(int))};
<k4-t>	not every program follows the xdg_config spec, so adding dotfiles after a reinstall can be a pain. just wanted to automate the process.
<ams>	if you have to reinstall that often .. maybe you should figure out why you need to do so..
<tsoutseki>	uh, does anyone know how to stop notepad++ from underlining 'falsy spelled' words with that wavy red line?
<tsoutseki>	false
<mirr>	tsoutseki: http://superuser.com/questions/593312/how-can-one-turn-off-spell-checking-in-notepad
<tsoutseki>	mirr, thanks :)
<mirr>	np.
<exponential>	when i have a method with parameter(class ... cs), what does the ... signify ?
<exponential>	java
<puddlejumper>	exponential: variable length ?
<exponential>	so for example, if the method was : public void type_check(string fn, lispexpr[] es, class ... cs)  what would i need to pass as the third parameter?
<_blizzy_>	doesn't the ... mean you can pass any number of args?
<puddlejumper>	exponential: an array or set
<puddlejumper>	exponential: this may be helpful http://docs.oracle.com/javase/1.5.0/docs/guide/language/varargs.html
<pyon>	does anybody really find it useful to define their own variadic functions? if so, in what circumstances?
<puddlejumper>	pyon: i'm sure it could be useful
<puddlejumper>	i've never needed to use them
<pyon>	i mean, other than ugly workarounds like c++'s forwarding stuff.
<pyon>	puddlejumper: yeah, i haven't needed variadic functions either.
<puddlejumper>	ugly c++ workarounds belong only in their own ugly category :p
<pyon>	lol
<pyon>	ikr
<puddlejumper>	lets just leave those in their own box in the corner over there :|
<ori_b>	pyon: in what circumstances? i don't absolutely *need* it, but it's nice for conveniently constructing variable arity data structures sometimes.
<ori_b>	mkexpr(loc, opcall, arg, list, null);
<ori_b>	for example.
<puddlejumper>	pyon: you notice all example code uses an enhanced for loop
<ori_b>	pyon: also, i tend to have my own printf-like functions for, eg, error reporting.
<ori_b>	fail("
<ori_b>	fail(1, "couldn't read %s: %s\n", filename, errmsg);
<pyon>	:-o
<exponential>	puddlejumper: so, if my method call is new interpreter().type_check("test", new lispexpr[]{new lispchar('+'), new lispinteger(1), new lispinteger(2)}, ????); what would go in place of the ???? in the documentation, it says it is a number of classes, but i'm unsure how the class notation works
<puddlejumper>	exponential: an array of something
<puddlejumper>	exponential: if it is yours you really should know :|
<ori_b>	hm, what else... i've done message packing as well; 'pack(buf, "iibs", 123, 4567, 'x', "asdf")'
<ori_b>	although i ended up deprecating that bit.
<winsoff>	can i write my device drivers in rust?
<ori_b>	winsoff: probably, but not for linux; at least, not without serious contortions.
<pyon>	ori_b: the packing one looks nice. :-)
<ori_b>	and redefinitions of huge amounts of internal kernel apis.
<winsoff>	why not?  are kernel apis all c?
<ori_b>	winsoff: yes.
<winsoff>	why can rust not make syscalls like c can?
<pyon>	winsoff: it would probably involve lots of "writing c in rust".
<ori_b>	winsoff: it can... but syscalls != kernel apis.
<winsoff>	i do not "c" how the language is the difference
<winsoff>	they all compile
<winsoff>	to code.
<ori_b>	winsoff: headers.
<winsoff>	are you saying that the kernel api needs to be
<pyon>	winsoff: which is doable, actually even easy... but devoid of the advantages that make rust more attractive than c.
<winsoff>	ported?
<ori_b>	winsoff: yes; it's basically the same as writing dlopen()ed plugins for any c program.
<winsoff>	pyon: could you clarify?
<ori_b>	pyon: it looks nice, then you realize that for integers, you need explicit casts to get the right size.
<ori_b>	pyon: well, at least for 64 bit values.
<ori_b>	it's not awful, though.
<ori_b>	winsoff: the kernel apis that you're calling don't follow the usual rust scoping/raii/... rules
<ori_b>	so basically you end up wrapping anything that would interact with the kernel in unsafe chunks
<ori_b>	in addition to rewriting the headers.
<denommus>	pyon: i think even unsafe rust is more attractive than c, to be honest
<ori_b>	and emulating in an abi-compatible way things like intrusive lists
<denommus>	pyon: the mere fact that it supports generic programming even without std is huge
<ori_b>	and all of the various inline assembly bits that are in headers.
<pyon>	denommus: it isn't particularly compelling when you're writing code that will need to interact with c.
<winsoff>	wait, why are kernel interactions "unsafe" at all?
<ori_b>	winsoff: because the kernel doesn't follow rust's ownership rules
<ori_b>	so you need to work around rust's ownership rules
<denommus>	ori_b: that's not the reason
<winsoff>	why does it need to follow those rules?
<denommus>	winsoff: the reason is becaus eyou lack std
<ori_b>	denommus: that too.
<denommus>	winsoff: so you need to reinvent a lot of things, which requires unsafety
<winsoff>	std?
<ori_b>	although, i was thinking of things like rcu
<winsoff>	you mean standard?
<denommus>	winsoff: yes, the standard library
<winsoff>	both c and rust have standard libraries. what are you trying to say?
<ori_b>	winsoff: that rust's standard library isn't available in the kernel.
<ori_b>	(c's standard library isn't available in the kernel either)
<winsoff>	ah, okay.
<winsoff>	that makes more sense.
<pyon>	winsoff: you don't need to follow rust's rules to write safe code, but you need to follow them if you want to write code that *the rust compiler* can check is safe.
<denommus>	winsoff: when making a kernel, part of your job is providing implementation for such a library. so you can't count on whatever you use
<winsoff>	well, that is what i thought, ori_b.
<winsoff>	how interesting.
<winsoff>	so when people wrote rust, did they write it first in c, or assembly?
<denommus>	you could also use a third-party implementation that fits your kernel, like linux does with glibc
<ori_b>	they wrote it in ocaml.
<pyon>	winsoff: rust was originally implemented in ocaml.
<denommus>	winsoff: ocaml
<winsoff>	and ocaml's compiler was...?
<denommus>	there's no reason why a systems programming language must be done in a systems programming language. compilation is just a data transformation work
<ori_b>	ocaml, which was probably some other ml dialect.
<horsik_>	anyone using structuremap?
<ori_b>	(before it got self hosting)
<winsoff>	how intereseting.
<winsoff>	so wait, how is a compiler different than an interpreter?
<pyon>	winsoff: actually, systems languages are in general not terribly pleasant tools to use for writing compilers.
<winsoff>	a compiler compiles a binary, and an interpreter runs the binary in a runtime?
<winsoff>	because it seems like most interpreters do some compilation.
<ori_b>	winsoff: depends.
<pyon>	winsoff: a compiler translates a program from a source language to a target language.
<winsoff>	pyon: so it...interprets it, if we speak linguistically.
<ori_b>	the way that it's usually used, a compiler isn't needed when the program is run.
<ori_b>	an interpreter is.
<pyon>	winsoff: no.
<denommus>	winsoff: compilers transform from source code to some target language. interpreters originally transformed from source code directly to something that ran, without an intermediary step
<winsoff>	pyon: transliteration involves direct interpretation of the source material.
<pyon>	winsoff: that isn't what "interpretation" means in a programming context.
<denommus>	winsoff: nowadays, most interpreters are actually compilers with a virtual machine that can understand the target bytecode
<winsoff>	right, i meant linguistically, pyon, as stated.
<pyon>	winsoff: perhaps what you want to say is that the compiler writer has to understand the source language's semantics, which is of course true.
<winsoff>	denommus, interesting.  however, do all compilers eventually compile to machine code?
<winsoff>	and what does machine code run off of, in modern times?
<denommus>	winsoff: they may compile to a bytecode that can be intepreted by a virtual machine efficiently
<winsoff>	how far does it take to get to the actual stream of electric signal that enters the circuit?
<pyon>	winsoff: "run off of" --> as far as we can tell, magic, fairies and lots of sugar.
<denommus>	winsoff: machine code is understood by the actual hardware, in theory
<winsoff>	pyon: and those semantics are declared by the programmers, right?  all the translation of the compiler does is analyze the input language to convert it to instructions, which further boil down to mathematical boolean operations.
<winsoff>	denommus, i mean in practice, of course.
<ori_b>	wrong in the details, right in the general idea.
<darkcthulhu>	winsoff, ...translation and optimization; not necessarily to a lower level representation though.
<denommus>	winsoff: i'm not really a hardware person. hardware is too complicated nowadays
<winsoff>	are there any open-source processors?
<winsoff>	or open-process, i should say?
<pyon>	winsoff: "those semantics" --> are seldom properly declared anywhere. most programmers can figure them out via a trial and error process - playing with the language (implementation).
<winsoff>	or are all of the microcontrollers that amd and intel, qualcomm, and ti, et cetera, all goofy in-house proprietary concoctions?
<ori_b>	winsoff: http://www.oracle.com/technetwork/systems/opensparc/index.html
<winsoff>	well, that's one
<winsoff>	way to go humanity
<ori_b>	http://en.wikipedia.org/wiki/openrisc
<ori_b>	http://www.lowrisc.org/
<ori_b>	etc
<ori_b>	there are tons of them
<ori_b>	none of them are very good, but there are tons of them.
<winsoff>	but the majority of processors in modern humanity are proprietary.
<ori_b>	yes, so?
<pyon>	darkcthulhu: do you know if there's ever been a compiler explicitly designed to pessimize programs? kinda like "negative optimization".
<ori_b>	the fabrication process costs a few billion to set up if you already have the fab
<winsoff>	so the potential for growth and understanding is further hindered by the proprietary model, ori_b
<ori_b>	so it's not like it matters unless you've already got a few billion.
<winsoff>	i disagree.
<winsoff>	i don't have to build a car to have ideas about it.
<winsoff>	i don't have to compile your code to see the source is flawed.
<ori_b>	*shrugs*
<ori_b>	it would be nicer if they were open.
<hotcoder>	fair enough
<winsoff>	agreed entirely.
<hotcoder>	i'll ask here then hoping for some help
<ori_b>	it would be nicer if i had a few billion dollars to experiment with them, too.
<hotcoder>	um
<winsoff>	ori_b: dollars don't matter when you have enough time.
<dogpolice>	winsoff: dollars do matter when you don't have enough resources.
<darkcthulhu>	pyon, haha.. well, some of the optimizations could be considered pessimization from a different perspective. for example, loop splitting and merging, is a trade-off between space and performance. similarly with loop unrolling.
<winsoff>	the billions of dollars go into feeding people, which also doesn't require money
<hotcoder>	so is anybody here familiar with java? i kinda need some help. basically i ran some .jar files last night that i made myself with eclipse.
<winsoff>	you don't throw dollars into the ground to get food.
<ori_b>	er, time doesn't help wtih nanometer scale structures etched on silicon.
<winsoff>	hotcoder, you...you s-self compiled?
<hotcoder>	but today when i run the same things it says corrupt file. all jars dont run :(
<dogpolice>	^
<hotcoder>	i used eclipse to compile!
<ori_b>	you might get away with a few tens of millions of dollars, but.. eh.
<winsoff>	never trust eclipse
<winsoff>	anyway, what is the problem, hotcoder?
<winsoff>	ori_b: you're missing the point, albeit intentionally.
<dogpolice>	ori_b: you can (pretty easily) create your own transistors at home.
<hotcoder>	it ran yesterday. dont run now. i uninstalled some prev versions of java the morning
<ori_b>	dogpolice: yes; a few transistors are easy.
<winsoff>	money isn't what makes those nanometer scales possible.
<dogpolice>	ori_b: they will be pretty poor.
<ori_b>	dogpolice: i've done it.
<_blizzy_>	i'm actually starting to like php
<dogpolice>	fun! :)
<winsoff>	human effort and ingenuity, combined with the fruits of that labor, make it possible.
<ori_b>	dogpolice: a processor is another thing.
<hotcoder>	now i want to know what do i need of java in my computer in order to run jar files
<dogpolice>	winsoff: human ingenuity won't get you a cleanroom.
<darkcthulhu>	pyon, in our passes, both loop coalescing and loop splitting are considered steps that the optimizer can do. we are supposed to make the call which one is more suitable in a particular case. but the end goal being pessimization in all respects isn't something anyone would desire i'm sure.
<winsoff>	hotcoder, you need the java version that it compiled to, i think.
<_blizzy_>	step 1 of being a java programmer
<dogpolice>	winsoff: human ingenuity also won't get you all the equipment.
<winsoff>	dogpolice, human effort will.
<winsoff>	;d
<_blizzy_>	step 1: install vs2013 community.
<_blizzy_>	;)
<ori_b>	winsoff: yes, a few decades of it.
<hotcoder>	winsoff, oh shit
<hotcoder>	it must be an older one then
<dogpolice>	yes, and that's called a job, making money to buy the equipment. :)
<winsoff>	ori_b, no, the clean rooms already exist
<ori_b>	winsoff: yes, and they cost money .
<winsoff>	you don't need to buy the equipment that already exists
<pyon>	darkcthulhu: well, it could be the implementation counterpart to what esoteric languages are for language design. :-p
<ori_b>	winsoff: are you proposing stealing it?
<winsoff>	it sits there, unused, an enormous amount the time; the plant doesn't run 24/7
<winsoff>	"stealing"
<winsoff>	you're not going to move it
<darkcthulhu>	pyon, heh.. the problem may be that there is no upper bound to pessimization, while there is one to optimization.
<dogpolice>	they aren't going to let you use it because they paid for it.
<ori_b>	winsoff: everyone that owns it will want money.
<pyon>	ah, sure.
<winsoff>	dogpolice, did you try asking?
<hotcoder>	hold up
<hotcoder>	guys
<winsoff>	marketing might want money for it
<winsoff>	but is the guy who does that for his passion going to care?
<dogpolice>	winsoff: "asking"? are you fucking kidding?
<winsoff>	guaranteed he'd love to show it to you, if you actually asked.
<dogpolice>	one guy isn't in control of the bloody equipment.
<ori_b>	dogpolice: well, you'd be surprised what you can get by asking.
<winsoff>	and then someone who wants to make money off of him would immediately want you to pay him.
<dogpolice>	ori_b: i know, i have access to a fab firm because of it, but jesus, really?
<dogpolice>	you better flash some pretty heavy credentials.
<ori_b>	dogpolice: definitely.
<winsoff>	you think that parents charge their kids to teach them how to walk?
<winsoff>	people who want to teach aren't in it for the money.
<dogpolice>	winsoff: what the actual fuck are you on about. :\
<winsoff>	people who actually enjoy their job aren't in it for the money.
<winsoff>	for you to make this assumption that you have to pay to do anything in society is upholding that very fact.
<tsoutseki>	winsoff, well, money is an extra
<hotcoder>	goddamn i hate ##java
<tsoutseki>	and who doesn't want some extra?
<hotcoder>	fuck those people
<hotcoder>	can i kill them?
<dogpolice>	i'm in awe of how far you are away from the original topic.
<winsoff>	##java is the best channel
<dogpolice>	hotcoder: caps.
<hotcoder>	i should be allowed to kill them
<winsoff>	what kind of experience did you have in ##java?
<dogpolice>	pkill ##java
<hotcoder>	no
<winsoff>	killing people doesn't get rid of what they did to you.
<winsoff>	the past is eternal.
<dogpolice>	also don't bring channel politics in here. :p
<hotcoder>	i meant physically
<hotcoder>	murder then
<hotcoder>	them
<winsoff>	that's not going to fix your problem.
<hotcoder>	i'd rip open their vocal chord
<hotcoder>	i dont care
<darkelement>	it can fix some problems
<winsoff>	your problem is yourself.
<winsoff>	if anything, murder yourself.
<darkelement>	:]
<hotcoder>	winsoff is on ignore
<dogpolice>	everyone needs to take a chill pill.
<hotcoder>	anyway
<hotcoder>	like i was saying
<dogpolice>	a brotherman bill chill pill.
<winsoff>	dadadadada.
<hotcoder>	now that i got your attentionays
<hotcoder>	how do i write to jar file
<dogpolice>	winsoff: there it is.
<hotcoder>	without it being corrupt
<hotcoder>	the jre that i used to write the jar file was 1.7
<hotcoder>	now i only use 1.8
<hotcoder>	could that be the problem?
<darkelement>	yep
<darkelement>	it could be
<winsoff>	maybe it was born with it
<darkelement>	i've had problems with the two different versions before.
<hotcoder>	:d
<tnght>	yo anyone have a license key for inftyreader
<dogpolice>	tnght: how about no? buy it.
<darkelement>	tnght: not the place for that
<tnght>	dogpolice lol
<hotcoder>	another question
<pyon>	tnght: i do... not.
<tnght>	a license is $5k
<dogpolice>	and?
<tnght>	forget that
<hotcoder>	is the jdk a subset of jre ?
<darkelement>	what the hell is infty reader then
<dogpolice>	any further request will result in you being quieted.
<darkelement>	if it costs 5k for license
<hotcoder>	wat
<hotcoder>	is jdk a subset of jre
<pyon>	darkelement: ocr software, apparently.
<pyon>	http://www.inftyreader.org/
<hotcoder>	that is my java related question
<hotcoder>	who knows
<dogpolice>	pyon: you have to be joking. 5k for that?
<darkelement>	pyon: nice
<hotcoder>	darkelement, you know java?
<winsoff>	tnght, try asking them.
<hotcoder>	is jdk a subset of jre?
<winsoff>	they'll be better equipped to tell you where you can find alternatives.
<hotcoder>	yes or no?
<darkelement>	hotcoder: it was one of the things i started on when i started programming
<winsoff>	we're not ##homework
<darkelement>	ok
<hotcoder>	ok
<hotcoder>	is jdk a piece of jre ?
<winsoff>	the java runtime environment and java development kit
<winsoff>	those two expansions should guide your thinking.
<pyon>	hotcoder: learn to use a goddamn search engine: https://duckduckgo.com/?q=jre+jdk+relationship
<darkelement>	so jdk = java development kit, so all the tools that come with it, and jre is java runtime environment, so the differing environments
<winsoff>	do you need a java development kit to run java?
<hotcoder>	pyon why so angry
<horsik_>	man, autowiring resolution policy for multiple implementations in various containers is crazy... spring throws exception for ambiguous types, autofac uses latest registered class, castle uses oldest registered class, structuremap does god knows what...
<hotcoder>	everyone on about java is angry somehow
<darkelement>	i believe it is the other way around, but i am mistaken. and also, pyon has a good point, you should search before coming here
<darkelement>	i may be mistaken*
<hotcoder>	jre is a piece of jdk?
<hotcoder>	so it is
<hotcoder>	thanks
<darkelement>	np.
<hotcoder>	how come when i start up a new project in eclipse it starts out on jre not jdk
<kahrl>	hotcoder: eclipse comes with its own java compiler, and apparently defaults to using it even if you have a javac from a jdk
<kahrl>	not sure how much of the rest of the jdk they reimplement
<hotcoder>	ah okay
<vdamewood>	hi, people, etc.
<hotcoder>	is it possible to get eclipse to use other jdks ? kahrl
<hotcoder>	kahrl, are you well versed on eclipse?
<darkelement>	hotcoder: yes, you can
<darkelement>	i forget how to, however. google it
<hotcoder>	ye i am
<hotcoder>	jar file works now :)
<hotcoder>	thanks guys darkelement kahrl
<hotcoder>	and all other
<hotcoder>	so it was the version issue
<darkelement>	hey, glad i could help! xd
<hotcoder>	i just needed both jdk8 and 7
<hotcoder>	because the file that was written down (jar file) was written in both
<hotcoder>	i thought the upgrade to the next version included stuff from the previous as well
<hotcoder>	better i learned this here than at my boss's office :)
<hotcoder>	why everybody quiet?
<vdamewood>	nothing to say.
<darkelement>	^
<hotcoder>	ah ok
<hotcoder>	how yall been all day?
<vdamewood>	i've been alive all day. i hope the trend continues.
<hotcoder>	i dont
<darkelement>	still alive, much like glados
<darkelement>	unexpected sal
<darkelement>	salt
<hotcoder>	haha. i'm just joking ^^
<hotcoder>	like the opportunity was there, so i took it
<vdamewood>	unanticipated sodium chloride?
<_blizzy_>	til what repl stands for.
<hotcoder>	i think we should go and ask questions in ##java
<darkelement>	vdamewood: indeed.
<hotcoder>	the amount of salt generated there would drop the salt prices down to free
<_blizzy_>	hotcoder, have you ever thought about learning c#?
<pyon>	_blizzy_: you like ruby, but never knew that irb is a repl? :-p
<_blizzy_>	pyon, i know it was a repl, i just didn't know what it stood for.
<hotcoder>	_blizzy_, never thought about it. i have thought of learning node.js though
<pyon>	_blizzy_: oh.
<pyon>	_blizzy_: never mind. i have reading comprehension issues.
<pyon>	:-p
<vdamewood>	really expensive price list
<hotcoder>	how much should i charge for a project?
<hotcoder>	i really dont know the value of my own work guys :(
<hotcoder>	lets say there's something that i could finish in a week. big project
<hotcoder>	how much does one get paid in a week?
<puddlejumper>	depends on if you know the difference between jre and jdk :p
<hotcoder>	puddlejumper, http://i.imgur.com/yagpxpdb.jpg
<kahrl>	if you can really finish big projects in a week, expect to get paid a lot
<hotcoder>	not really big projects
<hotcoder>	but fairly big
<pyon>	hotcoder: "don't know the value" --> enough to cover food, clothing, a small apartment's rent and public transportation costs, perhaps?
<hotcoder>	what do you mean by "a lot"
<puddlejumper>	hotcoder: freelancer.com
<puddlejumper>	there's a lot of projects you can do
<hotcoder>	im getting 5000 for a project in 2 weeks
<hotcoder>	but i told that to people
<kahrl>	hotcoder: idk, haven't been in the market in a while
<puddlejumper>	start out small build up a rep then go after bigger projects
<hotcoder>	and they were surprised, like i wasnt getting paid enough
<hotcoder>	now i kinda want more. idk
<hotcoder>	pyon i feel like i should be able to cover all that with my code skills alone
<aewffwea>	what's the best place to get a well-paid job over the web?
<_blizzy_>	how much should a junior dev expect for freelancing?
<_blizzy_>	per hour.
<aewffwea>	_blizzy_: $20
<_blizzy_>	aewffwea, damn, that's good money
<_blizzy_>	if only i wasn't scared to freelance.
<winny>	and that's pretty low too
<_blizzy_>	wow.
<_blizzy_>	$20/hour for me is a lot imo.
<_blizzy_>	however i'm too nervous to freelance.
<ori_b>	aewffwea: huh? that's pretty low, at least for contracting...
<_blizzy_>	i should go for 19.99$
<_blizzy_>	and call myself billy mays
<winny>	i do sys admin and dev work freelance and earn between 20-25
<winny>	but, it's not a very established fee
<winny>	per gig
<_blizzy_>	how2fightfear.
<winny>	probably could ask for significantly more
<_blizzy_>	maybe i'll get cocky
<_blizzy_>	and ask for 21$
<winny>	when you freelance you don't have many responisiblities which is nice
<_blizzy_>	oh, nice.
<_blizzy_>	however, anxiety comes into play.
<winny>	only that you agree to complete some tasks and possibly sign a nda, and track your tax situation
<winny>	yeah, true
<puddlejumper>	if you do it online you want to get good reviews
<winny>	anxiety is the hardest thing imho
<puddlejumper>	so future clients
<puddlejumper>	for
<winny>	i've never had success on things like odesk
<_blizzy_>	i don't think my skills are good enough.
<_blizzy_>	c:
<winny>	word of mouth has helped me
<puddlejumper>	_blizzy_: do things you know you can do
<_blizzy_>	:>
<puddlejumper>	_blizzy_: most of the things i did on freelancer i finished before bidding :p
<ori_b>	(for reference, i *definitely* wouldn't go for less than $100/hr.)
<puddlejumper>	and even told the people i finished it already ;)
<winny>	lol @ ori_b
<winny>	different setting and different qualifications you must have
<ori_b>	probably.
<winny>	do you turn down clients sometime, because you don't have the time?
<ori_b>	at the moment, i'm employed full time, but i make significantly more than $20/hr, with stability.
<winny>	ah
<winny>	i work very little as i am rather lazy
<winny>	and have lots of college
<ori_b>	http://30sleeps.com/blog/2007/09/27/set-your-hourly-rate/
<winny>	also i find it amazing hard to keep myself organized
<winny>	as a freelancer
<winny>	i'm going to set up a redmine to track my hours shortly
<winny>	and tickets
<ori_b>	winny: also, see http://www.coastmountainsoftware.com/rate-calculator/
<ori_b>	note that a reasonable entry level salary is ~70k, i think.
<ori_b>	you can search that, the data is available.
<winny>	yeah i've read that somewhere before
<sarai>	hi people
<ori_b>	hi.
<sarai>	so whats up
<darkelement>	hey guys how can i remove values from a set() in python
<ori_b>	not too much.
<ori_b>	darkelement: does the 'remove()' function listed in the docs not work?
<darkelement>	it does not work for sets apparently
<ori_b>	https://docs.python.org/2/library/sets.html
<ori_b>	that would be weird, since it's listed in the set docs...
<_blizzy_>	freelancing sounds cool.
<_blizzy_>	however, i have to get over anxiety first.
<darkelement>	hm
<ori_b>	>>> x = {1,2,3}
<ori_b>	>>> x.remove(2)
<ori_b>	>>> x
<ori_b>	set([1, 3])
<ori_b>	^-- seems to work for me.
<ori_b>	*heads home*
<miniman10000>	alright so i was looking into capturing your screen on windows because i was curious of a faster way to get a screenshot. it seemed like ways that said they wern't slow were a tradeoff in compatability as it was only supported in vista/windows 7. windows 8 apparently has its own methods. so i wondered how obs did it. well even they recommend on windows 7/vista to not use window capture if possible because it is
<miniman10000>	inefficient.
<darkelement>	that worked, i was trying to do it by index earlier, my bad
<miniman10000>	monitor capture*
<winny>	python sets are not ordered
<winny>	there is example code floating around for a sortedset though
<winny>	probably some in pypi
<wagonboi>	is it true that java api doesn't support graphs natively?
<ori_b>	slurik: each pixel is a rectangle of color; if you draw a line that isn't aligned perfectly with the pixel, you get a pixel that, conceptually, is partly one color, partly another.
<ori_b>	sloshy: make sense so far?
<ori_b>	oh, he left.
<ori_b>	ok, whatever.
<planckwalk>	heh
<ori_b>	planckwalk: actually, i'm pretty weak on graphical programming; how is this normally solved by, eg, cairo's rasterization?
<ori_b>	i'd imagine that drawing every polygon to an intermediate surface is kind of inefficient.
<planckwalk>	i don't know how cairo does things internally
<planckwalk>	i'd expect cairo to have more general poly types though.  probably bounded by segments of cubic curves or something.
<ori_b>	yes, but it tesselates before rendering.
<planckwalk>	one trick is to use a depth buffer to identify facets from a current rendering 'layer', and compose alpha differently for same-layer operations.
<denommus>	hi
<planckwalk>	there are still cases where you can get rendering artifacts with that, but the most common operations are fine
<ori_b>	hm.
<darkcthulhu>	does += work as expected for std::vector? adding to the end of the list?
<darkcthulhu>	or is it just the insert method i should use?
<eric_lagergren>	okay, i'm having issues finding where 'loadavg' is documented (linux
<darkcthulhu>	nvm.. found it.
<denommus>	darkcthulhu: <<
<eric_lagergren>	i'm trying to figure out where loadavg's fscale member comes from, or how it's computed...
<darkcthulhu>	denommus, std::vector? operator<< isn't defined is it?
<denommus>	darkcthulhu: i don't remember. if it's not, just use push_back
<darkcthulhu>	denommus, i think insert is better in this case because i'm dealing with a whole range of elements.
<denommus>	okay, then
<eric_lagergren>	...anybody have any ideas
<denommus>	eric_lagergren: have you tried the man pages? the info pages?
<eric_lagergren>	denommus: man loadavg doesn't describe the loadavg struct.
<denommus>	eric_lagergren: you know there could be more than one man page with the same name, right? the index changes
<denommus>	eric_lagergren: which have you tried?
<eric_lagergren>	there's only one, man (3) loadavg
<eric_lagergren>	well, technically getloadavg(3)
<denommus>	and in info?
<eric_lagergren>	info getloadavg doesn't describe the structure, and info loadavg, like man \d loadavg, doesn't exist
<denommus>	hm. open info and ctrl+s loadavg
<denommus>	keep pressing ctrl+s to find the next occurrence
<denommus>	does it find anything relevant?
<eric_lagergren>	nope. just finds 'getloadavg'
<hassoon_>	hi guys
<eric_lagergren>	denommus: i have to run home really quick (class ended). so i'll be back in ~15 if you have any more ideas...
<pigninja>	waddup peoples
<pigninja>	does anyone happen to know the oldest mac mini capable of xamarin.ios builds?
<lf94>	(= [1 (+ 1 1) 3] [1 2 3])
<lf94>	this is lisp?! damn son. nice.
<lf94>	could you do
<lf94>	(= 1 1 1 1 1) ?
<reggin>	has anyone seen nate, nate higgers?
<grill_u>	what the fuck google docs is retarded why doesn't it support full latex
<ori_b>	hrm.. anyone know any nice http apis that i can eye/steal from for myrddin?
<denommus>	lf94: i don't think so
<pigninja>	grill_u: why aren't you using office?
<denommus>	lf94: = only accepts two arguments, iirc
<grill_u>	which office
<pigninja>	grill_u: touché
<lf94>	denommus, i'm sure there is a version that accepts a variable amount of arguments ;)
<ori_b>	grill_u: why aren't you using latex?
<lf94>	which would be really cool.
<denommus>	lf94: but you can do (+ 1 1 1 1 1 1)
<pigninja>	grill_u: libre, open, microsoft
<lf94>	i know that silly!
<ori_b>	i hear that latex supports full latex pretty well.
<pigninja>	grill_u: any of the above will suffice
<denommus>	lf94: i actually don't remember, but you can check in any online repl
<lf94>	it's too bad you can't do that in haskell
<lf94>	(+ 1 1)
<lf94>	map (+) [1,1,1,1,1]
<pigninja>	ori_b: hahahaha, zing
<lf94>	or something
<lf94>	not map
<lf94>	...reduce?
<denommus>	lf94: you can. sum [1, 1, 1, 1, 1]
<lf94>	denommus, use map/reduce/fold
<denommus>	lf94: i actually think that's a good thing from haskell
<lf94>	fold!
<lf94>	fold was it.
<lf94>	foldl (+) [1,1,1,1,1]
<lf94>	denommus, depends how you look at it.
<denommus>	lf94: there are only single argument functions, and everything is curried
<lf94>	i know :)
<lf94>	what made it seem like i didn't know?
<denommus>	lf94: if you want to emulate variadic functions, just use lists
<lf94>	there are a lot of things people have been saying to me lately that i know
<tneva82>	somebody could tell me if changing ssl3 encryption to tls 1.0 is change in program's code or in server's settings? seems protocol got changed on service we use and the original guy who did the code for us left so now i'm left trying to figure out on my own how to do the change :-/
<lf94>	denommus, yes.
<denommus>	lf94: i'm not assuming you know
<denommus>	lf94: oops
<lf94>	x)
<denommus>	lf94: i'm not assuming you don't know, i just like explaining things
<lf94>	roger that :)
<denommus>	lf94: anyway, i find that haskell's functions end up composing better
<denommus>	lf94: lisp's variadic functions are pretty for math, but that's it. and you can fold in haskell anyway, so whatever
<lf94>	yes, composition is very awesome.
<denommus>	lf94: what shines in lisp is doing macros, though. dsls in haskell are mostly just things that you can represent with monads
<planckwalk>	tneva82: usually the change would be transparent at the client end, unless you're using a truly ancient library
<denommus>	lf94: but in lisp macros can be some incredible things
<pyon>	denommus: "macros" --> yeah. template haskell is fugly compared to lisp macros.
<pyon>	denommus: even camlp(4|5) is fugly compared to macros.
<denommus>	pyon: template haskell is something i actively avoid
<lf94>	i have needed to use template haskell
<pyon>	denommus: you're not alone. most haskellers avoid using template haskell if they can.
<lf94>	i probably never will!
<denommus>	pyon: i never looked into ppx, though (from ocaml)
<pyon>	ah.
<denommus>	i wanted to, to create the arrow syntax for my library
<denommus>	but i'm afraid it would break auto indentation
<lf94>	i'm starting to think haskell is no good for systems
<lf94>	too many edge cases
<denommus>	lf94: depends on what you call a system
<grill_u>	lolhaskel
<buzzykins>	more like haskfail
<pyon>	lf94: i find it weird that you complain about edge cases in haskell. i've found that haskell is one of the most powerful tools for *killing* corner cases. it's like a flamethrower that only burns corner cases.
<lf94>	pyon, we're talking about different corner cases :)
<pyon>	huh?
<lf94>	there are...mechanisms in haskell...that seem to be very hacky. they seem to be not well integrated into the language.
<lf94>	these only begin to show when you start to do complex tasks in haskell
<lf94>	hey, i love haskell, it is great.
<lf94>	i like it more than python.
<lf94>	but python - from what i've seen and written - has obvious hacky mechanisms.
<lf94>	has no*
<lf94>	please prove me wrong though
<lf94>	the more times i see something imperfect about haskell the more i believe i was sucked into a lie
<lf94>	(i.e. pure functional programming is not the way to go, it is limiting, and we have to invent hacks to get around these shortcomings)
<lf94>	but are they really hacks? that's like asking how often are "hacks" used in mathematics - is there anything even considered as a hack? do hacks exist in math?
<lf94>	if hacks exist in mathematics i can live with them in haskell.
<grill_u>	yolo
<grill_u>	top .7% on stackoverflow yoloats
<protist>	what is a good way to get just a peice of an mp4 file?
<lf94>	mp4split milliseconds -> (mp4,mp4)
<protist>	lf94: example to get from 42:10 to 55:31?
<lf94>	mp4split mp4 -> milliseconds -> (mp4,mp4)
<lf94>	i'm just imagining if there were a haskell way to do it.
<protist>	lol :/
<lf94>	ah, a range
<protist>	i really need to do this
<protist>	yeah
<pyon>	lf94: "if hacks exist in mathematics" --> the first proof of a theorem is seldom the cleanest, or the most amenable to further generalization. :-p
<lf94>	well, your first step is look for mp4 libraries
<lf94>	pyon: ok :) that makes me more comfortable.
<lf94>	protist, what language?
<eric_lagergren>	denommus: turns out fscale (on my machine) is 1 << 16, but i have no idea why or *where* it's declared.
<lf94>	do you just need a binary that can do this?
<protist>	lf94: command line preferably
<protist>	lf94: this is a one time thing
<jeaye>	ffmpeg
<lf94>	protist, look up "sox" it is a command line set of tools
<protist>	lf94: need to cut out a part
<eric_lagergren>	acking through my entire root directory returns nothing.
<pyon>	lf94: btw, i'm not happy with how effect segregation is done in haskell either.
<lf94>	for audio manipulation
<lf94>	ffmpeg may work too
<protist>	jeaye: i got that...no idea how to get a part though
<jeaye>	protist: read the docs.
<pyon>	lf94: i mean, i'm sure effect segregation is a good idea, but haskell (by which i mean not just the language, but also the ecosystem) makes it too painful.
<jeaye>	it can do just about everything.
<protist>	jeaye: *shakes fist in anger*
<protist>	jeaye: wanna hand in this damn assignment lol
<lf94>	rip
<lf94>	protist, read the docs you will love yourself more after
<lf94>	pyon: but effect segregation you mean monads right
<lf94>	just want to be on the same level here
<lf94>	i'm a shit haskell programmer
<pyon>	lf94: monads are okay as long as you have only one.
<grug>	monads
<grug>	more like
<grug>	gonads
<grug>	amirite
<pyon>	lf94: but as soon as you start layering monad transformers on top, things become messier.
<denommus>	lf94: immutability is great once you understand you can model mutability in terms of it
<lf94>	i know immutability is great :)
<lf94>	i love it
<lf94>	pyon: yeah. i've only ever had to deal with one monad at a time so far.
<pyon>	anyway, installing latest sbcl. :-p
<reggin>	hi niggers
<lf94>	.
<protist>	jeaye: lf94: the encoder 'aac' is experimental but experimental codecs are not enabled, add '-strict -2' if you want to use it.
<protist>	jeaye: lf94: my command was ffmpeg -ss 2530 -t 801 -i assignment.mp4 part.mp4 -strict -2
<lf94>	try putting -strict -2 before -ss
<protist>	lf94: i have tried it that way too
<lf94>	then it may be a compile time option.
<lf94>	protist, try sox
<protist>	lf94: :/ ?
<lf94>	i've never personally tried it
<protist>	lf94: that another program?
<lf94>	it's just another command line program
<lf94>	for audio
<protist>	i want video
<protist>	video and audio
<lf94>	 /oh/
<lf94>	then keep googling son.
<lf94>	you will find the light
<lf94>	at the end of the google page
<denommus>	pyon:
<protist>	lf94: got it...args were weird to get it right
<protist>	lf94: order of args mattered a lot
<denommus>	pyon: if you had to call a server on a click event, and then do something with the answer in frp, how would you do that?
<lf94>	subscribe to the click event
<lf94>	b)
<denommus>	lf94: in frp, events are discrete streams of values
<denommus>	lf94: like a hashmap from time to value
<pyon>	denommus: dunno - perhaps make a primitive function that takes an event as input, and produces a behavior that calls the server?
<pyon>	denommus: something like "callserver :: event request -> behavior response"
<hotcoder>	oh look
<hotcoder>	##java banned me
<myrl-chan>	ugh
<myrl-chan>	i still don't know how logical implication is useful or makes sense.
<pyon>	myrl-chan: ?
<myrl-chan>	pyon: (not p) or q
<myrl-chan>	oh wait
<myrl-chan>	yeah.
<myrl-chan>	i think?
<pyon>	myrl-chan: you think what?
<myrl-chan>	oh yeah. yes. it's `(not p) or q`
<pyon>	myrl-chan: in classical logic, yes.
<pyon>	in intuitionistic logic, implication is a primitive.
<myrl-chan>	pyon: how is it useful?
<pyon>	myrl-chan: how is what useful?
<myrl-chan>	logical implication.
<myrl-chan>	if anything, "and" sounds more like it's implying something.
<pyon>	myrl-chan: huh?
<pyon>	myrl-chan: stop trying to relate logic to english. :-|
<myrl-chan>	pyon: lol. :p
<myrl-chan>	pyon: ikr?
<myrl-chan>	pyon: does it have a different etymology?
<pyon>	myrl-chan: for example, english's "or" more often than not actually means logical "xor".
<myrl-chan>	er..
<myrl-chan>	etymology or origin.
<myrl-chan>	fuck, i'm forgetting words now.
<pyon>	myrl-chan: dunno what you're trying to get at. :-|
<myrl-chan>	pyon: me neither. just ignore it. :p
<myrl-chan>	basically, i'm confused why it's called "implication"
<pyon>	myrl-chan: dunno. in logic, "implication" really isn't about causality.this
<pyon>	s/this//
<tneva82>	planckwalk <- problem is it's clearly not transparent as login attempts fail claiming invalid username/password(eventhough they aren't). not sure even what to look for in the code :-/ with luck it would be server setting issue but then again no idea how to proceed wether to verify this either
<myrl-chan>	pyon: i see.
<pyon>	myrl-chan: if implication were about causality, then "mutual implication" would make no sense whatsoever.
<myrl-chan>	pyon: also, i like the "or" is actually logical "xor" one.
<pyon>	myrl-chan: the moral is that the fact we use the same words for english conjunctions and logical connectives... is just a sad accident.
<pyon>	heck, for some weird reason, grammatically, "or" and "if" are considered *conjunctions*.
<myrl-chan>	pyon: yeah, thanks.
<pyon>	anyway.
<lf94>	[haskell] i moved a project from my home directory to its own directory, but setup a sandbox in the home directory. how do i move the sandbox too?
<ovrh>	'morning
<lf94>	[haskell] i moved a project from my home directory to its own directory, but setup a sandbox in the home directory. how do i move the sandbox too?
<amigojapan>	well,   i did my first contribution to open source that is not one of my own projects… i am kidnof weary of doing this because i dont have control of wether my changes will be used in the project or not. i coudl just be wasting my time...
<encapsulation>	https://ideone.com/vd0mbm why isnt ph7cal being changed?
<rounin>	i have this same problem at my actual job
<rounin>	i feel like getting a job should mean actually getting it, rather than it being some multi-year job interview with pay
<amigojapan>	rounin: well, as long as you get paid….   but when it comes ot contributing to an open source project, the point in no longer getting money
<amigojapan>	let me see encapsulation
<rounin>	encapsulation: there's no variable by that name, for one thing... and perhaps you didn't input anything
<rounin>	encapsulation: perhaps the atoi fails because the input contains a newline
<encapsulation>	rounin, its above and the file exists int ph7cal = 0;
<rounin>	encapsulation: and so atoi gets a newline, fails, returns 0, no change
<denommus>	yet another insomniac night
<denommus>	i want to sleep, but i can't
<amigojapan>	encapsulation: show the contexts of ph7cal.txt on pastebin
<encapsulation>	contents is just one number
<amigojapan>	denommus: there is medication for insomnia, consult a pshichiotrist
<amigojapan>	denommus: irc is bad for sleep
<amigojapan>	encapsulation: ok, and no newline?
<denommus>	amigojapan: i closed irc a bunch of times already
<amigojapan>	denommus: i kindof have hte opposite problem, i tend to sleep too much, 12-14 hours a day
<encapsulation>	there might be
<denommus>	amigojapan: when i do sleep, i sleep too much
<amigojapan>	denommus: hmmm,   even using medication people tend to conintu having the problem of not being able to sleep at the time they want and get up at the time they want
<amigojapan>	denommus: i have had to shape my way of life aroudn that problem
<denommus>	amigojapan: well, i'll try to sleep again. thanks for your time
<amigojapan>	np denommus
<xqo>	hi, what is packing when related to a struct?
<xeno_>	xqo: memory organization
<xqo>	xeno_ it prevents the compiler inserting 0bytes between members of the struct?
<pyon>	xqo: it even allows you to control how much padding is inserted between members.
<pyon>	i just wondered... besides pascal's half-assed attempt (typed records), have there been any other attempts at typing the contents of files?
<xqo>	thank you
<planckwalk>	tneva82: what library does your client use to implement tls?
<hassoon__>	..
<encapsulation>	i'm going to try using open
<amigojapan>	pyon: databases have types in the files
<xeno_>	pyon: f#
<planckwalk>	pyon: there are a lot of (de)serialization formats
<planckwalk>	i'm not sure to what extent you would consider them "typing the contents of files" though.
<amigojapan>	encapsulation: why dont you u se json or xml?
<encapsulation>	seems like overkill for this
<xeno_>	pyon: f# has some pretty nice support for including the data (wherever they may be) in the type checking. brilliant when the data are in a file checked in together with the source code, not so brilliant when the data are the result of a web service call
<planckwalk>	due to the persistence of files beyond runtime existence, typing is problematic
<pyon>	planckwalk: not at all. in a high-level typed language, you don't need to worry about the "physical" data structure used to represent a type. serialization formats are standardized, but still physical file formats.
<pyon>	xeno_: ah.
<pyon>	amigojapan: yeah, databases are a nice example.
<pyon>	amigojapan: but they aren't well integrated with languages. :-(
<pyon>	xeno_: i've got to look more closely at this type provider thing.
<xeno_>	pyon: it's a while since i looked at it (was presented at a conference i attended a year ago), but i think you should find something by googling for "type providers"
<amigojapan>	pyon: many languages support sqlight, if you just want to store things locally
<pyon>	i've read about type providers before, but it was a very lightweight read.
<planckwalk>	pyon: serialization formats are sometimes handled behind the scenes, is what i meant.
<planckwalk>	the api is just "serialize these objects into this file"
<planckwalk>	(and the reverse)
<pyon>	planckwalk: ah!
<planckwalk>	they're pretty primitive in most cases though, due to those persistent lifetime concerns
<pyon>	yeah. and there's also the issue that not all types are meaningfully serializable. (e.g., how does one serialize an impure function?)
<pyon>	but, still, i think there's a lot to be gained if we can abstract the disk representation of persistent data, the same way we abstract the ram representation of ephemeral data.
<planckwalk>	yes, stateful objects in particular can sometimes drag along the "whole environment" in some sense
<encapsulation>	amigojapan, i solved it but i don't understand
<encapsulation>	ph7.open ("ph7cal.txt"); was needed
<encapsulation>	i couldnt do std::ifstream ph7 ("ph7cal.txt");
<planckwalk>	pyon: a related issue is that file access is fairly inherent "cross process", which a lot of languages handle poorly in the first place.
<amigojapan>	ok encapsulation , good
<encapsulation>	i thought that constructor called open
<xeno_>	btw, for those of you who are not aware of it: https://code.visualstudio.com/
<xqo>	in ["a","b","c","d"], is 2 the offset or is it the address of "c" in the array?
<xeno_>	it's scary to say it, but microsoft seems to genuinely move further and further away from their home country of evil.
<sciomin>	^
<pyon>	xeno_: checking.
<xeno_>	...and i caugth bill gates recently stated that what has come short of the expectations he had way back, was that he expected programming languages for business applications to have been much safer and more efficient now than they actually are...
<pyon>	xeno_: companies aren't "evil".
<xeno_>	...of course, that matches poorly with him and the company pushing visual basic and other crap
<xeno_>	pyon: metaphysically, you can say that nothing is evil
<pyon>	xeno_: they just seek a profit and follow strategies that suit their particular combination of risk appetite, core competencies, etc.
<pyon>	xeno_: lol, "languages for business applications" are a joke - have always been, and will remain so in the foreseeable future
<xeno_>	pyon: i need to go now - and i believe we have had this discussion before - but no, they search profit for their owners
<xeno_>	pyon: yes, they are
<pyon>	anyway cya
<pyon>	gl
<xeno_>	pyon: part of the reason is that people who know how to do it better don't care about business applications, and the ones who make languages for business applications are barely aware of how to design languages at all
<pyon>	sad but true
<champloo>	in asynchronous programs can the same memory be read from but just not written to or can only one thing be handled at a time?
<pyon>	champloo: it's perfectly valid to have multiple threads read the same thing at the same time.
<hassoon__>	pyon: dood.
<pyon>	champloo: but, whether you actually perform concurrent reads... depends on your program.
<hassoon__>	pyon: ar you into web dev ?
<hassoon__>	*are *
<pyon>	hassoon__: "dood" --> are you twelve or what?
<hassoon__>	pyon: dood as a form of 'dude' has nothing to do wit hthe speaker's age afaik
<pyon>	hassoon__: "dude" --> you aren't my peer. know your place.
<hassoon__>	pyon: ffs you're so annoyingly unfriendly and cold
<hassoon__>	genlemen, given that menu i have done, i wonder if there is a way to put that all in one file, because i did write every form/menu in a seperate file, isn't that way of doing it ineffective? http://hassoon-tests.co.nf
<eskatrem>	hassoon__: i just arrived so i don't know what was said, but maybe he's just ironic or something
<hassoon__>	eskatrem: yeah, i know him personally, i know what i'm saying pal
<hassoon__>	:)
<eskatrem>	hassoon__: what's your question exactly, regarding the website you sent?
<eskatrem>	hassoon__: i am french by the way, so i understand what your text means
<hassoon__>	eskatrem: i just wrote seperated forms in different html files, and i used the onckicl event in every button to simply open another specific html page to dsiplay the required menu
<hassoon__>	eskatrem: interesting, good to meet.
<eskatrem>	hassoon__: imho, it's boring to have to click on various buttons before being able to enter the fields, to finally visualize whatever there is to show
<hassoon__>	eskatrem: il s'agit d'une app web que je développe pour une petite société, mais je me sens que j l'ai mal implémenté
<hassoon__>	eskatrem: ah
<hassoon__>	maybe i should use the <a> so the user can open menus in a new tab :o
<ootlink>	top of the morning :)
<ootlink>	anyone here use protocol buffers much?
<ootlink>	i've been trying to wrap my head around that dang ol' reflection with c++, i tell ya what
<aawe>	ootlink: i've used them
<ootlink>	it looks like it's possible to iterate a message with them as long as you know the type of message
<ootlink>	cool ^^
<ootlink>	would you ever want to use them again? xd
<eskatrem>	hassoon__: by the way, i tried to fill a form but nothing happened, i just got another form to fill, and i can't visualize anything, don't know if you have implemented it yet
<aawe>	ootlink: i think they work great once you get the hang of it
<ootlink>	do you use them in c++?
<aawe>	yes
<ootlink>	awesome ^_^
<ootlink>	i like the idea but i'm still a bit sad about the lack of good examples hehe, well, aside from the examples in the code itself
<ootlink>	i saw this
<ootlink>	http://stackoverflow.com/questions/23963978/c-protobuf-how-to-iterate-through-fields-of-message
<ootlink>	kinda gets close to what i'm trying to do i think
<ootlink>	i would be happy using the python version
<eskatrem>	hassoon__: anyway what do you think is wrong with your site?
<ootlink>	the goal is to take a message and go through its contents and save them out by sending messages out to another program's structure
<pyon>	lisp seems like a pleasant language to do this kind of thing.
<hassoon__>	eskatrem: yeah, i'm still designing the interface sir
<hassoon__>	eskatrem: the deal with the db isn't done yet :p
<hassoon__>	i'm doing it now
<aawe>	ootlink: it seems you get an iterator from the protocol instance
<aawe>	so you create an object of the protocol, parse it from a string, then get an iterator from it
<aawe>	btw can anyone highlight me? wanna see if my notification works
<ootlink>	awwe
<hassoon__>	aawe: 'sup
<aawe>	dang
<hassoon__>	'key you're famous now
<aawe>	i guess terminal bells don't carry over ssh
<ootlink>	hrmm
<pyon>	aawe: "terminal bells" --> don't you find them annoying?
<ootlink>	yjrtr
<aawe>	pyon: no idea since they didn't work. ideally i'd like a sound to carry over my ssh session from the screen/weechat instance
<aawe>	 /set weechat.look.item_time_format
<ootlink>	reminds me of the bad thing about os x
<ootlink>	even if you turn off user interface sound effects you'll still randomly get them
<aawe>	os x is great if you never feel the urge to change a single thing or use it in any way other than how jony ive envisioned it to be used
<pyon>	aawe: normal people have other things to do besides fiddle with computers. :-p
<ootlink>	that's kind of my problem with my iphone
<ootlink>	xd
<pyon>	ootlink: the problem with ios devices is of a different nature. they're unnecessarily restrictive.
<aawe>	pyon: normal people come scrambling to non-normal people as soon as their computers act up
<pyon>	aawe: i've managed to fend them off. :-)
<ootlink>	my biggest complaint about ios is there's no way to install adblock ;_;
<pyon>	aawe: but i guess it's harder if you care about not offending people.
<aawe>	ootlink: i think the same applies to android unless you root your device
<ootlink>	it probably does
<ootlink>	to some degree thjough the cost to do that is less
<ootlink>	and less.. seemingly sketchy
<ootlink>	i mean sure the android devs are always named things like devilikzik
<hassoon__>	eskatrem: what kind of bg color do you think it best fits with those pages
<hassoon__>	i'm thinking of light grey
<eskatrem>	hassoon__: check this: magako.com, i like the greyish background color
<eskatrem>	hassoon__: yeah, you probably want the same background color as i have
<ootlink>	https://i.imgur.com/a0nmlao.png
<ootlink>	some people just want to see the world burn
<hassoon__>	eskatrem: which is..grey? :o
<eskatrem>	hassoon__: the background
<hassoon__>	eskatrem: whuch one, i'm confused :/
<hassoon__>	eskatrem: ah yeah
<eskatrem>	what do you mean?
<hassoon__>	the site's bg
<eskatrem>	it's not exactly white...
<hassoon__>	eskatrem: yeah i know
<hassoon__>	more comfortable than the white
<hassoon__>	darker htough
<hassoon__>	*comforting *
<eskatrem>	while coding i put the background in black and have the text in white, but i am not sure it would render well on a website
<aawe>	eskatrem: i've heard that you should avoid #000, and have very dark grays instead. like #222 or #333
<eskatrem>	aawe: where did you here that?
<aawe>	eskatrem: designer friend
<bvcm>	pure black (#000) is pretty damn harsh, its rarely used
<eskatrem>	lucky you to be friend with a designer
<bvcm>	offblack #333 is more a lot softer on the eyes
<aawe>	i am indeed very lucky, he's taught me a lot about design and typography
<hassoon__>	ececec :)
<aawe>	also color.hailpixel.com is great for selecting colors
<eskatrem>	aawe: nice page, gotta bookmark that
<eskatrem>	man, one can learn lots of stuff simply by listening to irc chans
<hassoon__>	eskatrem: and googling
<eskatrem>	maybe i should save the source of hailpixel, integrate with my web page so i will be able to pick the best color for it
<aawe>	or just create a palette and stick with it
<hassoon__>	eskatrem: what is your webpage? :o
<eskatrem>	hassoon__: it's different, google is to find out how to do something in particular, irc is to find about stuff i didnt know about before
<eskatrem>	hassoon__: the one i gave you before
<hassoon__>	aaaah, that's your personal webpage
<bvcm>	i don't know what type of webpage/app you've got going, but look at other sites that display similar content and take ideas from them (e.g if its a site wiht lots of text, check medium.com and see what color their text/bg is, since such a focused site is bound to have a well thought out design)
<stumbles>	fuck curl
<stumbles>	use wget
<stumbles>	</rant>
<aawe>	stumbles: 420 wget it
<stumbles>	420 wget it, indeed
<hassoon__>	how come i wrote <body background="#ececec">, but i just did a white bg color :o
<adsc>	because it doesn't work that way
<rounin>	hassoon__: it's not called "background"
<bvcm>	should probably be putting it in a css file anyway
<adsc>	try <body style="background-color: #ececec">
<adsc>	and listen to bvcm
<aawe>	be html my friend
<hassoon__>	rounin: indeed, seems like it worked i nthe css way :o
<hassoon__>	so that one attribut is a css's? :o
<aawe>	you must be schemaless, caseless, like html. when you pour html in a browser, it becomes the browser. when you pour html in an app, it becomes the app. when you pour html in a validator, it becomes the validator. html can drip and it can crash. become like html my friend
<adsc>	the "style" attribute can contain any css properties, yes
<asteele>	man looking back at first learning html
<asteele>	what a long road...
<adsc>	but it's better to put them in a separate css file and apply it to html element with selectors based on elements, classes or ids
<aawe>	asteele: i'm guessing you mean html, document object model, css, box model
<aawe>	and not just html
<asteele>	no i mean just html because thats where you start lol
<hassoon__>	is there a css attribut called hred, that can make any tag a link? :o
<hassoon__>	*href *
<bvcm>	do you mean to style links? it's "a"
<hassoon__>	i thought href can be used generally i any other tag, other than a
<hassoon__>	*<a>
<bvcm>	href is pretty much only used when linking in a (unless its to a file in the head)
<sciomin>	i remember learning html to make an illegal rom download website. it was pretty popular in school. fake visitor count was the thing.
<hassoon__>	bvcm: i se, thanks
<hassoon__>	*see *
<adsc>	hassoon__: you can put other tags into an <a> tag to make them links
<hassoon__>	adsc: yep.
<adsc>	hassoon__: there is also a html channel on here, btw
<aawe>	hassoon__: you can style anything like links using "cursor: pointer" and some coloring and text-decoration
<hassoon__>	adsc: meh, ##programming ftw
<hassoon__>	\o/
<bvcm>	you style href links with    a { color: #333; }
<bvcm>	or the ##webdev channel
<hassoon__>	bvcm: still, meh
<adsc>	meh?
<scriptgeek>	do people actually get real programming jobs?
<adsc>	nah
<adsc>	we all work in the sewers, programming is just a hobby
<rounin>	i have a programming job, but i don't know about real
<rounin>	took me about 11 months to get the first one, though... people just weren't interested
<cojabo>	i'm in more webdev and sysadmin stuff, but programming tends to be part of that
<cojabo>	working for startups is... weird sometimes
<adsc>	yeah
<adsc>	i now wonder, too, what scriptgeek means with "real programming jobs"
<genbattle>	i get paid to write code, does that count?
<scriptgeek>	getting paid is good
<scriptgeek>	rounin: what kind of programming do you do?
<rounin>	scriptgeek: what categories are we operating with?
<scriptgeek>	rounin: what are my options?
<rounin>	scriptgeek: hmm... everything, anything
<rounin>	programming is interwoven with tons of stuff
<adsc>	radical underground programming
<rounin>	scriptgeek: i know of a guy whose job is to program a weird welding management system
<rounin>	one time, they had him actually weld something just because
<adsc>	nice
<scriptgeek>	sounds cool
<rounin>	he seems to be enjoying it :)
<cojabo>	i welded something once
<scriptgeek>	i can make metal stick together with an arc welder
<adsc>	i know of a guy who programmed a custom potato sorting machine
<cojabo>	i very firmly attatched the stick to the workbench. l33t.
<rounin>	:d
<scriptgeek>	been there, got the t-shirt, cojabo
<scriptgeek>	rounin: so the welding management system makes welds, too?
<scriptgeek>	some kind of cnc machine?
<ootlink>	nite, and thanks for the advce ^^
<scriptgeek>	rounin: so do you program vcrs, microwaves, bread makers, and toaster ovens?
<rounin>	scriptgeek: i think it manages scheduling and so on
<rounin>	scriptgeek: not personally... i've worked primarily at phone companies and with payment systems, though i've also had other small assignments
<rounin>	scriptgeek: there's a particular phone company where if your name is <soap:fault>, you can't get answering service, thanks to me
<aawe>	this amazes me: https://vimeo.com/126664436
<cojabo>	i programmed a robbot once
<scriptgeek>	rounin: did you break something?
<rounin>	scriptgeek: no, i just didn't bother to use a proper xml parser
<rounin>	i reckon if someone managed to call themselves <soap:fault>, they can pick up their phone
<scriptgeek>	rounin: oh, i see.  you're probably pretty safe then.
<rounin>	yeah, i think so ;)
<rounin>	going for a coffee break... brb
<adsc>	haha, rounin, my son will be named <soap:fault> and i will find that phone company
<adsc>	aawe: what is it?
<aawe>	adsc: an incredibly clever fractal editor
<adsc>	those word combinations mean nothing to me
<scriptgeek>	i'm scared
<scriptgeek>	fractals are terrifying
<aawe>	adsc: watch the video yourself
<aawe>	the words will mean a lot afterwards
<adsc>	i can't, unfortunately
<hassoon__>	sadly.
<aawe>	adsc: pacman -s chromium-browser
<adsc>	aawe: no, it is a more deep-rooted problem...hard to explain
<adsc>	anyway, is a fractal editor an editor for fractals like mandelbrot etc?
<stooge>	sup?
<ams>	morning !
<aawe>	adsc: the video shows an editor where you can load fractals and play around with the parameters, as well as a lot of inventive rendering parameters (texturing, changing base primitives, adding ground/sky), allowing for some time line editing with camera and property tweening. it's all rendered in real-time with sun lighting + shadows shading, using raymarching. it allows you to render hq images and
<aawe>	videos directly
<aawe>	e t c
<aawe>	and the narrator/author has an incredibly soothing voice
<adsc>	pretty nice
<adsc>	i am queuing the video for processing, seems to be worth it
<aawe>	adsc: is it a problem of principle? or hardware?
<aawe>	or do you live in a log cabin with a limited number of watt hours per day depending on weather
<adsc>	it is a resources problem, yes, but it has to do with processing power, not electricity...anyway, i don't want to talk about it
<rindolf>	hi all. sup?
<anj7>	hey rindolf o/
<anj7>	just had my lunch. and you?
<anj7>	pro'ly its time for power cut in my area
<rindolf>	anj7: it's my birthday today.
<adsc>	wow, congratulations, rindolf
<anj7>	oh, many many happy returns of the day rindolf
<aawe>	anj7: power cut? where do you live?
<anj7>	aawe: india
<rindolf>	anj7: thanks!
<rindolf>	adsc: thanks!
<adsc>	rindolf: so you finally became 16 years old? :p
<aawe>	anj7: rolling brownouts?
<pyon>	rindolf: happy birthday!
<anj7>	rindolf: are you 16 ??
<rounin>	hey there rindolf! happy birthday
<adsc>	haha, no
<darkcthulhu>	happy birthday rindolf :)
<rindolf>	pyon: thanks!
<rounin>	i'd say something about cinco de mayo, but i think i used that one during a previous year
<rindolf>	rounin: thanks!
<rindolf>	darkcthulhu: thanks!
<pyon>	anj7: rindolf is 16, but the time unit isn't "years". :-p
<scriptgeek>	happy bday rindolf
<rindolf>	adsc: no, i'm 38 years old now.
<anj7>	oh, lol
<rindolf>	scriptgeek: thanks!
<adsc>	i know that you're not 16, rindolf, there's a picture of you on your webpage :)
<scriptgeek>	i had a web page once, but i killed the spider and burned the paper
<anj7>	aawe: there's not much power generation over here, so to save power they cut power for 2hr a day.
<scriptgeek>	how are you supposed to learn computers with only 2 hours of power?
<rindolf>	scriptgeek: actually it's 22 hours of power per day.
<anj7>	scriptgeek: 2 hours of power *cut*
<adsc>	assuming he has a 24h day
<rounin>	seems like it's lunchtime already
<rounin>	bbl!
<anj7>	so if i quit suddenly its a power cut
<adsc>	okay, we won't alarm the police
<adsc>	scriptgeek: you shouldn't kill spiders, btw
<adsc>	scriptgeek: contrary to popular belief, they seldom crawl into your open orifices when you sleep
<scriptgeek>	anj7: what if you're on a laptop, do you get more power then?
<scriptgeek>	adsc: i need a new webpage
<rumpledelf>	get a laptop with several hours battery, you're set. assuming the internet stays up :|
<anj7>	scriptgeek: yea if i had laptop i would charge it before the power goes off.
<rumpledelf>	hey, same people here now as at breakfast
<scriptgeek>	yeah... i guess there's that.  do something that doesn't require the internet maybe.
<adsc>	power outages are usually when babies are made
<scriptgeek>	are they on the menu?
<scriptgeek>	that doesn't require the internet...
<rumpledelf>	oh its true. smaller towns track small baby booms back to such events
<rumpledelf>	also if there's a strike at the main employer, like a factory
<scriptgeek>	beat on the workers!
<scriptgeek>	get them making power!!!
<scriptgeek>	bicycle generators!!!!!!!
<mootor>	what is the purpose of a hash table having a bucket capacity greater than 1?
<ams>	collisons?
<mootor>	if we hit a collision it can go into a new bucket
<mootor>	it looks like it may be specific to linear hashing, i've never seen it before https://www.youtube.com/watch?v=yw1ts57ul7c
<ams>	go figure.
<ams>	academia .. nothing useful.
<ams>	normally you do something like that for collision reasons..
<scriptgeek>	never had to use a hash table, i just use dictionaries
<mootor>	ams: you do what for collision reasons?
<mootor>	scriptgeek: surely you have, maybe you didn't know it though
<mootor>	ams: having a bucket of size n doesn't provide much benefit as far as i can see. i would use that space to increase the number of slots for buckets
<ams>	mootor: have a bucket capcatiy greater than one ofcourse.
<mootor>	ams: but what benefit does that provide?
<ams>	different run time speed
<ams>	many buckets to search is slow.
<ams>	few bucket to search is fast..
<mootor>	but can't i just use that additional space to increase my hashspace?
<mootor>	instead of 100 buckets of size 2, 200 buckets of size 1
<mootor>	unless you expect collisions...
<ams>	increase your hash space?
<ams>	wtf does that mean?
<mootor>	ams: increase the number of buckets
<mootor>	so i have a hashspace of 200 instead of 100 at the cost of half the bucket size
<ams>	that is what happens at a bucket split
<ams>	if your bucket is full, you split, and get two buckets.
<mootor>	ohhhh right,
<mootor>	... but
<mootor>	you don't know they will map to different values
<ams>	no, why would you?
<mootor>	you wouldn't
<ams>	if you know your values, you can figure out the optimal hashing algorithm.
<mootor>	but aren't "splitting"
<mootor>	but you*
<mootor>	you are moving the values to a new bucket if it is appropriate
<ams>	if you do not, you trust math to do as little collisions as possible, possibly at the expense of somethings.
<aawe>	mootor: if you just "put in in the next bucket" on collissions, and the bucket in question is already occupied, and so are the next n buckets, you need to traverse the hash table until you hit an empty bucket to make sure the item you are searching for is not in it. if you have >1 buckets, you only need to look through the bucket
<mootor>	aawe: i know, that is my objection
<mootor>	it isn't just a "split"
<aawe>	mootor: which version is it that you object to?
<mootor>	it is an allocation of a new bucket and the moving of either or both of the items in your bucket
<scriptgeek>	can i have a bucket?
<mootor>	aawe: i am wondering what advantage having a bucket of size >1 is
<aawe>	mootor: i just told you
<twey>	pyon: i feel like the capabilities should be user-definable first-class entities.  they broke the 0, 1, n rule.
<ams>	mootor: and then you have effects on memory .. lots of buckets ==> scattered data
<twey>	pyon: yeah, that was precisely my reaction too.
<twey>	pyon: if there are sufficient non-obvious combinations that it's worthwhile to make a table of them, you've done something wrong
<ams>	if you have a bucket that is 4096 bytes, that is easier on the cpu than having 128 32-bit buckets.
<twey>	denommus: what, you can only bind one name in each let?  o.@
<aawe>	mootor: if you have variably sized buckets, you handle colissions smoothly. if you have buckets of size 1 and "put it in the next", your colission handling turns lookups into o(n) searches
<mootor>	aawe: didn't you tell me why having >1 buckets is good, not having buckets of size >1 is good?
<aawe>	mootor: i meant >1size buckets
<mootor>	aawe: i'm confused, are you even talking about hash tables at this point?
<mootor>	when do i ever put it in the next bucket
<scriptgeek>	much better now, thanks
<twey>	pyon: java's variadic functions are just syntactic sugar for passing an array.  as such it's nice to lighten the syntax load a bit (from foo(new bar[] { x, y, z }) to foo(x, y, z)), and of course in java every little helps.
<ams>	mootor: when your bucket is full, or your critera for fullness of a bucket is achived.
<mootor>	ams: yes, and a collision means i put it in a linked list
<amigojapan>	mootor: the linked lists are called buckets
<mootor>	amigojapan: yes
<mootor>	what i mean is i put it in the next bucket in the linked list
<scriptgeek>	linked lists are buckets? how can this be efficient?
<pyon>	twey: i get the impression that, in practice, advanced static type systems (especially those with subtyping!) have a tendency to develop periodic tables. and only the combination of type theory and taste in design [neither in isolation will do] can prevent this.
<mootor>	not h(val) + 1
<mootor>	which is what it sounds like he's implying when he says i will have o(n) search
<aawe>	mootor: there are hash tabls where you insert into first empty bucket after hash(key)
<aawe>	i thought you were arguing in favor of it
<mootor>	oh, well lets ignore those for now
<pyon>	twey: the benefit of not explicitly creating an array is just too small and too local.
<ams>	scriptgeek: if the list is small, it is quite efficient.
<mootor>	no, i am asking why i would have linked lists (within a hash table) where each node can store 2 values instead of one
<ams>	as everything with performance, it depends.  even bubble sort is efficient.
<aawe>	mootor: because there is no alternative if you dismiss the alternatives
<mootor>	?
<aawe>	what's the alternative of having buckets implemented as linked lists?
<pyon>	ams: indeed. for small lists, probably nothing beats insertion or selection sort, even though they're asymptotically non-optimal. :-p
<mootor>	my question isn't about alternatives to buckets implemented as linked lists, its buckets implemented as linked lists where each node can store 2 values instead of one
<ams>	pyon: indeed.
<aawe>	ah
<aawe>	mootor: i have never heard about such a thing
<mootor>	my apologies though, i thought the terminology was buckets were the nodes, not the entire linked list
<aawe>	ams: which video?
<mootor>	https://youtu.be/yw1ts57ul7c?t=190
<ams>	somehting mootor linked.,
<mootor>	linear hashing example where bucket capacity is 2
<twey>	denommus: ‘dsls in haskell are mostly just things that you can represent with monads’ — yes, but that's a much more powerful notion of ‘dsl’ than the lisp equivalent for the dsls that can be expressed that way, since you get to piggyback on the host type system.
<shvelo>	is microsoft really becoming good? it's so weird
<jeaye>	absolutely not.
<jeaye>	shvelo: ms is getting better footing, that's all.
<ilhami>	should city names be in their native language+
<jeaye>	ilhami: hm, los angeles...
<ams>	http://bar.com/
<ams>	hahahaha
<jeaye>	ilhami: city names often reflect who _was_ there, not who currently is.
<ilhami>	huh?
<pyon>	twey: well, lisp can give you syntactically nicer dsls. it's probably a more superficial thing than what haskell offers (making the host language fully aware of the dsl's logic), but it's a nice thing to have.
<ilhami>	i mean should it be københavn or copenhagen?
<ilhami>	that's what i am asking.
<ams>	it should be both.
<twey>	lf94: ‘corner cases’ — what corner cases are those?  there are a ton of things in haskell that could be done better, but i think they usually stem from (what used to be) open research problems.
<twey>	lf94: apart from a few things in the surface syntax, which are just plain weird and broken
<ams>	ilhami: kobenhavn should even work.
<ams>	ilhami: and kopenhamn .. köpenhamn ...
<pyon>	twey: quotation in haskell is simply much uglier than defining custom forms in lisp.
<pyon>	well, perhaps not *much* uglier, but still uglier.
<twey>	lf94: certainly ‘hacks’ abound in python :þ  basically the whole language is built on a collection of hacks.  objects are dictionaries indexed by strings, you need a magic keyword to refer to an upvar, implementation details are exposed to the programmer, you have no direct control over whether something is a value or reference, you get no free theorems, &c.
<twey>	pyon: that's because subtyping is evil.  ;)
<rindolf>	twey: when did lf94 last speak?
<lf94>	awhile ago.
<rindolf>	lf94: ah.
<lf94>	i'm surprised he even read that far back!
<hotcoder>	anybody awake?
<twey>	pyon: i didn't say variadic functions are excellent, or even necessary.  the benefit is small, but there's a benefit.  java also did it right, unlike c, in that variadic functions are sugar for arrays, so the conversion between (second-class) variadic arguments and (first-class) arrays is pretty trivial, and there are no extra edge-cases in the type system &c.
<pyon>	twey: the counterpart is that c variadic functions can do things that java varaidic methods can't do - not without runtime checks at least.
<twey>	pyon: sure, quotation is uglier.  but on the flipside you don't need it as much.  haskell (quite rightly, from a perfectionistic standpoint) takes the approach that if you need to do syntax generation then you've lost, because your syntax (/type system) is not powerful enough to express the concepts natively.
<twey>	pyon: can they?  like what?
<twey>	rindolf: just catching up ☺
<pyon>	twey: printf - not that printf is the pinnacle of api design.
<rindolf>	hotcoder: hi, what's new?
<twey>	pyon: you can certainly do printf in java, if you want.
<twey>	pyon: actually, i think java has one already
<hotcoder>	nothing's new
<hotcoder>	just saying hi :)
<hotcoder>	rindolf, whats new with you?
<pyon>	twey: you'd have to box all primitives, right?
<twey>	pyon: system.out.printf
<rindolf>	hotcoder: it's my birthday today.
<twey>	pyon: mm, yeah
<twey>	rindolf: happy birthday!
<rindolf>	twey: thanks!
<rindolf>	twey: when is yours?
<twey>	rindolf: early january
<rindolf>	twey: ah.
<lf94>	rindolf, happy birthday!
<ams>	hmm..
<hotcoder>	rindolf, happy birthday <3
<rindolf>	lf94: thanks!
<rindolf>	hotcoder: thanks! ♥!
<twey>	pyon: well, but in c you have to copy the value over, so it's probably a wash :þ
<pyon>	heh
<pyon>	twey: anyway, i agree that subtyping is overkill for most use cases. so that's a good argument that it should be avoided whenever there's a simpler alternative. but i'm not sure it's completely evil. perhaps we haven't mastered subtyping simply because we don't understand topoi well enough from a type-theoretic pov?
<hotcoder>	rindolf, system.out.println("happy birthday");
<lf94>	rindolf: what do you want for your birthday?!
<rindolf>	hotcoder: heh, java.
<hotcoder>	:d
<rindolf>	lf94: i want an interesting project to work on.
<hotcoder>	lol
<lf94>	rindolf, well that's easy.
<hotcoder>	rindolf, get laid :d
<lf94>	rindolf, do you have a soft spot for games in your heart?
<hotcoder>	jk
<twey>	pyon: i think it's more valid to say that most foundational type theories we have explicitly reject subtyping
<amigojapan>	rindolf: happy b-day!
<lf94>	rindolf, i mean consoles
<twey>	mm, i want to say ‘in favour of principal types’ but that's not true of course
<amigojapan>	rindolf: puts “happy b-day” :)
<lf94>	someone quick happy birthday in assembly
<aidanh>	 _                                   _          _                _
<aidanh>	| |__    __ _  _ __   _ __   _   _  | |__    __| |  __ _  _   _ | |
<aidanh>	| '_ \  / _` || '_ \ | '_ \ | | | | | '_ \  / _` | / _` || | | || |
<aidanh>	| | | || (_| || |_) || |_) || |_| | | |_) || (_| || (_| || |_| ||_|
<aidanh>	|_| |_| \__,_|| .__/ | .__/  \__, | |_.__/  \__,_| \__,_| \__, |(_)
<pyon>	twey: yeah, that'd be a lie. hm is simply an engineering compromise (admittedly, a much nicer one than the ones engineers themselves come up with) for practical programming.
<aidanh>	              |_|    |_|     |___/                        |___/
<pyon>	aidanh: ouch, sorry!
<twey>	pyon: or rather, they do subtyping *up to injection*.  so you have an open subtype relation in that any type b has a subtype a iff you can write an injective function a → b
<aidanh>	needed an excuse to use that for a while
<aawe>	what
<twey>	pyon: in the same sense as making equality a proposition within the theory, that gives us first-class control over what is and isn't a subtype and where the conversion occurs
<amigojapan>	lf94: happy bday in assembler http://pastebin.com/zkxb0c1v
<twey>	aidanh: figlet?  ☺
<aawe>	what's that language where you use almost exclusively special utf characters to encode the source
<aidanh>	twey: yep
<twey>	aawe: agda?  ;)
<ams>	apl
<lf94>	lol
<aawe>	apl!
<ams>	but it wasn't encoded in utf ... it was a special charachter set
<lf94>	twey are you saying subtypes are terrible
<aawe>	who is this subtype
<aawe>	i have never had much use of subtypes
<aidanh>	ams: apl characters are part of unicode now though
<twey>	lf94: as a corollary of my usual principle of giving the programmer as much control over stuff as possible, yes
<pyon>	lf94: most of the time, subtype add more complexity than is worth the hassle.
<mootor>	strange hypothetical, what is the bottleneck, hashing a value 1000 times (to come up with one final hash), or writing that hash value to disk? lets say i repeat this process until i have a gb of values
<ams>	aidanh: afaik, not all of them.
<pyon>	subtypes*
<rindolf>	aidanh: thanks!
<aidanh>	ams: ah.. that's odd
<twey>	if you bake it into the language then the subtype relation is a second-class citizen
<rindolf>	amigojapan: thanks! will ruby accept those unicode quotation marks?
<lf94>	ok. i will keep this in mind.
<ams>	aidanh: afaik...
<twey>	it saves you some explicit conversions here and there, but at the cost of a lot of power
<lf94>	mootor: disk
<amigojapan>	rindolf: sorry, my mac tends to make me type weird symbols
<mootor>	by a lot?
<ams>	aidanh: here is the code page, ftp://ftp.software.ibm.com/software/globalization/gcoc/attachments/cp00293.pdf
<rounin>	a literal code page
<pyon>	lf94: if you think type inference is a good thing, well, type inference is based on solving systems of equations with type variables. subtyping turns these equations into inequations.
<twey>	mootor: depends how fast your cpu is, how fast your disk is, and what hashing algorithm you use
<lf94>	[pyon: oh!
<lf94>	pyon: i didn'nknow that
<lf94>	sorry looking awa yfrom keyboard
<mootor>	twey: lets say its an average laptop and i'm using sha2
<pyon>	lf94: and (0) solving systems of inequations is harder, (1) understanding the solution of a system of inequations is much harder.
<pyon>	ok
<twey>	mootor: and how busy your cpu is, and how busy your hard drive is
<mootor>	free
<lf94>	pyon: wow how do you know this
<lf94>	pyon how do i get to that level of thinking
<lf94>	how did you get there
<lf94>	i forget what an inequation even is
<lf94>	but it sounds unbalanced
<lf94>	like saying
<aidanh>	ams: thanks
<lf94>	2 = 1 + 1 + 1
<lf94>	er
<pyon>	lf94: an equation is something of the form "f(x) = g(x)", where "x" is a free variable.
<lf94>	2 = 1 + 1 + 1a
<pyon>	lf94: an inequation is something of the form "f(x) <= g(x)", where "x" is a free variable, and "<=" is a partial order relation.
<twey>	lf94: an equation is a proposition of the form ‘a = b’, with = an equivalence relation.  an inequality is a proposition of the form ‘a ≤ b’, with ≤ some kind of ordering
<lf94>	and putting anything other than a = 0 gives you a system error
<lf94>	oh
<lf94>	ok
<lf94>	isn't there a different term for that too
<lf94>	wait high school math coming back to me
<lf94>	inequalities
<lf94>	< > => <= etc
<pyon>	lf94: basically, an (in)equation is an (in)equality involving free variables.
<lf94>	why are inqualities that much harder than equalities
<twey>	‘potentially involving free variables’
<pyon>	well, true.
<pyon>	lf94: because equations tend to offer more opportunities for simplification.
<rindolf>	amigojapan: ah, i see.
<pyon>	lf94: for example, if you know that "a" and "b" are equal types, and you find out what "a" is, then you already know what "b" is as well.
<lf94>	pyon: i guess i have to redo an inequality course to see that :)
<pyon>	lf94: but if you only know that "b" is a subtype of "a", then "b" could still be a lot of different things.
<adsc>	inequalities are so much more realistic, though
<twey>	lf94: if you have an equation a = f b, then you can solve it by unification.  say, in haskellspeak, either a b = either int char.  then you can straightforwardly match either = either, a = int, b = char and have a solution.  if you have an inequality either a b <: either int char, then there is more than one solution: a and b can be *any* types that can be substituted for int and char respectively.  all
<twey>	you can say is a <: int and b <: char; you can't immediately provide a solution (and indeed may never be able to; if it propagates to a point where you have to pick a concrete type, you might have to pick arbitrarily)
<pyon>	lf94: if the subtyping relation is structural, it kinda helps, because knowing what "a" is lets you infer things about what "b" could be.
<lf94>	hold on, need to read over twey's text like 5 times first
<adsc>	more like 50 times
<pyon>	lf94: but most object-oriented languages have nominal subtyping, where knowing what "a" is tells you practically nothing about "b".
<pyon>	twey: and you're using the fact that either is covariant on both arguments.
<twey>	yes.
<pyon>	twey: if you replace either with a type constructor whose variance you don't even know, you're basically screwed.
<twey>	lf94: (a <: b should be read as ‘a is a subtype of b’ or ‘a value of type a can always be substituted for a value of type b’
<twey>	)
<aidanh>	anybody have any thoughts about makefiles calling external scripts for production rules?
<twey>	pyon: i'm confused by your statement about nominal subtyping.  the usual oo formulation of nominal subtyping requires that you have structural subtyping, *and also* declare the subtype relation for the types in question.
<pyon>	twey: the only thing that achieves is forcing you to use something like branch-and-bound, if you want to solve the system of inequations.
<twey>	pyon: you know (mechanically) exactly the same things for nominal subtyping as you do for structural subtyping.  except that as you don't get subtyping by default, an explicit declaration of a subtype can be read as a claim to satisfy the lsp.
<pyon>	twey: yeah, but solving a system of type inequations involving nominal subtypes as if they were structural subtypes only... will not give you most precise solutions anymore.
<twey>	pyon: in that the solution may be something that is not a valid subtype?
<pyon>	twey: in that the solution may be a specific nominal subtype, but the only way to find that out is to actually enumerate the nominal subtypes.
<ams>	aidanh: no ..n
<shlomif>	hi all. i'm testing the mageia linux glibc update on my laptop.
<pyon>	twey: and, assuming the type inference implementor heroically finds precise solutions to inequations with nominal subtypes, the solutions will still be fragile: defining a new subtype elsewhere can change the solutions to previously solved inequations.
<twey>	pyon: can you give an example of a situation where that is the case?
<jkbbwr>	morning all
<jkbbwr>	hows it going
<eskatrem>	good good, jkbbwr
<adsc>	yeah, the neural transmitters are working at close to 100% efficiency today, because there is a good amount of humidity in the air
<jkbbwr>	i miss decorators in languages that don't have that syntax
<jonascj>	hi all. on behalf of my signficant other (biologist specializing in analyzing data and modelling data) i am trying to find out whether or not a database certification program og course exist which would suite her needs.
<pyon>	twey: say you have two interfaces, bar and baz. lots of types implement bar, and lots of types implement baz, but only foo implements both.
<jonascj>	she needs to do sql queries, have an understading of datatypes and maybe create a new database suiting her needs, maybe grant priviliges to other users.
<rindolf>	lf94: hi, you were asking if i have a passion for gaming consoles?
<adsc>	i don't think basic sql knowledge is enough for the large data and deep analysis that is usually required in research
<twey>	potentially not, indeed
<twey>	lf94: oh, apple finally gave an answer on the swift licensing?
<lf94>	twey: no, i gave an answer to use swift on any os
<jonascj>	twey: the problem with tutorials / self learning is that it is harder to put on a cv. if she just had one course (with a certificate or whatever) then she could state that, and nobody would doubt that it when she said she had experience with databases. maybe 90% of it would come from tutorials / self-teaching, but it wouldn't matter because she could point to that one course.
<adsc>	yeah
<adsc>	unfortunately, some companies do put some weight on certifications
<twey>	lf94: but you said « swift is also proprietary. closed source. secret. »  last i heard, apple had not decided what licence they were going to use.
<jonascj>	twey: maybe the best thing would be a university course. it might be more than she bargined for, but it would give her that one course she could name-drop, and then just go of learn what she wanted on her own.
<twey>	jonascj: yeah, absolutely.  sounds like certification is the way to go.
<twey>	jonascj: the company courses are better-recognized in the tech world than university courses, in my experience
<lf94>	twey: as of right now, it is proprietary
<jonascj>	adsc: none of the companies of interest to her would require a oracle database administration certificate ii, (or whatever), but they would value that her cv said something with databases (a course during university, a certificate, a previous work experience etc.)
<lf94>	twey: hasn't it?
<twey>	lf94: i see.  that's a shame.  :-\
<lf94>	isn't proprietary simply keeping it secret?
<twey>	yeah, i guess
<lf94>	twey: are you french?
<lf94>	<< >> to quote things ;)
<jonascj>	twey: if you apply for a job as database sys admin a oracle certificate would probably serve you better than any university course, yes :)
<twey>	i just read more deliberation into the claim than you meant, i suppose
<twey>	no, i'm not
<lf94>	the french use those to quote
<twey>	amongst other people ☺
<twey>	jonascj: that is, if you're going to put in the effort to take the course anyway, it might be better to do the better-recognized one
<twey>	jonascj: unless there are compelling (e.g. financial) reasons not to
<dearhawk>	hi, trying to understand rational sieve. what's the purpose of having prime numbers with even exponents?
<dearhawk>	twey^
<twey>	why me?
<adsc>	jonascj: you do realize they don't only have admin certifications, right?
<dearhawk>	twey: go and save the kruko town. take this shield and save the princess.
<jonascj>	adsc: who?
<dearhawk>	jonascj: how old is earth?
<adsc>	jonascj: any database software company
<adsc>	jonascj: they all have admin certitication and developer (sql) certifications
<ams>	mm..
<ams>	still doing research on 2d games :/
<lf94>	you're going to code a game?
<lf94>	i'm coding a game in z80 asm
<ams>	thinking of that yes ..
<ams>	clone rather ..
<lf94>	it is not easy
<ams>	but yeah ..
<lf94>	but it's fun as hell
<lf94>	what kind?
<jonascj>	dearhawk: 6000+ years :p
<lf94>	what is it a clone of?
<ams>	cannon fodder
<dearhawk>	jonascj: wrong, the bible says that it's 5k years old
<ams>	lf94: there was a youtube video of someone doing a game without using libs .. but if orgot what it was called
<dearhawk>	jonascj: lol, i've seen it on yt xd
<dearhawk>	i've got to get there sometime
<ams>	lf94: so being stuck on that is always fine :>
<lf94>	does anyone have a server with haskell on it that i could borrow?
<rounin>	well, we all know that the earth was created on 1 january, 1970.
<jonascj>	dearhawk: you should. i sat for a 1 hour lecture on how the ark was constructed, by a christian civil engineer
<lf94>	i can't spare another 200 mb on re-downloading cabal packages. it is killing my internet.
<jonascj>	adsc: that is the problem with those certificates. they aim to take someone from playing video games to being employeed at some major data intrastucture providing company (or so it seems), and that is not really what she need.
<nitrxgen_>	http://sub.blue/fractal-lab
<nitrxgen_>	:o
<ams>	so like .. sdl is the shit for graphical crap these days?
<myrl-chan>	seems so.
<nitrxgen_>	damn, (in my link) im still watching it
<rindolf>	ams: there are other libraries for that.
<ams>	well, i need libraries that work well with cl.
<ams>	:)
<pyon>	isn't sdl a little tad too low-level?
<ams>	possibly
<pyon>	i mean, "i want to do geometry, not plumbing".
<ams>	i either wanna do cannon fodder .. or simant..
<ams>	hehe
<ams>	:-)
<pyon>	at this point, i only really care about usability, not language.
<ams>	oh, i only care about freedom.. :-)
<ams>	or like sim bee or something .. that would be hilarious
<pyon>	ams: out of curiosity, what's common lisp's counterpart to sdl, sfml and similar libraries?
<ams>	i do not know what sfml is ..
<ams>	for sdl, cl-sdl
<ams>	or rather, lispbuilder-sdl .. which seems to be the current thing
<pyon>	hopefully, it's more than a mere wrapper around sdl, which is what most sdl bindings seem to be. :-|
<gune>	hey guys, in c++, im parsing a large file, i find the value i want via seekg(). the program fails on large files, i believe its because of variable type limitations, the last read it does is at position: "2145170970762". im not storing it as an int before putting it in seekg, i put it straight into myfile.seekg(). would i be correct in assuming im maxing out the variable size?
<ams>	i think it might be a bit of both..
<pyon>	because, frankly, sdl's api sucks.
<zacts>	i remember game maker
<zacts>	that was so fun way back when it was free
<ams>	ah well.. i don't care much about the api .. i can wrap it..
<rounin>	gune: is the file larger than 4gb?
<gune>	rounin: it is indeed, its 4.9gb. program works on a 3gb file, fails on the full 4.9gb one
<rounin>	gune: 4gb (old gb, anyway) worth of bytes is the maximum that can be addressed with a 32-bit int
<rounin>	gune: larger than that, and you need to go 64-bit for the position
<gune>	rounin: i see, but i read that seekg accepts long int i think, is that also the limit for long int?
<gune>	rounin: or should i but it in a long/long long int before passing it to seekg?
<gune>	put it*
<rounin>	gune: sounds like something that might be architecture dependent
<rounin>	i did a quick search, and it turned up some custom position type
<rounin>	but by all means, try long long
<rounin>	not to mention, it might be unsigned
<gune>	rounin: will do, my backup plan is to split the file before parsing, which should work, but id like to get this working if possible!
<rounin>	seems like the function actually expects some type defined in a header file though
<ams>	gune: the limit of long int is at least 32-bit, it might be larger, it might not.
<ams>	if you really need something that is 64 bit, use uint64_t
<ams>	not long long, or similar.
<gune>	ams: ah, will try that first!
<myrl-chan>	ams: ++
<pyon>	well, in c++, he should probably be using like std::ifstream::pos_type, or whatever the associate-type-du-jour is.
<pyon>	something* like
<darkcthulhu>	hmm.. what's a clean way to create a single comma-separated string from a set<string>?
<darkcthulhu>	(no trailing commas)
<ams>	pyon: ah. c++ crap .. meh.
<ams>	in c you should use size_t anyway .. or ssize_t .. for positions and such..
<pyon>	darkcthulhu: would it be acceptable to remove a trailing comma after the fact?
<darkcthulhu>	pyon, hmm.. actually that's a good idea. building it while iterating and then removing the final comma.
<pyon>	darkcthulhu: i'm constructing an example.
<darkcthulhu>	pyon, my other idea was to check if the current iterator's next() is end and then not add the comma.
<gune>	darkcthulhu: i did this yesterday, i loop the string, add "," if not at the last loop, then just add the "\n" outside of the loop
<darkcthulhu>	gune, handle the last element as a special case?
<ams>	handmadehero.org is what i was looking for!
<gune>	darkcthulhu: pretty much yea, you kinda have to, no? its the only element that differs from the rest on that line
<pyon>	darkcthulhu: http://ideone.com/kmnez2
<twey>	pyon: ‘sdl's api sucks’ — well, it is a c api.
<pyon>	twey: even for c api standards.
<darkcthulhu>	pyon, that looks surprisingly clean!
<twey>	ams: you could probably just write opengl
<twey>	oh, i guess you want windowing
<twey>	never mind, then.  sdl it is, probably
<pyon>	darkcthulhu: well, it's still kinda ugly to my eyes, but it's as pretty as i can make c++ be.
<ams>	i could just use x11 ;-)
<twey>	ams: you could, but it'll be slow as hell
<darkcthulhu>	pyon, going with this one. in my opinion, it is better than the explicit looping and exclusion of a special case. ty :)
<pyon>	:-p
<ams>	twey: not really
<pyon>	darkcthulhu: wait, my code is broken.
<xqo>	0xffd8 --> [0xff, 0xd8]. is the result big or little endian?
<pyon>	darkcthulhu: it fails if the set is empty.
<ams>	it isn't like we are talking about  some fancy game .. more like xbill ..
<twey>	ams: ah, okay.  continue then :þ
<twey>	ams: but what will you do when wayland takes over?!
<ams>	nothing.
<twey>	ams: (also, what's the deal with the space and two dots you put after most of your messages?)
<ams>	no dael ..
<ams>	:-)
<darkcthulhu>	pyon, i handle the set empty case differently anyway. i'm using this to insert directives !$omp parallel do private(x,y,z,...). if there is nothing to privatize, i stop with !$omp parallel do.
<pyon>	darkcthulhu: ah!
<hotcoder>	yooo
<hotcoder>	i just realized
<hotcoder>	our brain
<pyon>	darkcthulhu: http://ideone.com/pb9vmr -- fix'd
<hotcoder>	is dual-core :o
<pyon>	it would be nice if c++ had a concept of parallelizable iterator range.
<twey>	darkcthulhu: oh hello, fortran?
<jkbbwr>	i don't get how different things all use llvm yet have wildly different performance times
<darkcthulhu>	twey, yep, automatic parallelization of it.
<doomlord>	do you mean c++ or the c++ standard libraries
<darkcthulhu>	pyon, crap. std::string::pop_back is c++11. this framework is only known to work with c++03 iirc :(
<twey>	openmp is very convenient for the cases where it applies
<gune>	ams: just tried with uint64_t, i get the value fine but it still fails to pass it to seekg()
<pyon>	darkcthulhu: ouch. :-(
<gune>	ams: ill be going with the other solution then
<pyon>	darkcthulhu: well, you could resize the vector in some other way.
<ams>	well, what does seeksg's declaration look like?
<planckwalk>	xqo: that's big-endian
<pyon>	darkcthulhu: i think it's something like str.size(str.size() - 1);
<xqo>	thank touy
<xqo>	thank you
<planckwalk>	the high byte occurs first
<pyon>	darkcthulhu: which is even uglier. :-|
<pyon>	darkcthulhu: no, wait, i'm wrong.
<gune>	ams: -> http://www.cplusplus.com/reference/istream/istream/seekg/   this is the function
<pyon>	darkcthulhu: it's str.resize(str.size() - 1);
<darkcthulhu>	pyon, perfect :)
<pyon>	dunno if this is legal c++03: if (std::string::size_type old_size = str.size()) str.resize(old_size - 1);
<pyon>	it is! http://ideone.com/kc8n5n
<stryyker>	are you limited c++03? if you can use c++11 you have pop_back
<stryyker>	oh, i see
<stryyker>	if you're not using any std::string specific features you could use a vector and use pop_back
<darkcthulhu>	need it to be a string in the end, so it's a no go. the resize solution worked though :)
<darkcthulhu>	it looks a lot better than iterating through it and building the string; and my parallelization pass is nearly done.
<gedamo>	does c++ not have a fold?
<zacts>	what is a fold?
<gedamo>	also known as a reduce, it applies a function between each element
<gedamo>	https://stackoverflow.com/questions/3906796/how-to-fold-stl-container
<pyon>	gedamo: std::accumulate
<darkcthulhu>	gedamo, ooh.. std::accumulate looks useful.
<darkcthulhu>	pyon, could it lead to a cleaner solution here?
<pyon>	darkcthulhu: i think it's better to fill a stringstream first. at least, when the internal buffer is resized, it's done in a way that anticipates further insertions.
<gedamo>	foldl1 (\x y->x++", "++y) ["hello", "world"]
<darkcthulhu>	pyon, hmm.. it's not too many strings in this case; it's usually 3 or 4 variables that need to be privatized.
<pyon>	oh.
<pyon>	then i guess std::accumulate could work. especially so if you .reserve() enough space in advance.
<guest70090>	hi. my website with 10 simple html files is periodically reinjected with js:redirector.nt. any ideas ?
<rumpledelf>	it has more than just html?
<guest70090>	rumpledelf: few png, jpg images thats all
<adsc>	maybe don't use 123456 as ftp password?
<rumpledelf>	pa$$w0rd! is a good one
<guest70090>	adsc: i dont have that simple pass
<adsc>	well, which password do you have?
<rumpledelf>	hah
<guest70090>	-.-
<adsc>	:)
<ams>	i don't have a password.
<adsc>	good for you
<adsc>	i don't even have ftp
<pyon>	darkcthulhu: oh, before c++11, due to the lack of move construction and assignment, passing by reference was particularly important. so i'm guessing that std::accumulate won't help much.
<aidanh>	guest70090: check server logs
<ams>	adsc: i do .. and rexec, rsh, rlogin ..
<pyon>	darkcthulhu: no, wait, i think i found a workaround.
<adsc>	ams: sure, if you need it
<ams>	i do .. it allows me to talk to unix from my lisp machine :)
<o0elise0o>	it cant do ssh/mosh?
<jkbbwr>	anyone know of a good llvm tutorial?
<jkbbwr>	that goes into detail.
<ams>	o0elise0o: i have yet to port ssh, or ssl, or some such .. the libraries are written in more modern c than the compiler can handle, and i haven't been bothered to fix.. since .. ssh sucks.
<darkcthulhu>	pyon, http://ideone.com/hbwwas
<darkcthulhu>	pyon, why does this insert at the beginning?
<rindolf>	darkcthulhu: because it starts from "" as the initial element.
<rindolf>	darkcthulhu: you shouldn't be using "using namespace std;"
<pyon>	rindolf: are you sure about that?
<rindolf>	pyon: sure about what?
<pyon>	i mean, the "" as the initial element observation.
<o0elise0o>	i've heard you say a few times ssh sucks, ams. i'm interested to know why you hold that opinion.
<pyon>	"" isn't an element.
<rindolf>	pyon: there's a "string()" call there i think.
<darkcthulhu>	rindolf, ideone gave me the using declaration. i don't use it in general; just seemed convenient here. :)
<pyon>	"" is just the initial value for the accumulator.
<myrl-chan>	is `int x = ""` valid?
<myrl-chan>	oh wait.
<ams>	o0elise0o: it is a bad protocol, overly complicated, and gives a sense of false security.
<myrl-chan>	pils ignoar
<myrl-chan>	tnx
<ams>	o0elise0o: how many times have you accepted a server key without actually checking it?
<rindolf>	pyon: yes, that's what i meant.
<o0elise0o>	ams::every time i connect to my box off a new device
<o0elise0o>	i don't have any idea how to check the certificate
<ams>	o0elise0o: all of these protocols .. https, ssl, tls, ssh ... are on the wrong layer.
<darkcthulhu>	i'll need the equivalent of an "exclusive" scan/fold/whatever in that case; where it doesn't do this to the first element.
<ams>	o0elise0o: so you don't know what you are talking to .. so ssh doesn't really do anything for you... it is like accepting random keys ..
<adsc>	ams: i would be interested to hear of alternatives
<o0elise0o>	i don't really use it for it's security features anyways
<ams>	o0elise0o: encryption should be much lower .. it should be below ip, or at ip level.
<pyon>	rindolf: http://en.cppreference.com/w/cpp/algorithm/accumulate seems to suggest that the result should be "foo,bar,"
<pyon>	rindolf: the paragraph that begins with "the type type1 must be such..."
<o0elise0o>	i see what you mean about the layer thing, ams
<kahrl>	o0elise0o: well, you could keep a note with the fingerprint in your wallet or something
<ams>	nobody knows how to use ssh properly ...
<ams>	it is "oh, it is encrypt .. must be safe"
<jkbbwr>	i don't get how so many people can get such different effects from llvm.
<o0elise0o>	kahrl::if i connect and it works and i see copies of my current files and changing those files shows results on elise.openverse.com then i don't care
<darkcthulhu>	pyon, that example is cleverly crafted. it starts the accumulation at the second element and supplies the first element as the initial value.
<ams>	o0elise0o: so why not just use ftp?
<ams>	it is fasteras well...
<o0elise0o>	cuz you cant type stuff into ftp?
<ams>	you can't?
<kahrl>	o0elise0o: what if it doesn't work, because there's a mitm? you just gave them your password to your actual machine
<o0elise0o>	cuz how am i going to weechat in tmux over ftp?
<ams>	ftp> typing stuff ...
<ams>	?invalid command
<ams>	:-)
<ams>	o0elise0o: use telnet, or supdup, or rexec ..
<pyon>	darkcthulhu: oh, it says the return value is the "left fold".
<o0elise0o>	kahrl::so then they have a password to an extremely limited user account
<o0elise0o>	im so scared
<ams>	and with the advent of http2 .. sighs, the internet gets more layers and layers without anyone bothering to do shit right.
<o0elise0o>	my account can even query what the cpu is, a fact i had to work around for my source server to stop crash-restart looping
<o0elise0o>	cant*
<ams>	o0elise0o: so you see, this is why i am against ssh....
<ams>	i'm also against passwords ..
<ams>	:)
<pyon>	darkcthulhu: anyway, i give up, i'd just use the std::ostringstream solution.
<ams>	but for different reasons.
<pyon>	time can't be lost on these things.
<o0elise0o>	my vps supports certificate auth i guess
<kahrl>	ams: nobody forced you to use passwords with ssh, private keys exist
<kahrl>	forces*
<o0elise0o>	but i dont know how to generate a certificate and use it, i tried before and i couldnt get logged in
<planckwalk>	using passwords is even discouraged
<ams>	kahrl: and then ssh just became a little bit more pointless.
<exio4>	what? why?
<ams>	kahrl: nor does it solve the problems with nobody bothering to look at remote server keys.
<planckwalk>	users are always the weakest part of any security
<jkbbwr>	i use passwords for non critical stuff because im lazy.
<o0elise0o>	ams::the reason i ignore the remote key is cuz id have to manually compare it every time
<ams>	ideally, we should have kerberos or some such .. as a basic layer, and stuff built on top of that.
<o0elise0o>	i also have no known for a fact real starting point to compare from
<planckwalk>	ssh prompts once to check the remote key, and doesn't ask again if it didn't change (by default)
<ams>	then you can also get stuff like sso and what not for free ..
<o0elise0o>	planckwalk::yeah, i connect from random devices sort of a lot
<ams>	as for passwords .. i find them anti-social, when i started using computers, passwords didn't exist, and you could do stuff with your computer .. today .. things are so crippled that computers are almost impossible to use.
<o0elise0o>	to me the point of ssh/mosh+tmux on a vps is access to my data, programs, and computing power from any location
<kahrl>	ams: well, i like kerberos, but i also know that its centralized nature and the limited ticket lifetimes would be a big hindrance in many situations
<exio4>	your data sure is safe, isn't it
<ams>	kahrl: right, so something akin to kerberos.
<o0elise0o>	exio4::its not like i have private data
<ams>	ssh doesn't solve the problem ..
<o0elise0o>	its almost all located inside ~/public_html already
<darkcthulhu>	pyon, http://ideone.com/hbwwas is what i could do finally.
<ams>	basically, my problem with ssh is that it does not help making the interwebs safer.
<darkcthulhu>	pyon, doesn't seem particularly great though
<pyon>	darkcthulhu: heh.
<ams>	neither does https .. or ssl/tls ..
<pyon>	darkcthulhu: well, if it works...
<darkcthulhu>	pyon, is there something about this iterator that requires i do an advance? the next() method doesn't seem to be defined on it.
<planckwalk>	they all help.  they do not help enough.
<planckwalk>	they focus on the wrong things to some extent.
<planckwalk>	(but also some of the right things)
<pyon>	darkcthulhu: wouldn't ++it do?
<pyon>	darkcthulhu: c++ doesn't have a .next() method on iterators.
<darkcthulhu>	pyon, ah.. :-\ i kept thinking there was something like that.
<pyon>	darkcthulhu: ++it is the "advance this iterator" operator.
<pyon>	(well, it doesn't always means this, but by convention it's overloaded to mean this.)
<darkcthulhu>	pyon, hmm.. but in this case, it doesn't lead to shorter code though.
<pyon>	darkcthulhu: http://ideone.com/ldr6or
<pyon>	darkcthulhu: post-increment to the rescue!
<darkcthulhu>	haha.. i did the same thing just now.
<darkcthulhu>	preincrement though
<darkcthulhu>	would you say this one is as readable as the previous one?
<darkcthulhu>	it's not too bad..
<pyon>	darkcthulhu: preincrement where?
<pyon>	in the next line?
<darkcthulhu>	pyon, same place where you did the postincrement. i did "string first = *++it;"
<pyon>	i don't think that would be correct.
<pyon>	darkcthulhu: check the output.
<darkcthulhu>	oops
<pyon>	you should have baz,baz.
<darkcthulhu>	yeah
<darkcthulhu>	my mistake
<darkcthulhu>	of course it couldn't be correct then. what was i thinking!
<pyon>	it's a pity that c++ doesn't require arguments to be evaluated in a specific order.
<darkcthulhu>	pyon, yeah, then it couldn't been stuffed into the call to accumulate itself.
<pyon>	yeah.
<darkcthulhu>	pyon, isn't it around 7:30 am your time too? :-o no sleep at all?
<pyon>	darkcthulhu: that's right!
<pyon>	working while sleepy will be interesting today.
<darkcthulhu>	haha
<darkcthulhu>	pyon, me too :-| have a deadline later today. thinking of getting some sleep now, considering i'm getting simple things wrong.
<pyon>	heh
<wei2912>	pyon: interesting? hellish more like
<pyon>	wei2912: euphemism. :-p
<wei2912>	pyon: heh
<wei2912>	i've been doing that quite a few times during my exams...
<wei2912>	and i'm doomed to do it again, because i had a 4 hour nap
<pyon>	heh, exam period is always like that.
<darkcthulhu>	yeah.. but you do manage to get a surprising amount of work done. if only self-imposed deadlines were as productive!
<pyon>	lol
<darkcthulhu>	going to sleep for a couple of hours. gn!
<amigojapan>	rindolf: well, i did set the two arrays i dinamically created in my scritp i showed you yesterday, i set thesm to nil,   that is the only thing i thought could possibly cause a memory leak… eventhough i doubt it is
<rindolf>	amigojapan: ok.
<amigojapan>	wei2912: i wish the world revolved around my schedule :)   especially teh sun.. it should come out when i am awake :)
<wei2912>	amigojapan: :(
<jkbbwr>	to be honest. i prefer working at night.
<jkbbwr>	i feel less productive during "normal" office hours.
<wei2912>	^^
<amigojapan>	jkbbwr: i like ot work at day
<wei2912>	at night, my productivity increases and my quality of work decreases
<amigojapan>	i like to end my programming at a state where i wont get stuck on a problem all night long...
<denommus>	twey: it's possible to have statically typed macros, although not many lisps experiment with that
<wei2912>	what exactly is sicp on?
<twey>	denommus: yeah, because it's horrible
<twey>	denommus: you still have to drop down to a metalanguage, but now you have to manipulate terms' syntax in the metalanguage whilst thinking about the type the resulting term will have in the object language…
<twey>	wei2912: computation
<lf94>	you guys want to see my cat implementation?
<jeaye>	meow
<amigojapan>	lf94: show it
<pyon>	twey: "drop down to a metalanguage" --> how interesting. you view the metalanguage as living "below" the object language. i suspect most lispers would view the metalanguage as living "above" the object language.
<oleo>	or behind.....
<oleo>	you can use any analogy.....
<oleo>	theatre stage....
<lf94>	amigojapan, jeaye: https://github.com/lf94/cat/blob/master/cat.c
<doomlord>	meta-language or metal language
<amigojapan>	let me see lf94
<pyon>	oleo: it's more a matter of what programmers would like to be "closer to the surface" (i.e., "above").
<jeaye>	lf94: so much nesting...
<lf94>	>readme.md : the cleanest cat implementation i could come up with
<rindolf>	lf94: catstate *state = malloc(sizeof(catstate)); ==> this is better written as malloc(sizeof(*state));
<oleo>	pyon: "the behind the scenes" wording is from amop.....
<lf94>	rindolf how am i supposed to know that
<lf94>	that looks like a secret trick in the c book
<lf94>	i've never seen that ever
<lf94>	x)
<lf94>	you guys want to see my shell implementation?
<rindolf>	lf94: i've seen it a lot.
<rindolf>	lf94: or use the macros from here - https://github.com/shlomif/fc-solve/blob/master/fc-solve/source/alloc_wrap.h
<lf94>	after you're done ripping this apart, of course
<amigojapan>	nice lf94 ,  when you said cat, i was wondering what it was,  now i realize you mebnt the cat command…
<lf94>	yeah cat command x)
<lf94>	rindolf, it was a school assignment
<rindolf>	lf94: ah , so?
<lf94>	so copying macros is a no-no
<aawe>	anyone here running wii homebrew?
<pyon>	oleo: for people who like types, the metalanguage (usually a combination of natural deduction and the sequent calculus) is primarily a tool for defining the typing and computation rules of the object language. once the object language has been defined, there is very little reason to drop to the metalanguage. for lispers, the metalanguage itself (that is, lisp) is their primary tool, and object languages
<pyon>	themselves are throwaway objects.
<oleo>	pyon: i see no way that i would not agree with that....
<rindolf>	lf94: i see. :-(
<rindolf>	lf94: well, they are not very long.
<twey>	pyon: you've dropped ‘down’ conceptually from working on structured terms (functions, values, &c.) to working on strings or lists of symbols — you've broken an abstraction
<lf94>	apparently my shell had concurrency issues as well
<lf94>	but we hadn't even been taught concurrency while coding it
<pyon>	twey: yeah, that's something type folks are extremely reluctanct to do - if they ever do it at all.
<pyon>	after all, "types are a syntactic discipline for enforcing levels of abstraction".
<lf94>	i haven't needed to use nitty-gritty concurrency yet in my day job so i was really new to it
<twey>	that's the whole point of types, yes
<rindolf>	lf94: you can use ?: at lines 303.
<johnpoison>	does anybody use sublime's package control?
<camcam2>	johnpoison:i’ve used it everytime i needed to instal an add on
<johnpoison>	camcam2: oh looks like it's up now. the site was down
<johnpoison>	just wanted to know if it works
<myrl-chan>	archer's back! :d
<wei2912>	hi
<ams>	nooo!!!
<bmm>	hello folks
<gedamo>	hi bmm :)
<ams>	lets flame archer for being away ..
<bmm>	archer from the anime?
<jkbbwr>	archer: you are a dick for being away.
<ams>	yeah .. how dare you have a life .. and do stuff without our knowledge ..
<jkbbwr>	ams: you realise archer is a bot right?
<ams>	yes.
<bmm>	lol
<tommycannady>	hi
<bmm>	hi tommycannady
<tommycannady>	what is the best gl lib to use ? :)
<node_524>	python quickie: i'd like to run the solution i obtain from the code into paraview to see them in sequence i.e. animation. would that require me to save the solution to a file inside a loop for each time step?
<tommycannady>	damn america quit on me ;p
<anj7>	hey can anyone explain whats a foreign key in mysql?
<jkbbwr>	anj7: its not a resident key
<ams>	anj7: possibly aliens..
<anj7>	alright lets get into real stuff now
<myrl-chan>	anj7: if we're going into real stuff, why are we talking about sql?
<anj7>	myrl-chan: without sql there's no internet.
<wei2912>	myrl-chan: is one of those nosql hippies
<myrl-chan>	wei2912: hehehe. :3
<myrl-chan>	anj7: please, why would you use persistent data anyway?
<adsc>	tommycannady: there is an opengl channel on here
<wei2912>	myrl-chan: there's a level of tolerance that we'll accept, but if you go beyond that, expect to be votebanned
<myrl-chan>	wei2912: wat. :<
<wei2912>	the community will shun you for your insolence
<wei2912>	and remember you forever as the one who embraced mongodb
<myrl-chan>	lol
<ilhami>	nothing wrong with nosql.
<ilhami>	oh the boss arrived lol
<myrl-chan>	errr
<myrl-chan>	<.<
<ilhami>	unreal, sup boss?
<wei2912>	ilhami: and there's nothing wrong with sql
<unreal>	not much ilhami, savouring my internet access ;)
<wei2912>	but there is something very wrong with mongodb
<unreal>	you?
<wei2912>	just slightly above php
<wei2912>	hi unreal, haven't seen you in a while
<ilhami>	working on my bachelor project. :/
<unreal>	a truck driver crashed into my telegraph pole some time ago :p
<ilhami>	lol
<bmm>	lol
<jkbbwr>	ilhami: whats your topic?
<ilhami>	you lost internet access?
<inphase>	that sounds inconvenient.
<unreal>	no pole, no phone lines, no internet access :p
<ilhami>	jkbbwr, a crm system that i am developing.
<ilhami>	you still on dial up? :)
<inphase>	both that you would lose internet, and that you'd have to access the internet by telegraph.  that must take a while.
<jkbbwr>	ilhami: what makes it different/better/features compared to existing crms
<unreal>	ilhami: adsl
<ilhami>	jkbbwr, nothing.. but it's something i am making for my own company.
<jkbbwr>	ilhami: so what academic purpose will it have :p
<wei2912>	unreal: :p
<ilhami>	it's free. :d
<ilhami>	jkbbwr, my teacher said it was okay to make it so i just went with it.
<ilhami>	i didn't have any better ideas.
<jkbbwr>	ilhami: which uni?
<ilhami>	academy in denmark.
<ilhami>	kea
<maxels_>	hey all. i'm reading through code complete and trying to talk to people about concepts that i don't feel i understand. right now i'm thinking about heuristics, specifically "aim for strong cohesion." can anyone help me understand what exactly strong cohesion is in practice?
<adsc>	unreal: in a real country, all connections are underground
<unreal>	hmm apparently not as many as i expected - i took a few myself but they're still on the camera
<unreal>	there was a polish guy walking around with a dslr as well so there's probably a news article online somewhere
<johnpoison>	maxels_: in what context?
<ilhami>	is adsl the most used today?
<ilhami>	what about fiber? :d
<unreal>	haha wtf
<bmm>	why is there '@' before some nick names on irc?
<nizumzen>	bmm: that denotes channel operators
<johnpoison>	maxels_: usually strong cohesion means that components of program are tightly coupled with each other
<maxels_>	johnpoison, i honestly am not sure, i just read a short tidbit about aiming for strong cohesion, and that's exactly what i'm confused about. should i post the snippet?
<bmm>	ok, thanks
<johnpoison>	maxels_: sure, use some pastbin for sinppets
<unreal>	it would appear the people in the end house had a webcam in the corner of the window after it happened to record the entire thing
<maxels_>	johnpoison, yes, mcconnell says exactly that, but what is tight coupling? and isn't it at odds with the idea of abstraction which is another major heuristic?
<unreal>	the guy works for the council and he's a bit of a tosser... he'll probably try to claim compensation for having a few specs of dust land on his car
<johnpoison>	maxels_: i don't understand how's heuristic related with that
<unreal>	once all the council guys turned up he went inside and put on his brand new-looking orange overalls to put in some overtime
<maxels_>	here is the section talking about cohesion: http://pastebin.com/3czwjv2p
<horsik_>	maxels_: in oop it's basically equals to being able to transplant your modules from one application to another. ideally you should be able to copy any namespace, no matter how small it is and it just works without the rest of the system
<adsc>	maxels: it means you should pack unrelated code together into the same class
<unreal>	aha found one... but from a cleaner angle. http://i1.manchestereveningnews.co.uk/incoming/article9115996.ece/alternates/s615/js62041168.png
<adsc>	maxels_: i mean, shouldn't
<unreal>	drove straight over the telegraph pole and a street light
<maxels_>	adsc, haha, yeah i was curious about that. makes sense
<inphase>	i don't think the busses are supposed to park like that.
<maxels_>	so cohesion and abstraction go hand in hand
<johnpoison>	maxels_: also often this means that modules should avoid tight coupling (e.g. you use exact class as a type of argument in a method, instead of interface). this makes whole system unscalable
<johnpoison>	but in some rare cases tight coupling is the way to go
<unreal>	i was sat in the living room and heard a massive 'bang', looked out the window and saw the phone lines dangling over my drive and then i could see the back end of the trailer tipped over... ran out and there was diesel pouring out of the tanks along the road... checked on the driver and he was just getting out the sunroof
<jkbbwr>	so when building a compiler, what should you target? llvm? c? c++? anything else? :3
<adsc>	cohesion can actually only be rated if you understand the business requirements
<pyon>	jkbbwr: i'd like to say "llvm", but the documentation is crap.
<jkbbwr>	pyon: im trying to write "babies first compiler" because i have only ever experienced the interpreter side of things
<jkbbwr>	not sure where to start with what :(
<inphase>	jkbbwr: you're building a compiler to translate your language into another language which you will then use to compile natively?
<adsc>	maxels_: if you write a lot of code, most of those concepts will come naturally to you
<pyon>	jkbbwr: why not use your virtual machine as target?
<bmm>	this channel makes me realize i need to study and work harder
<jkbbwr>	pyon: what just bundle the entire vm + bytecode into an executable?
<bmm>	so many strange stuff i'm curious about
<pyon>	jkbbwr: not necessarily.
<jkbbwr>	pyon: not sure i understand
<pyon>	jkbbwr: why not do what java does?
<unreal>	ilhami: ^ :p
<adsc>	bmm: i know right, i heard some humans don't wear socks, how strange is that?
<bmm>	lol
<maxels_>	adsc, i've actually been working in software for several years now, i'm just trying to have conversations about these concepts since i work alone. sometimes i start to think i'm going crazy
<pyon>	jkbbwr: java gets a lot of things wrong, but the idea of using platform-specific virtual machines to run portable bytecode is brilliant.
<jkbbwr>	pyon: well i already have that
<johnpoison>	maxels_: try to contribute some opensource project =) that's a good experience
<ilhami>	unreal, why did you highlight me?
<jkbbwr>	pyon: i was looking into the other side, ala rust, crystal, nim, go and so on
<maxels_>	johnpoison, i'd love to, it's a matter of finding one i actually can contribute to
<jkbbwr>	compiled static binaries
<maxels_>	and also have an interest in
<adsc>	maxels: eh, don't worry too much about those concepts...it's certainly good if you know what they mean, but if you have written code that's used in production for years, you should be good already
<pyon>	jkbbwr: ah, then i'd say go full native.
<jkbbwr>	pyon: how so?
<pyon>	jkbbwr: what rust and go do already.
<pyon>	and nim as well, iiuc.
<wei2912>	what books would you recommend for someone who is planning to go into compsci theory and is not that interested in writing programs?
<jkbbwr>	i thought one generally emitted an intermediate, and compiled that
<jkbbwr>	(to be native)
<unreal>	ilhami: ^ usually means read up
<maxels_>	adsc, this all came about because i had some interviews where they were not impressed with my "technical" knowledge, and they asked me some of the stereotypical technical interview questions "what are the 4 main concepts of oop" and then going through each and having me explain what it means to them
<unreal>	ilhami: http://i1.manchestereveningnews.co.uk/incoming/article9115996.ece/alternates/s615/js62041168.png
<jkbbwr>	wei2912: type theory.
<inphase>	jkbbwr: if you want the easiest solution, i would recommend you translate it into c++ as an intermediary, because you will have the easiest time making a collection of c++ libraries to approximate your language's features.
<ilhami>	oh unreal nice. :-d
<inphase>	jkbbwr: i'm a fan of the notion of getting things working before switching to more complicated approaches.
<pyon>	jkbbwr: denotational semantics is perhaps even weirder and less immediately applicable. (not that it's unconnected to type theory, of course.)
<ilhami>	did anything happen to the truck driver?
<wei2912>	jkbbwr: thanks.
<jkbbwr>	unreal: do you live in the ass middle of nowhere?
<bmm>	wei2912 i am currently reading sicp, and i find it very educative
<unreal>	ilhami: nah he was fine, but apparently he was an agency driver on his second day
<inphase>	unreal: is he looking for a new line of work now?
<unreal>	basically those lorries tend to drive too fast and it was eventually going to happen... most of them skip the roundabout and just drive over it
<adsc>	maxels_: yeah, it's usually a good idead to prep before an interview
<unreal>	but the agency guy, being new, seemed to notice it at the last minute, and for some reason make a point of following it and making a sharp turn... poof... lorry tips over and skids  straight into the telegraph pole and street lamp
<unreal>	if it weren't for those two it would have gone in a woman's garden... it stopped about 3inches from the fence post
<unreal>	lol
<unreal>	straight through her nice little summer house in fact
<numb3rz>	hello all
<adsc>	maxels_: oo concepts such as solid and grasp, inheritance and polymorphism were asked in all interviews i've ever been in
<gedamo>	hi numb3rz :)
<rindolf>	numb3rz: hi, sup?
<inphase>	maxels_: and if you can't answer a question like "what are the 4 main concepts of oop", don't take it personally.  that just means you were sitting across from a terrible interviewer.  i've been using oop for decades, and i have no idea which aspects of oop anybody would want to pick as the 4 most important.  that is quite arbitrary.
<rindolf>	unreal: hi, how are you?
<adsc>	maxels_: along with having to draw a class diagram uml and do some user requirements engineering
<unreal>	good but also bad. both my ears are fubar atm.
<ams>	inphase: there is only one concept in oo.  generic functions.
<jkbbwr>	pyon: but back to the original conversation
<maxels_>	adsc, yep, i've gone through all of those as well
<jkbbwr>	pyon: what steps does someone take to be "native"
<adsc>	maxels_: and in some of the jobs there was even a pair programming session
<twey>	pyon: ‘usually a combination of natural deduction and the sequent calculus’ — i think we usually contrast these
<maxels_>	inphase, i totally agree with what you say, but i'm curious what is a "good" interview process?
<adsc>	maxels_: i mean job interviews
<numb3rz>	rindolf:nothin much still reading up on python. gedamo wats goin on?
<maxels_>	adsc, yep, i had one of those two. programmed on a web interface for two different problems they gave me
<pyon>	twey: yes, but we use both
<maxels_>	too*
<rindolf>	numb3rz: nice! it's my birthday today.
<twey>	pyon: but not in combination
<rindolf>	numb3rz: i worked a little on some py code today.
<bmm>	hbd rindolf
<inphase>	maxels_: a good interview process asks people to explain what they have accomplished, asks people why they made design decisions they did, and attempts to assess a person's personality and ability to work on teams.
<rindolf>	bmm: thanks.
<twey>	pyon: (few people use natural deduction–style formulations these days anyway)
<ams>	rindolf: my condolences.
<rindolf>	ams: why?
<twey>	well, i probably shouldn't say such things
<bmm>	yeah, inphase i agree with you
<ams>	rindolf: one year closer to death, one year wasted, all that ..
<pyon>	twey: all formulations of typing rules i've seen are presented using natural deduction. not that this is ideal.
<rindolf>	ams: well, this year wasn't completely wasted.
<maxels_>	adsc, i've actually found my biggest problem is exactly why i'm on here. i don't have conversations with other professionals about how they solve problems
<inphase>	maxels_: no one ever sits down at a software engineering job and begins the morning tasks by using the n principles of anything.
<rindolf>	ams: i thought the condolences were for me having written python code today.
<ams>	rindolf: how old are you?
<adsc>	maxels_: yeah, you can learn a lot from teamwork
<rindolf>	ams: i'm 38 years old.
<ams>	rindolf: well, that too....
<pyon>	twey: errr, typing judgments themselves are presented using natural deduction, but the rules for deriving them are presented using natural deduction.
<twey>	pyon: are you sure?  almost all the formulations i see are given in sequent calculus.
<pyon>	twey: that's for individual judgments.
<maxels_>	so i need to find an open source project like johnpoison said
<adsc>	maxels_: that would indeed be a good idea
<inphase>	maxels_: yes, that will help you get past a good interview.
<pyon>	twey: are you ever seen an entire typing derivation presented solely as a sequent?
<numb3rz>	rindolf:hbd hope you enjoy the day!!!!! i'll have some strippers come thru for ya lol im afraid to ask how ancient are you
<ams>	maxels_: i know a bunch of free software projects that need help
<pyon>	twey: well, perhaps you have... but i haven't.
<inphase>	maxels_: and, really, you would much rather work at places with good interviews.  you will have better coworkers.
<adsc>	numb3rz: are they kosher strippers?
<rindolf>	numb3rz: i'm 38 years old.
<pyon>	jkbbwr: "what do" --> dunno, target c perhaps?
<rindolf>	numb3rz: and thanks.
<numb3rz>	rindolf: lol py code?? kinda sounds like hair pi on revenge of the nerds
<johnpoison>	maxels_: also i think http://codereview.stackexchange.com/ is a good place to get more experience =)
<maxels_>	ams, i'm happy to take a look if you want to send me some of their git pages
<rindolf>	numb3rz: py is short for python.
<jkbbwr>	pyon: so i would litterally emit c text for my code? id love to see an example of that
<aawe>	pi is short for 3.141592....
<twey>	pyon: hm, not a single sequent, no.  but they are usually presented as inference rules on sequents, rather than in the asymmetric natural-deduction style.
<johnpoison>	maxels_: there you can share some of your code and get a good review
<ams>	maxels_: http://www.fsf.org/campaigns/priority-projects/
<pyon>	twey: ah.
<pyon>	well, i stand corrected, then.
<aawe>	ams: why is gnash still a priority project? everything is moving away from it
<numb3rz>	rindolf: wow you are ancient!!!!!
<numb3rz>	adsc: sone are missing a limb or 2 but they are very sexy
<twey>	pyon: my understanding is ‘natural deduction’ presentations are given with symmetrical introduction/elimination rules, whereas ‘sequent calculus’ presentations are given with symmetric left/right rules
<rindolf>	numb3rz: heh, heh.
<ams>	aawe: please email any suggestions you have about the list to hpp-feedback@gnu.org so that they can be incorporated by the review committee.
<twey>	i've seen a few of the former, but mostly the latter
<numb3rz>	i'm 36 myself but 38 is jus tooooo ancient lmao
<nosmelc>	if you have a version number like 1.00.00.00, what does each group mean?  major version, minor change, bug fix, and?
<ams>	nosmelc: depends.
<numb3rz>	rindolf:^^^
<adsc>	numb3rz: both ages are still greenest youth imo
<pyon>	twey: "symmetrical introduction/elimination rules" --> isn't this what "constructors vs. pattern-matching" and "lambda abstraction vs. application" effectively are?
<bmm>	numb3rz: both you are rindolf are ancient
<ams>	yeah ...
<numb3rz>	adsc: greenest young lol???
<twey>	pyon: yes, i think so
<inphase>	nosmelc:  version number conventions:  marketingmilestone.featureprogress.bugfixes.distributionpatches
<twey>	hm, i might be suffering from selection bias
<adsc>	numb3rz: at your ages you have spawned max 1 generation, if at all
<adsc>	that is nothing
<nosmelc>	inphase: what are distributionpaches?  thanks
<inphase>	nosmelc: patches applied by a distribution.
<numb3rz>	bmm: i'm old not ancient lol ancient is 38 and up lol
<adsc>	come back when the spawn of your seed has colonized a few planets
<bmm>	haha, ok. i'm turning 26 soon
<ams>	inphase: kinda disinegnious to say that it means that without any context on the version number.  you could just as well made up something based on unicorn farts.
<impaloo>	damn, is this a channel for the elderly?
<adsc>	the channel is for people of all ages
<numb3rz>	adsc: lmao really?? i know ppl. my age that are grandparents and greatgrands
<bmm>	lol
<inphase>	ams: there are no rules.  but they tend to go about like that on open source projects.
<twey>	it's okay, myrl-chan is like twelve, so it all balances out
<ams>	inphase: no they don't.
<johnpoison>	lol
<adsc>	numb3rz: are you of the same species as hares?
<numb3rz>	so now that you all know were old help keep an old man on his toes with all the latest and greatest
<archilius>	hey everyone good evening.
<unreal>	inphase: <justseenit>i'd hope so. not sure what the elf 'n' safety of it is but he should have his license taken away. he seemed to disappear quite fast after it all yet the guy in the passenger seat stayed on to help clean everything up - with a lot of grumpy looks off people who thought he was the driver</justseenit>
<ams>	having four level deep version number is immensly incommon.  if anything, various distributions tack on an extra number with a hyphen.
<numb3rz>	adcs: yes lol
<numb3rz>	hey archilius:
<ams>	most projects use two level deep numbers, major.minor, where major changes when you break shit.
<ams>	this is the most common scheme
<unreal>	inphase: the lorry was carrying about 40 tonnes of relatively compressed waste cardboard/paper... it took 3 trailer fulls to then take it away
<inphase>	unreal: lol.  it all expanded?
<unreal>	inphase: you know the straps you get around a cardboard box?
<aidanh>	hello everyone
<unreal>	well they were compressed and had those wrapped around them to keep them in shape
<godsgift>	rindolf: i'm currently in the process of switching hard drives so i can separate all my work stuff from coding and pentesting sftware
<unreal>	and the idiots from the council were trying to lift them by those using the forklift attachment on a digger
<unreal>	so they just popped free and all the cardboard becomes loose :p
<rindolf>	godsgift: i see - why does it require a new hard disk?
<aidanh>	unreal: ...beautiful
<anj7>	rindolf: how was your day man, enjoyed?
<inphase>	unreal: i hope someone videotaped this whole catastrophe for youtube.  this sounds like it should be featured as a fail video.
<inphase>	ams: well, to attempt an impartial sampling i just processed all the version numbers installed on the ubuntu system i'm sitting at.  separating them by period, 663 have 2 numbers, 2106 have 3 numbers, and 636 have 4 numbers
<unreal>	inphase: i was hoping they'd have a camera inside the truck... most do for insurance purposes... apart from that nobody was about to film it... just the aftermath
<rindolf>	anj7: my day was fine.
<rindolf>	anj7: i went on a walk.
<anj7>	rindolf: no party? d:
<unreal>	i spent most of the night speaking to a friendly copper who didn't have a lot to do other than watch
<rindolf>	anj7: no, i'm afraid not.
<unreal>	lol
<anj7>	rindolf: oh, ok.
<inphase>	ams: if i separate by . or -, then the most common is a 4 number set.  654 for 3, 2024 for 4, 655 for 5.
<unreal>	inphase: https://www.youtube.com/watch?v=tgfhnvjucmm
<pyon>	twey: on a completely unrelated note: (0) do you install local copies of the documentation for hackage packages? (1) if so, have you experienced any issues with cabal-install's generated documentation index?
<inphase>	unreal: good grief that looks like a lot of work to clean it up.
<twey>	pyon: (0) nope (1) n/a
<k-202>	hi. do you know any graphical window designer for c / c++ for linux (like monodevelop but without .net)?
<pyon>	mmm...
<rindolf>	k-202: see http://www.shlomifish.org/open-source/resources/editors-and-ides/
<pyon>	k-202: depends on your gui toolkit of choice.
<twey>	k-202: depends on the library you want to use
<twey>	k-202: usually, glade or qt developer
<inphase>	k-202: qt creator is a good choice.
<twey>	er, designer**
<unreal>	inphase: towards the end a bt truck turned up to help pick up the telegraph pole while a council guy sawed it in half... after the pole was taken out the same guy had to use an angle grinder to cut off the bottom of the street lamp... and he fell into the hole the pole was in
<inphase>	lol
<unreal>	not sure how i managed it but i carried half of the pole into my back garden
<ams>	inphase: bullshit.
<pulock2015>	hello all
<ams>	inphase: the most common is two or three.
<unreal>	biggest bird table support in history.
<k-202>	i will try glade
<inphase>	ams: i'm not really going to argue about math.  i just ran the analysis and created the histogram.
<ams>	inphase: and you're drunk.
<inphase>	not yet, but the day is young.
<nexia>	http://arstechnica.com/information-technology/2015/05/04/prime-minister-of-singapore-shares-his-c-code-for-sudoku-solver/
<pulock2015>	nexia: have a life bro...
<bmm>	prime minister?
<bmm>	wow
<rindolf>	pulock2015: hi, sup?
<nexia>	pulock2015: excuse me?
<myrl-chan>	twey: sshhhh, don't tell them how old i am.
<twey>	nexia: it's always cute when politicians try to do technology
<nexia>	twey: what are you implying :p
<nexia>	most uk-usa politicos are sorta awkward with technology imo
<nexia>	https://www.yahoo.com/tech/senator-lindsey-graham-admits-hes-never-sent-an-113169036219.html etc.
<twey>	nexia: meanwhile in the uk: https://www.youtube.com/watch?v=-7x7gyitzs4
<nexia>	lawl
<pulock2015>	hello all
<pyon>	nexia: if you think american and british politicians are awkward with technology... i don't even want to imagine what you'd think of politicians in my country.
<twey>	‘they are presented with a series of baffling computer commands’… ‘this gobbledegook will help them to build websites and simple apps’
<pyon>	nexia: they are awkward not just with technology, but with the whole of reality.
<archilius>	hello pulock2015
<pyon>	pulock2015: hello.
<nexia>	pyon: what country might that be?
<pulock2015>	hello archilius and pyon
<twey>	pyon: i don't think that is unique to your country.
<pyon>	nexia: peru.
<nexia>	ah.
<aidanh>	twey: that must be about the driest reporting i've ever watched
<nexia>	yeah, what twey said
<aidanh>	oh no... i got to the semicolon part...
<nexia>	pyon: some of our us senators don't even acknowledge climate change pfft.
<twey>	‘put a semicolon at the end of the line so that the browser knows you have ended the line’
<pyon>	lol
<twey>	aidanh: skip to 3:35 or so if you're bored for an interview with the person in charge of the entire campaign.
<twey>	er, 5:35
<aidanh>	twey: ..will i regret doing so? :p
<twey>	aidanh: probably
<aidanh>	"you can do very little in a very short space of time" <<< alarm bells are already going off
<sten_shi>	which is beter way for learn design and analysis algorithms, in real programming language or in pseudo-code?
<twey>	sten_shi: irrelevant
<sten_shi>	thanks
<aidanh>	sten_shi: it doesn't really matter, but a cleaner language is probably best
<jkbbwr>	im 100% against teaching kids to code
<tommycannady>	why ?
<tommycannady>	jkbbwr ?
<aawe>	chomksy is scarily sharp
<jkbbwr>	because it will flood the industry with substandard programmers that do not understand anything to a decent level, will put strain on already taxed teaching resources, will be damaging to the entire industry in other ways too
<pyon>	aawe: really?
<tommycannady>	kidbeta wants to hear that ;d
<twey>	jkbbwr: i think it'll produce mediocre programmers on average
<kidbeta>	hear whut
<aidanh>	jkbbwr: well, every student presumably has to study their own country's history, but only a fraction of them become historians
<twey>	:þ
<jkbbwr>	twey: i think it will produce "fad" driven programmers
<jkbbwr>	i have no objection to teaching kids that *ask* for it. i have objection to making every kid learn.
<wei2912>	jkbbwr++
<aidanh>	speaking of fads, anyone have any opinion on docker? it seems to be the new fad, but i don't think i should start hating it automatically..
<jkbbwr>	aidanh: its cool if you totally invest.
<twey>	well, i'm against mandatory education to start with, but given that i feel like teaching programming at an early age will give them a headstart if they decide to get into it later on, and can potentially give them an edge with other subjects
<wei2912>	that's if we're only making students learn how to *code*
<jkbbwr>	wei2912: thats all it will be
<jkbbwr>	wei2912: it will be badly delivered copy paste javascript lessons that will teach the kids nothing but make them thing they know enough
<ams>	learning to program should be mandatory, like like learning to reading, and understand basic democratic concepts.
<wei2912>	personally, i think that teaching compsci would be a good idea, but the system will just reduce it to learning how to code
<wei2912>	jkbbwr++
<jkbbwr>	ams--
<aidanh>	jkbbwr: i saw a lot of stuff about it being cross-platform; how on earth would you get, say, an ubuntu image to be cross-platform?
<jkbbwr>	totally disagree aidanh
<pyon>	jkbbwr: well, programming lessons don't have to be javascript/css lessons.
<nosmelc>	i think teaching basic computer science would be good, but not coding for everybody
<twey>	pyon: they're python lessons, in practice
<wei2912>	pyon: they probably will
<twey>	wei2912: ^
<pyon>	twey: well, that's sad.
<jkbbwr>	pyon: but thats what many teaching lessons are targeting, its already been heavily pushed in code.org in america and in trial lessons in the uk
<ams>	nosmelc: do you think the same about reading? and writing?
<twey>	pyon: but not as sad as css lessons.
<wei2912>	twey: oh god
<aidanh>	jkbbwr: s/aidanh/ams/ ?
<nosmelc>	ams: you need reading and writing for everything
<ams>	as computers become more ubiquitous in every day life it is more and more important to know how to program them, and how they work.
<jkbbwr>	ams: disagree again.
<ams>	so you wish the world to be illiterate?
<twey>	hopefully soon the boundary between programming and using a computer will disappear
<pyon>	i'm not sure i'd go full-dijkstra, but the idea of designing a program to meet a specification is very important.
<jkbbwr>	ams: there is a difference beteween illiterate, and not able to program.
<wei2912>	i think it's more important that people learn roughly how a computer works, not how they program
<ams>	jkbbwr: i consider the two equal.
<twey>	pyon: i think that is unimportant to people who aren't going to become programmers
<pyon>	twey: oh, sure.
<aidanh>	i think that separate from computer science, students should learn how to use computers more effectively
<jkbbwr>	ams: not everyone is going to be a programmer, not everyone will be smart enough, or even care to understand it
<wei2912>	nope, one is learning how to read books, the other is how to write *good* books
<ams>	you don';t have to become a author just cause you know how to write.
<pyon>	twey: but then why bother teaching them to program at all?
<pyon>	programming isn't for everyone.
<wei2912>	jkbbwr: same can be said for any subject
<ams>	jkbbwr: the same applies equally for writing.
<jkbbwr>	ams: what use is a snippet of code knowledge
<jkbbwr>	ams: is it going to help a builder lay a foundation of bricks?
<ams>	jkbbwr: what use is a snippet of written knowledge?
<twey>	pyon: because it enables you to use a computer more effectively (or, some might say, to use a computer at all — if you can't program it then you have a facebook terminal, not a computer)
<pyon>	twey: anyone who says everyone should be taught to program probably has an interest - they most likely want lots of cheap replaceable coders.
<jkbbwr>	ams: because unlike code, you can use writing in many different domains without any specific requirements
<wei2912>	heh
<ams>	jkbbwr: likewise for programming.
<wei2912>	if only programmers were left to stand on their own, as authors are
<jkbbwr>	unless you don't have a computer
<nosmelc>	pyon: that plus h-1b visa workers ;)
<wei2912>	and judged based on the content of their writings
<ams>	jkbbwr: we aren't talking about being able to write a compiler, or a parser, or something other that we might consider trivial.  but putting down a recpie for the computer to achive.
<jkbbwr>	ams: where do you draw the line at trivial and non trivial
<merijn>	pyon: i think everyone should be *taught* programming, but i don't have any believes that most will be good programmers
<ams>	jkbbwr: we aren't talking about knowing the difference between quicksort and bubblesort
<wei2912>	then, we can start talking about teaching people programming
<jkbbwr>	ams: then what *are* we talking about
<aidanh>	eh, i think learning how to use things like coreutils and basic bash and piping things together would be a more useful component of a general curriculum
<ams>	jkbbwr: same place where we draw the line between english lit. and just being able to write.
<pyon>	merijn: dunno, what's the point to doing something that can't be done well?
<merijn>	pyon: of course i also have an agenda which involves getting everyone to be more knowledgable
<twey>	aidanh: +1
<wei2912>	literature isn't learning how to write good books
<twey>	aidanh: but that is programming, of course.
<merijn>	pyon: because i think computer science is one of the biggest breakthroughs in history and i would like more people to appreciate exactly how magical it is
<wei2912>	it's about the appreciation of an art
<ams>	wei2912: most english lit profs would disagree.
<jkbbwr>	ams: i don't see the content will ever be delivered efficiently enough for it to be useful. there will just be many people "thinking" they know how its done with 4-6 months basic experience producing terrible code to prop up major systems. this is damaging for our industry.
<wei2912>	ams: o_o
<merijn>	pyon: i would prefer to reduces the amount of calculus in hs and add more logic, programming like things
<merijn>	pyon: i hope it will fix more people's thinking :p
<pyon>	merijn: magical? it's applied logic. the reason why i love programming is precisely because it's devoid of magic: it's just logic.
<ams>	jkbbwr: oh bullshit, it is not damaging for "our" industry, no more than people picking up a pen and writing a book is bad for the author industry.
<jacob___>	any r programmers here?
<ams>	jkbbwr: you are acting like the priests when gutenburg came with the printing press.
<wei2912>	actually, it will be
<jkbbwr>	ams: some people would argue that 50 shades of grey damaged the written industry.
<rindolf>	jacob___: ask your question.
<ams>	oh no! people will put their dirty hands on the word of god!!
<merijn>	pyon: and logic isn't magic?
<ams>	we must destroy this henious deveil spawn ..
<aidanh>	twey: yes it is, but it's practical with immediate value; there's no need for teenagers to be learning about functors and monoids or how to design algorithms, which are also part of programming (kind of)
<jkbbwr>	ams: i have no problem allowing anyone to learn our industry.
<wei2912>	we're not producing mass low-quality works of writings, are we?
<merijn>	pyon: challenge: prove/confidence me of induction without using induction
<jacob___>	i have problem with r function qtukey
<merijn>	s/confidence/convince
<jkbbwr>	i have problems with *forcing* it on everyone
<ams>	jkbbwr: learning to do basic programming is not learning an industry.
<jkbbwr>	some people are just plain old too stupid to get it. no point wasting time and money trying to teach them something they will never understand or use.
<jacob___>	what are the parameters for studentized range  q(5,9)? for 0.05 significance level?
<pyon>	merijn: i don't see the point to convincing anyone of anything. it's just a game with symbols.
<wei2912>	pyon: many math profs will disagree
<twey>	aidanh: yeah.  but they're not: they're learning about python, which is not far off shell.
<jacob___>	qtukey(0.05,nmeans=3, df=9, nranges=5)
<ams>	jkbbwr: such an argument is silly, some people are plain stupid to learn basic written english.
<merijn>	pyon: see, i disagree :)
<jkbbwr>	ams: but a person can survive without code, they cannot survive without english
<wei2912>	pyon: a crucial part of math is proofs itself, and they *have* to be convincing and right
<merijn>	pyon: the fact that any math works as much as it does is downright amazing
<ams>	jkbbwr: yet, they are taught writing, basic mathematics, basic physics, and other things that we surround ourself with ..
<jkbbwr>	you do not need to know how to code, to work as a checkout person.
<pyon>	wei2912: it's right if the symbols say it's right.
<ams>	jkbbwr: they cannot survive without code, code is all around us.
<jkbbwr>	ams: you can be an end user without writing it yourslef
<wei2912>	well, 6 > -20
<ams>	jkbbwr: same for wrtiting, or physics, or chemistry
<jkbbwr>	ams: decent education systems will allow students to drop these subjects after a very very base levle.
<pyon>	merijn: to me, the amazing thing is how anyone could think *other* approaches besides math would work.
<wei2912>	i certainly need to show why it's true or false, right?
<pyon>	merijn: that's what truly baffles me.
<ams>	jkbbwr: or having to lkearn all the rivers in your country ...
<merijn>	pyon: my point is that it's magical how math is the only thing that appears to work
<aewffwea>	pyon: i hope you aren't talkinga bout programming
<aidanh>	twey: hm; well, i'm no great fan of python, but i do think that it could be of similar value. i think knowing how to use pipes could be very beneficial though, just because understanding the principle of composition is very useful
<pyon>	merijn: i've lived my entire life seeing it as the most natural thing in the world.
<twey>	aidanh: yeah.
<twey>	merijn: well, science works pretty well too.
<pyon>	merijn: so, although i'm truly thankful for it, i can't find it "amazing".
<wei2912>	^^
<wei2912>	time to bash up liberal arts
<xeno_>	morning
<xeno_>	or vening
<ams>	jkbbwr: as computers become more ingrained, it is even more important to understand how, and why they work.  just like the printing press made it mandatory to learn reading, because more information was disminated.  just like physics are important to know, you don't need to know the magics of quantum mechanics, or how electrocs behave .. but the basics are important for a fully working "democratic" society
<xeno_>	or evening
<xeno_>	or whatever it is when it's gray and we're invaded by small diving water bulbs...
<wei2912>	ams: the question is, will teaching students how to program let them understand how and why computers work?
<aidanh>	{even,morn}ing, xeno_
<wei2912>	i'd think that's a far jump
<ams>	wei2912: i think so.
<twey>	wei2912: i don't think that's important
<wei2912>	twey: if it isn't, then what's the point of teaching programming?
<xeno_>	wei2912: how many actually understand how computers work?
<wei2912>	^^
<ams>	i could see a class for 15 year olds, where you actuall build a basic computer in group .. and program it.
<jkbbwr>	ams: i disagree entirely.
<aidanh>	what's more important is knowing how to use computers effectively
<wei2912>	same goes for an other subject though
<camcam2>	i really am not buying the argument that everyone needs to know code. that’s absurd. to believe that, you’ve got to be completely enveloped in your own little bubble world. the majority of functioning society doesn’t need or want to anywhere near coding.
<jacob___>	i agree nobody without a msc in physics should get voting rights
<nosmelc>	ams: build from components?
<wei2912>	camcam2: as of now, yes
<jacob___>	should solve a lot of problems
<ams>	nosmelc: yeah.
<wei2912>	jacob___: ehh, stop bashing up liberal arts
<wei2912>	jacob___: and the other sciences
<merijn>	camcam2: i don't believe everyone needs to know to code. but i believe that teaching them to code is far more worthwhile than, say, calculus
<twey>	wei2912: computers, as they stand, are devices that augment our ability to think by letting us outsource repetitive tasks and have them performed many times very quickly with great accuracy
<jacob___>	ok, mathematics also
<xeno_>	camcam2: i think most people should know how to code, but i don't think it makes sense to make everyone understand how computers works... that's a task for quantum physicists
<aidanh>	wei2912: eh, no matter, physicists should be easy to lynch if they mess up
<jacob___>	biochemistry, chemistry, mechanical engineering
<merijn>	jacob___: does theoretical cs/logic qualify if i agree to call myself a mathematician? :p
<twey>	wei2912: using existing programs without learning to program doesn't give you that power — you can only augment thoughts about things someone else has already thought up
<ams>	nosmelc: you don't need to understand every thing .. just like when you built that little electrical engine when you where 10 you didn't have to understand the nitty gritty details of electrical fields ..
<jacob___>	no
<jacob___>	merijn: no
<merijn>	:(
<jkbbwr>	ams: but some people don't care about electrical study at all.
<jkbbwr>	ams: most people wont need it
<nosmelc>	ams: i loved doing that!  lol
<merijn>	jacob___: guess i need to go back to my category theory book :(
<ams>	jkbbwr: and yet .. every dick joe and jane did it in elementary school or whatever.
<jacob___>	it takes only one book to understand electric/magnetic fields
<camcam2>	so are we extolling the value of thinking algorithmically, or the act of coding itself then?
<jkbbwr>	ams: not in the uk
<ams>	jkbbwr: the uk school system is abysmyal.
<twey>	wei2912: the implementation of that tool is relatively unimportant, unless you're going to become a hardware engineer or certain class of programmer.  the universal applicability comes entirely from how we use the tool, not how it's implemented
<jacob___>	physcis tuting should start at age 10
<pyon>	jacob___: "without a msc in physics should get voting rights" --> there would be, like, 15 voters in my country.
<jkbbwr>	ams: so is your face.
<pyon>	jacob___: perhaps less.
<jkbbwr>	ams: we can both result in calling names
<gune|brb>	so it seems c++ has a limit of reading ~2gb file due to seekg() accepting only a 4 byte signed int. i read that pure c's fopen can read more since it uses another variable type, can someone confirm?
<ams>	it isn't like the uk school system is a good example of how things should be ..
<wei2912>	twey: so your point is, teaching people how to program is crucial to having people use programs?
<jkbbwr>	ams: its better than most for plenty of cases.
<jkbbwr>	im not saying it is without flaw
<twey>	wei2912: no, teaching people how to program is crucial to having people use computers
<ams>	jkbbwr: you mean the rest of europe?
<jacob___>	pyon: where do you live? afghanistan?
<pyon>	jacob___: peru.
<jacob___>	o cmon, there are shitloads of phycisit there)
<jacob___>	phycisist*
<wei2912>	physicists*
<jkbbwr>	ams: pearson/ economist intelligence unit ranks the uk 6th for education.
<jkbbwr>	thats pretty damn high if you ask me
<twey>	wei2912: merely using programs is not sufficient (though you can certainly do a lot of things with particularly powerful programs, like spreadsheets or statistics packages, that are basically special-purpose programming languages)
<camcam2>	maybe there is a shortage of programmers now, but pushing for everyone to learn how to code seems like quite the over reaction.
<ams>	jkbbwr: it ranks 100th on the ams doesn't care list.
<jacob___>	whatever,
<ams>	jkbbwr: that is pretty low if you ask me ..
<pyon>	twey: most people i know would much rather not learn complicated software.
<merijn>	camcam2: i don't think everyone should code
<jkbbwr>	ams: what country are you from?
<ams>	jkbbwr: we did electrical engines when i was 10
<ams>	jkbbwr: poland
<wei2912>	o_o
<jacob___>	camcam2: thats because government is run my liberal arts majors
<nosmelc>	camcam2: a shortage?  good.  that keeps salaries high
<merijn>	camcam2: i think *less* people should program. but i think more people should learn
<jkbbwr>	ams: poland ranks 10th
<ams>	jkbbwr: and?
<jkbbwr>	so england is ranked 4 higher.
<ams>	no, not according to the ams list.
<jkbbwr>	ams: because ams has a closed view of reality
<pyon>	merijn: and you think more people knowing how to program would result in less people actually programming?
<xeno_>	camcam2: the point is not that everyone should take over for programmers. the point is that programming is a very efficient method for solving problems, especially repeated problems. people who don't know how to program are less efficient.
<wei2912>	i personally think that a greater emphasis should be placed on what camcam2 mentioned: "the value of thinking algorithmically"
<twey>	wei2912: but the universally-applicable part is neither in learning how to build programs (in the sense of stable modules of software designed to be reüsed) nor in learning how the current generation of computers work at an implementation level: it's about understanding and using the concept of computation, as an abstraction
<ams>	i mean really.. you pick some random list where things align with your views .. lame.
<camcam2>	ideally everyone would learn everything. the real shortage in the us is people with critical thinking skill. or knowledge of civics. or any number of things with a mich higher priority than reading code.
<twey>	ams, jkbbwr: my generation did a fair few bits of electronics, for what it's worth (as part of ‘physics’ education, if i remember correctly)
<jkbbwr>	ams: except its not just a random list, its a respected org
<pyon>	merijn: perhaps because they'd fully appreciate how hard it is, and why we shouldn't treat programmers as a replaceable commodity? is this your line of reasoning?
<ams>	twey: mine too.
<ams>	jkbbwr: i never heard of it, thus i cannot see why i should respect it.
<jkbbwr>	ams: http://thelearningcurve.pearson.com/index/index-ranking
<xeno_>	camcam2: but if you don't know how to program, you also can't think properly with regards to a lot of other problem solving
<twey>	ams, jkbbwr: i mean, ‘and i am in the uk’
<merijn>	pyon: no, i don't expect it to result in less people programming
<ams>	twey: ah, tell it to the kid...
<xeno_>	camcam2: for instance, if you don't know how to program, you're unlikely to solve world hunger
<wei2912>	xeno_: interesting point -- how would you support that?
<merijn>	pyon: "i think people should learn to program" and "i think less people should program" are two independent believes i have for separate reasons
<wei2912>	xeno_: i'm not sure if learning how to program => able to think algorithmically
<pyon>	ah.
<bmm>	i wish more kids in africa could be taught how to program.
<xeno_>	wei2912: knowing how to program involves knowing how to scale small solutions to large problems
<jkbbwr>	ams: which kid?
<jacob___>	programming is cool, but unfortunately a lot of idiots get into the field
<ams>	jkbbwr: you.
<adsc>	jkbbwr: the problem is a lot of "respected" things are pretty irrelevant
<merijn>	pyon: right around the time we invent lazy idris and start programming in that :p
<jkbbwr>	ams: don't result to name calling it debases your argument and makes you seem silly
<twey>	merijn: you think idris is simple?  ;þ
<jacob___>	cs shouldnt be a college course it belongs in trade school, like machining etc
<merijn>	twey: conceptually, yeah
<wei2912>	no, programming belongs in trade school
<ams>	jkbbwr: so far it is you who has resorted to name calling, no i.
<xeno_>	wei2912: maybe, but programming is the way you can practice your algorithmic thinking. just thinking in algorithms without ever materializing anything would not work very well...
<jkbbwr>	ams: i would consider "kid" name calling.
<adsc>	indeed, it is more a craft than anything else
<nosmelc>	bmm: why? they'd just bring them into the country on a h-1b to do your job for half
<jkbbwr>	ams: and i haven't really
<twey>	merijn: the language is simple.  the apis are anything but.
<merijn>	twey: dependent typing is simpler than what haskell is now
<ams>	17:34 <jkbbwr> ams: so is your face.
<wei2912>	xeno_: do we need to teach algorithms through programming?
<jkbbwr>	ams: it was a sarcastic response to your comment
<ams>	uhm, stop lying .. really ..
<ams>	17:40 /ignore jkbbwr
<xeno_>	wei2912: somehow, yes
<ams>	no time for kids ..
<twey>	merijn: it's not the dependent typing i have a problem with (… well, i don't have a problem with any of it really: it's justified complexity, but it is a lot of complexity)
<bmm>	nosmelc: i learned about programming, in africa, very late
<bmm>	can you imagine?
<wei2912>	xeno_: it's something that i sitll wonder about
<nosmelc>	bmm: that's good :)
<jkbbwr>	losing a discussion so bitches and pretends to ignore me.
<xeno_>	wei2912: you could even define programming as instantiating algorithms
<jkbbwr>	what an adult way to handle it
<jacob___>	h1b, thats a scam, its not open to phd's at all , its open to athetes, priest, or muslim-imans, and some people who have lots of money
<bmm>	i never knew normal people could write programs
<pyon>	twey: merijn: well, at least idris should be commended for actually trying to bring dependent types to practical programming, which can't be said of agda or coq.
<wei2912>	xeno_: well, to test out the algorithm, i suppose
<nosmelc>	bmm: only abnormal people can ;)
<jacob___>	bmm you should get out more
<camcam2>	xeno_: i would agree, in general, that the education system in the us fails spectacularly at teaching students how to think. teaching kids to program might help, but i think there’s a more direct approach.
<merijn>	pyon: coq is great!
<merijn>	most fun video game i played in ages :p
<wei2912>	xeno_: well, to test out the algorithm, i suppose you'll need to know how to program*
<wei2912>	camcam2: it's not an easy job at all
<bmm>	jacob___: i was in africa
<ams>	merijn: you know if someone has tried to do lisp in coq?
<jacob___>	camcam2: all education in western countries fail (i am in eu) its  a marxist ideal of everybody equally (stupid)
<xeno_>	ams: that's likely
<xeno_>	ams: extremely likely
<merijn>	ams: probably, theoretical people are suckers for that
<ams>	would be keen on reading something about it ..
<adsc>	<conspirancy> the schools are set up the way to create a conformist populace which can be easily controlled </conspiracy>
<merijn>	if there's anything popl people love it's lisp and coq :p
<jacob___>	bmm, i was born in nigeria, where did you go in africa?
<bmm>	cameroon
<xeno_>	ams: it's not even that hard
<camcam2>	adsc: i’d call that a fact.
<jacob___>	how is cameroon?
<wei2912>	xeno_: i wonder if it's strictly necessary though
<bmm>	jacob___: cameroon is good
<xeno_>	wei2912: it's like math in general, you need to exercise it
<adsc>	camcam2: it's a much too complex topic to be called a fact
<ams>	xeno_: doing the proofs?
<ams>	seems hard to me..
<snyp>	how can efficienty checking if 2 sets are equal be done in a purely functional style? in imperative style, i would keep a 'changed' variable and set it to true whenever a new item is added to a set. checking if 2 sets are equal requires o(n) time whereas the imperative way requires time as much as the find_item() and add_item() operations require, which are usually o(1), o(lg n), etc.
<jacob___>	subsaharan africa is doing good, they left their marxist shit and are doing free market with the chinese , 10% growth per year
<xeno_>	ams: coq can be used both for proof and for regular programs
<xeno_>	*proofs
<wei2912>	xeno_: what i'm thinking of is programming not in the usual sense (your typical textual programming languages), but with a language that has a gentle learning curve (scratch)
<ams>	i am only interested in proofs..
<wei2912>	xeno_: though scratch may be too limited for the teaching of algorithms
<bmm>	yeah, i like the progress they are making.
<xeno_>	wei2912: well, scratch sucks - but meh...
<camcam2>	adsc: i disagree. i think it is a fact. the only disputed thing in my mind is whether or not it is intentional.
<pyon>	merijn: coq is insanely complicated. it's three languages in one. (at least, i don't know if there's even more.) one of which is utterly unreadable (the tactics language) unless you manually step through it. and you need to pick your poison: use too many "." and your proof script will be super long and handle all cases way too manually. use too many ";"s and you won't be able to debug your proofs.
<wei2912>	xeno_: i may support such an initiative -- i'll have to examine the details before i can say more. it might work out well
<adsc>	camcam2: that is implied by my statement
<twey>	pyon: idris is brilliant.  it should be commended for a whole bunch of things.
<merijn>	pyon: like i said, greatest video game in ages
<pyon>	merijn: "greatest video game" --> okay, no objections about that.
<merijn>	pyon: just try random things until you magically prove what you were trying to prove :p
<bmm>	jacob___: when did you learn about programming?
<wei2912>	merijn: might as well use genetic algorithms
<jacob___>	at age 12, basic then machine language,
<snyp>	see my question is getting buried in coq.
<wei2912>	well, night
<wei2912>	had a good discussion
<adsc>	twey: why did they use a terrorist name for a programming language?
<bmm>	wow
<wei2912>	...
<bmm>	i wrote my first lines of code at 21
<jacob___>	i ended up studying physcis, but programming is still my fav pastime (bitcoin)
<xeno_>	adsc: idris? it's also an actor
<twey>	pyon: basically, idris is the state of the art of well-understood programming-language techniques today (with the exception of laziness, which… could go either way)
<merijn>	and the name of a dragon in a 70s uk kids show, apparently
<bmm>	actually the whole programming/computer science business has opened me to a lot of other interesting things
<bmm>	i'm beginning to love physics, and math
<snyp>	how to efficiently check a set didn't change in purely functional style?
<snyp>	i.e 2 sets are equal
<ams>	... you compare them.
<bmm>	oh, and cosmology
<xeno_>	adsc: i'm much more worried about the naming of coq...  "yesterday, i had some fun with coq, before i shuffled through a coq'art book and watched a guy steele video... now i'm playing with coq again, and... lets see.... require morecoq...."
<snyp>	but that's o(n)
<pyon>	snyp: compare their elements?
<merijn>	snyp: well, yes, how else would you do that?
<aidanh>	snyp: what's the alternative?
<snyp>	oh
<ams>	snyp: only way.
<jacob___>	yeah, i used math to do 3d graphics (that was before opengl or whatever) but i love being an engineer instead,
<snyp>	ok there's no alternative then
<adsc>	xeno_: i think that's harmless...everyone knows you like to play with coq
<merijn>	xeno_: pretty sure the french did that on purpose
<xeno_>	yeah
<ams>	snyp: unless you return the _exact_ same thing in memory, then you can do eq or similar.
<pyon>	snyp: another way could be using a special data type for diffs.
<xeno_>	worst naming since mongodb
<merijn>	xeno_: presentation "hands on session with coq"
<jkbbwr>	snyp: o(n) isn't that bad as a worst case
<aidanh>	you could have each set maintain a hash of all elements, but you'd still have to compare the elements if the two hashes were equal
<bmm>	yeah, engineering can be sweet
<pyon>	snyp: then you check that the diff in question is the empty diff.
<merijn>	"a quick taste of coq"
<jkbbwr>	merijn: good lord no
<adsc>	xeno_: it only gets somewhat dangerous when you work collaboratively on coq
<pyon>	lmao @ collaboratively
<merijn>	jkbbwr: apparently both of those were used by a guy teaching coq in copenhagen if i can believe my fellow grad students
<jacob___>	bmm i was here for an #r question, but i got it already, nice to meet you and good luck
<twey>	snyp: the same approach translates directly.  type setpair a b = (set a, set b, bool); modify1 ∷ (set a → set c) → setpair a b → setpair c b; modify2 ∷ (set b → set d) → setpair a b → setpair a d; modify1 f (as, bs, _) = (f as, bs, true); modify2 f (as, bs, _) = (as, f bs, true); aresame ∷ setpair a b → bool; aresame (as, bs, same) = same
<snyp>	jkbbwr: hmm.. yeah.
<twey>	snyp: just the data dependencies are more explicit.
<adsc>	or maybe in statements like "yesterday i checked out this cool guy's coq base"
<adsc>	can lead to confusions
<xeno_>	"plug it your laptop so we can all view the stuff you did with coq on the projector!"
<adsc>	hehe, yeah, that, too
<pyon>	are there any proof assistants that encourage a more equational style for writing proofs? i mean, as opposed to coq's "let's follow the chain of rules of inference".
<snyp>	twey: what's your's complexity?
<pyon>	chain of applied* rules of inference
<twey>	snyp: obvious
<snyp>	in terms of complexity of find operations
<merijn>	pyon: epigram/agda?
<anj7>	can anyone explain me what is this href = "something?id="
<anj7>	in php and mysql
<merijn>	although i thin work on epigram is halted due to a "crisis of faith"
<snyp>	twey: not to me. can't quite understand what you wrote.. :p
<xeno_>	anj7: it's a link
<twey>	snyp: whatever the complexity of the underlying set is
<merijn>	possibly related to homotopy of type theory
<twey>	snyp: all operations pass straight through.
<adsc>	anj7: the ?id= part are query parameters
<anj7>	adsc: what does that basically mean?
<twey>	merijn: crisis of faith?  my understanding is that conor just didn't get funding for it.  ☹
<snyp>	twey: i see
<twey>	snyp: you just update the bool when you change something.
<adsc>	anj7: it's a way to "send" data to an url
<adsc>	anj7: a php script can then read those parameters and do something with them
<pyon>	merijn: are there agda learning resources just as good as there are for coq?
<twey>	oh, well, ‘aresame (as, bs, diff) = not diff’ rather, i guess
<anj7>	adsc: can you give me an example?
<pyon>	merijn: i've played with agda much less than with coq, but, from whatever little i've seen, it seems to me that agda is more elegant.
<pyon>	a lot more elegant.
<jkbbwr>	ams: so did you actually ignore me in the end
<snyp>	twey: oh you are creating a new data type with the changed or not information.. i see, nice
<merijn>	twey: there was comment that said that on the epigram site, but it seems to be down now (the site)
<adsc>	anj7: sure, imagine an online library...they might have a php script to display the details of a book at the url http:://www.library.com/books/details.php
<twey>	merijn: yeah, he lost e-pig.org
<xeno_>	pyon: twey: speaking of coq, take inductive true : prop := i : true. - how would i be able to use that?
<merijn>	i don't understand how people "lose" domains...
<adsc>	anj7: and now in order for the script to know which book to display, they can add ?id=1 at the end to show book 1
<merijn>	they're so dirtcheap you can afford them indefinitely unless you get like "homeless" levels of poor
<twey>	xeno_: i don't speak coq
<xeno_>	twey: there's no coq in your mouth?
<adsc>	anj7: so the php script can then read the id parameter and load the book with this id from the database
<twey>	currently no
<pyon>	xeno_: it's just the unit type, except it lives in prop, not set.
<pyon>	xeno_: so you use it the same way you use the unit type in haskell/ml/scala.
<nitrix>	xeno_: that's so uncalled for.
<nitrix>	:/
<anj7>	adsc: how will we know the correct id?
<twey>	xeno_: i can answer dependent-typing questions, but only if you phrase them in a way that isn't coq-specific, or give me enough context to figure out what the syntax means.
<pyon>	xeno_: plus the usual restrictions for prop types - you can't produce a value whose type lives in set by pattern-matching a value whose type lives in prop.
<twey>	xeno_: what's that?
<twey>	uh
<twey>	nitrix: what's that?
<xeno_>	pyon: but if i have theorem foo := true. - how would i be able to prove it?
<twey>	pyon: prop is the universe of irrelevant proofs?
<adsc>	anj7: well, you would first load a list in another php script and this list would render a <ul> or something with a list of books, and in there you would prepare those urls
<pyon>	twey: yes. basically, it's implicitly (-1)-truncated.
<twey>	uh-huh.
<twey>	ooh, hott gives a nice account of irrelevance?
<pyon>	twey: dunno if i'd call it "irrelevant"
<pyon>	the proof is still relevant, just that they're all equal.
<twey>	pyon: then they're not relevant
<pyon>	twey: up to equality
<twey>	pyon: you can get any of them from any other of them by transporting along the equality
<twey>	if you have one of them, you have them all
<alltuna>	hey
<pyon>	twey: up to equality
<anj7>	adsc: its pretty hard to understand
<twey>	that's the point of irrelevance
<twey>	pyon: can you break equality?
<pyon>	twey: ofc not
<pyon>	twey: that's the point to marking things as equal
<twey>	pyon: then what's the distinction?  :þ
<alltuna>	i'm wondering at what point someone may say they 'know' a programming language
<twey>	alltuna: if you figure out an answer to that, please tell me
<rindolf>	alltuna: hi.
<pyon>	twey: dunno, i might still care about stuff like computational complexity, which hott seems not to care about
<rindolf>	twey: heh.
<alltuna>	for example, i've been programming as a hobby for 8 years now, working with many many languages
<adsc>	anj7: well, sorry, but you seem to have some gaps in your basics...do you even know how a complete php request response cycle works?
<twey>	pyon: well, complexity breaks equality, i guess.
<anj7>	adsc: i'm learning it.
<alltuna>	but i wouldn't say i really know many of them
<pyon>	twey: at least it breaks hott's notion of equality.
<adsc>	anj7: i mean a complete http request response cycle involving php
<anj7>	adsc: can you suggest a good tut for that
<pyon>	twey: i think now vv's working on a tt with two notions of equality.
<anj7>	adsc: i'll grab some basics and then i'll be back
<twey>	pyon: i think vákár is also working on a linear account of hott
<pyon>	twey: i haven't read too much about it, but my uneducated guess is that one of them is like "point equality", and the other one is like "connectedness equality".
<pyon>	:-o
<merijn>	alltuna: why would you say you "don't know" them?
<twey>	pyon: or at least he was planning to
<merijn>	alltuna: actually, i might argue that this problem could be due to the language you know being really ill-specified and thus needing you to memorise a billion uninteresting details (consider javascripts truth/relational operator tables, c's undefined behaviour, etc.)
<twey>	merijn: but that is the rule, not the exception :þ
<pyon>	"linear account of hott" --> what i really want to see is a generalization to arbitrary n-categories [with arbitrary k-dimensional non-invertible morphisms].
<merijn>	alltuna: there are simpler language out there, by which i mean "having a more consistent and simple specification without that many special cases"
<merijn>	twey: hey, scheme and haskell are pretty consistent and elegantly defined, imo
<pyon>	merijn: dunno, in such cases, i just consider the language in question "unknowable"
<twey>	merijn: and those are exceptions
<merijn>	twey: sure :)
<pyon>	merijn: e.g., i use c++ more or less effectively, but if you ask me "do you know c++?", i'll tell you "no".
<twey>	merijn: though there are plenty of warts in haskell of the kind interviewers love to ask about to make sure you ‘really know’ a language :þ
<adsc>	anj7: i tried to find one, but can't find a good one, sorry
<merijn>	but the original question was "i don't feel i really know any language despite programming for 8 years", to which my response is "that's because most languages are being designed by incompetent hacks" :p
<anj7>	adsc: http://code.tutsplus.com/tutorials/how-to-create-a-phpmysql-powered-forum-from-scratch--net-10188 was following this tut
<alltuna>	merijn, mainly because once i learn the basic syntax structure, i can 'use' the language, and i'm done. i've only learned through practice, and i don't really know much other than syntax. i don't really know how languages 'work'.
<pyon>	merijn: "incompetent hacks" --> or truly evil people.
<alltuna>	merijn, but i want to change this
<merijn>	pyon: i just spend two days struggling to get my template magic to do what i want. i'd have written the same in haskell in an hour >.>
<pyon>	actually, maybe not even people, perhaps reptilians.
<pyon>	merijn: heh
<rate_reducer>	can someone give me some tips on this dynammic programming problem: how would i create an algorithm that takes an array of numbers one-by-one combines adjacent elements via +/-/* to return the maximum value possible (combinations can be in any order)? so for example [-2,-1,1] would be 4 (-1-1=-2, then -2*-2=4).
<merijn>	alltuna: ooh, you sound lik a prey for my seductive lies :p
<alltuna>	merijn, heh, i'm not a complete noob, i meen 8 years of a hobby teaches you some things ')
<merijn>	alltuna: my recommendation: first go learn haskell, because it's very different from everything you likely know (like, so different you'll feel stupid a lot) and then go write a few compilers
<pyon>	merijn: dunno, php makes way stupider than haskell ever could
<adsc>	anj7: looks good, but it's not really starting at the basics
<merijn>	i think writing a compiler is the best way to truly understand languages, and 17 out of 20 students who barely got through our compiler course agree that in hindsight it was awesome :p
<pyon>	you can't memorize 34958702549832145 ad-hoc corner cases? (actually, all cases are corner cases.) you're stupid!
<alltuna>	well i mean, i know the syntax, and am comfortable with the dev environments of c#, java, obj-c, js, php, sql, html, css, c++, but i want to know more about what's going on
<merijn>	but i would never recommend someone go and write a compiler in anything other than haskell (well, maybe ocaml/sml/scheme), but certainly not in something like c# or whatever
<rate_reducer>	anyone good with dynamic programming?..
<alltuna>	i feel liek when i talk to programmers i don't know anything
<merijn>	alltuna: two years in #haskell and i learned more than 5 years of my cs degree ;)
<camcam2>	rate_reducer: it’s going to involve going through your values recursively, checking to see if an operation has been done on those values, if so, retrieve them from an array, if not, do it and store them in the array, then search the array for the max value
<alltuna>	haha nice :p
<camcam2>	rate_reducer: or something like that.
<rate_reducer>	camcam2: so like memoization with a dictionary? the thing is, if all the elements are small numbers i don’t see how much time is saved like that
<rate_reducer>	either way the problem is the sheer number of possible combinations to check
<rate_reducer>	rather than the time to check a combination
<camcam2>	rate_reducer:right. dynamic programming will keep you from have to redo calculations you have already done
<rate_reducer>	so for the example of [-2,-1,1], i’m struggling to see how to break it down into subproblems
<alltuna>	if i don't know what people are talking about when they talk about 'layers', 'heaps & stacks', etc, where should i learn these things
<rate_reducer>	i think id have to run the alg on [-2,-1] and [-1,1] then get back the min and max of each
<alltuna>	like, is there an overall theme?
<alltuna>	they're not learning a language
<alltuna>	what are they
<twey>	alltuna: ‘layers’ is architectural; ‘heaps’ and ‘stacks’ are data-structures
<rate_reducer>	then try all 3 operational combinations between the min max of the sub problem and the one remainign element
<twey>	alltuna: the latter you can find in any good algorithms-and-data-structures book, like ‘introduction to algorithms’ by cormen &a.
<rate_reducer>	clrs
<alltuna>	having never read a programming book, but having developed many websites, games and apps in many languages. where would you recommend i go first
<twey>	for the former, i don't know a good introduction.
<twey>	alltuna: that doesn't make much difference, unless you abhor reading
<alltuna>	i hate reading with a passion
<twey>	that's unfortunate
<alltuna>	i know
<alltuna>	i wish it were otherwise
<rate_reducer>	can someone give me some tips on this dynammic programming problem: how would i create an algorithm that takes an array of numbers and one-by-one combines adjacent elements via +/-/* to return the maximum value possible (combinations can be in any order)? so for example [-2,-1,1] would be 4 (-1-1=-2, then -2*-2=4).
<twey>	how do you learn things?
<inphase>	rate_reducer: you don't need dynamic programming to solve that, unless required by a professor.
<alltuna>	random tutorials, many hours of failure
<dogpolice>	you really don't.. fold.
<rate_reducer>	inphase:  how else would you suggest efficiently approaching it?
<alltuna>	basically, its taken me 8 years of constant programming and being a social recluse to learn how to do the basics in like 8 languages
<alltuna>	but not understanding much
<dogpolice>	rate_reducer: just use a fold.
<rate_reducer>	never heard of that..
<inphase>	rate_reducer: multiplication always makes equal or larger numbers than addition for everything 2 or larger.
<twey>	dogpolice: ‘in any order’, +/-/*, ‘maximum value’
<dogpolice>	twey: oh, in any order.
<inphase>	rate_reducer: and the 1's you simply add on to the smallest other number.
<rate_reducer>	values can be negative too by the way
<rate_reducer>	greedy algorithms wont work
<rate_reducer>	hm
<twey>	rate_reducer: the point is that you memoize the maximum value you can get from a certain subset
<rate_reducer>	i guess the minimum value too
<twey>	yeah
<snyp>	alltuna: which languages?
<twey>	hm
<twey>	rate_reducer: well, no, the minimum is never important
<rate_reducer>	darn i wish i could post code here
<rate_reducer>	wait why?
<rate_reducer>	like for
<rate_reducer>	[-2,1,-1]
<rate_reducer>	how would you break that down into cases?
<rate_reducer>	oops wait
<twey>	rate_reducer: because you can always choose to use - instead of + to convert a minimum value into a maximum value
<rate_reducer>	[-1,1,-2] <- use that
<rate_reducer>	oh but
<twey>	unless you're only allowed binary -
<rate_reducer>	so if you have two adjacent elements e1 e2
<pulock2016>	hello all...problems with webirc....so now back with hexchat
<rate_reducer>	you can only do e1-e2
<alltuna>	snyp, c#, java, obj-c, js, php, sql, html, css, c++, maybe one or two more. but i know 'how to' do a whole heap of stuff. like i can develop apps for ios, android, work with databases, create api's, web servers which communicate with mobile infrustructure, uhh, server-clients, etc etc
<rate_reducer>	not e2-e1
<twey>	rate_reducer: you said in any order
<pulock2016>	hello rindolf ,pyon,achilles..
<alltuna>	i just feel like i understand nothing
<rate_reducer>	oh no.. i meant you can take pairs to perform operations on in any order
<rate_reducer>	like in [-1,1,-2]
<rate_reducer>	you can combine 1 and -2 first
<twey>	i see
<rate_reducer>	sorry
<taylorpol>	is there a book or subject i can read up on to learn about executing a memory instruction from one computer on another?
<taylorpol>	i know that sounds weird
<taylorpol>	don't know what it would be called
<rindolf>	pulock2016: hi.
<taylorpol>	server virtualization for aggregation?
<taylorpol>	idk
<numb3rz>	alltuna:nice to kno ya!!!
<pyon>	pulock2016: hai
<snyp>	alltuna: you should now get into acquiring knowledge about some field, like machine learning, image processing, etc etc. there are great courses on the internet.
<pulock2016>	rindolf, hows life....did you get married?i saw your advertisements on shlomifish...lol
<alltuna>	snyp, ye that is good advice. i do feel like i need more knowledge on the basics of computing. like i might need to read an intro book where i can learn about bits & bytes, binary, address space, etc
<pulock2016>	rindolf, long time back though ...haven't checked shlomifish for over 6 months...
<rindolf>	pulock2016: no, i did not get married.
<rindolf>	pulock2016: it's "shlomifish.org" - not "shlomifish"
<pulock2016>	rindolf, sorry...don't get pecky bro....if you get the meaning i suppose it should do....
<snyp>	alltuna: idk... it seems you already know a lot that matters at your level.. "a complete understanding is no longer possible"
<numb3rz>	rindolf:btw happy birthday  buddy!!! enjoy the strippers i sent ya
<snyp>	alltuna: http://prog21.dadgum.com/129.html
<rindolf>	numb3rz: thanks!
<rate_reducer>	twey: the only way i can think of right now is to split the array into two arrays in all possible ways and then find the optimal way of combining those two subarrays. you would do this recusively with the base case being two size-1 arrays
<twey>	rate_reducer: so, the maximum value maxval [-1, 1, -2] is maximum [ maxval [-1] * maxval [1, -2], maxval [-1] - minval [1, -1], maxval [-1] + maxval [1, -1], maxval [-1, 1] * maxval [-2], minval [-1, 1] - minval [-2], maxval [-1, 1] + maxval [-2] ]
<rate_reducer>	but this seems extremely wasteful
<twey>	rate_reducer: that's right
<pulock2016>	rindolf, man...strippers....yuck....we here in india are limited to stable family life with just one wife and no other sex options...and its good and stable..
<twey>	rate_reducer: it's wasteful because you're recalculating the bits in the middle.  that's where the memoization comes in
<snyp>	alltuna: well... you can just read a book on os concepts like galvin, et al for bits, bytes and address space.
<rindolf>	pulock2016: i wasn't serious.
<rate_reducer>	twey: ah ok, i’m still new to memoization. how would it speed things up in this example?
<rindolf>	pulock2016: i was saying "thanks" to the happy birthday.
<twey>	rate_reducer: you would store a mapping from subsets to the maximum and minimum values for that subset, so that each subset would only have to be calculated once
<pulock2016>	rindolf, ok...sorry
<pulock2016>	bye...tc...gn...bb...laters
<alltuna>	synp, interesting link. very true.  the problem is, having not gone through any course, or having read any intro books, or any books to this stage for that matter, i don't 'know' what i'm missing haha. i think this is more of an internal issue.. thanks for your help
<rate_reducer>	twey: ok thanks, i’ll try it out
<numb3rz>	alltuna: jus be confident in yourself as ling as u know how.to do what you need to do then your fine!!!
<numb3rz>	s/ling\long
<snyp>	alltuna: np
<ams>	reading company descriptions is always so fun ..
<limmen>	anyone developing something fun open source?
<ams>	bumbee labs has created a paradigm shift in measuring footfall by translating anonymous smartphone signals into customer intelligence. the solution also serves as a platform for different app functionality as indoor navigation, shoppinglist, scanning etc.
<ams>	limmen: i work on free software.
<limmen>	ams: what type of software?
<ams>	limmen: mostly network and base operating system related.
<limmen>	cool
<limmen>	anything on github?
<ams>	no.  why does everyone think that everything has to be on github?
<limmen>	wow , sore point there? just asked. do you have anything open source so that i could read up abit and learn more what you're doing
<anj7>	ams: not everyone, i don't use github.
<ams>	again, i said that i did free software, not open source software.  http://www.gnu.org has most of it.
<limmen>	i have'nt said you did open source either, i asked
<ams>	i have neverwritten a single line of "open sore" code.  only free software, which i have been doing for 25+ years.
<anj7>	hey is this correct? http://pastebin.com/8npy0yhr
<limmen>	okay, you're missing out on a great community tho
<ams>	no, i am not.
<patarr>	anyone here use jwt? how do you handle jwt token rolling when yours expires?
<ams>	limmen: https://www.gnu.org/philosophy/open-source-misses-the-point.html
<jorick>	richard is that you?
<ams>	i'd rather be rms than esr ..
<alltuna>	patarr, you want the token to expire, but you want to renew it without user authentication?
<rindolf>	anj7: doesn't look like it's correct.
<rindolf>	anj7: this could may be suffering from xss.
<anj7>	rindolf: where did it go wrong?
<rindolf>	anj7: s/could/code/
<patarr>	alltuna, i'm using an api and i don't want to litter my code all over the place with if(status.code == 123) token = renewtoken()
<anj7>	rindolf: are the links correct?
<rindolf>	anj7: links?
<alltuna>	patarr, in my class constructor i call an 'auth' method on my $_post['auth'];
<patarr>	alltuna, so you generate the token when you construct the class? but what if your exp token is tomorrow morning? your application surely has higher uptime than that.
<anj7>	rindolf: <a href="topic.php?id=">topic subject</a> at 10-10'
<patarr>	alltuna, when you send off another request, you will get an error response back.
<rindolf>	anj7: what should the id= value be?
<anj7>	idk
<rindolf>	anj7: well, who does?
<alltuna>	i generate the token when the user logs in, and the token is stored on the users device
<alltuna>	it only gets authenticated in the constructor
<alltuna>	if its expired, the user is returned an error asking them to log in
<anj7>	rindolf: http://code.tutsplus.com/tutorials/how-to-create-a-phpmysql-powered-forum-from-scratch--net-10188
<rindolf>	anj7: fine, why aren't you using an existing cms or web framework?
<merijn>	rindolf: and miss out on that glorious yak shaving?
<anj7>	rindolf: i'm learnig php and mysql
<xeno_>	"apply ex_falso_quodlibet." - are they *trying* to make it hard to remember?
<rindolf>	merijn: heh.
<koollman>	xeno_: what, is latin hard ? :)
<manicpanic>	whoever invented the variable, was a genius
<koollman>	xeno_: the proper english translation in most context is probably 'garbage in, garbage out' :)
<pyon>	xeno_: coq's naming conventions are totally insane, especially w.r.t. the tactics language.
<twey>	‘ex falso quodlibet’ is standard
<rindolf>	anj7: well, i give up on helping you. prepare to get yourself burned with all the bugs you are likely to make. have a nice life.
<pyon>	twey: yes, but they could use a shorter identifier.
<twey>	eh, seems alright to me.
<twey>	coq doesn't aim to be particularly terse to start with.
<twey>	at least it's descriptive.
<anj7>	rindolf: well ok, thanks for trying
<pyon>	twey: coq's tactic language is anything but easily readable.
<twey>	agda has ⊥-elim
<twey>	oh, i was talking specifically about ex_falso_quodlibet.
<pyon>	xeno_: anyway, have you tried simply using "exfalso"?
<xeno_>	pyon: no
<pyon>	dunno if it's a problem with hackage's server or with my own internet connection, but cabal keeps failing to install packages all the time.
<pyon>	s/cabal/cabal-install/
<xeno_>	pyon: exfalso: not found in the current environment
<pyon>	crap.
<pyon>	dunno then
<rindolf>	anj7: sure.
<someone13>	why aren't you helping me
<someone13>	find a universal operator for a boolean function
<someone13>	wtf
<extor>	are there any geckofx assemblies for visual studio?
<peterfa>	why did that rorschach test show pictures of angry demons eating children?
<peterfa>	oh, ww.
<rindolf>	someone13: what's the  problem?
<someone13>	well
<someone13>	how do i find if a certain operator is universal or not
<ori_b>	someone13: define what "universal operator"?
<someone13>	a universal operator is an operator that can implement the following set {or,not,and}
<someone13>	nand is a universal operator
<someone13>	nor is a universal operator
<ori_b>	ok.
<rcr>	then i guess if it has the same truth table as nand?
<someone13>	yeah
<gedamo>	https://en.wikipedia.org/wiki/functional_completeness ?
<ori_b>	rcr: not quite.
<someone13>	yes
<ori_b>	someone13: so, if you have an operator, and you want to see if it can implement {or, not, and}, how would you go about it?
<someone13>	i'll first minimize the function
<inphase>	write it really small on paper.
<someone13>	and then create a truth table with every possible input
<someone13>	and then create a truth table for  every possible input
<someone13>	if it matches a nand/nor table, then it's universal
<inphase>	someone13: it's not that simple.  you can use any combination of them.
<ori_b>	someone13: what if you could combine it to produce a nand/nor table?
<someone13>	i could do the following f(x,y,z) = f(x,f(x,x,z),f(x,y,y))
<inphase>	someone13: if you have never done so, you should sit down right now and try to make "not" and "or" out of "nor".
<someone13>	and try to create a nand or nor expression as an output
<ori_b>	forget about nand and nor, personally; they're a red herring -- focus on implementing or, and, and not.
<ori_b>	^-- yep. what inphase said.
<someone13>	that could be complicated for a 4 variable function
<ronjohn>	hydrogen with charge of +e, helium with charge of +2e, distance is 10nm, what is the form
<ronjohn>	force*
<ori_b>	someone13: although, actually, if you can reduce your function to one of the universal gates, you can probably save time; it's not entirely a red herring, i guess.
<pyon>	ronjohn: https://en.wikipedia.org/wiki/coulomb%27s_law
<archilius>	any game recommendations? (i hope this is not easy off topic)
<someone13>	half life 2
<e3454346456>	hey anyone good in regexp's? i have a string like "abc abc password="<something>" bla bla password="<sometext>""
<e3454346456>	and i want to replace all those password="<something>" to password="*"
<e3454346456>	i.e hide all passwords in some connection strings
<e3454346456>	(in c#)
<ianwizard-cloud>	anyone know where i could find a good (and... reasonably legal to use) talk radio stream, or just a good source for a lot of speech audio?  i'm about to start a project with audio / speech analasys, and want a good, diverse amount of data to feed it.
<rounin>	e3454346456: the regexp for any character is just .
<rounin>	a single period
<e3454346456>	yes sir rounin, i managed to replace first occourance with "string pattern = "password=\"(.+)\"";"
<ianwizard-cloud>	i considered just recording some local talk radio with my hackrf, but if there's a source where i don't have to leave my local computer running, i'd rather use that.
<e3454346456>	but it then cuts my string :/
<rounin>	password.replaceall(".", "*"); in java i think
<ori_b>	e3454346456: hm? why not flip it around?
<rounin>	in c# it would be something like... regex.replace(password, ".", "*");... i don't remember exactly
<ori_b>	(password=\").+(".*)
<ori_b>	so, replace("(password=\").+(".*)", "\1*\2")
<e3454346456>	same issue ori_b it cuts after first repalcement
<ori_b>	there's probably an api for a global replace.
<rounin>	.* matches the entire string
<rounin>	. matches a single character
<ori_b>	rounin: 1 + 1 = 2
<ori_b>	rounin: 1 + 3 = 4
<ori_b>	(in other words; yes -- what's your point?)
<rounin>	lay off the drugs, ori_b
<ori_b>	e3454346456: you probably do want to change the '.+' to '[^"]+', though, so it stops at the first quote.
<ori_b>	either that, or make the repetition operator reluctant
<e3454346456>	my code right now
<e3454346456>	http://pastebin.com/ckepgtfs
<ori_b>	e3454346456: sure, and what does that fail on?
<e3454346456>	it cuts on the first match
<ori_b>	"cuts"?
<e3454346456>	yeah cuts the string on the first match, so if i have "abc abc password="hello", dfgdfg password="hi"", my result is "abc abc password="*""
<ori_b>	oh.
<ori_b>	that's because the repetition operators try to match the longest string that they can
<ori_b>	what i mentioned earlier abotu either '[^"
<ori_b>	*("
<ori_b>	...i'm failing at typing.
<e3454346456>	i tried that
<hassoon_>	yep
<e3454346456>	but im not sure i understood you properly
<hassoon_>	you're a fail
<rashad>	hello. i have a microcontroller that is connected to some modem via uart (serial port). the modem sends messages to the microcontroller through the uart, but only one character at a time. i can set an interrupt handler that will fire every time a character is received, and then accumulate characters in some buffer. my problem is, however: how do i know when the modem has stopped sending characters?
<ori_b>	what i mentioned earlier about either '[^"]*' or reluctant operators will do it.
<hassoon_>	a shame on the human kind
<ori_b>	[^"] means 'any character that is not a quote'
<e3454346456>	can u make a pastebin ori_b?
<e3454346456>	not sure where to write what
<aawe>	hassoon_: i invented failure
<aawe>	please send royalty checks
<ori_b>	e3454346456: http://okturing.com/src/2836/body
<hassoon_>	aawe: you must be satan.
<e3454346456>	works almost ori_b
<aawe>	i invented satan too
<e3454346456>	just that it onlu replace first char
<e3454346456>	rest of pw is still there
<ori_b>	e3454346456: alternatively, http://okturing.com/src/2837/body
<e3454346456>	second one only replaces first occourance
<rindolf>	aawe: chuck norris invented satan!
<ori_b>	e3454346456: what input are you using?
<e3454346456>	"hej hej password=\"tjena\" sa are it dfgfdgrewt ert password=\"dsfjkds\""
<aawe>	rindolf: i'll need to send some cease or desist letters to chucks lawyers for spreading such lies
<aawe>	or is that "cease and desist"?
<rindolf>	aawe: and
<aawe>	makes more sense, yeah
<hassoon_>	rindolf is satan
<ianwizard-cloud>	if anyone's interested, i downloaded about 100 talks from npr.org
<ianwizard-cloud>	that should be enough for now.
<rindolf>	hassoon_: so chuck norris or aawe invented me? ;-)
<hassoon_>	rindolf: yep
<aawe>	but then who invented aawe?
<e3454346456>	any more ideas ori_b?
<aawe>	rindolf: for a token fee, i can list you as my inventor
<hassoon_>	oh hey, how is your hair? the last time, your head was mostly bald
<rindolf>	aawe: chuck norris did!
<ori_b>	e3454346456: oh, the .* at the end will confuse it then.,
<hassoon_>	a picture of you in some kind of party
<rindolf>	aawe: i'd rather not make claims to chuck norris' work.
<rindolf>	hassoon_: who are you talking to?
<hassoon_>	rounin: you.
<hassoon_>	rindolf: *
<rindolf>	hassoon_: my head was bald?
<hassoon_>	half-bald maybe
<rindolf>	hassoon_: hmmm...
<hassoon_>	or even more
<aawe>	a chuck is the part holding the piece in a lathe, and norris is the cat in hogwarts in harry potter
<aawe>	coincidence?
<rindolf>	hassoon_: i sometimes cut my hair short, but it is still growing after that.
<hassoon_>	ah :o
<ori_b>	e3454346456: got it?
<hassoon_>	i though you have starting losing your hair or something
<hassoon_>	for a 40+ yo dude
<rindolf>	hassoon_: no, not yet.
<hassoon_>	*thought *
<e3454346456>	testing now in real case scenario ori_b
<hassoon_>	alright
<rindolf>	hassoon_: my hair is turning grey though.
<hassoon_>	:o
<hassoon_>	scary
<rindolf>	but i still have a lot of black strands.
<hassoon_>	death is coming
<aawe>	hassoon_: would you really want to live for ever?
<hassoon_>	aawe: sure thing, i want to witness many kinds of civilizations
<aawe>	more importantly, would you want to make the decision now? you will be another person in 10 years, you might want to die then
<aidanh>	i want to be, forever young ~~
<aidanh>	aawe: i want bits of both sides
<e3454346456>	ori_b, think it works but i made an mistake
<aawe>	i sometimes comfort myself with the fact that i will die some time, and all my responsibilities and obligations will be null
<e3454346456>	should replace the thing inside password=<thing>;
<e3454346456>	that exact format, can u change the regexp to that?
<ori_b>	...i could, so can you.
<e3454346456>	not sure exactly
<ori_b>	so try.
<aawe>	e3454346456: /password=([^)]+);/.replace("password=#{$1.downcase}")
<ori_b>	regex (especially the one above) isn't too difficult to understand.
<aawe>	i goofed up.
<ori_b>	it's composed of exactly 3 operations: 'match one character', 'match one thing or another thing', and 'repeat the match an infinite number of times'
<ori_b>	there is nothing more to a 'pure' regex; almost everthing else is shorthand for the above.
<ori_b>	(that's a small lie; some regex implementations added a few bits that can't be represented that way, but 99% of regexes are that)
<aawe>	aidanh: do you want the cake, the recipe of the cake, eating it too and a million dollahs?
<camcam2>	are there any good comp sci/programming/related podcasts out there?
<rindolf>	camcam2: there's floss weekly.
<e3454346456>	ori_b this almost work
<e3454346456>	string pattern = "(password=).+?(;.*)*";
<e3454346456>	but it does only replace first char :/
<ori_b>	so, let's break it down a bit :)
<camcam2>	rindolf: thanks! any others?
<ori_b>	e3454346456: let's start with the first bit: (password=) <-- what does that mean?
<rindolf>	camcam2: well, i used to like perlcast, but that was just me.
<ori_b>	in words
<e3454346456>	match any string with "password="
<rindolf>	camcam2: perlcast was discontinued though.
<rindolf>	camcam2: there's also yayquery  - about jquery.
<ori_b>	e3454346456: ok; next little segment: '.'?
<bmm>	who is a fan of super heroes and vigilantes?
<camcam2>	i was hoping for something a little more broad, tbh.
<e3454346456>	any char and + so its any chars
<camcam2>	maybe something that would discuss certain algorithms, their history, stuff like that
<ori_b>	e3454346456: ok, and the '?'?
<e3454346456>	optional
<pokeymantrainer>	the standard c memory allocation functions (malloc, calloc, realloc, free) manage data on the heap. is there a way to allocate data on the stack instead?
<rindolf>	pokeymantrainer: yes, alloca
<ori_b>	e3454346456: ok, so if it comes after a repetition operator, it means something a bit different.
<ori_b>	e3454346456: 'shortest possible'
<rindolf>	pokeymantrainer: just note that stack space tends to be limited.
<hassoon_>	in php, when coding the authentification required for a user to connect ot a mysql db, should i use cookies? and does the cocckie name have to be the same as the auth form's fields names? like in setcookie("un",$_post["un"]);setcookie("pw",$_post["pw])  given these two form input boxes  <input type="text" size="30" maxlength="30" name="un"/>  <input type="password" size="30" maxlength="30" name="pw"
<hassoon_>	/>
<e3454346456>	can u show me how the correct regexp would be
<ori_b>	so, eg, if you had "aaabbb", matched with '.*b', what would the match be?
<e3454346456>	a lot easier to learn from that
<psuser1>	how can i alter a pixel on my desktop from perl?
<ori_b>	so, eg, if you had "aaabbb", matched with '.*?b', what would the match be?
<ori_b>	(for both examples)
<dogpolice>	psuser1: write to /dev/fb0.
<psuser1>	i'm on windows dogpolice
<dogpolice>	have fun, then.
<psuser1>	any ideas?
<ori_b>	e3454346456: (for both examples)
<dogpolice>	nope. you could make a 1x1px borderless window and position it accordingly.
<ori_b>	e3454346456: eh, i'm going to go through what you had first.
<aidanh>	aawe: yes, that sounds good too, i'll take that one
<dogpolice>	otherwise, make a window, and write to it.
<e3454346456>	first one ori_b matches all, second one "aaab"
<ori_b>	ok
<rindolf>	pokeymantrainer: also - alloca is not standard.
<ori_b>	e3454346456: so, the part that's funky in your regex: (;.*)*"
<e3454346456>	yeah
<ori_b>	what does the ';.*' mean?
<e3454346456>	not sure really
<rindolf>	hassoon_: use a single cookie per site.
<ori_b>	e3454346456: break it up then
<ori_b>	what does ';' mean?
<e3454346456>	its part of my scheme
<e3454346456>	so its a pattern
<e3454346456>	only
<ori_b>	in terms of regex.
<hassoon_>	rindolf: i have the username and password iin the authentification form :o
<ori_b>	(it's not a special character)
<e3454346456>	that i should match ";"
<ori_b>	ok, then you have a '.*' following it
<e3454346456>	can you please tell me the correct regex and i will understand from that
<e3454346456>	been working for the last 18h straight and having headache
<ori_b>	so, what does '.' mean? what about '.*'? '.*' mean? and putting it all together, ;.*?
<ori_b>	e3454346456:  i can do that once you tell me what you wrote :)
<e3454346456>	what i wrote where?
<ori_b>	in your regex.
<e3454346456>	i dont know i just modified yours
<camcam2>	there’s pretty slick regex cheatsheets out there, fwiw
<e3454346456>	tell me the correct one please
<e3454346456>	i promise you, ill come back tomorow
<e3454346456>	explaining the regexp for you my friend
<ori_b>	password=.+?;
<ori_b>	add groups as needed.
<dogpolice>	we don't do homework.
<e3454346456>	ok
<dogpolice>	if it's a homework question, figure it out for yourself.
<e3454346456>	ít isnt
<rounin>	do you have to do the same thing with one replace anyway
<e3454346456>	i tihnk its working now
<camcam2>	http://www.cheatography.com/davechild/cheat-sheets/regular-expressions/
<e3454346456>	thanks ori_b, i will come back to you with some words of wisdom
<haakon_1>	hey, i have a difficult problem im thinking of
<haakon_1>	lets say that you have a 200x200 grid. cartesian plane. you are given the lines of a polygon. how do you find out how many integer points are inside that polygon?
<haakon_1>	i thought of considering one line, and then sett all points to the left equal to 0 and the right equal to 1, and just continue like this, but im not sure if it will turn out to something
<inphase>	haakon_1: that fails for concave polygons.
<haakon_1>	yeah i think it will fail for whatever
<numb3rz>	sup
<rindolf>	haakon_1: i think there are triangulation algorithms.
<rindolf>	for splitting a polygon into triangles.
<aewffwea>	rindolf: that's a trivial algorithm
<haakon_1>	aeffwea: hm, weeell
<inphase>	yeah, transforming to a set of triangles first would make it trivial.
<haakon_1>	well, you still end up with determining the points inside three lines
<inphase>	determining the points inside a triangle is straightforward.  there are no concave triangles.
<rindolf>	aewffwea: what if you have concave polygons?
<inphase>	for a triangle, you only need to know on which side of each line a point is.
<woggle>	haakon_1: see, e.g., http://www.cs.berkeley.edu/~job/classes/cs184/spring-2015-slides/09-scanconversion.pdf slides 29-end. this should be covered in detail in a graphics textbook, including all the nasty corner cases (like making sure two polygons which touch each other render without a visible edge.)
<inphase>	edge cases are handled by including points on the triangle lines.
<inphase>	(perhaps with a floating point epsilon for avoiding errors.)
<rindolf>	sir_galahad_ad: sup?
<sir_galahad_ad>	not much rindolf how are you doing?
<rindolf>	sir_galahad_ad: it was my birthday today.
<sir_galahad_ad>	oh!? happy birthday!
<rindolf>	sir_galahad_ad: and it was a productive day - i sent two pull reqs.
<rindolf>	sir_galahad_ad: thanks.
<sir_galahad_ad>	how old are you now?
<rindolf>	sir_galahad_ad: i'm 38 years old.
<sir_galahad_ad>	ah 5 years older than i am then
<nes173>	"write a c++ program that sorts an array of integers using on a heap data structure." what are they asking me to do here?
<oleo>	what is a heap ds ?
<gedamo>	https://en.wikipedia.org/wiki/heapsort
<rindolf>	sir_galahad_ad: ah.
<rindolf>	sir_galahad_ad: i thought you were in your twenties for some reason.
<sir_galahad_ad>	nope i just give that impression because i've wasted so much of my life
<rindolf>	sir_galahad_ad: heh.
<oleo>	a heap: implementation of a maximally efficient priority queue
<oleo>	hmmmm
<darkelement>	hey guys what is a good way to write a 2d array to a file?(.log/.txt/etc)
<rindolf>	darkelement: a 2-d array of what?
<darkelement>	different strings
<shayanjm>	darkelement: depends how you want it to be represented
<darkelement>	it doesnt matter how easily i can read the text file, all i care about is ease of storage and use
<darkelement>	and if i can get a 2d array to be just held there it will be perfect
<shayanjm>	darkelement: you can do something dumb like a csv type format then
<darkelement>	hmm
<darkelement>	you're right i suppose
<shayanjm>	each element separated by a comma, each sub-array separated by newline characters
<shayanjm>	would be thoughtless to parse. add elements to array until you hit a new line character, rinse and repeat.
<sbrg>	yay, setting up my raspberry pi
<darkelement>	just tab underneath each element for the sub array elements
<shayanjm>	darkelement: some sort of marker is necessary for when you prase
<shayanjm>	parse*
<shayanjm>	so newline character, or anything else you can pick up easily
<darkelement>	yea
<aidanh>	darkelement: if you don't care about portability, you could just store the binary representation directly
<darkelement>	hmm
<darkelement>	i think i'll try and make thsi work
<fxh>	is there are way to convert a string to symbol in lisp? for example during infix evaluation (1 + 2)
<fxh>	((cadr list) (car list) (caddr list)), (cadr list) is a string
<darkelement>	can a python set work to hold info like a 2d array?
<darkelement>	or does it only work on linear one dimensional arrays
<electrojustin>	shoot, i just looked that up the other day, how to turn strings into symbols in cl
<electrojustin>	let me see if i can find it again
<gedamo>	fxh: intern?
<electrojustin>	that was it
<electrojustin>	intern
<electrojustin>	that didn't do exactly what i wanted it to though
<electrojustin>	if you want to find an existing symbol based on a string, you have to use something else
<electrojustin>	oh nvm
<electrojustin>	ignore me, my memory is shit apparently
<winny>	darkelement: python set members must be hashable, and list isn't so no
<winny>	you can try it yourself: >>> {[]} # results in: typeerror: unhashable type: 'list'
<darkelement>	yea ive decided to do list anyway
<darkelement>	i can do [1].append(element) in a 2d array, correct?
<winny>	list, i think you mean
<guest14522>	hello people,i would like to know how much time does it take to detect a layer7 ddos attack?
<winny>	try this: print([list()][0].append('hello world'))
<xmppwocky>	guest14522: uhhh, context?
<_blizzy_>	would most of you recommend installing cygwin?
<sbrg>	_blizzy_: nope
<winny>	oh right, append doesn't return anything
<winny>	anyway answer should be yes
<xmppwocky>	_blizzy_: in the way i'd recommend sawing off your own leg if it's caught under a boulder
<hassoon_>	does closing a site using a $_session array, close the session initiated in the biginning by start_session(), too?
<xmppwocky>	like, if you have no other options...
<darkelement>	winny: yes
<darkelement>	winny: ty
<guest14522>	i am trying to develop a algo to prevent ddos attack
<darkelement>	how so?
<hassoon_>	guest14522: g'luck
<darkelement>	seems quite difficult since people still get ddosed at major gaming tournaments
<_blizzy_>	well, i'm using windows
<darkelement>	i would recommend getting vmware and using a linux vm on that
<guest14522>	darkelement: what i am trying to implement is a user tree and request rate algo
<hassoon_>	darkelement: like what :o
<darkelement>	i like it a lot more
<hassoon_>	the gaming services
<sbrg>	_blizzy_: cygwin for what exactly?
<plastefuchs>	_blizzy_: what do you need it for?
<sbrg>	if you want a nicer terminal and such, try cmder
<darkelement>	hassoon_, like starladder for dota
<plastefuchs>	if you just want some linux-y tools, cmdr is nice
<hassoon_>	darkelement: you know tankionline? :o
<fxh>	gedamo: tnx
<darkelement>	hassoon_,
<darkelement>	'fraid not
<darkelement>	i am hype for the international, however
<_blizzy_>	sbrg, plastefuchs, linux like cmd
<sbrg>	_blizzy_: then check out cmder
<plastefuchs>	yeah, you can justu npack the archive and check it out
<_blizzy_>	sbrg, plastefuchs, thxs
<hassoon_>	hype ?
<_blizzy_>	hmm, i'm making a web app in rails. would you call many pictures a collection or an album?
<plastefuchs>	album
<plastefuchs>	for the connection to picture album
<pokeymantrainer>	are there any good-looking, free (license-wise) icon sets available i can use for my gui app?
<plastefuchs>	there should be a bunch around for that. good-looking is subjective though :d
<vendu>	hello world
<vendu>	anyone ever do bsp-based dungeon generators? :)
<rashad>	hello. i am making a microcontroller into a mobile phone. usually, the phone will be inside the "printmainmenu()" function where there is a while loop waiting for the user to choose a menu item. however, if during this you get a call, an interrupt handler will fire and will handle the call. now, suppose the user rejects the call, i want to print the main menu again. then, the last statement...
<rashad>	...of the incoming call handler should be a call to printmainmenu(), and after that you get a return statement. does this mean that the call handler will remain in the functions stack until printmainmenu() returns (which will never happen)?
<ori_b>	yes.
<rashad>	is there any way around this?
<ori_b>	also, note that interrupt handlers can come at any time, assuming it's *actually* an itnerrupt (or unix signal, or similar)
<ori_b>	which means that you can basically do nothing safely from it
<rashad>	because the interrupt handler needs to return to handle new interrupts. also, i don't want the function stack to keep growing with time and eventually fill the memory.
<ori_b>	that
<aidanh>	it's all hardware dependant, really
<ori_b>	also, imagine that you're in the middle of a call to 'malloc()', and you get an interrupt
<ori_b>	which then tries to allocate some memory before the malloc() call has finished updating the block pointers
<ori_b>	whee, memory corruption!
<rashad>	i see.
<xmppwocky>	ori_b: if it was already *in* the printmainmenu function, returning should continue it
<xmppwocky>	are you just coding on the bare metal, or do you have some handy toolkit
<rashad>	i will make sure to disable the interrupt before a malloc() then.
<xmppwocky>	usually they'll handle saving/restoring registers, etc.
<aidanh>	xmppwocky: hardware dependant
<ori_b>	rashad: that doesn't solve the problem, because it's not isolated to malloc.
<rashad>	i am using psoc 5 lp which comes with a "creator".
<xmppwocky>	aidanh: i mean, often the compilers you get will let you write a specific function as an interrupt handler
<rashad>	it's programmed in the c language.
<xmppwocky>	aidanh: which puts register saving stuff in the prelude for you
<ori_b>	just about any data structure that is shared betewen the interrutpt handler and the rest of the code is problematic.
<aidanh>	xmppwocky: hopefully
<rashad>	ori_b: ok i will look into this later, but how do i solve the function stack problem?
<ori_b>	one common approach is to *only* have the interrupt handler put an event into an event queue
<ori_b>	and not do anything else
<ori_b>	you'll need an atomic, lock free queue for this to work correctly
<xmppwocky>	note that this is basically the exact problem of multithreading, and a lot of the same solutions do apply- message passing, locks everywhere (don't do that), etc.
<ori_b>	(locks don't help with the corruption problem)
<ori_b>	xmppwocky: it's like multithreading, but harder
<rashad>	how do i call the printmainmenu() function after the handler returns?
<xmppwocky>	but you also have the convienience of being able to choose when to context switch
<xmppwocky>	well, out of the interrup handle
<xmppwocky>	t, r
<ori_b>	because locks don't help -- if you lock with interrupts, you have a choice between dropping or deadlocking.
<ori_b>	there's no blocking until the original handler unlocks.
<ori_b>	rashad: you don't handle the call in the interrupt handler. that's basically the solution.
<pokeymantrainer>	the interrupt handlers should be as short as possible.
<ori_b>	you note that there's a call, and then return.
<ori_b>	then the main loop notices that there was a call and handles it.
<xmppwocky>	rashad: the easiest thing is just to have a flag somewhere if there's a call going on
<xmppwocky>	and check that in the mainloop
<saparrastra>	java generics is useful for: a (ensure compile time safety) - b (ensure compile and runtime safety) - c (have nothing to do with type safety) - d (are useful only for java collections) ------------------------- i chose b -----------------what you think?
<pokeymantrainer>	the other multitasking stuff should deal with the events and do stuff based on the interrupts.
<rashad>	but i don't have only one main loop because i do have sub menus :s do i have to check for the call in every sub menu?
<xmppwocky>	saparrastra: it's not the answer your professor wants, but honestly d
<ctrlc>	hi, anyone has any experience with pos devices? what should i learn to program them?(c++) any library or coding style or something?
<ori_b>	rashad: yes, although it sounds like you really would want to restructure your code.
<denommus>	how i love ml's modules: https://gist.github.com/denommus/4e67e6cea1aa1c2fb587
<saparrastra>	xmppwocky: so to you b is wrong?
<denommus>	ctrlc: i have experience with pos devices
<pokeymantrainer>	rashad: you should also ask in #osdev
<denommus>	ctrlc: there's a java library for that
<denommus>	ctrlc: http://www.javapos.com/
<xmppwocky>	java generics have type erasure
<xmppwocky>	i *suspect* the "correct" answer is a
<xmppwocky>	because generics do affect things at compile-time
<xmppwocky>	but at runtime they're gone
<ctrlc>	denommus: i want to do it with c++. is it like embbeded  programming or what?
<csd_>	i'm trying to solve the shortest palindrome problem and my code complexity is way too high: http://pastebin.com/zzihbalw . are there any concrete changes i could make to get it to work for longer inputs, or is my overall approach flawed?
<saparrastra>	xmppwocky: that's true
<csd_>	problem statement: http://community.topcoder.com/stat?c=problem_statement&pm=1861&rd=4630
<denommus>	ctrlc: no, it's a lot easier than embedded programming
<saparrastra>	xmppwocky: so you would answer a?
<denommus>	ctrlc: you basically have to send the right bytes to the device. if you're on unix, you can even use its /dev entry
<ctrlc>	denommus: so all i need is to pick up a library and code like other softwares?
<denommus>	ctrlc: if there is a library for it, then yes
<ctrlc>	you mean like socket stuff?
<aidanh>	csd_: sounds like there'd be some greedy algorithm for it
<denommus>	ctrlc: i don't know, it depends
<denommus>	ctrlc: my job was to implement a cups driver for it
<csd_>	aidanh: i'm being told to solve it using dp
<xmppwocky>	oh god cups i'm so sorry
<ctrlc>	denommus: thank you.
<aidanh>	csd_: well, that depends on it being greedy, so, sounds about right
<denommus>	ctrlc: all i had to do was to take the data cups sent me and convert it to the bytes that the device needed
<denommus>	ctrlc: cups handled the rest. maybe you'll be as luck as i was
<denommus>	ctrlc: maybe you may just use javapos or something
<vendu>	hey denommus :)
<vendu>	hey aidanh :)
<vendu>	aidanh, did you mention you've done dungeon generation?
<aidanh>	heyy vendu
<denommus>	ctrlc: but you don't need to worry all that much about actual memory management and all that. you just send the device some data. the computer process most of that
<aidanh>	vendu: i did, but i'm about to sleep :/
<denommus>	(i even regret not knowing haskell back then :-/)
<bustylolichan>	how do i view all the windows form generated code for everything in visual studio 2013
<denommus>	vendu: hello
<bustylolichan>	the one that lists like all the components and their properties?
<znoosey>	bustylolichan: why would you want to look at that?
<bustylolichan>	because the designer itself keeps erroring saying the list box index is set to 0
<bustylolichan>	i want to see where it's defined and set it to not 0 or -1 as it probably should be
<ctrlc>	denommus: thanks a lot.:-)
<znoosey>	bustylolichan: i don't think they let you see that part
<bustylolichan>	they do... you have to look at the form.designer.cs file
<znoosey>	bustylolichan: ah, right, then open those files? :p
<bustylolichan>	i don't work with wpf much... what does it really offer over .net?
<znoosey>	bustylolichan: drag and drop ui
<bustylolichan>	but the .net fromwork sort of has that too
<vendu>	hey znoosey :)
<cima>	hey guys, what you think of this http://pastebin.com/02hkzrwu    i answered the second one, escaping user.....
<vendu>	aidanh, got any code to share though? :)
<znoosey>	bustylolichan: well yes, but this whole thing is .net
<znoosey>	good evening vendu, what's up?
<bustylolichan>	i guess.... i'm just wondering like... is it necessary... will it look nicer? lol
<bustylolichan>	is that all it offers really?
<xmppwocky>	cima: the middle two, and possibly the last one depending on whether it's enterprise(tm) or not
<cima>	xmppwocky: they said choose 1
<znoosey>	bustylolichan: no idea, i never use it
<bustylolichan>	me neither... i might try it... but i can't even figure out how to add events
<znoosey>	bustylolichan: in visual studio on your forms app?
<bustylolichan>	in the mpf app
<bustylolichan>	i want an onload event
<bustylolichan>	more like the on shown event really
<sloshy>	when you continue in a for loop
<sloshy>	does is still perform the operation at the end of the loop definition
<sloshy>	like if you do for(int x = 0; x < 5; x++) {
<sloshy>	and you do a continue in there
<sloshy>	will it still do x++?
<sloshy>	and if it does, how do i make it not do that?
<sloshy>	(c++)
<timemage>	sloshy, it short, you don't.  if you are trying to do that, what you're doing probably doesn't fit the pattern of a for loop well.
<sloshy>	im writing this ascii war game and its done except for this annoying bug
<sloshy>	basically it places units randomly on each side of the map
<sloshy>	and it has a series of if statemnts to ensure it doesnt place a unit one space adjacent to another
<timemage>	sloshy, and x is what, the number units?
<sloshy>	so it checks each each space in eight directions around the placement point and if any of them are occupied it uses a continue statement
<sloshy>	yeah
<sloshy>	but whats happening is, its still incrementing x even though it doesnt place a unit
<timemage>	sloshy, you could put do-while loop at the top of your for loop that chooses a position and loop while the position choosen is not valid.
<sloshy>	so i end up randomly having missing units on one side sometimes which makes the game unwinnable
<sloshy>	hmm ok ill try that
<sbrg>	statistical learning is like.. magic
<vendu>	znoosey, trying to code something :)
<sloshy>	http://pastebin.com/ip33wjuk
<sloshy>	i tried the while thing it didnt work
<sloshy>	heres teh original one with the continue thing that doesnt work
<sloshy>	actually i just realized what i can do is just decrement n
<sloshy>	why didnt i think of that
<sbrg>	sloshy: just use a distance measurement?
<sbrg>	oh ,you don't store position of units?
<sloshy>	putting n-- in the else statement seems to have fixed it on the left side
<sloshy>	but its still sometims doing it for player 2
<sloshy>	oh wait nevermind its still not fixed -_-
<sloshy>	i think im just gonna change it so players place the units themselves
<sloshy>	i wanted to do that originally but i got lazy
<sloshy>	but doing it randomly turns out to be more trouble than its worth
<sbrg>	sloshy: for a given position (x, y), the adjacent positions are given by (x, y) plus one of the following vectors: (-1, 0), (1, 0), (0, -1), (0, 1), (-1, -1), (1, 1), (-1, 1), (1, -1)
<sbrg>	store those, loop through, check all, get new random position if one of them already contains a character
<sbrg>	alternatively, store positions of characters on the map and use euclidean distance
<sbrg>	if the euclidean distance between two characters is less than two, they are adjacent
<darkelement>	what can i do in python to make a 2d array always available to be expanded? i.e. i want to set [1][2] to something it will let me
<darkelement>	expand it as i need a value, rather
<darkelement>	*need to set a value*
<sbrg>	darkelement: you want to be able to set arbitrary values?
<sbrg>	say, if the array is 2 x 2, you may suddenly want to set something in [300][56] or some such?
<darkelement>	no
<darkelement>	i may just want to make it 3 x2
<darkelement>	like [3][2] from [2][2]
<sbrg>	2x2 -> 3x2 means appending a new array to it. 2x2 -> 2x3 means appending a new array to the appropriate array.
<darkelement>	so i can't just append a string to make [2][2] into [3][2] or [2][3]
<sbrg>	if you explain more precisely what you want to accomplish, we may be able to come up with a better suggestion
<darkelement>	sorry
<darkelement>	i am trying to store strings in a 2d array, and it may end up being very long primary index-wise, and may be from 1 to [also could be very long index] secondary index-wise
<darkelement>	my program is going to <hopefully> make this array as it runs
<sbrg>	alright. what is it that determines where they go in the array?
<bustylolichan>	is anyone here familiar with c# and the mvvm pattern?
<darkelement>	its a question -answer thing, where there is 1-n responses for each question, so it is going to sort them like [question[response][response]]
<sbrg>	why not use a dict or some such?
<sbrg>	map from question index to a list of answers or some such
<darkelement>	does that allow multiple values to be stored under a key?
<darkelement>	i would love to use that if so
<sbrg>	each question has multiple answers, yes? and you want to be able to add new questions as well as new answers to a given question?
<ori_b>	a dict can store a list, yes.
<ori_b>	it can also store another dict.
<sbrg>	oh, if that's what you mean,t then yes
<sbrg>	you can chain those fuckers up as you please
<darkelement>	sbrg: yes
<darkelement>	aww yea
<darkelement>	sbrg: how can i do this?
<sbrg>	https://docs.python.org/2/library/stdtypes.html#typesmapping
<darkelement>	sorry
<sbrg>	take a look at setdefault, for example.
<_blizzy_>	bustylolichan, i'm familiar with c#
<bustylolichan>	have you used wpf?
<django_>	these ubuntu laptops
<django_>	thoughts?
<sasazuka>	i've set up aliases in .ssh/config but it doesn't seem that ssh-keygen knows about these aliases - any way to make it aware?
<denommus>	pyon: ping
<cima>	multithreading is an extension of multiprocessing but within a process scope?
<denommus>	cima: multithreading is usually seen as multiple concurrent tasks that share the same address space
<cima>	denommus: so it's not
<denommus>	cima: calling it "multiprocessing within a process scope" would be misleading, because you can have user-space threads
<darkelement>	how can do qr_dict[value].append(value2) to add values to the key?
<darkelement>	(if that doesn't already work)
<denommus>	darkelement: i didn't understand your question. i don't even know what language is that
<darkelement>	python
<darkelement>	i want to continually add keys and values to a dictionary
<denommus>	darkelement: qr_dict[key] = value
<darkelement>	ok, but how can i add more values to that key
<darkelement>	i want to have an array of continually increasing values for each key
<denommus>	darkelement: check if the key exists. if it doesn't, initialize the cell with [value]
<denommus>	darkelement: if it already exists, do qr_dict[key].append(value)
<darkelement>	i can assign an array of values to the key, however i want to be able to append values to the array of values
<darkelement>	this will work?
<ar45>	people think that computer science is the art of geniuses but the actual reality is the opposite, just many people doing things that build on each other, like a wall of mini stones.
<denommus>	darkelement: have you tried it?
<darkelement>	no, i thought i was wrong
<darkelement>	:p
<_blizzy_>	that's one thing i like about being gay
<_blizzy_>	i'll be surrounded by men in the compsci field.
<darkelement>	...
<darkelement>	lol blizzy
<_blizzy_>	wow, that sounded wrong out of context. sorry, darkelement
<_blizzy_>	but it's true. c:
<darkelement>	want to meet you one day lol
<denommus>	_blizzy_: i ended up marrying someone that isn't on the field
<_blizzy_>	me too, lol.
<cima>	what's the correct answer here?            different ways of asynchronous communication between web browsers and web servers include: -jni -jsp -websockets -servlet 2.1 -nio
<_blizzy_>	denommus, oh.
<_blizzy_>	cima, seems like homework.
<darkelement>	cima: homework?
<_blizzy_>	c:
<denommus>	_blizzy_: so i don't know if being surrounded by the gender you're attracted to makes any difference
<ar45>	cima: websockets?
<_blizzy_>	denommus, oh, ok.
<cima>	it's a test i just did, chose servlet 2-1
<denommus>	_blizzy_: how old are you?
<_blizzy_>	denommus, 17
<darkelement>	there is no age on the internet
<darkelement>	:]
<denommus>	cima: websockets is definitely a way
<denommus>	cima: now... the others don't even make sense
<darkelement>	yea
<cima>	isn't all communication between web browsers and web servers asynchronous?
<darkelement>	i agree with denommus on that one
<darkelement>	websockets are awesome
<darkelement>	let me make my button monitor for the reddits as well
<denommus>	cima: uh, no
<darkelement>	no
<darkelement>	many different ways
<denommus>	cima: making the usual http request is synchronous. the tab "stops" while it waits for the response
<cima>	so jsp and servlets would be synchronous?
<denommus>	cima: people started doing async with xmlhttprequest
<cima>	ajax
<denommus>	cima: that doesn't make sense. jsp and servlets are server-side technologies, they just respond to http requests
<denommus>	cima: they don't care whether the request was synchronous or asynchronous
<cima>	and nio?
<denommus>	cima: i don't know what nio is
<darkelement>	i just thought of websockets when i saw those answers
<denommus>	cima: ah, nio seems to be non-blocking io
<darkelement>	interesting.
<denommus>	cima: which also don't make sense, considering that who does io most of the times is the server, not the client
<denommus>	cima: where did you take that question from?
<cima>	a test they did to me
<cima>	to see if i am crazy
<cima>	or dumb
<darkelement>	did you choose correctly?
<cima>	i chose servlet
<cima>	:-d
<darkelement>	sorry m8, it seems websocket
<darkelement>	computer science test or just job interview?
<cima>	job
<darkelement>	ah, so out of college?
<denommus>	i was completely unproductive today
<cima>	no not college, just some job stuff
<darkelement>	cima: nice one
<lseactuary>	anyone know of a good programming solution that could categorise a facebook page dependant on vertical e.g. cpg, government, etc and then auto update if the profession etc of the person changed?
<lseactuary>	or include multiple verticals if they operated across multiple verticals?
<cima>	another one: what will happen if two threads of the same priority have been called to run simultaneously?       chose  "it is dependent on the operating system"
<darkelement>	i think that it will do one then the other, or allocate for both or switch between them quickly
<darkelement>	that's why they have thread.sleep or thread.wait to wait for the other one to go along some, i believe
<darkelement>	that moment when your file is too big for notepad
<inphase>	darkelement: at which point you realized it was 2015, and you were using notepad?
<cima>	well here are all the options:       http://pastebin.com/xhhkqytv
<darkelement>	notepad++
<darkelement>	and only for output
<darkelement>	this time anyway
<lseactuary>	any ideas
<lseactuary>	?
<cima>	anybody?  http://pastebin.com/xhhkqytv
<lseactuary>	anyone know of a good programming solution that could categorise a facebook page dependant on vertical e.g. cpg, government, etc and then auto update if the profession etc of the person changed?
<zerorooter>	i got a job o.o
<zerorooter>	i left half the test blank :o
<inphase>	zerorooter: try that again without the surprised look.  you've got to work on faking that confidence.
<millerti>	ubuntu is lousy with retina displays.
<zerorooter>	haha
<koollman>	zerorooter: congratulation. although you seem surprised. was it unexpected? were you captured by a headhunter ? :)
<zerorooter>	well i thought i bombed the interview
<zerorooter>	i didn't know half the technologies they were asking me about
<magnus_rm>	they hired you because they think you are honest :)
<xgc>	zerorooter: and most of them were not required knowledge for a new hire.
<zerorooter>	ah
<zerorooter>	it's a paid internship basically will be my first job
<koollman>	being honest about not knowing is often ok. faking it is very bad :)
<koollman>	and rarely work. and if it works ... well, then you should be worried about the skills of whoever let you in, bad sign too :)
<zerorooter>	yeah haha
<koollman>	but saying "i can learn"... that's fine most of the time, unless they try to recruit an expert on something
<zerorooter>	yeah
<zerorooter>	half the exam was js
<zerorooter>	i just told them i would go learn it i left them mostly blank :o
<inphase>	zerorooter: wait until after they are convinced you are doing a good job, but then ask them what the other applicants did on that exam.
<zerorooter>	haha
<zerorooter>	i read some funny stories about that in cracking the code interview
<zerorooter>	ofc they didn't even ask me any algorithm questions for some reason
<magnus_rm>	zerorooter, so what do you think is the reason you got hired?
<zerorooter>	i don't know :o maybe they liked my appearance and my italian accent
<zerorooter>	and i did some side projects too
<magnus_rm>	ok :)
<_blizzy_>	zerorooter, curious
<_blizzy_>	how old are you?
<zerorooter>	21
<_blizzy_>	cool.
<_blizzy_>	congrats on your internship.
<zerorooter>	ty ^_^
<_x_c_v_b_>	i don't get how companies like google can split tbps of data to thousands of server
<inphase>	zerorooter: did you mention that you know how to cook good pasta?
<_w_>	magic?
<cima>	what you think about this one?       http://pastebin.com/3iltapx0         chose 2 and 5 i think
<zerorooter>	inphase, yes and i mentioned about bread too :o
<inphase>	zerorooter: because that could be a very good reason to pick an intern candidate.
<ari_>	hmm
<himiku>	hi everyone!
<himiku>	guys, do you know any elegant/right way to implement blocking lua call? i'm readin "programming in lua" book, but didn't saw anything related yet
<likecolacola>	in my university i have this next year and a half for doing 370 hours of developing practices on a a business interested in scholars... in september we start java... i wonder if it truly makes sense from a economical point of view to look for a company which works with c for my practices or if i should w8 to learn java and do them there
<likecolacola>	that english xd, sorry
<munt>	likecolacola: are you talking about work placement vs continuing without work placement ?
<likecolacola>	munt, to be honest i think i already answered my question..
<likecolacola>	not really
<likecolacola>	here in eu you have to do almost 400 hours of entry job on your profession to get the title
<likecolacola>	without getting paid
<likecolacola>	i wondered if it made any sense to do these entry job hours in c
<likecolacola>	but to be honest it does not matter because i will learn java anyway, with or without doing the entry jobs hours in that language
<ori_b>	likecolacola: meh, doesn't matter; do what you prefer :)
<likecolacola>	ye
<cima>	http://pastebin.com/3iltapx0         chose 2 and 5 i think
<cima>	likecolacola: which country you live in?
<likecolacola>	spain
<cima>	you plan to stay there or migrate?
<cima>	i think not so many good software jobs there
<likecolacola>	hmm
<likecolacola>	i plan on getting a 4h/day job and keep studying the rest of the day
<likecolacola>	my studies are below university
<likecolacola>	so i plan on finishing them and then i might get a mid day job while studying the rest of the day
<rantingdude>	how usable are immutable arrays? you can do a lot with immutable lists and trees.
<dexx1_>	line 3 and line 16: how do i properly render a template in underscore.js ? http://pastie.org/private/f9qw087sy6hswfql5yxl6w
<likecolacola>	rantingdude, what's an immutable array?, the length is fixed or you can't modify it at all?
<rantingdude>	everything is fixed
<likecolacola>	so you cannot modify?
<rantingdude>	nope
<likecolacola>	that's like a const array in c
<rantingdude>	it seems that creating a new array from a existing one is more expensive than working with persistent lists.
<likecolacola>	it optimizes the performance
<likecolacola>	it also tell the programmer (when reading the source)
<likecolacola>	that the array is not going to be modified
<likecolacola>	which facilitate the understanding..
<ori_b>	rantingdude: depends.
<_slade_>	const doesn't necessarily improve performance
<rantingdude>	and const is no guarrantee in c for anything.
<ori_b>	rantingdude: basically, copying data around is expensive, but so is chasing pointers.
<ori_b>	there's no blanket "x is faster" statement without knowing circumstances (usually).
<likecolacola>	rantingdude, sure it's not guarantee.... anything is guarantee in c
<likecolacola>	but if i am not mistaken const will drop you a warning when trying to modify etc
<ori_b>	yes, although you can cast it away.
<_blizzy_>	i'm starting to dislike people in certain channels
<_blizzy_>	._.
<_blizzy_>	i feel stupid sometimes
<_blizzy_>	compared to others in other channels.
<rantingdude>	do immutable databases exist in the real world?
<ori_b>	rantingdude: define "immutable"?
<magnus_rm>	the world is an immutable database.
<magnus_rm>	:)
<ori_b>	there are append only ones, although they still have to mutate to handle disks dying and so on...
<fragment>	first question: isn't a "two-to-many
<fragment>	" database the same as a many-tomany#
<fragment>	?
<magnus_rm>	two too many
<rantingdude>	ori_b: i don't mean the underlying implementation details, only the implementation of the database itself.
<ori_b>	yes, there are append only stores, worm file systems, etc.
<ori_b>	for a while, worm drives were a "big" thing
<denommus>	pyon: map needs the specific type declaration
<denommus>	pyon: i had declared the type wrong in the .mli file
<denommus>	pyon: i had made ('a -> 'b) -> ('a, 'a) wire -> ('a, 'b) wire, but that's obviously wrong
<dexx1_>	line 12 doesn't run for some reason because of line 17, can someone help? http://pastie.org/private/br5fz1kbufv8fazizie7eg
<vdamewood>	hi, people, etc.
<vdamewood>	i'm scared to reformat/reinstall my system.
<denommus>	how didn't i see that? https://github.com/denommus/netwireocaml/commit/cb6767ac1a9310fd38b60459a6766acece4fc1a6
<denommus>	i feel stupid
<vdamewood>	if my girlfriend's name were stupid, i would feel stupid as often as i possibly could.
<vdamewood>	denommus: if it helps, i have no idea what i'm looking at.
<gune>	ams: just an update from before, the issue was indeed int as variable type, was able to do a test case with long's instead and no read issue this time. thanks for the help earlier!
<gune>	gotta go, see ya!
<vdamewood>	did someone just thank ams for help?
<lf94>	yo
<lf94>	i beefed up my github: http://github.com/lf94
<likecolacola>	do you guys feel like html/css is not programming xd?
<ori_b>	likecolacola: that is correct.
<inphase>	likecolacola: those are markup languages, not programming languages.
<ori_b>	you can't implement an algorithm in html/css.
<vdamewood>	likecolacola: 'feel'? no, it's a matter of fact.
<inphase>	likecolacola: i'll change my mind after someone gives me a working tetris using only html and css.
<likecolacola>	hmm
<likecolacola>	inphase, css is a stylesheet, not markup iirc
<ori_b>	likecolacola: same difference. when you can implement a turing machine in it, let me know.
<vdamewood>	@punchtape { background-color: #fef; }
<vdamewood>	... nope, still doesn't work.
<inphase>	likecolacola: i consider that still markup.  it's just an abstract / categorical way to do markup.
<likecolacola>	do you guys believe i was not aware about the differences between html/css and programming languages when i asked the question?
<vdamewood>	likecolacola: i didn't care enough to put effort into making a decision.
<likecolacola>	inphase, why would you consider it a markup language when it has not marks?
<lf94>	likecolacola you are asking silly questions
<ori_b>	likecolacola: point; in the future i'll make sure to ignore questions that make you seem ignorant, and assume you're just trolling.
<lf94>	likecolacola, i'm going to assume you are young
<likecolacola>	haha
<inphase>	likecolacola: because it is a file full of marks?
<likecolacola>	by any chance you were born in 1994?
<likecolacola>	inphase, that would be embedded css into a markup file.. sry
<lf94>	likecolacola, yes.
<lf94>	i'm young too
<denommus>	vdamewood: look at the .mli file
<likecolacola>	wrong..
<lf94>	but i've been doing this for half my life already
<denommus>	vdamewood: those are type declarations
<denommus>	vdamewood: i have put 'a where there should be a 'i
<denommus>	vdamewood: so i was doing ('a, 'a) wire instead of ('i, 'a) wire and getting wrong types
<likecolacola>	i am not used to channels where average age is 15
<likecolacola>	sorry...
<lf94>	reported
<likecolacola>	ori_b, if you did not notice, i answered to inphase, not to you...
<darkpassenger>	hi all
<darkpassenger>	toucheeey
<darkpassenger>	hey whatever happened to #defocus
<vdamewood>	it had an identity crisis. it now calls itself ##chat.
<timemage>	likecolacola, it's not exactly a precisely defined term.  but, from what i can tell that connection is the strongest determining factor in whether or not someone will call something a programming language.  i'm guessing most would not consider regular expressions or bnf to be programming languages.  you might be interested in: https://en.wikipedia.org/wiki/chomsky_hierarchy
<likecolacola>	"it now calls itself" ? xd vdamewood
<ori_b>	timemage: yep, basically, something that was designed for the purpose of turing completeness is what it comes down to
<ori_b>	(even as a joke)
<ori_b>	(but not by accident.)
<vdamewood>	it looks like my download will be done in 3 hours. this sucks.
<timemage>	ori_b, i was going to mention something earlier about the possibility of exempting the term from things you don't deem practical =).
<ori_b>	timemage: well, "deem practical" is a bit overly restrictive
<ori_b>	(*points at malbolge*)
<timemage>	ori_b, it also depends on what you mean be practical.  perhaps the whole aim to amuse or frustrate. :)
<ori_b>	sure.
<vdamewood>	oh, good. now my download will be done in 20 minutes.
<likecolacola>	timemage, thanks for the reading
<stumbles>	stumbles@arch:/home/stumbles  $ kill -9 23248
<stumbles>	i had to
<stumbles>	i didnt want to
<likecolacola>	timemage, i meant the link
<likecolacola>	timemage, what's bfn?
<timemage>	likecolacola, meant to be bnf
<pyon>	denommus: "map's type" --> sorry, i was away. it should be ('a -> 'b) -> ('c, 'a) wire -> ('c, 'b) wire, righ?t
<ori_b>	brainfuck notation.
<ori_b>	*cough*
<likecolacola>	timemage, hehe i am afraid i made a typo.. yet i still does not know what bnf stands for
<timemage>	likecolacola, course you'd have to make my try to spell it.   erm, backus naur form?
<likecolacola>	thanks again :>
<guest20647>	any idea how to set my bitorrent client download subtitles after finishing the file?
<denommus>	pyon: of course
<denommus>	pyon: commit with the fix: https://github.com/denommus/netwireocaml/commit/cb6767ac1a9310fd38b60459a6766acece4fc1a6
<denommus>	pyon: i even feel stupid
<amigojapan>	guest20647: #1 that does not sound like a programming question
<pyon>	guest20647: subtitles are a part of the file.
<darkcthulhu>	any openmp folks here? can someone tell me the downside of always using the lastprivate directive v/s the private directive?
<likecolacola>	are c programmers well paid in comparison to application programming?, java, etc.. c++
<amigojapan>	pyon: i have been pretty lucky,  that i dont usually need to read subtitles, because most things i watch are in one of hte languages i can speak :)
<likecolacola>	s/programming/programmers
<pyon>	amigojapan: heh.
<amigojapan>	likecolacola: what do you mean by application programming, you mean smartphone apps?
<pyon>	likecolacola: it varies from programmer to programmer.
<woggle>	likecolacola: recruiting for well-paying programming jobs is not primarily about what language one happens to use.
<likecolacola>	woggle, pyon, hmm ok...
<fragment>	is two-to- many the same being many-to-many?
<pyon>	fragment: context?
<likecolacola>	amigojapan, well, to be honest what i wanted to know is c (system, embedded) as a career comparing to other areas
<amigojapan>	likecolacola: well, if you can get into one of the major embeded systems companies, i guess it should be well paid
<woggle>	likecolacola: focus on the 'embedded' or 'system' part, not the c part.
<fragment>	i have two tables, table a has an id and two names. table b just has an id and a name. the two names in table a should be names in table b, but both names in table a have to have a value in them.
<amigojapan>	likecolacola: i dont think you can expect to get a higher salary just cause you know c
<likecolacola>	woggle, amigojapan, ok
<amigojapan>	likecolacola: if at all, knowing many langauges can probably get more jobs more easily
<likecolacola>	amigojapan, oh, i did not mean that
<likecolacola>	i meant the system/embedded route with c as a starting point, nothing else
<woggle>	"c as a starting point" is the wrong way to look at this sort of thing.
<likecolacola>	woggle, how?
<amigojapan>	ok likecolacola ,   embeded systems is one of the fields where c is often used, yes
<woggle>	the knowledge employers who pay a premium for "embedded programmers" care about are mostly not in the differences between c and, say, java.
<fragment>	pyon: is that an okay example or?
<likecolacola>	amigojapan, yes, what i really meant is to compare the up and downs of "pursuing" a system developing career in comparison to other areas
<amigojapan>	fragment: you cant end a sentence in “or”
<planckwalk>	it's a sentence fragment
<woggle>	likecolacola: i would not suggest choosing a type of programming based on your perception of the salaries for that.
<vdamewood>	amigojapan: you just did.
<inphase>	amigojapan: to be fair his name is fragment.
<amigojapan>	likecolacola: ok, i  know someone that worked at xilinx,  but he quit cause he said it was too stressful
<amigojapan>	heh, true vdamewood
<likecolacola>	woggle, i don't follow you, you meant to remember that java is used for system programming on android or..?
<woggle>	likecolacola: employers pay a premium for highly skilled programmers even in, say, webdev. do something you can be motivated at.
<fragment>	amigojapan: not even if i use the word alligator?
<pyon>	fragment: tables should only refer to each other by their ids, not by any other fields.
<amigojapan>	fragment: i dont know what that is
<pyon>	fragment: so it sounds like your tables are misdesigned.
<vdamewood>	amigojapan: alligator = wani
<pyon>	fragment: it would be easier to fix the problem if you say what exactly a and b are.
<amigojapan>	vdamewood: kotoba wani tte nani?
<vdamewood>	or does wani mean crocodile?
<likecolacola>	woggle, ok
<amigojapan>	vdamewood: both crocodile and alligator are wani
<fragment>	pyon: i tried to come up with an example that was identical to my own. they are referring based on the ids in the table, but looking up the name
<vdamewood>	oh, okay.
<vdamewood>	amigojapan: i'm not familiar with the tte construction.
<likecolacola>	amigojapan, thanks for the feedback
<amigojapan>	np likecolacola
<amigojapan>	vdamewood: tte is for quoting things…    for example kare ga “un” tte iimashita   ‘he said “yes”’
<fragment>	pyon: table b has two columns: id and gps coords, table a has an id, start and end location
<amigojapan>	vdamewood: in japanese you dont really need quotation marks doe to tte
<amigojapan>	do to tte*
<pyon>	fragment: can gps coordinates appear duplicated in b?
<vdamewood>	amigojapan: due to tte
<amigojapan>	vdamewood: thanks
<fragment>	pyon: nope, but they shouldn't be close together either
<vdamewood>	amigojapan: so, you were just trolling? :)
<amigojapan>	vdamewood: hmmm?  what part of what i said was trolling?
<amigojapan>	vdamewood: i guess he ment “or not”   but in english i cant be sure because it is vague, that is all
<amigojapan>	in japanese ending with soretomo, would be normal
<pyon>	fragment: to be frank, i'm not familiar with geolocation databases. from a purely relational point of view, a shouldn't have any coordinate fields - instead, the start and end locations should be start and end ids.
<likecolacola>	woggle, i will keep in mind to do what i am motivated at
<vdamewood>	amigojapan: when you said <amigojapan>	fragment: i dont know what that is tte, context gave me the impression you meant alligator.
<woggle>	amigojapan: i usually interpret '___ or?' [often spoken with rising tone] as '___ or what?'
<pyon>	fragment: but i wouldn't be surprised if geolocation databases have special needs that require deviating from the relational model.
<fragment>	pyon: sorry, using the id in table b is what i was referring to, i'm not using the actual gps coords
<amigojapan>	vdamewood: i dont see such an entry in my typing history
<pyon>	fragment: oh.
<pyon>	fragment: then it isn't really two to anything.
<pyon>	fragment: it's just two separate relationals, each one of which is one-to-many.
<pyon>	two separate relations*
<amigojapan>	woggle: in japanese when something ends in or? (soretomo?) it means “or not?”
<pyon>	fragment: it's just that the two one-to-many relations happen to be between b (one) and a (many).
<vdamewood>	amigojapan: bulbasaur.
<amigojapan>	vdamewood: bulbasaur , not exactly an aligator
<vdamewood>	amigojapan: i meant that to mean "weird, isn't it?"
<jgan>	in rpn, what would be done first?  5 10 + 15 -
<jgan>	5 + 10?
<pyon>	jgan: yes.
<woggle>	amigojapan: makes sense. the '__ or?' is i think an example of a general english colliqual thing where questions are formed by stopping a sentence with a question mark/rising tone and expecting the other person to fill in the blank.
<fragment>	pyon: in the document i received it's stated as being 'two-to-many', which i didn't get as i thought you could only use one-to-many or many-to-many
<amigojapan>	vdamewood: hmm, i am having trouble following you today
<magnus_rm>	this sentence does not have two too too many.
<vdamewood>	amigojapan: the joke being that buibasaur is フシギダネ
<amigojapan>	ok woggle , maybe it would be better to write or…?   cause there is a pause in such a coloquialism
<stumbles>	i did it
<stumbles>	wewt wewt
<woggle>	amigojapan: i think it is, but i definitely use ellipsis too much.
<amigojapan>	vdamewood: i still dont get the joke
<vdamewood>	不思議だね。
<amigojapan>	vdamewood: ah ok!
<amigojapan>	vdamewood: i did not know that that was the origin of the name bulbasaur :)
<vdamewood>	amigojapan: it's not. it's 不思議種
<vdamewood>	amigojapan: but they sound the same, so it's a pun.
<amigojapan>	i see
<tens0r>	chinese?
<tens0r>	mandarin*?
<amigojapan>	tens0r: japanese
<amigojapan>	oh btw hi sadale
<tens0r>	fair enough, my mandarins rusty but i recognized the frst two characters lols
<sadale>	amigojapan, hi :3
<amigojapan>	tens0r: in japanese 不思議 is like weird, strange, interesting
<vdamewood>	the evolution route is: フシギダネ（不思議種）　ー＞　フシギソウ（不思議草）　ー＞　フィシギバナ（不思議花）
<amigojapan>	interesting vdamewood , so seed, grass, flower
<vdamewood>	yep.
<tens0r>	amigojapan: very intersting, the litera translation in mandarin is "not incredible" hahahahahah
<vdamewood>	i think fu/bu has a different meaning in japanese than mandarin.
<vdamewood>	nope. it's a negation prefix in japanese, too.
<amigojapan>	vdamewood: there are words where fu means not,,,  like 不真面目
<tens0r>	vdamewood, yep yep
<tens0r>	vdamewood: you know pinyin?
<vdamewood>	tens0r: yes, mostly.
<vdamewood>	tens0r: there are some sounds i know mostly a 'variant of other sound', such as 'q is a variant of ch',
<vdamewood>	(though it's actually different, ch is just the closest familiar phoneme)
<tens0r>	vdamewood, hen hao lolzzz
<amigojapan>	ni hao ma
<tens0r>	amigojapan: ni zenmeyang lmao.
<tens0r>	vdamewood, yeah phonetics is a bitch
<amigojapan>	tens0r: sorry, i really only know japanese ;)
<vdamewood>	你好吗
<ltcd>	hey. does anyone in here know jquery and/or ajax? basically, need to add some basic code into my website to get full marks for this project.
<tens0r>	amigojapan: haha its all good. are you native? ni zenmeyang means "what's up"
<vdamewood>	tens0r: can you do tone marks?
<amigojapan>	ltcd: the ajax tutorial on w3schools it not that bad imho
<vdamewood>	i hate w3schools.
<amigojapan>	tens0r: no, but i have lived 13 years in japan
<ltcd>	amigojapan: yeah but i hate w3...
<ltcd>	vdamewood: xd
<amigojapan>	everybody hates w3schools as a meme, but it is nto really that bad
<vdamewood>	i hated it before the meme.
<ltcd>	amigojapan: basically i just need something basic i can add, the tutorials there don't seem to start with the basics.
<denommus>	ltcd: if you use jquery you don't need to use xmlhttprequest directly
<vdamewood>	ltcd: so, what do you need to do?
<tens0r>	vdamewood: yeah luckily my chinese teacher forced it into our minds lol. turned out to be helpful
<vdamewood>	amigojapan: i made an ajax interface to my parser library with jquery :)
<tens0r>	amigojapan: are you doing programming work out there?
<amigojapan>	vdamewood: i made an ajax japanese web dictionary
<ltcd>	 xmlhttprequest  <--- this is a pain.              vdamewood: basically anything relevent, can be simple stuff really. i have some previous javascript experience but since i don't have time to go through ajax and jquery i'm asking here.
<amigojapan>	tens0r: not really, i am more of a language teacher, and do programming on my spare time
<ltcd>	vdamewood: not worth going through hours of reading when i only get 1% extra marks.
<vdamewood>	ltcd: ah, but what you learn will be much more helpful in the future.
<vdamewood>	ltcd: so, still, i have no idea what you are trying to do.
<vdamewood>	ltcd: pick a feature to implement and describe it.
<amigojapan>	vdamewood: he just wants to add random ajax features to his project for extra points
<ltcd>	vdamewood: it's almost 3am, my team decided not to tell me until day before that our grade won't be a perfect 100% unless i add this in.  what amigojapan said basically.
<amigojapan>	but he does not want to study it
<ltcd>	amigojapan: i will after summer holiday, this is just  a taster. i'm not a skid.
<vdamewood>	ltcd: like i said, pick a feature to implement and describe it.
<ltcd>	vdamewood amigojapan:      well how about i add some sentences to the page which are a list of instructions, then when clicked they disappear? i saw this in the tutorial on w3schools but couldn't follow it :-(.
<vdamewood>	that doesn't involve ajax.
<numb3rz>	im just getting started with learning python i have been reading the info on the website but it feels like i'm missing something-should i have read something else before going into python?
<amigojapan>	ltcd: ajax is when you have a server client interaction
<vdamewood>	numb3rz: no. many programmers suggest python as a first language, and the python documentation as introductory material. what don't you get?
<ltcd>	amigojapan: good point. can you think of something, i already am using php with pdo to access db.
<amigojapan>	ltcd: by the way, it does not seem you know enough to hate w3schools,   imho
<amigojapan>	ltcd: why dont you offer a list of autocomplete words from the server like google does on it’s search, you can accomplish it thru ajax
<ltcd>	amigojapan: first place i went for html and php, taught me enough. i don't hate it (although there used to be mistakes), just right now i need someone to point me in the direction of some basic jquery and ajax as i don't have time to read through it, practice etc... it's 3am and through no fault of my own (feel free to check my website) i've been told to add 2 random extra things.
<ltcd>	amigojapan: please just something more basic. i'm already reading from db many times in program, hashing passwords etc... is there nothing i can do? just needs to be even a single line of code.
<amigojapan>	ltcd: nobody is going to do your homework, that is called being a “help vampire”
<vdamewood>	alert("hello, world!");
<ltcd>	amigojapan: i have no idea of what i can do with ajax, it's not my fault it hasn't once come up in our source and my project manager sucks.
<ltcd>	course*
<numb3rz>	vdamewood: wow ok i'm trying to grab the concept of modules, keywords,etc. and logical lines??
<amigojapan>	ltcd: try this one http://www.w3schools.com/ajax/ajax_php.asp
<vdamewood>	numb3rz: hmm... logical lines?
<ltcd>	amigojapan: i didn't once ask for source code, ajax isn't even that hard if you have the time to go through it. what i need is a suggestion of something basic and quick to add, as well as where i can go to implement this quickly.
<vdamewood>	numb3rz: got a link to where that's mentioned?
<amigojapan>	ltcd: type an a and you wull see it suggests names even before you finish typing
<ltcd>	amigojapan: that's nice but wouldn't make sence to put into program sorry, any other ideas?
<vdamewood>	oh, hey. xcode is done downloading.
<ltcd>	sense*
<amigojapan>	ltcd: i have no idea what your program is, sorry, i dont read minds
<ltcd>	amigojapan: my bad, it's a cv (resume) system. lets student upload, download, then staff can review.
<ltcd>	html/css, php (pdo for the sql part).
<ltcd>	luckily i have some javascript knowledge so i was able to add a map in earlier.
<amigojapan>	ltcd: so then you could add an autocomplete for one of hte fields in teh resume, i guess
<ltcd>	but ajax and jquery i know nothing about, and didn't even know it was a requirement. university is aware of this, so for this reason it's worth just 1% of the total mark.
<amigojapan>	ltcd: if you are nto going to study it, give up hte 1%
<ltcd>	amigojapan: i will next year, when i have a university year, not tonight when i'm tired, hungry, cold and have 6 hours.
<amigojapan>	ltcd: so basically ajax is when you get stuff from a sever side program into a js clientside program dynamically
<amigojapan>	ltcd: ok, so give up on getting that 1%
<ltcd>	amigojapan: are you trolling, or you think i'm lying to you? nothing annoys me more than c/p which i can't even do fyi as they have software to detect it.
<likecolacola>	from my point of view if you're not spon feeding there's nothing wrong with giving a hand with homework
<ltcd>	projects and their management. so far i have had a perfect score, i'm not losing out after this no fucking way.
<amigojapan>	ltcd: not trolling, just have this in mind http://www.skidmore.edu/~pdwyer/e/eoc/help_vampire.htm
<ltcd>	amigojapan: do you know what pain in the arse hole it is to learn all of the project management techniques etc... by heart?
<numb3rz>	vdamewood: yea doc.python.org
<likecolacola>	irc is another resource for learning, if it's not wrong to use google it's not wrong either to use irc xd, at least from a morality perspective or whatever you call it
<ltcd>	amigojapan: you make a good point alright. i am here because i have no choice and thought you'd probably have a moment in your life where you could relate to my situation and help, but i guess you're a lone wolf?
<amigojapan>	ltcd: i am totallyw illing to help,   if you have a consice question….   nto just “give me an ajax thing to put into my project”
<vdamewood>	numb3rz: the words "logical lines" don't appear anywhere on that page.
<ltcd>	amigojapan: also it's impossible for me to cheat as it's detected. all i want is something basic to add, and a place to quickly read up on it. i'm not asking for a 3000 line source code.
<amigojapan>	likecolacola: yeah, but one does not learn by having a program made for him
<ltcd>	amigojapan: anything basic a cv system would use. idk checking if a variable in php has a "." in it as a filename should is fine.
<numb3rz>	vdamewood: srry https://docs.python.org/3.2/reference/lexical_analysis.html
<amigojapan>	ltcd: i already gave you the w3schoosl ajax link ot read up on it
<likecolacola>	amigojapan, agree
<vdamewood>	numb3rz: ah, the language reference is considered 'advanced' material.
<ltcd>	amigojapan likecolacola: i don't want it made, fuck sake stop making me hurt my fucking broken hand trying to explain explain explain. seriously, i'm having some problems here because all throughout life i try to do the right thing. now as a fucking human being i'm asking for the benefit of the doubt, if not skype me now and i'll prove it to you.
<amigojapan>	ok ltcd , you can do that in pure javascript , there is no reason to use ajax
<likecolacola>	amigojapan, thought irc is not only for learning but for sharing overall.. anyway not trolling or trying to cause polemic, just random thoughts... i am not even following the entire conv
<ltcd>	amigojapan: as i have said 5 times now i must do 1 thing in jquery and 1 thing in ajax.
<numb3rz>	oh ok but then that means i'm going to come in contact with that later on down the line...might as well get some knowledge about it now rite?
<numb3rz>	vdamewood:^^
<vdamewood>	numb3rz: the tutorial is where you should start. you should move on to the library reference when you feel comfortable with working with python.
<ltcd>	likecolacola: here's the situation. i have work due tomorrow, and my team (that did fuck all) decide to tell me now i also need some basic jquery and ajax. we never were tuahgt it, we get taught it next year. i'm tired, it's 3am and just need a suggestion of something to add, and a place to look.
<amigojapan>	ltcd: ok,   use jquery to move some item around, then use ajax to suggest filling out the name field, as i already pointed out
<likecolacola>	ltcd, look, if i knew jquery i would do your homework but i don't... what do you want to do exactly?
<vdamewood>	numb3rz: no. there's a prerequisite to understanding the language reference material and if it were a university course, you probably wouldn't encounter it until third for fourth year.
<amigojapan>	likecolacola: he does not know what he wants to do, except add random jquery and ajax
<ltcd>	likecolacola: do my homework? mate, i have coded an entire fucking site. you think i want to be on an irc chat at 3am in the morning?
<ltcd>	i'll probably do what amigojapan said.
<likecolacola>	look at this
<pyon>	just wondering. what could a music player need a full-blown relational database server for?
<likecolacola>	pruebaphp11.hol.es/responsive
<amigojapan>	ltcd: here is the most basic jquery http://www.w3schools.com/jquery/default.asp    just hide something
<pyon>	i'm installing amarok, and it turns out that, amongst other things, pacman is installing mariadb. which is... well... fine with me, but why?
<amigojapan>	ltcd: hide it when it is clicked
<ltcd>	amigojapan: good idea.
<puddlejumper>	pyon: store data
<pyon>	puddlejumper: why couldn't it use, say, sqlite?
<puddlejumper>	pyon: images lyrics and things
<pyon>	ah.
<vdamewood>	pyon: because you didn't install the -sqlite variant?
<puddlejumper>	pyon: better question, why do you need amarok :p
<pyon>	vdamewood: there is a -sqlite variant? interesting. :-o
<pyon>	puddlejumper: i don't *need* it. i'm just trying it out of curiosity.
<vdamewood>	though, why package maintainers don't default to sqlite, i don't know.
<puddlejumper>	pyon: try mpd
<vdamewood>	pyon: it was just a guess.
<pyon>	oh.
<pyon>	puddlejumper: i miss the simplicity of using a scrollbar to jump to a desired timestamp.
<vdamewood>	pyon: but that seems to be the case for me, there's a foo package and a foo-sqlite package, or foo defaults to foo-mysql or something like that.
<pyon>	:-o
<puddlejumper>	pyon: there's plenty of clients
<ltcd>	fuck anyone here good with jquery a second, had an issue (same issue as last time i tried this tutorial xd).
<grug>	just ask your question
<grug>	don't ask to ask
<ltcd>	grug: woops good point.    basically, i put the code here into a <script> in the header, but it's not working: http://www.w3schools.com/jquery/default.asp
<grug>	ltcd: so youre running this code: http://www.w3schools.com/jquery/tryit.asp?filename=tryjquery_hide and you dont think it's working
<grug>	can you confirm jquery loaded correctly
<ltcd>	grug: it worked, i screwed something up sorry.
<ltcd>	okay. just missing ajax now :/. got any ideas of basic ajax to add, just for an extra 1% mark.
<vdamewood>	well, one more app to update, then i'm out of here.
<vdamewood>	then i get to go home, download two more updates, make a full back up, reformat, then reinstall.
<toccatanfugue>	what does it mean when polynomials compose
<dandare>	hmm
<dandare>	polynomial orchestra?
<pyon>	toccatanfugue: if p(x) and q(x) are polynomials of a single variable "x", then p(q(x)) is a polynomial too.
<toccatanfugue>	pyon: i am having trouble understanding when and how to reduce certain problems to np complete
<toccatanfugue>	could you help me with some theory?
<pyon>	i can't tell for sure in advance. most likely i can't help you.
<pyon>	mmm... installing amarok while also downloading torrents wasn't precisely the brightest idea... :-(
<dreams>	ignoring fixed points wasn't the brightest idea too.
<darkcthulhu>	any fans of the dragon book here?
<pyon>	dreams: ignoring fixed points? :-o
<vdamewood>	i think i want to make a compiler called dragon.
<vdamewood>	and a kernel called dinosaur
<darkcthulhu>	why dinosaur? monolithic?
<dreams>	pyon: my compiler does not terminate, after implementing a static analysis without computing fixed points, i actually forgot about it because the paper assumed you "got the rest".
<pyon>	dreams: lol
<darkcthulhu>	dreams, are you doing data-flow?
<dreams>	darkcthulhu: path and strictness analysis.
<darkcthulhu>	dreams, what optimizations are those used for?
<darkcthulhu>	pyon, mashing ctrl + c several times in anger? ;)
<pyon>	lol
<pyon>	then i'd have to delete the lockfile.
<vdamewood>	darkcthulhu: http://codex.cs.yale.edu/avi/os-book/os9/covers-dir/index.html
<pyon>	and perhaps even clean up the partially downloaded packages.
<darkcthulhu>	vdamewood, ahhh.. lol
<dreams>	darkcthulhu: optimizing code generation. the former is a way to force computations, the latter is for optimal path. i am also trying to reverse strictness analysis.
<darkcthulhu>	dreams, i see! i was just starting to read about the code generation stuff in chapter 8 of the dragon book. a lot of heuristics seem to be there. i am working on a source-to-source compiler, and hence, codegen isn't really one of the things i focused on. it looks very interesting though.
<dreams>	darkcthulhu: the algorithm for path analysis is pretty easy if you're interested (page 7) http://haskell.cs.yale.edu/wp-content/uploads/2011/03/path.pdf
<darkcthulhu>	dreams, reading!
<dreams>	darkcthulhu: what kind of language?
<darkcthulhu>	dreams, fortran. automatic parallelization was the goal and we did gcse, const prop, ssa, dependence analyses and finally codegen was simply inserting the right parallelism directives at the right places.
<dreams>	darkcthulhu: ah, i don't mess with parallelization :). mainly optimization and instrumentation (at compile and run-time level for profiling).
<stumbles>	if i found a server hosting almost every mp3 and made a neat python script for downloading them easily would anyone be interested
<dreams>	darkcthulhu: actually path could be useful for you (read section 4.3).
<vdamewood>	stumbles: are the mp3s licensed by the copyright holder for such download?
<darkcthulhu>	dreams, i see.. it seems all functional programming language centric from the initial sections.
<darkcthulhu>	skipping to 4.3 now
<dreams>	darkcthulhu: not only functional but lazy.
<darkcthulhu>	i see..
<darkcthulhu>	it's a little like the postponable expressions analysis.
<stumbles>	vdamewood: iunno man
<stumbles>	i just like "found" them
<stumbles>	like tens of thousands
<stumbles>	on a server
<stumbles>	im pretty sure theres no legallity issues as long as no profit is made. right ?
<vdamewood>	stumbles: wrong.
<stumbles>	vdamewood: could you elaborate maybe ?
<stumbles>	i thought sharing was caring
<dreams>	darkcthulhu: postponable expressions analysis? path analysis tells you, given a program p and a function f x y = expr. in what order are the arguments x y evaluated in the context of the program p.
<vdamewood>	stumbles: under copyright law, distribution is an exclusive right of the copyright holder. there is no provision allowing for others to distribute "as long as no profit is made".
<darkcthulhu>	dreams, ah.. i thought it was to figure out how much later one could evaluate. is there a more tractable explanation of how it works than the paper?
<darkcthulhu>	dreams, one that gives the general idea without too much detail.
<vdamewood>	stumbles: and more importantly, engaging in piracy is strictly off-topic for this channel.
<stumbles>	i didnt know it was piracy
<stumbles>	shit
<stumbles>	im not even doing anything now
<church->	stumbles: yeah, in general. just don't s hare that stuff in "public" channels. always a chance of a suit happening or the channel getting blocked, etc.
<stumbles>	i understand now
<dreams>	darkcthulhu: erm, that paper is literally the first i read on path analysis. but let me see.
<stumbles>	i didnt know before
<pokeymantrainer>	are there any non-oo gui libraries for linux?
<stumbles>	vdamewood: then why does youtube get away with so many copyright infringments then?
<sir_galahad_ad>	depends what you mean by non-oo
<stumbles>	just out of curiousity
<vdamewood>	stumbles: they don't. youtube actively prunes copyright material.
<sir_galahad_ad>	pokeymantrainer: there's gtk+ which is a gui library in cc but it's still oo in a sense
<vdamewood>	err s/copyright/unlicensed/
<stumbles>	not well... because there are videos that have been up for 10 years even
<vdamewood>	there are millions of videos.
<stumbles>	yes
<stumbles>	im just thinking if it was such a big deal. they would just be shut down ;)
<stumbles>	for breaking such bad laws
<stumbles>	i guess when you work with the government, things are different
<vdamewood>	youtube isn't responsible for what its user's upload. they just have to have a way for copyright holders to complain and get stuff taken down.
<pokeymantrainer>	sir_galahad_ad: without all of those damn object hierarchies. an api that doesn't try to hack the c language into something that it's not.
<vdamewood>	youtube also has an automatic scanner that tries to detect unlicensed material, but copyright holders have to upload reference files to that.
<sir_galahad_ad>	pokeymantrainer: xlib i guess...?
<stumbles>	vdamewood: but are they responsible for what they run of their servers?
<stumbles>	regardless of who uploads i
<stumbles>	it*
<sir_galahad_ad>	but really gui and oo go togethr very well
<stumbles>	theyre still parsing copywritten material
<stumbles>	well its hard to gui w/o oop
<vdamewood>	stumbles: what do you mean by 'run of their servers'?
<vdamewood>	stumbles: also, write and right are two different words.
<stumbles>	well they play the .mp4 files
<pyon>	sir_galahad_ad: except for the part where chasing interleaved callbacks is extremely painful.
<dreams>	darkcthulhu: i can't find any informal material on the subject :o.
<stumbles>	copyrighten material is parsed and played via *.youtube.com/*
<stumbles>	but they arent under any law?
<stumbles>	doesnt make sense to me
<sir_galahad_ad>	sure pyon but is that's really a problem with oo or being event driven?
<vdamewood>	stumbles: if a youtube user uploads a video containing unlicensed material, then youtube isn't responsible.
<stumbles>	why
<stumbles>	thats stupid
<darkcthulhu>	dreams, whoa..
<darkcthulhu>	is it relatively new?
<pyon>	sir_galahad_ad: please tell me about those wonderful non-event-driven oo gui toolkits.
<stumbles>	thats like saying, "give me illegal things, then they wont be illegal"
<stumbles>	why is youtube so special
<stumbles>	:|
<dreams>	darkcthulhu: 1988.
<darkcthulhu>	damn..
<stumbles>	i guess when you work with the government, things are different
<vdamewood>	stumbles: they're not special. that status is afforded to all sites in the us where users can upload material.
<stumbles>	oh
<stumbles>	so
<stumbles>	i still dont understand what im doing wrong
<stumbles>	what i would be doing wrong ***
<pokeymantrainer>	windows has a fairly non-oo gui api.
<sir_galahad_ad>	pokeymantrainer: which one?
<pokeymantrainer>	it's sort of oo, but not quite.
<vdamewood>	stumbles: it's still illegal for the user to upload the unlicensed material to youtube (or any other site).
<stumbles>	but youtube isnt at fault for allowing illegal copyrighten content?
<vdamewood>	stumbles: they (and all such sites) must have a means for the copyright holder to request the material be taken down.
<stumbles>	sooo if i were to allow the same request, does it become legal
<vdamewood>	no.
<stumbles>	im so confused
<stumbles>	its okay for youtube to show and play copyrighten material on their servers. but if i provide a service for grabbing mp3's it becomes illegal
<vdamewood>	stumbles: use common sense. if the copyright owner is actively exploiting the material for commercial gain, then any means of getting a personal copy without paying is likely unlicensed.
<stumbles>	woah
<stumbles>	woah
<vdamewood>	stumbles: much of the stuff on youtube is actually licensed.
<stumbles>	i never said anything about gain
<stumbles>	not about gaining anything
<stumbles>	this is foss
<vdamewood>	stumbles: i didn't say *you* were gaining anything.
<stumbles>	im more or less providing a poc for educational purposes
<vdamewood>	stumbles: reread what i said.
<vdamewood>	stumbles, if you project just downloads stuff. then it's just a downloader. if it connects to a specific server with a bunch of unlicensed material, then it's piracy.
<vdamewood>	if your project
<stumbles>	its more of fuzzing
<stumbles>	rather than anything specific
<vdamewood>	also, if it connects to a system with licensed material, but uses trickery to download copies, it would likely break the tos of the site, and would thus be piracy.
<stumbles>	" just downloads stuff "
<stumbles>	well we dont do that without a server do we
<stumbles>	no trickery here
<stumbles>	just a open index
<vdamewood>	stumbles: so, you're aware of a particular download point when developing this software. if this download point isn't licensed by the copyright holder, it's piracy.
<stumbles>	im not aware of much. thus why im askin
<stumbles>	but it sounds like a canceled project to me
<vdamewood>	stumbles: consider wget. wget itself has no knowledge of any indexes or servers, it only knows how to connect to one provided by the user. wget itself, isn't piracy. if, however, someone made a program to download all of the files from a specific server (that server is hard coded into the project or part of a default config file), and that server isn't licensed by the copyright holder, then it's piracy.
<stumbles>	waht if its not hardcoded
<aewffwea>	vdamewood: what if you have 3 projects... one is wget... another one is a downloader of all files. and another one is just a textfile with the url of the server to downlaoad them
<stumbles>	or what aewffwea said
<aewffwea>	vdamewood: can your project have all the parts that you need, but as long as they are not assembled it's not piracy?
<aewffwea>	or what if you can search?
<aewffwea>	supposed i have a program that you put a string, it searches you tube videos with that string and automatically download thems.
<aewffwea>	is that program piracy?
<vdamewood>	aewffwea: what's the difference between 'wget' and 'a downloader of all files'?
<aewffwea>	vdamewood: i don't know, you were saying that
<pyon>	myrl-chan: hai
<vdamewood>	aewffwea: well, the only difference between wget and that hypothetical program was the list of files/server information. in this case, in that case, you would be encouraging piracy by distributing the textfile with the download locations.
<vdamewood>	aewffwea: also, a program that downloads from youtube is piracy.
<aewffwea>	vdamewood: what if you search for free text string?
<myrl-chan>	pyon: uguu
<aewffwea>	vdamewood: are torrents piracy? or scribd?
<pyon>	vdamewood: if i tell someone to jump off a building, am i really encouraging suicide, or just joking?
<aewffwea>	pyon: maybe you think that that person is superman
<pyon>	jump off of the roof of a building*
<vdamewood>	aewffwea: torrents themselves, no. neither is torrent software. the individual torrent files that are for unlicensed material are.
<pyon>	aewffwea: ikr
<aewffwea>	vdamewood: why doesn't the same thing apply to youtube?
<aewffwea>	vdamewood: there is a lot of unlicensed stuff there.. it should be legal to download it with some weird auto-download program
<pyon>	aewffwea: it's been my lifelong dream to meet superman. the only way to know for sure i'm talking to superman is to see if he can survive jumping off of the roof of a building. :-p
<jeaye>	aewffwea: downloading from youtube using a third party downloader violates the terms of agreement to which you agreed by using the site.
<stumbles>	there is more tha a lot
<stumbles>	there is fucking ass tons
<stumbles>	and there are plentyyyyyyyyyy of "youtube-downloaders"
<aewffwea>	jeaye: what if it's a server side download?
<aewffwea>	jeaye: who is violating the terms? the server or me?
<aewffwea>	jeaye: what if i capture the screen and the sound inside my pc?
<vdamewood>	stumbles: and like i said, youtube *actively* prunes unlicensed material.
<pyon>	stumbles: "lots of people do it" doesn't make it any more legal.
<jeaye>	aewffwea: go read the fucking black & white. there's no point arguing in here about it; we don't represent google.
<aewffwea>	jeaye: what if i film my screen?
<stumbles>	vdamewood as will i then
<stumbles>	i will *actively* prune copyrighten material
<stumbles>	am i safe now
<aewffwea>	i'm just saying that it's very difficult to define the line
<jeaye>	aewffwea: well, considering the likelihood of you actually having read the terms to which you agreed, i think you're just talking out of your ass.
<stumbles>	oy vey
<stumbles>	that was rude
<vdamewood>	stumbles: you don't seem to get it.
<stumbles>	i dont
<stumbles>	ive said that
<aewffwea>	jeaye: who says i've ever used you tube?
<stumbles>	you said youtube actively prunes bad material
<myrl-chan>	dying in my dreams always feels unpleasant... fuyukai desu.
<stumbles>	well
<stumbles>	what if i actively prune bad material
<pyon>	myrl-chan: wut
<stumbles>	then does it make it okay?
<vdamewood>	stumbles: rule #1 of copyright law: copyright protection is automatic. so what's online isn't a matter of copyrighted or not. it's a matter of licensed or not.
<pyon>	myrl-chan: i've seen other people die in my dreams, but not myself.
<myrl-chan>	pyon: in my dreams, i died again.
<stumbles>	what if i change the speed played by 1.01x
<stumbles>	is it still the same material
<jeaye>	-_-
<myrl-chan>	pyon: think of dying for 3 seconds, then waking up.
<jeaye>	stumbles: what if i take your source code and reindent it? yes, it's derived work.
<vdamewood>	stumbles: that's making a derivative work. which is an exclusive right of the copyright holder.
<pyon>	myrl-chan: :-|
<stumbles>	vdamewood: when does it differ from direvitive to orginal
<stumbles>	derivative*
<stumbles>	fuck my spelling
<stumbles>	cause ive seen millions of hiphop songs that sample tunes
<stumbles>	but they dont get in trouble
<stumbles>	even though theyre profitting off someone elses sound
<vdamewood>	stumbles: they get licenses.
<stumbles>	not always.
<stumbles>	actually
<stumbles>	rarely
<stumbles>	i hang around a lot of studio guys that produce
<stumbles>	its actually supremely rare they get permission
<jeaye>	that's copyright infringement then.
<stumbles>	doesnt seem to be considering they play shows live
<stumbles>	and no one has ever uttered a word in 10's of years
<jeaye>	that's your logic? seriously?
<stumbles>	what logic
<stumbles>	its fucking true
<jeaye>	"bad guys didn't get caught, i guess they're not bad guys."
<stumbles>	did i eer say that
<jeaye>	yup.
<stumbles>	when did i say that
<stumbles>	quote me
<jeaye>	"bad guys didn't get caught, i guess they're not bad guys."
<stumbles>	i was fucking asking what the difference was, you meathead
<jeaye>	more seriously, http://dpaste.com/1bvjm8m
<stumbles>	wheres "your logic" bruv
<vdamewood>	stumbles: perhaps you should consult a lawyer if this is such an important issue for you.
<stumbles>	jeaye: so youre saying you know better than i ?
<stumbles>	even without knowing where i live
<stumbles>	yeah good logic ther bud
<stumbles>	fucking retarded meathead
<jeaye>	"doesn't seem to be" copyright infringement, "... considering they play live shows ... and no one has ever uttered a word ..."
<vdamewood>	stumbles: you've already demonstrated how little you actually know.
<stumbles>	no shit
<stumbles>	ive said that
<stumbles>	im not hiding anything
<stumbles>	im fucking asking questions
<generalvagueness>	no message, was that automatic?
<jeaye>	generalvagueness: hm?
<generalvagueness>	someone used a bunch of caps and got quieted
<vdamewood>	generalvagueness: perhaps you mean to ask in ##programming-ops?
<generalvagueness>	eh, i was just curious
<jeaye>	i quieted him.
<bannedboy20>	hello
<generalvagueness>	i've been in channels before where people were automatically banned for using caps too much, no operator action necessary
<myrl-chan>	generalvagueness: are you perhaps talking about me, in that other channel? lol.
<jeaye>	generalvagueness: yeah, we don't have that here.
<generalvagueness>	no myrl-chan, haha, i believe i've seen it on gamesurge and another small server
<myrl-chan>	generalvagueness: ic.
<belzelutte>	anybody here familiar with genetic algorithm?
<belzelutte>	in two-point crossover or order crossover, how do you choose cut points or pivots?
<belzelutte>	is it just simply get two random numbers between gene[1] through gene[size-1]?
<vdamewood>	i really need to research up on genetic algorithms.
<roh4n>	ive heard of genetic algorithms
<roh4n>	but idk anything about them
<vdamewood>	they work similarly to evolution. you try something, then change it, and see if the change is an improvement.
<roh4n>	i think i know how they work
<vdamewood>	'how they work' is part of 'anything'
<roh4n>	yeah
<roh4n>	they can be used to solve almost anything
<archilius>	good morning... :)
<vdamewood>	well, i have to leave, unfortunately. need to get home.
<dandare>	sounds useful to create a tamagotchi
<roh4n>	belzelutte, this may help: https://en.wikipedia.org/wiki/crossover_%28genetic_algorithm%29
<belzelutte>	eh, i've read that
<belzelutte>	what i was wondering is, what if there's only 1 gene between the points/pivots
<roh4n>	two-point crossover calls for two points to be selected on the parent organism strings. everything between the two points is swapped between the parent organisms
<roh4n>	for a 2 point crossover, if there is only 1 gene in between, that is the only gene not swapped
<kunji>	i just got here, is this conversation with an actual biological basis or are we talking about  simulated evolution style algorithms?
<roh4n>	genetic algorithms
<roh4n>	and nevermind, i read the article wrong
<kunji>	oh, good stuff.
<roh4n>	for a 2 point crossover, if there is only 1 gene in between, it is the only gene that crosses over
<belzelutte>	ah, i see
<belzelutte>	thanks roh4n
<stanreg>	is there an online and collaborative disassembling tool out there?
<kunji>	i came with a question though of course.  i have a matrix that is too large to fit in memory, one option is to use a distributed matrix class on top of a cluster... but then we still have to have an obscene total amount of memory.  so what i'm wondering is, are there any distributed matrix implementations that can easily be made to work on a single machine with a distributed database, e.g. hadoop?  our matrices are not sparse.  we can of course rewrite o
<woggle>	kunji: you were cut off at 'rewrite ou[...]'
<kunji>	our matrix operations to be row-wise and manually handle writing to disk and retrieving, but we would far prefer a more general solution.  i haven't done something like this before... so if you take say, libelemental's distributed matrix and run that, well that uses mpi, so normally you would send the other parts of the matrix to other machines, but if you're sending it all to one local machine... then it's still too big for memory.  a single matrix is ~
<woggle>	kunji: i would not think of whatever you're using a 'distributed database' for this purpose, but there is real work on doing out-of-core linear algebra.
<kunji>	woggle: any libraries in a functioning state for basic matrix operations?  i hadn't heard that phrase before actually, "out of core" but it's given me at least a good search term to dig up some more info.
<feeeee>	kunji, sure there are plenty of linear algebra packages
<woggle>	you were cut-off again at "a single matrix is ~5" btw
<woggle>	there aren't plenty of out-of-core linear algebra packages.
<kunji>	woggle: ah, it was almost the end, they're around 500 gb apiece.
<woggle>	something that works on hadoop would probably be a good example of simple algorithms for this, but i would expect the performance to be pretty bad, especially on a single machine.
<woggle>	note that 500 gb of ram isn't that hard to rent.
<kunji>	right, but we eventually want to make this available to the biology community, and our organization won't let us host it here, they've approved us to use aws, but it gets costly for that much, i think they offer single machines up to 244 or something.
<woggle>	it's like <$10/hr for >700 gb of ram (and this is not a bargin/shopping around price).
<kunji>	10 an hour is pretty pricey for something we want to make available 24/7
<woggle>	you're doing huge matrix manipulations 24/7?
<woggle>	i guess you said row-wise. i wonder if there's a better view of your data than a matrix.
<kunji>	no, but the service would need to be available 24/7, so i assume we would need to pay for the ram full time, no?
<woggle>	yes.
<darkcthulhu>	woggle, hi. how's your phd going?
<woggle>	not as well as i'd like.
<darkcthulhu>	:-o why is that?
<woggle>	slow research progress.
<kunji>	it's an obnoxious runtime generated matrix needed for the statistical technique... our data is normally quite a lot smaller nxp with n << p, but we need pxp for some steps.
<darkcthulhu>	woggle, ah.. what's the usual goal when one enters a phd program? to get a lot of papers out or a few high impact ones?
<woggle>	darkcthulhu: it varies a lot.
<kunji>	which is why bad performance is probably ok, it's not that many steps, we just need to get it to run...
<woggle>	darkcthulhu: good advisors pay attention to students' post-phd career goals.
<darkcthulhu>	woggle, hmm.. isn't it invariably either academia or research someplace in the industry?
<woggle>	darkcthulhu: sometimes non-research industry jobs. also, sometimes non-industry non-academia research jobs (e.g. gov't labs). sometimes startups.
<darkcthulhu>	hmm.. i see. i didn't think there would be too many non research industry job folks doing a phd.
<darkcthulhu>	sounds like a mismatch somewhere.
<woggle>	darkcthulhu: like, most phd going to goog aren't really doing research.
<woggle>	(with notable exceptions for people in machine learning)
<woggle>	startup stuff is often turn-one's-research-into-a-product stuff.
<darkcthulhu>	i see. distributed systems and network domain folks should be doing something research oriented at goog too
<darkcthulhu>	ah.. the entrepreneurial mindset
<woggle>	they sometimes publish papers, but it's mostly not research.
<woggle>	(the distributed systems folks at goog.)
<darkcthulhu>	ah.. i'm headed to the networks infrastructure team this summer. i was hoping there would be some real research minded folks out there.  :-|
<darkcthulhu>	woggle, what about you?
<woggle>	i'm aiming first for a good teaching-track academic job, and failing that, an industry job (likely one not focused on paper publication).
<darkcthulhu>	i see... and is msr a popular destination?
<darkcthulhu>	and why no paper publication?
<woggle>	msr is a popular destination for industry jobs which are focused on paper publication but the closure of msr-svc (and, in systems, researchers moving to product groups) has probably scared people away.
<darkcthulhu>	:-o that happened? whoa. i thought msr was truly independent and unfettered by commercial concerns. that is disturbing ing.
<darkcthulhu>	s/ing//
<woggle>	no paper publication because i wouldn't mind a coding jbo.
<darkcthulhu>	hmm.. most coding jobs don't involve much novelty imo. research seems frustrating but at least it's novel.
<woggle>	i think of it more as wanting publications to be a consequence of building things people actually use.
<darkcthulhu>	woggle, a more practical approach. my advisor thinks a lot in the same way. writes a lot of code too, unlike most others in academia.
<kunji>	go for both, research coding!  there are plenty of researchers out there now that need people to write good code, it adds novelty to it.
<woggle>	darkcthulhu: where are you a student?
<darkcthulhu>	woggle, a&m
<darkcthulhu>	master's student, not phd.
<kunji>	texas campus?
<darkcthulhu>	college station
<darkcthulhu>	bbl
<lf94>	invent the next big thing
<disconsented>	so i am trying to read the conents of a zip (https://gist.github.com/disconsented/4feebd0e06ee182c81e5) however it is also picking up things that are not in the zip (files/folders on the same level as the zip). any ideas why?
<kunji>	i may have found something that will work, two potential r package solutions.  bigmemory and ff are the package names.
<ori_b>	command line gdb control would be nice; not having the ui get shit on when your program prints something on stdout would be nice
<amigojapan>	hi, what aare ephemeral ports? i looked at teh wiki eplanation and still dont understand well….  if i run a tcp ip sever in lua, which uses an ephemeral port, how od i know what port to connect to from the client?
<ori_b>	you would pass that back over a control channel
<ori_b>	so, basically, you'd have a well known port that says "connect again on this other port"
<amigojapan>	ori_b: ah,   so as not to keep that port blocked?  is that how an irc server works?
<ori_b>	no, irc just uses a well known port
<ori_b>	6667, usually.
<amigojapan>	ori_b: ddd is the gui fronend i use for c and c++ on linux, it does look a little dated, btu it does everything i need….
<amigojapan>	ori_b: 6667 yes,  but how do they do it so that that port is not blocked when one user logs in?
<ori_b>	amigojapan: yes, but the last commit on it was in 2009
<amigojapan>	so it is not in use
<amigojapan>	ori_b: well, that it has no recent commits does not mean it is not good….
<ori_b>	amigojapan: ports can be in use by multiple users; you need a unique (src_ip, dst_ip, port) combo for a connection.
<ori_b>	amigojapan: it doesn't build.
<ori_b>	amigojapan: it's build is acutally pretty completely broken with new versions of yacc.
<amigojapan>	i see
<ori_b>	amigojapan: the icons that it uses need a program that doesn't seem to be shipped any more to compile.
<amigojapan>	ori_b: vdamewood mentioned that kde’s version of something simillar to geany, had a gdb frontend
<ori_b>	i'm probably going to try to fix ddd at some point, but if i didn't have to, that would be nice.
<ori_b>	(why do i know it's broken? because i got it to compile again just now.)
<ori_b>	(took several hundred lines changed.)
<amigojapan>	i see
<ori_b>	(also, to compile wtih gtk.)
<amigojapan>	ori_b: in ubuntu there is a package for ddd, so i did not need to compile it
<ori_b>	there's a package, but it sometimes fails to actually work with recent gdbs
<ori_b>	just hangs.
<amigojapan>	ori_b: so lets see, in a script that i want many people to connect to at the same time (i am trying to make a bbs)     how do i handle many users connecting? does hte script need to be multithreaded?
<ori_b>	it doesn't need to be multithreaded.
<ori_b>	could be, but doesn't need to be.
<ori_b>	http://beej.us/guide/bgnet/
<ori_b>	amigojapan: seen that one yet?
<amigojapan>	ori_b: i am confused on how to handle multiple users at the same time….
<amigojapan>	let me see
<ori_b>	amigojapan: each time one connects, you get a new socket.
<ori_b>	poll() will tell you when one of them is ready to read/write
<ori_b>	and then you just send the right data for the user.
<amigojapan>	ok ori_b , i dont usually have the attention span to read entire books…  but i will bookmark it… thanks
<ori_b>	http://beej.us/guide/bgnet/output/html/singlepage/bgnet.html
<ori_b>	it's not exactly a book
<amigojapan>	ok
<amigojapan>	ori_b: i would like more to see some example code, in some high level lanaguage even if it is not lua, lua woudl be preferable though…  so i can see hwo it is done,  handling multiple connections
<stumbles>	so can we be a bit more civil in the future
<knightari>	nope
<knightari>	sorry
<stumbles>	some nignog was powertrippin on me
<stumbles>	forget her name
<stumbles>	set me to mode +q, like thats gonna teach me a lesson, i was fucking asking god damned legitimate questions.
<stumbles>	sorry if i came to the wrong server for formal help
<stumbles>	oh it was jeaye
<pyon>	stumbles: from a cursory read of the scrollback, it doesn't seem like you were being particularly civil yourself.
<stumbles>	oy?
<stumbles>	they were running me in circles with no answer
<stumbles>	and even other people started to talk about it
<stumbles>	dont go pointing fingers at me
<stumbles>	ill kindly leave
<stumbles>	im here to give/recieve help
<stumbles>	thats it
<stumbles>	as i said, dont go setting fucking modes on me without warning, i will properly exit, myself. it will only piss me off if some randy is powertrippin
<pyon>	stumbles: well, you can't force people to give you exactly the answer you want. and it seems like you're trying to find technicalities to work around the definition of "copyright infringement".
<stumbles>	because i dont know much
<stumbles>	it seemed like someone else did
<stumbles>	it wasnt a "work around" i was trying to accomplish
<stumbles>	it was simply trying to understand where the line is drawn
<dandare>	also not force how they choose to moderate you. thats naive
<pyon>	stumbles: in any case, if you want to know precisely where the line is drawn, ask a lawyer.
<stumbles>	pyon: if you dont "filter" through what i actually say, i say i dropped the project all together
<stumbles>	more than once
<stumbles>	yet someone thinks hes being a badass and proper by setting mode +q to me
<stumbles>	thats fucking childish shit
<stumbles>	especially hiding behind chanserv
<stumbles>	right on good way to moderate proper education ##programming,
<dandare>	god bless im not in moderation tasks anymore
<pyon>	stumbles: then go find a better community. :-p
<stumbles>	im going to talk so much shit about this place. not that it will have a proper impact on the community. i just hope you see, objectively how fucking ignorant and stupid of a woman you are
<pyon>	lol
<pyon>	wut
<dandare>	typical
<pyon>	ikr
<standoo>	hello
<ori_b>	hi.
<standoo>	does anyone know how or why computer programs rely a lot on if .. else statements?
<standoo>	or the history behind it?
<ori_b>	uh. you kind of need it to make a decision about what to do.
<generalvagueness>	yeah
<ori_b>	there's not really much of a history.
<ori_b>	"the first language had it. and so did all the others, because it's kind of unavoidable."
<generalvagueness>	if you mean "why 'if-else' and not something else?", if-else is compact and straightforward
<generalvagueness>	in some (a lot of?) assembly languages it's not written that way for various reasons
<standoo>	not directly to the semantics but the conditional programming style
<generalvagueness>	or at least, not as directly
<generalvagueness>	if you have no conditionals, your program will do the same thing every time
<generalvagueness>	that limits its usefulness considerably
<ori_b>	standoo: ...er. that's kind of like asking "the history of vertical parts in houses"
<jeaye>	standoo: if-else follows the imperative paradigm, which is prevalent today.
<ori_b>	you can't really build a house without them; they were there from the start.
<justanotheruser>	what is there to use other than if-else?
<jeaye>	justanotheruser: if-else is not needed.
<pyon>	justanotheruser: come from
<ori_b>	justanotheruser: you can use some tricks with indexing and arrays, really.
<jeaye>	matching can replace it.
<justanotheruser>	well if else is just an abstraction of that?
<pyon>	come from is as imperative as it gets.
<ori_b>	or some alternative spellings of it like pattern matching.
<ori_b>	but it's the same thing.
<woggle>	good ol' computed come from.
<standoo>	come from?
<woggle>	a joke.
<pyon>	standoo: the opposite of goto.
<generalvagueness>	hahah
<pyon>	https://en.wikipedia.org/wiki/intercal
<generalvagueness>	depending on how you write and interpret a ternary operator it be seen as something other than if-else
<generalvagueness>	but instead a sort of basic logical operation that's applied
<pyon>	also: http://www.catb.org/~esr/intercal/paper.html
<generalvagueness>	but then i guess if you're going to stretch it that much you could say "if a then b else c" isn't an if-else either, it's the same application of an operation
<generalvagueness>	which gets kind of absurd because it's the very definition of an if-else
<generalvagueness>	welp
<ovrh>	good morning
<xeno_>	bonan matenon
<bannedboy20>	hello there. i have a question about game engine
<xeno_>	the chances of getting an answer improves if you ask the question :)
<bannedboy20>	in java. if i were to make a game engine where an object hits another object and shit happens. how would i do it? the whole board is coordinated x and y
<bannedboy20>	xeno_, sorry, was thinking of how to ask it :p
<xeno_>	too bad i have to run off :/
<bannedboy20>	so do i put the 2nd object in the coordinates
<bannedboy20>	and use an array to check, everytime object 1 moves anywhere?
<bannedboy20>	isnt that terribly inefficient?
<bannedboy20>	hopefully someone can answer the question :)
<xeno_>	you would typically have a bounding box around the objects
<xeno_>	and if the bounding boxes collide, then you check if the objects collide too
<pyon>	bannedboy20: one way to approach this problem is to use a quadtree (if your game is 2d) or octtree (if your game is 3d) to "cluster" nearby objects.
<xeno_>	and of course, if you implement pong, you should not check if the two paddles collide with eachother - only check relevant stuff :)
<pyon>	bannedboy20: it's basically a higher-dimensional of search trees.
<pyon>	higher-dimensional analogue*
<bannedboy20>	quadtree. never heard of it
<bannedboy20>	i will use that then
<bannedboy20>	alright
<bannedboy20>	another question. i'll try to ask and see if you guys know. this one is about search engines data parsing. lets say i want to use a programming language to programmatically parse a list of search results.
<bannedboy20>	is there such a thing that is common among all the search result links?
<bannedboy20>	like an attribute or something?
<bannedboy20>	i'm trying to programmatically, parse web search results from a search engine and return all the links that are returned. but i want to ignore the clutter at the top side links :p
<xeno_>	bannedboy20: i didn't quite get that - seems like more a question about the web pages of a certain search engine, than about search engines in general
<xeno_>	anyway, gotta run
<bannedboy20>	alright peace out bro
<bannedboy20>	but the question was
<bannedboy20>	for lets say reddit, i'm not allowed to use reddit api btw. but i want to take search results out and parse that page out of all the links
<bannedboy20>	of the search results only
<reaga>	im struggling in haskell now
<reaga>	how do i input a number x and return the largest prime number this number
<reaga>	i know how to make primes
<reaga>	im just confused about how to make it find the largest one under x
<reaga>	actually, seems easy
<reaga>	nevermind
<guest68163>	can anyone that have experience with utf-8 help me to figure out a script please!!!
<guest68163>	);
<ori_b>	guest68163: not with the info you've given.
<ori_b>	http://www.catb.org/esr/faqs/smart-questions.html
<voyage>	one general question: is user story a sub task  of feature or vice versa
<frobs>	voyage: http://stackoverflow.com/questions/1707820/what-is-the-difference-between-a-user-story-and-a-feature-in-agile-terminology
<frobs>	voyage: more information in https://www.google.es/search?q=user+history+and+feature&ie=utf-8&oe=utf-8&gws_rd=cr&ei=kmvjvdfplkzx7qbosydgcq
<darkcthulhu>	...and it's a glorious night.
<bannedboy20>	:)
<darkcthulhu>	sup good netizens?
<bannedboy20>	hello darkcthulhu
<bannedboy20>	just tensed up about this project
<bannedboy20>	i think i deserve more than 1000 bucks for this shit
<darkcthulhu>	hi bannedboy20.
<darkcthulhu>	what's the project?
<bannedboy20>	eh data mining
<darkcthulhu>	hmm..
<darkcthulhu>	what are you mining for?
<darkcthulhu>	trends? predictions? ...?
<darkcthulhu>	err.. got disconnected. did i miss something?
<pyon>	nope.
<darkcthulhu>	what are you up to pyon? no sleep again?
<pyon>	indeed, no sleep.
<pyon>	you?
<bannedboy20>	darkcthulhu, er...i just have to get the data from search engines using rapidminer api
<bannedboy20>	but its proving hard to parse the data
<pyon>	bannedboy20: data mining is what you do when you already have the data.
<voyage>	frobs,  thanks
<bannedboy20>	its kinda more complicated than that pyon
<bannedboy20>	i have to query a search engine and get the results out into my program for now. i could use java and jsoup to do it
<standoo>	anyone know of any tools to visualize ast?
<bannedboy20>	but i fear its going to be too slow
<pyon>	bannedboy20: just clarifying that gathering data is itself not data mining.
<darkcthulhu>	pyon, yeah, still going with little sleep. working on some more optimizations.
<bannedboy20>	well....thats one part. after that there is an analyss part which i have got on lockdown pyon
<bannedboy20>	its the getting part thats proving rather difficult :)
<darkcthulhu>	bannedboy20, jsoup? are you scraping pages?
<bannedboy20>	darkcthulhu, yes!
<darkcthulhu>	oh wow.. why though? does the search engine not give you an api?
<bannedboy20>	er....
<bannedboy20>	i'm using a search engine in a web database that is not that popular
<bannedboy20>	so no
<darkcthulhu>	ah
<darkcthulhu>	bannedboy20, if you contact the search engine people, they may be okay with giving you access to data in a more useful format. that works sometimes.
<bannedboy20>	its a history data webpage. lets say. i just need to use rapidminer to get all the searchable links. then java/jsoup to put those searchable links into just the article and remove all the outside clutter
<bannedboy20>	then save to computer. then use rapidminer to analyse saved data again
<darkcthulhu>	ah, okay. i haven't used rapidminer before.
<bannedboy20>	i know
<darkcthulhu>	looks interesting.
<bannedboy20>	i just feel like jsoup would be really slow
<darkcthulhu>	yeah. parsing pages that way is slow. if you can get static pages, even mobile ones, it can speed up things.
<bannedboy20>	what if i multithread it this way though?
<darkcthulhu>	bannedboy20, yeah, you could get some speedup on parallel threads.
<bannedboy20>	okay
<bannedboy20>	this might be a noob question, but is there a limit to how much i can thread?
<darkcthulhu>	bannedboy20, for cpu-bound threads, the number of cpus is the general guideline. in this case, because most threads are going to be waiting on the network most of the time, you could get good performance with ten/twenty of them, or even more. i think it would need to be seen experimentally.
<bannedboy20>	so you think jsoup can be run on 10 simultaneous threads? damn...
<xirol>	[java] hey guys i made an arraylist which consists of student names. alongside their names, how do i number them 1~(whatever number they go up to) on the left-hand side? details on my codes thus far are inside this link : http://ideone.com/cz2rhn
<darkcthulhu>	xirol, use a simple loop to count it up and output the number?
<darkcthulhu>	xirol, i.e. swap out the range based for loop you're using for an index based one. that would give you the indices automatically.
<xirol>	hmm i see okay i'll try it.
<dandare>	my program changes screen contents depending what users is doing. it's acceptable that the window resizes itself to a optimal size depending what user is doing?  (not losing origins anchor reference thought )
<dandare>	my guess is offering a option to 'auto-resize' or just leave the scrollbars doing its job otherwise
<guest68163>	anyone with good machine code knowledge have an hour to help me out with something?
<miniman10000>	so using a mutex you can have multiple threads work on a single variable without having a data race. is the same true of atomic variables instead of mutex?
<winny>	guest68163: you might want to visit ##asm
<winny>	guest68163: also ##re
<ams>	miniman10000: it is not just .. a variable.
<ams>	guest68163: don't ask to ask.
<ams>	winny: it is not helpful, or polite, to just toss people around multiple channels.
<miniman10000>	ah i found it on cppref "atomic objects are the only c++ objects free of data races; that is, if one thread writes to an atomic while another thread reads from it, the behavior is well-defined."
<miniman10000>	definately what i was looking to confirm
<winny>	ams: guest68163 just pmed me by the way :c
<winny>	in addition, machine code discussion is pertinent to re and asm.
<ams>	guest68163: it isn't polite to pm people just for kicks.
<guest68163>	sure but i have no freaking clue of what im doing ; ;
<guest68163>	& im timid/shy however you want to call it
<ams>	winny: and that falls very nicley under the topic of this channel. :)
<guest68163>	you all know 10times more than i do about pc
<guest68163>	im persistent tho & i have the will to learn
<guest68163>	i didnt pm to be impolite
<guest68163>	im sorry
<ams>	you still haven't asked a question.
<dandare>	i never understood why isnt polite to ask same question on multiple channels. no sure about tossing people
<winny>	this channel is like one of those crappy adjustable wrenches
<ams>	winny: those are damn useful ..
<guest68163>	how do i repair offsets in an .exe file
<guest68163>	that i just barely understood to 0.5%
<guest68163>	lol
<guest68163>	program still run
<winny>	you obviously have a question
<guest68163>	wont take the right path tho
<plushwork>	dandare: because you end up answering question only to find out it's already answered on another chanel?
<ams>	winny: when you really need that m10 ... and you don't have it .. then an english key is fucking awesome
<guest68163>	& i thought it was utf-8 coded but i got told different that its still ansi althought file itsellf say coded in utf
<winny>	ams: lol. noted
<guest68163>	look i can post files & explain what im trying to do
<guest68163>	that doesnt make it any better tho
<winny>	you could pastebin them
<dandare>	plushwork, ah.. thats the part about tossing i guess. now i have to agree
<guest68163>	if i have 10replys at once ill get even more confused than i currently am ; ; /cry
<ams>	winny: or the time you need two .. and one is a socket, which doesn't fucking fit! :-)
<dandare>	yeah thats not polite
<ams>	winny: (by fitt imean, you can't squeeze it in to wherever the damn bolt is ..)
<guest68163>	i never used pastebin
<guest68163>	& even if i did end up doing it right the second
<guest68163>	if i screw up my file
<guest68163>	i just redownload the original
<guest68163>	theres a site that give it
<winny>	so what's your question
<miniman10000>	you know im kinda curious if you were to have a hyperthreaded intel cpu and iterate on all cores and spit out a total how many times higher would the number of iterations be compared to iterating on all threads ( 4 cores vs 8 threads )
<winny>	you wrote something about ascii vs utf-8 file encoding, so this is nothing to do with machine code?
<guest68163>	thats what im trying to figure out
<winny>	machine code is something else https://en.wikipedia.org/wiki/machine_code
<ams>	...
<miniman10000>	machine code is literally 1s and 0s
<ams>	so is ascii.
<ams>	and utf.
<ams>	and everything.
<winny>	basically said it's binary data that is fed into a cpu
<guest68163>	idk if i have visual studio but i dont think i do i just recently downloaded notepad ++ anyway it natively open as asci but in the file its worded encoded in utf-8 where i got mislead apparently
<dandare>	unless its æntɨˈkɪθərə
<guest68163>	now i didnt know which language to use heck i had no clue what assembly meant i tryed java c+++ yaddi yadda then i got told its only color...
<dandare>	http://en.wikipedia.org/wiki/antikythera_mechanism
<miniman10000>	well i mean specifically machine code in programming is the ascii equivilent of having to write the 1s and 0s for each letter
<ams>	no.
<xirol>	is it forbidden to pay people to create a program here lol
<ams>	that is a terrible description.
<guest68163>	window or iso code... im all lost , heres the thing i thought i couldnt get all characters of file to show properly then i got told its normal & its a machine code & i would have to reverse process or the machine coding to pull this off
<xirol>	im guessing it is
<guest68163>	& i got told its not easy...
<winny>	guest68163: so trying to understand your confusing wordings, you are confused what encoding your source files are in?
<guest68163>	see when you get into numbers , i get lost althought i understood m =\x6d & z\x7a & m\x4d z\x5a in hexadecimal
<winny>	in ascii
<winny>	there's something that'll blow your mind
<guest68163>	that doesnt mean much to me when i reach stuffs like that 𝌆
<ams>	because that is unicode.
<winny>	https://en.wikipedia.org/wiki/character_encoding
<ams>	not ascii.
<miniman10000>	isnt ascii a small subset of characters?
<winny>	no, that's not the way i'd put it
<guest68163>	& thats what im saying
<winny>	utf-8 reuses the ascii codepoints
<guest68163>	im looking for help & i appreciate the attempts really
<guest68163>	you have to understand that i begin at 0 tho
<guest68163>	& no i cant pay for help ;;
<ams>	guest68163: go to a basica comp sci course.
<guest68163>	im just trying to understand when reading websites losing me
<guest68163>	im french , english isnt my native language
<dandare>	guest68163, im still trying to figure what youre trying to achieve
<guest68163>	soo go figure as i try to understand reading in foreign language
<winny>	guest68163: you are missing the point that text is has a given respresentation
<guest68163>	speaking would be much usefull but just reading you ppl here is better than webpages
<winny>	guest68163: it's just a bunch of binary data that has meaning to most computers
<miniman10000>	dandare alright so im not the only one. although we do know why now.
<orakar>	my background is in the humanities and i'm self-taught. am i right in thinking that it'd be better to take a job offer in a top ten tech company than accept a funded mst in computer science?
<orakar>	i worry that not having the cs background will always hold me back a little... but i guess i can self-teach in my spare time?
<ams>	orakar: what do you like doing?
<guest68163>	ok ill explain it
<guest68163>	i play a video game & this program bid on auction house
<miniman10000>	i mean if someone is offering you a job i usually hear that holds more merit in the field than a degree but can not confirm this is any way.
<guest68163>	but it doesnt bid on the right item anymore
<dandare>	orakar, css?
<guest68163>	& ppl who created it tryed to change code in the last year
<miniman10000>	in any way*
<guest68163>	but its been broken for at least 2
<guest68163>	reason its broken in the end atm is because of lua
<winny>	guest68163: this might be helpful in understanding what utf-8 does http://www.dotnetnoob.com/2011/12/introduction-to-character-encoding.html
<guest68163>	& i might be mistaken
<dandare>	ah computer science i guess
<guest68163>	but i know the problem
<guest68163>	i just lack knowledge to reach the fix
<orakar>	ams: good question. both the academic side and the 'making shit' side :p
<guest68163>	which is to reach offset in the exe
<guest68163>	program will run
<orakar>	dandare: css?
<guest68163>	but wont go on the right item in the ah list
<guest68163>	do you understand what im trying to achieve now?
<guest68163>	to repair the old code
<ams>	orakar: do both.
<guest68163>	im not crazy to launch myself in creating a new script with lua & what not
<dandare>	orakar, css->cascading style sheets
<guest68163>	but if i can reach offsets
<guest68163>	"in theory" i can repair it
<winny>	guest68163: it sounds like you need to hire somebody
<guest68163>	sigh
<guest68163>	see thats why i hit pm
<orakar>	dandare: yeah, i know, but what are you asking? :p whether the job is in css?
<winny>	to achieve your end result, or spend a lot of time learning things
<guest68163>	ty to ridiculize me ;;
<ams>	nobody is ridiculing you.
<ams>	see, the problem is non-trivial.
<orakar>	ams: yup, but i thought the difference was going to be what decides which to choose, right? :p
<ams>	not alot of people would be able to pull it of.
<dandare>	orakar, i wouldnt say hold you back but making it slower. and error prone.
<winny>	guest68163: it's just standard netiquette
<ams>	(mostly since people don't meddle with binary stuff these days ..)
<ams>	orakar: don't, just do both for a bit.
<orakar>	dandare: that's what i thought
<winny>	guest68163: do you have the source code available?
<sir_leto>	how would i recursively name files and add a two digit number that goes up at the end of each loop? say i a directory of *.mp4 files, and i want to end up with $name_with_spaces_01 $name_with spaces_02 etc
<winny>	you wrote something about modifying the program exe
<orakar>	dandare: the job is pretty low level stuff too (c/c++)
<ams>	sir_leto: in emacs, wdired mode, and a simple macro.
<orakar>	ams: yeah. i'm teaching myself the cs stuff anyway :-)
<guest68163>	yes
<guest68163>	i can give you all infos you need
<dandare>	orakar, but you can reach higher levels than much people that took it formally e.g. so its relative
<guest68163>	but idk pc too well so
<guest68163>	that mean that i personally would need assitance to take the route to it
<guest68163>	now before i post this...
<guest68163>	pls understand
<winny>	guest68163: sorry, what is pc?
<guest68163>	im not asking you to fix this for me
<orakar>	dandare: yeah... i'm very academic, and eager to learn stuff, so hopefully i'll be able to flesh out the academic stuff in my spare time.
<guest68163>	im trying to inform myself on how to do it myself ;;
<guest68163>	there ill show you
<ams>	guest68163: take a course in computer systems.
<orakar>	dandare: thanks for your advice :) and you, ams.
<guest68163>	first where you download the .exe file
<guest68163>	http://legacy.windower.net/topic/20038-campah-3opensource/
<guest68163>	second
<dandare>	orakar, thats the point. when i started with computing there werent even internet. nowadays is easy to educate yourself (with discipline)
<guest68163>	what im trying to pull off
<guest68163>	https://github.com/golfandsurf/campah/commit/0c6fdbd0a683bc8023ee44c62fb4c42dec0936c8#diff-1ac7b73907f1ae28167fd684cd6ee926
<guest68163>	third
<sir_leto>	ams, i've never used emacs, and have relatively little programming experience, would this be doable in bash or perl, or even powershell?
<guest68163>	last thing that ever got posted on the topic as they tryed to build "a whole new structure"
<winny>	guest68163: the source code is on github
<guest68163>	https://github.com/golfandsurf/campah/commit/b9fc7d998239d18f420c969a7fd72cb2f45bb30f#diff-ff9ac2a86dc6af73a95ba3701c19619c
<guest68163>	the .exe file , the previous fix that hapen like a year ago, & then the last attempt at cleaning code which as far as i know never got finished
<guest68163>	& i for damn sure wont launch myself in buildign a new code"""" yet" ; ;
<dandare>	i think one thinking about being self-taught should start reading descartes
<ams>	guest68163: modifying a binary directly to do that is really not trivial, you can just get someone to recompile the thing since you have the source code.
<guest68163>	you got all infos up to you to do as you wish ; ; all i want is help ugh
<ams>	dandare: alice in wonderland ..
<dandare>	"discourse on method"
<winny>	guest68163: you should get the source code, then open the project in microsoft visual studio, then make your changes
<winny>	and compile
<dandare>	ams, its a personal thing.. science is up to everybody
<winny>	then package it, and once it's working, you open a pull request to upstream
<pyon>	myrl-chan: "how much ufotable spends" --> dunno, as long as they produce stuff like kara no kyoukai's first three or four movies, any expense is justified imo. [too bad the follow-up was rather weak.]
<winny>	actually, i see no license in the repository
<winny>	is this actually open source?
<guest68163>	any other program that visual studio?
<guest68163>	thats what im saying i dont own it that i know
<guest68163>	worst case scenario , ill go & buy it
<dandare>	also. university these days have really creepy low 'university' quality. more like stupid scripted niches than real science and universe
<guest68163>	but if theres a way to do without thats what i was trying to do
<ams>	winny: if no license, no go.. but sometimes morals trump legality.
<winny>	visual studio express is free
<pyon>	ams: "morals trump legality" --> have fun arguing that in court
<ams>	pyon: sure.
<ams>	doesn't mean that the court is right though.
<guest68163>	its not rocket sciences to understand what im saying
<guest68163>	im trying to understand
<winny>	i see a license text on the forums page
<winny>	looks like mit/x, good
<guest68163>	what i did on the last attempt at cleaning code is to rebuild all the files into the old versions
<guest68163>	but that doesnt make sense as my friend told me this string offsety structure should be in the .exe& i started reasearchs
<ams>	guest68163: i find it immensly rude that you who have no clue what the fuck you are doing, are dismissing this as some kind of a trivial problem when people who infinitly more years of experience tell you that it is not trivial.
<guest68163>	downloaded a couple things
<guest68163>	i got python
<guest68163>	no clue how to use it
<guest68163>	oh really?
<winny>	ams: i prefer to have an understanding of my rights, as a developer and user of a codebase
<guest68163>	i can get visual studio for free? thats interesting
<guest68163>	well
<guest68163>	i get that
<guest68163>	but im not a programmer & im doing this in learning as #1
<guest68163>	second
<guest68163>	if you change something
<guest68163>	as long as you dont go & sell or ditribute something that you fixed under your name
<guest68163>	i do not forsee illegality in it
<guest68163>	but thats beside the whole topic...
<guest68163>	we are talking about coding here & mechanic behind it
<guest68163>	not copyrights.
<guest68163>	im gonna look up visual studio express
<ams>	guest68163: and it isn't the first time you are here pestering people about this exact same problem after checking my logs.
<ams>	winny: i prefer that you have an understanding of my rights as a computer user, which emans that i should be able to run, modify, distribute, and study a program.
<guest68163>	but on my old hdd years ago i tryed to install visual studio & my pc fucked up then yea on this one it say its installed but i dont have it its weird lol
<guest68163>	ok soo get this i just download it & it say i need a more recent windows version
<guest68163>	close from a ragequit! lol
<guest68163>	& pouf it went all quiet ; ;
<dandare>	guest68163, what are you trying to achieve?
<guest68163>	idk how to even type properly in here
<ams>	he is trying to patch a binary .. and considers it trivial, and not rocket science .. to modify all jump offsets, structure changes, and what not.
<guest68163>	im getting messages from ppl & i told ppl im french
<guest68163>	i dont understand quite all sentences right
<guest68163>	no mean to offesne ppl & im not asking you to do things you ppl dont want
<guest68163>	look i dont even know what trivial mean
<guest68163>	i have to google it.. 1sec
<dandare>	guest68163, why do you need to patch a binary?
<ams>	11:12 /ignore guest68163
<guest68163>	ah mean little insignifiance
<guest68163>	well i think i got missunderstood
<guest68163>	because the program doesnt work anymore
<guest68163>	& i want to see if im able to fix it!
<guest68163>	apparently im not
<dandare>	guest68163, why its not working anymore? whats the cause?
<guest68163>	a game maintenance changing a structure
<guest68163>	& yes i might of missexpressed myself
<guest68163>	i never said i thought it was easy
<guest68163>	im saying that i read how to find a value on your computer
<dandare>	guest68163, what structure changed?
<guest68163>	the real issue for me is to figure out how to understand the .exe file assuming im not wrong on the fact all that string offset info go in there
<guest68163>	ok example
<dandare>	you cannot understand a exe file
<guest68163>	auction house have a miscellanous category ok?
<guest68163>	well they added a second, miscellanous
<guest68163>	thats one example of structure change
<dandare>	guest68163, do you need to change 1 string to another inside the exe?
<guest68163>	& well how do i interact with it then?
<guest68163>	more like all of the strings >.>
<guest68163>	program run
<ams>	well, you can.. and it isn't that hard .. if you have the required skills.
<guest68163>	but it will go to the wrong item
<guest68163>	althought id should be correct still
<guest68163>	now thats where im lost
<myrl-chan>	pyon: ubw ep 0 and 1 felt like there was a budget of a movie.
<guest68163>	they might of changed the items id
<guest68163>	but i dont think so
<guest68163>	i think its just the path to it
<guest68163>	why do you think im asking help ams?
<guest68163>	im asking kindly i think ; ;
<myrl-chan>	pyon: i'm not sure about the later episodes though, i don't see any differences, but it seems more normal.
<guest68163>	i didnt mean no disrecpect at any moment
<pyon>	myrl-chan: ah.
<guest68163>	heres how this began
<guest68163>	i use to run it , untill it broke , then guy wasnt posting on forums anymore
<guest68163>	soo i posted to ask
<guest68163>	& he gave the offset reply
<pyon>	myrl-chan: why do you /part #anime every now and then? :-o
<guest68163>	soo thats it
<guest68163>	brb going for a smoke
<myrl-chan>	pyon: nexia's fault. :<
<pyon>	:-o
<nexia>	liar
<guest68163>	back
<guest68163>	ams still there?
<anj7>	cannot add or update a child row: a foreign key constraint fails
<anj7>	how can i resolve this error in mysql?
<ams>	by seeing that the constraints are meet?
<jkbbwr>	hey all
<jkbbwr>	anj7: you are probably trying to change a record that is relied on by another record.
<anj7>	jkbbwr: how can i drop all the foreign keys in a database?
<jkbbwr>	anj7: maybe cascade?
<jkbbwr>	anj7: to be fair you should never hard delete data if you can avoid it
<anj7>	i just want the relation of the keys to be dropped.
<jkbbwr>	anj7: recreate the schema
<jkbbwr>	export the data, recreate, import
<anj7>	jkbbwr: how can i delete the data in the scheme?
<anj7>	schema*
<myrl-chan>	fuck yes
<myrl-chan>	my dad enrolled me to an mcu class
<lf94>	???
<lf94>	nice!
<myrl-chan>	pyon: !!!
<myrl-chan>	but having peers is always nice!
<myrl-chan>	and i can also learn my techniques, and perhaps share some of my own. :p
<plushwork>	myrl-chan: what's mcu?
<myrl-chan>	plushwork: microcontroller units?
<plushwork>	myrl-chan: you mean µc?
<myrl-chan>	yes.
<plushwork>	see? it's much easier, shorter, and people that don't use linux can't type it
<myrl-chan>	plushwork: i hate you. lol.
<myrl-chan>	not literally of course.
<plushwork>	a junior developer is trying to do a simple task in my project
<plushwork>	luckily i made linux script to put up the whole enviroment
<myrl-chan>	plushwork: also, i do use linux, but i don't give a fuck about unicode input.
<plushwork>	it checkouts git, runs composer, puts up vagrant
<plushwork>	and still doesn't work
<plushwork>	gosh, i wonder if i used that bad when i started
<lf94>	plushwork, can i replace that junior developer
<lf94>	i will accept bitcoin, paypal, or food.
<lf94>	pizza hut coupons.
<jkbbwr>	plushwork: ha
<adsc>	i can type μc and am not on linux...your point is moot
<lf94>	i can't type uc without a composer key.
<ams>	unicode ..
<ams>	mm..
<ams>	and overly complicated solution to a problem that is relativley simple .. but makes it impossible to enter anything using a normal keyboard.
<myrl-chan>	i hate compose keys.
<adsc>	you all need an oled keyboard that can display any symbol on any key
<adsc>	or a visual cortex reader, then you can just think of the symbol you want to type
<adsc>	both are in a similar price class
<lf94>	ams if i built a symbolics keyboard how much would you buy it for
<adsc>	everyone can build a symbolics keyboard with a teensy and a couple of cherry switches and keycaps
<ams>	lf94: none, ihave one.
<plushwork>	ams: µ is just alt gr+m
<plushwork>	lf94: i think even a potted plant can replace juniors sometimes
<lf94>	plushwork could you outsource it
<lf94>	to me
<plushwork>	lf94: office decoration? doubt it
<plushwork>	besides, we're already a near-shore company, we can't offshore
<lf94>	hahaha
<plushwork>	lf94: oh and i forgot to mention...we use php
<reaga>	hey guys im solving the euler project :)
<myrl-chan>	reaga: wow!
<myrl-chan>	reaga: what number?
<rindolf>	reaga: hi! awesome.
<rindolf>	merijn: why do you think so?
<merijn>	because it focusses on arithmetic tricks and encourages exploring the areas of a language least useful in practical programming
<lf94>	plushwork, i use php too
<merijn>	i.e. numeric trickery and "one liner syndrome", as opposed to learning how to abstract and generalise problems
<plushwork>	lf94: ouch. do you need a hug?
<lf94>	i've learned to live with it.
<vin-ivar>	isn't project euler more for practicing your maths than your programing
<vin-ivar>	mm
<plushwork>	vin-ivar: no
<plushwork>	maybe partially
<plushwork>	but in real life you have to tackle problems from all sort of sciences
<vin-ivar>	sure, but what particularly advanced aspects of programming does project euler even target?
<vin-ivar>	it's essentially just implementing algorithms for mathematical stuff
<reaga>	myrl-chan: im solving number 3 now
<reaga>	im doing it all in haskell
<myrl-chan>	reaga: \o
<myrl-chan>	reaga: i love you.
<reaga>	why
<myrl-chan>	reaga: don't ask. just feel.
<markand>	does someone know the difference between milestone and version in bitbucket ?
<myrl-chan>	markand: er, i don't use bitbucket, but judging from the meaning of those words, milestone would be adding a major planned feature.
<myrl-chan>	if anyone wants to correct me, go on, since i have no idea what i'm talking about. :p
<markand>	for me a milestone is a planning for the next version
<markand>	but i wonder why separate them
<blipped>	myrl-chan: it's ok, no one really does.
<myrl-chan>	markand: well, if i were a programmer, i wouldn't want to be seeing a wall of text about bug fixes. :p
<ams>	lf94: but hmm... you think one could sell such keyboards?
<myrl-chan>	if i were a programmer working on such project*
<johnpoison>	markand: i guess a milestone means developer versions, the version is something that is stable
<markand>	myrl-chan, well, i like to be organized
<markand>	johnpoison, ah yes
<myrl-chan>	markand: doesn't mean that other people are.
<merijn>	reaga: i think project euler is even worse for haskell than other languages :\
<ams>	markand: a milestone tends to be project goal, while a version just tends to be a release.
<markand>	ams, okay
<merijn>	reaga: because it forces you to run into a whole bunch of warts, as opposed to playing into haskell's strengths
<myrl-chan>	merijn: eh, i disagree.
<markand>	so a milestone is not mandatory a version number
<ams>	rigth
<myrl-chan>	merijn: imo, most of the things there is better in haskell...
<markand>	or, you set a milestone number as the next (not released) version and then you remove it and mark it as a version
<markand>	i will dig that
<merijn>	myrl-chan: the num hierarchy is one of the bigger warts in haskell
<lf94>	ams: i believe there are people who could build those keyboards.
<kunji>	but project euler seems to be all solved problems...
<reaga>	merijn: worse ? u mean better
<reaga>	haskell is for math :)
<myrl-chan>	merijn: until you require memoization and graph.
<lf94>	ams: i have learned keyboard building, is not difficult.
<markand>	haskell ?
<myrl-chan>	graphs*
<markand>	unicorn
<ams>	lf94: well, there is that, and there is lazy people.
<merijn>	myrl-chan: as opposed to, say, the ease of which you can do multithreading, etc.
<merijn>	reaga: "haskell is for math" <- i disagree
<ams>	lf94: i can build a computer from ttl's .... doesn't mean i wanna do it to often
<johnpoison>	markand: here's an example  https://launchpad.net/elementaryos/+series
<lf94>	github > bitbucket for self advertising
<markand>	github does not support mercurial
<merijn>	i would also disagree that project euler is math >.>
<lf94>	bitbucket > github for personal secret stuff
<markand>	johnpoison, thanks!
<merijn>	markand: i use hg-git to interact with mercurial, no problems!
<markand>	i should try it
<merijn>	markand: i've been hosting all my stuff on github for 2+ years and i've been using mercurial exclusively for longer :p
<myrl-chan>	ams: "often"
<merijn>	markand: initial checkouts of git repo's is a bit slow due to needing to convert, but there's only minor issues with hg-git, no real showstoppers, imo
<myrl-chan>	ams: also, that reminds me, i plan to make a computer from ttls.
<ams>	myrl-chan: well, once every 20 years is good enough :)
<myrl-chan>	ams: this summer. i already have most of the parts.
<ams>	myrl-chan: what kind of computer?
<myrl-chan>	ams: mym.
<ams>	something sensible, or the usual experimental crap?
<myrl-chan>	ams: mym is high performance, low cost, except for it being 64-bit and having 64 registers.
<merijn>	markand: biggest issues are: 1) git doesn't store file moves, so you lose file move info when roundtripping mercurial through git and 2) mercurial not supporting octo-merges, so i'm not sure how it'd handle git repos with octomerges
<merijn>	markand: but, tbh i've never encountered a git repo with octomerges...
<ams>	myrl-chan: you sound like a marketing dweeb
<lf94>	myrl-chan: uh.
<myrl-chan>	ams: ikr?
<lf94>	>high performance, low cost
<ams>	myrl-chan: can i run emacs on it?
<myrl-chan>	lf94: yes.
<lf94>	2 words
<lf94>	fair dinkim
<myrl-chan>	ams: perhaps.
<ams>	perhaps?
<markand>	merijn, okay
<lf94>	yeah we only care about emacs and lisp myrl-chan
<markand>	i will try it someday :p
<ams>	yeah ..
<kunji>	i can give you lots of things that are high performance and low cost... but it will cost you tons of money if you want actual implementations :p
<ams>	lf94: wanna help me with lispm stuff/
<myrl-chan>	ams: it isn't specifically a lisp machine, but it can probably make do.
<lf94>	ams wanna do my uni assignments for me
<lf94>	because then i would say yes
<ams>	lf94: mm...
<lf94>	lispm > uni assignments
<ams>	lf94: what kind of uni assignments?
<lf94>	i love the concept of the lispm
<ams>	6.3gsmbx
<myrl-chan>	and if i wanted to make a lispm, i would have made a lispm.
<ams>	6.3g	smbx
<lf94>	ams: producer/consumer issue using /dev/random to get random numbers
<ams>	lispm stuff =)
<myrl-chan>	but no, i'm not interested, sorry.
<lf94>	ams: aaaaand web assignment
<ams>	lf94: mm... no. :-)
<lf94>	basically make facebook again
<lf94>	with user authentication
<ams>	lf94: i still need a cold world dumper thingie ..
<merijn>	markand: oh, another tiny thing is that git branches map to mercurial bookmarks, but mercurial doesn't always auto-forward bookmarks after a merge. so you need to sometimes move the "default"/"main" bookmark to the latest revision to push it to git. but anyway, i would strongly recommend giving it a try if like me you really dread git's interface :)
<lf94>	also i'm 3d modeling my grandma's house still
<lf94>	need pics
<kunji>	lol, well yes, facebook doesn't have that yet
<myrl-chan>	(why would i make a lispm anyway? :p)
<lf94>	myrl-chan because lispm is awesome?!
<ams>	myrl-chan: well, you wouldn't.
<ams>	myrl-chan: or rather, if you would, you would make an existing on ..
<myrl-chan>	lf94: tell me why they're awesome.
<ams>	like the cadr or ivory ..
<ams>	since it is really the software that makes it, not hardware.
<myrl-chan>	seems to be easier done with microcode...
<ams>	the cadr was microcoded ..
<ams>	the ivory, well, it was ... but not really.
<ams>	3600's where also microcoded .. got the code for that .. but in shitty pdf ..
<jkbbwr>	i want to believe lisp is awesome, but meh
<kunji>	i don't think it matters much anymore, that was in the days of comparatively very slow hardware, so that low level optimization was more important
<ams>	you are confused.
<ams>	there where not that many low level optimizations.
<kunji>	ams: no?  then what was the point?
<ams>	and it was not that slow hardware at the time.
<merijn>	low level optimisation is still important
<ams>	kunji: the point was a nice architecture, where it was lisp all the way down.
<merijn>	it's only no longer important for the "popular" subset of programming
<reynir>	did github just die?
<kunji>	ams: and go on, what is the point of having that?
<ams>	kunji: that was the point.
<gune>	hey again guys, so i got my program that flips the axis on a matrix working yesterday. to check if its correct i flipped a matrix twice and checked if it matched the original, which it did. however reversing a reversed matrix was much much slower, is this because it has more lines? code here-> http://ideone.com/kngl4d
<kunji>	ams: consider me a skeptic considering that they did considerably outperform regular machines running lisp.
<ams>	kunji: it meant that everything was much easier, writing a compiler was simple enough, writing the garbage collector was easy enough.
<merijn>	ams: i have some friends/colleagues working on a cpu design aimed specifically at lazy functional languages :)
<kunji>	ams: ah, well yes
<merijn>	since those have very different memory/cpu requirements from most imperative languages
<kunji>	merijn: care to elaborate?  i'm interested.
<ams>	writing assembly was just writing normal code.
<ams>	no difference...
<ams>	(si:%cdr '(123 . 123)) <-- direct assembly.
<merijn>	kunji: i think they've only just started (less than a year), but the idea is focussed on replacing traditional caches with a memory pool
<ams>	the real benefit was a coherent system though, where everything was a object, and you could trivally make things behave as you wished..
<reaga>	isnt haskel for math?
<reaga>	i thought it was
<merijn>	kunji: one big problem is that function application maps to "allocating a thunk" and then not using it directly, which is like the opposite of what's efficient on traditional machines
<kunji>	ams: yes i get it now, and so the performance was likely a result of ease of implementation.
<wdaghs>	if anyone could help linking html forms and buttons to a python function that would be great!
<ams>	kunji: oh sure... i mean, if you have specialized hardware for something, it always will outperforme a machine that isn't well suited for it
<merijn>	reaga: i use haskell for networking and shell scripting, so...
<reaga>	is github down
<reaga>	who knows
<reaga>	merijn: so...
<reaga>	did you havea a point?
<kunji>	merijn: it's been a while since i've heard that word, "thunk"
<myrl-chan>	merijn: my god...
<myrl-chan>	merijn: that's making me feel hot.
<ams>	kunji: there where many special hacks that made things easier for dynacmi langueges, like just the tag decoding in hardware, which meant that you could easily dispatch on things, or marking things for gc depending on the area ..
<merijn>	kunji: that means you need to hang out in #haskell more :p
<merijn>	reaga: i'm curious where people keep getting this "haskell is for math" idea from
<ams>	merijn: "proofs"
<myrl-chan>	merijn: the problem with lazily-evaluated assembly is probably...
<myrl-chan>	merijn: what would force evaluation?
<myrl-chan>	merijn: yeah, stupid question, but really, what would force evaluation.
<merijn>	it's like the people that keep telling me that they "want to learn category theory to understand haskell, because haskell is based on category theory", but that's 1 counter productive and 2 not even true
<cust0sl1men>	in mvc, should the view directly touch the model or vice versa ?
<myrl-chan>	merijn: like, is there a dedicated "out" command to force evaluation?
<merijn>	myrl-chan: oh, they're not doing "lazily-evaluated assembly", but optimising the instruction set for the kind of code generated when compiling lazy languages
<myrl-chan>	merijn: oh okay.
<myrl-chan>	fair enough.
<merijn>	like i said, to make allocating things/resolving indirections, etc. faster
<reaga>	lazy is the way to go
<myrl-chan>	merijn: doesn't matter, i now have a new fetish. lol.
<reaga>	why would you want a program to be not lazy? lol
<reaga>	makes no sense
<reaga>	lazy doesnt mean your haskell program has to idle all the time
<myrl-chan>	by the end of the month, i probably have a lazy evaluated machine.
<myrl-chan>	not saying it'll be nice.
<kunji>	reaga: why would you want your code to do what it's told when it's told?  :p
<myrl-chan>	reaga: because of thunks...?
<merijn>	myrl-chan: if you wanna learn how to compile haskell to asm/c, there's a very neat paper explaining that
<reaga>	kunji: because its sub optimal in many cases
<kunji>	reaga: i asked why you would want to, not why you wouldn't
<myrl-chan>	if you need number crunching, thunks are probably not the way to go.
<merijn>	myrl-chan: http://research.microsoft.com/apps/pubs/default.aspx?id=67083
<myrl-chan>	just saying.
<ams>	i need to make some functions for diff mode to move to the next "removed line" and "next added line" .. hmph
<reaga>	oh i misread
<reaga>	kunji: why are you askig me that?
<wdaghs>	here's the pastebin if anyone wants to help http://pastebin.com/69u7yhbs
<myrl-chan>	reaga: 1 + 1 becomes thunk(thunk(1) + thunk(1))
<kunji>	reaga: because it's rephrasing your question in a perhaps more clear way.
<myrl-chan>	reaga: and thunks don't go without overhead.
<reaga>	is github.com down?
<adsc>	yep
<myrl-chan>	reaga: there's a reason why bytestrings exist you know. :p
<reaga>	thats fucking shit its down already
<reaga>	fuck i just starteed my accounot
<reaga>	and its down immediately
<ams>	well, don't use ssaas then ..
<myrl-chan>	how unfortunate.
<adsc>	reaga: they closed and decided people should use sourceforge instead
<kunji>	straw that broke the camels back, it was reaga's account
<ams>	suite yourself basically for trusting a centralized service.
<myrl-chan>	ams: ssaas?
<ams>	saass ...
<ams>	software as a software substitute.
<jkbbwr>	ams: github does a good job when its up.
<ams>	https://www.gnu.org/philosophy/who-does-that-server-really-serve.html
<myrl-chan>	reaga: also, i'm not sure if github.com's down, their website says "sorry, we're down for maintenance", but i'm not really sure.
<kunji>	personally i would rather host my own instance of gitorious than use github
<ams>	kunji++
<myrl-chan>	kunji: on a raspi.
<jkbbwr>	kunji: requires management and is less feature complete
<ams>	i actually do that :)
<ams>	but on a beaglebone ..
<ams>	since that doesn't need non-free software to work
<kunji>	^_^, i do have a pi i should put to use
<myrl-chan>	how about a beaglepi?
<kunji>	jkbbwr: no solution is perfect, it's my preference
<sbrg>	i just set up my pi yesterday -- probably just going to use it as a media center
<myrl-chan>	i rate raspi 3.14/5
<sbrg>	running arch linux
<myrl-chan>	sbrg: ily
<ams>	wonder if it would be evil to name functions wiht an asterix... mmm..
<jkbbwr>	kunji: cool :)
<myrl-chan>	ams: how about do it haskell style? `function'''''''`
<kunji>	ams: depends on the language, it could get really ugly
<myrl-chan>	(the most quotes i used was actually 2, thank god.)
<sbrg>	function prime
<sbrg>	function prime prime
<sbrg>	function prime prime prime prime prime prime prime
<myrl-chan>	sbrg: lol
<ams>	kunji: i only do c and common lisp.
<ams>	:-)
<sbrg>	let optimus' = .. heh
<myrl-chan>	sbrg: function prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime prime
<kunji>	something is wrong with those functions
<myrl-chan>	kunji: i think it's because it lacks some prime.
<paracyst>	githooooooooob
<paracyst>	:(
<aawe>	jesus. if you take an email-free vacation for 5 days around the end of the months and your digitalocean payments fails to process on the first day, all your data is gone forever when you get back
<aawe>	that's drastic
<kunji>	myrl-chan: we may need a factory to build like, optimus'[n]  <--- doesn't know the syntax at all
<jkbbwr>	aawe: odd, they normally just freeze your droplet limit
<jkbbwr>	aawe: do you have huge bills?
<adsc>	aawe: in the new web, you don't take email-free vacations
<aawe>	jkbbwr: no i have my account topped up with a lot of money. but i am reading the faq
<jkbbwr>	aawe: welp
<aawe>	i sometimes imagine taking a year off the internet and staying in my cabin in the mountains. guess that's not so easy then
<aawe>	if lots of services remove your shit day 1
<sbrg>	anyone here using arch with linux-ck?
<aawe>	i'm just going to continue cramming my account to the brim with money, i think
<aawe>	i have no other backup
<adsc>	aawe: that's no guarantee for success
<ams>	why am i slistening to u2..
<adsc>	aawe: what if their prices increase rapidly due to inflation?
<johnpoison>	github works fine for me
<aawe>	adsc: if i have 1k€ on the account, i should be safe for a year. my monthly cost is 25€
<adsc>	yeah, it's back
<aawe>	i'm gonna run out in 6 months though. time to fill up
<amigojapan>	hi, my program seems to be forzen withought showing an error, it only idsplays this as output:”init client:1”, this is the program http://pastebin.com/xhz7cy7p    i asked in #lua   but still dont get an answer…
<jkbbwr>	aawe: rofl
<sbrg>	amigojapan: it's waiting for a client
<sbrg>	accept blocks
<sbrg>	brb reboot
<amigojapan>	sbrg:ok
<tommycannady>	hi
<tommycannady>	hi amigojapan
<amigojapan>	hi tommycannady
<tommycannady>	can anyone here point me to a good opengl texturesprite drawing guide ?
<sbrg>	and back
<aawe>	tommycannady: what's a texturesprite?
<aawe>	a sprite drawn from a texture with transparency?
<tommycannady>	a textured quad with possible applied shaders and other features
<tommycannady>	such as scaling and rotation
<tommycannady>	not just ordinary blitting but using 3d hardware
<tommycannady>	i don't know that i want to use glut : ) but maybe it would be ok
<aawe>	i imagine you'd want to push quads, and attach a texture id to each vertex, and push textures in a uniform variable
<johnpoison>	tommycannady: what language?
<tommycannady>	c/c++
<tommycannady>	uniform variable ?
<ams>	tommycannady: c and c++ are not the same language, pelase don't mix them up like that.
<tommycannady>	a batch ?
<tommycannady>	either or.. due to the nature of using c++
<tommycannady>	the tutorial can be in either
<tommycannady>	if they are both supported
<aawe>	tommycannady: you can give data to the shader as either a vbo or as a uniform variable
<tommycannady>	ok
<aawe>	uniform variables are the ame for every vertex/fragment, vbo's vary for every vertex
<aawe>	then you can interpolate variables from each polygon vertex to the fragments
<johnpoison>	tommycannady: i looked at cocos2d-x sources as a tutorial
<tommycannady>	what does that allow you to do different from uniforms ?
<tommycannady>	i know taht you just explained it
<tommycannady>	but i mean visually
<aawe>	for learning opengl, i recommend reading a (modern) book on it. the online tutorials for opengl suck for some reason
<johnpoison>	+
<johnpoison>	^
<tommycannady>	thanks john
<tommycannady>	thanks aawe
<tommycannady>	hmm
<blissenobiarella>	[c++] i was able to prevent functions of an outside library to print output on the terminal by redirecting cout with cout.rdbuf(some_file). can i create another ostream so that i can still print information, while the library functions i call cannot? or is there a better way to quiet those functions?
<tommycannady>	any modern book you can recommend ?
<johnpoison>	tommycannady:  though it's objective-c i found this useful http://www.raywenderlich.com/3664/opengl-tutorial-for-ios-opengl-es-2-0
<tommycannady>	ah
<sbrg>	blissenobiarella: yes, you should be able to do output explicitly to stdout assuming you haven't closed it
<marchelzo_>	silly question: does software run more slowly on 64-bit architectures since passing pointers means doing an 8-byte copy rather than a 4-byte copy?
<tommycannady>	do you recommend glfw ?
<sbrg>	i am not a c++ guy, however, so i don't know how you would do this exactly.
<blissenobiarella>	sbrg: printf still works, indeed! thanks
<mangekyo>	hi all
<kidbeta>	marchelzo_ depends where the bottlenecks are
<mangekyo>	what ide for c++ development
<sbrg>	mangekyo: platform?
<merijn>	vim :)
<ams>	emacs.
<sbrg>	egads, no emacs
<marchelzo_>	ed
<sbrg>	vim indeed
<merijn>	marchelzo_: in many cases, yes
<ams>	vim is a imitation of teco, and implements emacs badly.
<kidbeta>	merijn many?
<marchelzo_>	interesting
<merijn>	marchelzo_: 64bit binaries commonly are 10-20% slower than 32bit, due to wasting cache on pointers
<tommycannady>	aawe do you recommend glfw ? : )
<tommycannady>	or which ?
<adsc>	tommycannady: billboards and 2d text of this tutorial should give you an idea: http://www.opengl-tutorial.org/intermediate-tutorials/billboards-particles/billboards/
<marchelzo_>	merijn: thanks, that's fascinating
<merijn>	marchelzo_: if you care about high performance you should only use 64bit if 1) you need more memory, 2) you do lots of computation on 64bit values, etc.
<tommycannady>	oh thanks adsc : ) so helpful of you all
<kidbeta>	  merijn  or you know, could use the extra registers
<marchelzo_>	i'll definitely keep that in mind
<merijn>	kidbeta: oh, yes! i forgot about that one!
<ams>	merijn: more like 5%-10%
<kidbeta>	twice as many gprs registers that are twice as wide
<merijn>	ams: i forgot the actual numbers and i was lazy, so i was guessing of memory :)
<adsc>	tommycannady: there is also #opengl channel
<ams>	but in most cases it is faster.
<mangekyo>	windows
<kidbeta>	64bit also from the virtue of only being on certain cpus guarentees some stuff as well
<tommycannady>	yeah i'm in there now
<ams>	merijn: that is not the reason to only care about 64-bit, one other bit is for representing numbers, and data..
<ams>	merijn: a 32-bt system in most cases is only capable of handling 4g data .. which is tiny by these days standards ..
<ams>	or 32-bit time stamps or whatever ..
<ams>	64-bit is useful for lots of nice things .. not just performacne
<kidbeta>	ams pae ?
<ams>	pae is terribly slow.
<merijn>	ams: my first comment on "you should use 64bit" was "if you need more memory" >.>
<aawe>	i prever metaphysical address contraction
<ams>	merijn: little to do with "more memory"
<ams>	more like "if you want to handle things that are >4g"
<kidbeta>	its less then 4gb as well
<ams>	or if you have time stamps that role over with 32-bit ..
<aawe>	if you need programs to be able to allocate more than 4g of memory
<ams>	or whatever..
<kidbeta>	its more like more then 3gb
<ams>	more like it depends.
<kidbeta>	yeah but its 4gb
<kidbeta>	not*
<tommycannady>	i'll be silent a while now
<mangekyo>	what ide for c++ development in windows
<ams>	and it isn't 3g either.
<merijn>	ams: right, by "need more memory" i meant "need to handle things >4g"
<kidbeta>	mangekyo id use vs
<ams>	mangekyo: emacs.
<aawe>	is it lte?
<ams>	mangekyo: (realise that such a question is utterly pointless: you will get as many respones as there are people, probobly more)
<aawe>	if you need lte, you want 64bit
<aawe>	mangekyo: sublime text
<ams>	merijn: i am thinking maybe you are quoting the 20% as a file-size thing ..
<pi->	it is very frustrating trying to find some community or forum for ergonomic furniture / design. i'm currently building my own work desk out of scaffolding.
<ams>	merijn: cause that is around 20% in all cases.. sometimes though up to 50% ..
<sbrg>	mangekyo: for windows i'd go for visual studio as well.
<pi->	does anyone know of any irc channel that might connect with this? maybe robotics / mechanical engineering...
<kidbeta>	ams it probably doesnt help in that regards that x86_64 instructions are bigger :p
<aawe>	pi-: people on this channel believe they are qualified to voice their opinion in any topic, so i say stay in ##programming
<aawe>	pi-: there is a ##woodworking
<pi->	aawe: :]  i've just found ##mechanics also
<aawe>	you can try search a few different keywords from alis - "/query alis", "list furniture"
<rindolf>	mangekyo: note however that the microsoft c and c++ compiler kinda sucks and is not standards compliant.
<pi->	has anyone here found themselves driven to desperate diy in order to reduce strain injury?
<ams>	kidbeta: uhm, that is .. what i said.
<ams>	why repeat?
<kidbeta>	ams true
<kidbeta>	ams i interpreted that as about the pointers again
<sbrg>	pi-: nope -- the worst thing i've felt is getting tired/cramps in my hands from really insane and lengthy sessions of coding on my desktop.. but that went away immediately.
<sbrg>	i don't get it -- pepole talk about sitting wrong, getting carpal tunnel and what not and i've never even come close.
<mangekyo>	what version should i use for vs
<ams>	sbrg: cause you are lucky.
<mangekyo>	what are my other options ?
<mangekyo>	eclipse ?
<ams>	or you take micro breaks without noticing..
<aawe>	pi-: what kind of strain?
<sbrg>	ams: perhaps
<kidbeta>	mangekyo the latest
<kidbeta>	i think its 2013 or somethinbg
<ams>	i think most people who get rsi really do something really monotouns, or have really bad posture ..
<aawe>	mangekyo: you can use gcc via mingw
<ams>	for example, mice today are terrible, and i get strains ..
<sbrg>	ams: well, for one i like to lean back when i sit.. just a habit. then i read an article not long ago that the optimal sitting/working position was not one with a rebar-straight back, but leaning back a little much like what i do
<pi->	aawe: probably all of them. my brain is very well-designed for computer programming. my body however is poorly designed for the same.
<juesto>	hello, i would like help handling multiple windows sdks and visual studios
<sbrg>	ams: really? i use the mouse very little except when gaming, which is rather seldom as well
<aawe>	pi-: i hope you have a really high sensitivity setting on your mouse. you should be able to move the pointer across the screen with a tiny movement
<juesto>	im missing mfc from the sdk, where do i obtain it?
<ams>	sbrg: well, 30 years of coding... not best posture, the only thing that wrecks havoc is mice ... specially modern ones ..
<juesto>	and the stripped streambase.lib ?
<sbrg>	i see
<ams>	sbrg: hell .. i use a 70s mouse because of that, and don't have any problems now
<sbrg>	lol
<sbrg>	strange
<ams>	http://www.asl.dsl.pipex.com/symbolics/photos/io/new-mouse_6072.jpg
<pi->	i think lack of upperbody strength and spindly physique both play a big part.
<ams>	is what iu se...
<sbrg>	ams: seriously?
<sbrg>	lol
<sbrg>	wow
<sbrg>	pi-: heh, that might be a part yeah
<juesto>	anyone into windows sdk?
<sbrg>	deadlifts <3
<merijn>	pi-: fwiw, most of my strains/aches have disappeared since i started lifting
<rindolf>	juesto: i used to be.
<ams>	sbrg: seriously.
<ams>	best fucking mouse ever made ..
<aawe>	pi-: read starting strength, start hitting the gym every once and again and start eating 2x as much food
<ams>	in my so very not humble opinion.
<aawe>	pi-: you will save time and money in the long run
<juesto>	rindolf: ok, since when mfc was stripped? and, well, above questions.
<pi->	aawe: having a high mouse sensitivity means you require a more precise movement, which escalates the strain.
<ams>	what aawe said..
<stryyker>	it wasn't stripped, i explained which editions of vc++/vs shipped with it.
<ams>	and don't eat mcd crap ..
<pi->	yes, i've been doing swim&gym five times a week for the past three months. which lets me get back on the machine a bit.
<rindolf>	juesto: mfc was stripped?
<merijn>	aawe: so how much do you lift? :p
<juesto>	think so.
<stryyker>	why are you using ancient versions of vc++?
<aawe>	pi-: if you work out that much, you need to eat a lot (if you are underweight)
<juesto>	streambase.lib is definitely stripped so amcap cant be compiled
<ams>	merijn: such numbers are only interesting if you know what the person weighs.
<jupelius>	2x much food sounds stupid
<stryyker>	rindolf: vs2013 has mfc
<jupelius>	hunger is a pretty good indicator of how much food you need
<aawe>	merijn: once or twice a week, which is not enough
<sudoneko>	hey, i have an interview today for my first programming job and i've heard they're gonna ask me some questions about tdd, what can i expect?
<jupelius>	not snacky feeling but real hunger
<juesto>	stryyker: because of old software source code, i have majorly popular visual studios installed
<rindolf>	stryyker: why are you telling me that?
<aawe>	sudoneko: have you ever written a test?
<ams>	jupelius: no, since to build muscle, you have to eat. it kicks of the testosterone.
<juesto>	vs98, 2003, 2005 2008 and 2010
<stryyker>	rindolf: you asked if mfc was stripped
<ams>	juesto: and other stuff that is required to build muscle.
<juesto>	lol
<jupelius>	ams: but the amounts are not that ridiculous
<rindolf>	stryyker: yes, i asked juesto that.
<merijn>	ams: of course, i couldn't compare anyway, since i'm doing olympic instead of power anyway :p
<sudoneko>	aawe: not an automatic test but i've written test cases and applied them in college...
<jupelius>	going to super bulk isntantly when you start lifting is just plain stupid
<ams>	merijn: :-)
<ams>	jupelius: not really, nor is it bulk
<ams>	you don't know what bulking is ..
<jupelius>	well, bulking is stupid if you're not a body builder
<ams>	really ..
<merijn>	throwing heavy weights to the ground is just more fun :)
<juesto>	should i reinstall windows? a multiple dev enviorment is very messy it seems
<aawe>	jupelius: you need to eat a lot if you have a fast metabolism if you want to gain muscle. it's not "bulking" just because you make sure to get enough protein and calories
<ams>	bulking and cutting are .. interesting .. and 2x is not bulking in any shape or form.
<juesto>	at least somehow it doesnt conflict o.o
<jupelius>	well, it depends how much you eat now :p
<juesto>	still would like someone with windows sdk knowledge to look at it
<ams>	juesto: no, it doesn't.
<amigojapan>	sbrg: are you still around? in lua i was told ot use socket.select instead of the method i am using…   but i dont understand hwo to generate the servers table for this code, any idea? http://stackoverflow.com/questions/16004612/how-do-i-use-socket-select
<jupelius>	if you eat enough now and then multiply it by 2 it's too much
<juesto>	??
<aawe>	juesto: he mentioned he has a spindly physique, by which we can infer that he does not eat enough
<sudoneko>	aawe: we did a project in college where we made an application for an end user, but we used the waterfall cycle though. i've read up on extreme programming and tdd and the agile cycle, just wondered what sort of things they might ask me
<ams>	juesto: if you are skinny, then you need to eat a shit load more even if you (and i dare say, you _think_ you eat alot but you fucking don't) wanna gain muscle.
<juesto>	what food has to do with windows sdk? wtf
<merijn>	if we're doing this conversation anyway. how do you people track calories of meals you cook? tracking calories of snacks is easy, but i barely snack anymore and tracking dinner is complicated to the point i nearly give up
<juesto>	wrong complete?????
<jupelius>	merijn: i don't.
<ams>	merijn: i don't .. i should ..
<aawe>	sudoneko: how would you tdd the user authentication of a website?
<henke37>	tdd?
<stryyker>	juesto: don't confuse sdks with vs/c++ (mfc is a vc++/vs extra, not sdk)
<sbrg>	amigojapan: i don't really use lua, but reading from sockets where there is no data waiting, or accepting clients where there are no clients waiting means you block. select lets you ask if there are any of those sockets that have data waiting and then handle those sockets.
<juesto>	stryyker: yea fine, how do i get it? do all vs include it? (i have many)
<ams>	merijn: i think in most peoples cases, unless they do bodybuilding or something special, just counting the meals per day is enough ..
<znoosey>	merijn: don't count calories, weigh yourself and meassure your belly :p
<sbrg>	it is what is traditionally called non-blocking io
<juesto>	and somehow it cant find mfc in path o.o
<monkeyget>	merijn: total up the calories of the ingredients. weight the total result and each meal and do the ratio
<juesto>	stryyker: i'm not sure if i really have afxres.h then
<juesto>	it is included with vs?
<amigojapan>	ok sbrg i guess i am stil at a loss of how to create the sockets withought blocking ….
<monkeyget>	it's a bit annoying so it only makes sense to do it if you cook in bulk
<aawe>	merijn: i cook a 10-servings batch and keep track of how much i use of each ingredient (mostly use full packages of stuff), then i look up the calories of each thing (using myfitnesspal for things like eggs) and add it all together. then i divide the batch into servings depending on the total calories to get a good amount for each portion
<ams>	merijn: like uhm, for lunc h .. and a bit late lunch, 5 potatoes, four eggs, one pack of bacon .. i have no fucking clue how many calories that is ...
<juesto>	it shouldnt be throwing the error -.-
<sudoneko>	aawe: write a user acceptance test that fails, write an automatic test that tests different boundaries of the login and fails, then write some code and test it until the automatic tests pass?
<ams>	aawe: what kind of food you cook?
<merijn>	ams: i would like to lose some weight, but i've already eliminated all snacks and sugary drinks from my diet, so i basically only eat 3 meals a day (not big, especially not for my body weight) and lift 3-5 times a week, but i'm not really losing anything. i fear the only thing i have left to cut out is alcohol when going for drinks with friends :\
<aawe>	ams: mostly gratins
<merijn>	monkeyget: i don't cook for just myself, so that doesn't work out
<ams>	merijn: walk more, lift more.
<ams>	merijn: and remeber, muscle weighs more than fat!
<jupelius>	once you find out how much you can eat without gaining weight is very easy to control it with the amount of exercise
<aawe>	merijn: counting calories is a good way to get a feel for how much food you should eat otherwise, so you don't need to keep counting forever
<sbrg>	merijn: eat less. or rather, eat fewer calories. losing weight is 90% about diet. it's easier to not eat 700 calories than it is to go out and burn 700 calories.
<merijn>	ams: oh, i know. i gained 10kg since last year without going up in clothes size >.>
<stryyker>	juesto: i told you that it is part of mfc and not all editions of vc++ or vs have mfc. (you should read what is written more carefully)
<aawe>	merijn: also, a keto diet is a good way to eat less without being so damn hungry
<ams>	merijn: and have patience .. that is most importat
<ams>	merijn: maybe you're just a big bloak ..
<ams>	genetics matter some you know ..
<juesto>	stryyker: then what do i do? i have professional editions of 2003,2005 and 2008 (2010 is ultimate and vs98 is enterprise/pro mix)
<juesto>	stryyker: i just need to know a way to find if i have it or not
<merijn>	sbrg: that's my point, there's not much left to cut out of my diet. it's basically 2 slices of bread in the morning, sandwhich for lunch, plus dinner. a few beers 1-2 times a week, hence i wanted to track my meals better to see where the calories are coming from, because logically i must be eating them somewhere
<gedamo>	i'm currently on a 5:2 diet where you eat normally 5 days of the week and 'fast' (eat very little) on 2
<aawe>	i dropped in weight drastically when i did keto
<ams>	beer == calorie bomb :-)
<aawe>	gedamo: i tried some intermittent fasting, but i got too angry on the fast days
<merijn>	ams: i know, hence why i said i fear that's the only thing to cut :p
<gedamo>	angry? :|
<merijn>	ams: because that'd suck! >.>
<aawe>	gedamo: sooo hungry
<ams>	aawe: nice, what kind of gratins? i'm looking for means to gain a few pounds .. mostly since i'm fucking lazy.
<sbrg>	merijn: i see. well, peoples' metabolisms are different and you may be unlucky in that your body does not need many calories to stay at status quo
<gedamo>	merijn: https://en.wikipedia.org/wiki/5:2_diet
<merijn>	sbrg: anyway, i'll just keep fiddling until i find what works :)
<sbrg>	i'm currently setting myself up for a few years of fixing health problems using a diet consisting mostly of fast food, beer and cigarettes
<ams>	aawe: you freeze them or?
<ams>	aawe: seriously, gimme recipies ..
<sbrg>	merijn: there is always puking
<sbrg>	jussayin
<znoosey>	keto diets usually work pretty well, i do keto for a week or two if i stop losing weight on a diet
<gedamo>	i did keto for two weeks but there's no way i could do that long term - no chocolate :p
<aawe>	ams: i boil a bag of broccoli, then i fry a leek and sausages. i mix in feta cheese in there, and maybe some dried tomatoes. i prepare the liquid by mixing 500g of creme fraiche with 8 eggs and ~3dl of cream, and whip together with some seasoning (garlic salt is great). then i throw it all together in an oven pan and add a lot of cheese on top and flatten it
<ams>	carbs .. love carbs ..
<merijn>	ams: actually, beer isn't even that bad after just looking it up. it's only like 132 calories a bear or so
<jupelius>	gedamo: that's my leg day treat, chocolate
<merijn>	i'm dutch, if i can't eat carbs i couldn't eat bread and i wouldn't know what to eat >.>
<ams>	aawe: ah, no carbs?
<znoosey>	gedamo: yeah, me too... but it does something to your body, i lost more weight after going off the diet than i did on it
<aawe>	ams: eat pasta with it if you want. pasta goes with everything
<ams>	haha
<aawe>	ams: why no keto?
<kidbeta>	keto is only meat right
<juesto>	why talking about food in programming? offtopic fail?
<ams>	aawe: carbs .. carbs man .. gotta have my 10 potatoes each day
<sbrg>	merijn: a bear?
<merijn>	kidbeta: keto is "no carbs"
<aawe>	keto is mostly fat and the rest protein, no carbs
<sbrg>	that's pretty hardcore to go out with friends for a bear or two
<merijn>	kidbeta: anything else goes
<jupelius>	or rather, very few carbs
<juesto>	................
<merijn>	sbrg: ;)
<ams>	maybe i should go a week on keto just for kicks ..
<aawe>	juesto: this is the offtopic channel, we talk programming in ##defocus
<merijn>	aawe: i always feel my digestion goes to shit from that
<pi->	merijn: do you know how far you have to swim to burn off 132 cal? :]
<aawe>	merijn: you need to add vegetables or another source of fiber
<ams>	pi-: such numbers are bogus.
<aawe>	like low-carb musli
<merijn>	pi-: yeah, but with a budget of 2500 a day...
<juesto>	aawe: why?
<juesto>	oh well.....
<jupelius>	pi-: i used 132 calories to write this message probably
<juesto>	duh
<merijn>	aawe: mostly i don't know what to eat for breakfast for keto >.>
<pi->	jupelius: rkn
<merijn>	i'm so used to bread for breakfast
<aawe>	merijn: normal food
<merijn>	bread is normal food >.<
<aawe>	bread is bread
<znoosey>	merijn: leftovers from last nights dinner
<aawe>	^
<ams>	there is bread, and then there is .. chemcials.
<aawe>	chemtrails
<jupelius>	pi-: rkn?
<monkeyget>	there is as many calories in 2.2 kilograms of zucchinis as in 100 grams of sweets
<ams>	aawe: the graint thing, is nice .. idea.
<juesto>	anyone into windows development to give me a hand with some issues please?
<ams>	juesto: no.
<juesto>	i mean seriously
<juesto>	is this a fucking joke?
<ams>	no.
<aawe>	ams: 35 minutes on 150degrees, then 10 minutes on 175 degrees.
<jupelius>	juesto: just ask and someone will probably answer
<juesto>	ams: why do you even answer
<rindolf>	well, it wasn't too bad, just had some duplication.
<znoosey>	juesto: you might be better off in ##csharp
<ams>	juesto: why do you not bother asking a question?
<juesto>	jupelius: i feel not because 1) its hard to explain and 2) look at this "offtopic"
<rindolf>	i removed 89 lines and added 56.
<juesto>	ams: i asked and nobody seemed to really notice
<jupelius>	me and ams did
<rindolf>	juesto: what's the problem?
<jupelius>	but now i have to go
<juesto>	rindolf: visual studio seems to be unable to find afxres.h
<juesto>	mfc components
<rindolf>	juesto: oh.
<aawe>	hey, why did the conversation derail? we were talking about dieting
<rindolf>	juesto: is it an mfc project?
<aawe>	how do you 5/2? how much do you eat on the 2?
<juesto>	not sure
<juesto>	its a game source code i got
<stryyker>	because you don't have a suitable version installed or you didn't select to install the mfc components if it is a suitable version. (not all include it, express editions do not)
<juesto>	(im not a programmer but more a compiler)
<rindolf>	juesto: can you try building a hello world mfc project?
<myrl-chan>	  brb
<aawe>	gedamo:
<juesto>	stryyker: i think i did select, this is full visual studio
<juesto>	rindolf: dont know how, im no programmer but compiler. :/
<stryyker>	full?
<gedamo>	aawe: maybe 300 calories?
<rindolf>	juesto: maybe you should learn programming.
<juesto>	stryyker: the whole suite is installed and multiple versions, still no idea why mfc is not found
<aawe>	gedamo: when do you eat? anything in the morning? how do you combat the hunger of death?
<rindolf>	juesto: we are here to help programmers with programming.
<ams>	juesto: off-topic is allowed here, you bitching about it won't make anyone more inclined to help you, unless you pay someone.
<gedamo>	aawe: no breakfast but i drink dilute orange juice
<stryyker>	juesto: there are many different editions. for example if you install express edition and select all options it will not have mfc.
<juesto>	rindolf: i should but i have the idea but i dont feel like writing code....... well not sure.
<ams>	maybe just asking the question will make somene inclined as well..
<juesto>	stryyker: i didnt install express, in fact i avoid them
<kidbeta>	gedamo i might try keto
<juesto>	ams: well sorry for that.
<aawe>	kidbeta: reddit/r/keto is great
<stryyker>	juesto: and you have not said which sku you have installed.
<ams>	how about just asking your question instead of being sorry? seems more useful.
<gedamo>	kidbeta: it's ok to start with, i lost about 6 lbs in two weeks
<ams>	aawe: you on ket
<ams>	o?
<juesto>	stryyker: i think i did
<kidbeta>	aawe ill give it a look
<gedamo>	kidbeta: there's a keto channel on here
<kidbeta>	gedamo let me guess
<kidbeta>	your on it :p
<juesto>	just this freaking spam of food talk makes important data go unoticed :|
<gedamo>	kidbeta: #ketochat
<stryyker>	juesto: you didn't. full tells us nothing. saying 2010 doesn't tell us enough. there are different editions of them.
<juesto>	well
<gedamo>	kidbeta: no, but i was when i was trying the diet
<juesto>	2003,2005 and 2008 are professional
<juesto>	2010 is ultimate
<kidbeta>	gedamo finally! :p a channel without you xd
<juesto>	and vs98 is a mixed enterprise and professional
<aawe>	ams: i can't do keto any more, i got some weird virus that flares up when i have ketones in my blood and dies down once i don't
<gedamo>	:d
<ams>	juesto: you're not paying anyone here, unless you do, we will talk about whatever the fuck we want.
<ams>	aawe: ouch
<juesto>	ams: im not and i dont have online money to do so, i didnt ask or talk about payments
<ams>	juesto: then refrain from making demands about what people talk about here.
<monkeyget>	sometimes i start complaining about python packaging/deployment and then i remember the wonderful world of ole/com/mfc/win/templating
<ams>	because it is fucking annoying.
<aawe>	i am avoiding carbs now but i stay above the keto level
<ams>	aawe: nod
<stryyker>	juesto: why not use vs2010 then? did you try making a new project in vs2010 to see if it lists mfc?
<juesto>	ams: im not fucking demanding shit, im just asking, not forcing anyone -.-
<rindolf>	monkeyget: heh, i hacked on a python project today.
<rindolf>	monkeyget: i refactored it.
<juesto>	stryyker: no, because the source code is meant to be compiled with the specified version
<rindolf>	monkeyget: it doesn't use any external packages i think, though.
<ams>	juesto: "14:53 <juesto> just this freaking spam of food talk makes important data go unoticed :|" looks like demanding.
<juesto>	in fact, conversion in vs2010 is too much hassle
<juesto>	ams: its not, its just ranting -.-
<ams>	right .. so you are trolling.. good to know.
<juesto>	why everyone thinks im trolling
<juesto>	-.-
<jeaye>	ams, juesto enough.
<juesto>	stupid network
<stryyker>	juesto: talk to the programmers that made it then. seems odd to use vc++ from 98 or check that the version you're using allows you to create mfc projects. as i said not all editions support mfc. no idea what options you enabled when installing.
<juesto>	im not fucking trolling anyone, just being a bit too honest, i dont see what's wrong with facts
<aawe>	haha
<juesto>	stryyker: i ensured to select mfc options when install vs
<monkeyget>	don't worry juesto, they're cranky because their body is short on simple carbohydrate
<aawe>	"bitches can't handle my honesty and my facts"
<stryyker>	juesto: for 98?
<juesto>	vs6, yep
<juesto>	even that one
<stryyker>	then it should work unless there is a needed detail you haven't told us
<juesto>	stryyker: it's not working, something with paths maybe?
<juesto>	im not sure specially because its there
<juesto>	where its normally found?
<ams>	monkeyget: haha
<juesto>	for this reason i would prefer someone to look into my enviorment
<juesto>	its hard to explain...
<aawe>	you want someone to voluntarily do your debugging for you?
<juesto>	no, just look at the error
<reaga>	if i make a github repsotory, a free one, can anyone shove code into it?
<aawe>	reaga: no
<aawe>	reaga: you have full control over any aspect of it. people can just view it in awe
<aawe>	and drool
<juesto>	i have mfc
<juesto>	but i dont know why vs is not seeing it
<juesto>	stryyker ^
<rounin>	juesto: how are you including the headerfile in your source code?
<rounin>	does it say #include <afxres.h> ?
<juesto>	rounin: its simply the file, i guess its a path problem
<juesto>	hold on because its a big project which the whole gives that
<rounin>	maybe
<juesto>	vc98\mfc\include is not listed anywhere
<stryyker>	what game are you compiling?
<myrl-chan>	meh, i was wrong.
<juesto>	half life 2 beta leak source code
<myrl-chan>	rehashing does increase hash collissions.
<monkeyget>	oh man, i remember that
<jkbbwr>	juesto: your linking agaisnt the right source engine right?
<juesto>	jkbbwr: this is pre-source
<juesto>	this is the 2003 leak by anon
<juesto>	one thing is the precompiled gembe's build without shaders
<stryyker>	there is a guide online, you need some extra things.
<stryyker>	the search to find it is obvious
<juesto>	stryyker: i have a tutorial for compiling but it doesnt cover anything about missing mfc
<juesto>	my vs6 is a bit broke i think
<juesto>	im on sp6 with pp5
<juesto>	and its mixed in pro and enterprise
<stryyker>	maybe not all editions of vs6 ship with mfc. also the guide uses a bat file.
<monkeyget>	from my memories you needed some patch to be able to compile that mess
<juesto>	and for some reason vb6 i have is not the right version
<aawe>	mfc = "mother fucking cookies?"
<juesto>	stryyker: the batches do fail
<juesto>	lol
<kidbeta>	aawe microsoft foundation classes
<kidbeta>	or some shit
<juesto>	stryyker: they say cl.exe not found or something
<juesto>	opening the project in vs did reveal the real error which is mfc includes missing
<juesto>	probably its path problem
<aawe>	gedamo: tell me your secrets
<stryyker>	the guide explains some of that too
<juesto>	ok, i dont have that guide then
<gedamo>	aawe: which secrets? :|
<juesto>	link ?
<stryyker>	i'm not why you're spending so much time on a beta.
<aawe>	ams: i might seriously try this: http://stuarth.github.io/pixie/pixie-pi/ seems fun
<aawe>	gedamo: how do i fast fast
<gedamo>	aawe: on fast days i think about what i'm going to eat tomorrow :p
<aawe>	gedamo: can you be productive on fast days=
<aawe>	?
<kidbeta>	aawe make them the weekend
<juesto>	stryyker: because im a fan?
<gedamo>	aawe: i take a caffeine tablet on fast days to pep me up
<aawe>	gedamo: ... that's clever
<stryyker>	juesto: wouldn't it be easier to hunt down someone that already built it?
<tommycannady>	that's a real pep talk
<tommycannady>	snafu
<tommycannady>	that billboard demo won't compile : )
<tommycannady>	complains of something about mat4
<juesto>	it has been 11 years
<juesto>	so not sure
<juesto>	i doubt if i can find anyone willing to help with that
<tommycannady>	it's missing billdough completion
<juesto>	for instance
<juesto>	i have vc++6 enterprise
<juesto>	and vb6 is professional
<juesto>	yeah its weird
<juesto>	anything that depends on mfc
<juesto>	fails
<juesto>	any project
<juesto>	says cannot open include afxres.h
<juesto>	error executing rc.exe
<juesto>	stryyker: ^^
<juesto>	fatal error rc1015
<juesto>	weird thing is that mfc includes are in path
<juesto>	o.o
<juesto>	something with service packs or processor pack?
<juesto>	hello? -.-
<aawe>	does anyone else here get massive withdrawal from caffeine when quitting cold turkey or forgetting the morning cup?
<kidbeta>	quitting
<kidbeta>	heh
<mike802>	why would you quit?
<aawe>	mike802: because i get migraines if i forget
<mike802>	lol, that's not how it works
<aawe>	it's how it works for me
<mike802>	sounds like you've already quit
<aawe>	what are you talking about
<mike802>	at least be honest about your order of operations
<mike802>	this is a programming channel
<aawe>	i have quit several times. i have forgotten to drink coffee several times. i fail to see how it's relevant to the discussion
<aawe>	i get migraines if i drink coffee every day and then suddenly forget to drink one day
<sbrg>	aawe: wow. i don't drink nearly enough coffee to even feel it if i don't get any
<rounin>	aawe: a little bit
<mike802>	lol
<kidbeta>	aawe you need to get more caffeine or upgrade
<rounin>	caffeine is like iphones
<rounin>	only cheaper
<aawe>	kidbeta: more caffeine? how would that help? stronger migraine if i forget?
<mike802>	you should just go all natural
<rounin>	yes... to remind you to get more caffeine
<mike802>	live in the woods
<mike802>	maybe on a farm
<rounin>	it's both the problem and the solution
<kidbeta>	aawe nah you have enough left over so when you do forget you have some lee way
<aawe>	when i coffee i only coffee in the morning to avoid fucking with my sleep
<kidbeta>	i caffeine till 6
<mike802>	if you set an alarm
<mike802>	and drink coffee when you wake up
<mike802>	problem solved
<aawe>	or i just stay off coffee forever
<aawe>	problem solved
<jkbbwr>	could i make a program openable like a file on unix?
<kidbeta>	aawe exactly upgrade to a nice cns
<aawe>	jkbbwr: everything is openable
<jkbbwr>	aawe: i was thinking of hijacking log files by replacing the logfile with my program and then in some code somewhere
<aawe>	kidbeta: u wanna fite irl?
<mike802>	is this a lecture
<jkbbwr>	open("hijack", "w").write("log entry")
<kidbeta>	aawe yeah cuz bring it
<jkbbwr>	and hijack fires that somewhere
<mike802>	i like how caffiene makes me feel
<aawe>	jkbbwr: wouldn't it be easier to just watch the file for changes?
<jkbbwr>	aawe: hm
<mike802>	have you tried sourceforge
<mike802>	classy stuff
<mike802>	;)
<jkbbwr>	aawe: im way over designing this and getting wrapped up in silly details
<jkbbwr>	aawe: i blame the lack of coffee
<mike802>	you must be new here, is this your first time experimenting with a programming language
<stratocumulus>	hello
<gedamo>	hi stratocumulus :)
<stratocumulus>	anyone has experience with assembler/c/driver writing?
<kidbeta>	define "experience"
<stratocumulus>	ok
<kidbeta>	because ive done all 3 but 1 or 2 rather badly
<stratocumulus>	the problem is that we have a device, a dental x-ray sensor
<stratocumulus>	and it works only on xp 32bit
<stratocumulus>	i wnted to know how much would it cost to build win7 64bi drivers?
<stratocumulus>	*bit
<kidbeta>	depends how complex the drivers are
<knuut>	hi
<kidbeta>	and have you thought of just using a virtual machine
<juesto>	is possible to obtain a kernel console like linux in windows?
<knuut>	i'm trying to modify the css of a website but when i change the size of a div everything breaks
<rindolf>	juesto: kernel console? what do you mean by that?
<kidbeta>	justanotheruser command line sure
<rindolf>	knuut: there's #css
<rindolf>	kidbeta: was that intended for juesto ?
<kidbeta>	yes
<sbrg>	really not sure which window manager to use for my raspberry pi
<sbrg>	or if i should at all
<juesto>	rindolf: some sort of cmd but more privilegied than running one as system
<stratocumulus>	kidbeta, and what defines complexity?
<stratocumulus>	i never thought of virtual machine, yet
<kidbeta>	stratocumulus what you need to do with the data, how it is presented to the driver, etc.
<rindolf>	juesto: more privileged how?
<sbrg>	juesto: root?
<kidbeta>	isnt system a super user?
<stratocumulus>	and it may not be friends with the program in the real part of computer
<stratocumulus>	kidbeta, suni imaging usb-1800 intraoral x-ray imaging device it is
<stratocumulus>	"ccd sensor"
<kidbeta>	that doesnt tell me a lot
<kidbeta>	are you the guys who make the device ?
<stratocumulus>	no
<amigojapan>	sbrg: after trial and error,a nd reading the docs, i see that my main problem was not setting the settimeout for the server… now i got it working exactly as i want… here is the code if you want to take a peek (it is short)  http://pastebin.com/xhz7cy7p
<stratocumulus>	i am angry guy who cant use the device after the pc upgrade
<kidbeta>	what your trying to do could potentially be illegal where you live stratocumulus
<amigojapan>	sbrg: i am making a bbs for japanese blind people with this :)
<sbrg>	amigojapan: ah, cool. :)
<stratocumulus>	kidbeta, illegal in what way?
<stratocumulus>	like intellectual property?
<ams>	why do all food diary  programs suck.
<stratocumulus>	or like in uncertified medical stuff?
<kidbeta>	stratocumulus if the device and driver are complicated in any way shape or form you might need to reverse engineer the existing driver, depending on your location this could be illegal
<amigojapan>	sbrg: decided to make a bbs instead of making a web browser and mail system ,  this way any user that wants to can also host it….  also i love bbss :)
<ams>	kidbeta: it is legal in all of eu and the us.
<ams>	and most other places.
<kidbeta>	ams are you sure about the us
<ams>	yes, the dmca explicitly allows it.
<ams>	interoperability, and what not.
<ams>	you are just not allowed to distribute the means of how to do it or some such ..
<kidbeta>	wiki seems to suggest that if a eula says its not allowed that overrights existing terms
<ams>	https://www.eff.org/issues/coders/reverse-engineering-faq
<ams>	kidbeta: the eula is not valid for such things.
<kidbeta>	good news
<ams>	eula's aren't valid at all infact.
<stratocumulus>	kidbeta, but if i wont tell anybody and neither will the programmer, noone will come to punish us
<kidbeta>	its most likely legal
<inphase>	ams: the full status of eulas is still an open legal question.
<ams>	inphase: not really.
<inphase>	ams: we'd simply mostly all prefer if their terms were invalid.
<stratocumulus>	so can the driver be built for like 600 eur?
<inphase>	ams: see the last paragraph of the header for the current legal status in the u.s.  http://en.wikipedia.org/wiki/end-user_license_agreement
<ams>	stratocumulus: i wouldn't take that job .. to little.
<ams>	inphase: i prefer to listen to my lawyer.
<stratocumulus>	so how much would be enough then?
<ams>	stratocumulus: depends on the device.
<ams>	what device is it?
<ams>	what does it talk?
<ams>	what does it do?
<inphase>	stratocumulus: if there is an existing open source code base which can be modified to create it, then it can be much less than if one has to develop a driver from scratch.  from scratch can potentially cost over $10,000, depending on device and complexity.
<ams>	you are basically asking "would you pay a painting to my exact, but so far unmentioned specifications, for 600 eur"
<juesto>	did you know that system's group membership differs from a administrator groups????
<ams>	my "paintings" are complicated, and 600 eur is 6 hours of work.
<juesto>	how do i add system to authenticated users group ?
<juesto>	without a dc
<juesto>	lol
<juesto>	yeah, some sort of root
<juesto>	but system doesnt have enough privilegies
<stratocumulus>	ams, suni imaging usb-1800 intraoral x-ray imaging device
<juesto>	rindolf: ^^^
<ams>	stratocumulus: you just made it interesting.
<stratocumulus>	i assume it senses the xrays and then sends the data to computer via usb
<rindolf>	juesto: add it to the administrators group.
<ams>	stratocumulus: yah just made it really interesting ...
<juesto>	its not just tht
<juesto>	a standard administrator
<juesto>	is part of more groups
<juesto>	check it yourself by comparing whoami /all output
<stratocumulus>	inphase, is the reverse engineering of existing drivers included into the sum?
<stratocumulus>	:))
<ams>	stratocumulus: so lets see .. some search tells me not much, some kind of a usb thingie ..
<ams>	stratocumulus: got a product sheet? docs? anything?
<inphase>	stratocumulus: basically, programmers will typically cost you from $20 to $100 per hour depending on skill (and skill affects product quality), and how long a particular driver will take depends on skill, complexity, and existing information and specs as well.  reverse engineering takes a bit more work and works only at the higher skill levels.
<ams>	yeah ..
<stratocumulus>	ams i will find out
<ams>	stratocumulus: it should be doable.
<stratocumulus>	inphase, thanks
<inphase>	stratocumulus: nobody with a steady stream of employment would give an exact quote without looking deeply, but if i were you i wouldn't be surprised if you got quotes in the lower end of 5 digits.
<ams>	stratocumulus: and i am guessing .. not terribly hard even ..
<stratocumulus>	new devices was said to cost between 3-4k$
<ams>	(not terrible hard does not mean simple though!)
<ams>	stratocumulus: yeah, some dental thingie i guess?
<stratocumulus>	yeah
<stratocumulus>	so we could either stuff the old one in our asses and buy a new one
<stratocumulus>	or pay a part of that sum to some engineer
<stratocumulus>	as device isnt new but works no problems
<merijn>	stratocumulus: if a new one is 3-4k i would say that you are most likely cheaper off buying a new one than paying to reverse engineer the old one
<inphase>	agreed.
<rounin>	there's also the issue of making a driver for a medical device
<rounin>	a medical device using radiation
<rounin>	i'm just mentioning that in passing...
<ams>	well.. yes and no.
<inphase>	therac-25 anybody?  :)
<rounin>	no, only yes
<ams>	you will most generally not be able to control the radiation levels from the device.
<merijn>	rounin: if the driver only extracts images that's hardly relevant
<ams>	those things are firmware blocked like fu..
<ams>	so,, yes, and no.
<stratocumulus>	ams, that device doesnt give any radiation
<rounin>	that's fortunate
<stratocumulus>	it just absorbs it
<ams>	ah, ok. . so even less relevant.
<stratocumulus>	its like an xray photocamera
<ams>	nod
<rounin>	"calibrating beam... you got pwned hahahahahaha"
<inphase>	if the device is used for diagnosis, then rounin is right that it probably introduces regulatory issues to "manufacture" a new driver.
<stratocumulus>	:dd
<rounin>	bzzzzzzzzzzzonkzonkzonk
<ams>	stratocumulus: the problem i see is that one would like to have direct access to the thing ..
<merijn>	at any rate, the kinda person capable of doing this will probably run you 100+ dollars an hour and this is likely to take weeks, so
<ams>	merijn: meh, week tops if it is just usb .. and some commands on that ..
<merijn>	a week at 100+ an hour is still pricey :p
<ams>	oh, sure .. and who said i take 100/h   ... hehehe :-)
<stratocumulus>	so i guess we can either stuff it in someones ass
<stratocumulus>	donate it to some african clinic in somali
<ams>	stratocumulus: you know how to use a computer and some programming skills?
<stratocumulus>	or keep using winxp
<ams>	stratocumulus: or can afford to put a intern on some shit? :-)
<stratocumulus>	ams, yes, but my php skills may not help in reverse engineering or c programming
<ams>	stratocumulus: no c needed.
<ams>	stratocumulus: what you'd do is fire up an usb analyzer on the machine ...
<ams>	stratocumulus: and log that.
<ams>	stratocumulus: (making notes what you are doing to the device at what time ..)
<stratocumulus>	i may put some intern on that
<ams>	stratocumulus: given that dump, since this is just a usb device, which means that we already know what it talks, making life much much much simpler, one should be able to write a crude device driver in an hour or less.
<stratocumulus>	but i needed to find out about the prices and hours and possibility
<ams>	by crude, i mean .. crude.
<juesto>	...
<juesto>	did you know that in windows 7, being in session 0 does spawn explorer as system
<juesto>	but control panel does not work due to authentication
<juesto>	rindolf: please compare whoami /all output of system and an administrator and you'll see the difference
<ams>	stratocumulus: but seeing you are dental, you might want something a bit prettier .. and what not ... guessing a week work most for someone skilled, with the whole feedback loop of fixing and shit ..
<rindolf>	juesto: i don't have a windows system ready.
<stratocumulus>	ams, i'm it manager
<stratocumulus>	not dental
<stratocumulus>	:))
<juesto>	i'll pastebin then
<ams>	stratocumulus: sorry, i meant mental.
<ams>	:-)
<stratocumulus>	omg
<stratocumulus>	you must be a robin jobs
<stratocumulus>	right at the middle
<stratocumulus>	:d
<stratocumulus>	(robin jobs=steve jobs+robin hood)
<stratocumulus>	anyway thanks for info
<stratocumulus>	:)
<stratocumulus>	summer is comming
<stratocumulus>	and i need to do some xray tanning
<stratocumulus>	to be beautiful to the girls
<ams>	stratocumulus: hehe
<juesto>	rindolf: http://paste2.org/jax50egx
<juesto>	rindolf: my user: http://paste2.org/cdb2dk7x
<juesto>	(i have tweaked the user right assigment a little but it doesnt matter here, the difference is in the group membership)
<juesto>	hello?
<maxels_>	so i understand global's usage should be minimized, but what are some examples of a global variable that is necessary in a program?
<ams>	maxels_: nothing is "necessary" in programming
<reaga>	hey
<reaga>	u guys rock
<ihatehex>	reaga, you don't, get lost troll
<ihatehex>	iirc you've spent countless days in here just trolling people who are trying to help you
<ams>	ooo ... nice! cl-libusb!
<maxels_>	ams, well when would it be more appropriate to use a global?
<reaga>	ihatehex: im learning haskell now
<reaga>	its great
<ams>	maxels_: when it minimizes code, and maximies readability.
<merijn>	ams: or when necessary for performance reasons!
<ninjapenguin>	or if you're making a dynamically linked library.
<ams>	merijn: mm.. well, local variables vs. global ones don't really matter performancewise.
<merijn>	ams: not directly, but avoiding global variables by introducing indirections does
<ihatehex>	reaga, ok maybe you're not the vicious and annoying troll
<ihatehex>	i'll be watching you
<ams>	true ..
<ihatehex>	especially in the shower
<juesto>	lol
<juesto>	stryyker: it turns out that the problem were the paths
<merijn>	ams: i'm used to haskell and immutable everything, so introducing global mutable variables is something i think of as performance fiddling
<wagonboi>	if i want to implement comparator for an object, can i write it as an inner class? or does it need to be a separate file/class?
<ams>	merijn: i generally prefer globals within scope ..
<ams>	merijn: it is hard to discuss "globals" when not knowing what they really mean ...
<ams>	are they external, internal, are the local to a module, package, ..
<ams>	if the program just one single file, then i would just use global all over the place ..
<maxels_>	ams, sure that makes sense. i guess i'm talking about huge software, and using best practices for it
<maxels_>	i know i work on a piece of software that likes to "cache" data in globals, basically load data once and then access it all over the place. i'm pretty confident it is less than idea but makes me wonder if it does have some value doing it that way
<maxels_>	less than ideal*
<maxels_>	i'm just trying to improve my design ultimately, by asking about sweeping generalizations, i appreciate your humoring me :)
<casx>	hi
<casx>	how can i request video and receive it?
<casx>	in theory/practical
<ams>	maxels_: sounds like you should be using sdome kind of a memozisation library ..
<maxels_>	ams, very possible. i've only recently started to think about design decisions myself. i've spent my career thus far just doing what other people say without questioning it
<reaga>	hey
<reaga>	you guys rock
<ams>	jeaye: ^^
<rindolf>	reaga: thanks!
<reaga>	rindolf: im learning haskell
<reaga>	doign euler projects
<rindolf>	reaga: nice.
<reaga>	im gonna upload al my stuff in github
<reaga>	so you can view it if you so desire
<rindolf>	reaga: it's project euler problems.
<rindolf>	reaga: i have my solutions to project euler problems on bitbucket.org.
<reaga>	how many did you do
<dearhawk>	seems like the sign of a%b in c is decided solely by a. is that true?
<reaga>	dearhawk: depends on what language i think
<reaga>	rindolf: how many projects did you solve
<rindolf>	reaga: it's "problems" - not "projects"
<reaga>	sorry, how many euler problems did you solve
<rindolf>	reaga: and i solved 214 so far.
<reaga>	thats a lot
<reaga>	im on problem 3
<reaga>	its tough
<reaga>	they get harder though probably
<reaga>	:)
<rindolf>	reaga: solved in a shell one liner - factor 600851475143 | perl -lane 'print $f[-1]'
<reaga>	why are you trying to spoil it for me
<reaga>	idiot
<rindolf>	reaga: it does not include the solution.
<reaga>	you're ruining it
<rindolf>	reaga: well, factor is a shell built in.
<reaga>	i will have to block you from my contact list
<rindolf>	reaga: what?
<reaga>	i tell you the puzzle im trying to solve and u tell me the solution
<reaga>	so stupid
<reaga>	thats the very last thing i want someone to do
<ihatehex>	reaga is trolling again?
<ihatehex>	i knew i remembered his nick
<ihatehex>	just ignore him and move on
<reaga>	you spent too much time on euler problems and not enough on social awareness
<rindolf>	ihatehex: ok.
<ihatehex>	ignore this stupid cunt, rindolf
<ihatehex>	he's done this to a lot of people
<rindolf>	ihatehex: ah, ok.
<reaga>	now rindolf is the victim?
<dearhawk>	reaga: omg, stop trolling
<ihatehex>	rindolf isn't a victim, he's just a guy who has better shit to do than try to help a troll
<juesto>	lol
<ihatehex>	victim implies you have some kind of impact or significance upon the world, reaga
<juesto>	rindolf: seen?
<ams>	sighs .. you all stop it.
<rindolf>	juesto: what?
<ihatehex>	ams, tell us why gnu is awesome
<juesto>	i pasted whoami /all output
<ams>	not unless you all kiss and hug and stopd the stupidity.
<juesto>	*sigh*
<rindolf>	juesto: yes, and how will it help us?
<juesto>	it proves that system belongs to less groups than a standard admin user
<juesto>	i would like to make system part of normal groups
<rindolf>	juesto: ok, so i have no idea how to fix it.
<juesto>	lol
<juesto>	:(
<dearhawk>	reaga: omfg, just stop it already. wtf
<juesto>	running explorer in session 0 gives a proper shell
<rindolf>	juesto: i'm not an expert in windows administration.
<dearhawk>	ihatehex: you as well, stop trhe trolling! omfg
<juesto>	lol
<juesto>	:c
<ihatehex>	dearhawk, i haven't trolled anyone
<ihatehex>	at least not today
<ihatehex>	and i usually don't troll about programming
<dearhawk>	ihatehex: oh yeah, what about the stuff you said to rindolf?
<ihatehex>	nothing bad? o_o
<dearhawk>	ihatehex: omfg, reported.
<ihatehex>	dearhawk!*@* added to ignore list.
<dearhawk>	ihatehex: srsly, every time i get here to discuss programming, you're trolling.
<odin22>	has anyone ever heard the phrase, one size fits all - fit's noone?
<dearhawk>	odin22: yes, the very second you phrased it.
<ihatehex>	yes but it had correct grammar then
<ams>	ihatehex: stop it.
<rindolf>	odin22: i heard "there's no one size fits all."
<ihatehex>	ams, only if you hug us all
<ams>	i'm a gnu, i hug everyone with my pointy horns.
<odin22>	:)
<ihatehex>	one size fits everyone equally bad.
<ihatehex>	that's just an awful saying, i don't want to repeat anything like this ever again
<ihatehex>	quick, someone make a programming joke
<ams>	did you know that gnu's have two parenthesis on their head?
<ihatehex>	why do programmers always mix up halloween and christmas?
<ihatehex>	:d
<ihatehex>	because oct 31 == dec 25 :d
<teakey>	why?
<oleo>	ask your petty jew!
<teakey>	whelp
<oleo>	lol
<myrl-chan>	octal and decimal.
<myrl-chan>	that's why.
<dearhawk2>	ihatehex: i want you to not talk to me ever ever again, ever.
<dearhawk2>	and no means no, ihatehex.
<dearhawk2>	ihatehex: stop calling me.
<ihatehex>	dearhawk2!*@* added to ignore list.
<teakey>	did you just google "programmer jokes?" because i did, too, and that was the first one.
<ihatehex>	i did
<ihatehex>	i have no creativity
<teakey>	apparently neither of us do
<ihatehex>	it's ok, we can do menial labour until we die
<ihatehex>	and my pizza is arriving soon
<ihatehex>	you can all have pizza, except that guy i ignored
<teakey>	how do i get the pizza?
<ihatehex>	send a drone my way and i'll shrink wrap a slice
<ihatehex>	otherwise find a way to digitize it
<ihatehex>	and we'll just send it through a series of tubes
<teakey>	i think there's a guy downstairs selling food on a stick
<teakey>	maybe i'll just try that instead
<ihatehex>	food on a stick?
<ihatehex>	that's how jesus got tricked onto the cross, son
<teakey>	is.. it?
<ihatehex>	that's what i learned in school anyway
<teakey>	he doesn't have food on a stick he just has duck neck
<teakey>	home schooled?
<blizzy_school>	so can anyone explain what drupal or joomla does?
<ams>	drupal is a cms.
<juesto>	summon wikipedia
<ams>	so is joomla.
<jumbolaya>	what kind of math do you need to know to make most programs?
<reaga>	huh
<reaga>	discrete math helps
<ams>	jumbolaya: between none and all.
<ams>	depends on what you are doing.
<reaga>	boolean logic
<reaga>	thats necesary
<teakey>	i'm largely innumerate and that seems to be working out okay for me
<blizzy_school>	so what would you use a cms for?
<ams>	for managing documents of various sorts?
<ams>	or images .. and other stuff..
<ams>	you coul djust look it up ..
<jumbolaya>	ams that's not true. if you didn't know what math was then for loops would be very hard to understand. a computer
<jumbolaya>	processes numbers which are in turn math
<ams>	you don't need to know math for loops you know ..
<jumbolaya>	thanks reaga for the suggestions
<ams>	and no, that is not what a computer does.
<ams>	it does not turn anything in to "math"
<jumbolaya>	please stop trolling
<ams>	sighs ...
<ams>	you don't need to know any mathematics to program a computer.
<ams>	you don't need mathematics to understand a loop.
<jumbolaya>	any time you as yourself how many times you're going to loop that is math
<ams>	not really.
<jumbolaya>	yes it is please stop spreading false information/trolling
<ams>	you might as well claim that to be able to understand programming, you need to be a physicist.
<ams>	jumbolaya: i suggest you refrain from name calling.
<jumbolaya>	!ops
<ams>	yes, lets get the ops ..
<myrl-chan>	jumbolaya: if you want to get the ops, please go to ##programming-ops.
<diffract|>	children fight.. let me get the popcorn
<myrl-chan>	diffract|: ++
<ams>	diffract|: wanna share?
<myrl-chan>	so, i just came back.
<myrl-chan>	computers do not only do math.
<ams>	they don't do much math.
<ams>	they do very little .. they move a bit from a to b.
<dearhawk2>	omg, guys, stop trolling please!!
<ams>	in various forms.
<myrl-chan>	ams: well, it's a large part, more than 10%, at least.
<diffract|>	ams: i would, but nobody likes honey popcorns
<diffract|>	but me
<myrl-chan>	but to be fair, most computers don't do much things.
<ams>	diffract|: ecological honey?
<myrl-chan>	s/much/many/
<diffract|>	ams: who knows what they put in this stuff. it just tastes delicious :p
<myrl-chan>	it's either logic, arithmetic, or data movement.
<ams>	diffract|: and not that wishy washy stuff ..
<ams>	myrl-chan: or you can reduce it to data movement.
<myrl-chan>	ams: yes.
<ams>	you don't need logic, or arithmetic infact ..
<ams>	just moving bits.
<myrl-chan>	ams: what do you mean?
<ams>	myrl-chan: move architecture, only capable of moving bits.
<diffract|>	i don't need logic to argue with people
<myrl-chan>	ams: yes, but an add architecture can just do as much things as a move architecture.
<diffract|>	especially online
<myrl-chan>	er...
<ams>	myrl-chan: .. you sure?
<myrl-chan>	ignore what i just said, that's irrelevant.
<myrl-chan>	ams: yes, i'm sure.
<myrl-chan>	ams: mov r1, r0 == add r1, r0, 0
<ams>	myrl-chan: :-)
<ams>	myrl-chan: so you agree!
<ams>	lets eat honey popcorn
<diffract|>	computers don't do arithmetic, full adders, etc. are logic circuits
<diffract|>	shots fired, who wants to take the bullet
<myrl-chan>	diffract|: that's also true. :)
<ams>	strictly speaking, there is no math involved ..
<pokeymantrainer>	i'm compiling some c code with 'gcc -ansi -std=c11 -wall -wpedantic' and it won't let me use the c99-style //comments. why? i'm using freakin c11.
<mike802>	hanging out in a programming channel is fun
<ams>	everything is a electrical mutation.
<ams>	there we go..
<mike802>	this is like, my favorite thing to do
<dearhawk2>	how do i execute a vector of intel-x86-instructions?
<myrl-chan>	diffract|: if we'll stretch the defintions, there's no math in our decimal number system either. ;)
<ams>	pokeymantrainer: why are you passing conflicting options?
<diffract|>	computers are stupid machines, i wonder why charles babbage was having a hard time building one
<pokeymantrainer>	ams: what's conflicting?
<ams>	pokeymantrainer: -ansi and -std=c11
<teakey>	-ansi -std=c11
<mike802>	probably the vacum tubes
<myrl-chan>	mike802: no vacuum tubes existed at that time.
<myrl-chan>	heck, no electricity existed.
<myrl-chan>	mechanical computers are pretty cute. :)
<mike802>	i don't get it
<myrl-chan>	and my smile is freaking me out. lol.
<pokeymantrainer>	oh, i see. -ansi is equivalent to -std=c90.
<ams>	pokeymantrainer: though i am a bit puzzeld.,.. last option is usually what dictates stuff.
<teakey>	yeah everyone was uncomfortable with that myrl-chan
<myrl-chan>	mike802: mechanical computers, you use the power of pushing and pulling, to do calculations.
<mike802>	umadbro?
<teakey>	now i am
<myrl-chan>	mike802: i design mechanical computers when i'm bored at class.
<mike802>	like in  middle school?
<teakey>	do you ever build any?
<ams>	pokeymantrainer: btw, -std=gnu11 is default in gcc now.
<diffract|>	mechanical switching is terribly slow though
<myrl-chan>	mike802: yes, i think it's the equivalent of middle school in other places.
<mike802>	are you just saying things?
<myrl-chan>	teakey: i'm currently building a 74lsxx computer, it's ttl though.
<ams>	myrl-chan: make it a move computer
<ilhami>	hello. :p
<teakey>	that's pretty tite
<myrl-chan>	mike802: no, i'm not, i'm considerably younger than everyone else here, i think the only one here who's younger than me is wei2912.
<teakey>	i'm 12
<teakey>	does that make you feel better?
<juesto>	im 21 :)
<alphaatom>	does anyone know what the website that has the really nice animations to show sorting algorithms?
<myrl-chan>	i scared him away.
<myrl-chan>	:(
<juesto>	lol
<ilhami>	how can i lose fat on the lower region of my stomach?
<diffract|>	i'm 12 and what is this
<mike802>	do you read many books?
<teakey>	alphaatom, did you try wikipedia? i mean that unironically
<mike802>	i bet you do
<ams>	alphaatom: thinking about sorting out sorting from 1980?
<ams>	https://www.youtube.com/watch?v=gv0jueqaaxo
<myrl-chan>	ilhami: step one, stop programming.
<alphaatom>	teakey: it was a website where you could run the animations and it showed the flow of execution in some pseudocode or something
<ilhami>	lol?
<alphaatom>	it wasn't a video
<unreal>	ilhami: short of using a suction, not a lot. you lose fat overall, not in one specific place.
<myrl-chan>	ilhami: everyone knows all programmers are fat.
<ams>	alphaatom: animations are videos.
<ams>	videos are animations.
<ams>	you cannot animate without a video.
<myrl-chan>	and live in the basement of their parents.
<myrl-chan>	ams: you can't videate without an anim.
<ilhami>	myrl-chan, lol
<ilhami>	i don't live in a basement.
<alphaatom>	yeah great, argue semantics if you like, it was clear what i meant
<mike802>	my theory is
<mike802>	all programmers are smart
<mike802>	smat
<mike802>	smat smat
<ilhami>	smat?
<teakey>	alphaatom, i think ams is probably the most pedantic human alive. i've only been here for 10 minutes, though
<teakey>	i could be wrong
<myrl-chan>	all programmers are smut.
<ams>	i'm a programmer .. what do you expect?
<diffract|>	there are no videos. a video is a series of pictures viewed at ~30 frames per second.. am i cool now?
<myrl-chan>	ams: hehe.
<kunji>	compassion?
<mike802>	oh man
<teakey>	ams, i can toggle the pedantry
<mike802>	is that a porn joke
<myrl-chan>	teakey: the problem is exactly that, you've only been here for 10 minutes. :p
<ilhami>	my legs hurt so much.
<mike802>	you really went there again
<kunji>	no
<ams>	teakey: no you can't.
<mike802>	holy crap, youre the cool guy
<alphaatom>	i've found it anyway, it was http://visualgo.net if anybody else is interested, ams, there's no real need for it in normal conversation.
<ilhami>	is it because i don't move enough?
<teakey>	you're right :'(
<aidanh>	hello all
<ams>	alphaatom: there is always a need for it in a normal conversation.
<unreal>	diffract|: cool because you live in europe, perhaps?
<ams>	otherwise one might start talking about unicorns.
<teakey>	mike802, are you lonely?
<teakey>	do you need a friend?
<kunji>	wait a second, just what is wrong with talking about unicorns?
<alphaatom>	whatever, thanks for not helping and just trying to deconstruct my question instead.
<mike802>	not really
<diffract|>	unreal: not even
<ams>	kunji: dunno .. last person i heard talking about unicorns ended up at a mental institution .. never heard from him since then ..
<juesto>	im lonely and sexually desperate and virgin :s
<teakey>	well
<kunji>	ams: o.o, lets not let a single case go to our heads.
<ilhami>	i think you came to the wrong place.
<diffract|>	juesto: sex is overrated
<ilhami>	juesto, this place is not a brothel
<blizzy_school>	hmm, i gotta admit
<blizzy_school>	i'm liking php and scala
<dearhawk2>	i have an array of x86 instructions that i want to execute. how do i do that? just point a function there and then run the function?
<ams>	kunji: when i got out, they told me i should forget that person, he doesn't exist ..
<teakey>	dearhawk2, what
<kunji>	ams: ^_^
<teakey>	what language?
<ams>	kunji: j/k ;-)
<ilhami>	:-p unreal the boss of this channel
<dearhawk2>	teakey: c/c++ or whatever. obviously not java, ecmascript or python.
<kunji>	so.... i think that the out of core operations are running, i'm estimating ~14 hours for a matrix multiply based on the disk read/write, but i guess we'll see tomorrow morning.
<teakey>	'obviously' is a strong word, i have no idea what you're trying to do :p
<diffract|>	i hate modded channels/forums, i miss yahoo chat
<diffract|>	wut
<ams>	dearhawk2: you are venturing into .. lala land ..
<ilhami>	this sterling is a new bot? :d
<jkbbwr>	ilhami: its archer
<reaga>	wut
<teakey>	dearhawk2, c and c++ have functions for executing asm
<reaga>	wtf is this
<ilhami>	he changed name?
<ams>	dearhawk2: once upon a time you could just do int main [] = { x86 instruction array } ...
<mike802>	seriouly guys
<mike802>	i really like coding
<kunji>	... which means of course that i'm considering raid0 and some ssds, and going to take a closer look at the algorithms in use, i think it uses blas underneath the r, i'm not sure if it uses the blas that comes with r though, if so... well there are much faster versions of blas out there.
<myrl-chan>	welp... that was scary.
<myrl-chan>	ams: you can still do so up until now.
<ams>	dearhawk2: you could just use __asm__ or equivalent as well..
<ams>	myrl-chan: wehhhhhhhhhhhhhheeeeeeeeeeeeeeellllllllllllllllllllllllllll ... no you can't.
<juesto>	unreal is a bot?
<myrl-chan>	ams: really?
<myrl-chan>	ams: doesn't it just give off a warning?
<ilhami>	juesto, no
<ams>	myrl-chan: not since c90 or some such.
<myrl-chan>	ams: cool.
<juesto>	why banlist clear?
<diffract|>	everyone here is a bot but you
<ilhami>	he is the channel owner.
<juesto>	oh sterling....
<juesto>	what about sterling ?
<ams>	myrl-chan: not portable .. blabla .. undefined .. blabla ... different prototype for main ... blabla
<teakey>	juesto, hello can you wha tis
<teakey>	juesto, tell me about self
<juesto>	teakey: what? you're horny too and female?
<teakey>	告诉你自己
<myrl-chan>	ams: this seems considerably recent. http://jroweboy.github.io/c/asm/2015/01/26/when-is-main-not-a-function.html
<teakey>	不是女的人
<ilhami>	hahah
<unreal>	juesto: you may want to read the topic.
<ilhami>	unreal, chaos in the channel. :/
<ams>	myrl-chan: just cause the compiler accepts it does not mean it is valid.
<jkbbwr>	im not even allowed to talk to ams anymore :(
<ilhami>	is chinese permissible in this channel?
<myrl-chan>	ams: i see what you mean now. okay.
<teakey>	....
<teakey>	i mean i guess worse case scenario no one answers
<juesto>	which part specifically? lol
<ams>	jkbbwr: ha ha!
<pokeymantrainer>	i swear, if notepad++ crashes on me one more time, i'm gonna break something!!
<kunji>	but c obfuscation borders on completely trivial
<jkbbwr>	ams: oh you can see me again?
<jkbbwr>	:d
<juesto>	unreal.. ;/
<unreal>	juesto: you'll have to find that out, by reading it, won't you.
<juesto>	pokeymantrainer: reinstall it
<diffract|>	ihatehex: only english and zalgo text
<ilhami>	pokeymantrainer, hah find a better editor.
<ams>	jkbbwr: past midnight. =)
<jkbbwr>	ams: welcome back
<juesto>	yea, well its divided in sections lol
<teakey>	countdown to someone telling you to use vim
<ams>	jkbbwr: i never left.
<diffract|>	pokeymantrainer: notepad++ a shit
<diffract|>	try gvim
<ilhami>	lol
<teakey>	yes
<teakey>	yes
<ilhami>	use sublime text.
<teakey>	^same
<pyon>	kunji: "c obfuscation" --> just write normal c. :-p
<diffract|>	h̖̘̱͓̪̟̳̖͇̺͈̦̦̭͕̼̝̣͘͠͝ͅę҉̨̱̪͍̯̪̤͖̜̭̰͇ͅ ͏̘͖̺̯̝͔̠̀͘͝c̢̀͡҉͕̭̞͕̪͟o̧̘͎͙̤̭̘͘m҉̸͙͈̞̯͎̦͍̩͈è̢̨͔̝̞̝̠̟̯̭̮ͅs̡̡̲̲̮̣̗̲̯̮̜̙̝̱͇͎̱̻͖̞͟͞ͅ
<pokeymantrainer>	i love notepad++ for its awesome features, but it crashes on me about twice a day.
<kunji>	pyon: pretty much, so you see why they don't have that competition any more
<ilhami>	it's bound to crash. :p isn't it written in c?
<kunji>	c doesn't crash
<diffract|>	my main problem with notepad++ is it's too slow to starts up
<puddlejumper>	amazon.com is clever
<pokeymantrainer>	it's written in c++. that's why it crashes. :)
<ams>	dearhawk2: you could also just use a normal array, memcpy it to memory .. do mprotect with +x bit, do something like ((int (*)(int,int)) m)(arg1, arg2); ...
<teakey>	how dare you sir
<teakey>	jesus what even is c
<ams>	dearhawk2: i think that should be portable enough ...
<ilhami>	it's a letter.
<ilhami>	in the alphabet
<teakey>	oh
<ams>	dearhawk2: might need to align .. .mmm.. maybe...
<sterling>	b is also a letter. prefix it with + and it becomes more interesting.
<juesto>	pokeymantrainer: npp never crashed for me, ever, "repair" it dude
<jkbbwr>	sterling: +b
<juesto>	stands for ban
<ilhami>	lol
<pokeymantrainer>	lol
<teakey>	lolololololololol
<teakey>	l
<sterling>	anyone who hasn't read the channel topic and the rules within it, shall be considered a moron.
<gedamo>	i've heard of b and bcpl, don't know +b :p
<ams>	jkbbwr: did you want something or?
<ilhami>	sterling, do you want a cup of tea? :d
<diffract|>	that's a very harsh punishment
<dearhawk2>	ams: thanks
<juesto>	i have read the rules
<ihatehex>	a site i visit frequently was down a couple of days ago
<juesto>	but i understood half of them
<ihatehex>	i went on irc to find out when it would be up
<ihatehex>	read the topic, "no eta"
<ihatehex>	then 900 people joined and asked flat out
<ihatehex>	:d
<juesto>	lol wat
<gedamo>	dearhawk2: http://blog.reverberate.org/2012/12/hello-jit-world-joy-of-simple-jits.html
<dearhawk2>	gedamo: thanks :d
<gedamo>	dearhawk2: the first program shows an example of executing an array
<pokeymantrainer>	the third example on this page http://stackoverflow.com/questions/840501/how-do-function-pointers-in-c-work is just plain beautiful! :p
<gedamo>	pokeymantrainer: the third answer?
<gedamo>	https://stackoverflow.com/a/5602143 ?
<ams>	i think he is refering to: ((int(*)())"\x66\x31\xc0\x8b\x5c\x24\x04\x66\x40\x50\xff\xd3\x58\x66\x3d\xe8\x03\x75\xf4\xc3")(&function);
<pyon>	pokeymantrainer: you have a weird sense of taste.
<ams>	nor does that run on this computer .. so ...
<ams>	what is so beutiful about code that doesn't run?
<juesto>	anyone into windows ?
<pyon>	pokeymantrainer: normally, beauty is understood to come from conceptual simplicity and clarity.
<gedamo>	juesto: try ##windows
<rindolf>	pyon: can you try helping juesto ?
<pokeymantrainer>	write a jit-compiler to emulate it on your architecture. :)
<rindolf>	he has problems with visual studio.
<pokeymantrainer>	#winapi
<ams>	pokeymantrainer: no, c strings aren't executable here.
<dearhawk2>	i'm going to randomize code (with restrictions), execute it... and an interrupt will randomize it again every xth millisecond. gonna try to brute-force an algorithm for fast prime number factorization.  so, i've done similar things before and one problem has been the prng. it loops and you get the same (very unlikely) results over and over again each z hours. is there any fast rng that has an astronomically huge space so to speak?
<juesto>	rindolf: the mfc one is fixed, was path
<pyon>	rindolf: on my work machine, i only have visual studio *6* installed.
<rindolf>	juesto: ah.
<rindolf>	pyon: ah.
<juesto>	lol
<rindolf>	juesto: so now what?
<juesto>	not sure
<juesto>	still not sure about my install
<juesto>	its clumsy
<juesto>	i want to have processor pack 5 and sp6
<juesto>	odd thing is that
<gedamo>	dearhawk2: you might want to look at https://en.wikipedia.org/wiki/genetic_programming
<juesto>	i have enterprise vc++
<juesto>	and professional vb6
<juesto>	:p
<dearhawk2>	gedamo: yeah, that's where i've gotten the idea. done many such experiments.
<kunji>	dearhawk2: invest in a laser or two and some sensors so you can get genuinely random data :p
<inphase>	dearhawk2: mersenne twister is a good choice.
<gedamo>	dearhawk2: genetic programming isn't random
<juesto>	pyon: have pp5 installed?
<dearhawk2>	gedamo: one time, this thing crawled out of my computer screen and fled to area 51.
<inphase>	dearhawk2: although your idea sounds quite insane.  but good luck.  :)
<gedamo>	although it does rely on randomness
<dearhawk2>	gedamo: i know. but you can't "evolve" the solution for what i'm looking for i suppose
<dearhawk2>	gedamo: irreducible complexity in this case i guess :p
<ams>	gedamo: gp is infact random ..
<ams>	gedamo: cross mutations depend on randomness
<pyon>	juesto: pp5?
<gedamo>	it's non-deterministic, not random
<juesto>	processor pack 5
<juesto>	requires sp5 but spoofing works
<pyon>	juesto: nope, don't have it.
<ams>	gedamo: if you depend on something that is of a random value, it is indeed random.
<ams>	gedamo: cross overs, mutations, what to keep .. all that generally uses a random number
<gedamo>	yes, but that doesn't make the outcome random
<kunji>	actually... it depends on some theorems... it could indeed be deterministic even, but since we don't know, random is the best we can do.
<ams>	gedamo: sure it does
<ams>	gedamo: you never know what the output will be
<koollman>	gedamo: it is random. but not completely random,just 'influenced by luck' a bit
<ams>	gedamo: (which is part of the fun of gp)
<koollman>	(because you also do selection according to fitness)
<ams>	nod .. and you also have to keep the least fit ... just to inject some extra randomness into the population ..
<gedamo>	if there was no selection, it would be random
<ams>	since if you don't, your population will just stop evolving very quickly.
<gedamo>	but with selection, it is non-deterministic
<ams>	gedamo: with selection it is still random..
<koollman>	gedamo: it's random. just not uniformly random
<ams>	i fail to see how it is not ..
<ams>	what koollman said ..
<ams>	you are leaning the pool toward whatever produces the highest fitness score
<ams>	that pool is still random though
<inphase>	gedamo: genetic programming is only probabilistically convergent with a very high probability (when done right).
<gedamo>	inphase: i can't tell if you're agreeing with me or not :p
<ams>	infact, ga would not work if it was not random!
<ams>	gp ..
<inphase>	gedamo: i'm not much caring about the debate, but technically disagreeing with the notion that the outcome is non-random.
<koollman>	you have to inject a bit of randomness, else you do not explore the problem space correctly and you usually stick on a 'wrong' answer
<gedamo>	i understand it depends on randomness
<pi->	ach http://www.ikea.com/gb/en/catalog/products/40242177/ <-- this is close to being suitable.  i'm after something like this that i can put a wireless apple keyboard with a mouse on one side and a trackpad on the other.
<gedamo>	meh, this is a pointless argument over definitions
<tommycannady>	any tips on smooth 2d scrolling for overhead maps ? :)
<inphase>	gedamo: there, we agree now.  :)
<ams>	gedamo: is there a corewars game for forth?
<gedamo>	ams: no idea
<aidanh>	tommycannady: for games?
<tommycannady>	yeah for games : )
<gedamo>	inphase: :d
<tommycannady>	how do i get the timing perfect
<aidanh>	separate your physics and render time steps
<tommycannady>	how about seperate threads as well ?
<aidanh>	threading is irrelevant, and it can complicate things
<aidanh>	the important thing to do is; whenever it's time to render a frame, interpolate between two physics states based on the time, and render the resulting state
<tommycannady>	ok
<inphase>	tommycannady: and make sure your scrolling distance corresponds to real time, not loop count.
<tommycannady>	i have it almost working based on those priciples but i'm missing something
<aidanh>	in practice this means you either need a way to predict a future physics state, or your rendering lags one frame behind the physics state
<tommycannady>	ok
<koollman>	gedamo: throwing a coin is random (and uniform random, which is nice). 50% head, 50% tail. throwing a weighted/unfair coin is still random, even if one output comes more than the other, like 90% head, 10% tail. to make it nonrandom you need a double-headed coin, because then the result does not vary anymore. 100% head, 0% tail
<inphase>	if you have a fast framerate, it should be sufficient to measure the past update call rate, and use that to determine the displacement for the next update.
<inphase>	perhaps with some averaging.
<tommycannady>	sounds great
<tommycannady>	i do a bit of that now but just in collecting the average framerate statistics and so on.
<aidanh>	tommycannady: with your 2d scrolling example; each entity has a velocity+acceleration, which is used to determine a new entity position during the physics step. when you render a certain world state, you'll be rendering it at a certain time, so you basically interpolate between all entity position vectors (a simple average, really)
<tommycannady>	ok : )
<tommycannady>	thanks
<dearhawk>	c'mon, anyone :/? am i completely alone in this quackery? i want to randomize algorithms and test whether they can factorize composite numbers in polynomial time; a way to try to brute-force such a solution. nobody seems to rise an eyebrow (except asking whether i've got a head injury recently). am i that crazy?
<pleiosaur>	i don't think i'd want to compile to go, though :p
<k-202>	any way to compile java me applications on 64-bit linux?
<denommus>	pleiosaur: what one actually needs is not a language with built-in-gc. it is a target runtime with built-in-gc
<denommus>	pleiosaur: and i think llvm is providing that soon
<pleiosaur>	denommus: true
<pleiosaur>	denommus: although it had gc before, even if i hear it was a bit lacking. the new azul gc stuff is supposed to be better but i haven't figured out what it does differently
<k-202>	i downloaded wireless toolkit 2.5.2 but it needs 32-bit jdk. i downloaded it but when i type path to it, it says "permission denied"
<pomf>	welp, i'm going to sleep.
<pomf>	good night. :>
<pyon>	anyway, i realized, conceptually, what the gc must do: (0) stop worker threads [not terminate them, just make them stop whatever they're doing], saving their state; (1) collect all the garbage; (2) resume whatever the worker threads are doing. so all resources must be owned by the main threads.
<pyon>	i guess the threadpool crate could help me here.
<denommus>	pyon: that's... basically what i told you
<pyon>	:-o
<aawe>	what about concurrent garbage collectors
<pyon>	denommus: but i'd much rather not use arcs.
<pyon>	denommus: resources must be fully owned by the main thread.
<pyon>	and only "lent" to worker threads.
<pleiosaur>	pyon: could you make all resources owned by the main thread by having the main thread hand out arenas to each child
<denommus>	pyon: can you borrow a resource in another thread?
<denommus>	pyon: or are you going to keep messaging them around?
<pyon>	denommus: probably the latter.
<pyon>	pleiosaur: :-o
<pyon>	out of curiosity, can borrowed pointers be messaged?
<pyon>	s/messaged/sent/
<denommus>	pyon: i doubt it
<pleiosaur>	pyon: good question, i dunno
<pyon>	gah!
<pleiosaur>	pyon: probably not, because the thread you're sending it to has no correlation to the lifetime of the owning thread
<pyon>	right.
<pyon>	channels themselves don't have lifetime bounds. :-(
<pyon>	see? no matter what i want to do with a high-level language, i effectively need to reimplement it!
<pyon>	and this is what i mean when i say "wherever i see, standard libraries suck".
<denommus>	pyon: you can always implement your own pointer type
<pleiosaur>	be glad you're using a language that's actually powerful enough to implement its own stdlib :p
<pleiosaur>	pyon: maybe you should take the hint and target your language at the jvm :3
<pyon>	no!
<pyon>	i have my own object model.
<pyon>	and i don't want to sacrifice that.
<denommus>	meh. write the language in ocaml, target the llvm
<pleiosaur>	that's what rust did
<pleiosaur>	seemed to work out well for them
<pleiosaur>	not that that solves the problem, i hear ocaml has problems with threading :p
<pleiosaur>	it has a gil, right?
<pyon>	pleiosaur: it does.
<pyon>	ocaml has concurrency support, but no parallelism. which is really sad, given that ocaml is a functional language.
<pyon>	no parallelism in python, i can understand.
<denommus>	pleiosaur: it doesn't matter that ocaml has a problem with memory
<denommus>	pleiosaur: you'll just write a compiler from the target language to llvm bytecode
<darkelement>	hey guys, anyone have an example of a simple message sender for irc using twisted and python?
<denommus>	pleiosaur: what ocaml can or cannot do is not important from the point the bytecode is produced
<denommus>	pyon: ocaml gives as much support for imperative programming as it gives to functional programming
<denommus>	pyon: it is, by no means, as pure as sml or haskell
<pyon>	mmm.
<pyon>	from a type theoretic pov, it's no less pure than sml either. idiomatic ocaml has a more imperative flavor, though.
<pyon>	anyway, when i read the real world ocaml chapter on the memory representation of objects, i cringed a little.
<pyon>	so much wasted space. to think that ghc haskell is even worse in this regard.
<denommus>	pyon: a lot of structures in the standard library are implicitly mutable
<denommus>	pyon: i don't know about sml, but i'd expect just refcells to emulate mutability
<pyon>	it's true-blue mutability, not emulation.
<pyon>	it's just that smlers only use mutability when absolutely necessary (e.g., to avoid hurting algorithmic complexity).
<pyon>	and they try to wrap it in an "ostensibly purely functional" interface.
<pyon>	whereas ocamlers... "ah, well, fuck it, let's just mutate stuff and document it".
<ron__>	does anyone know if i can somehow get all elements from an xml feed with javascript?
<pyon>	ron__: sure.
<pyon>	ron__: i'd be extremely surprised if there were no xml parsing libraries for javascript.
<ron__>	pyon any idea how? or links that will show
<denommus>	pyon: i am aware that it is true mutation, i worded myself terribly wrong
<pyon>	dafeq just happened?
<devush>	 /who apiw
<darkelement>	hey guys i want to represent this line in a log as a key and value in a dict: stumbles: redefine what?, ["yeah but python also clearly doesn't care about performance."]
<darkelement>	how can i make the elements in the brackets appended to the key that is the item before the bracket?
<darkelement>	i'm just drawing a blank atm
<alanjf>	nice day for a net-split...
<pyon>	alanjf: ikr
<darkelement>	net-split?
<darkelement>	i am doing this in python
<gedamo>	darkelement: what would be the resulting dictionary entry?
<_blizzy_>	aw, i missed a net split
<darkelement>	it would be like dict["stumbles: redefine what?":["yeah but python also clearly doesnt care about performance"]]
<darkelement>	so the key would be the question
<darkelement>	and the value would be the response
<gedamo>	so what's the problem?
<darkelement>	i don't know how to parse or split that string so that i can assign dictionary values to it
<darkelement>	drawing a blank, as is
<gedamo>	ah, so you have «stumbles: redefine what?, ["yeah but python also clearly doesn't care about performance."]» as your input?
<darkelement>	yes
<gedamo>	split at the comma?
<darkelement>	i could do that, but there could be commas in the strings
<gedamo>	in the question?
<darkelement>	yea
<darkelement>	or the "yeah but python..."
<gedamo>	is there likely to be a [ in the question?
<darkelement>	there could be.
<darkelement>	but let's assume not this time
<gedamo>	find the first [, split and remove the trailing ', ' from the first part
<darkelement>	ok, but what about this: there could be multiple strings in the brackets, so it could be formatted as so: ["str1", "str2"]
<gedamo>	a list can be a value in a dictionary
<darkelement>	yea, just how do i split those two values in the list
<pleiosaur>	pyon: trying to think of languages that don't have a gil that you can use as inspiration, that aren't java
<pleiosaur>	pyon: i think tcl creates an interpreter per-thread, and then uses message passing to communicate between them?
<gedamo>	darkelement: it sounds like an actual parsing problem
<darkelement>	i'll find a better way to write it to the file so that i can parse it better, then.
<darkelement>	but first, coffee!
<pleiosaur>	pyon: there are enough gil-based language implementations out there that i'm suspecting this is one of those hard problems
<pyon>	pleiosaur: (ghc) haskell. poly/ml.
<darkelement>	gedamo, thanks anyway
<ron__>	pyon hey man
<ron__>	im trying to parse an xml doc. although the page is blank for some reason
<ron__>	http://codepaste.net/v531ej
<pleiosaur>	pyon: i'm discounting both haskell and java because i suspect they've both had a million man-hours of work by world-class garbage collection specialists
<pyon>	ron__: sorry, can't help you. don't wanna bang my head against either javascript or xml, let alone both together.
<ron__>	any interested in helping?
<pleiosaur>	we're trying to find a sweet spot between "doesn't use a gil" and "will be implemented before 2030 with less than a million dollars in funding"
<pyon>	pleiosaur: preferably also including "implemented in something other than c or c++".
<ron__>	do you need to run ajax requests on a server? because the issue isnt my code, it something else.
<ron__>	probably where its being run
<pleiosaur>	denommus: right, presumably they were like "welp, as long as we being sequential, might as well shove it out of userspace..."
<pleiosaur>	i don't understand android fragmentation. people are always like "blame the oems" but then why was this never a problem on windows where regardless of your manufacturer you still get windows updates
<darkelement>	so guys do you think ai will be made by some random guy with a simple solution in his basement, or it will be made by some big company working on mapping all the brain's neurons and such
<pyon>	back
<mike802>	hopefully some big company
<darkelement>	mike802: why hopefully?
<mike802>	i don't trust people in basements
<pleiosaur>	darkelement: ai is limited by hardware, there's no simple solution
<darkelement>	oh, haha
<pleiosaur>	unless you think nematode-level ai counts
<denommus>	mike802: and you trust... companies?
<darkelement>	pleiosaur: of course we need the better hardware, but that will come soon
<darkelement>	moore's law
<darkelement>	so disregarding that, what do you think
<pleiosaur>	darkelement: it's not just a matter of putting the brain on the gpu, you need specialized hardware that is useless for anything but ai. it will be a big company because nobody else will want to build that
<darkelement>	hmm.
<_w_>	darkelement: i think ai will come from humans being augmented
<darkelement>	it's one method, i understand it's not the only idea of how to do it
<darkelement>	_w_: that would be the ideal way
<_w_>	darkelement: as in, we will be fully integrated with half our minds being in computers long before there's anything resembling ai where there's no brain matter left
<darkelement>	_w_: and how close to that are we? we would need to understand the brain far better or have to map a lot more of the brain for that to become possible
<_w_>	not a clue
<_w_>	very very far off
<_w_>	chances are most scientific disciplines will be near unrecognizeable before then
<darkelement>	hmm.
<_w_>	areas of science that are now separate will be unified into one discipline, areas that are now narrow specialities will be near ubiquitous
<darkelement>	why would that be easier than making an ai/sentient computer, you think?
<_w_>	because we have a starting point
<_w_>	working minds already exist
<darkelement>	how does that relate to augmenting human brains?
<_w_>	thinking we can do it from scratch using circuits without understanding what makes our biology tick seems silly
<_w_>	well us using the new technologies more and more seems inevitable
<_w_>	we already have lots of our lives and thoughts in computers
<darkelement>	it's essentially something that can think for itself
<darkelement>	if we already have all of that, it could understand us
<_w_>	making something that can think for itself is easy (and quite pleasurable)
<darkelement>	somehow sounds sexual
<darkelement>	but you know what i mean, self awareness
<_w_>	yes that's what i meant
<wikked>	hi i'm actually a little bit confused. at the moment im a cs student and want to be a good programmer. i also thought about programming games (just as hobby) which also could improve my programming skills. so actually my question is if you guys would recommend me using a framework like xna or monogame where i have to code more from scratch or rather use a engine like unity?
<darkelement>	if it's easy, then why hasn't it been made
<_w_>	wikked: what do you think you'd enjoy more?
<_w_>	darkelement: we do it all the time!
<_w_>	you're such a thinking being (i hope)
<darkelement>	lol
<darkelement>	it's about a computer, a program doing it, however.
<inphase>	wikked: do you want to understand the core of how things work, or do you want to maximize the impact of your resume?
<darkelement>	if a computer can do that, if it can think for itself, it can (maybe) feel, then it can learn, it can do anything
<wikked>	i really would like having someday a game finished so therefore unity would be the better choice in fact it wouldn't take so much time. but i also want to become a good programmer so of course i want to understand the core
<darkelement>	wikked: what do you call a good programmer?
<darkelement>	:)
<darkelement>	_w_: am i correct?
<wikked>	that's a good question :d i think for me it would be to be someone who is an expert in spezific topics and be able to get a well-paid job :d
<inphase>	wikked: programming happens at multiple layers of abstraction.  basically you're asking which layer you should focus on learning.  both are good to know, but they can open up different career paths.
<darkelement>	wikked: interesting
<inphase>	wikked: probably there are a broader assortment of companies that would be interested in the higher levels of abstraction of game development.  but the lower levels of abstraction are valued for more specialized companies, and are of greater interest in academic paths.
<wikked>	the fact is that i really don't want to end in game development as my main job :d in my opinion the technical side/products are much more intresting. i want to make games now is to get experience in programming and still do something usefully instead of programming smth. that's been done from 100 other people
<_blizzy_>	i dislike how in java, it's string, but in c#, it's string
<electrojustin>	why not character array
<darkelement>	_w_: if so, i think it is'nt so far off. :)
<_blizzy_>	electrojustin, because idk.
<inphase>	wikked: then you should try the approach of doing more from scratch.
<ruffel>	string is in c# too
<rounin>	yeah... i think c# has "primitive" and "object" versions of some of its types
<pyon>	rounin: huh?
<rounin>	of course java has that too... int and integer and whatnot
<pyon>	i think there's a hack in the .net framework that allows strings to be compared by value rather than by reference.
<pyon>	but the distinction between value and reference types in .net is pretty clear.
<rounin>	ah, riiight, so still a reference type
<pyon>	it's just that .net supports auto-(un)boxing.
<rounin>	that's an interesting twist
<pyon>	auto-(un)boxing for value types, that is.
<pyon>	"id :: forall a. a -> a" means that, for any type "a", "id :: a -> a".
<pyon>	e.g., if we substitute "a" with "int", "id :: int -> int"
<tommycannady>	fixed the timing issue
<pyon>	and, if we substitute "a" with "either string (maybe bool)", then "id :: either string (maybe bool) -> either string (maybe bool)".
<richdog>	prolog is so weird
<darkelement>	how can i do '{}\t{}'.format(key, val)? it is not tabbing as i want it to, and i am curious how to do this.
<denommus>	nitrix: i have some practical example of that in ocaml, do you want to see?
<pyon>	richdog: prolog has a few simple evaluation rules, yet it's "weird". java and c++ are full of obscure corner cases, but they're "intuitive".
<pyon>	:-p
<richdog>	pyon, i have a final exam in < 4 hours and part of it involves prolog
<richdog>	and before 30 mins ago i knew nothing about prolog
<richdog>	lol
<pyon>	if you have an exam in less than 4 hours, you probably had a lot of time to study prolog before.
<richdog>	yeah, well
<pyon>	probably no less than two weeks.
<richdog>	procrastination
<richdog>	i'm learning lol
<darkelement>	:|
<darkelement>	good luck
<pyon>	but i can't blame you. i've been a student, and i've procrastinated a lot too.
<richdog>	if i get a 50 on the exam i'll still have a b in the class
<richdog>	soooo
<richdog>	i think i'll be okay
<basketball>	anyone know a good video that teaches html div and table
<darkelement>	priorities boys
<darkelement>	basketball, try w3schools.org
<pyon>	why would anyone learn to program from a video?
<serses>	what is the fastest to solve a sudoku 9x9? dancing links or backtracking?
<pyon>	it's horrendously slow.
<pyon>	you can't force the video to go exactly at your pace.
<pyon>	at least when you read a book, you can read however fast or slow you want to.
<pyon>	plus you can stick post-it notes on the sides.
<the8thbit|work>	how to tell if someone uses vim: doni't wiorry, thieyi'll leti iyou kniow.
<tommycannady>	:)
<tommycannady>	vibby
<tommycannady>	gn
<aewffwea>	richdog: there is no way you can actually learn *proper* prolog in 30 mins
<richdog>	don't worry i still have like 3.5 hours
<richdog>	but i need to focus on some other stuff in that time too :p
<rashad>	hello. i've asked in ##math but nobody answered: i have this function: https://www.wolframalpha.com/input/?i=graph+floor%28x%2f10%29+%2b+1+from+x%3d0+to+x%3d300 i want to make the width of the step increase as x increases. how do i do that?
<pyon>	rashad: increase by how much?
<rashad>	ideally i want it to increase exponentially.
<pyon>	rashad: at the very least, have the decency of give us a few data points.
<rashad>	i don't have specific points that i want to fit the curve to.
<darkelement>	what would be the best way to split a string that is ['str1', 'str2'] to make it an array?
<rashad>	anything that widens with x will do.
<rashad>	what language, darkelement?
<darkelement>	python
<pyon>	rashad: https://www.wolframalpha.com/input/?i=graph+floor%28log%28x%29+%2f+log%282%29%29+%2b+1+from+x%3d0+to+x%3d1024
<rashad>	pyon: thanks.
<pyon>	(and this is why they teach kids logarithms and exponentials in high school.)
<_w_>	starting with a list of numbers with just a single 1 in it, you can add to the end of the list any number that is the sum of contiguous numbers in the list. find the smallest list that has the number n in it
<darkelement>	_w_, so you are referring to every new number is the sum of the previous numbers?
<darkelement>	like fibonacci but all the numbers instead of the last 2 before it
<gedamo>	pyon: i didn't get taught that at school :(
<pyon>	:-o
<_w_>	every new number is the sum of a subset of the previous numbers
<_w_>	a contiguous subset
<darkelement>	sorry, so you mean all the numbers before it?
<darkelement>	i'm just unsure
<inphase>	gedamo: ask for your money back.
<_w_>	so [1] can only lead to [1,1], but from there you can get to either [1,1,2] or [1,1,1]
<blocky>	is there a way to have excel or google docs pull from a website by including cell contents in the query? like if i wanted to get imdb ratings with the name of a film in a cell?
<darkelement>	oh. i don't think i know what contiguous means
<darkelement>	rashad: any ideas?
<rashad>	darkelement: so you have a string array with two strings in it?
<darkelement>	i have a string, that i want to make into a string array
<rashad>	darkelement: http://stackoverflow.com/questions/4978787/how-to-split-a-string-into-array-of-characters-with-python
<darkelement>	_w_, so the 3rd number could be the sum of any subset of bordering numbers
<_w_>	yeah
<darkelement>	rashad: i know how to do that, but i thought since the sub strings were surrounded in quotes in the string, i could split on that.
<darkelement>	idk, i can maybe write it better before i parse it
<inphase>	_w_: probably log2(n)+1
<inphase>	_w_: with a ceil in there.
<darkelement>	inphase, i'm not that good yet at those small nifty solutions to those problems
<darkelement>	maybe it's time for a revisit of project euler.
<inphase>	_w_: it appears it's actually ceil(log2(n)) + 2.  i was off by one.
<ams>	http://photos.imgix.com/racking-mac-pros // why? a normal dell would do the job, and some ..
<darkelement>	ams: what...is this?
<nitrix>	pyon: i implemented a rope data structure, like you suggested me. it's brilliant, it has insanely good performances, mostly o(log n) where the log base is anywhere between 2 and thousands at times. it keeps the tree extremely flat, i'm very happy with it. thanks :)
<pyon>	:-o
<nizumzen>	ams: i imagine they already have a mac based workflow which would be too hard to port to linux or windows
<ams>	darkelement: a company that has way to much money ..
<darkelement>	ams: how is using 4 macbook cups in a row good for a server?
<ams>	nizumzen: compared to the cost of un-upgradeable, outdated, hardware  .. nah ..
<pyon>	nizumzen: "workflow" --> lmao, assuming macs are for doing work
<pyon>	(no offense to mac users, it was just a joke.)
<nitrix>	pyon: the only issue so far is when i do multiple insertions. the number of branches per node is variable, and because the node is stored on disk, it creates fragmentation. sometimes i have nodes with only one branch in it.
<ams>	darkelement: it isn't ..
<ams>	darkelement: airflow is shit ..
<darkelement>	ams: i thought so, lol
<nitrix>	pyon: it bothers me. i'm trying to figure out a way to reduce fragmentation.
<darkelement>	ams: they do have a well designed website however
<darkelement>	ams: xd
<darkelement>	ams: i agree with you, all i am thinking is why
<nizumzen>	ams: err how is it outdated? the mac pros use the latest available xeon processors
<pyon>	nitrix: whenever you have two or more consecutive "small" branches (fsvo "small"), merge them
<ams>	nizumzen: porting it to gnu or bsd (which it already is ported to!) would be less than a mac pro with prolly maxed out memory and everything ..
<pyon>	nitrix: ropes create as much or as little fragmentation as the underlying search tree, anyway.
<nizumzen>	ams: assuming they are not using applescript for their current workflow (because if they are they'll have to rewrite everything)
<nitrix>	pyon: exactly. i think this is the way to go, because, as you realised, i cannot just reshuffle everything. i'd like to mutate as less data as possible, so the best strategy would be what you said: merging consecutive small branches.
<ams>	nizumzen: they cpus they use are not the latest ..
<nitrix>	pyon: not optimal, but it's a good tradeoff. i hate tradeoffs x]
<nitrix>	why does programming always involve tradeoffs x.x
<ams>	so like .. check the apple thing .. a 2.7 ghz 12 core, with 30m of l3, 64g mem, and 1tb drive will set you back 10k usd
<puddlejumper>	hello ladies and gentlemen and pyon
<nitrix>	*bunnies
<pyon>	so
<ams>	nizumzen: they say they use 42u... which is one full rack ..
<nizumzen>	ams: yep
<ams>	looking at the pics, 4u per three macbooks ..
<ams>	that is 10 blocks, so 30 macbooks ..
<ams>	mac pros ..
<ams>	that alone is 300k ..
<ams>	excluding cost of works, special chassi crap, network switches, and what not. ..
<darkelement>	"if they're apple they must be best" -mac user
<darkelement>	-typical mac user
<ams>	not to talk about lack of redundancy, replacement psu, lack of modularity ..
<nizumzen>	ams: xeon machines are expensive no matter where you get them from - the cpu alone is £1,500
<ams>	nizumzen: oh sure!
<gune>	im sure a lot have read this one but its funny none the less-> http://stackoverflow.com/questions/218123/what-was-the-strangest-coding-standard-rule-that-you-were-forced-to-follow
<nizumzen>	ams: i used to be a mac user but switched to a home built pc about 2 or 3 years ago - i'm not an apple basher though
<ams>	nizumzen: i am.
<ams>	:)
<darkelement>	i'm not either nizumzen, however i did have one a while back
<ams>	nizumzen: but come on .. wasting 4u for three machines that fit in one single u .. with no extra psu, no extra drives ... shitty airflow ..
<ams>	nizumzen: and on top of that ... prolly a shit load of cash on the specialized chassi stuff ..
<ams>	nizumzen: think what you could literally cram into a rack ..
<ams>	pretty pictures though ..
<nizumzen>	ams: well the company in question clearly thought it was worth it - ask their accountants why they thought the extra money was worth the expense - perhaps they have a large work force that knows how to use macs and the cost of retraining them would have been more than the cost of the apple solution?
<eric_lagergren>	hi guys and fals.
<eric_lagergren>	s/fals/gals/
<darkelement>	i am a fal though
<eric_lagergren>	great, now i have to extend my greeting to guys, gals, _and_ fals.
<ams>	nizumzen: i doubt it .. i think they live on the coolness factor ..
<ams>	seeing that these are crunching machines, you could even kill the harddrives ..
<ams>	maybe even just go bonky and to piza slices ..
<ams>	it isn't like they are short on cash for this .. so  ...
<denommus>	hi
<ams>	nizumzen: oh, don't forget apple support contract, and what not  on top of that ..
<nizumzen>	ams: yeah their support does suck - i'll grant you that one
<ams>	nizumzen: so like .. 300k jsut for boxes, then add at least 100k for the extra chassi stuff, say 10k for extra hardware .. like at least 10 people doing design of the darn thing for prolly half a year .. excluding engineers building it ..
<ams>	nizumzen: i'm guessing .. 1600000 ... total.
<ams>	prolly more..
<nizumzen>	ams: just playing around with xeon workstations and just for 2 xeon cpus and the motherboard you are looking at £4,388
<ams>	that is what? 6k usd .. or something?
<nizumzen>	ams: $6691
<ams>	nizumzen: and note, i'm not talking about manually building racks ..
<ams>	i'm talking ordering, and getting a nice sales person to also give you like 30% discount ... from some big ass gray box company
<ams>	with 24/7 service, and the whole she-bang ..
<denommus>	ams: have you seen lux?
<ams>	what is that?
<denommus>	ams: a statically typed lisp with ml modules
<denommus>	ams: https://github.com/luxlang/lux
<ams>	http://www.businessinsider.com/how-blind-google-engineer-writes-code-2015-5?ir=t -- visually impaired google engineer who is to poor to buy a braile display ..
<ams>	denommus: oh right, i ranted about it a few days ago ..
<ams>	denommus: it didn't list lisp as a influence .. not even scheme ..
<ams>	and yet it dares to call itself a lisp ..
<ams>	and anyway, common lisp is staticallyt typed as well.. so like uhm,why again?
<ams>	nizumzen: i really hope these people have a direct line to apple sales .. and get some nicer prices ..
<nizumzen>	ams: one would hope so
<richdog>	http://gyazo.com/854cabb12da138f89f00ca838a36f698
<richdog>	i was expecting this to give me an x and a y where x*y = 100
<richdog>	what did i do wrong?
<richdog>	prolog btw
<ams>	nizumzen: loks like it is a tiny company to ..
<ams>	oo! prolog!
<richdog>	yeah you wanna help me study for my exam in 2.5 hours?
<richdog>	:p
<richdog>	i need to learn more than prolog tho
<ams>	what are you trying to do?
<ams>	solve x*y=10?
<ams>	for all x and y?
<ams>	good luck.. ..
<richdog>	100 but yeah
<richdog>	i figured it'd just return the first one it found
<richdog>	then continue if i typed semicolon
<ams>	is this homework or what?
<richdog>	not exactly
<richdog>	i was just trying it to test my own knowledge
<richdog>	i have a test in a few hours
<richdog>	apparently i don't get it
<ams>	solve(x*y=100). should work i suppose ..
<ams>	or could ..
<pyon>	ams: "common lisp is statically typed" --> that's because *all* programming languages are statically typed. it's just that some of them only have one type. :-p
<ams>	you generally don't use prolog to solve equations ..
<ams>	pyon: forth,  no type.
<pyon>	ams: exactly one type.
<richdog>	ams, http://gyazo.com/f7b12da675acb571668ad4b609e588f1
<ams>	richdog: i know some prologs have clp/fd and stuff ... that would maybe work for x*y#=100. or whatever the sytntax might be.
<richdog>	why does this code work and mine not worl
<denommus>	ams: i don't want to enter that silly discussion about static types again. if you redefine the word type to mean whatever you want surely lisp will be typed
<ams>	denommus: i haven't redefined it, i use it as it was used, and is used.
<denommus>	ams: and what is the definition, again?
<ams>	denommus: type error.
<vendu>	good evening :)
<denommus>	ams: "what is the definition of bear?"
<denommus>	"death by bear"
<darkelement>	is there a log file of all messages from channels from a year ago to now?
<darkelement>	i need more data
<ams>	no.
<darkelement>	shit
<denommus>	ams: i just need a definition. i have provided a formal, clear definition. "a type is a restriction over the operations that can be performed over a term"
<darkelement>	how will my bot gain sentience now:(
<pyon>	denommus: ams: reynolds' definition is the best: "type structure is a syntactic discipline for enforcing levels of abstraction."
<denommus>	pyon: that's also a good one
<_w_>	inphase: now try 341
<_w_>	(11111 base 4)
<denommus>	pyon: my definition is taken from here, btw: http://en.wikipedia.org/wiki/type_theory
<denommus>	pyon: though it is worded differently
<pyon>	ah.
<denommus>	"in type theory, every "term" has a "type" and operations are restricted to terms of a certain type."
<pyon>	sometimes i feel like defining "type" as "a weird way to refer to an abstract object from a category", and "type theory" as "a weird way to do category theory"... but i can't summon the courage to say this in [types].
<peterfa>	woggle, granted, you did bring up a point of modifying the benchmark data, since right now i realize i have a few bugs.
<peterfa>	woggle, still, the changes are ignored, the reporting would be wrong because the thread doesn't care.
<hydraidm801>	i need to make a scheduling app to set appointments for contractors of various trades. where do i start?
<njcomsec>	first you need a computer
<hydraidm801>	k got one of those its running this weird thing called linucks
<njcomsec>	good. now access the terminal
<hydraidm801>	how do i do that? sudo gnome-terminal ?
<woggle>	peterfa: for problem (a), note that you want synchronization so, e.g., adding two things at once doesn't lose anything, clearing idle items two times at once doesn't clear anything else, etc. [this also deals with cases where a user submits something twice by accident.] but you have a fundamental problem that if user b removes something, user a might submit a request to change something that no longer
<woggle>	exists (and you can't really solve this problem with normal synchronization stuff because you wouldn't be running anything until user a sends their request).
<tnght>	yo is it possible to for me set up specific entity types in the context of nltk's ner?
>nickserv<	identify ****
<peterfa>	woggle, ok, so far though i have everything implemented through iterators of one sort or another, other than adding. there's no way to remove anything specific. if you want to run something, you iterate over the list and if it meets the criteria, it's ran (if it's idle and ready to run). that does cause one of two issues, that i can get a concurrent access exception, which my testing revealed last night.
<peterfa>	woggle, so by design, i can avoid having to think about accessing something removed, but i do have to synchronize when i access that list. the major functions are something like, "add," "reset," "rerun," "clean" (removes all idle).
<peterfa>	woggle, so that does clear up a lot. they way i have it implemented i don't have to worry about working with an object that could have been removed.
<peterfa>	i just have to synchronize list iteration.
<woggle>	peterfa: it's simplest to reason about locking (though least performant) if you synchronize around all operations (like entire web interface requests) that read or write it. otherwise, you have to worry about what happens if the list changes between any pair of synchronized things.
<peterfa>	woggle, well, i could synchronize around iterators i should be fine. if i want to poke at the list and see what it has, then i would even lock it, read it, then send a copy of what i read out.
<peterfa>	that should solve that. it's ok if things are a little out of date.
<peterfa>	i think i got this figured out.
<fred-fri>	whats a good resource on best practices for rest api design
<tnght>	yo is it possible to for me set up specific entity types in the context of nltk's ner?
<xeno_>	fred-fri: there's some books
<pyon>	isn't rest itself a particular api design style?
<xeno_>	fred-fri: almost no one implements the academically correct rest though
<fred-fri>	pyon: yes, because you can make several types of requests to endpoints
<pyon>	i mean, what best practices could there be to follow, when rest itself already tells you how to design your api?
<fred-fri>	pyon: rest says nothing about how to design an api
<fred-fri>	e.g. what endpoints to expose and what they do
<pyon>	oh, that's what you mean.
<xeno_>	pyon: you need a resource to tell you how to interpret "rest"
<pomf>	2 0
<xeno_>	fred-fri: that's just one part of it
<fred-fri>	xeno_: what are the others
<pomf>	g
<pomf>	hai
<pyon>	pomf: hai
<xeno_>	fred-fri: basically the whole philosophy... most people read "rest" as "plain http calls" - but it's more than that
<fred-fri>	ive plenty of experience consuming rest apis, and even some creating
<pyon>	i thought "rest" mean "http has methods, goddammit, use them!"
<pyon>	xeno_: ^
<pyon>	meant*
<fred-fri>	but it was mostly no brainer stuff like /user etc
<xeno_>	pyon: not really
<pomf>	no matter how i look t this, i'll be late for my first day...
<pyon>	pomf: first day of what?
<juesto>	anyone hand me the guide about half life 2 beta leak compiling please?
<pomf>	pyon: class
<xeno_>	pyon: fred-fri: http://dl.acm.org/citation.cfm?doid=337180.337228 describes the basic idea
<xeno_>	i think it's available for free too, if you just search a bit
<pyon>	pomf: oh.
<xeno_>	like http://www.ics.uci.edu/~fielding/pubs/webarch_icse2000.pdf
<juesto>	...
<xeno_>	pyon: it's not prosedure calls
<xeno_>	pyon: it's not meant to be http-rpc
<pyon>	xeno_: then, how is a web api supposed to differ from regular procedure calls?
<pyon>	(besides the impossibility to debug your code by restoring the state of the system to a previous one.)
<numb3rz>	hey
<xeno_>	pyon: just read the paper...
<njcomsec>	im working on a new game idea.....you have a 2d top down map, very basic graphics, little animation and turn based strategy, you have a procedurally generated map to find resources and crafting etc and no missions or levels, just dynamic objective spawns, eg repair this, help this person etc. and everything is time dependant but also turn based.
<pyon>	xeno_: this is probably a little bit too rich coming from me, but all of this stuff sounds too abstract. i need something a little bit more tangible. i can make concrete sense of any of the following: code, proofs, benchmark results.
<njcomsec>	so say you scan a field around you from your coordinate, 3 objectives spawn, you can travel to one but then it also depeletes some time from the other objectives, which can reduce the reward etc
<njcomsec>	so its about calculating various positions of objectives and your skils for them and you can upgrade your vehicle's cargo, speed, weapons etc... and while moving from point to point you can be intercepted by other hostiles like in the old rpg games
<njcomsec>	so i suppose it is open world rpg meets turn based strategy
<pyon>	xeno_: when they talk about scalability... well... i'd like to see either (0) asymptotic complexity bounds in a cost model that accounts for scaling, or (1) benchmark results. preferably both.
<njcomsec>	how does it sound? or is my description too abstract to get my vision
<pyon>	this kind of paper makes cs look almost like a so-called "social science".
<njcomsec>	i thought marxists liked social science
<pyon>	njcomsec: i'm not a marxist, i just hate people.
<njcomsec>	ahh
<njcomsec>	i have no feelings towards people in general
<njcomsec>	they just exist
<njcomsec>	pyon what do you think of my game idea?
<pyon>	njcomsec: i don't care about computer games.
<njcomsec>	ok.. so.. what would a game have in it that could make you care
<njcomsec>	tell me your digital dream!
<pomf>	i'm at leadt 20 mins late
<pomf>	fuck
<njcomsec>	thats cool
<njcomsec>	now  is your chance to make an epic entrance
<pyon>	pomf: aren't you on your way to class already?
<pomf>	i have to go.
<pyon>	pomf: ok gl
<njcomsec>	turn up nude and covered in nutella
<pomf>	pyon: i just woke up at that time lol
<pyon>	pomf: lots of times i went to class not even fully awake.
<pyon>	or not fully sober.
<pomf>	pyon: once went to class without wearing my top uniform
<pyon>	lol
<pomf>	just my undershirt
<pomf>	i went home imm
<pomf>	going now
<pyon>	pomf: cya
<b2coutts>	i have a set of line segments in r^2, and want to efficiently implement the operation "given a point p, find the closest line to p". how do?
<b2coutts>	i'm thinking i should maybe be able to do something with k-d trees, but can't quite figure it out
<powersource>	i'm trying to layout a program using swing and am deciding on what layout manager i'm gonna use. there are a bunch but i have a feeling people stick to one or two of them, i just can't figure out which ones. any pointers?
<njcomsec>	make visual basic in gui
<eric_lagergren>	sup.
<darkcthulhu>	dun dun dunnn
<darkcthulhu>	why is it so empty out here?
<darkcthulhu>	wake up people!
<qis>	i usually don't join this channel because there is so much talk and not much c++ related stuff.
<qis>	good that it's quiet at night.
<peterfa>	what's the best way to send tabular data from one class to another in java?
<peterfa>	i just want to transmit some table data. i could use multidimension array, but i don't know.
<planckwalk>	have an object that holds it?
<peterfa>	planckwalk, yeah, but what?
<darkcthulhu>	peterfa, using an object to hold that data would make it extensible.
<darkcthulhu>	arraylists for example.
<planckwalk>	if the "columns" are fixed and named, then you might just have a list of rows
<darkcthulhu>	or, maps.
<planckwalk>	if they're more general then you might use some more general data structure
<planckwalk>	it all really depends what that table represents and how you intend to use it
<peterfa>	the data is certainly fixed.
<peterfa>	if i want to modify the table i'll modify both classes.
<peterfa>	planckwalk, parse it to make an html table in the calling class.
<darkcthulhu>	peterfa, key-value associations? then a hashmap of arraylists.
<peterfa>	planckwalk, so, just a bunch of strings.
<hotcoder>	disconnected from the irc network
<hotcoder>	darkcthulhu, whats up
<darkcthulhu>	nothing much hotcoder :)
<planckwalk>	peterfa: okay.  if it has already devolved to that point then just a list of lists of strings would probably work as well as anything.
<hotcoder>	man i'm almost done my code
<hotcoder>	but i just cant get myself to do it
<hotcoder>	xd
<darkcthulhu>	hotcoder, i was writing a skiplist.
<darkcthulhu>	ah
<hotcoder>	i'm so unmotivated
<peterfa>	hotcoder, think about how nice it would be to have a beer right now.
<peterfa>	hotcoder, while playing your favorite video game.
<hotcoder>	i dont play video game
<hotcoder>	btw
<hotcoder>	have you guys heard of watch dogs?
<njcomsec>	the video game?
<njcomsec>	ya
<harris>	hey
<harris>	anyone know html
<bvcm>	sure
<lf94>	harris how can i help you
<lseactuary>	i have some python code, some vertica/sql etc from various data sources. is django the best way to import all that code and make a user-friendly front end?
<denommus`>	i hate it when i forget myself logged in at work
<denommus`>	also, hi
<vdamewood>	denommus`: i'll see your 'hi' and raise you one 'how are you?'.
<darkcthulhu>	jrslepak, you around?
<hydraidm801>	how can i hack the gibson?
<darkcthulhu>	river?
<vdamewood>	hydraidm801: well, first you need a cool-sounding handle and a floppy disk.
<denommus`>	vdamewood: fine
<hydraidm801>	vdamewood: k how about "blaqaddrz" and i have a floppy disk
<vdamewood>	hydraidm801: got any chewing gum?
<hydraidm801>	vdamewood: i have some spearmint. check!
<vdamewood>	okay, then you're ready. just read through all the major books and then casually hack a gibson. download the garbage file to your floppy then use the gum to hide it in the trash so you're friends can find it when you get arrested. ready?
<hydraidm801>	vdamewood: peice o' cake
<vdamewood>	andiamo!
<hydraidm801>	i was afriad i'd have to learn asm and use ida to reverse engineer something with a buffer overflow on virtual memory
<powersource>	i was messing around with swing and all of a sudden i have an extra forms-1.3.0.jar and forms-1.3.0-src.zip in my project folder, wtf?
<hydraidm801>	ya know. like a real pen tester
<vdamewood>	naw. you just need a screen that projects its image on your face.
<hydraidm801>	hey i have some super glue can i hack someones fingerprints also
<odin22>	any thoughts on this? custom software (for your core business) is a competative advantage? anyone disagree?
<hydraidm801>	odin22: is that a line out of your textbook for introduction to compsci 101?
<odin22>	hydraidm801: nope, just sitting thinking
<vdamewood>	like everything else, it's a balance between cost and balance. if the custom software costs more than it saves, it's not an advantage.
<vdamewood>	err between cost and benefit
<encapsulation>	mvcalhigh = ((echighcal / 4095)*4948); why is the result of this 0
<darkcthulhu>	encapsulation, integer division? try dividing by 4095.0 instead.
<hydraidm801>	lol
<vdamewood>	also, save the division step for last, instead of ((x / y) * z), do x * z / y
<lf94>	is this proper english? it doesn't sound like it:
<lf94>	 you need to define the problem better.
<lf94>	how could i say this beter?
<lf94>	better*
<qis>	string get(const string& name, const char* value) const noexcept { try { return v[name]; } catch (...) { return value ? value : {}; } }
<lf94>	the word better feels so wrong to say
<qis>	wrong channel
<darkcthulhu>	anyone familiar with data dependence analysis?
<darkelement>	where can i start making ai's
<strukks>	hi, i need to create a specific syntax in json as follows {key : {key : value , key : value} , key : { key : value }}, how do i get 2 values in a single key? like this key : {key : value , key : value}?
<dreams>	darkcthulhu: only used it to draw a graph of function dependencies.
<strukks>	jsonarray doesn't work since it adds "[" "]"
<qis>	darkelement: start reading and watching mit lectures online; nvidia has a lot of resources; books
<darkcthulhu>	dreams, hmm.. i was wondering this. when it comes to scalar loop-carried dependencies, is it ever possible to have an anti- but not a flow- dependency across iterations? intuitively, it seems like they should occur in pairs.
<amigojapan>	stefan27: mabe take a look at the glossseealso field of this http://json.org/example
<amigojapan>	strukks: ^
<darkelement>	qis: alright, where can i view nvidia's resources
<strukks>	amigojapan: i'm trying to create it using jsonobjects etc
<amigojapan>	strukks: anyhow, that page has many examples, look it over
<vdamewood>	amigojapan: he's trying to use an api to generate json, not create a json object manually.
<vdamewood>	strukks: what api are you using?
<strukks>	amigojapan: i don't think that is what i'm looking for, i'm trying to create it using jsonobjects in java "myobject.put(key, value);" etc, but i can't wrap my head around what data structure that would be
<strukks>	vdamewood: jettison
<vdamewood>	it looks like an object to me.
<vdamewood>	i like how json.org has the fsa's on the home page.
<strukks>	vdamewood: key : {key : value , key : value}, i'm having trouble inserting two object under a single key as such.
<strukks>	cdamewood: jsonarray gives me key : [{key : value , key : value}], which is wrong
<dreams>	darkcthulhu: well flow & anti are side-effects aware (never used them since i don't have side effects). but, from reading, yes it should be possible "iff" the iteration body is not modified by the iteration statement.
<vdamewood>	well, you don't have any array.
<vdamewood>	strukks: you have a key-value pair where the value itself is an object.
<darkcthulhu>	dreams, i don't understand what you mean by "iteration statement".
<darkcthulhu>	dreams, can you think of a program where one occurs without the other (and they must be loop-carried as well).
<lf94>	good day fellow ##programmers
<natehiggers>	good day to you sir
<strukks>	vdamewood: what data structure is {key:value , key:value}?
<amigojapan>	good morning lf94
<lf94>	amigojapan it's 1pm
<lf94>	what's it in japan?
<lf94>	11am?
<amigojapan>	lf94: its 11:49am
<lf94>	:)
<lf94>	12:49 here
<amigojapan>	i see
<lf94>	it is crazy how we're relatively close to each other.
<amigojapan>	lf94: are you in australia?
<lf94>	yeah :p
<amigojapan>	ah ok
<vdamewood>	strukks: that's an object.
<lf94>	for another 6 months.
<amigojapan>	lf94: australia has many timezones right?
<lf94>	been here for 3 so far
<lf94>	yeah
<lf94>	3?
<lf94>	i'm on the far edge of the coast (brisbane)
<amigojapan>	lf94: i have another friend that i often skype with, he is i think in melbourn
<strukks>	vdamewood: that actually makes sense
<vdamewood>	aussie time zones are fun. one of them is a half-hour off of the others, and some states don't do dst.
<strukks>	vdamewood: but how do i create an object that consist of two key:value pairs?
<vdamewood>	strukks: how do you create an object that has one key-value pair?
<dreams>	darkcthulhu: ah, wasn't aware of the loop-carried restriction.
<strukks>	vdamewood:     	jsonobject myobject = new jsonobject();  and myobject.put(key, value);
<vdamewood>	strukks: i see a step that creates an object, and a step that adds a key... think about that for a second.
<strukks>	vdamewood: ohhhh, i just do the last part twice?
<lf94>	amigojapan, how is your 3d project coming along?
<lf94>	3d basic x)
<vdamewood>	strukks: yep.
<strukks>	vdamewood: whoa, of course, it's 6:00am here, coding all night, getting a bit dumb :d
<amigojapan>	lf94: right now i am concentrationg on other projects, like my operating emvironment for blinfd japanese people
<strukks>	vdamewood: thank you very much!
<lf94>	amigojapan, i really want to make an oe that will allow me to code totally blind.
<amigojapan>	lf94: my oe is designed for that too
<lf94>	do you have any plans i could review?
<lf94>	i love stuff like this.
<dreams>	darkcthulhu: in loop-carried, the two statement instances have to be semantically identical?
<amigojapan>	lf94: ok,  here it is , work in progress mind you, https://github.com/amigojapan/blindos
<lf94>	of course :)
<lf94>	holy jumpin'! lots of files already! x)
<lf94>	amigojapan, may we take this to pm?
<lf94>	or would you like to discuss this here
<amigojapan>	ok lf94 , but i am kindof sleepy, i staied up super late last night
<darkcthulhu>	dreams, no, not necessarily. it could be between any use and definition of a single variable.
<lf94>	haha, ok, we can talk about it tomorrow :)
<dawik_>	hi, i figured this might be the right place to ask. how do i go about converting a utf-8 sequence to integer? i can convert from utf-16 to integer without any problems but utf-8 is throwing me off. here is what im using as a reference: http://www.fileformat.info/info/unicode/char/201d/index.htm
<amigojapan>	lf94: anytime is ok for me :)
<dawik_>	is that value the same as "e2809d" ? shouldnt 8 bit be 0-7 and not characters?
<dawik_>	if i convert it i get an astronomical integer instead of the expected output (8221)
<nitrix>	dawik_: u+201d is encoded with three bytes using utf-8
<nitrix>	0xe2 0x80 0x9d
<nitrix>	that's it.
<nitrix>	8221 has nothing to do with this.
<dawik_>	hmm
<nitrix>	8221 is the utf-16 encoding.
<dawik_>	oh okay. then i want to convert it to utf-16 i suppose
<dreams>	darkcthulhu: for(s1 not involving x) { x = x; x = 10; }
<dawik_>	nitrix: it is the utf-16 encoding in decimals right?
<dawik_>	which is what im after
<nitrix>	dawik_: it's in base 10.
<dawik_>	nitrix: yes
<nitrix>	converting utf-8 to utf-16, i don't even know if you can do that.
<dawik_>	i guess im not familliar enough with the format, how are the three bytes supposed to be interpreted. sequential with the first byte most significant?
<nitrix>	probably there are code points that cannot be represented.
<planckwalk>	no, they're all present in both
<planckwalk>	there are some invalid sequences in both, that's the only catch
<planckwalk>	you have to make sure the input is valid, to avoid generating invalid output :)
<darkcthulhu>	dreams, it is also a flow-dependence; because one iteration could be writing x and another would be reading it and assigning it to itself.
<dawik_>	nitrix: thanks for the reply, atleast it gave me a better idea on what to look for
<darkcthulhu>	dreams, when we consider it across iterations, all possible interleavings of instructions is considered.
<dawik_>	im sure there are some bits that are to be ignored/interpreted differently than simply compunding it to a large integer
<dreams>	darkcthulhu: are you assuming parallel execution here?
<nitrix>	dawik_: planckwalk gave good cues as well. i'd try collecting as much info as you can; unicode is consistent in general, but it has a lot of legacy when it comes to encoding.
<planckwalk>	yes, utf-8 is big-endian in that sense
<darkcthulhu>	dreams, the loop can be automatically parallelized if it has an absence of flow dependences (because all other dependences can be resolved). so, if we have a producer-consumer relationship between two statements in any order, then you have a problem, because one iteration is producing a value that is consumed by another iteration.
<planckwalk>	the first byte of a multibyte sequence holds the most significant bits of the code point
<darkcthulhu>	dreams, ofcourse, other optimizations could remove some of these dependences. in your example, x = x would be removed by some deadcode elimination pass.
<darkcthulhu>	..and then you're left with simply an output dependence.
<darkcthulhu>	due to x = 10
<dreams>	darkcthulhu: ah, the whole iteration counts. heh, its more tricky then.
<dawik_>	planckwalk: nitrix: okay, im in googling-frenzy mode right now. thanks for the input :)
<dawik_>	what do you mean by code point?
<dreams>	darkcthulhu: well of course you have optimization order to solve this.
<dawik_>	b.t.w
<nitrix>	dawik_: every character of unicode is represented by a code point. u+xxxxxx
<harris>	hey
<darkcthulhu>	dreams, yeah.. but in this case, i think finding the anti-dependences separately is unnecessary, because they must be flow dependences as well with the same distance. i'm trying to come up with a counter-example.
<harris>	anyone here good with css
<dreams>	darkcthulhu: this is why we run away from side-effects :p.
<nitrix>	dawik_: utf-8, 16, 32 are all different encoding of how such code point is represented. utf-8 uses bytes that tries to remain consistent with ascii but the higher range tells you that it's an extended character and then you'd need to read an extra byte. utf-16 uses a different strategy. utf-32 isn't compatible with ascii at all if i recall correctly.
<harris>	anyone here good with css
<darkcthulhu>	dreams, yeah. pure functions are so much easier to automatically parallelize. but in case of loops, wouldn't you have the same analysis to do?
<nitrix>	dawik_: it's a bit blurry in my memory, but point is, there were various encodings out there before it became standardized.
<darkcthulhu>	dreams, i mean when it doesn't use recursion exclusively.
<dreams>	darkcthulhu: we don't have loops, we have recursions only.
<dawik_>	nitrix: gotcha. i am looking for how to interpret these prefix characters right now
<nitrix>	dawik_: http://www.joelonsoftware.com/articles/unicode.html
<nitrix>	dawik_: this is what i read couple reads ago. it's worth reading entirely.
<nitrix>	s/reads/years/
<darkcthulhu>	dreams, hmm.. that is convenient, but it also means a lot of extra memory use doesn't it? there are copies of copies of copies all around.
<dawik_>	nitrix: oh nice, thank you
<nitrix>	dawik_: set some time aside, it's one of the best articles on the subject :] let me know
<dreams>	darkcthulhu: not necessarily, you can run programs even with less memory. it boils down to algorithmic choices; you could copy, remove and reuse freed memory.
<planckwalk>	darkcthulhu: if a compiler or runtime can determine that parameters passed into a function are not modified, then they need not be passed explicitly into recursive calls.
<dawik_>	nitrix: it reads well thus far
<darkcthulhu>	dreams, planckwalk, there isn't enough traction with these purely functional languages, but at least the popular imperative ones are adding constructs to enable that style of programming.
<dreams>	darkcthulhu: how so?
<darkcthulhu>	"functional fortran"?
<dreams>	darkcthulhu: haskell is one example.
<darkcthulhu>	dreams, yeah, but java and c++ still dominate and are likely to, based on the amount of code there is already in them.
<darkcthulhu>	dreams, ..and it's those languages that a lot of people want to realie a parallel speedup in.
<darkcthulhu>	realize*
<dreams>	darkcthulhu: well sure its the trend. for me trend is not a sign of success anyway.
<pyon>	dreams: haskell is lovely, but it isn't the kind of language one should use when performance matters most.
<nitrix>	pyon: if you had to suggest a similar alternative?
<nitrix>	pyon: rust?
<dreams>	pyon: i agree, which is why there is over 3 decades of effort to optimize haskell.
<pyon>	darkcthulhu: "copies of copies" --> substructural types have a good story regarding in-place updates, even for arrays.
<darkcthulhu>	and ffi is nice and everything, but the industry hates having to hire programmers with two different skill sets; so that's doa.
<pyon>	nitrix: dunno
<zzultan>	cant we just wait 18 months until computing power doubles again?
<pyon>	zzultan: it won't.
<zzultan>	not with that attitude...
<nitrix>	we're reaching moore's law end.
<darkcthulhu>	it may not. moore's law is predicted to go poof soon.
<dawik_>	nitrix: done. it definetly shined some light on what code points are and some history behind it :) now i need to get into some details
<nitrix>	dawik_: glad you liked it :]
<darkcthulhu>	intel's 7nm process is slated to become mainstream in 2020 or 2022 iirc.
<pyon>	darkcthulhu: really, 95% of the time, mutation is used as a lousy form of memory management. ["object a isn't needed anymore, and i need b, so i'll put it where a used to be."]
<darkcthulhu>	pyon, substructural types? i found a 468 page dissertation on that. is there a simple explanation?
<darkcthulhu>	pyon, yeah. decisions like that should be left to the compiler. programmers suck at that stuff.
<pyon>	darkcthulhu: basically, controlling how many times you can use variables that are in scope.
<darkcthulhu>	ah
<dreams>	darkcthulhu: its all in a paper called in-place update analysis.
<pyon>	darkcthulhu: if the compiler *knows* you can't use a anymore, it can take the decision to put b where a used to be.
<dawik_>	ot: what haskell has going for it isnt raw performance but stability, i havent coded it myself but am using xmonad as a window manager, and its the most stable piece of software ive used :)
<dreams>	darkcthulhu: written by the recently dead co-haskell designer..
<pyon>	i trust compilers to be much better at taking such decision than i could be.
<pyon>	decisions*
<dreams>	darkcthulhu: http://haskell.cs.yale.edu/wp-content/uploads/2011/03/aggupdate-popl85.pdf
<darkcthulhu>	pyon, yep.. the compiler can do a good job. i was just seeing code-generation and the algorithms to reduce register use using some dynamic programming approach. seemed effective. certainly more trustworthy than a programmer's decisions.
<darkcthulhu>	dreams, reading. ty
<dawik_>	also, perhaps the most gorgeous and diverse syntax .)
<darkcthulhu>	dreams, that is one old-looking paper!
<pyon>	dawik_: haskell's story regarding code stability isn't terribly good. someone decided to make a major revamp of the type checker to accomodate a type system extension that was proposed a few months ago in a paper... 543598342542375432 programs break.
<pyon>	dawik_: haha, joking, there aren't that many haskell programs.
<dreams>	darkcthulhu: 1985. they don't always keep us updated with their new optimization.
<dawik_>	lol, i dont know about that. i only use xmonad and pandoc :)
<dreams>	pyon: lol.
<dreams>	pyon: to be honest ghc is pretty good at breaking programs.
<darkcthulhu>	pyon, who let a breaking change like that through? isn't that a lesson to be learned from c++; that everyone loves backward compatibility?
<nitrix>	the problem with any of those project is, developing optimizations usually increase the code complexity.
<nitrix>	i don't know what llvm looks like now, but i'm sure i'd be lost.
<pyon>	darkcthulhu: iirc, the upgrade from ghc 6.x to 7.0 broke a lot of code.
<nitrix>	pyon: i'm actually okay with that. haskell is known to be a constant work in progress. if a c compiler did the same, i'd be furious.
<zzultan>	moore just told me to remember whatever has been done, can be outdone.
<dreams>	nitrix: the pattern that i saw is: if its a complex optimization forget about it. they're incorporating reasonably simple ones (simple enough). thats for ghc.
<darkcthulhu>	pyon, the committee in-charge is to blame then. it takes years to build trust and such a decision can be crippling.
<nitrix>	pyon: one language i'm actually impressed so far is go.
<pyon>	darkcthulhu: well, in all fairness, it wasn't haskell itself, it was ghc.
<pyon>	nitrix: :-o
<dreams>	darkcthulhu: ghc is still experimental.
<pyon>	darkcthulhu: haskell itself is rather conservative. if we take into account that the ocaml language is defined by its only implementation, the haskell language is actually more conservative than ocaml.
<pyon>	but, in practice, haskell means ghc.
<darkcthulhu>	yeah. and the type system is something that is close to the language itself. i don't understand how it could be simply changed in a particular implementation.
<nitrix>	pyon: they never broke the 1.0 api sinc it came out, it's statically typed, good performance, the code looks c-ish... the only thing i hated was slices and arrays. those were obnoxious but i'm sure it's better now.
<nitrix>	actually i don't remember what i hated about go.
<darkcthulhu>	if widespread adoption is the goal, they shot themselves in the foot.
<nitrix>	why am i not using go :/
<nitrix>	pyon: the duck-typing system feels very very close to haskell's typeclasses. i'm sure there's a difference but i don't know enough type theory.
<pyon>	nitrix: have fun implementing type-correct binary operations in go.
<nitrix>	pyon: by binary operation you mean i/o, a bitset or an operator with two operands?
<pyon>	an operator with two operands... of the same type.
<nitrix>	mhhhh...
<darkcthulhu>	dreams, that is a nice paper. very understandable so far, unlike most material i see in the domain.
<dreams>	darkcthulhu: thats because it has a bit of an imperative flavor.
<dreams>	which is familiar to you.
<pyon>	nitrix: syntax doesn't matter much to me, so i'm not going to bitch about that. but if i'm going to lose high-level abstractions (type constructors, sum types), i better gain something *else* in return: (0) fine-grained control over allocation and object memory layout? nope. (1) deterministic object destruction? nope. (2) a module system? okay, here go improves on c and c++, and perhaps even java, but
<pyon>	certainly not on ml.
<darkcthulhu>	dreams, yeah, i guess so. :)
<pyon>	at least c can sell me (0).
<dreams>	darkcthulhu: i suggest this read (in your free time): http://tinyurl.com/qbaz95b
<pyon>	actually, i've come to appreciate what c offers, even though i still dislike it.
<nitrix>	yeah, it's a very different mindset.
<darkcthulhu>	dreams, <403 forbidden>
<nitrix>	pyon: c does the least possible to get in your way.
<nitrix>	that's a crude explanation but yeah.
<darkcthulhu>	..also the least possible to save you from mistakes.
<pyon>	yeah, that's basically the only nice thing i can say about c. it offers me gets out of the way.
<dreams>	darkcthulhu: try http://tinyurl.com/kpgsttr
<pyon>	i can't count on it helping me, but i *can* count on it not hindering me either.
<darkcthulhu>	dreams, yep.. that worked. ty.
<natehiggers>	has anyone seen ayak?
<zzultan>	check the yak fields
<pyon>	natehiggers: could you change your nick to something less offensive? i'm asking nicely. :-)
<natehiggers>	how is my name offensive?
<natehiggers>	would you like to see my id?
<nitrix>	natehiggers: don't be ridiculous. please.
<natehiggers>	are we not allowed to use our real names on here?
<dawik_>	nitrix: yay i did it, got the code point by converting the three bytes to a bit sequence then masking some bits. i had the right idea but no clue how to do it :)
<nitrix>	dawik_: how do you know it's three bytes though?
<dawik_>	now i just have to write how to do it programatically and for 1-4 bytes
<dawik_>	nitrix: the first sequence of bits tell that
<nitrix>	dawik_: it's probably all documented but i immagined more corner cases.
<nitrix>	pyon: i just wrote a dyadic function in go. seems fine, i think the major drawback is the "lack of generics", which has been criticized a couple times.
<dawik_>	nitrix: we'll see how it pans out.
<nitrix>	pyon: if it was haskell, i'd use parametric polymorphism, and probably restrict it to num or similar.
<pyon>	nitrix: i can understand" "lack of generics" if i get something else instead.
<dawik_>	if it starts with 0 its 1 byte, 110 1 byte, 1110 3 bytes, 11110 4 bytes
<dawik_>	according to http://www.readytext.co.uk/?p=1284 :)
<nitrix>	dawik_: ah that's nice. is this utf-8 ?
<dawik_>	nitrix: yes utf-8
<nitrix>	ah! that's actually clever of them :]
<dawik_>	110 2 bytes*
<pyon>	nitrix: for example, in exchange for the lack of generics in c, i get the ability to tinker with the memory representation of objects.
<nitrix>	pyon: i will say that most of the reflection done in go comes from static analysis, so that's actually nice.
<nitrix>	so, you could have a "generic" function, sort of, and inspect the type of the argument.
<pyon>	are you sure it's static analysis which makes reflection possible?
<pyon>	anyway, doesn't matter. if i need static analysis, i won't use go. i want to buy go for what it's good at.
<nitrix>	well, i know they're capable of hinting a lot of types.
<nitrix>	some of the reflection stuff comes at no cost.
<pyon>	criticizing go for not being haskell is ridiculous. i don't expect go to compete with haskell. i expect a good answer to "when is it reasonable to consider go?".
<dawik_>	go is more viable than rust, though thats not saying much -_-
<pyon>	dawik_: oh, i'm primarily interested in technical, not commercial reasons.
<nitrix>	pyon: i will say that my main complaint is that, i'll probably never ever finish learning haskell. that bothers me.
<pyon>	nitrix: ghc haskell is unknowable for the same reason scala and c++ are unknowable: they are gigantic languages.
<nitrix>	it was my main complaint about c++, people using obscure shits and you had to restrict yourself to a smaller subset of it to be usable in a team.
<nitrix>	pyon: glad we agree :)
<pyon>	nitrix: but haskell, as defined by the haskell report, is actually reasonably small.
<nitrix>	myeah, but it's not "practically usable" as-is.
<pyon>	not super-small, certainly bigger than scheme or even standard ml.
<pyon>	nitrix: i've never felt the need to go crazy with ghc extensions.
<pyon>	i know there are people who swear by ghc's extensions, but i'm not one of them.
<nitrix>	what i don't like is that, all this is basically library land, as far as the language is concerned.
<pyon>	nitrix: um, no, you can't extend the type system in a library.
<nitrix>	i don't know if it should belong in the compiler. how is it different than c, really, you know.
<dawik_>	nitrix: you should give erlang a go (pun intended)
<pyon>	nitrix: the vast majority of ghc's extensions are type system extensions.
<nitrix>	pyon: ah, correct, my bad :/
<cosmodius>	heard some people been talkin shit bout trig
<dawik_>	less strict and *cough* more useful than haskell
<nitrix>	dawik_: i don't know. i am considering ada though.
<pyon>	dawik_: dunno, it's the static assurances that i find useful
<pyon>	dawik_: i like understanding code by *reading* it, not by running it.
<pyon>	dawik_: because i'm a slow thinker. i can't compete with my computer at running code.
<dawik_>	pyon: the erlang philosophy is "let it crash"
<dawik_>	you can recompile running code on the fly
<pyon>	dawik_: i know. but that isn't good for understanding, you see.
<nitrix>	i grew to hate that :/
<cosmodius>	pyon: i try to write my code with enough comments that someone with no understanding of c++ can at leastunderstand the process of what's happening
<nitrix>	i'm not a big fan of "let it crash" anymore.
<natehiggers>	what's wrong with your application?
<mike802>	wtf
<mike802>	someone boot it
<natehiggers>	mike don't scream, it ain't polite
<dawik_>	mike802++
<mike802>	you don't know me
<natehiggers>	that's better
<mike802>	you don't know me
<pyon>	cosmodius: i know c++ reasonably well. as in, i'm aware of the specific "features" (i'd call them gotchas): sfinae, most vexing parses, multiple ways to perform type conversions (non-explicit constructors, operator <type>, etc.)
<pyon>	cosmodius: and, even then, i still struggle to understand c++ code i wrote long ago.
<dawik_>	pyon: actually, i'd argue that structuring systems using otp makes it easier to reason about
<natehiggers>	pyon what would you recommend people do to remember their code?
<mike802>	someone boot it
<dawik_>	(generic behaviours for servers, supervisors fsm's and more)
<cosmodius>	mike802: boot what
<pyon>	dawik_: by "reason", i mean formal reasoning. for example, i would never optimize a program if i can't formally prove, using equational reasoning, that the optimized version is semantically equivalent to an obvious non-optimized version.
<natehiggers>	cosmodius: just ignore the troll
<mike802>	lol
<pyon>	dawik_: and this is pretty much impossible in erlang.
<mike802>	pen and paper?
<mike802>	good for you
<aewffwea>	nitrix: the problem is that without the obscure shit, c++ loses much of it's appeal
<dawik_>	pyon: its really hard to formally reason about the issues you experience in the field :)
<mwizard>	guys, what is the name of unix shell command to give this kind of output? "4865 6c6c 6f2c 2077  6f72 6c64 2100 0000 | hello, world!..."?
<dawik_>	i prefer the pragmatic approach
<mwizard>	i know there is one, but i forgot how it's called
<natehiggers>	i'm learning the basics of c++ but i want to know what the difference between c++ and c# is
<_slade_>	xxd -r ?
<nitrix>	xxd ?
<mwizard>	yeah, thank you guys
<dawik_>	cosmodius: i assumed to kick natehiggers
<cosmodius>	there's a guy in my programming class that is all about c# and always talks crap about c++
<pyon>	dawik_: i shouldn't preach too much. my day job is writing vb6, and also a little bit of c#.
<cosmodius>	i don't have any experience with c#, but i don't find c++ that horrible
<pyon>	dawik_: but, for my own stuff, i want a language i can fall in love with.
<nitrix>	cosmodius: give him a couple years and he'll be bored of drinking coolaid.
<mwizard>	why would one need c++ at all, when there is plain good ol' c?
<natehiggers>	mwizard: wouldn't it be something with object orientation?
<odin22>	pyon: no shame, gotta put food on the table :)
<natehiggers>	like in c you can't make ojbects, just functions
<nitrix>	cosmodius: not everyone realises, but i'd say the good programmers out there hates all the programming languages.
<dawik_>	pyon: please dont say its either of those languages
<natehiggers>	in c++ you can have objects
<mike802>	that's funny
<mike802>	i have a book called object oriented c
<nitrix>	natehiggers: that's actually wrong. c has objects.
<natehiggers>	really?
<natehiggers>	what is an object in c?
<mwizard>	struct
<nitrix>	anything with a value.
<natehiggers>	i guess i learned it wrong
<mike802>	have you ever coded c or c++ before?
<mwizard>	natehiggers: you can have objects in c. because c++ objects are c structs actually.
<nitrix>	mwizard: no, a struct is an aggregate of objects, but it's also an object on its on.
<nitrix>	natehiggers: in fact, the most recent standard mentions 900+ times the word "object".
<natehiggers>	i learned ansi c
<nitrix>	ansi c included.
<natehiggers>	and someone taught me what i know
<mwizard>	nitrix: you mix different "object" meanings. c does not have "objects". it has structs, which can be used to implement classes, inheritance, instantiation, generics (in c11) and so on.
<natehiggers>	this is bad because i have been taught the wrong thing
<mike802>	you know that?
<pyon>	mwizard: "why would one need c++ at all" --> these days i'm of the opinion that c++ isn't worth the hassle. but not because c already exists. rather, because everything you can do in c++, you can do it much better in rust.
<dawik_>	pyon: personal bias from not running windows since the 90's
<nitrix>	mwizard: c has objects.
<aewffwea>	mwizard: you can do oo in c... but i'd argue that c doesn't have object as a language...
<mwizard>	pyon: let me recall, rust is that poor clone of d, right?
<pyon>	mwizard: no.
<nitrix>	mwizard: an object only needs a value. you are confusing object-oriented programming with objects.
<aewffwea>	nitrix: the iso may say it has... my personal opinon is that it doesn't....
<dawik_>	c does not have objects, and thats good.
<pyon>	mwizard: it's a language with substructural types and compile-time pointer lifetime checks.
<nitrix>	dawik_: c has objects.
<dawik_>	c++ is just c with racing stripes :)
<aewffwea>	nitrix: an object *is not* a value
<nitrix>	aewffwea: the object has a value.
<mwizard>	objects were never value. values are values.
<dawik_>	nitrix: well, to me they are data structures
<natehiggers>	so what's the main difference between c and c++
<natehiggers>	besides syntax
<mwizard>	nitrix: in your terms, assembler also has objects
<dawik_>	be it so they have function pointers or not
<nitrix>	dawik_: no, data structures are different things than objects or values.
<mwizard>	because, lol, registers have values.
<aewffwea>	nitrix: the main difference between objects and values, is that objects have identity, values don't... they are quite different
<aewffwea>	nitrix: an object doesn't neccesarily has a value
<mike802>	noobie night
<mike802>	right?
<zzultan>	templates for people who feel unclean writing macros
<aewffwea>	natehiggers: they are different languages
<nitrix>	mwizard: assembler is a tool. maybe you mean assembly? which would still be wrong.
<natehiggers>	okay but why make a different language?
<dawik_>	nitrix: then what do you mean by objects in c?
<aewffwea>	natehiggers: the valid phrases in both languages are different
<mike802>	why do anything
<mike802>	woah!
<pyon>	dawik_: i don't mind windows. i mean, it isn't as fun as linux or even os x, but i'm not paid to have fun. but vb6, the language, is super annoying. it's fundamentally hostile to any code reuse mechanism besides copy-and-paste.
<nitrix>	aewffwea: yes it does in c. you cannot have an object that doesn't have a value in c. this is why you cannot create an object of the type `void`, because void is an inconcrete type.
<mwizard>	nitrix: "assembler" is both tool and language name, btw.
<nitrix>	aewffwea: and the standard mendates that void is a type that can never be completed.
<aewffwea>	nitrix: you cannot create objects in c, so that statement makes no sense
<mwizard>	and, of course, neither assembler nor c have objects
<nitrix>	aewffwea: int x; is an object.
<mwizard>	nitrix: no
<aewffwea>	nitrix: i disagree
<dawik_>	i thought void was a type of 0 bytes
<mwizard>	dawik_: it's unsized
<mwizard>	dawik_: it's not the same, as having zero size
<nitrix>	dawik_: void is an inconcrete type. the storage is irrelevant for void.
<pyon>	nitrix: that's a very idiosyncratic definition of "object". elsewhere, "object" means a dynamically dispatched behavior.
<zzultan>	typedef struct thing {...} thing; is an object
<pyon>	zzultan: errr no
<pyon>	zzultan: that isn't an object - not even in nitrix' sense.
<zzultan>	f nitrix
<mwizard>	zzultan: no, it's just a structure.
<pyon>	(because of the "typedef")
<nitrix>	zzultan: no, that's just a type definition, it's not an object.
<natehiggers>	if someone here is a member of an iso or other standardization organization please rename assembly to something less confusing
<mwizard>	give up, c does not have objects, you achieve nothing by trying to make up an example of object in c
<nitrix>	natehiggers: i'm operator of ##c if that means anything.
<mwizard>	natehiggers: everybody calls it "asm" and has no troubles
<aewffwea>	nitrix: so?
<dawik_>	mwizard: practically, its zero size
<mike802>	i'm just saying things
<natehiggers>	what about prics? (processor instructions)
<nitrix>	aewffwea: i answer this question 50 times a day.
<dawik_>	and used to point at something and you wont be tempted to increment it
<zzultan>	my dictionary disagrees with you's people
<mwizard>	dawik_: no, even practically it has no size - it's undefined. you can't sizeof(void), afaik
<nitrix>	aewffwea: by trolls but also ignorant people.
<aewffwea>	nitrix: i disagree with your answer
<aewffwea>	nitrix: do you consider yourself an expert in oop?
<nitrix>	mwizard: you cannot sizeof(void) because it's an incomplete type.
<dawik_>	mwizard: if sizeof returns 0, will you agree with me?
<njcomsec>	i agree with whoever is right
<natehiggers>	njcomsec: what if everyone is wrong?
<aewffwea>	njcomsec: so you always agree with me
<mwizard>	dawik_: nope. because void has no defined size, talking about "size of void" is the same as talking about temperature of space.
<nitrix>	mwizard: the argument to the sizeof operator needs to be the parenthesized name of a type or a variable.
<mike802>	anyone picture that one movie
<mike802>	where everything is a bunch of boxes and numbers
<pyon>	nitrix: seldom do i agee with aewffwea, but here i must agree with him: c doesn't have "objects" the way the term is understood in object-oriented programming. you can encode objects (e.g., using a struct with lots of function pointers) - but it's just an encoding, not native support.
<nitrix>	pyon: i know. but he's conflating object-oriented programming with objects.
<nitrix>	c has objects.
<mwizard>	argh
<nitrix>	an object-oriented programming is a strategy, it could and has been done many times in c as well, it's just not idiomatic.
<nitrix>	but it definitely has objects.
<nitrix>	s/^an/and/
<aewffwea>	nitrix: ok, if you are talking about an object that has nothing to do with object oriented programming, then i have no arugment against that....
<aewffwea>	nitrix: you can define your definition of object to be whatever you want...
<dawik_>	oh wow. i was not expecting it but on my compiler sizeof void returns 1 byte!
<dawik_>	my mind is blown
<aewffwea>	nitrix: i'm just saying it's not an object in any sense related to oop
<mike802>	you have to respect the paradigm and the history
<nitrix>	aewffwea: i made this clear 50 lines ago. your ego makes you blind.
<inphase>	dawik_: all types need a minimum size of 1.
<aewffwea>	nitrix: you didn't
<nitrix>	aewffwea: 00:22:03           nitrix | mwizard: an object only needs a value. you are confusing object-oriented programming with objects.
<inphase>	dawik_: consider:  class a { };  a a[5];  //  how much storage does this array occupy?  does a[0] refer to somewhere other than a[1]?
<nitrix>	aewffwea: it wasn't directed at you, i'll give you that.
<aewffwea>	nitrix: the fact that everyone disagreed with you suggest you didn't make it clear
<nitrix>	let's make it clear then.
<nitrix>	c has objects.
<nitrix>	that's it.
<dawik_>	inphase: i dont code c++
<nitrix>	http://www.iso-9899.info/n1256.html
<nitrix>	"objects" is mentionned 111 times.
<aewffwea>	nitrix: that statement outside of context is misleading, and i'd say that in a programming context is wrong unless you clarify what you mean by object
<nitrix>	"object" is mentionned 729 times.
<nitrix>	aewffwea: you don't need a context.
<nitrix>	other than c.
<dawik_>	ah the joy of ambiguous programming terminology
<nitrix>	c, has objects.
<mwizard>	c indeed has frobs.
<nitrix>	it's not ambiguous, it's been standardized for a reason so we could all agree on the terminology.
<nitrix>	if you chose to not use the terminology, you're the one that'll be misunderstood.
<aewffwea>	nitrix: with is mentioned 1000 times, so with the same logic c has withs...
<nitrix>	what logic?
<vdamewood>	aewffwea: then you disagree with the c standard.
<aewffwea>	nitrix: i'm talking about the english word with... it appears 1000 times on that document
<pyon>	aewffwea: well, in all fairness, c's notion of "object" isn't exclusive to c either. in the gc literature, they usually call an "object" what c calls an "object".
<aewffwea>	vdamewood: in the programming context, object currently has a very specific meaning... if you are not using that meaning, you should clarify the context or the definition of object you are using....
<aewffwea>	vdamewood: if you don't, i think it's reasonable and expected that people will assume you are talking about an object in the oop context
<dawik_>	lets blame oop for bastardizing the term object
<dawik_>	in unison, everyone.
<nitrix>	oop is an approach to designing modular reusable software systems. encapsulation is probably one of the biggest benefit and it's achieved by tying up functions and behaviors to your objects.
<nitrix>	you can have objects without having a language focused on oop necessarily.
<nitrix>	i don't know where it's blocking for you.
<vdamewood>	seems clear to me.
<vdamewood>	aewffwea: i didn't disagree with nitrix.
<inphase>	can we simply agree that c structs lack most of the oop features that make classes useful?
<mwizard>	...so why would anyone need c++? :)
<pyon>	inphase: oop isn't about classes.
<nitrix>	inphase: oh boy, that's a completely different topic :p
<pyon>	inphase: oop is about objects.
<vdamewood>	there is no definition of 'with' in the c standard. there is a definition of object.
<inphase>	where's a cop when you need one.
<aewffwea>	pyon: actually objects is about messages :p. but the object thing is good enough
<vdamewood>	aewffwea: it's fairly unreasonable to expect that if you are only familiar with a single meaning of a word, that all other meanings are invalid.
<pyon>	aewffwea: well, true that.
<vdamewood>	aewffwea: the idea c has of objects isn't unique to c, and the object-oriented meaning isn't universal.
<mwizard>	aewffwea: you mean messages like in smalltalk messages?
<nitrix>	c99 $ 3.14p1 : "object: region of data storage in the execution environment, the contents of which can represent values"
<aewffwea>	vdamewood: what's the most common use and context of the word object in this channel?
<pyon>	inphase: correction - objects are about dynamically resolved messages.
<vdamewood>	aewffwea: a section of memory with a value.
<aewffwea>	mwizard: yes, message that you send a message to someone to do someone, and you have no idea how that thing works... it just gets sent and it works...
<nitrix>	vdamewood: c99 $ 3.14p1 : "object: region of data storage in the execution environment, the contents of which can represent values"
<pyon>	inphase: an object dynamically resolves any messages it receives.
<nitrix>	vdamewood: i like this one better :)
<inphase>	pyon: i do not think that is a very helpful definition of an object.
<nitrix>	most people doesn't know about messagess.
<aewffwea>	inphase: sadly, it's very difficult to give a "good" definition of object. because in the context of oop it has a lot of semantics...
<vdamewood>	nitrix: good point.
<pyon>	inphase: how come? for example, it tells you that non-virtual methods (or member functions, in c++ parlance) aren't really dynamic messages you can send to an object.
<inphase>	pyon: most object usage does not dynamically resolve anything.
<aewffwea>	nitrix & inphase: most people who uses oop languages don't do oop
<pyon>	inphase: that's because most languages aren't purely object-oriented.
<pyon>	inphase: afaict, the only languages that come close are smalltalk, io, etc.
<dawik_>	having just joined this channel, i enjoy the banter. only programmers can argue these semantics so relentlessly :)
<aewffwea>	dawik_: a programmer job is to discover semantics
<vdamewood>	then quibble over them.
<inphase>	this whole debate is probably just a missing semicolon somewhere at the top.
<vdamewood>	i say it's missing quotes, and someone interpreted a string value as a keyword.
<pyon>	just fyi, guys, "what java does" isn't necessarily object-orientation.
<pyon>	"what java does" is just idiomatic java code.
<nitrix>	dawik_: newtons flaming laser sword.
<pyon>	which is sometimes object-oriented, sometimes not.
<nitrix>	dawik_: "what cannot be settled by experiment is not worth debating." semantics is what can be verified.
<nitrix>	in our field at least.
<darkcthulhu>	i feel a sense of deja vu looking at the above debate.
<dawik_>	nitrix: nice quote, am reading about the laser sword atm
<vdamewood>	darkcthulhu: it goes on quite often, it seems.
<wagonboi>	i don't quite understand this solution to counting the # of times get() and put() have been called in a map: https://www.dropbox.com/s/metqfaklrqxlibz/interview%20q.pdf?dl=0 ... does this mean that each map object's count variable will hold the total # of gets/puts across all map objects, or that it will hold only it's own count of gets/puts?
<nitrix>	dawik_: there's not much to it. it's another occam's razor.
<inphase>	pyon: i have never seen a reason to consider smalltalk intrinsically more oop than java.
<nitrix>	dawik_: correction, it's another phylosophical razor. it was said to be "more dangerous" than occam's razor. there you go.
<pyon>	inphase: in smalltalk, every message is resolved dynamically by the receiving object. that's the essence of oo. i'm not saying that "what smalltalk does" is a good definition of "object-orientation" either. but what smalltalk does, at least it seems to me, is more aligned with the principles of object-orientation than what java does.
<grim001>	well, java tries to strike a balance between oo principles and acceptable performance for real life applications
<dawik_>	nitrix: still interesting
<inphase>	pyon: now you're in a loop.  you said oo is about dynamic resolution of messages because smalltalk does this, and smalltalk is oo because it dynamically resolves messages.  but, i've not seen reason to consider smalltalk more oop than other languages, and i do not accept the premise that oop is primarily about dynamically resolving messages.
<dawik_>	to read*
<nitrix>	pyon: don't you like abstractfactorysingletonvisitormanagers ?
<pyon>	nitrix: heh
<pyon>	inphase: i didn't say "it's because smalltalk does this".
<mike802>	that's a decent design pattern
<pyon>	inphase: smalltalk *happens* to do it.
<dawik_>	my opinions are that design patterns solve problems that only exist in oop
<dawik_>	opinion*
<vdamewood>	wagonboi: the question is asking merely to count how many times the methods are called. it doesn't specify making a per-instance count for each object.
<mike802>	lots of theoretical reasons why
<inphase>	pyon: oop is primarily a software architecture approach which models programs around data structures containing associated data and methods.
<dawik_>	but, bias from not endulging in many of them
<nitrix>	dawik_: we share something in common :d
<dawik_>	:]
<wagonboi>	vdamewood, so mymap.count would hold the # of gets/puts across all maps instantiated, right?
<inphase>	pyon: there's nothing about that core definition which requires message passing, and nothing about it has to be dynamic.  one can have purely statically compiled oop.
<nitrix>	to be fair though, there's a lot of things unecessary to haskell just because it's lazy and immutable.
<pyon>	inphase: standard ml modules contain associated data and functions. and standard ml is *by no means* object-oriented.
<vdamewood>	wagonboi: if mymap is an instance of map, no.
<nitrix>	dawik_: "unecessary". it seemss to always be a tradeoff.
<pyon>	inphase: heck, you can also make a record containing data and functions in haskell. with -xexistentialquantification, you can even hide the data. it's still not object-oriented. (although you can encode objects, just like you can in c.)
<dawik_>	nitrix: yes, haskell is extreme on the other side of the spectrum
<nitrix>	dawik_: one could say haskell has a lot of "patterns" specific to solve some of its design decisions as well.
<nitrix>	i don't know many people that usually bothers with functors, applicatives, monoids, currying, just for fun xd
<inphase>	pyon: why do you consider standard ml moduels "by no means" object-oriented?  it seems to me closer to a limited form of it.
<inphase>	modules
<dawik_>	nitrix: im sure it's fun once you wrap your head around those concepts
<pyon>	inphase: because standard ml modules are second-class entities. you can't, for example, create a module that contains this or that code, depending on some user input.
<nitrix>	oh boy.
<dawik_>	nitrix: i am not one of those people, yet!
<nitrix>	that's a huge topic.
<pyon>	inphase: this means that any dynamic behavior contained in a standard ml module can be statically determined at compile-time.
<nitrix>	f-bounded polymorphism can be expressed using ml's polymorphism.
<inphase>	pyon: that's a matter of runtime reflection, which is not essential for oop.
<pyon>	inphase: no, it doesn't require runtime reflection.
<pyon>	inphase: you could simply use a vtable.
<pyon>	inphase: but implementation doesn't matter. we're talking about a programming paradigm.
<inphase>	a vtable is a useful oop feature, but not essential to the definition.
<nitrix>	pyon: inphase f-bounded polymorphism can be expressed using ml's polymorphism i think? i've read online that you can encode classes as ml modules, but it had wrapper types, bunch of subtyping, coercion, and it breaks with recursive types.
<pyon>	nitrix: f-bounded polymorphism only makes sense in systems with subtyping.
<nitrix>	so you could have oop from ml ?
<nitrix>	it'd be disgusting but i think possible :/
<pyon>	ml's core language doesn't have subtyping.
<pyon>	nitrix: you can encode what oopers do in ml.
<pyon>	but the encoding isn't pretty.
<nitrix>	what about wrapper types?
<nitrix>	to encode it, yeah!
<pyon>	i don't see what wrapper types would buy you.
<nitrix>	well, you can ehm, abuse ml's module dependency system to build your class inheritance i guess?
<nitrix>	i don't know.
<pyon>	there's probably some way to do it.
<ra4king>	hello! anyone familiar with quaternion math?
<pyon>	but it won't be pretty.
<pyon>	ra4king: just ask your actual question.
<pyon>	inphase: anyway, the last thing i want to do is "defend the purity of oo". i actually dislike oo. :-p
<inphase>	pyon: it seems you dislike something else that you think is oo!  there may be hope for you to change your mind.  :)
<pyon>	inphase: i dislike anything that isn't amenable to formal reasoning.
<nitrix>	it has to be done deductively, i suppose.
<nitrix>	inductive reasoning is not enough for pyon :p
<inphase>	pyon: in the words of the immortal donald knuth, "beware of bugs in the above code; i have only proved it correct, not tried it."
<pyon>	inphase: not opposed to testing, just opposed to not reasoning about the code.
<pyon>	(hint: test outputs aren't "the code".)
<nitrix>	behavior tests takes care of the part that cannot be proven formally. seems reasonable. :)
<nitrix>	but having to test my code with more code is an endless cycle. you need formality somewhere.
<pyon>	or at least obvious meanings somewhere.
<nitrix>	myeah, agreed.
<generalvagueness>	one of the things that makes programming so appealing, to me, is how in the end it's all about what works
<pyon>	generalvagueness: can't that be said about everything?
<generalvagueness>	nah
<nitrix>	generalvagueness: for the user (in the case the programmer) or the client?
<generalvagueness>	science for example
<generalvagueness>	for the user, of course
<generalvagueness>	well
<generalvagueness>	the end user, whether that's a client or someone else
<generalvagueness>	(one of the things i'm not crazy about with programming is the "works on my machine" effect)
<pyon>	dunno, trying to please clients to me feels like posing in all fours and asking "like this?"
<generalvagueness>	not please them necessarily, just building something that works
<pyon>	i'll just do what the spec does. if it doesn't please you, well, write a better spec.
<pyon>	generalvagueness: how exactly do we decide what works? as in "passes conformance tests"?
<nitrix>	i think everyone has a broad definition of "what works". as i was blabla-ing about the nice properties of referential transparency with a coworker, trying to get him interested, i got interrupted with people having issues with git. they lost some work or whatever. now they banned merges and they only do cherry-picking and rebases.
<generalvagueness>	the spec would be a good place to start
<nitrix>	it's no better than cvs or svn. you'd think everyone knows how to use git, but i think it's a fun example that change management is hard. "what works" is complicated.
<generalvagueness>	i was thinking of "does it do what it needs to do?"
<inphase>	nitrix: git "works", it just has a ridiculously confusing interface and operational model with all of its state information.
<pyon>	inphase: that simply means that most people will learn a subset of git
<inphase>	pyon: until a portion they don't understand erases their work, and they throw things.  :)
<dawik_>	gits biggest benefit is that its decentralized
<pyon>	inphase: well, after having learnt much of c++, i don't think i want to learn anything that big ever again.
<pyon>	actually, i'm looking forward to forgetting c++.
<generalvagueness>	that's why you don't place all your faith in one scheme of data retention, if the data (in this case code) is important
<nitrix>	generalvagueness: it's being sorted out, but again, it's a fun example that change mangement is hard. "what works" is relative to each individual and that's likely to change with experience.
<nitrix>	i personally had no interest in functional programming before i had a full time job doing php.
<nitrix>	php, for better or worse, made me interested in better alternatives.
<dawik_>	nitrix: okay, i feel totally stupid going through all the hassle converting from utf-8 to utf-16. in my usecase the output is totally valid, it was only my interpreter that did not display the characters properly. oh well, atleast i learned something! :)
<nitrix>	dawik_: ahah. back to square 1, `representations` and `encoding` is annoying :p
<nitrix>	s/is/are
<dawik_>	ra4king: what's your question?
<dawik_>	nitrix: yes, but like the article said. if you only expect plain text to be ascii you are like a doctor who doesn't believe in germs, or something to that effect :)
<nitrix>	myup.
<nitrix>	dawik_: i don't remember what your original goal was. convert to a number? if anything, you could identify the unicode code point for a specific character.
<ra4king>	dawik_: pyon: ah sorry, another user channel was helping me with my issue
<nitrix>	which is certainly better than ignoring utf-8 entirely.
<ra4king>	he's not succeeding unfortunately
<dawik_>	mm, working out the code point and from there converting it to utf16
<ra4king>	so in my quaternion issue, i am creating portals
<ra4king>	these portals all work beautiful when they are all in the xy plane only (this is 3d)
<ra4king>	beautifully*
<nitrix>	dawik_: i don't know why you want utf-16 though. not given enough details :]
<nitrix>	dawik_: good luck with it, i'm heading to bed here.
<dawik_>	nitrix: alright, thanks for the information. sleep tight
<ra4king>	each portal has a buddy portal on the other side and to deal with orientations, i am trying to figure out the math to translating the position and orientation to the resulting space
<nitrix>	'night
<ra4king>	i take the difference in rotation from the camera's orientation to the portal's orientation
<ra4king>	and apply that difference to the orientation of the portal on the other side
<nitrix>	oh, a portal game !
<nitrix>	:>
<dawik_>	xy plane, by that you mean a perpendicular plane resting on the z axis?
<dawik_>	and is it a portal game like portal, where you put another one arbitrarily?
<ra4king>	nitrix: yes! :d
<dawik_>	ra4king: i'm trying to grasp the issue :)
<ra4king>	i've always loved portals, and now this is in between different *worlds*
<ra4king>	dawik_: yes
<ra4king>	to both questions
<ra4king>	for now it's a quad on the xy plane
<ra4king>	i render it using opengl's stencil buffer
<dawik_>	okay
<dawik_>	i mean, quaternion math is pretty basic, subtracting and multiplying is quite intuitive
<dawik_>	sub/adding
<ra4king>	so is the math i'm doing correct?
<dawik_>	ra4king: thinking about the portal game, i'd think its mostly a matter of finding the intersection
<dawik_>	so some ray tracing with your geometry would be in order
<dawik_>	it was pretty rigid in where you could place them from what i remember, no angles on how the portals were created
<dawik_>	s/created/placed/
<dawik_>	i assume you have your orientation as a quaternion, how i do it is with longitude and latitude, in a spherical coordinate system. (makes for a smoother pov in my experience) that i convert to cartesian coordinates (the sphere has a radius), from there step forward until you intersect your geometry
<dawik_>	and place the portal there
<dawik_>	you might be attempting something clever, or i might just be misunderstanding you :)
<fred-fri>	if i have a rest api endpoint /{user_id}/device and someone posts a new device to be saved on the server, and all the input makes sense, but the server has a rule that says the max no of devices for a user is 3, what error should i return? 400 or 500?
<ra4king>	dawik_: i think i'm attempting something clever here haha
<ra4king>	i could go with longitude/latitude, but quaternions are much simpler to use
<ra4king>	albeit right now wrapping my head around this translation and rotation isn't working out so well
<planckwalk>	fred-fri: 418
<dawik_>	ra4king: if you go with the long/lat approach, its quite easy to map those to your mouse x and y coordinates
<dawik_>	and converting them to cartesian coordinates some trigonometric voodoo i can pull up for ya
<planckwalk>	fred-fri: more seriously, probably 403
<dawik_>	mouse position*
<fred-fri>	planckwalk: i guess 403 is a reasonable return
<ra4king>	planckwalk: 418 is the best
<dawik_>	ra4king: sorry man, it's my best advice. to ray trace you need to work out a normalized vector in cartesian space, if that means converting to euler angles first or not im not sure. it might very well be possible to skip that step but from googling that seems like a common approach. theres a #math channel as well you could try :)
<dawik_>	im gonna head to bed as well. got a meeting in 6 hours
<ra4king>	good night
<hotcoder>	question
<hotcoder>	my ram is about 8 gigs. processor 2.8 ghz
<hotcoder>	is it cool for me to store 500 entries in a string array? or will there be data loss?
<hotcoder>	i run 64 bit
<ra4king>	what
<ra4king>	500 entries of what?
<hotcoder>	strings
<hotcoder>	in a string array
<hotcoder>	in java
<ra4king>	how long is each string?
<hotcoder>	http://www.reddit.com/search?q=obama&restrict_sr=&sort=new&t=all
<hotcoder>	about that long ^
<ra4king>	a url?
<hotcoder>	yes
<hotcoder>	a url
<ra4king>	that's no more than a few kbs of data
<ra4king>	why are you asking this? o_o
<hotcoder>	because noob
<ra4king>	i store a few million objects in an array for a 3d voxel game i'm making
<ra4king>	that's a few mb of data stored in ram
<hotcoder>	ah okay
<hotcoder>	:)
<hotcoder>	thanks
<hotcoder>	are you coding right now?
<ra4king>	yes
<ra4king>	multitasking with irc
<hotcoder>	ah okay
<hotcoder>	same here
<hotcoder>	why so quiet in here
<hotcoder>	lets get this chat poppin
<ra4king>	hotcoder: start a topic/conversation
<hotcoder>	so what kind of drink do you guys like?
<hotcoder>	i like java :d
<lf94>	java is ok.
<lf94>	i like uh
<lf94>	arizona green iced tea, and orange juice.
<hotcoder>	ah okay
<lf94>	diet cola too.
<hotcoder>	i asked my english major friend what she likes
<hotcoder>	she said tequila mockingbird
<lf94>	i don't drink alcohol.
<lf94>	it is a moral obligation.
<lf94>	s/moral/personal/
<hotcoder>	lf94, how old are you, if you dont mind me asking?
<lf94>	20, 21 in about 3 months
<pyon>	lf94: how is one supposed to forget about the troubles of daily life without alcohol?
<lf94>	pyon: music usually does it for me.
<lf94>	fortunately, i don't have many troubles.
<lf94>	i try to take everything as something positive...
<lf94>	i used to have really bad depression
<lf94>	i've got to say, gf cured me
<lf94>	also, college.
<lf94>	these 2 things taught me: there is someone out there who wants you, you are capable of anything, and only you limit yourself.
<pyon>	:-o
<pyon>	zombocom?
<lf94>	i hardly get a joke you are referencing
<zzultan>	anythign is possible at zombocom
<lf94>	besides that site always saying "zombocom....zombocom....zombocoooom"
<zzultan>	or something like that
<lf94>	welcome, to zombocom.
<hotcoder>	lf94, seems like everybody around this age has depression of some sort
<hotcoder>	what is this world becoming
<lf94>	nah this was when i was around 15.
<hotcoder>	i'm 20 years old
<pyon>	lf94: you said "only you limit yourself", which isn't too different from "the only limit is yourself"
<lf94>	pyon that is exactly what i mean
<hotcoder>	the only limit is positive infinity
<lf94>	they may as well be the same sentence
<lf94>	no infinity has no limits
<pyon>	lol
<hotcoder>	never drink and derive
<hotcoder>	know your limits
<lf94>	is there software that allows you to walk around 3d landscapes?
<lf94>	literally import a 3d mesh and walk around
<zzultan>	blender3d
<lf94>	something lightweight
<lf94>	blender lets you do that?
<anj7>	lf94: blender
<darkcthulhu>	this is weird. i have a map<string, set<string> > m. can't i simply do m["bleah"].insert("woof")? the typechecker is whining; the key bleah is present.
<zzultan>	theres a first person input mode
<anj7>	yea, the fly mode
<lf94>	why isn't there a separate program that does this???
<lf94>	i don't want fly mode
<lf94>	i want walking mode
<zzultan>	you walk too
<anj7>	the mode is called fly but you can walk :p
<lf94>	i'm 3d modeling my grandma's house and i'd like to walk through it
<anj7>	press tab and you'll fall down
<lf94>	it's at the point where i could be able to walk
<lf94>	i'd like to add details now
<lf94>	i wish i had photos for reference
<anj7>	lf94: yea, you can use blender
<darkcthulhu>	ohh.. nvm.
<lf94>	i used wings3d to model it.
<lf94>	but they have the same modeling paradigms
<lf94>	sub-division box modeling
<lf94>	here's a cool screenshot
<zzultan>	and you can teleport too
<zzultan>	http://blender.stackexchange.com/questions/5941/walk-mode-in-2-69
<lf94>	http://i.imgur.com/nuyfl7x.png
<lf94>	crapshot ^
<lf94>	http://i.imgur.com/pblpmra.png
<lf94>	omg so good ^
<zzultan>	shift+f
<lf94>	niiice
<anj7>	lf94: its seems that your normals aren't correct
<lf94>	the ultimate would be to finish this, then play unreal tournament or left4dead in it
<lf94>	anj7, really?
<lf94>	how can you tell
<lf94>	i don't even know how you specify normals
<lf94>	my normals look fine
<anj7>	lf94: the black shade which you can see on the wall are because of normals
<lf94>	huh
<lf94>	i wonder how i fix that in wings3d
<anj7>	i didn't use wing3d, try using blender
<pyon>	lf94: what are you modeling?
<lf94>	man you are not good at following these conversations
<lf94>	scroll a little bit
<lf94>	just a teeny tiny bit
<lf94>	you'll see x)
<pyon>	oh
<lf94>	drink da coiffie
<anj7>	my renders www.nikhiljoshua.wordpress.com
<ninjapenguin>	anj7: looks really good!
<anj7>	ninjapenguin: thanks :)
<lf94>	...i fucking love these anj7.
<anj7>	:)
<lf94>	holy shit these are so good
<lf94>	i can taste those donuts
<anj7>	lol
<ninjapenguin>	a bit of tweaking with the settings would make them look even more realistic. :)
<anj7>	yea, should've done that.
<pyon>	anj7: goddammit now i'm hungry
<lf94>	ok that first one set my expectations really high
<lf94>	the rest aren't as amazing
<ninjapenguin>	i want donuts too!
<lf94>	still really good though
<lf94>	anj7, arrangement from earliest to latest
<pyon>	anj7: those pictures are gorgeous
<anj7>	pyon: thanks :)
<lf94>	that donut one is so good
<lf94>	that is background image worthy
<ninjapenguin>	anj7: the chocolate milk one, is it just my eyes or is the cup funnily shaped?
<anj7>	its been a while since i modelled a scene
<lf94>	ninjapenguin, funny shaped
<lf94>	i'm seeing the same thing
<lf94>	with a fixing that could be the official java logo
<lf94>	b)
<lf94>	a little*
<anj7>	ninjapenguin: yea, its funny shaped
<anj7>	the imperfection is the perfection of my design
<anj7>	b)
<lf94>	interesting > perfection
<ra4king>	darkcthulhu: what language?
<ninjapenguin>	anj7: ah, fair enough. the last image, titled "pleasant," looks soooo realistic until you see the chair. :d it's not that it's shaped unrealistically, it's just the texture.
<ninjapenguin>	anj7: but honestly, really good job with all of those pictures! how long does it take to make one?
<lf94>	has it ever occurred to you guys we should make a game
<lf94>	and then put it on hackernews
<lf94>	and get famous
<anj7>	ninjapenguin: that time i was in a hurry so i just used diffusion and glossy
<ninjapenguin>	anj7: ah, fair enough. :)
<lf94>	ninjapenguin, it took me like 10 hours to model a basic house
<lf94>	i'm talking, windows + walls + doors
<anj7>	ninjapenguin: it took me a whole night to render one image.
<lf94>	(windows and doors being holes)
<ninjapenguin>	anj7: but how long did it take to model it?
<anj7>	ninjapenguin: not more that 2 hours.
<ninjapenguin>	ah, fair enough.
<anj7>	ninjapenguin: finding the right textures is the hard part
<ninjapenguin>	this is my greatest achievement by far https://www.dropbox.com/s/2yqjj03w7yh9ohu/cup.png?dl=0
<ninjapenguin>	my very first blender project! actually, i followed a tutorial.
<ninjapenguin>	but it's a start!
<anj7>	ninjapenguin: nice.
<ninjapenguin>	that gray background you see there, yeah, there's absolutely nothing. blender just renders nothing as gray.
<ninjapenguin>	:d
<lassa>	does anyone know how can i connect to other irc server?
<lassa>	which's the command i mean
<anj7>	yea. you should have use hdr textures
<xeno_>	njcomsec: lol @ pyon being a marxist.. :) - but then again, with the recent move to dynamically typed languages, who knows... :)
<ninjapenguin>	it's a simple light + "table" + cup.
<ninjapenguin>	but 'ey, it's a start!
<zzultan>	lassa alt-f4
<lassa>	sure zzultan
<anj7>	ninjapenguin: yea, good start :)
<lf94>	ninjapenguin, nice.
<ninjapenguin>	lassa: there are hundreds and hundreds of irc clients with different bindings doing different things. could you be a little more specific?
<pyon>	xeno_: dynamically typed languages are libertarian, if anything.
<lf94>	man your guys's models blows my shit out of the water.
<anj7>	lf94: you should use blender. its open source and free :)
<ninjapenguin>	lf94: you need a new plumber then.
<anj7>	lol
<lassa>	i remember that years ago i only had to use 1 specific tommand to connect to other irc server, in this case irc-hispano
<lf94>	i like wings3d - it is just so easy to use
<xeno_>	pyon: yes, paper's like that is sort of social science'y... when it comes to real world architecture, there's hardly anything science'y to be spotted anywhere... even less than in regular cs...
<sopu>	oops. sorry about all the log -in -out dialogues.
<lf94>	speaking of science.
<lf94>	i feel like most science is 99% trial and error.
<anj7>	lf94: i could make you house in 20mins though
<anj7>	your*
<lf94>	that is pretty impressive anj7.
<anj7>	in blender.
<ninjapenguin>	lassa: also, more often than not, if  you're using a fairly known irc client, then you might find a support channel on this server.
<lf94>	anj7, like the entire inside structure too?
<xeno_>	pyon: libertarian? you mean like what pierce started off one of his presentations with... "does chuck norris need a type system?" :)
<lf94>	because that's what i did
<pyon>	xeno_: hahaha
<ninjapenguin>	does anyone make games here because i'm curious, what do you use to make maps?
<pyon>	xeno_: yes, kinda like that
<anj7>	lf94: yea, blender's so easy
<lf94>	ok, uh
<lf94>	here's a challenge
<ninjapenguin>	if you don't use unity or unreal engine or source engine or anything.
<pyon>	xeno_: but i was thinking of something more like "as long as i don't bother anyone else", which really means "regardless of whether i bother someone else"
<anj7>	ninjapenguin: yea, i agree :)
<pyon>	xeno_: that's dynamic typing
<lf94>	anj7, http://mewe.co/wp-content/uploads/2015/04/beautiful-4-bedroom-house-floor-plans-with-the-oak-hill.jpg
<lf94>	anj7, only model the walls
<zzultan>	i made some maps in blender ninjapenguin, as long as you can do some pythoning its pretty customizable
<lf94>	and doors
<ninjapenguin>	i find blender to be like emacs. the learning curve is linear at best, but that's only because there's so much to learn. once you know enough, you can make huge things fairly fast.
<xeno_>	pyon: isn't that memory unsafety? "i'm free to do whatever i want, and if it ruins the life of others, then that's fine"? :)
<ninjapenguin>	the easier a program is to use, the harder it is to get advanced stuff out of it.
<pyon>	xeno_: oh yes, that too
<ninjapenguin>	zzultan: is it easy to know in your game what you're walking on, for sounds?
<pyon>	xeno_: otoh haskell is like "if the train arrives either one minute too early or one minute too late, the driver is gonna be hanged at the town's main square"
<zzultan>	lookup material somehow
<anj7>	lf94: presently i'm working on my project. i would do that later if you want.
<xeno_>	i guess most software is written by liberals trying to survive and do good within the libertarian world... true libertarians would just make every application they participated in writing crash without caring that they did
<ninjapenguin>	zzultan: ah. so it's not a huge trouble to go through?
<lf94>	anj7 20 minutes ain't much though ;)
<anj7>	lf94: the problem is i should switch to windows
<anj7>	lf94: which resets my ip and everything
<lf94>	...blender runs in linux
<xeno_>	i mean social liberals
<pyon>	xeno_: lol yea
<eric_lagergren>	hi guys and gals.
<anj7>	lf94: ok, i'll take a break
<anj7>	lf94: in which file format do you want to it?
<lf94>	anj7, obj
<anj7>	lf94: ok, i have a flickering window problem in my ubuntu. but i'll do it
<zzultan>	ninjapenguin, oh its a bunch of work and i don't really know blender all that well just enough to export a hacked .obj format, but they have a game engine that probably has a way to link sound effects and materials
<xeno_>	pyon: no wonder microsoft considers linux a socialist project :)
<zzultan>	but that is with python and i was messing with c++ so i didnt bother trying to delve into their built in game engine
<pyon>	xeno_: no idea about linux, but gnu certainly is
<xeno_>	that's true
<xeno_>	rms is pretty much as communist that you can get, while still managing to claim otherwise
<pyon>	yup
<pyon>	xeno_: linux and openbsd strike me as libertarian... the kind that's super self-centered and doesn't care about anyone else... except linus has better social skills than theo de raadt... (though that isn't saying much)
<xeno_>	well.. linus is famous for his flaming
<pyon>	well yea
<pyon>	i guess it isn't so much "better social skills" as it is "more room for being a dick w/o consequences"
<pyon>	linus is a dick... they call him a dick... theo de raadt is a dick... they expel him from netbsd
<xeno_>	esr is a libertarian btw... he's one of those rednecks staying at a farm with a ton of guns to keep the government away...
<xeno_>	that kind of guy...
<pyon>	yea
<pyon>	it's evident from his writings
<pyon>	he even has the gall to call himself "anti-idiotarian" - do we need to say more?
<njcomsec>	360 noscoped!
<njcomsec>	https://www.youtube.com/watch?v=nswacuo1olc
<xeno_>	pyon: that, and his anti gun control speeches too... and other stuff...
<xeno_>	i attended a lecture he held once, and he arrived in a classical george bush'y cowboy attire, complete with spores and everything
<njcomsec>	did he arrive on a horse?
<xeno_>	no, it would have been hard for him to fit that on the plane to norway
<zzultan>	yosimite sam?
<xeno_>	but iirc he owns horses
<njcomsec>	in russia, horse own you
<xeno_>	http://i1.kym-cdn.com/photos/images/facebook/000/117/021/enhanced-buzz-28895-1301694293-0.jpg
<xeno_>	horses killed kennedy
<xeno_>	...or unless i've completely misunderstood everything yet again, i guess the phantom got his horse (hero) to kill kennedy
<xeno_>	come to think of it, i'm not entirely sure about the spores... it's some years ago, and my memory isn't what it used to be... (which it has never been :)
<pyon>	lol
<anj7>	pause
<ra4king>	play
<grug>	pause
<xeno_>	i do remember him being pretty tiny, and also walking sort of like bruce springsteen...
<xeno_>	pyon: anyway, i guess the last headline on http://www.catb.org/~esr/netfreedom/ settles any question about him being libertarian or not
<pyon>	chekn
<xeno_>	anyway, i'm outta here
<pyon>	cya
<xeno_>	for the radical solipsists among you, expect to invent me again later :)
<ams>	morning
<dreams>	o/
<ic2000>	what language should i use to make games?
<disconsented>	the language you enjoy the most
<disconsented>	or brainfuck
<ams>	ic2000: common lisp.
<ic2000>	ams: how come?
<ams>	cause i said so.
<miniman10000>	i can confirm he did say to
<miniman10000>	you know i was just thinking how some people are color blind to certain colors and how gpus are really fast at modifying images.
<darkcthulhu>	pyon, you around?
<miniman10000>	hes going to recommend python
<pyon>	darkcthulhu: not 100% awake but yea
<ams>	miniman10000: i was thinking that i hate people who ask questions, specially questions of the sort "what should i use for generic-problem?"
<miniman10000>	lol
<miniman10000>	do you think id be possible to snatch your display and modify it and send it to your monitor?
<darkcthulhu>	pyon, so, i was looking at a set of slides, where they were comparing the time taken for iteration over 3d arrays in row-major order. the best order would be (i,j,k) where k varies fastest, because of cache locality. but experimentally, results are shown that (j,i,k) is faster. what could be the possible reason?
<miniman10000>	the problem is the windows seems very windows specific since its my current os
<pyon>	darkcthulhu: no idea really!
<ams>	miniman10000: what do you want to do?
<ams>	miniman10000: just map colors?
<pyon>	mmm who could know this kind of stuff here?
<miniman10000>	ams, yeah
<darkcthulhu>	hmm.. seems completely off imo. even if it loaded in blocks or something. the damn data doesn't say how many units of data, how large the arrays are or anything.
<ams>	darkcthulhu: simple, depends on the architecture and what it prefers.
<ams>	darkcthulhu: the person who said that one order is better than the other one was talking shit.
<darkcthulhu>	ams, it is tested across a bunch of architectures and the memory layout is defined.
<darkcthulhu>	hmm
<miniman10000>	i dono a project to remap colors sounds like a really cool project.
<pyon>	ams: well benchmarks don't lie (though they may mislead)
<paulo_>	hello
<paulo_>	my classmates kept talking about how a websites authentication is "token based"
<paulo_>	what does that mean?
<ams>	darkcthulhu: if it was tested, then the test only shows that arches prefer this over that.
<miniman10000>	i believe something like website.com/token=5jd9 and that token confirms your authenticity?
<ams>	darkcthulhu: it can also depend on the language.
<vendu>	hello
<ams>	darkcthulhu: seeing that fortran, opengl are column-major, and c, python are row-major
<vendu>	damn it, why the fuck do leenux people have to invent a new filesystem every few years? :(
<darkcthulhu>	ams, i understand those concerns.
<darkcthulhu>	ams, this is in row-major order.
<vendu>	i'm royally screwed, i'm pretty sure i lost half a terabyte of data :(
<miniman10000>	vendu, how the heck did linux changing the file system break yours?
<rindolf>	hi all! how are you?
<miniman10000>	good
<vendu>	miniman10000, ext3 goodness
<vendu>	ext2 always worked like a charm
<ams>	until yo had to fsck it
<ams>	or restore
<vendu>	i can barely resist the temptation to say what torvalds would if this would happen with a bsd
<miniman10000>	the only file system i used on linux was ext4
<pyon>	vendu: half a terabyte of data -- ouch man
<pyon>	vendu: that sucks
<vendu>	ams, you're lucky not to have seen what fsck is doing to me on this one :)
<ams>	vendu: kill the fsck, dd the drive.
<vendu>	ams, nah, i guess it's fubar already
<ams>	vendu: or maybe not .. why no backup? why no backup?
<vendu>	ams, backup where? heh, well, it's just data off the net
<vendu>	but it was a very nice collection of it
<ams>	then you aren't very screwed.
<vendu>	what can i afford that would back up terabytes?
<vendu>	nothing
<ams>	a new harddrive.
<ams>	or .. not store so much.
<miniman10000>	i thought some websites allowed for unlimited data backup
<vendu>	yeah, then put ext3 or ext4 on it and get taken by the backdoor again :)
<ams>	vendu: i suspect it has nothing to do with ext3/ext4 stuff..
<vendu>	miniman10000, 1 mbps of upstream... the drive would die before the backup would finish :)
<miniman10000>	lol
<vendu>	ams, never had this kind of shit with ext2
<vendu>	never
<ams>	vendu: and i never had that kind of shit with ext3 .. says nothing huh?
<protist>	vendu: rarely heard you this perturbed...did you lose work?
<vendu>	ams, heh, i'm screwed, that's it, and i do blame it on the linux people
<miniman10000>	yeah the only solution i can think of is going back in time and using raid.
<vendu>	just for the hell of it
<ams>	i would blame it on you.
<miniman10000>	wait no
<miniman10000>	raid doesnt solve it if its actually writing.
<ams>	for storing more data than you can handle..
<vendu>	sure thing it's my fault that they cannot get a filesystem right before moving to the next one
<miniman10000>	yeah backups are the only way in that case
<ams>	raid is not backup.
<rindolf>	protist: hi, sup?
<ovrh>	'morning
<ams>	vendu: ok, you're trolling.
<vendu>	ams, sure thing i am :)
<protist>	rindolf: playing with a new open source package i'm making
<protist>	rindolf: procrastinating on school work
<protist>	rindolf: gonna work out in a bit :p
<rindolf>	protist: ah, to do what?
<miniman10000>	lolol
<protist>	rindolf: how are you?
<vendu>	ams, at least i'm not saying bad things about groups of people collectively
<protist>	rindolf: secret at the moment, don't want to be beat to it ;)
<vendu>	big minus to torvalds for calling freebsd developers idiots for something :(
<rindolf>	protist: i'm fine - checking email.
<rindolf>	protist: ah.
<protist>	rindolf: i'll tell you in private chat
<rindolf>	protist: ok.
<ams>	vendu: ext3 is far more tested than ext2 ever was.  it is a much saner, easier to restore file system as well.  on top of that, it is just ext2.
<protist>	rindolf: and i put out my first open source library recently
<rindolf>	protist: ah, nice, what does it do?
<vendu>	on top of everything, i'm screwed big time
<vendu>	that's everything that matters here
<ams>	vendu: it is literally the same driver.
<protist>	rindolf: generate html from list structures in common lisp
<protist>	rindolf: works in an extremely simple way...no macros...uses list interpolation to make dynamic content
<protist>	rindolf: https://github.com/gordiannaught/cl-durian
<vendu>	fuck it that i cannot afford a decent backup system :(
<vendu>	i do back my home directory up
<ams>	protist: ... macro macro macro macro macro macro
<protist>	ams: short but pretty nasty ;)
<ams>	protist: macrolet for fucks sake .. you are hurting my eyes
<protist>	ams: i meant no macros for the interface hahaha
<jeaye>	ew, durian.
<protist>	ams: no macrolet in the source!!!! you lie!!!! >:( haha
<ams>	protist: and html .. good lord .. safe
<ams>	 save me
<miniman10000>	safehtml save him!
<protist>	ams: save me?
<protist>	ams: why?
<protist>	ams: lol
<ams>	those ... those .. things ..
<protist>	ams: the things to be escaped?
<ams>	...
<miniman10000>	he ded
<rindolf>	protist: ah, i see.
<ams>	that whole thing could be replaced by a simple format recipie ..
<protist>	miniman10000: awwww man lol
<protist>	ams: all of it?...if so then teach me
<kenndel>	guys will i hate myself for getting a 13 in vs 15 in laptop to code on for school or fuck it
<miniman10000>	teach him the ways of the ams!
<jeaye>	kenndel: both are small.
<miniman10000>	yeah bro use visual studio code!
<protist>	miniman10000: lul
<ams>	protist: ok .. like .. kill the label thing ..
<protist>	ams: it is left over from when i was using the depth for indentation
<hotcoder>	do you guys ever feel off programming like you know you're writing the right code but have no idea how?
<ams>	protist: if you really wanna do it like that, put it in a proper function
<protist>	ams: i may still use the depth later or something?
<reaga>	i just ordered a new desk rindolf :)
<reaga>	a treadmill desk
<reaga>	keep healthy
<ams>	protist: sure, just use a global variable.
<protist>	ams: ewwww
<ams>	protist: reset at entry to html or whatever.
<ams>	protist: that is the proper way
<rindolf>	reaga: ok.
<ams>	really, (incf *depth*) is much nicer to read than (inner (caadarararaaaara x) (1+ n))
<ams>	and wondering what the fuck you are doing ..
<pyon>	jeaye: for school, a big laptop is probably too heavy
<pyon>	not to mention... er... well... big
<jeaye>	i used a 17" in school.
<ams>	protist: each format thing should be one function.,
<ams>	protist: sine you do basically the same thing in all of them..
<jeaye>	biked to/from class.
<pyon>	whoa
<protist>	ams: yeah...should clean it up
<protist>	ams: it /is/ a mess
<ams>	protist: as a lisper, your goal should be to reduce indentation levels in code.
<ams>	always.
<protist>	ams: i apologize :(
<protist>	ams: i know i've sinned
<protist>	ams: i'll may clean it up before the next quicklisp update
<protist>	ams: hahaha
<malshorax>	has anyone here ever used protobuf-net together with protocol buffers in java? i'm pretty fresh when it comes to the protocol buffer stuff, and i'm having an odd error with a repeated field. when i deserialize in java, all but one entry have disappeared.
<protist>	ams: and the github repo is ahead of quicklisp right now
<protist>	ams: just a not
<protist>	ams: note*
<ams>	protist: more functions ... really, use more functions ..
<protist>	ams: yes
<ams>	protist: most of those could be in labels ..
<ams>	protist: nothing wrong with tiny functions there ...
<ams>	but a bemoth labels function is just gross ..
<protist>	ams: haha
<protist>	ams: chyeah
<ams>	(let ((*print-case* (if *force-tags-lowercase* :downcase *print-case*))) (format out ....)) <-- you do this pattern five times
<pyon>	so... helper function? macro?
<ams>	function ..
<ams>	use functions when you can .. macros as a last resort.
<ams>	or when you really need to delay evaluation
<ams>	protist: the whole entity-map thing .. really ... i'd do it as a table, (add-entity ...) and store it in a differnet file.
<vendu>	hmm
<vendu>	damn this, i think i should move somewhere i could run kickstarter campaigns :(
<vendu>	or just buy a one-way ticket to nepal and never come back :)
<malshorax>	any protocol buffer gurus hanging around in the area?
<rindolf>	malshorax: just ask your question.
<rindolf>	malshorax: don't ask to ask.
<protist>	ams: :p
<rindolf>	vendu: there's also indiegogo.
<protist>	ams: yeah i'll let you know if i clean it up
<ams>	protist: should i sharpen my parens_
<ams>	?
<vendu>	rindolf, which i bet our tax folks like just as much as kickstarter :(
<protist>	ams: :(
<malshorax>	sorry, my brain asploded, i thought i'd already put in the question after the explanation of the problem earlier. is anyone familiar with the problem of the disappearing elements when going from protobuf-net to java, and a way to get around it?
<vendu>	finland is a good country, but our bureaucracy is from out of this world
<paulo_>	the mcrib is an oversized chicken nugget drenched in barbecue sauce
<rindolf>	malshorax: can you give a demonstrating example?
<_blizzy_>	i think i'm going too hard.
<_blizzy_>	perl, scala, java, php.
<protist>	time to go work out
<protist>	talk to yahl later
<protist>	ams: rindolf :)
<rindolf>	protist: byeeee.
<protist>	rindolf: cya
<malshorax>	rindolf, the .proto in question contains http://pastebin.com/raw.php?i=73rxydx4
<rindolf>	malshorax: well, it's not a self-contained, reproducing , example.
<rindolf>	malshorax: which is what i want - not just fragments of stuff.
<_blizzy_>	could anyone answer why i would use perl over say
<_blizzy_>	python?
<ams>	cause you know one better than the other.
<_blizzy_>	true.
<ninjapenguin>	is there a bind to tell blender to stop baking?
<jeaye>	ninjapenguin: #blender
<ams>	ninjapenguin: remove power from the blender.  but a blender that bakes? cool!
<ninjapenguin>	:d
<anj7>	lol
<aawe>	jeaye: does the religion rule apply to the mind / hard ai debate?
<ams>	i suspect if you have to ask, it does .. :-)
<darkcthulhu>	heh
<darkcthulhu>	what is everyone working on?
<aawe>	it's not strictly religion
<aawe>	darkcthulhu: i am writing my thesis. it sucks
<darkcthulhu>	aawe, phd thesis?
<ams>	writing tests..
<darkcthulhu>	ams, before writing actual code and completely in the spirit of tdd? ;)
<aawe>	darkcthulhu: master's degree thesis
<ams>	darkcthulhu: i care about what works, not about spirits... unless they are in liquid form.
<darkcthulhu>	aawe, ah! i'll need to start writing mine at some point. what is your topic?
<aawe>	darkcthulhu: part data exploration, part remote sensing prototype
<darkcthulhu>	hmm..
<darkcthulhu>	no one likes evaluation, benchmarking, technical writing, even writing tests. i wonder why...
<aawe>	i'm gonna write some pseudocode... i have no idea how to do so. do i start by defining some pseude-datatypes?
<ams>	aawe: i would start by descriping the problem.. then start pulling that into smaller bits ..
<aawe>	darkcthulhu: i love writing tests if the software is well suited for testing
<ams>	darkcthulhu: i like writing all those things.
<farrioth>	darkcthulhu: technical writing isn't all that bad.
<farrioth>	aawe: either that, or you pretend they're already defined, i guess.
<aawe>	ams: i have described everything down to and including the algorithm, and i have images visualizing how it would work, but i want to further specify how the algorithm does what it does via pseudocode
<ams>	writing tests is also much better when you really concentrate on it for 8 hours straight ..
<darkcthulhu>	aawe, it depends. there is a lot of leeway when it comes to pseudocode. datatypes usually don't need special attention though. like if you wanted to use a hashmap, you could just say val <- findkey(key) and mention somewhere that it keeps an association.
<aawe>	darkcthulhu: i mean datatypes  like struct section { vector3d left, vector3d right }
<ams>	test writing is mostly grunt work .. and should be seen as that .. which means, put the effort for several hours, and then don't look at them for a week.
<felishia>	hotcoder, :3
<hotcoder>	:)
<ams>	darkcthulhu: like, this weekend .. nice music, good beer: 800 tests written.
<darkcthulhu>	aawe, ah.. probably put that in a list like [..., ..., ...]. if you use functions to access your struct, you could pretend that the structure is defined, and simply give descriptive names to functions.
<darkcthulhu>	ams, whoa!
<felishia>	hotcoder, damn it, a password! noooo!
<felishia>	and it's not admin  123456
<hotcoder>	nuu
<felishia>	>:c
<hotcoder>	nuuu
<felishia>	boss sending me to gather data about 'nother website
<hotcoder>	lol
<ams>	darkcthulhu: after a few hours of that .. you're exhauseted, you sit down on the balcony, dig the situation.. and do no more programming for the day.
<adsc>	did you try admin and password?
<darkcthulhu>	hmm.. the testing before refactor/writing code strategy is actually not that bad.
<felishia>	adsc, yeah xd
<felishia>	but i guess that if the password is not 123456 then i'm not allowed as guest!
<adsc>	maybe it's just 12345
<darkcthulhu>	aawe, which university do you go to?
<felishia>	i wonder what will they do and wake up and see all those post requests xd... from a suposedly hidden form :p
<felishia>	aarggggg my boss just wanted me to study the html but i can't help my curiosity
<felishia>	my ethics is the only thing that stops me to start a brute force attack xd
<merijn>	800 tests?! what the hell, i've seen huge commercial projects with less tests than that...
<felishia>	devil in left shoulder: do it, you know you want to know how they organize their api!.... angel in right shoulder: noo... that's being evil!...
<ams>	merijn: :-)
<malshorax>	commerical and well made aren't synonymous
<felishia>	that's true xd
<merijn>	malshorax: sure, but i don't see how you can write 800 useful tests in a weekend
<felishia>	bosses usually force you to work quick!
<felishia>	less quality for commercial stuff
<merijn>	i mean, i can see acruing that many over a timespan of years, but if you can write 800 useful tests in a weekend you're either using a brittle language/environment or your tests aren't quite as useful as you think...
<ams>	merijn: property tests.
<ams>	merijn: and common lisp, you couldn't have a better language ..
<merijn>	ams: oh, quickcheck style?
<ams>	more or less ..
<adsc>	800 tests isn't that much
<ams>	nod .. it isn't.
<merijn>	although i don't think i could manage 800 useful properties either
<felishia>	you can write a test writter
<ams>	felishia: oh, that is one single test .. i have a randomizer thingie going on too :)
<ams>	specially for the math bits ..
<merijn>	adsc: depends on the kind of code
<felishia>	hahaha :p
<adsc>	merijn: it depends on a lot of things
<felishia>	the best test... say it's a cia website... if it survives a week...
<felishia>	then it's good
<adsc>	merijn: but in our projects, which are fairly small, we also have around 500 tests, and we didn't really test everything
<adsc>	merijn: and most of those tests are actually functional tests, not unit tests
<merijn>	adsc: for curiosity's sake, which language?
<zzultan>	but who will test the tests?
<felishia>	who will test the testers that test the tests?
<wei2912>	800 tests?!
<felishia>	it's just one test
<felishia>	a test loop :o
<zzultan>	with 800 if checks
<darkcthulhu>	some form of coverage is the best we can do to see how effective the tests themselves are and it's not really a good metric.
<wei2912>	:p
<wei2912>	aren't randomized test suites suppose to reduce the number of tests?
<ams>	they are.  but you cannot do everything by randomization.
<felishia>	kick the computer/server, that's an important test most programs fail! :o
<wei2912>	ams: true
<ams>	just take the base cases .. you cannot test that using randomization ..
<ams>	you can't test extremes ..
<ams>	or special cases ..
<adsc>	omg i hate this falsey shit...if i have a nullable integer input and enter 0, php doesn't save it
<felishia>	i heard the best test (now serius) is to give some clients a try, clients have the potential to always trigger the bugs because they work in unexpected ways
<merijn>	adsc: ah, i see your problem :p
<wei2912>	ams: but certain randomized test suites do test base cases, iirc?
<wei2912>	quickcheck seems to
<malshorax>	dangerous test, felishia. if you make something idiot proof...
<ams>	wei2912: how do you know? it is random.
<wei2912>	well, at least the common base cases such as handling integers like 0, 1, etc.
<ams>	might not be tested ...
<ams>	since it is random ..
<felishia>	malshorax, why dangerous xd
<malshorax>	"if you make something idiot proof, someone will invent a better idiot"
<malshorax>	if you have a known level of idiot, and you safeguard against it, now there's an idiot in the wild waiting to trash your software
<ams>	the point of randomized testing is to fill the gap between base case, extremes, special cases, and known bugs.
<ams>	and as malshorax mentions, being the idiot .. passing in random input in the hope that it might crash someday .. for whatever reason.
<ams>	and it is a nice way to find bugs ... non-random tests just do the same old thing over and over again
<ams>	https://gcc.gnu.org/wiki/summit2010?action=attachfile&do=get&target=regehr_gcc_summit_2010.pdf is a nice article on random testing
<adsc>	merijn: well, i have also worked on java projects that had lots of tests
<merijn>	ams: have you seen american fuzzy lop? that seems like a really cool way to do fuzzing
<merijn>	ams: it does fuzzing but uses binary instrumentation and genetic algorithm to find new fuzz input that's like to open new state spaces in the executable
<adsc>	merijn: when i was in the course for certified scrum developer, one dude told about his company doing extreme programming, and they had close to 100k tests
<ams>	does it work on common lisp stuff?
<merijn>	ams: i don't know, tbh
<adsc>	merijn: he said a single change could easily break 300 tests there
<merijn>	ams: i wouldn't be surprised if it did
<wei2912>	lol
<ams>	and that is just the start ..
<merijn>	http://lcamtuf.coredump.cx/afl/
<merijn>	ams: it seems to use clang/gcc to inject instrumentation for now, so it'll probably work, but not nearly as well for other languages
<ams>	why do you think that it will "probobly" work?
<ams>	i'm not using gcc or clang!
<merijn>	ams: because the support instrumenting blackbox binaries
<merijn>	ams: at a performance hit
<ams>	.. binaries?
<ams>	a c compiler doesn't even touch this .. let along binaries ..
<merijn>	ams: i'm assuming your common lisp compiler produces machine code at some point
<ams>	yes, directly without any c compiler invovled.
<merijn>	ams: yes, so?
<ams>	11:19 <merijn> ams: it seems to use clang/gcc to inject instrumentation for now, so it'll probably work, but
<ams>	how would it inject stuff via gcc/clang, when i don't even call those, ever?
<merijn>	the c compiler is just for injecting "free" instrumentation, they do blackbox instrumentation via qemu too
<merijn>	ams: which is basically runtime tracing, so it's slow but works for any binaries you run
<merijn>	without needing gcc/clang
<ams>	you don't understand, i don't have any binaries.
<merijn>	ams: your common lisp compiler produces machine code, yes?
<ams>	yes.
<merijn>	ams: what is the output of your common lisp compiler if not an executable elf binary?!
<ams>	merijn: memory.
<merijn>	yeah, if you're doing jit compilation from some interpreter you're sol
<merijn>	afaik there's plenty of lisp compilers that just produce elf binaries
<ams>	www.update.uu.se/~ams/foo.text
<ams>	merijn: no, it is not jit compilation.
<ams>	and not common lisp compiler produces "elf" binaries.
<malshorax>	does anyone have an orbital facepalm cannon i can borrow for a few moment?
<adsc>	not for free, it cost a lot to put it up there
<ams>	merijn: if i dump core, then i might get a elf binary, but it is not normally done, the compile-file function dumps something that can be loaded, so not an "executable elf binary file"
<ams>	it never gets run untill you 1) load, and two funcall something.
<merijn>	ams: saying that no common lisp compiler produces binaries is just false, because when i was messing around with common lisp years ago i did compile codeot just that. maybe yours doesn't, i don't know. anyway this is all a rather pointless discussion
<ams>	merijn: common lisp has no concept of binaries.
<merijn>	neither does c, what's your point?
<ams>	actually, it does.
<merijn>	ams: please enlighten me where in the c standard it refers to binaries
<ams>	the last translation unit
<merijn>	i could write a c interpreter that never produces machine code
<ams>	not a conforming one.
<ams>	see translation phase 8
<ams>	8.    all external object and function references are resolved.  library components are linked to satisfy external references to functions and objects not defined in the current translation.  all such translator output is collected into a program image which contains information needed for execution in its execution environment.
<ams>	cl does not have anything like that, compile might just be a nop infact, and everything is interpreted right of the bat.
<ams>	likewise, compile-file can dump the verbatim form to file, aslong as load can load it.  no binaries involved.
<merijn>	how would it not be conforming? "implementations shall behave *as if* these separate phases occur" ... "source files, translation units, and translated translation units need not necessarily be stored as files, nor need there be any one-to-one correspondence between these entities and any external representation. the description is conceptual only, and does not specify any particular implementation."
<ams>	merijn: casue you are not producing a program image.
<merijn>	you're not required too
<ams>	uhm, yeah you are.
<ams>	see above.
<ams>	11:32 /ignore merijn
<ams>	68 already done today! weee ..
<malshorax>	to be honest, the "program image" part isn't the important bit in making an interpreter fail the standard
<fred-fri_>	deletes to rest apis should be idempotent. what should an api return on subequent identical deletes? 204 always? or 204 on the first and then 404 or something?
<malshorax>	it's the fact that the previous points dictate the contents that should be included in that program image
<merijn>	since the program image does not need to be a single file or any format
<merijn>	you could just say the source files *are* the program image for your interpreter
<merijn>	as long as it behaves *as if* all those steps happened, everything is fine
<ams>	malshorax: nod, but it fails there as well.  so oh well ..:)
<merijn>	malshorax: but they *don't* dictate the contents
<merijn>	as i responded an implementation has to behave *as if* those phases happened, conceptually
<malshorax>	merijn, if i'm reading the correct document, they dictate the contents of the program image in form of preprocessing and tokenization
<merijn>	malshorax: see page 10, footnote 6
<malshorax>	...i missed that
<merijn>	malshorax: that's why i quoted it, but ams ignored that in my response
<merijn>	so i don't see how an interpreter that behaved with the correct semantics given source files wouldn't qualify as standards compliant
<reckless>	hi is it possible to write a programm which downloads all pictures of a website? and is this legal?
<ams>	yes.  yes.
<malshorax>	maybe. probably not.
<twey>	yes, but wget does it already.  yes.
<malshorax>	oh, wait, last one is yes.
<ams>	malshorax: both are legal.  any web browser does it.
<wei2912>	under fair use afaik
<ams>	well, under normal use .. even .. web browsers hello ..
<wei2912>	as long as you don't crawl the website too intensively
<malshorax>	ams, my mind skipped ahead from download to use of images
<wei2912>	lol
<ams>	yeah, there might be legal issues if you really do crawl it like mad ...
<ams>	then again, google at all does it all the time oso...
<reckless>	nah it's just pictures for myself for no other use. it's 70 sites with about 50 pictures on it. it would take a year to download them all by hand :d
<reckless>	50 pictures on each site^^
<malshorax>	a year?
<malshorax>	are you navigating the web by flipping bits in your ram manually?
<ams>	wget --mirror -np site
<ams>	done.
<ams>	you can even restrict wget to only download images...
<reckless>	okay nice thank you :)
<wei2912>	google doesn't crawl it that fast
<malshorax>	ams, depends on how well the site is made
<malshorax>	some sites would be hell to do like that
<ams>	oh sure
<ams>	anything doing stupidity like javascript image loading ..
<wei2912>	lol
<malshorax>	i'd prefer to look for a pattern, then generate a list of links, or use the browser to generate a list of links, then feed *that* to wget
<malshorax>	less likely that it'd end up crawling a neverending circle of junk
<jkbbwr>	this is a fun toy https://play.golang.org/p/gwuag5438v
<ams>	what it do?
<jkbbwr>	fires up a function that waits for arguments that can be fed in lazy style and you can grab back the result later wihtout blocking
<ams>	so a lazy list?
<jkbbwr>	ams: point being, you could start doing work on one or two args before getting a third later
<ams>	nod nod ..
<jkbbwr>	to be totally honest its probably pointless :p
<ams>	like all programs? :)
<jkbbwr>	i just think it might be cute to just in time compute a function based on arguments.
<jkbbwr>	can't think of a real world application but whatever :d
<aawe>	i wonder if that'd be possible with haskell - forcing thunks and returning the next function
<aawe>	i don't know enough about the strictness manipulation to do it myself
<aawe>	darkcthulhu: a swedish one
<darkcthulhu>	aawe?
<aawe>	~1 hour ago: "<darkcthulhu> aawe, which university do you go to?"
<darkcthulhu>	aawe, ah!.. okay :)
<jkbbwr>	aawe: wouldn't it require a whole new function?
<felishia>	you forgot the null terminator!
<aawe>	jkbbwr: process :: a -> b -> c; process x = let y = f x in y `seq` processfurther x
<aawe>	processfurther :: b -> c
<aawe>	eh wait
<jkbbwr>	aawe: gosh thats ugly :3
<aawe>	don't you bash haskell
<jkbbwr>	aawe: ;)
<aawe>	you are simply misguided
<aawe>	join the fight for purity
<darkcthulhu>	c what i sed? don't bash csh.
<felishia>	haskells is one of those weird languages i've never seen in practique
<aawe>	how many languages have you seen in practice?
<aawe>	java and c?
<myrl-chan>	aawe: nothing, luckily.
<myrl-chan>	s/luckily/fortunately/
<aawe>	myrl-chan: what are you responding to?
<myrl-chan>	aawe: "how many languages have you seen in practice?"
<aawe>	myrl-chan: have you never seen any language? also the question was aimed at felishia
<myrl-chan>	aawe: in practice, like, being used in something non-trivial? no.
<myrl-chan>	aawe: the language that fits most in that criteria would be elisp. lol.
<aawe>	you can explore real-world projects on a site named github. it's on http://www.github.com/
<standoo>	do questions about db fit into the scope of this channel?
<aawe>	standoo: yes
<aawe>	anything goes
<aawe>	except religion
<felishia>	aawe, i've seen java c, c++, bash, python, ruby, latex, html, css3 (if these three are even languages)... javascript, basic, fortran, but never haskell!
<standoo>	i am deciding between sql and nosql for file based db
<myrl-chan>	aawe: why would i want to bestoy misfortune upon myself?
<myrl-chan>	bestow*
<felishia>	yep and those sql ones too!
<aawe>	standoo: sqlite3 is great
<ams>	aawe: other than the format being overly complicated .. :/
<aawe>	ams: you never drop down to the actual format though
<ams>	sometimes ..
<felishia>	i bought a book that was called "programming with haskell" xd i thought it was a person that was teaching you programming, the book looked complex, but it was a programming language... i mean haskell is so unknown, at least for me
<myrl-chan>	rip haskell.
<ams>	aawe: when you need to write a native libraryfor sqlite it becomes an issue ..
<standoo>	i can model the data in rdbms
<aawe>	ams: i see. why not ffi bindings though?
<felishia>	not even fortran is dead, i've seen fortran implementations i've used, lisp is just dead though xd
<wei2912>	felishia: lol
<jkbbwr>	standoo: what does your data look like?
<myrl-chan>	ams: trigger alert
<ams>	aawe: portability.
<felishia>	rip lisp u.u
<wei2912>	felishia: well, did you read it?
<aawe>	felishia: rest in peace
<ams>	felishia: funny, go troll somewhere else.
<felishia>	wei2912, i was like, eeeh!... i thought this was a c++ book! :p
<myrl-chan>	felishia: so... i've read all the languages you listed, i'm quite shocked that the only passable language there is c.
<standoo>	jkbbwr: i am trying to store the datatypes for different functions(params and return)
<wei2912>	felishia: well, enjoy
<myrl-chan>	felishia: fortran might pass too though.
<myrl-chan>	felishia: you're missing a lot by not using haskell dough.
<felishia>	i've only heard of the chinese/japanese/somewhere in asia/ people that tried to create a os that run with lisp, but that was so much time ago!...
<ams>	felishia: i'm a lisp programmer, by profession.
<felishia>	i've seriously never heard about haskell except in that book
<ninjapenguin>	who here has extensively used both github and bitbucket?
<jkbbwr>	standoo: not sure i understand
<jkbbwr>	ninjapenguin: yo
<felishia>	where do they use it? o.o i know lisp very very very basics, even when i think i forgot them... but i've never find applications in modern days considering everyone uses other languages
<myrl-chan>	ninjapenguin: well, i haven't extensively used neither github nor bitbucket, but at least i've extensively used the word "both"
<jkbbwr>	felishia: every sizable c system contains a badly implemented variant of lisp
<rindolf>	ninjapenguin: i've used both.
<rindolf>	ninjapenguin: don't know how "extensively"
<felishia>	i mean it can be useful yes, i can't deny it!... but now bussiness want other languages, and everyone creates libs for other languages...
<ninjapenguin>	well, i specifically want to find a person who has extensively used both and i'm curious what they think of their design choices, and which one do you prefer.
<aawe>	" this channel is afraid of me...i have seen its true face. the logs are extended gutters and the gutters are full of stacktraces and when the drains finally scab over, all the bugs will drown. the accumulated filth of all their syntax errors and duck typing will foam up about their waists and all the 'full stack developers' and imperativists will look up and shout 'save us! teach us haskell!'... and
<aawe>	i'll look down and whisper 'no.' "
<rindolf>	ninjapenguin: what's the question?
<ams>	felishia: drrivers, telescope hardware, .. image processing..
<jkbbwr>	ninjapenguin: github is miles better.
<felishia>	ams, i know every program that can be written in c can be written in lisp
<jkbbwr>	felishia: lisp is still heavily used in the ai world.
<rindolf>	ninjapenguin: ok, i think i like github better, but at least bitbucket gives me: 1. free private repositories. 2. mercurial repositories.
<ninjapenguin>	rindolf: there's this huge argument...well, i say huge argument, what i mean is one guy says github is shit because the buttons aren't placed in a simple menu... but yeah, i'd like to hear from someone who has actually used both extensively and what their opinion is about both.
<standoo>	jkbbwr: the datatypes for the params of functions in ocaml
<jkbbwr>	standoo: sqlite3
<jkbbwr>	standoo: done.
<felishia>	the thing is that i don't know any business that wills you to do that...
<ams>	felishia: lots of number crunching ..
<standoo>	jkbbwr: thanks
<ninjapenguin>	rindolf: so you don't find the ui design flawed?
<ams>	is what i use it for.
<jkbbwr>	felishia: lots of smart systems / actors use it over prolog.
<rindolf>	ninjapenguin: the ui design of what?
<jkbbwr>	felishia: banks often have a box or two running it for intelligent decisions
<ninjapenguin>	rindolf: of github.
<rindolf>	ninjapenguin: not in particular.
<jkbbwr>	(or at least i know one that did)
<ams>	felishia: claiming that a a language is dead, without having the remotest clue about is is just ignorant.
<ams>	felishia: next you will tell us that cobol is dead, and apl too?
<felishia>	and sorry, lisp can be very good, but i'm not learning something that has little market u.u otherwise i'd have learned assembler!...
<aawe>	felishia is fishing for reactions
<ams>	i know.
<felishia>	eh?
<ams>	aawe: but i am waiting for coffee ..
<jkbbwr>	felishia: assembly still has a huge market.
<ams>	indeed...
<ninjapenguin>	rindolf: see, the ui design is the main topic here. the argument is that bitbucket's design is simpler, more intuitive and all the important stuff is in the front page.
<ams>	specially on the arm, and avr side ..
<felishia>	oh yeah that's true! sorry :p
<felishia>	kernels
<ams>	felishia: well, maybe you wanna do boring shit.. go learn ruby or something.
<ninjapenguin>	rindolf: whereas github, apparently, has buttons all over the place and are hard to find and isn't intuitive at all and doesn't have super important commit logs in the front page.
<aawe>	felishia: learn enterprise java, work exclusively in it, lose will to live. perfect plan
<aawe>	ninjapenguin: commit log is 1 click away tho
<hk3380__>	what's an encoding that shortens anything to 6-10 chars and it's only alphanumeric chars?
<adsc>	yeah, another lost soul
<_blizzy_>	felishia, what do you want to do?
<adsc>	grinded to dust in the enterprise slavery train
<ninjapenguin>	aawe: exactly what i thought. but he claims "why should i click anything, it should be on the main page?"
<ninjapenguin>	s/?/./
<ams>	hk3380__: huh?
<jkbbwr>	ninjapenguin: i find bitbuckets ui distracting, confusing and horrible.
<_blizzy_>	also, screw interprise
<wei2912>	hk3380__: err, you should realize that the encoding may be one-way
<ninjapenguin>	jkbbwr: how come?
<felishia>	_blizzy_, i want to live my life, get a family, and earn enough :) sorry if i don't have a programmers soul...
<ams>	hk3380__: you thinking of maybe base64?
<_blizzy_>	felishia, oh, it's ok. :)
<_blizzy_>	felishia, i would recommend python then
<hk3380__>	wei2912: that's ok
<jkbbwr>	ninjapenguin: my flatmate is a ui wizard, she says that anything that hides core buttons on the far left or right is a terrible design
<_blizzy_>	it's a great beginner language
<hk3380__>	ams: but base64 is not 6-10 chars for any input
<jkbbwr>	i have to pause and work out what to click.
<ams>	hk3380__: well, there is no such "encoding"
<felishia>	_blizzy_, that's how i learned coding... i used to study biology before discovering python, basically it changed my career...
<ams>	if you are thinking about hashes, then that is a different story ..
<wei2912>	ams: he probably means a hash
<ninjapenguin>	jkbbwr: interesting.
<hk3380__>	ams: ok then encryption
<aawe>	_blizzy_: enterprisemanager.getsingleton().establishinstance().getenterprisefactory().createfactory<blizzyfactory>().produce(new blizzyfactoryinjectedattributes(attrs)).attach();
<wei2912>	hk3380__: no, encryption has to be reversible
<ams>	hk3380__: no such encryption scheme in existance.
<_blizzy_>	aawe, ...
<_blizzy_>	you make me hate java more.
<ninjapenguin>	_blizzy_: what makes you think that's java?
<_blizzy_>	felishia, oh, nice.
<ams>	hk3380__: count how many possible outputs you have with 10 chars, alphanumeric.
<felishia>	java isn't that bad xd
<hk3380__>	ams, wei2912 ok then a hash function
<aawe>	ninjapenguin: it is java
<ams>	hk3380__: quite bad encruption then .. you can bruteforce it in a day.
<jkbbwr>	aawe: or c#
<wei2912>	hk3380__: what is it meant to be used for?
<ninjapenguin>	aawe: oh. but that breaks the naming convention. :(
<_blizzy_>	c# isn't that bad
<aawe>	jkbbwr: i wrote the code, i think i know which language i used
<_blizzy_>	c# > java for days
<ams>	game time!
<jkbbwr>	aawe: its still valid c#
<aawe>	;)
<adsc>	aawe: java code conventions say methods don't start with uppercase letter
<aawe>	but c# doesn't use factories as a go-to solution
<felishia>	i can't wait for c# to come to linux! :3
<aawe>	fizzbuzzfactoryfactory
<hk3380__>	ams, wei2912 it's not meant to be secure, i just want to store uploaded filename in a random name (but consistent in length, and alphanumeric)
<rounin>	oh, c# can be used on linux today, felishia
<felishia>	really!!!!!
<ams>	hk3380__: use a hash.
<wei2912>	hk3380__: must it be strictly 6-10 chars?
<ams>	or even a timestamp ..
<rounin>	felishia: yes... because there's been an open source implementation called mono for a while. it's the basis for the popular commercial product xamarin, among other things
<jkbbwr>	hk3380__: why only 10 characters? why not 32 characters
<hk3380__>	wei2912: yeah cause it'll be part of an url and i don't want it to be huge. ams i guess timestamp could work
<aawe>	rounin: also unity3d i think. or do they use a custom runtime?
<rounin>	felishia: i once used mono to create a full .net application on linux, which ran as well on windows as it did on linux... it was quite amusing
<rounin>	aawe: i don't know, to be honest, but that sounds rather interesting!
<jkbbwr>	10 characters isn't a big universe
<felishia>	rounin, didn't know about that... i was wating for microsoft and my hope that they said they would opensource .net framework and aspx
<hk3380__>	jkbbwr: cause it's gonna be part of an url
<rounin>	felishia: ah yes! they've been talking about merging in code from microsoft now that microsoft is open-sourcing it
<jkbbwr>	hk3380__: and? why does it have to be 10?
<rounin>	felishia: i don't know how well they'll be able to cooperate, but they've certainly been talking about it
<hk3380__>	jkbbwr: cause long urls are ugly
<nurtalm>	i am not sure how to go about this? what exactly is it asking me? http://i.gyazo.com/b7c4974bd51f09cb116ee1709ca61187.png
<wei2912>	hk3380__: cityhash might work -- has fast hashing of strings and 32-bit variant (you can encode 32 bits in hexadecimal with 8 digits)
<wei2912>	which fits your requirements
<jkbbwr>	farmhash is a newer version of cityhash
<felishia>	rounin, hope games written in c# would work on my linux pc, but meh, directx is said to be a pain to translate to opengl, at least that's what valve said...
<felishia>	umh... apparently there are not many games written in c#
<wei2912>	jkbbwr: thanks for pointing that out
<rounin>	felishia: yeah, they say the wine project are working on supporting directx, but that doesn't mean it'll be available in mono or on linux in general
<rounin>	but yeah, pure windows games are more likely to work in wine than in mono, and even then it's not necessarily that likely
<rounin>	i think world of warcraft runs in wine... counter-strike would run, i remember... i've tried star-craft 1 and riven, which are super old
<felishia>	what we really need is orbis os :p
<rounin>	oh wow... haven't heard about that one before
<felishia>	google it, the story is crazy :p
<ninjapenguin>	jkbbwr: can you say what she means by "hidden"?
<felishia>	can't believe ps4 runs grub bootloader
<jkbbwr>	 ninjapenguin load up github + bitbucket, bitbucket has too much in the side columns
<xqo>	is this naming offensive? tag.components*tag.prototype.tagtypes[tag.type].type.size
<ams>	yes.
<felishia>	xd https://wiki.theory.org/yourlanguagesucks
<xqo>	ams tag.components*tag.prototype.methods[tag.type].data.size>=4
<xqo>	better?
<ams>	no.
<felishia>	maybe components = tag.componets
<felishia>	methods = tag.prototype.methods
<felishia>	type
<ams>	more like a single function call.
<felishia>	= tag.type
<ams>	you have no clue what you qre typing huh?
<felishia>	dostuff(tag)
<aawe>	why in the world does "restricted: not for sale in north america" exist?
<felishia>	function dostuff(tag) { if (!tag instanceof tag) {throw new typeerror("must be tag")} return tag.components*tag.prototype.methods[tag.type].data.size>=4 }
<aawe>	selling cheaper in the eu and prevent reimport?
<ams>	aawe: go figure, also not valid anyway .. so ..
<fiki>	aawe in economics we would call this price discrimination policy, basically milking people as much as they are willing to pay for it.
<fiki>	plus restricting a market is a great way to make money
<ams>	nod..
<fiki>	basically any company that makes big bucks does it this way, it's just that apple and google do it by patenting stuff for instance
<ams>	well, the patent stuff serves a different purpose ..
<ams>	the patents are for mad type tactics ..
<fiki>	nope they serve the same purpose
<ams>	not really.
<fiki>	there would be no incentive out there to develope an iphone if everybody could make it afterwards
<fiki>	and the price would be way way smaller
<fiki>	develop*
<ams>	one can already develop an exact copy like that, with patents.
<fiki>	ams no you can not, you will get sued by apple
<ams>	uhm, no.
<fiki>	the point why nobody else than apple can produce iphones isn't a matter of nobody being able to
<ams>	see, patents are about process...
<fiki>	it's a matter of allowance to the market
<ams>	fiki: no, that is not what patents are baout.
<fiki>	in law that's exactly what they are about
<ams>	nobody can produce an iphony because of 1) copyright, 2) trademark..
<ams>	patents are about process, not the thing.
<ams>	using the same process to produce something like the iphony would be illegal, using a different process is fully allowed, and legally protected.
<fiki>	tetra pak is patented for instance
<fiki>	and that's not a process
<ams>	actually, it is.
<ams>	it is very much a process ..
<fiki>	anyway the idea is the same, keeping competitors from doing/producing what you are producing
<ams>	everything from how to fold the patper, to lamination of the paper
<ams>	which is also where the patent system is quite broken .. since you patent a process, say folding paper .. then nobody can make something that folds paper .. without requrieing a patent grant..
<fiki>	it's the same idea behind new medicine and drugs
<ams>	in the case of iphone, there aren't many patents on it ..
<ams>	so anyway, anyone can make something like an iphone, but you cannot make it using the same processes as descriupted by whatever patents that might be applicable.
<fiki>	you very much can't make something like an iphone, depends what your idea of an iphone is, you can patent the way software in it works.
<ams>	not in europe.
<ams>	and the uspto also rejects software patents these days.
<ams>	they are also not valid in the us.
<ams>	if one would sit down in a bunker, and rewrite the iphone operating system by clean room procedures, that would be fully legal.
<ams>	patents do not protect software, neither in the us or in eu.
<ninjapenguin>	what would you call a function that takes in 2 containers and returns a container that includes all the elements the first container has that the second doesn't?
<ams>	eparse
<ninjapenguin>	eparse?
<ams>	error parsing sentence
<ams>	you just want the difference between two sets?
<ams>	intersection?
<ams>	normally that is the term used ..
<ninjapenguin>	i mean, i just return a set of elements that appear in set 1 but not in set 2.
<rindolf>	ninjapenguin: that's the difference.
<ams>	i would (and what cl does) call it set-difference
<ninjapenguin>	rindolf: i guess, if you want to think of it that way. i mean, i don't return anything that is in set 2 but isn't in set 1.
<rindolf>	ninjapenguin: http://mathworld.wolfram.com/setdifference.html
<rindolf>	ninjapenguin: what?
<wei2912>	how'd i use data.sequence as a queue?
<myrl-chan>	err
<myrl-chan>	guys, what do you call that part of speech where you make a reference to something?
<wei2912>	i need to remove an element from the left side and put it on the right side
<myrl-chan>	owait, figures of speech.
<myrl-chan>	ah, allusion.
<blipped>	myrl-chan: like a magician does, but instead of making something disappear without touching them you make something appear in a persons mind without mentioning it.
<blipped>	*touching it
<myrl-chan>	blipped: i first queried "parts of speech" and then a minute later, i realized that it should have been "figures* of speech," searched that and i got results.
<rindolf>	wei2912: in which language?
<blipped>	myrl-chan: i am under no illusion that you did exactly as you state.
<myrl-chan>	blipped: is that to be some pun?
<aawe>	ams: why "not valid anyway" ?
<myrl-chan>	supposed to be.
<ams>	aawe: ?
<aawe>	"13:06:55              ams | aawe: go figure, also not valid anyway .. so .."
<rindolf>	wei2912: use take and |> or <| - http://hackage.haskell.org/package/containers-0.2.0.1/docs/data-sequence.html
<blipped>	myrl-chan: nah.
<ams>	aawe: no contract, resale is always allowed, blablabl
<aawe>	ams: if i buy a book with a "license" saying it cannot be sold in na, and i go to na and sell it, am i not liable for trillions of dollars in damage?
<cederfjard>	i posted this question on so last night: http://stackoverflow.com/q/30089255/587280. would really appreciate it if someone could take a look at it, it's about building rows for a table from an array of lists in a specific manner, and i just can't figure it out.
<ams>	no, such a license would violate several basic things in copyright law.
<aawe>	ams: so it's more of a guideline, then? written in in a spooky, scraming red box right across the cover of the book?
<aawe>	s/scraming/screaming
<ams>	yes, just like "resale not allowed" kinda crap ..
<ams>	not valid in any jurisdiction that i know of...
<ams>	or "reverse engineering not allowed" ..
<aawe>	you can disallow reselling of services via eulas
<aawe>	but then you enforce it yourself, not via law
<ams>	services is something else ..
<ams>	bnecause that just means you block the door for the customer to something they do not have to begin with ..
<rindolf>	cederfjard: hi! i'm not sure i understand your problem and your dilemma.
<cederfjard>	hi man! thanks for checking. is there something specific, or is the entire question just weird?
<cederfjard>	the end result i'm looking for
<cederfjard>	is a to build a cross table with this: https://github.com/automattic/cli-table
<ams>	rindolf: most of these  "not allowed to" clauses are based on fear tactics .. people don't know their right, and trust the big companies to be honest...
<cederfjard>	i need to add each row as an object in this format: { 'left header 1': ['value row 1 col 1', 'value row 1 col 2'] }
<aawe>	ams: that meant for me?
<ams>	uhm, eyah ..
<rindolf>	ams: why are you telling me that?
<ams>	cause i missed typed, no clue why you getting you knickers crossed ..
<rindolf>	cederfjard: so? can't you use a loop or two for that?
<cederfjard>	rindolf: i'm having trouble figuring that out, i'm a real noob you see :)
<rindolf>	cederfjard: ah.
<rindolf>	cederfjard: which programming introductory material have you read?
<anj7>	hey guys o/
<rindolf>	anj7: hi.
<anj7>	rindolf: sup?
<rindolf>	anj7: i bought an .epub today.
<rindolf>	anj7: of a friend.
<ams>	aawe: https://www.eff.org/issues/coders/reverse-engineering-faq
<rindolf>	i mean "by a friend"
<ams>	aawe: for example ..
<rindolf>	it was on sale.
<anj7>	rindolf: what .epub?
<rindolf>	anj7: and it was my birthday two days ago.
<cederfjard>	rindolf: a few minor tutorials. i'm familiar with the basic language constructs and the like.
<aawe>	ams: how come that guy who hacked the ps3 got sued out of existence?
<aawe>	if reverse engineering is ok
<rindolf>	anj7: http://www.netbook.co.il/book.aspx?id=591 - this one - it's in hebrew.
<anj7>	rindolf: oh, nice :)
<cederfjard>	rindolf: the issue is that i think it's a bit more involved than that?
<aawe>	ams: copyright infringement
<ams>	aawe: no clue, didn't read the case.
<aawe>	?
<anj7>	rindolf: do you know hebrew?
<rindolf>	anj7: yes, i do. i'm israeli.
<ams>	aawe: you mean http://en.wikipedia.org/wiki/sony_computer_entertainment_america,_inc._v._hotz ?
<anj7>	rindolf: oh, are you a jew?
<cederfjard>	rindolf: i have to figure out how to build those rows in that particular format from the source array, which is in it's own particular format.
<rindolf>	anj7: yes, i am - by ethnicity at least - not by faith.
<aawe>	ams: that's the one
<rindolf>	cederfjard: ok.
<anj7>	rindolf: what is your faith on then?
<cederfjard>	rindolf: maybe it's super basic and i'm not seeing it. :)
<rindolf>	anj7: see http://www.shlomifish.org/meta/faq/#religious_belief
<ams>	aawe: well, as suuallyt these cases go: they slap on lots of things hoping something will stick, and when you have a 20 year old kid vs. multi billion dollar company, who do you think will fold? they settled after all ...
<felishia>	i'll never understand what americans see in jews... it's such a popular question...
<rindolf>	cederfjard: what should be placed in every column in every row?
<myrl-chan>	wei2912: oi.
<rindolf>	cederfjard: did you write automated tests?
<wei2912>	hi myrl-chan rindolf
<rindolf>	wei2912: meow!
<myrl-chan>	wei2912: hewwo.
<aawe>	ams: are you sure nothing would have stuck? it's murrica after all
<cederfjard>	rindolf: nope, no tests
<anj7>	rindolf: oh, ok.
<ams>	aawe: something would have probobly stuck ..
<cederfjard>	rindolf: hang on a second, i'll show you
<rindolf>	cederfjard: then maybe start by writing some tests.
<ams>	aawe: but not the re bit ..
<myrl-chan>	imo, proving's better than testing.
<anj7>	how do you know if you are a geek?
<rindolf>	myrl-chan: it's not coq or whatever.
<myrl-chan>	anj7: if your name sounds something like anj7.
<anj7>	oh, lol
<ams>	aawe: i suspect that holtz willfully accessed sony computers ..
<myrl-chan>	rindolf: problem with tests is that it might not cover edge cases.
<rindolf>	myrl-chan: and the problem with proving is that it's very time consuming.
<darsvaeda>	how do you calculate the distance of a color (as rgb) to another color?
<myrl-chan>	rindolf: i agree.
<ams>	darsvaeda: "depends"
<darsvaeda>	i mean i can check weather it is closer to 0 or 255 but how come all three values in account
<rindolf>	myrl-chan: and also you need to use specialised tools for that.
<myrl-chan>	rindolf: eh.
<ams>	darsvaeda: what is a colour first of all? and is it rgb, cmyk, what?
<ams>	darsvaeda: so it depends.
<darsvaeda>	rgb
<ams>	darsvaeda: look up deltee
<darsvaeda>	i have rgb values and want to check if they are closer to black or white
<cederfjard>	rindolf: this is the kind of table i'm after: https://www.dropbox.com/s/k8z4ti3fqqprt9o/screen%20shot%202015-05-07%20at%2014.10.25.png?dl=0
<rindolf>	myrl-chan: also see http://googleresearch.blogspot.co.il/2006/06/extra-extra-read-all-about-it-nearly.html
<darsvaeda>	ams, you mean delta e i suppose?
<rindolf>	cederfjard: so it's a sparse table?
<cederfjard>	rindolf: sorry, i'm going to have to look up that term
<rindolf>	cederfjard: :-(.
<cederfjard>	rindolf: is this the right concept? https://msdn.microsoft.com/en-us/library/ee810573%28v=cs.20%29.aspx
<darsvaeda>	couldn't i calculate the vector distance (whatever it was called again)?
<cederfjard>	rindolf: then i think so
<rindolf>	cederfjard: i mean a table where not all the cells are filled.
<ams>	darsvaeda: same thing.
<cederfjard>	rindolf: ah, yes that's the case.
<rindolf>	cederfjard: ok.
<ams>	though, i suppose (sqrt (+ (^2 (- r2 r1)) (^2 (- g2 g1)) (^2 (- b2 b1)))) could work
<darsvaeda>	yeah saw that on wikipedia
<rindolf>	cederfjard: then maybe create an array of common columns and fill each row by iterating over it and looking up the agenda items.
<rindolf>	cederfjard: and do us a favour and write automated tests.
<cederfjard>	rindolf: ok, that's super helpful! thank you
<cederfjard>	rindolf: i haven't gotten around to testing stuff yet, but i'm intent on learning quickly ;)
<cederfjard>	rindolf: cheers
<ams>	darsvaeda: remeber that there is a difference between what a human might consider and what a computer sees ..
<ams>	darsvaeda: and that the same colour can have differences depending on what color scheme you are using
<rindolf>	cederfjard: you're welcome .
<darsvaeda>	sure :)
<rindolf>	cederfjard: it's never too early to learn test-driven development.
<darsvaeda>	thanks so far btw
<cederfjard>	rindolf: then that's the next thing on my schedule :)
<rindolf>	cederfjard: nice. :-)
<rindolf>	cederfjard: are you using version control?
<cederfjard>	rindolf: yep, i've learnt and am using git. so i think i've got that somewhat covered
<oldornew>	is there a programming language out there that stores the code in binary form, and you edit it through a special ide?
<myrl-chan>	oldornew: yes.
<myrl-chan>	oldornew: any programming language.
<ams>	suspect that forth is the cloest to something sensile  int hat regard ..
<rindolf>	ams: what do you mean by "sensile"?
<ams>	sensible
<oldornew>	myrl-chan: i mean non text like. so maybe variables/functions/etc are referred to by a key. and you can rename what's behind the key and it instantly updates for a million line code base.
<ams>	... huh?
<myrl-chan>	oldornew: it's impossible in a sense.
<oldornew>	no..
<myrl-chan>	oldornew: if you like, we can consider assembly and disassembly.
<oldornew>	i mean you program through a 'viewer'. it's a system. you see the variable name, but behind the scenes you are simply referring to a key
<ams>	oldornew: what?
<ams>	you mean like .. a repl1?
<ams>	repl!?
<oldornew>	and all formatting is of course done by the viewer, you don't insert arbitrary tabs and such. so that you can easily transform code, into a namespace and such without fucking up formatting
<oldornew>	no
<oldornew>	you code through an ide that operates on some binary format
<oldornew>	that's what i'm making anyways
<blipped>	if i have the front and back end of a project that i'm working on in two seperate environments is there any easy way to put both in the same git repo or should i just have two repos?
<ams>	... so like a repl..
<rindolf>	blipped: use sub-directories?
<myrl-chan>	oldornew: as i said, assembly and disassembly.
<myrl-chan>	it's not lossless though.
<ams>	myrl-chan: do you understand what he is talking about?
<myrl-chan>	ams: yes.
<ams>	i don't ... either it is repl, or smalltalk/lisp like image based system ..
<oldornew>	ams: i'm not talking about runtime behavior. i'm saying that instead of coding through text, you code through an ide which saves things in a specialized binary format instead, that enables cool transformations on the code more easily.
<blipped>	rindolf: thanks, just what i was looking for.
<rindolf>	blipped: you're welcome .
<myrl-chan>	ams: basically, he's saying that you write text, it gets transformed to binary, and then you can read that similar text again, form that binary.
<rindolf>	blipped: there are also git sub-modules.
<myrl-chan>	which is impossible, except if you're going to be using comments on your binaries.
<ams>	myrl-chan: so exaclty like smalltalk then.
<ams>	and repl based environments in most cases.
<myrl-chan>	from that binary*
<oldornew>	myrl-chan: none of you understand what i'm talking about lol.
<ams>	oldornew: could be because you are not explaning anything very well.
<myrl-chan>	oldornew: oh please do enlighten us oh great master.
<myrl-chan>	"<oldornew> is there a programming language out there that stores the code in binary form, and you edit it through a special ide?"
<myrl-chan>	oh!
<myrl-chan>	i know what you mean now.
<myrl-chan>	there needs to be no intermediate text form.
<ams>	a repl.
<myrl-chan>	so that means bytecode or machine code. /s
<rabit>	smalltalk!
<ams>	myrl-chan: well, it could mean neither ..
<ams>	store things as lists as on a secd machine ..
<aidanh>	oldornew: why not just use some text based language that allows cool transformations?
<aidanh>	there are plenty of thoes
<oldornew>	what? ok i'll give a better example. the storage format could be an ast. but the software you edit through displays the code 'normally'.
<aidanh>	there's nothing magical about binary formats that allows cool transformations
<rindolf>	oldornew: i think you mean that the identifiers are translated from the ids of the methods by the viewer.
<rindolf>	any bye all, i'm going to the pharmacy.
<ams>	oldornew: right, like smalltalk then, or forth, or lisp.
<aidanh>	oldornew: well, lisp is sort of like an ast
<aidanh>	(+ 12 (* 7 3)) <--- that's basically an ast in text form
<oldornew>	sure except that you have to edit the ast yourself
<aidanh>	you don't have to, you get to!
<myrl-chan>	oldornew: holy fucking shit.
<myrl-chan>	that's totally not assembly + disassembly.
<myrl-chan>	i swear.
<aidanh>	anyway---why would storing your code as an ast be beneficial?
<ams>	aidanh: ask chuck ..
<aidanh>	this sounds like a solution in search of a problem to me
<myrl-chan>	sarcasm aside, assembly/disassembly does exactly what you're talking about. and it's not beneficial either.
<ams>	he is kinda smitten by such things ..
<aidanh>	ams: chuck?
<mike802>	that's not what that's called
<myrl-chan>	okay... time to save my project. better take 5 minutes for it to compile-ish.
<ams>	aidanh: forth .. chuck moore .. colorforth ..
<myrl-chan>	better wait for 5 minutes*
<myrl-chan>	also, what ams said is also correct.
<myrl-chan>	about the repl.
<aidanh>	ams: ahh
<ams>	myrl-chan: you telling us that ams might have been incorrect?!?!!?
<myrl-chan>	ams: sumimasen, goshujinsama.
<ams>	worship my parenthesis!
<oldornew>	i have no clue what you people are talking about. if you look at the codebase more like a database, a single file or a few for the entire project, and the text editor takes the form of an advanced ide for this 'database'. then you have a good base for programming in a much more advanced manner. being able to transform code easily, put it behind a namespace easily and such. it would be a good base to start on ai assisted
<oldornew>	programming research. sure you could have text as the base storage form, but there are some negatives like your ide having to work with text input. you also have to work with files, instead of just 1 file for the entire project. why would you want files if you already have namespaces?
<adsc>	hmmm, how can i avoid storing clear text passwords, when i have to manage external software that only allows user+password login?
<myrl-chan>	adsc: er... wat
<ams>	oldornew: you are defintily not making sense, and smalltalk and lisp did this in the 1980s.
<ams>	oldornew: colorforth does it as well.
<ams>	oldornew: it is called image based environments.
<ams>	oldornew: which is basically, a repl.
<adsc>	myrl-chan: i am writing a manager software that allows to manage external software, and this external software needs username+password logins
<adsc>	myrl-chan: e.g. ftp server
<oldornew>	ams: i'm not making any sense because you are too short sighted. sure i'm not perfect at explaining this, but you're still saying what i'm talking about is like what smalltalk did? i don't know about you, but i can see smalltalk projects on github...indicating that they use ascii/text files as the base storage format...
<ams>	oldornew: fun fact, i've been wokring in such an environment since 20 years.
<adsc>	myrl-chan: now i can store the passwords encrypted, but i still have to store the decryption key somewhere, because i need them unencrypted to log in
<aidanh>	oldornew: why do you think the storage medium matters at all?
<ams>	and calling it a storage medium is missleading too .. it is a exchange medium.
<aidanh>	it can be both
<ams>	sure, but in the case of smalltalk, it is about exchaning code between parties.
<ams>	"text" is anyway a simpler language to handle for humans, and machines. ..
<oldornew>	the storage format doesn't really matter, it would just be ugly in text form and be really slow for many operations. plus then you'd need to have additional files storing metadata for the ide. the 'ide' needs to know metadata about every function to assist for example in artificial intelligence assisted programming.
<ams>	why do you think it would be slow?
<ams>	and what meta data?
<ams>	... like seriously?
<aidanh>	oldornew: it doesn't sound like you've fleshed out your idea much, or thought about what sort of problems it would be useful for solving
<oldornew>	ams: changing a function name and having the ide do lexical analysis and parsing on all files that could possibly be using that function so that it could rename them would be slow. and you're still not understanding me. the programmer shouldn't be the one doing manual formatting, inserting new lines when the line is too long, etc because the formatting would be destroyed as soon as you change something like a function name.
<oldornew>	obviously the 'ide' platform should have algorithms to display the code as best as it can
<ams>	oldornew: uhm, it is as fast as doing it with "binary" data.
<oldornew>	ams: hah! i'm sure dude, i'm sure. didn't i tell you? the storage format uses keys that refer to strings. you simply change the string, not the keys.
<ams>	oldornew: as a programmer, i have not bothered with any of that .. ever.
<aidanh>	there are refactoring tools that let you change function names throughout a project anyway; why not use those?
<csd_>	is it possible to view others' source code on the topcoder web-based arena, or only the java applet arena?
<oldornew>	because i'm going much further than this which shifts the benefits further into a different way of programming.
<ams>	oldornew: i have here a 20 million line code base,  i just renamed a global function, 2 seconds.
<oldornew>	but anyway i'm out of here, i just wanted to know if other languages are doing something similar.
<ams>	yes, all of them.
<oldornew>	ams: and put behind a namespace and fucked up your formatting.
<ams>	oldornew: what formating?
<ams>	i don't care about formatting, never have.
<ams>	computer does it for me.
<aidanh>	eh, it's probbaly all lisp code, it looks ugly anyway :p
<jkbbwr>	i will never insult lisp. its smarter than me.
<ams>	haha .. this was c code infact :-)
<ams>	and gcc to be exact ...
<aidanh>	i actually sort of like cl's syntax
<jkbbwr>	doesn't mean i will ever *learn* lisp.
<aidanh>	oldornew: then what sort of benefits would there be?
<aidanh>	it sounds like you're moving in the direction of automated code editing and augmentation, which is something e.g. haskell already solves quite nicely in text
<ams>	ro smalltalk ..
<ams>	or lisp ..
<ams>	or colorforth ..
<hotcoder>	is my client working?
<ams>	no.
<hotcoder>	ok
<rindolf>	hotcoder: hi.
<rindolf>	hotcoder: seems like it.
<hotcoder>	yeah it is working
<ninjapenguin>	hotcoder: depends what you consider working.
<lf94>	ams
<lf94>	need your cl knowledge
<lf94>	can you print hex with cl
<rindolf>	lf94: i think format can do it.
<lf94>	like python has a nice hex() function
<ams>	yes
<lf94>	(hex 256)
<ams>	(write-to-string 123 :base 16)
<lf94>	make it into a hex function
<ams>	(defun hex (x) (write-to-string x :base 16))
<ams>	(hex 123)
<lf94>	nice
<lf94>	so sexy
<ams>	it returns a string, not a number though.
<lf94>	that's acceptable, i think.
<lf94>	python does the same, i think...
<ams>	these are all exactly the same: 123 #x7b #o173
<oldornew>	ams: "and what meta data? ... like seriously?" <- like seriously??? can't you see any way to improve the current way of doing things, or is the current way always the best way? are you really old? - hmm, let's start with something simple. how about for every function, a list of all functions it calls and so on through the call hierarchy. and how the arguments are passed in and how they travel through the call hierarchy. so
<oldornew>	that the 'ide' (platform) will instantly notify you, that, say the stack allocated var that you just passed a ptr to through a function looks like it could get saved on the heap and exceed the lifetime of the stack var. a possible alternative to how rust does things. - other areas to explore are features that were deemed too ugly to implement because they had to be displayed through text. if you always edit things through an
<oldornew>	'ide' the features made can be made to fit an ide, rather than text form. but of course you already thought about all that and deemed text superior..
<ams>	oldornew: (who-calls 'car) returns a list of all functions that call the car function.
<oldornew>	what? and?
<ams>	oldornew: but yes, i'm really this old .. i'm used to environments where it is normal to do these kind of things .. environments that are 30 years or older ..
<oldornew>	and it's the kind of environments i asked about if existed. i don't think i've gotten one reply to that. except stuff like smalltalk, which appears to be programmed through regular text editing?
<oldornew>	so not sure what you're on about there
<ams>	and we have continously explained that they do
<ams>	for 30 years and more.
<oldornew>	that they do what?
<ams>	lisp, smalltalk -- this kind of working is normal.
<oldornew>	no, again, get this through your head. both of those are normal languages programmed through a text interface
<rabit>	i wouldn't mind a c++ ide that continually profiled code as i edit it
<ams>	i'll put you on ignore now ..
<ams>	oldornew: again, smalltalk does not do that.
<oldornew>	does not do what? what does it do?
<nizumzen>	rabit: i imagine running a profiler in the background all the time would slow things down a lot
<ams>	15:18 /ignore oldornew
<ams>	nizumzen: what would be nice though is highlight lines as red/green depending on how coverage is done everytime you run the test suite ..
<rabit>	nizumzen:  not in a background low-pri thread.
<rfreeman_w>	ams could you stop being such attentionfag with announcing that you /ignore someone each time i look at the channel log
<nizumzen>	ams: yeah that would be good
<nizumzen>	rabit: ah yeah i guess
<rabit>	ibm had a java ide that did all sorts of background stuff as you edited code.  i think it was the precursor to eclipse but not sure.
<ams>	rfreeman_w: no, and please refrain from personal attacks.
<lf94>	09:22 /ignore rfreeman_w
<ams>	=)
<lf94>	joking but still don't be an ass rfreeman_w
<ams>	rfreeman_w: and homophobic remarks like that as well are against channel rules.
<rfreeman_w>	ams, go call politcorrect police
<felishia>	don't argue guys :c
<njcomsec>	samsung is best
<njcomsec>	best programmer come from kora
<felishia>	in what field?
<njcomsec>	korea
<rabit>	uh
<njcomsec>	all field
<felishia>	i hate samsung cellphones xd
<felishia>	too over complicated with all that sensing they've added!
<felishia>	i just want to call someone!
<njcomsec>	apple is for stupid usa people
<rabit>	then why does my samsung fridge fail to reboot after blackouts?
<felishia>	rabit, xd
<felishia>	now that made me laugh!
<rabit>	samsung makes good displays, but they seem to push out hardware before they've properly tested it.
<rabit>	and then try to cover up defects with software fixes.
<lf94>	why the hell does x get slow even after i restart it?
<lf94>	even after a reboot
<lf94>	it is still slow
<lf94>	i have to wait until it clears something
<rabit>	note google nexus 10 tablet flash memory bug
<jeaye>	doesn't sound like x to me, lf94. sounds like your own system's issues.
<felishia>	why can
<felishia>	i write in google source if the code doesn't get executed xd
<lf94>	jeaye, my system runs x fine like 95% of the time
<felishia>	google sources
<ams>	wee! 900 mark!
<lf94>	jeaye, x runs fine on my netbook for christ's sake :(
<jeaye>	lf94: what's different the other 5%?
<jeaye>	ams: 900 what?
<lf94>	it's slow as hell?!
<lf94>	everything just slows right down
<jeaye>	lf94: what _else_ is different?
<lf94>	uh
<ams>	jeaye: tests!
<felishia>	how's the hell slow?
<lf94>	usually it is caused by opera or chrome
<jeaye>	cron job running, is it the filesystem, is anything else slow?
<lf94>	no no no
<lf94>	just x.
<jeaye>	ams: for what?
<felishia>	x is usually quite fast
<lf94>	but, i will check the filesystem next time
<lf94>	felishia, exactly.
<lf94>	it is chromium-based browsers causing it
<felishia>	lf94, i have that problem
<jeaye>	use fx then. :p
<lf94>	fx has its own memory issues.
<felishia>	chrome and chromiun crashes lightdm, and my computer won't play video anymore, not even a restart works...
<ams>	jeaye: hardware driver for a telescope
<lf94>	felishia, yep sounds like what i have
<aidanh>	in my experience firefox has nicer memory usage than chrom*
<felishia>	lf94, well what i had was hardware damage
<jeaye>	ams: neat! in cl?
<felishia>	something with the chipset
<ams>	jeaye: all of it!
<lf94>	aidanh, in my experience, leave firefox on for a couple days and 100% ram usage happens
<felishia>	and for some reason what triggered the problem was chrome and chromium
<felishia>	however in fluxbox, everything worked well
<jeaye>	ams: excellent. functional or unit tests?
<ams>	property ..
<lf94>	ams can we see a snippet
<felishia>	and youtube, media, or flash based stuff, was inmediate crash
<jeaye>	ams: why do you need the driver? was the existing one insufficient?
<aidanh>	lf94: ah, well i don't often leave it running for more than a day or two, so i wouldn't notice that
<lf94>	opera is really nice too :<
<lf94>	i like the new opera
<rabit>	i don't know what the deal is with every plugin/addon in chrome needing 50mb+ just to .... reside
<lf94>	better than chromium and chrome
<aidanh>	perhaps there's a number-of-tabs-to-keep-resident setting you could fiddle with or something
<felishia>	firefox is slower than chrome in my country
<felishia>	yet i can't understand why
<ams>	jeaye: the existing one didn't exist
<jeaye>	ams: ah, but the hardware is well enough documented for you to hook it up yourself?
<jeaye>	very nice.
<jeaye>	or very painful.
<ams>	jeaye: ... well, most of it no .. :)
<jeaye>	as expected.
<ams>	some of it .. yes ..
<rabit>	chrome definitely seems faster than firefox, just don't understand why it wastes ram
<felishia>	rabit, the thing is that it doesn't just seem in my case, it is... even if it wastes more ram
<lf94>	rabit, that's why it's faster.
<lf94>	everything is loaded into ram
<felishia>	lf94, lol xd
<rabit>	no, it doesn't need to be.
<lf94>	your user experience says otherwise
<felishia>	rabit, but my linux swappiness configuration forces data to be saved in ram!
<rabit>	lf94:  there's no reason for plugins that do very minor things to have 50mb of ram
<anj7>	lf94: did you see the .obj file?
<lf94>	anj7: i haven't...played some super smash bros brawl, watched some teen titans, and skyped my mom and brother.
<anj7>	lf94: oh, ok. np
<lf94>	when i do you'll be the first to hear my comments
<csd_>	can someone please read the following problem + recurrence relationship i wrote and tell me if i'm analyzing the problem correctly? http://pastebin.com/ampf8xgc
<rabit>	felishia:  on linux, i used swapd for a bit - dynamically creates swapfiles.  handy
<felishia>	rabit, actually sounds like a good solution
<felishia>	i always wonder why linux uses that swap partition anyway
<felishia>	it should just give an alarm if you're running out of space
<felishia>	most of the time, this partition is not even used
<rabit>	a small bit of dedicated swap is very good to have.  it really is useful on linux where daemons load but do nothing until an event occurs - why keep them occupying precious ramspace?
<felishia>	specially with swapiness of 10 :p and debugging javascript only with xchat open meh xd
<felishia>	i have 4gb of swap, usually
<rabit>	linux can swap them out and use that memory space for hard drive caching.
<exio4>	the swap is used for hibernation
<rabit>	on linux?  i know windows has a dedicated file for hibernation which is equal to the size of your system's ram
<jkbbwr>	rabit: plus a tiny bit more
<exio4>	rabit: yes
<rabit>	jkbbwr:  well of course :)
<rabit>	but hibernation needs to save the entire ramspace and most people follow the suggested swapspace=1/2 system ram
<exio4>	i actually have more swap than ram
<oldornew>	i'm already almost assuming the concept of a split between ram and hard drive doesn't exist, which will be the case in the near future.
<exio4>	and i have 12~gb of ram :p
<oldornew>	no swapping, no needing to load and save to hard drive
<exio4>	oldornew: we're not close to that lovely future
<oldornew>	exio4: yeah we are
<felishia>	rabit, once i deleted the hyberfile.sys and the computer died... meh windows... >.>
<oldornew>	i mean memristors might be a bit slower than ram, i hear. but much much faster than sdds of course.
<oldornew>	ssds*
<rabit>	felishia:  yeah, windows is touchy. you have to do that thru powercfg.exe (i think i have the name of that right)
<felishia>	i did that from linux
<exio4>	oldornew: mass memristors are not going to be in the near future, i think
<oldornew>	exio4: maybe not, but the massive semiconductor industry has to do something, right? moore's law is a creativity death trap, and it is ending soon.
<felishia>	gparted was giving an error that the system was hibernating... aka turning off according to windows 8, it made me mad and i removed the hiberfile xd... ended up destroying windows 8
<rabit>	oldornew: ssd is ram, functionally the only distinction is the bus that carries the data, and ssd bottleneck is sata.
<exio4>	rabit: ssd is not ram?
<rfreeman_w>	is there a software license between gpl and openbsd, that says that if you [ use our code etc, as in gpl ] then:  you do not have to publish resulting code, but you are not allowed to ever impose any licence (other then this one) on anyone who would be in posession of your code?
<oldornew>	rabit: even without the sata it's too slow, no? and it doesn't scale at all. there are already huge problems with it.
<rabit>	exio4:  a very weird, high-level managed ram
<oldornew>	rabit: and not to mention how few writes it can sustain. it could never function as ram.
<rfreeman_w>	so your derivide code is gpl (or this free-gpl),  with one exception: you do not have to actually publish it (you are not liable if you do not take this action)
<aidanh>	oldornew: ssds are muuuuch faster than the bus
<rabit>	oldornew:  ssd is infinitely fast, just add more redundency.
<exio4>	lol
<rabit>	oldornew:  errr, parallel memory systems
<oldornew>	lol it's a troubled technology that will never be able to replace hdds. if it weren't for memristors, we'd have a permanent split between hdds and ssds.
<oldornew>	instad, we'll have memristors replacing both
<oldornew>	and ram
<oldornew>	but not the cache of course
<aidanh>	many computers only have ssds now; how does it qualify as a troubled technology?
<rabit>	ssd seems to be doing quite well.  just added two samsungs 850s to a laptop.
<rabit>	120gb ssds are $50 now!
<oldornew>	the data errors increase too much as the capacity increases
<aidanh>	data errors are managed and hidden by the ssd controller
<oldornew>	they just won't scale like memristors will
<oldornew>	not even close
<rabit>	actually, they're pretty reliable now, and they have rather smart hardware that does parity/ecc
<aidanh>	besides, look at hard drives; they can give up with basically no warning
<rabit>	and ssds scale tremendously well.
<aidanh>	and ssds are $50 for 120gb right now
<oldornew>	they're not the future, they are a temporary solution, a bad solution at that
<aidanh>	why are they a bad solution?
<rabit>	a friend of mine has run a datacenter for years that has moved to ssd and failure rate as dropped.
<rabit>	so, that's thousands of ssds in operation - pretty good test case for their reliability.  they are basically a raid within themselves.
<felishia>	my little pony parody on tv xd
<aidanh>	rabit: ... that's an interesting observation
<rounin>	120gb ssds for $50... i'd like to get one under $70
<rabit>	best buy near me as crucial ssds - $51 for 120gb, $120 for 240gb
<rounin>	not bad at all
<rabit>	or go ebay and get an 80gb for $30/$40
<rabit>	i'm putting ssds in all my old laptops.  it's insane how nice it speeds up the 5 year old macbook pro i'm usng now :)
<exio4>	i'll be (hopefully) buying two ssds for my root filesystem, plus two 3tb hdds
<exio4>	unless someone can find two ssds for the same price, i won't be switching my hdds to ssds :p
<ninjapenguin>	exio4: are you on a laptop?
<exio4>	desktop
<ninjapenguin>	then get an ssd next to a hdd.
<exio4>	?
<exio4>	that's (pretty much) what i said i will be doing?
<rabit>	hybrid ssds are nice.  have used all 3 gens of momentus xt
<anj7>	a laptop having ssd is very costly.
<ninjapenguin>	oh. i just saw you say that you won't be switching hdds to ssds.
<njcomsec|2>	korea has best ssd
<rabit>	the 2nd gen 750gb momentus xt drives are the best imho.  7200rpm and slc (not mlc) flash
<ninjapenguin>	and i was like why would you switch.
<rabit>	just put a wd black2 - a hybrid that actually pops up as a 120gb ssd and 1tb hd in a single device.
<anj7>	how i buy a lappy with ssd or hdd?
<rabit>	(apparently doesn't work on mac or linux tho)
<anj7>	the majority wins
<exio4>	ninjapenguin: if i switched, i'd either need extremely big ssds, or more ssds than what my mobo could handle
<ninjapenguin>	yeah but why would anyone switch?
<ams>	ok .. i give up for today..
<exio4>	rabit: i don't want extremely expensive single-hdds setups, i try to keep my hdds easy-to-replace
<rabit>	best solution is to have both, if you can.  ssd for system and /home - hd for steam games and big apps you don't use every day.
<exio4>	/home?
<rabit>	 /users on windows, /home on linux
<exio4>	why not put your whole /home in the hdd?
<exio4>	rabit: i know, i just mean, why?
<rabit>	because you want to experience the benefits of ssd ;)
<aidanh>	rabit: that's pretty much what i do
<exio4>	well, maybe our /home(s) are different, then
<aidanh>	i have a 250gb ssd, and a 750gb hdd, and just symlink certain directories onto the hdd, e.g. tv shows and virtualbox images
<rabit>	on linux, the benefits of ssd or less apparently thanks to the kernel's aggressive caching
<jkbbwr>	one of these days im going to get 128gb of ram, and host a windows install inside a ramdisk
<rabit>	hahaha
<jkbbwr>	rabit: who is kidding
<exio4>	running stuff in a ramdisk is a neat approach
<rabit>	there's a company that sells ssd on pcie, 1.5gb/sec
<exio4>	anyway, my whole system is encrypted
<exio4>	so i don't think the ssd will be a bottleneck
<rabit>	heh, yeah - probably not
<exio4>	the only valid reason to use a ssd is as a swap
<exio4>	but apparently that's not so nice for the ssds
<rabit>	i think sata drives have a special feature where you can lock your drive in the bios if you're super paranoid
<exio4>	i trust software-level encryption more than hardware-level blocks
<ams>	both have problems.
<ams>	the bios stuff is easy to workaround.
<ams>	software stuff is also relativley easy to work around .. depending.
<rabit>	at least i remember that being utilized by some company that sold movies 'over the air' - you buy a system and it came with 100s of movies already on the hd, but the drive utilized the locking feature - unless you quickly swapped the sata cable after the bios unlocked the drive - instant access to 100s of movies.  but you didn't hear that from me.
<ams>	either ruberhose or just keylogger ..
<ams>	it all depends on the attack vector you are trying to defend ..
<exio4>	ams, i don't know how a keylogger helps
<icefirexd>	yall should join the real channel about programming, #anime
<exio4>	considering there's no passphrase typed anywhere
<rabit>	the built-in drive protection though is really hard to crack.  basically a mode in sata drives that allow you to lock it with some long key that needs to be resent when the drive starts up - could be passphrase derived.
<ams>	exio4: it isn't that hard ..
<ams>	rabit: ^^
<ams>	exio4: if there is no passphrase, even simpler.
<exio4>	ams, you'd need to steal the key, and i don't see how more than tweaking the initrd that'll be setting up everything and steal it at that moment would work there
<ams>	exio4: if i have physical access, all things are mostly trivial.
<exio4>	yeah
<exio4>	with physical access and the user, it's trivial
<rabit>	i remember when someone used gnuradio to sniff wireless keyboards/mice and found that logitech's wireless standard that they used for many years wasn't very well encrypted (or at all - can't remember) - and so anyone could sniff what you typed.
<ams>	exio4: nah, not even user .. just physical access.
<ams>	exio4: but it also depends on .. why do i need acces?
<ams>	if it is your porn stash .. i really don't care ..
<exio4>	ams, i would like to know how you would "hack" in there
<ams>	if it is the full documentation, schematics, and all assets from symbolics, inc. .. i might spend some effort on that .. include robber hosing you ..
<exio4>	you'd need to break really strong cryptography to break in
<lf94>	who is the real you when you are cloned
<rabit>	hahaha, symbolics inc?  probably stored on a stack of decaying backup tapes somewhere
<lf94>	you are the same beings
<lf94>	the only difference are your experiences
<ams>	exio4: nah.. i wouldn't.
<lf94>	actually
<exio4>	ams, then how would you do it?
<ams>	exio4: robber hose you.
<ams>	rubber hose ..
<ams>	or just pay you off ..
<ams>	:-)
<lf94>	your clone would probably die if it was cloned to be the same age as you
<exio4>	ams, but then you need the user
<ams>	there is always a user.
<rabit>	i would *love* it if some of this old data could be put in an archive somewhere. computer history museum maintains an archive of some old software i believe.
<ams>	rabit: mm... i know right?
<ams>	rabit: but symbolics is a zombie corp ..
<exio4>	exio4 | with physical access and the user, it's trivial
<exio4>	 ams | exio4: nah, not even user .. just physical access.
<rabit>	ams:  i would love to have the source code for some of their old graphics applications
<ams>	just physical access is eno
<ams>	gh.
<ams>	keylogger, whatever .. sniffer on the ethernet card, lots stuff to put bugs in
<ams>	rabit: which ones?
<exio4>	if i gave you my hdd, and i went to other cty, when i came back, you wouldn't have the data
<rabit>	ams:  mirai - which i guess changed hands but is now, again, defunct
<exio4>	this is what i meant, and pretty much why i want encryption
<ams>	rabit: that was never bolix stuff ..
<ams>	exio4: would you plug in that harddrive after i had my hands on it?
<rabit>	ams:  according to wikipedia, it was s-geometry at symbolics - was used for gollum's facial animation on lotr
<exio4>	ams, i wouldn't really plug that one, but the other one of the raid :)
<exio4>	that i kept with myself
<crocket>	hi guys
<ams>	exio4: and byt physical access i mean: me doing stuff to your hdd without you knowing.
<crocket>	i'm looking for programmer salary information
<exio4>	i knew
<crocket>	it seems indeed.com shows way lower salaries for the same companies than glassdoor.com
<crocket>	what is going on?
<ams>	rabit: it was really nichimen graphics that did it .. s-geometry wasn't a 3d thingie ..
<crocket>	programmer salaries listed on glassdoor.com are twice those on indeed.com
<rounin>	crocket: could the salary information be based on sampling?
<ams>	rabit: i have some of the s-stuff ..
<crocket>	rounin, it is based on anonymous information.
<crocket>	anonymous individual samples
<rounin>	crocket: ah... so perhaps one or both has a low sample size
<crocket>	for the same company, glassdoor says 99k, and indeed.com says 46k
<crocket>	what the hell
<exio4>	ams, i still don't know how anyone would hack without the user and/or without coercing the hardware but not the hdd itself
<ams>	exio4: log signals on the buss.
<rabit>	ams: yeah, i played with mirai for a bit on a pc belong to one of the guys responsible for gollum ;)
<crocket>	i surmise 46k is not for programmers.
<rounin>	crocket: perhaps they have exactly one sample each: one highly experienced engineer from san francisco, and one female h1b worker from bangladesh, respectively
<crocket>	programmers deserve better than 46k/year
<ams>	rabit: though i think it is mostly the s-utilities stuff ... not s-graphics ..
<crocket>	rounin, possibly
<fiki>	crocket that depends
<exio4>	ams, well, if you logged everything, i am pretty sure it'd be possible
<inphase>	crocket: that depends on the degree status, what they're programming, and their experience.
<crocket>	what if indeed.com is almost always low?
<ams>	rabit: know any any places that still use lisp machines, or used them?
<fiki>	inphase also where they live
<exio4>	ams, just in theory, i don't see how feasible that is
<inphase>	crocket: i've usually found indeed.com more accurate, since they tend to rely more on statistical measurements.  glassdoor seems to be more biased by self-selection biases.
<ams>	exio4: quite feasible.
<rabit>	ams:  none that i am familiar with, which is a shame.  it's a great environment.
<ams>	exio4: you wouldn't notice it until it is to late ..
<crocket>	damn....
<ams>	rabit: bummer .. i'm harvesting .. archiving .. such stuff.
<inphase>	crocket: however the values you get will depend very heavily on what exactly you looked for.  different job titles may yield very different results for the same field.
<exio4>	ams, well, any papers to that?
<crocket>	the job title for a 46k/year job is not specified.
<rabit>	ams:  i know that naughty dog software (game studio behind uncharted, etc) started out using lisp for their early titles.
<crocket>	but, on glassdoor, programmers make 95k at least.
<ams>	exio4: none needed, the signals are unencrypted.
<exio4>	ams, ?
<inphase>	crocket: if the title is not specified, then don't put much meaning to it.  it could include janitorial staff and cafeteria workers.
<exio4>	ams, i am talking about any resource about that kind of 'cracking'
<rounin>	and here i'm making a bit less than 65k
<crocket>	inphase, or, test munchers...
<ams>	exio4: yes, and it is trivially stupid.
<rounin>	though norway isn't exactly a thriving market for programmers, to be sure
<ams>	exio4: you log the wires, done.
<rounin>	even so though
<crocket>	rounin, neither is switzerland.
<ams>	exio4: i restore old crappy drives like that..
<crocket>	rounin, if the job is so fun that you don't need money to be on the job, then fine...
<rabit>	interesting, they were using lisp until being bought by sony and forced to use c++ http://en.wikipedia.org/wiki/game_oriented_assembly_lisp
<exio4>	ams, if it is so trivial (after you log), give me a link
<ams>	rabit: mm..
<ams>	exio4: uhm, you go hit a search engine.. i don't have links for shit i do everyday.
<exio4>	ams, cool story
<rainb>	what link?
<rounin>	crocket: yes... hm, it pays the rent, but no... i'm looking to move on
<exio4>	how to crack whole-disk encryption by just logging things in a computr
<ams>	rabit: naughty dog still in business?
<ams>	exio4: you are confused, nobody is talking about cracking whole disk encryption.
<exio4>	...
<wei2912>	lol
<rabit>	ams:  oh yeah, they're uncharted games for the ps3 are possibly the best titles for that platform.
<exio4>	ams, i said "encrypted my whole-system"
<crocket>	rounin, you deserve at least 100k per year.
<ams>	exio4: yes, which is trivially unencrypted using a logger and physical access to the machine.
<fiki>	crocket lol
<exio4>	which kind of logger?
<wei2912>	a keylogger
<ams>	either that, or a hard disk logger.
<exio4>	hard disk logger as?
<ams>	as what?
<rounin>	crocket: thanks for the advice! i'll keep it in mind for the round of negotiations to come
<exio4>	i don't know how that would help there
<exio4>	there's no key in the hdd
<ams>	uhm, how not being able to read all reads and writes would not help .. ok
<ams>	16:41 /ignore exio4
<crocket>	rounin, however, your company won't give you that promotion.
<ams>	(and faking writes at that ..)
<crocket>	rounin, you want an external promotion.
<wei2912>	ams: that's a way too trivial case
<rabit>	ams:  i would not be surprised if other studios are using some variant of lisp/scheme in their scripting system.  i know of one engine developer at dice (battlefield games) who's a huge lisp fan and i believe is working on his own interpreter
<ams>	wei2912: i know, right?
<exio4>	lmao
<wei2912>	not sure if you do
<wei2912>	don't ignore me for that
<fiki>	rounin the problem is programming can be often easily outsourced and there are kids in india who are way good at it who will do it for date money
<ams>	rabit: meh, not interested in such hobby projects ..
<rounin>	crocket: of course! that's why i'm looking for other opportunities
<inphase>	exio4: ams is referring to the possibility of installing a hardware logger, waiting for you to use the drive again without noticing the logger, and then intercepting the data as you use it.
<rounin>	crocket: if they were going to increase my salary, they would have done so already
<exio4>	i was asking which kind of logger, because the hdd only gets reads and writes of encrypted blocks
<ams>	rabit: every single dick joe and jane have written a meta evaluator at some point, and it isn't very exciting to see yet another parenthesis based language that is totally unusable for real work :(
<rounin>	fiki: indeed! there was just a huge strike earlier this year, after they outsourced a bunch of airplane pilots
<rabit>	ams:  well, okay
<wei2912>	the data on an encrypted hard drive is decrypted in ram, right?
<exio4>	yes, in ram
<rounin>	basically, it's gone from being a highly paid job to a very moderately paid one... airplane pilot, that is
<ams>	rabit: was hoping if you knew any place that had bolix machine ..
<rounin>	the same could happen to programmers any day
<ams>	rabit: had, or has ..
<exio4>	you need access to the running system to steal the ram though
<exio4>	"steal"
<inphase>	exio4: the data is either decrypted on the drive and transmitted across the bus in plaintext, or decrypted in memory by the cpu.  either way, it is available decrypted before use, and can be intercepted at that point, if and only if a person has unrestricted and undetected access to the machine prior to you using it again.
<wei2912>	so how'd a hard drive logger obtain any unencrypted data?
<fiki>	rounin airline pilots in the us in normal companies are paid sometimes as low as 25k a year
<rounin>	fiki: on the other hand, i've heard several people say that in the long run, it helps to have people on site
<rabit>	ams:  i don't even know what a bolix machine is
<wei2912>	inphase: ah, thanks
<exio4>	wei2912: the hdd logger wouldn't
<ams>	rabit: lisp machine from symbolics .. :)
<wei2912>	well, night
<wei2912>	got to prepare for exams
<rindolf>	wei2912: good night.
<exio4>	inphase: yes, it is available, i am just talking it's far from being feasible if it is decrypted on ram
<wei2912>	rindolf: thanks
<rindolf>	wei2912: good luck!
<rabit>	ams:  ahhhhhh, no idea.  possibly computer history museum.  met steve russell there :)
<fiki>	rounin well it's hard to outsource completely because of different things, but just because of the sheer size of india and china, you will get a ton of unemployed good programmers there and competition is beyond fierce. math education there is getting crazy competitive.
<exio4>	inphase: as you'd need the system to be compromised for being able to compromise it, or a way to get ram dumps
<inphase>	exio4: it's quite feasible if one has the resources of a police department or intelligence agency and can break into physical locations undetected, install things, and get out, as part of a covert or secret investigation.  this is not the sort of compromise one can do on stolen or confiscated equipment however.
<rounin>	fiki: frightening indeed
<ams>	rabit: know him well enough to ask him to dump stuff?
<rounin>	perhaps we'll all be living in india in the end... at least they've got good food
<rabit>	ams:  haha, no.  i don't think that hardware is easy to come by.  seen a symbolics machine pop up on ebay before .
<crocket>	rounin, india is dangerous.
<exio4>	inphase: i was asking for a simulated environment where they did that
<ams>	rabit: well, david schmidt still stells hardware .. but as a symbolics representative .. he ain't to keen on dumping soure code ;-)
<rabit>	ams:  they have a 3640 on display
<fiki>	though china is winding down with the number of new graduates i think, india is speeding up
<crocket>	fiki, i was paid as low as 23k a year at my last job 3 months ago
<crocket>	now, my salary is about to go up to 95k
<ams>	rabit: and he is having an acution now with a bunch of lisp machines .. mostlyu macivories
<crocket>	fuck my last employer
<rabit>	ams:  ah damn - why can't these guys just let their code go... :)
<exio4>	inphase: i am not saying it is impossible, btw :p
<ams>	i know right ..
<exio4>	it's just that i consider that posibility to be extremely, hm, complicated to achieve?
<ams>	http://www.ebay.com/itm/symbolics-macivory-model-3-co-processor-in-apple-mac-quadra-700-with-genera-8-3-/111662317576?pt=lh_defaultdomain_0&hash=item19ff97c008
<ams>	only 3k ... heheheheheheheh
<crocket>	how could you pay rents with 24k a month?
<crocket>	you can't even raise kids with that.
<rabit>	ams:  oh wow!  hmmm  and he's got a bid.
<rounin>	crocket: i'm kind of torn on the issue.. my first employer paid me just shy of $52k, but they were the only ones who would hire me at the time, and they allowed me to take on responsibilities that my later employers haven't so far
<inphase>	exio4: certainly.  i was simply explaining what ams was referring to, since he tends to speak as if only the technological concerns matter.  obviously there is a significant social and physical difficulty in pulling off that sort of compromise.
<ams>	rabit: well ... http://www.ebay.com/itm/161689880284?rmvsb=true
<rounin>	crocket: only, i quit after a while, of course, and they had no strategy in place for retaining me
<crocket>	rounin, autonomy means a lot, yes.
<exio4>	inphase: ah
<ams>	rabit: that one went for 5k ..
<fiki>	crocket i'm also seeing a new trend that the better the employer the less they pay you
<fiki>	crocket they are actually charging you a premium for working in a great company
<crocket>	fiki, not alway
<crocket>	s
<rabit>	ams:  heh, i should start selling some of my collection of crazy rare vintage stuff
<crocket>	fiki, i was paid 23k per year at my last job, and the management at my last company was pushing a lot of unpaid overwork on every worker.
<crocket>	i alone refuse unpaid overwork, and i was fired.
<fiki>	crocket i've seen microsoft job offers with like 35k salary, and ibm with like 30k which is insane considering how much knowledge and competition there is to work at those companies
<crocket>	the rest of my last company became uncomfortable about the fact that i was the only one who refuse unpaid overwork.
<exio4>	inphase: i still want to know what'd be the a way to take ram dumps at the hardware-level, and save them, while still being stealth (aka not add a harddisk to the machine that you'll be later taking out :p)
<rounin>	some companies just don't know what's good for them
<crocket>	fiki, that's more like an internship.
<reaga>	hey
<ams>	rabit: you might get rich .. heheh
<crocket>	fiki, some elite-course jobs start at a low salary, yes.
<crocket>	fiki, but, most low-paid jobs are shitty as hell
<rabit>	ams:  seems like it, i hate going thru the hassle of selling stuff.
<ams>	nod ..
<ams>	wonder who the fuck shelled out 5k for a lisp machine though ..
<inphase>	exio4: the easiest way to do so undetected would probably be to flash compromised firmware to the motherboard, and find a way to work the desired behavior into there.  this is mostly invisible.
<fiki>	crocket i dont know if i should do the extra effort and become a software engineer or stick with my current field and just become and it consultant
<crocket>	fiki, some low-paid 'elite' jobs make you unemployable after a few years, and you're good to go.
<crocket>	fiki, i recommend you become a machine learning expert.
<crocket>	it is worthwhile.
<rabit>	ams:  me too.  i am not that nostalgic for decades old hardware - i'd be happy running a software emulator.
<fiki>	crocket consulting isn't as interesting but pays the bills pretty well, plus wouldn't have to do one year worth of courses more
<exio4>	inphase: i am considering that you need to save the ram dumps, or the logs, or anything, and that needs lots of space
<rabit>	ams:  or an fpga implementation of hardware
<fiki>	crocket well i'm doing a lot of statistics right now, so i guess i can get into that
<crocket>	fiki, consulting doesn't come with dues-paying periods, yes.
<ams>	rabit: yeah .. and that one is easy to come by .. (with source -- but don't say i told you that)
<horny-sama>	considering most western countries has turned into retail based economy, is it still worth it to study programming or cs
<rabit>	ams:  hahha
<ams>	rabit: i'd love to get more .. detailed description on the ivory.
<inphase>	exio4: well, i'm sure if you were sufficiently clever you could find a way to transmit that data across a network.
<rabit>	ams:  me too, that sounds like interesting hardware.
<crocket>	fiki, if you became a machine learning 'researcher', you would get the best jobs in the industry.
<ams>	to make a fpga ..
<fiki>	crocket you mean it's not paid well?
<crocket>	research jobs
<crocket>	fiki, well paid, and research-grade jobs
<reynir>	i don't really care about money
<ams>	rabit: right now my main goal is to make cold world dumps ..
<crocket>	fiki, do you know what dues-paying means?
<ams>	rabit: kalman reti .. last symbolics employee, says little on that topic .. sighs ..
<crocket>	fiki, dues-paying period is one in which the employer tests you with small tasks.
<exio4>	inphase: the only thing i can think of, that'd be movie-level like, would be hack into the computer some high-speed close-range small wireless device, and get the data saved somewhere else easily
<rounin>	horny-sama: programming is interlinked with basically anything and everything
<rabit>	ams:  there's a fairly decent write-up on wikipedia http://en.wikipedia.org/wiki/symbolics#ivory_and_open_genera
<fiki>	crocket ah i get it
<crocket>	fiki, consultants are not tested with small tasks.
<crocket>	fiki, in many companies, dues-paying periods are as long as 2 years.
<exio4>	inphase: i am talking about the bandwidth and space needs of such attack
<ams>	rabit: oh, it isn't bad .. i know more than what is wrtiten there ..
<rounin>	horny-sama: as long as you're not in the classical ballet business, it's quite likely that programming is involved... even then, someone needs to control the stage lighting and sound system
<rounin>	unless it's just an orchestra and some lamps
<fiki>	crocket consulting is a good career, but after i while i would get bored with it
<horny-sama>	rounin: coz most of the cs grads i know work in retail store like bestbuy which pays less than the retail that arts students work in
<crocket>	fiki, i think you have zero time to deal with dues-paying.
<ams>	rabit: i mean .. i'm sitting on the source code for it, the emulator, and some other stuff ;-(
<ams>	:-)
<rounin>	horny-sama: perhaps the particular place where you live isn't the best place for that
<fiki>	crocket so what is your suggestion :d?
<rounin>	horny-sama: where i live it's ok
<rabit>	ams:  hah, brilliant - they designed the chip in lisp, using their own hdl
<crocket>	fiki, deep learning and machine learning.
<ams>	rabit: yup ... ns ..
<crocket>	fiki, the top 10% of google is an ai company and hires machine learning experts.
<fiki>	crocket but damn that will require a lot of additional study, is it really worth it?
<ams>	rabit: that is another little side project: decompiler for ivory opcodes to lisp..
<exio4>	going afk, see you inphase :p
<horny-sama>	rounin: canada
<rabit>	ams:  now to get that _and_ the hdl design
<horny-sama>	ab, bc economy = shit for centuries
<crocket>	fiki, yes, you will help cause a lot of technological unemployment as a machine learning researcher. it's worthwhile.
<horny-sama>	canada not much tech
<ams>	rabit: yup yup yup .. me want ..
<ams>	rabit: and cold load dumper stuff ..
<crocket>	be a part of technological unemployment.
<fiki>	crocket lol
<rounin>	horny-sama: canada is big though, right
<horny-sama>	even the so called canadian pride blackberry is dying
<horny-sama>	rounin: big in size small in pop
<ams>	rabit: i'd settle for cold load dumper really :)
<crocket>	fiki, it's not a goal in itself.
<rounin>	horny-sama: if you live in like kaluutnatikutinut 300m from the north pole, i think i can guess what the problem is
<ams>	rabit: either for 36xx or ivory ..
<crocket>	fiki, however, most corporate machine learning jobs(90%) don't need researchers....
<crocket>	avoid them.
<crocket>	at least, you'll graudate them early
<horny-sama>	rounin: even ontario is still fuck
<horny-sama>	should have just go into arts and lrn not 2 be a austistic fuck instead going to tech
<horny-sama>	:<
<fiki>	crocket the problem is i did business informatics and software engineering have like 50% in common but the rest i would have to redo and that will take me a lot of time and i'm not that convinced that it will bring me too much additional benefit
<rounin>	horny-sama: yeah hm... it's not one big party here either, but we manage
<rounin>	i live in oslo, norway... we have one thing going on, which is oil, which is going badly
<horny-sama>	rounin: norway economy is 100% in better shape than us
<rounin>	it took me about a year to get hired the first time, i think
<horny-sama>	lol
<fiki>	i'm really torn on the issue what to do :d
<horny-sama>	1 yr is nth in canada
<horny-sama>	1-2 yrs wait time for female
<ams>	rabit: seems that symbolics doesn't have any more contracts with the dod either ..
<horny-sama>	3-5 for male
<fiki>	the reason i want software engineering is because i like it, but then again
<rounin>	sounds pretty bad, horny-sama
<rounin>	well, you could always try coming here
<horny-sama>	rounin: better than the states
<crocket>	fiki, i'd have to learn math and ml from scratch, however i finished andrew's machine learning class on coursera a while ago.
<horny-sama>	rounin: i don't speak norway language?
<rounin>	horny-sama: it's a disadvantage in the job market, but not a dealbreaker
<fiki>	crocket at least part of the math i got covered
<rounin>	horny-sama: my former colleague from australia doesn't speak norwegian either... he gets crap pay though
<crocket>	fiki, anyway, ai researchers are the best programming jobs you could get....
<rabit>	ams:  hmmm, i didn't realize they were still around
<ams>	rabit: "around"...
<rounin>	horny-sama: all depends on where you apply
<horny-sama>	rounin: as in how to get by in a day to day basis
<crocket>	it'll take 2-3 years to catch up with other machine learning researchers...
<rounin>	horny-sama: oh... everyone speaks english... the only problem is reading signs... and forms, maybe
<crocket>	fiki, you get corporate salaries for researches...
<horny-sama>	rounin: niceeeeee
<jkbbwr>	i want to be in research
<crocket>	fiki, microsoft hires researchers....
<rounin>	horny-sama: norwegian is basically english minus the french, so people have an easy time learning english... same as with the dutch
<crocket>	ai researchers...
<horny-sama>	crocket: applied to many jobs with microsofyt
<crocket>	microsofyt
<horny-sama>	pretty much they are like move to usa or ....
<ams>	rabit: they get like 36k from the dod a year ..
<rabit>	ams:  haha, wow
<fiki>	horny-sama i don't have a big problem going to the us for a good and salary tbh
<fiki>	good job*
<horny-sama>	fiki: me too but the program is getting a job first
<ams>	rabit: really frustrating though .. :/ would love to rebuild a clean image ..
<horny-sama>	bringing in foreign workers to the states = more money
<horny-sama>	so unless you are like the one, they will not brother with you
<fiki>	horny-sama what do you mean the one :d
<fiki>	as in neo? :d
<ams>	rabit: www.update.uu.se/~ams/zork.text
<horny-sama>	fiki: no just pretty good
<horny-sama>	neo be the ultimate programmer
<rounin>	brb
<fiki>	horny-sama i can be the one it will just take 3-4 years more out of my life
<fiki>	and i've already spent 5 on education so it's a tuff decision :p
<crocket>	horny-様
<rabit>	ams:  oh that's interesting!   now i need to get an emulator to play with this
<ams>	github has some cruft..
<horny-sama>	fiki: you need to eat. 3-4 yrs without food = death
<fiki>	horny-sama well my master plan is getting a part time job for that time in order to support my studies
<horny-sama>	fiki: just gangbang
<fiki>	but it will be a pretty frugal life
<horny-sama>	or if you are girl just be a whore
<horny-sama>	:p
<horny-sama>	have seen many whores that are bbws and be like 120hh
<ams>	horny-sama: stop that shit
<horny-sama>	ams: fine
<horny-sama>	but you know it is factual
<ams>	no, it isn't.  and stop that deemening bullshit.
<denommus`>	i wish i didn't go to work today
<felishia>	leaving :3
<jkbbwr>	felishia: bye
<felishia>	school time!
<rounin>	bye felishia!
<horny-sama>	denommus: no work no pay?
<horny-sama>	anyone has experience with mip3 creator c120 and how does it fiar against rpi2
<lf94>	mips 3 for life
<horny-sama>	lf94: coz http://store.imgtec.com/us/product/mips-creator-ci20/ has a built in wireless which translates to cheaper price in a sense
<lf94>	horny-sama, that is a nice small computer.
<horny-sama>	lf94: is like a rpi2
<lf94>	basically
<lf94>	but this looks more powerful
<horny-sama>	lol
<rindolf>	pulock2015: hi. i haven't seen it.
<pulock2015>	rindolf, downloaded the src now seeing through the code...c++
<rindolf>	pulock2015: ok, good luck.
<horny-sama>	https://www.youtube.com/watch?v=vsgka1awkxs interesting comparison
<horny-sama>	pulock2015: bro project?
<pulock2015>	horny-sama, you are following it?
<horny-sama>	pulock2015: don't even know what it is
<amigojapan>	there seems to be no espeak channel…   i am making a program to make espeak speak japanese… i am using the ipa phonemes system, anyone know how to make it pronounce words like the spanish like the spanish word floruro flɔɾˈuɾɔ in espeak phonems?
<amigojapan>	i need that kind of r sound
<pulock2015>	amigojapan, does your project come under nlp?
<gedamo>	natural language processing?
<pulock2015>	gedamo, yes
<amigojapan>	pulock2015: hmmm,   i am not sure i udenrstand yoru questions till
<amigojapan>	pulock2015: my program will parse japanese text and feed ipa phonems to espeak
<reaga>	hey
<amigojapan>	hi reaga
<pulock2015>	amigojapan, i dont know much about nlp....otherwise i would have understood under which field it comes...leave it you dont understand me and i dont understand you...
<amigojapan>	ok
<pulock2015>	amigojapan, not interested in network stuff?
<amigojapan>	pulock2015: i am into all kinds of programming
<pulock2015>	amigojapan, have you heard about the bro project on github?
<horny-sama>	amigojapan: 's up
<amigojapan>	nope pulock2015
<amigojapan>	hi horny-sama
<horny-sama>	no one has fucking heard of the bro project
<horny-sama>	url or none of us will ever know
<pulock2015>	horny-sama, search it up on github..i am seeing the source on my hdd
<amigojapan>	horny-sama: no need to be so aggresive my friend
<horny-sama>	amigojapan: i mean he seems like a promoter
<amigojapan>	ah ok
<horny-sama>	he is been saying about the bro project for 20 mins
<amigojapan>	i see
<amigojapan>	promoters usually give a url
<jkbbwr>	i just pushed the button.
<horny-sama>	good point
<horny-sama>	https://github.com/bro this one
<pulock2015>	it has indeed become very hard to good stuff on this planet...
<pulock2015>	amigojapan, do you know curl.h whats its used for...specifically?
<amigojapan>	pulock2015: i oculd guess it is a library to call curl… curl is a program that downloads web pages
<xeno_>	gah!
<horny-sama>	amigojapan: you manage to get a job?
<horny-sama>	in japan
<horny-sama>	coz last time we speak you got connection for a job applications and shit
<amigojapan>	horny-sama: i only work part time jobs….
<horny-sama>	amigojapan: that sucks
<amigojapan>	horny-sama: ah no,  that did not work out
<horny-sama>	japanese economy has tanked ever since 80s why japan?
<amigojapan>	horny-sama: it does not suck so much, cause i have plenty of time to work on my projects…  but i would not recommend it for someone that needed to work to survive
<horny-sama>	amigojapan: where do you get money so you can eat?
<amigojapan>	horny-sama: mostly inheritance
<horny-sama>	nice
<horny-sama>	forgot your parents = rothchilds
<horny-sama>	:p
<amigojapan>	:p
<pulock2015>	amigojapan, you are very lucky then you can freely work on your interests...
<amigojapan>	horny-sama: if i could find a good job, i would do it though,   just for fun
<amigojapan>	yup pulock2015
<horny-sama>	amigojapan: implying getting a good job is easy
<horny-sama>	:p
<amigojapan>	horny-sama: no, it  is not
<horny-sama>	amigojapan: i mean the global economy in general is sucking
<amigojapan>	horny-sama: i have gotten jobs in the past….    in america i worked at the collage i graduated teaching programming
<horny-sama>	amigojapan: you are phd or master ?
<amigojapan>	no horny-sama ,    it was a tech school
<horny-sama>	coz with undergrad degree nowadays, you can't teach in postsecondary level
<ams>	yes you can
<horny-sama>	ams: not in my place
<amigojapan>	horny-sama: my school was new englad institute of technology
<horny-sama>	at least not in canada
<amigojapan>	horny-sama: i actually only has an as, and plenty of certifications….   also, i was already working at the school as a work study student… so i kindof smoothly got accepted as a full time teacher when i graduated
<horny-sama>	amigojapan: as?
<amigojapan>	horny-sama: associates degree
<horny-sama>	ooo
<amigojapan>	only have*
<lf94>	time for bed.
<amigojapan>	gn lf94
<lf94>	amigojapan you're up late...
<lf94>	x)
<amigojapan>	lf94: i am waiting to skype with my mom still
<lf94>	ah, i did the same, but like 7 hours ago
<amigojapan>	lf94: my time difference is 14 hours
<inphase>	amigojapan: why not go the other 2 years to complete the bs there, if you have both time and money, along with a desire for an interesting job?
<amigojapan>	inphase: i chose to come to live in japan instead
<amigojapan>	inphase: i also dont believe in teh established educational system
<horny-sama>	amigojapan: how cna you inherit money when your mum is still alive
<horny-sama>	:p
<amigojapan>	horny-sama: my mom is in no condition to handle her money, and i am also added as inheriting form my father…. i also inherited some when my grandaprents died
<amigojapan>	inphase: i think eventually companies will accept people that have cetrifications instead of requireing bs or above…..       since it is just a formality that costs a lot of money….
<bacon1989>	i don't have a degree, and i work as a professional developer
<amigojapan>	inphase: also, i did not feel i learnt anything really new in school much….  sicne i had already studied lots of programming on my own
<bacon1989>	you can make a portfolio like a graphic designer, and find work that way
<inphase>	amigojapan: well, a good college program does what it's supposed to do, which is teach important knowledge and skills in a field.
<amigojapan>	bacon1989: congratulations , that is what i think will eventually lead in teh future
<amigojapan>	inphase: a smart person does not need to go to a collage to learn how to program
<cjz>	all of the recent college grads with cs degrees that i have personally dealt with, have no real world experience in anything usefull
<cjz>	what im curious about is if say google, really does care about understanding o notation and sorting algorithms.. do they put recent college grads on projects where knowledge of that is important?
<inphase>	amigojapan: your statement is true.  it's just a lot harder to verify that you have a sufficiently complete knowledge base in the subject without doing so.  (and more difficult to obtain a complete knowledge base.)
<amigojapan>	inphase: i also have plenty of personal projects to prove that i am a capable programmer http://amigojapan.github.io
<inphase>	amigojapan:
<inphase>	amigojapan: yeah, a large set of personal projects is your best bet at demonstrating that.  it will get you recognized by other programmers, but it may not get you past human resources during a job application.
<amigojapan>	cjz: understanding sorting algorithms is much less important than just knowing which sorting algorithm is best for a task, you dont even need to know hte internal working of the algorythm
<cjz>	amigojapan:  never had any cause to know more than collections.sort frankly
<amigojapan>	inphase: well, i am not in need to get a job or starve at the current time
<inphase>	cjz: i think there are very few programming career paths where o notation is irrelevant.
<cjz>	inphase: dont believe everything you think
<amigojapan>	cjz: i guess you need to know it if you are developing a programming language… depending on how low level langauge you are programming it in is
<cjz>	i wonder how many career paths are towards writing a programming language
<amigojapan>	cjz: much less than at application programming
<cjz>	iirc someone a lot smarter than me said all jobs are just crud apps and rbac
<cjz>	you dont need heavy o notation for that
<inphase>	cjz: you need to know o notation every time you have an application which accepts user data, performs some function with it, and must maintain some performance standard regardless of what the user throws at it.
<inphase>	cjz: which is most things.
<cjz>	inphase: thats ridiculous
<amigojapan>	inphase: computers are so fast, that depending on what you do, even inneficient programs will do
<cjz>	pull something off the wire, read the db, send it back on the wire does not need o notation
<amigojapan>	usually even inneficient programs will do*
<inphase>	amigojapan, cjz: do you guys remember dearhawk in here yesterday talking about making randomized programs to generate factoring algorithms?  it doesn't matter how fast computers are, there was no way for him to succeed because of simple o notation analysis of the problem size.
<nartila>	can anyone provide an example of how to solve i.)? http://i.gyazo.com/dd3e7006ad9d439403097df0593c4952.png
<amigojapan>	inphase: generatin factoring algorithms is not what a usual job needs you to do anyway
<cjz>	inphase: the argument is not whether o notation understanding in some cases, the argument is that its not needed in the vast majority of cases so why do they keep teaching that and nothing else
<inphase>	amigojapan: selecting good algorithms to process unknown sizes and quantities of user input, however, is a common task.
<nartila>	anyone?
<inphase>	nartila: is this homework?  what have you done to solve it so far?
<pyon>	nartila: solve what?
<pyon>	oh
<pyon>	nvm
<nartila>	inphase: yes.
<nartila>	pyon: there is no formula given to be able to solve
<inphase>	nartila: the formula is the table.
<pyon>	nartila: what inphase said
<pyon>	it's a frigging permutation ferchrissake
<pyon>	well three
<nartila>	so f(x) would be f(8)?
<nartila>	which is 5 on the table
<inphase>	nartila: for example, f(2) is the value of f(x) when x is 2, which is the third numbered column in.  so f(2) would be 7.
<pyon>	markand: no
<pyon>	nartila: *
<inphase>	nartila: correct.
<pyon>	oh
<pyon>	i misread
<nartila>	pyon: inphase: so g(h(f(8))) = 6(8(5(8)))?
<pyon>	nartila: that notation doesn't even make sense
<pyon>	g(h(f(8))) = g(h(5)) = ...
<inphase>	nartila: write it the way pyon said.  but your numbers are also wrong.
<znoosey>	sort of miss my math classes from uni
<amigojapan>	inphase: as cjz is saying,  most jobs are about reading data form a database, presenting it,  and also inserting new records, or modifying data from a database….   that is hte vast majority of web work in a nutshell…     in such a job, usually knowing which security things to protect against like sql injection, is way more important than being an expert at algorythms
<znoosey>	my work does not require any kind of maths :(
<pyon>	amigojapan: if you need to protect yourself against sql injection, you're already doing it wrong
<cjz>	my work literally is crud and rbac
<pyon>	amigojapan: that kind of thing should be impossible to begin with
<nartila>	inphase: pyon: the next input would be: h(f(5)
<nartila>	f = 4?
<amigojapan>	pyon: ok, well, you gotta know not to do it the wrong way
<pyon>	nartila: that notation doesn't make sense
<inphase>	amigojapan: well i'm not personally very interested in those jobs.  but even with those algorithmic efficiency is very important when the number of database entries becomes large.
<amigojapan>	pyon: also say, you gotta know how to store hashed passwords
<inphase>	nartila: you work from the inside out.  why did you take the g off?  try again slower.
<pyon>	amigojapan: that's exactly the problem - that there's a wrong way to begin with
<pyon>	amigojapan: if there's a wrong way, *always* some idiot will do it that way
<pyon>	amigojapan: murphy's law
<znoosey>	inphase: no, in web, if too many queries to the database, cache the queries and you are done
<amigojapan>	pyon: ofcourse
<pyon>	the only way to prevent that is to make the wrong way impossible
<znoosey>	pyon: good luck, tell me when you are done :p
<amigojapan>	pyon: well, my idea was using prepared statements, i dont know what you had in mind
<generalvagueness>	haven't seen rbac before
<cjz>	generalvagueness:  role based access control
<pyon>	amigojapan: sql as an embedded dsl
<generalvagueness>	ah
<darkelement>	so guys, other than python, c# is used for a lot of scripting, correct?
<wizziee>	scripting of what?
<darkelement>	just other programs
<darkelement>	like photoshop, unity, etc
<wizziee>	oh, that's what  you mean
<wizziee>	yeah, it's used in photoshop and unity
<aewffwea>	darkelement: it should, so i don't think it's actually done
<darkelement>	aewffwea, you mean it should be used for a lot of scripting?
<darkelement>	but isnt
<wizziee>	should?
<wizziee>	what do you mean
<darkelement>	i'm trying to figure out what aewffwea meant
<aewffwea>	darkelement: i dislike bash, powershell, and most languages that are commonly used for scripting
<aewffwea>	darkelement: i say we should kill them all xd
<darkelement>	o_o
<darkelement>	ok
<darkelement>	now i understand
<aewffwea>	darkelement: i'd take scripting in c# over any of those languages any day
<aewffwea>	darkelement: in particular in powershell, you can write/compile/execute c# inline...
<darkelement>	oh, i thought you hated all scripting for a moment there
<wizziee>	how is powershell a language?
<darkelement>	nice
<darkelement>	it's not a language
<aewffwea>	darkelement: i don't hate scripting, i hate that scripting languages are usually bad in my opinion
<aewffwea>	darkelement: it surely is a language
<darkelement>	what do you define as bad? python is pretty nice
<darkelement>	imo
<aewffwea>	darkelement: i wasn't counting python in that group...
<exio4>	what defines a language as a "scripting" one?
<exio4>	python is pretty crappy
<aewffwea>	darkelement: i don't like python but it's for difference reasons...
<wizziee>	nothing, it's a buzzword
<darkelement>	alright
<tommycannady>	i fixed the timing issue
<aewffwea>	exio4: there are many definitions of what "scripting language" means... as far as i know there isn't any "generally accepted definition"
<tommycannady>	if any of you that helped are around : )
<aewffwea>	exio4: i was referring to languages usually used only for creating "scripts" as in "bash/shell scripts"
<ninjapenguin>	my personal definition of a scripting language is a language that is more dedicated to making scripts rather than compiling it to actual executables.
<ninjapenguin>	for example, python, lua, perl, bash, and whatnot are what i consider scripting languages.
<aewffwea>	ninjapenguin: that's a valid definition, although it's subjective and it may change over time....
<ninjapenguin>	c++, c, go, haskell, et cetera aren't because they're meant to be compiled to native code.
<ninjapenguin>	aewffwea: true.
<aewffwea>	ninjapenguin: i'd argue that python, lua should be in a different group from perl and bash
<aewffwea>	ninjapenguin: i'd put perl and bash in the "very horrible group" xd
<exio4>	how is "haskell" meant to be compiled to native code?
<aewffwea>	exio4: gnc compiler
<aewffwea>	or something like that
<ninjapenguin>	exio4: by the fact that it is compiled to native code?
<exio4>	ghc, you mean
<exio4>	ninjapenguin: that's just an implementation
<exio4>	the same implementation has a well-used interpreter
<exio4>	ninjapenguin: the language itself isn't compiled nor interpreted
<tommycannady>	nice work guys
<ninjapenguin>	sure but i don't see you making scripts with haskell.
<tommycannady>	ttyl
<tommycannady>	i'll idle
<ninjapenguin>	it's not a language that i see as a scripting language.
<ninjapenguin>	that was my point.
<exio4>	well, i happen to write scripts in haskell
<aidanh>	tommycannady: with your game? nice
<aewffwea>	exio4: if you want to go "pure" most attributes people assign to languages, are wrongly assigned to the languages... they are more of the environment you use to work with that languages, or their compilers or runtimes....
<aewffwea>	exio4: most languages aren't dynamic or static if you want to be precise (when dynamic means metaprogramming, reflection, code generation at runtime, etc...)
<exio4>	aewffwea: how is it that most languages aren't dynamic or static, also, static what?
<exio4>	static typed?
<aidanh>	aww: well, nothing is static if you're running it in a repl
<aewffwea>	exio4: you can add dynamism as an user library without "changing" the language
<aidanh>	exio4: ^
<exio4>	having macros or metaprogramming doesn't make a language less dynamic or less static
<exio4>	aidanh: how's that?
<exio4>	also, specify which kind of static/dynamic you meant
<aewffwea>	exio4: it depends on what definition of dynamic you are using... although i consider to be valid the one i suggested there
<exio4>	if you meant dynamic typed, or what kind of dynamism?
<aewffwea>	exio4: i'm talking about dynamic languages, and static languages... dynamic typing is something else
<exio4>	what makes a language static and what makes a language dynamic?
<aidanh>	exio4: i actually think i meant to type that to aewffwea... :/
<aewffwea>	exio4: http://en.wikipedia.org/wiki/dynamic_programming_language
<exio4>	hm? i never heard that used that way, but sure
<pyon>	aewffwea: there are meaningful ways in which a language definition can limit how much static reasoning or dynamic metaprogramming you can achieve.
<exio4>	i never considered continuations, or closures a "dynamic" feature
<pyon>	exio4: heh, closures are pretty evident from the intuitionistic sequent calculus. nothing dynamic to be seen there. :-p
<aewffwea>	pyon: the problem is that you can add those features in most language with an "inside the language" user library.....
<pyon>	it's in the context? good! you can use it!
<aidanh>	pyon: dropping big words again.. :p
<exio4>	pyon: lol
<aewffwea>	pyon: i could certainly create a new c environment which supports an #include <metaprogramming.h> library which lets me do dynamic stuff on c....
<pyon>	aewffwea: i don't think i could possibly add first-class functions to (classic) vb in a library.
<aewffwea>	pyon: and my implementation could be 100% iso c
<pyon>	aewffwea: except perhaps as a really ugly hack involving lots of addressof calls.
<xgc>	aewffwea: good luck attempting that in c.
<pyon>	aewffwea: which would be utterly unsafe - just as unsafe as in c.
<aewffwea>	xgc: it's not that difficult
<aewffwea>	pyon: i'm just saying that a language doesn't determine the dynamic or staticness... the environment where you run the language does
<aewffwea>	technically speaking, you can take any dynamic language and say that everything is of type "object" and claim it's statically typed....
<pyon>	aewffwea: you can't have haskell or ml without static typing. it simply would be not haskell or ml anymore (tm).
<xgc>	aewffwea: you mean, essentially not possible in c.  i'd love to see what you consider "dynamic stuff in c".
<pyon>	aewffwea: yes, all languages are statically typed. it's just that some have just one type.
<denommus>	pyon: of course you can
<aewffwea>	you can also take any static typed language, and create a type "dynamic" which weird behaviors, and make it support dynamic kind of behavior in a static typed language (like c# does)
<pyon>	xgc: well, it's perhaps possible using macro-based hacks and lots of function pointers.
<denommus>	pyon: just use strings for everything!
<pyon>	denommus: lol
<exio4>	stringly typed languages are the best
<pyon>	denommus: well, at that point you're effectively interpreting another language.
<exio4>	psh, i was going to make an eval pun :(
<exio4>	thank you pyon
<aewffwea>	what defines the "characteristics" of the language, is actually the environment where you use it, not the language itself
<pyon>	exio4: sorry!
<rindolf>	so what should i do now until the mageia qa meeting start at 19:00 utc? 1. watch a fairy tail (anime) chpater. 2. work on a project euler problem.
<rindolf>	possibly - 3. social media stuffs.
<pyon>	rindolf: dunno, fairy tail sxtrikes me as having too high a fanservice/plot ratio.
<rindolf>	pyon: did you start watching it?
<pyon>	rindolf: i didn't watch the anime. i just read the first 8 or so chapters of the manga.
<rindolf>	pyon: i only watched one episode so far.
<rindolf>	pyon: ah.
<pyon>	lately, i haven't been watching anime at all.
<rindolf>	pyon: ah.
<pyon>	because, let's face it, most anime is crap.
<denommus>	does anyone have any idea on how i can create tests for arrows that represent continuous values?
<pyon>	dunno
<denommus>	or even proofs, i don't know
<pyon>	aewffwea: of course, some languages are malleable - they let you control how static or dynamic you want to be. just to make my point clear - libcello is a good example of using c as dynamic language. cpython is not.
<rindolf>	pyon: so what have you been watching instead?
<pyon>	aewffwea: in this sense, using haskell as a dynamic language (*not* interpreting another language in haskell) is doable, but already hard. using haskell as a dynamically scoped language is even harder. and all the cute "eval all the things!" examples that abound for dynamic languages are simply impossible.
<pyon>	rindolf: nothing.
<rindolf>	pyon: ah.
<aawe>	the best thing is to use haskell to create a compiler for the language with llvm as the backend
<aawe>	it's literally _the best thing_
<exio4>	we need a c -> haskell compiler, now.
<pyon>	aawe: dunno, i'm finding llvm's documentation hard to understand.
<pyon>	aewffwea: impossible in* haskell*
<denommus>	aawe: writing compilers in haskell with parsec and llvm is certainly interesting
<denommus>	aawe: i also like ocaml with menhir and sedlex
<aawe>	denommus: i have written a compiler in haskell using alex and happy
<aawe>	and generated llvm code
<aawe>	llvm can optimize a lot for you
<peyed>	how do i get the value 'ip' from this json object?  https://bpaste.net/show/a4e17ae914f3
<denommus>	aawe: have you tried to write a parser in parsec instead of alex+happy?
<aawe>	denommus: i have written a mailbox parser in parsec once
<aawe>	ooooh damn. i should have backed up those projects, i just realised
<denommus>	i should write my compiler
<rindolf>	peyed: $value is an array - you need to iterate over it.
<pyon>	aawe: alex + happy --> you must be tolerant to pain
<aawe>	using bnfc was relatively pain-free
<aawe>	but my language wasn't very complex
<aawe>	i'd never write a compiler in a language without sum types, in any case
<aawe>	(adts)
<peyed>	rindolf: that's what my foreach loop is doing   o.0
<rindolf>	peyed: the foreach handles the hash.
<sphinxo>	should i use a database (eg sqlite) or just a flat file to store pastes in my command line pastebin?
<anj7>	i have a small problem in jquery
<anj7>	in http://www.creationofgod.cf the more dropdown isn't working
<aawe>	oh i think i mixed up things. pyon, i did not directly program alex and happy programs, i generated them from bnf
<pyon>	aawe: ah.
<pyon>	aawe: "never write a compiler in a language without sum types" --> of course, bnf maps directly to algebraic data types.
<aawe>	very neatly, yes
<aawe>	but bnf can also generate java
<pyon>	well, yeah, but the mapping isn't so direct, and you need visitors for everything.
<pyon>	and visitors are literally the oo pattern i hate the most. i hate when a pattern is just "doing something i can do in another language, only badly".
<aawe>	pyon: are you going the bnf route or custom parser route for pyonlang?
<rindolf>	sphia database sounds like a better idea.
<rindolf>	oh sphinxo left.
<pyon>	aawe: i'm gonna use parsec, probably.
<pyon>	anyway, right now i care first and foremost about the runtime.
<pyon>	oh, right, i was supposed to think really hard how to convince rust to let me do garbage collection for a multithreaded program, without effectively writing everything in c.
<aawe>	have you read about pauseless garbage collectors
<pyon>	no.
<pyon>	my priority isn't making the best gc, really.
<pyon>	just allowing for shared immutable state as naturally as haskell and ml do.
<pyon>	rust rocks at isolating things, but shared immutable state is quite a pain.
<aawe>	if performance in any way a priority?
<pyon>	it matters, but not too much.
<vendu>	hello folks :)
<pyon>	vendu: hai
<vendu>	hey pyon :)
<vendu>	what's up dude?
<pyon>	nm hbu?
<vendu>	been working on a dungeon generator
<vendu>	still missing a few bits :)
<pyon>	:-o
<aawe>	vendu: what's the hardest part?
<vendu>	aawe, i think connecting the rooms with corridors
<aawe>	gonna get mah brush saw license this weekend
<aawe>	you?
<ihatei>	hello, if on of you guys know some vba im unable to make this  http://goo.gl/foszbw works with arrays in the exemple link interpret the texbox as an array. i really need help.
<pyon>	ihatei: you'd have to create an array of textboxes first.
<pyon>	(well, the given answer also works... but it isn't pretty. not that vba can possibly be pretty.)
<darkelement>	guys how can someone find where you are connecting from if you aren't cloaked at the moment?
<rounin>	/whois darkelement
<rainb>	to hax0r
<aawe>	got your ip now darkelement
<aawe>	gonna hax your pants off
<aawe>	watch your lightscribe(tm) dvd burner in 3 seconds
<darkelement>	lol
<darkelement>	yea didnt know of whois command
<darkelement>	but now i do
<darkelement>	##chat is a strange place guys...
<ams>	pyon: what do you fgind lacking in the spec to describe common lisp?
<pyon>	ams: i wasn't complaining about the specification itself.
<oleo>	read gentle intro
<oleo>	then paip then onlisp
<pyon>	ams: just about the overly operational focus of learning resources.
<denommus>	oleo: he was complaining about gentle intro sooner
<oleo>	oh
<oleo>	heh
<oleo>	i couldn't
<lseactuary>	hello - i need to put a list of accounts into a .txt file and then run a python script. the problem is that when i manually type the accounts into the .txt file it works but when i paste in accounts into the .txt file the python script fails.
<ams>	pyon: have you tried the spec?
<oleo>	it worked for me very good
<diminoten>	lseactuary: how does it fail
<pyon>	ams: nope.
<darkelement>	lseactuary: have you tried opening it as append mode? file = open(file_path, 'a')
<ams>	pyon: i would usggest you do.
<diminoten>	also lseactuary, #python
<darkelement>	if you do just normal write mode('w') then it will overwrite
<oleo>	actually the first one i got in my hands was onlisp, but i couldn't understand it then, so i got back to gentle intro and after completing that onlisp made more sense....
<ams>	pyon: or .. if you are more eclecticly inclined, http://www.unlambda.com/lmman/lmman_1.html
<lseactuary>	the python script will run but clusters all the acocunts into one element in the csv output
<oleo>	well actually i just read 90% of the book....
<diminoten>	add a \n to the end of each write
<ams>	pyon: the layout of "presenting" and defining common lisp hasn't changed much since those days .. even the chapter ordering, and lots of sentences are same ..
<oleo>	left the parts with macros out first
<oleo>	first learn function composition
<oleo>	macros come later on....
<pyon>	ams: is the hyperspec available for reading, say, using info?
<pyon>	i don't find web browsers to be that convenient to use.
<deerhawk>	a is decreased by 1 every time b is increased by a natural constant z. can you in advance tell how many such operations that has to be done until b divides a, given some initial a and b? all constants, number of steps and variables are natural numbers.
<ams>	pyon: nod.  check gcl .. it has the hyperspec as info.
<pyon>	ah, thanks.
<oleo>	there's a html version of the hyperspec
<ams>	the hyperspec is by definition html.
<ams>	pyon: http://users-phys.au.dk/harder/dpans.html
<aewffwea>	best crow-funding project ever: https://www.youtube.com/watch?v=alkssqpx2v4\
<oleo>	or you can use the http://users-phys.au.dk/harder/dpans.html
<oleo>	tool to convert the html spec to pdf or so
<ams>	the hyperspec is not the spec.
<oleo>	or texinfo even
<ams>	nor does it convert the html .. it ocnverts the tex sources.
<pyon>	it would be nice if there were at least some attempt at formalizing the semantics of common lisp.
<lseactuary>	whatis hfds?
<ams>	pyon: not sure what that would mean.
<pyon>	could be a subset of the language. i know that formalizing large languages is hard.
<oleo>	texinfo to pdf is possible
<ams>	tex to pdf is possible.
<oleo>	jep
<oleo>	so get the texfiles and then convert
<oleo>	try to get the a4 format if you are in europe
<ams>	wonder where i put the fixes for the dpans stuff for recent tex versions
<oleo>	to build*
<oleo>	meh
<peterfa>	in java, i want to dump a stack trace. i'm trying to google it but i find content trying to do fancier things. i just want to dump the trace at a point.
<denommus>	ok, writing arrowchoice is somewhat hard
<oleo>	the dpans stuff is nice
<grim001>	peterfa: throw a runtime exception, then use an uncaught exception handler to print it out.
<peterfa>	grim001, it's a little hackish.
<grim001>	that is the proper way to do it.
<peterfa>	grim001, ok.
<peterfa>	grim001, thanks.
<deerhawk>	aewffwea: lol, your link disclosed a potential security hole in my irc client.
<deerhawk>	https://www.youtube.com/watch?v=alkssqpx2v4\"|ls
<pyon>	ams: for example, the definition of the different kinds of environments (global, lexical, dynamic) takes up several pages in the hyperspec. the definition of lexical environment takes, like, less than half a page using sequents and inference rules.
<deerhawk>	hahahahahaha. ls did execute!
<aewffwea>	deerhawk: interesting
<ams>	pyon: wanna do it?
<aewffwea>	try: https://www.youtube.com/watch?v=alkssqpx2v4\"|format c:
<aawe>	https://www.youtube.com/watch?v=alkssqpx2v4\"|ls
<peterfa>	i once went to a security checker for my irc client. it asked for my irc username, password, social security number, passwords to my home computer, account information with pin numbers... and then it said it will be testing my financial institutions for any loops holes in my irc client it can find there.
<kruug>	vb.net, i'm trying to parse xml source on a schedule (every hour) but only part of the data updates.  anyone seen this before?
<aawe>	https://www.youtube.com/watch?v=alkssqpx2v4\"|touch ~hacked.txt
<aewffwea>	peterfa: you are secure now
<pyon>	ams: so i'm being forced to follow lots of hyperlinks to gather the same amount of information that saner language specifications give me in one third of a page.
<peterfa>	then it said that if i see any missing money it's entirely normal and apart of the process and that money isn't really gone, but to wait 5 years and 1 day to report or else it won't work.
<aawe>	peterfa: are you really this naive
<peterfa>	aawe, no.
<peterfa>	aawe, i'm kidding.
<aawe>	thanks
<aawe>	^^
<wafflejock>	anyone know a decent c++ library i can easily install in ubuntu?
<peterfa>	aawe, it would be totally game over though.
<wafflejock>	sorry meant a serial port c++ library
<peterfa>	wafflejock, gnu c lib?
<ams>	pyon: well, as a language follower, i consider it quite sane ..
<peterfa>	oh.
<ams>	peterfa: c != c++.
<peterfa>	ams, yikes, pedantic :)
<wafflejock>	doing some stuff with openframeworks and it's in c++ and i wrote some arduino code to read from the serial port and move a servo to the position specified
<wafflejock>	it reads a string at a time and parses it as an int then moves the servo but not sure how to properly write that data to the serial port
<deerhawk>	https://www.youtube.com/watch?v=alkssqpx2v4\"|chromium-browser
<deerhawk>	hahaha, wtf. this is dumb.
<wafflejock>	tried using fopen on the serial port and writing to it and that is doing something but not correct so was looking for alternatives that simplify the setup to not introduce a bunch of boilerplate code in this little project
<ams>	peterfa: you call it pedantic two point out that c and c++ are two immensly different, incompatible languages, where you cannot share almost no code?
<peterfa>	ams, i'm kidding.
<aewffwea>	deerhawk: so did you see the video?
<deerhawk>	aewffwea: the video was annoying :p
<aewffwea>	deerhawk: it's amazing, come on!
<wafflejock>	found a github repo with a c++ serial library but was wondering if there's something i can just apt-get install since i'm not really aware of how dependency management in c++ projects is handled but know if it's in the path i don't have to mess with the build
<deerhawk>	i others amusement of it amusing though
<deerhawk>	aewffwea: it's so bad that it's half-funny :p
<lseactuary>	anyone know what hfds is and how i pull data from there?
<aewffwea>	deerhawk: it's the best commercial ever
<deerhawk>	aewffwea: i had my speakers set on a really low volume and the song still sounded like a bulldozer and scared the crap out of my goat outside
<deerhawk>	it literally shat :p
<tnght>	is anyone in here familiar with the processes used to add + identify custom labels using nltk's ner?
<darkelement>	what should i make in c#
<wafflejock>	ah libserial-dev probably has what i need
<darkelement>	or python
<darkelement>	also, does c# have more capabilities than python?
<pyon>	ams: the examples in the hyperspec sometimes use concepts that are only explained later on. is there any reference where the examples only use concepts introduced up to the current point in the document?
<oleo>	aww maan
<oleo>	lol
<pyon>	ams: because, you know, i can't define a in terms of b if i don't know what b is. i'd need to define b first.
<wafflejock>	k more general question anyone know a good gui for accessing all the documentation that c++ libs or dev packages install into /usr/share/docs?
<oleo>	just turn the pages then....
<oleo>	hop from page to page
<oleo>	lol
<oleo>	you can't be so lazy.....
<pyon>	oleo: it isn't a matter of laziness. it's a matter of mathematical rigor. i can't formally define a concept in terms of another i haven't equally formally defined yet.
<tnght>	is anyone in here familiar with the processes used to add + identify custom labels using nltk's ner?
<oleo>	pyon: then you need to grab back to other resources too, like the mit ones etc....
<oleo>	pyon: there's an archive.....
<numb3rz>	aawe: wats a brush saw license??
<aewffwea>	deerhawk: you have a goat? o_o
<deerhawk>	aewffwea: yes. his name is billy.
<aewffwea>	deerhawk: what is your relationship with this... goat?
<tnght>	is anyone in here familiar with the processes used to add + identify custom labels using nltk's ner?
<deerhawk>	aewffwea: well, he's of plastic, so i'm not doing anything illegal! you'll never catch me alive! *jumps out of a tall building*
<bustylolichan>	http://ideone.com/fgejos here is my code http://pastebin.com/znydxwaw is my xaml how do i bind my listview to my view model
<deerhawk>	made of*
<deerhawk>	its my ghost speaking now.
<deerhawk>	this discussion has gotten out of hand. tnght, quick, fix it. get the labels and tires and stuff to do whatever.
<deerhawk>	that moment you try to fix something embarrassing but makes it worse.
<tnght>	wtf
<pyon>	is there anything like macroexpand, but which doesn't require me to come up with test arguments for the macro?
<pyon>	basically, i want to see the macro's *definition*, not an instantiation of this definition
<peterfa>	one of these days i'll learn how to code for the linux kernel. not that i'll ever submit code, mind you, but just to learn it.
<tnght>	freenode is pretty bad at machine learning
<tnght>	i feel like i know more about machine learning than the majority of freenode
<tnght>	that's pretty bad
<deerhawk>	tnght: well, you have me. but i've moved past machine learning. i try to go beyond that, and that's where freenode truly lack people.
<deerhawk>	tnght: there's a machine learning channel and a few ai-channels
<peterfa>	i thought it would be useful to return a boolean based on whether or not a value is set (since if the code is ran, it sets that variable). i can't compare an int to null in java. i'm not sure what to do.
<peterfa>	there's no isset() function.
<numb3rz>	deerhawk:do you k m ow them what r they?
<deerhawk>	peterfa: can you elaborate a bit? what are you trying to do?
<rounin>	peterfa: an int in java can't really be not set
<rounin>	peterfa: since an int is a value type or primitive type, it inherently has a value
<peterfa>	rounin, unitialized?
<rounin>	peterfa: internally, null is probably implemented as the integer 0, and an int is also 0 by default
<peterfa>	rounin, int pointer;
<rounin>	peterfa: java doesn't have those
<rounin>	peterfa: you can have an integer reference, which is like an int pointer, sort of
<peterfa>	rounin, nothing wrong with calling an int a pointer.
<deerhawk>	numb3rz: try #machine-learning ##machine-learning #ai ##ai #robotics ##robotics
<rounin>	peterfa: java doesn't have uninitialized value types either, as far as i know
<numb3rz>	deerhawk: thanks
<deerhawk>	numb3rz: ##machinelearning works
<peterfa>	rounin, so even if value == null, would never return true, even if java allowed it?
<rounin>	peterfa: it would depend on how you implemented == i suppose
<rounin>	i would guess that null is 0 internaly
<peterfa>	rounin, i wanted to use 0 for meaning, "calculator found nothing." i guess i'll use -1.
<peterfa>	i cannot have a negative value.
<peterfa>	i mean, the calculator cannot find a negative value.
<denommus>	do you know what i hate?
<denommus>	other people's code
<peterfa>	denommus, how about the code of a newbie?
<peterfa>	denommus, does that get a loving exception in your eyes?
<_w_>	denommus: so are you using a language conductive to teamwork and beginner programmers?
<_w_>	because, i mean, you can never stop someone from being stupid when coding, but you can certainly limit the damage they can do with a strict language
<ecogiko>	hey, could someone experienced on c# give me some advice on this? https://ideone.com/mwrbug
<denommus>	_w_: i'm not doing anything
<denommus>	i just need to deal with a crappy soap api
<rounin>	ecogiko: what is it you need avice with?
<denommus>	imagine having "type" as a field of some structure, instead of, you know, naming the structure
<peterfa>	denommus, don't get yourself into a lather :d
<_w_>	denommus: in that context, soap is a language
<ecogiko>	rounin: i need to dynamically create an instance of a type that was passed as a function parameter. right now i can only convert the instanced object to the abstract class because i know that the type passed will be one of the derived types. i need to cast the instanced object to the dervied type.
<rounin>	ecogiko: ah... http://stackoverflow.com/questions/15853159/isassignablefrom-isinstanceoftype-and-the-is-keyword-what-is-the-difference ?
<deerhawk>	does anyone know what the opposite of context free grammar is? what can it be used for?
<_w_>	deerhawk: are you a bot?
<ecogiko>	rounin: i can't see the connection.
<darkcthulhu>	deerhawk, context-sensitive grammar. it is a superset and parsing it is harder, but it lets you express more.
<numb3rz>	what tools do i need to view assembly language??
<rounin>	ecogiko: those three things are used for determining whether something can be cast to a certain type
<rounin>	ecogiko: so basically, you loop through all the possible types, and cast when you find a match
<darkcthulhu>	numb3rz, from an executable, you'd need a disassembler. from source, you don't need any specific tool except a compiler and a text editor (if c/c++).
<rounin>	ecogiko: there's no casttomostspecifictype() that i know of, which is silly, but that's just how it is
<denommus>	_w_: it's certainly represented in a markup language
<rounin>	ecogiko: i was in just that situation a few weeks ago, and i've worked with a program that was based around this thing, so i'm pretty sure that's the only way
<zzultan>	numb3rz, radare looks promising on linux,  i have not tried it out yet so i can not endorse this software fully
<rounin>	ecogiko: of course, you could modify your objects to store their type information in some sort of field
<rounin>	ecogiko: say, in a type variable
<numb3rz>	darkcthulhu: thanks now executable meaning?? and source meaning?
<deerhawk>	_w_: yes, i am a bot.
<deerhawk>	_w_: i'm _w_-bot v.1.6.73
<darkcthulhu>	numb3rz, http://en.wikipedia.org/wiki/executable ; http://en.wikipedia.org/wiki/source_code
<rounin>	ecogiko: then you could just cast your objects to the type stored in the variable inside them
<deerhawk>	thanks darkcthulhu
<rounin>	ecogiko: one might wonder why c# doesn't just do that with all objects, but there you have it
<darkcthulhu>	deerhawk, wut?
<darkcthulhu>	ah.. your question. you're welcome :)
<ecogiko>	rounin: that could be a way but i am creating a program to create digital circuits with. i need to pass the object by ref to the function and by doing that i lose polymorphysm. i can't implement the function for every pair of derived classes i `might` pass to it. the next thing i thought of was dynamically created objects according to a typed passed, but that doesn't seem to work too.
<denommus>	pyon: i'm trying to implement arrowchoice now
<denommus>	pyon: and... i'm confused. for which wires should arrowchoice be implemented?
<rounin>	ecogiko: could you use a generic method instead?
<rounin>	ecogiko: void functionthatdoesstuff <t> (t mysteriousobject)
<ecogiko>	rounin: i tried using a generic but i still need the derived class. i am not sure if i used it correctly tho.
<ecogiko>	how do i cast the ref t mysteryood to what i need?
<ecogiko>	i had to use a where to bind it to the abstract class, which brings me to the starting position.
<phantoms_>	hey ppl
<rounin>	ecogiko: if you use a generic function, t will already be the type of the class
<phantoms_>	does anyone have advice on what to read after you're done with the basics for a programming language
<rounin>	the compiler will just spit out a function for each type you call it with
<rounin>	i guess it should be <t extends yourabstractclass> and not just <t>
<rounin>	then again, if the specific classes have methods that you can only call on them, it's not very useful of course
<numb3rz>	thanks
<rounin>	seems like you might have to go back and change some assumptions somewhere
<numb3rz>	darkcthulhu, thanks
<tnght>	is anyone in here familiar with the processes used to add + identify custom labels using nltk's ner? i'm not clear on how i'd go about creating custom labels for named entities (e.g. movie, director, actor, etc.)
<darkcthulhu>	numb3rz, :)
<numb3rz>	darkcthulhu, do you know if there is a compiler and disassembler in notepadd++
<darkcthulhu>	numb3rz, notepad++ is an editor. that is all it is. you need to install those programs separately.
<darkcthulhu>	https://www.hex-rays.com/products/ida/ is one disassembler. you can get an eval version for free and run it on your executables.
<numb3rz>	darkcthulhu, ok thanks
<diminoten>	microsoft word
<diminoten>	is *terrible*
<diminoten>	seriously, how is *this* the standard
<diminoten>	for document creation in the business world
<ruffel>	you're doing it wrong
<diminoten>	possibly, but i'm just doing it the way ms says to
<camcam2>	it’s a huge step up from formatting documents in latex, imo
<diminoten>	compared to something like markdown, though, it's a complete nightmare
<camcam2>	the real question is how is latex even still around in a gui world like this
<diminoten>	*lots* of "magic"
<ruffel>	because latex is better once you get to a certain document length
<ruffel>	like 10-20 pages
<ruffel>	before that. cba.
<ecogiko>	rounin: thanks! that did the trick, but why? where were my assumptions wrong?
<tommycannady>	hi
<camcam2>	ruffel: i can see how that would be true.
<rounin>	ecogiko: honestly, i've no idea; it was more of a qualified guess :)
<ecogiko>	rounin: while going in circles i found of a neat way to separate implementation from declaration in c#, through interfaces and abstract classes. is that a good thing to do? do you do it?
<tommycannady>	hi
<rounin>	ecogiko: personally, i'm an extreme minimalist when it comes to code, so i very rarely write code that doesn't do anything... if it's at all possible, i just leave data in the type it came in
<peterfa>	the fastest way to reduce compile errors is to introduce a syntax error.
<vdamewood>	hi, people, etc.
<sasazuka>	peterfa: i would say a faster way is to not write code at all
<peterfa>	sasazuka, touche.
<peterfa>	competence by incompetence.
<peterfa>	we should write a book.
<peterfa>	"error free code instantly: a complete guide for every language ever"
<sasazuka>	and you would be technically correct!
<ecogiko>	rounin: thanks for the help! goodnight.
<vdamewood>	chapter 1: introduction to nop
<vdamewood>	interestingly, nop is swym in mmixal
<vdamewood>	i think i want fizzy green liquid.
<indigo>	vdamewood: sympathize with your machinery
<peterfa>	sasazuka, and as useful as i ever have been.
<vdamewood>	indigo: yep.
<indigo>	pretty funny :)
<vdamewood>	knuth certainly has a sense of humor.
<aewffwea>	vdamewood: can you prove it?
<vdamewood>	perhaps by mathematical induction.
<aewffwea>	vdamewood: wouldn't you need n knuths to apply mathematical induction?
<vdamewood>	i plan on proving that one of his ancestors has humor and also if a parent has humor then so does the child.
<wafflejock>	n+1
<deerhawk>	is there a way to know for which x in n that f(x)/g(x) is in n?
<deerhawk>	f(x) is some polynomial. probably 1st degree.
<vdamewood>	i prefer my functions to be polyunsaturated.
<django_>	hey all
<django_>	is this a good place to ask about ai?
<deerhawk>	fuck this shit, i'm giving up forever. going to do something productive with my life now.
<tnght>	perhaps
<aewffwea>	deerhawk: productive like...?
<deerhawk>	django_: sure, i'm here, so go ahead.
<django_>	how ais learn language
<deerhawk>	aewffwea: i'm going to write a bloody os.
<vdamewood>	django_: it's an appropriate place to ask, but the answers you get depend on who's here.
<tnght>	django_ natural language processing. have you heard of it?
<deerhawk>	django_: but since i'm here, you're in luck.
<django_>	heh :d
<aewffwea>	deerhawk: i'm not sure i'd like a red wallpaper...
<django_>	tnght, nop
<tnght>	django_ you can ignore deerhawk
<deerhawk>	django_: ignore tnght, he's a troll. feel free to ask your ai questions.
<deerhawk>	django_: tnght is just trying to prevent you from asking your questions. it's his trollish intentions. so he'll delay you as  much as he can.
<django_>	im going to rejoin this channel and ask again
<django_>	and lets bemature this time
<django_>	hey all
<django_>	is this a good place to ask ai questions?
<electrojustin>	sure
<aewffwea>	django_: ai don't know xd
<electrojustin>	(not that i personally can probably answer them)
<django_>	do we have a theory on how computers can acquire language?
<tnght>	django_ well, there's this subset of ai/machine learning called natural language processing. it's concerned with understanding various aspects of language
<django_>	read a word
<django_>	put letters together
<aewffwea>	django_: computers can do everything you program them to do
<ruffel>	can they love?
<django_>	im talking about ai not programming aewffwea
<tnght>	if you're familiar with python, you'll probably want to look into nltk: http://www.nltk.org/
<tnght>	django_ ^
<aewffwea>	ruffel: if you program them too....
<aewffwea>	django_: ai is a computer that was "programmed" to "learn"
<tnght>	it's the premier open-source nlp framework
<electrojustin>	wait what?
<tnght>	this book will likely be of significant use to you
<tnght>	http://nltk.org/book
<electrojustin>	pretty sure ai != machine learning
<django_>	how does it learn what letters are and how to put them together?
<django_>	how do you teach it to associate a letter/word with something
<tnght>	django_ that's a very very very complicated question
<tnght>	with a variety of answers
<django_>	is there an answer though?
<tnght>	there are several answers
<django_>	do we know how to give meaning to symbols?
<deerhawk>	(76005-x)/(5566+76005x) = some natural number. x is also a natural number.  is there a direct and fast way to solve for x?
<aewffwea>	django_: you program it to do it
<tnght>	django_ are you familiar with computer science?
<electrojustin>	deerhawk: algebra. multiply both sides by (5566 + 76005x)
<django_>	tnght, no
<tnght>	ok. that might be a problem
<django_>	heh
<ruffel>	https://www.wolframalpha.com/input/?i=%2876005-x%29%2f%285566%2b76005x%29%3dy
<electrojustin>	deerhawk: and then subtract and then divide
<tnght>	i don't think i'd be able to properly explain how nlp works in a context that makes much sense to you
<tnght>	it involves a lot of complicated math
<deerhawk>	electrojustin: (76005-x) = n*(5566+76005x). n is some natural number. x is also a natural number.  x < any of the constants.
<tnght>	generally speaking, machines "learn" language based on probabilities.
<electrojustin>	deerhawk: right, now distribute n, add x to the other side, and subtract 5566*n from 76005. then divide the left side by the coefficient of x
<electrojustin>	im doing a poor job explaining this with words, but i think you get the gist of algebra
<tnght>	there are a variety of algorithms that allow computers to learn parts of speech, semantics, etc.
<django_>	tnght, which branch of math
<tnght>	django_ probability + statistics
<deerhawk>	electrojustin: it's easy to solve for reel numbers, but for natural numbers its not
<electrojustin>	deerhawk: uh, wouldn't it be easier with natural numbers?
<electrojustin>	that's a smaller subset
<electrojustin>	...are you not supposed to use a computer or something?
<electrojustin>	...is this just algebra homework?
<deerhawk>	electrojustin: with reel numbers, you just set x or n to anything and solve for x or n.
<django_>	tnght, there isnt an inherent logic as to how symbols get meaning
<deerhawk>	electrojustin: but if you give x or n a natural number, more often than not the other variable will be a fraction.
<tnght>	django_ i'm not sure what you mean. could you expand?
<electrojustin>	deerhawk: so what if it's a fraction? also, natural numbers are a subset of real numbers
<django_>	tnght, algorithmically how do you know what this says
<deerhawk>	electrojustin: wow.. just wow. my answer: because.
<deerhawk>	sorry.. but that ignorance, i have a hard time with that.
<electrojustin>	did i miss something?
<deerhawk>	maybe i misinterpreted "so what if it's a fraction?" as if it necessarily didn't matter.
<electrojustin>	...does it?
<electrojustin>	did i miss part of the problem?
<electrojustin>	oh sorry, "x is also a natural number"
<electrojustin>	didn't see that part
<deerhawk>	nvm, but the problem is impossibru anyway :p
<electrojustin>	the process doesn't change in that case, there just isn't always a solution
<tnght>	django_ did you read what i said above? generally speaking, machines "learn" language based on probabilities. there are many algorithms that allow for computers to understand language. please see the following for more detailed information: http://nlp.stanford.edu/fsnlp/promo/
<deerhawk>	it's one of the millennium problems
<django_>	tnght, ty!
<tnght>	django_ also http://www.nltk.org/book_1ed/
<django_>	tnght, in what sense is probability applied?
<tnght>	django_ please read + understand this article: https://www.wikiwand.com/en/natural_language_processing
<vdamewood>	for some reason, i keep thinking that i'm going to miss something getting backed up before i wipe my system.
<deerhawk>	when you design a file system  .. how far do you go make it optimal for a certain environment? i've seen so many file system designers that goes: "meh, this'll do." with some structure that "just works". meanwhile, i've seen the guys in nasa doing serious shit to optimize the crap out of the file system for space stuff.
<vdamewood>	i've never designed a file system.
<aewffwea>	deerhawk: you need to know a lot about hdds hardware to implement a file system
<deerhawk>	aewffwea: false. pretty much all operating systems and foremost disks have an abstraction layers where you just are interacting with physical blocks of memory.
<deerhawk>	aewffwea: file systems are abstract and hardware-independent since you can have it on multiple types of storages.
<aewffwea>	deerhawk: and the fact that they store the table at the start, and have blocks of 4 kb has nothing to do with how the hardware works... right...
<deerhawk>	aewffwea: however, you're also right. some file systems place certain data in certain ways due to the physical reality of common devices.
<aewffwea>	deerhawk: i like how i'm wrong, however i'm also right....
<electrojustin>	something tells me optimizing filesystems for speed would require knowledge of hdd hardware
<deerhawk>	aewffwea: you don't have to know anything about hdds hardware to implement a file system. the "virtual blocks" provided by the os are enough.
<electrojustin>	not necessarily space
<deerhawk>	electrojustin: true.
<deerhawk>	electrojustin: by space i meant "space stuff" as in space robots and stuff :p.
<deerhawk>	and space shuttles
<electrojustin>	i need to read the backlog more thoroughly
<deerhawk>	nah, i was very ambiguous there.
<deerhawk>	talking about nasa and harddisks and then mentions "space".
<standoo>	are functional languages inherently more suitable for modeling neural networks>
<electrojustin>	something tells me no
<deerhawk>	standoo: depends. generally no, since you need procedural algorithms to rebuild the neural network.
<deerhawk>	standoo: but if you have the neural network defined already, you can express it in a function language easily "so to speak(!)".
<electrojustin>	hell, that might even be the kind of thing where oop really shines
<standoo>	oop?
<standoo>	how does that fit?
<deerhawk>	standoo: are you asking from a theoretical or practical standpoint btw?
<vdamewood>	mistaken programming. short for oops programming.
<standoo>	deerhawk: just a general discussion
<deerhawk>	standoo: then, whatever language you're comfortable with works as long as it can fulfill your needs. :p
<standoo>	i'm trying to model actual neuron behaviour
<electrojustin>	very much not my field of expertise, but the important part of a neural net is its structure, no? and it generally consists of tiny things that have specific properties and specific actions
<deerhawk>	standoo: interesting. then you've come to the right place. tell me more. i know a lot about it.
<standoo>	cool
<standoo>	i am building a language that can be visualized in 3d graphs easily
<deerhawk>	electrojustin: yes, and it's (typically) their _relationships_ that matters. the weights/paths between the neurons, typically.
<standoo>	not really a language but a framework
<electrojustin>	right
<electrojustin>	i dunno, that strikes me as a good oo thing
<standoo>	i'm thinking of using data types to restrict certain functions connecting to other functions
<deerhawk>	standoo: btw, there are already experimentations going on with trying to simulate "actual neurons". called the blue brain project. they build their models out of real brains: freezes rat brains, slices them to slices and makes a copy of them in the computer.
<standoo>	deerhawk: i have read about that
<standoo>	deerhawk: i'm probably doing a more simplified model of that
<lseactuary>	anyone here use hadoop and/or scala?
<deerhawk>	standoo: but there are not sufficient (although they have very special super computers) computing power to simulate them in all the needed details. also, we don't know enough about the brain cells to simulate them on a molecular level.. and so forth
<deerhawk>	standoo: ah
<standoo>	deerhawk: my thinking is "if you shake all the functions up in a box, somehow they will all connect correctly by random"
<standoo>	deerhawk: like a self solving jigsaw puzzle of sorts
<nitrix>	that's an interesting take to function composition.
<deerhawk>	standoo: there's something to it, yes.
<deerhawk>	standoo: the main key here is evolution.
<standoo>	deerhawk: yes, i'm trying to make it able to evolve
<toccatanfugue>	would anyone happen to have solutions to chapter 8 of algorithms (dasgupta)
<standoo>	deerhawk: the reason i'm talking about this here was wondering if anyone had any pointers to where i should do some background research
<nitrix>	standoo: i'd start with languages that are oriented on values.
<standoo>	deerhawk: oriented on values?
<nitrix>	standoo: different person :p
<standoo>	nitrix: got used to typing his/her name
<deerhawk>	standoo: well, what exactly are you going to do?
<nitrix>	standoo: functional languages for example. i think the further you go with abstractions, it'll become harder to demonstrate that graphically.
<standoo>	deerhawk: creating a framework for intelligence
<nitrix>	standoo: also, functions that are referentially transparent (which is always always a desired property of functional languages) will really help you here map domains to codomains.
<deerhawk>	standoo: there are thousands of them :p with different approaches. i'd recommend looking at some of them (won't hurt) to see what others have done.
<deerhawk>	not to do exactly the same thing, but, to see what people have done and are doing. you might discover that you don't want to do what you thought you wanted to do.
<standoo>	deerhawk: also a framework for creating the only single application you will ever need
<standoo>	deerhawk: can you point me to what to search in google?
<deerhawk>	standoo: ok, so what if someone discovers something better. how can your application be the only thing someone ever need? :p
<standoo>	deerhawk: well maybe in the near future... technology if never stagnant anyway
<standoo>	nitrix: you mean something like ocaml, haskell?
<nitrix>	standoo: sure.
<standoo>	nitrix: i've looked into those, it's interesting that don't have null values equivalents
<deerhawk>	standoo: neural networks, genetic programming, evolutionary algorithms, computional complexity and e.g. salesmen traveler problem
<deerhawk>	standoo: the question is more what to not search for :p
<nitrix>	standoo: they are quite formally close to mathematical models, which is why i'm suggesting them if you want to draw the functions or values as a 3d graph.
<deerhawk>	standoo: https://en.wikipedia.org/wiki/list_of_artificial_intelligence_projects https://stackoverflow.com/questions/16778463/artificial-intelligence-libraries
<deerhawk>	standoo: it's a field that spans back to the ancient greeks :p
<standoo>	deerhawk: read aristotle book?
<standoo>	vdamewood: hmmm?
<vdamewood>	and to the ancient geeks
<nitrix>	standoo: that's a property of algebraic data types.
<vdamewood>	just trying to be humorous.
<standoo>	i've read a bit of those and i'm sure those topics would be useuful
<deerhawk>	standoo: i haven't read it, no. but neural networks are over 200 years old for example. some math are over 2k years old.
<standoo>	but not i'm focusing on the framework where all these algorithms can be applied
<deerhawk>	standoo: ai is a multi-field
<standoo>	eg one ring to rule them all
<nitrix>	standoo: the idea is that there's only a handful of values that can construct a type, whereas, in other languages like c for example, the type has a range of values and you give a meaning to them.
<vdamewood>	nitrix: sounds like ada
<sopu>	you should check out cnrg's work, standoo: http://compneuro.uwaterloo.ca/index.html
<nitrix>	vdamewood: many languages have algebraic data types.
<vdamewood>	i'm not surprised.
<nitrix>	standoo: here's a cool example from haskell: data maybe a = just a | nothing
<standoo>	nitrix: i'll probably introduce the concept of interfaces as well into the framework
<nitrix>	standoo: the only two values possible for the type `maybe a` is `just a` or `nothing`.
<nitrix>	standoo: where `a` is a form of parametric polymorphism.
<standoo>	nitrix: the other thing i was looking for was a language with an easy learning curve
<standoo>	nitrix: ocaml, haskell seems to have quite a steep one
<nitrix>	because they require you to actually learn new concepts.
<nitrix>	people think learning a new language is just learning a different grammar.
<standoo>	nitrix: i need to also consider the people writing for the framework
<standoo>	sopu: looking into it
<standoo>	nitrix: i'm looking into something called "typed lua"
<nitrix>	standoo: fancy parser.
<nitrix>	https://github.com/andremm/typedlua/blob/master/examples/bootstrap/tlparser.tl
<standoo>	nitrix: why you think it's fancy?
<nitrix>	lot of toy ideas like that are done incorrectly. they actually parse, tokenized and everything. so, there's time invested into it as a long-term project.
<nitrix>	`nilabletype` merfghhh....
<standoo>	nitrix: i think this guy did this as his thesis paper
<nitrix>	then you could learn a thing or two from his paper :d
<standoo>	i'm very likely to disable the data types like "any" or "functions"
<standoo>	nitrix: been reading it...
<standoo>	nitrix: and by the end of it, hopefully could model it in something like this http://visjs.org/examples/network/08_mobile_friendly.html
<standoo>	nitrix: and that kinda looks like a brain to me
<nitrix>	that's a cool way to show data structures.
<nitrix>	i was thinking bigger when you said 3d graph, with functions domains and codomains.
<standoo>	hmm
<standoo>	nitrix: like more as a math definition?
<nitrix>	so you'd see all possible outputs for every possible inputs.
<standoo>	nitrix: yes i am using the domain and codomain concept
<standoo>	nitrix: unfortunately that graph is only 2d
<standoo>	nitrix: but it's a start
<nitrix>	and acyclic.
<standoo>	acyclic?
<nitrix>	there are languages where you'd want cyclic graphs.
<standoo>	nitrix: oh yes
<nitrix>	consider a ring buffer in c for example.
<standoo>	nitrix: i think this framework can do cyclic stuff
<nitrix>	there's a lot to think about, that's why i'm saying some theory wouldn't hurt :]
<standoo>	http://visjs.org/examples/network/graphviz/graphviz_gallery.html
<nitrix>	there you go.
<nitrix>	this one is a directed cyclic graph.
<nitrix>	i don't know if the direction matters. yeah maybe it does, for most stuff. like lists and trees.
<standoo>	nitrix: my background is not actually in computer science, its acutally in psychiatry
<nitrix>	i'm sure lua has those; sounds like the right direction, i don't know :]
<nitrix>	let me know your progress ^^
<standoo>	nitrix: it sounds like a pipe dream in a way
<vdamewood>	yay. it will take two hours to copy my virtual machines over. i'm going to watch tv.
<nitrix>	i don't know about that. solving a problem of yours generally leads to a successful project.
<nitrix>	you'll always find people with the same interests/problems you have :]
<nitrix>	it's worth pursuing i think :p
<standoo>	nitrix: i am hoping i don't repat someone who has done something similar in the past
<nitrix>	ahah.
<nitrix>	very likely :p
<nitrix>	especially for ehm, neural networks.
<standoo>	nitrix: yeah
<nitrix>	it's hard to grasp the big picture other than visually.
<standoo>	nitrix: maybe this will a more accessible model to more programmer
<standoo>	nitrix: more programmers can build the brain together
<standoo>	nitrix: it will be like pieceing functions like jigsaw puzzles
<nitrix>	standoo: the term for that is function composition :)
<nitrix>	http://en.wikipedia.org/wiki/function_composition
<standoo>	nitrix: i'm so glad i haven't forgotten my high school math
<nitrix>	http://en.wikipedia.org/wiki/function_composition_(computer_science)
<nitrix>	actually, this is more specialized.
<nitrix>	it can give you ideas ;)
<deerhawk>	hi, i have a question for intelligent people. i'm trying to find a fast algorithm for prime number factorization. my approach is trial and error: i try one crazy idea after another. page after page, with crazy ideas. some ideas shows promise .. but the ideas always ends up on the bad-complexity-garbage-bin. what other approaches are there except trial and error (and deriving ideas from other ideas)? sometimes i just do something random to
<deerhawk>	look for insight to derive an idea from, but that's still trial-and-error.
<standoo>	nitrix: cool, thanks
<standoo>	nitrix: how do i get in touch with you?
<deerhawk>	standoo: you don't, he gets in touch with you. *disappears into the darkness*
<standoo>	deerhawk: :)
<nitrix>	deerhawk: do you want only integers?
<nitrix>	deerhawk: and the numbers are positive?
<deerhawk>	nitrix: yes.
<nitrix>	deerhawk: you'll basically always have trial and error, but you can reduce the amount of checks.
<nitrix>	deerhawk: i suggest you look into the elliptic curve algorithm after montgomery.
<deerhawk>	nitrix: oh, that's not what i meant :p. i'm talking about problem solving.
<nitrix>	deerhawk: it's explained http://programmingpraxis.com/2010/04/23/modern-elliptic-curve-factorization-part-1/ and http://programmingpraxis.com/2010/04/27/modern-elliptic-curve-factorization-part-2/
<deerhawk>	nitrix: thanks. but what i'm looking for is actually something new
<deerhawk>	nitrix: it's a meta question about discoveries.
<nitrix>	deerhawk: oh gosh. i'm not aware of any algorithm published that can factor all integers in polynomial time
<nitrix>	the best one to date ehm..
<nitrix>	found it: gnfs.
<nitrix>	deerhawk: that's for like, extremely large numbers, like > 100 digits
<nitrix>	deerhawk: "for a quantum computer, however, peter shor discovered an algorithm in 1994 that solves it in polynomial time. this will have significant implications for cryptography if quantum computation is possible. shor's algorithm takes only o(b3) time and o(b) space on b-bit number inputs. in 2001, the first seven-qubit quantum computer became the first to run shor's algorithm. it factored the number
<nitrix>	15.[2]"
<deerhawk>	nitrix: lol, i know. i'm not looking for a known solution. i'm trying to create a solution.
<nitrix>	deerhawk: apparently i'm wrong, there is an algorithm.
<subtwo>	deerhawk: for adding to the meta-problem-solving discussion, i usually attack a problem by gathering related data (e.g. prime-numbers) and try to look at it in different ways. try to find patterns that stand out.
<deerhawk>	subtwo: yeah, that's what i'm interested in :p.
<nitrix>	deerhawk: well, if i was you, i'd start with the gnfs paper or shor's paper.
<deerhawk>	subtwo: what if that won't work.. what do you do then?
<nitrix>	maybe you can tweak it after understanding how it does it.
<woggle>	deerhawk: i wouldn't expect to make progress on this problem without understanding gnfs/ecm, which have some pretty non-trivial mathematical background.
<deerhawk>	nitrix: yeah, that's an important step too i guess.
<subtwo>	deerhawk: you have to be persistent and find new ways to interpret the data.
<nitrix>	deerhawk: it's not important, it's quite mendatory.
<deerhawk>	subtwo: would you look at the same data forever?
<subtwo>	deerhawk: for innovation to happen you have to find a new angle of the problem
<standoo>	deerhawk: you are right, nitrix get's in touch with me
<subtwo>	deerhawk: well, if you don't have enough data then maybe you need to find ways to gather more data.
<deerhawk>	standoo: but whatever you do, when he says "close your eyes and open your mouth", don't do it.
<nitrix>	:<
<standoo>	deerhawk: why not?
<deerhawk>	standoo: but if you've sent him the pictures already, it's too late :/. you'll have to do it.
<subtwo>	deerhawk: if you got a finite set of data in your problemspace maybe different kinds of brute-force analysing and randomization would work
<standoo>	nitrix: you have an email or twitter?
<deerhawk>	subtwo: what data can you possibly want to gather considering prime numbers? :p there are infinite many of them and they all follow the same "pattern".
<pressure679>	have anyone seen my code?
<subtwo>	deerhawk: also cross-pollinating different ideas could give you a new angle
<deerhawk>	subtwo: and if it won't work? :p
<deerhawk>	subtwo: are you familiar with the traveler-salesman-problem?
<nitrix>	standoo: sent, but i'm almost always here. :)
<subtwo>	deerhawk: yes, sure
<subtwo>	deerhawk: it sounds like your into all the np-hard problems :-)
<deerhawk>	subtwo: if you are trying to find an algorithm to find an optimal solution in linear time.. what would be your approach?
<standoo>	nitrix: i've sent you an email to remind  me of you
<deerhawk>	subtwo: yeah, i find them important.
<subtwo>	deerhawk: i would give the factorization problem a go before jumping on the tsp as the factorization problem has not been proven to be np-hard but the tsp has thus it will at least have a theoretical chance of finding a solution in polynomial time.
<subtwo>	deerhawk: but if i would approach it i would probably go for an approximation algorithm that would be correct in 99.999% of the cases. i'm a pragmatic guy. even if it has been proven to be an np-hard problem it is not proven how accurate an approximation algorithm in linear time can be.
<subtwo>	deerhawk: for all practical purposes it can be enough.
<woggle>	there are tons of approximation results and heuristic solvers for tsp...
<subtwo>	deerhawk: when i studied cs i had a class mate who made an incredible fast and accurate tsp algorithm.
<deerhawk>	subtwo: "many scientist" are convinced that np-hard problems can't be perfectly solved in polynomial time. thus, there's a chance that one is wasting ones time if one is trying to do that with classical computers?
<deerhawk>	subtwo: yeah, that's a more feasible and useful approach. :p
<subtwo>	deerhawk: yes. most probably so. but it has not been proven that np is not p so...
<woggle>	deerhawk: most theorists think your time is better spent trying to prove that np-hard problems are not in p.
<deerhawk>	woggle: yeah, and i agree with them. yet, i waste my time on number theory.
<nitrix>	category theory over here.
<nitrix>	i'm learning. slowly.
<standoo>	nitrix: what's your background?
<woggle>	deerhawk: conjectures on factoring are different...
<subtwo>	deerhawk: for the tsp problem i would probably try different graph-representations and visually try to understand the problem to get a better understanding of the underlying "hardness"
<subtwo>	deerhawk: but, maybe throwing pure numbers at some machine learning algorithm could give some interesting results as well...
<deerhawk>	subtwo: well, i do that a lot actually. trying to understand the underlying hardness. but the only thing that happens then is that i try to counter the hardness. i think about parallelization etc.
<woggle>	for tsp, there are excellent approximation results if the distances are euclidean.
<_blizzy_>	hmm, i wnat a web dev project in go
<_blizzy_>	but idk what
<standoo>	_blizzy_: hmm...
<standoo>	_blizzy_: why go?
<subtwo>	deerhawk: most often when new angles to a problem is revealed the "hardness" disappears. usually it all depends on how you look at the problem.
<_blizzy_>	standoo, so i can get familiar with it
<_blizzy_>	i usually do projects to get familiar with languages
<_blizzy_>	well, more familiar
<deerhawk>	subtwo: for example, i can easily see that some theoretical algorithms are just "blind" in some of its steps where the step could have taken any direction; so the algorithm equates pure guessing/brute force.
<standoo>	_blizzy_: build a blog or scheduling app
<pressure679>	guys, how can a program guess the future?? - http://anonhq.com/predicting-future-since-1994-illuminati-card-game/
<subtwo>	deerhawk: approximation algorithms are really educated guesses...
<standoo>	pressure679: it can give the illusion of guessing the future
<standoo>	pressure679: like nostradamus did
<subtwo>	deerhawk: given that assumption all algorithms dealing with np-hard problems would in some sense have a component of guessing
<deerhawk>	pressure679: here's a prediction for you:  sometihng will happen today!   *wooow*
<deerhawk>	pressure679: here's another one: you will expect a thing, but that thing won't occur.  (secret: happens everyone everyday).
<pressure679>	i guess you are right
<nitrix>	standoo: i'm afraid my background is nothing impressive.
<standoo>	nitrix: at least it has some theory in it
<standoo>	nitrix: eg math, cs?
<nitrix>	that was on my own. i'm self taught.
<standoo>	nitrix: oh
<standoo>	nitrix: not a phd or masters in something?
<nitrix>	somehow i manage to have good references. i'm in contact with facebook for a job offer, but no, haven't done any of those.
<pressure679>	1/3 of programmers are self-thaught
<pressure679>	*taught
<nitrix>	i did notice that most successful programmers were dropouts, though.
<pressure679>	i find the best people to program in their spare time
<_blizzy_>	how does one get noticed
<_blizzy_>	in the programming world
<pressure679>	doing something useless like creating a wpa2-brtue force cracker is noticeable at least
<nitrix>	_blizzy_: stand out in every team. if they give their 100%, give 110%.
<_blizzy_>	nitrix, oh, i'm not on any teams.
<_blizzy_>	._.
<nitrix>	_blizzy_: the good programmers all know each others. you'll eventually see the same persons again and again at different work places, open-source projects, etc.
<vdamewood>	oh how i wish i had bought a computer with usb3 instead of usb2.
<_blizzy_>	nitrix, oh.
<pressure679>	i have recently found scipy and wanted to know if anyone has some data i can mine and analyze?
<_blizzy_>	i wish i knew other programmers irl.
<_blizzy_>	hell, i wish i knew other guys
<nitrix>	meh. irc is enough :p
<_blizzy_>	outside of school.
<_blizzy_>	but i'm looking for a bf. ._.
<_blizzy_>	i can't find a bf on irc.
<subtwo>	_blizzy_: find a way to educate others. that will get you noticed, programmers love to learn new stuff.
<nitrix>	_blizzy_: just tie up the first stranger on the street.
<aewffwea>	pressure679: 3/4 of programmers pull statistics out of their asses to sound smart
<standoo>	pressure679: spicy?
<_blizzy_>	aewffwea, 60% of statistics are made up on the spot.
<aewffwea>	_blizzy_: 40% of the statistics are false...
<_blizzy_>	and a 100% reason to remember the name.
<pressure679>	aewffwea: now now, we're all smart here, right? :)
<standoo>	haha
<aewffwea>	pressure679: only 30% of us...
<_blizzy_>	that's implying i'm smart
<aewffwea>	(statistically speaking of course)
<nitrix>	aewffwea: _blizzy_ you can also tell when someone is lying about a number when they do not round it up to like 0 or 5, just to make it seem more realistic.
<_blizzy_>	nitrix, lol.
<nitrix>	i'm serious :/
<_blizzy_>	i'm desperate, but not that desperate
<_blizzy_>	oh
<_blizzy_>	.-.
<aewffwea>	nitrix: you meant that in 91.423% of the cases, you can also tell when someone is lying about a number when they do not round it up to like 0 or 5, just to make it seem more realistic.
<nitrix>	oh god, wrong timing to say "i'm serious".
<_blizzy_>	lol.
<_blizzy_>	timing is great.
<nitrix>	aewffwea: bingo!
<church->	heheheh
<subtwo>	nitrix: i saw a study about random numbers that banks use to detect fraudlent behaviour. apparently made up random numbers appear "too random".
<pressure679>	i made this primitive irc-bot in golang and python, anyone wants to further develop it?
<nitrix>	subtwo: i would believe that.
<_blizzy_>	that reminds me
<_blizzy_>	i made an irc bot in go
<nitrix>	subtwo: especially that prices are almost always .99 or .49 and similar, seeing lot of transactions with 17 cents or something would just be suspicious that it's a computer program trying to be random.
<pressure679>	_blizzy_: do tell, standard irc? which bot? sentences? maybe some natural language processing? :p
<nitrix>	subtwo: yeah that make total sense actually ;o
<_blizzy_>	pressure679, well, it's a standard irc bot. it's not online, since bots aren't allowed in here. ._.
<nitrix>	_blizzy_: i guess they're allowed until someone finds out.
<_blizzy_>	nitrix, true.
<_blizzy_>	oh god dywtbas is playing
<pressure679>	_blizzy_: do you have it on github?
<_blizzy_>	pressure679, yes.
<pressure679>	_blizzy_: interesting
<pressure679>	_blizzy_: could you send a link?
<deerhawk>	if you find a faster (but still not in p-complexity) algorithm for solving sudoku, will that also improve the algorithms for all the other np-complete problems?
<church->	_blizzy_: well, do you? ;)
<nitrix>	deerhawk: hard question.
<denommus>	hi
<church->	deerhawk: off the top of my head,  probably not. since it'd only be a heuristic then.
<church->	might be wrong though.
<lf94>	aye
<_blizzy_>	https://github.com/notblizzard/ircblizzybotgo
<subtwo>	deerhawk: well... i think you theoretically should be able to transform one np-problem to another np-problem. therefore if you solve one you have solved them all.. not sure if that translates to approximations. i would not think so.
<subtwo>	deerhawk: as the approximations are based on guessing made in the specific problem space
<nitrix>	deerhawk: you'd have to prove the algorithm is performing better than np, which i thought was the point of np, to prove that no algorithm can do that?
<nitrix>	denommus: maybe if there's no np proof yet. that's all i have.
<nitrix>	deerhawk: ^ err..
<_blizzy_>	church-, do i what?
<hotcoder>	hello all :)
<subtwo>	deerhawk: if the problem is np-complete it should be possible to use the "same" solution to another np-complete problem if i understand correctly.
<lf94>	_blizzy_, can i really strongly recommend one thing to you?
<_blizzy_>	lf94, sure.
<lf94>	use descriptive variable names, please.
<_blizzy_>	._. oh. thxs.
<lf94>	_blizzy_, your code will look a hundred times better.
<_blizzy_>	thanks, lf94
<deerhawk>	subtwo: that is correct. but is the same true for approximations? :p
<django_>	are there any lecutres on youtube on: theory of automata and formal languages
<lf94>	_blizzy_, i usually rename variables after i've completed a function or something
<subtwo>	deerhawk: if i had to take a guess. no.
<_blizzy_>	lf94, oh ok.
<_blizzy_>	there was an award ceremony today.
<_blizzy_>	i'm like where is the programming recognition.
<vdamewood>	yay. halfway done.
<_blizzy_>	i feel so
<_blizzy_>	unaccomplished sometimes
<_blizzy_>	there are people getting scholarships, and i'm just programming.
<_blizzy_>	like i'll get anything good with it.
<vdamewood>	oh, i meant my file transfer.
<_blizzy_>	nice.
<subtwo>	deerhawk: when i think about it some more, it should be true for approximations. if you are able to transform one np-complete problem into another where you have a fast approximation algorithm it has to work on that transformed problem as well.
<subtwo>	deerhawk: e.g. if you have a fast approximation for the 3 sat problem you can then transform any other np-complete problem into a 3 sat problem and run the algorithm. theoretically.
<hotcoder>	quick question you guys
<hotcoder>	is there a programming language that rhymes with shark?
<pyon>	hotcoder: spark, a dialect of ada.
<hotcoder>	ahh oky
<hotcoder>	so when i grow up i'm gonna write a show
<hotcoder>	about top notch programmers
<hotcoder>	and in there there will be 2 superheroes
<hotcoder>	called
<hotcoder>	sparkboy and javagirl
<hotcoder>	:d
<pyon>	hotcoder: spark isn't that well known.
<pyon>	hotcoder: so even programmers might have trouble associating it with the programming language.
<hotcoder>	when i grow up i'm gonna open a shop for middle eastern people in the city
<hotcoder>	i'll call it turban outfitters
<_blizzy_>	hotcoder, nice.
<_blizzy_>	sharkboy and lavagirl was a good movie.
<hotcoder>	didnt like it much to be honest with u
<hotcoder>	tho that might be cause i watched it when i was already older :p
<church->	no, no it was not.
<maslen>	what's the channel for programming jobs? a business associate is looking for someone who can write python for him.
<aewffwea>	maslen: linkedin
<maslen>	erm..
<aewffwea>	maslen: #linkedin ? xd
<madman2021>	maslen: does it "need" to be python
<maslen>	yes, it's taking over an existing project.
<madman2021>	maslen: linked in or stackoverflow careers then
<django_>	maslen, ##freelance
<maslen>	django_: erm, nope.
<encapsulation>	https://ideone.com/zdunbu how can i get stuck in this loop?
<encapsulation>	can someone please explain
<pyon>	encapsulation: the loop decides it's being underpaid for the amount of work it does
<pyon>	encapsulation: and then it goes on strike
<encapsulation>	lol
<maslen>	encapsulation: are you familair with how floats are implemented?
<encapsulation>	no
<encapsulation>	i don't even know what a float is
<encapsulation>	i think of it just as a way to get more digits
<maslen>	http://en.wikipedia.org/wiki/ieee_floating_point
<encapsulation>	instead of whole numbers
<maslen>	bad way to think about it in a low-level language.
<encapsulation>	uh oh
<maslen>	basically, the same way integers are power of 2 up.
<maslen>	(1,2,4,8...) the decimals are powers of 2 down (2^-1, 2^-2, etc.
<encapsulation>	=s
<maslen>	(so 0.5, 0.25, 0.125, ...)
<maslen>	and there's only a fixed number of bits available.
<encapsulation>	what is the simple explanation for why 1 - .5 isnt .5?
<encapsulation>	sorry i don't quite get it
<maslen>	so something like 0.75 can be reproduced exactly. but other numbers don't fit exactly, which makes comparing equality with floats a very bad idea.
<encapsulation>	oh
<encapsulation>	this is shocking
<encapsulation>	this could alter dosage accuracy
<maslen>	there's a reason standard floating point numbers are not used for financial calculations.
<encapsulation>	what do you suggest for comparing equality?
<maslen>	the python docs recommend comparing within a threshhold
<maslen>	so instead of x == 0.5, do something like (x - 0.5) < 0.0001
<maslen>	are you in the medical device industry?
<encapsulation>	i need to research floating point
<encapsulation>	these implications are vast yes
<nitrix>	it's called epsilon.
<nitrix>	epsilon gives an upper bound on the relative error of floating points.
<maslen>	nitrix: thank you. i'm pretty tired - new baby and root canal today - so my memory is shot.
<nitrix>	financial calculations have the benefit that they can simply with with smaller units, cents.
<nitrix>	s/with with/work with/
<nitrix>	maslen: no problem :p
<maslen>	encapsulation: are you familiar with integer overflows as well?
<maslen>	see http://arstechnica.com/information-technology/2015/05/boeing-787-dreamliners-contain-a-potentially-catastrophic-software-bug/ for some discussion
<encapsulation>	maslen, yes
<encapsulation>	because of twos compliment?
<encapsulation>	e
<encapsulation>	when the sign goes negative?
<encapsulation>	is there a less math heavy explanation how to subtract .5 from 1 in c++?
<sirgaspo>	hi there! is there anybody here that would mind helping me understand 2's complement a little better?
<maslen>	encapsulation: do you need something to give people an idea of how it works or to actually understand it?
<maslen>	if you want teh latter, you need the math
<maslen>	sirgaspo: what about it?
<maslen>	2's complement is used instead of plain inverting because it lets you add a positive and negative number directly, and so you don't waste an extra number with a -0
<sirgaspo>	maslen: i'm not exactly sure how the actual process of converting the numbers works
<sirgaspo>	i know the flip them'
<sirgaspo>	so like 0100011
<maslen>	then add 1
<maslen>	the end.
<sirgaspo>	that's preconverted
<sirgaspo>	the actual conversion part is what i'm not getting
<sirgaspo>	i understand how to add one
<maslen>	ok, so first flip
<maslen>	0100011 becomes 1011100
<maslen>	then add 1
<maslen>	1011100 becomes 1011101
<maslen>	1011101 is your result.
<sirgaspo>	okay, why does the 1st digit in the original "0", stay a zero when it is flipped? or am i looking at it wrong?
<cobracommand>	who uses flow charts?
<cobracommand>	for programming
<standoo>	cobracommand: you referring to flow based programming?
<cobracommand>	diagrams to plan your code
<standoo>	cobracommand: i jut rapid prototype
<standoo>	cobracommand: and fix things until i get it to work
<maslen>	standoo: not everything lends itself well to 'just doing it'
<standoo>	maslen: more to exploring ideas
<maslen>	it's often cheaper timewise to think about how something is going to be structured before writing code
<standoo>	maslen: then when you know how the structure is, then you can structure it better
<maslen>	the actual implementation of that structure can be done on the fly
<maslen>	i've had to clean up far too many messes from people who thought that way
<standoo>	maslen: yeah, and some point it will get unmanagable
<standoo>	maslen: and then you have to organize it before your brain gets overwhelmed
<maslen>	which likely means that you'll have to throw out and redo at least part of what you've already written
<maslen>	and that's the best-case.
<cobracommand>	so better to draw a flow chart and get it right the first time
<archilius>	morning everyone. :)
<peterfa>	threading, like love, is a simple idea, but it can get complicated.
<sir_galahad_ad_>	madness, as you know, is like gravity. all it takes is a little push.
<peterfa>	what if dante's inferno is really a rorschach test but we're all psychopaths?
<pyon>	sir_galahad_ad_: a little "git push --force" ?
<sir_galahad_ad_>	:d
<apoplexy>	hi is it possible to induce a recurring bsod error message onto your own laptop
<maslen>	yes.
<maslen>	windows vista, unpatched, had a bug in smb v2 that did exactly that iirc.
<pyon>	why is it that, whenever i find an easy to understand gc implementation on the intertubes, it's obviously super-inefficient? http://www.lwh.jp/lisp/gc.html
<apoplexy>	its a windows 7 laptop
<apoplexy>	and i need it to bsod
<peterfa>	apoplexy, you could research current bugs but i think you want to write a driver
<peterfa>	apoplexy, make that driver listen to a program that tells it to bsod.
<apoplexy>	im not a programmer unfortunately
<apoplexy>	i just need this thing to not work
<apoplexy>	well, my other laptop
<peterfa>	apoplexy, i don't know this for a fact but i suspect that if the driver decides a value is out of range, it throws a panic and the kernel kills the system.
<apoplexy>	do you think i'll be able to figure it out quickly or is it a huge thing?
<peterfa>	apoplexy, i don't know either. asking in the windows development channel.
<apoplexy>	pm me what you get, i have until the 30th to bsod this computer
<peterfa>	apoplexy, i think you'll be ok just writing some c code that bsods. i don't think the logic will take long.
<peterfa>	apoplexy, you'll be learning how to make a hello world driver.
<peterfa>	apoplexy, you'll probably also use the gnu c compiler, which i don't know how to use.
<apoplexy>	ok in a week when we approach this projects deadline i will return and get cracking
<apoplexy>	thanks
<grizzlytrident>	i'm trying to find the apache library that you can use with java...does anyone know the specific link (yes i googled, yes i am bad at googling)
<grizzlytrident>	?
<grizzlytrident>	or what i should google?
<pyon>	grizzlytrident: apache has lots of libraries that you can use with java
<grizzlytrident>	pyon: i think i'm looking for commons
<pyon>	grizzlytrident: library for doing what?
<grizzlytrident>	pyon: http requests and such
<grizzlytrident>	the specific class i need is httpclient
<grizzlytrident>	i guess i could do it without...but this is quicker...or should have been quicker
<pyon>	goddammit
<pyon>	getting used to firefox' default keybindings is hard
<pyon>	after having used firemacs for so long
<pyon>	https://en.wikipedia.org/wiki/apache_commons
<grizzlytrident>	thanks
<pyon>	perhaps somewhere there?
<grizzlytrident>	pyon: i think this might be it http://commons.apache.org/proper/commons-net/download_net.cgi
<grizzlytrident>	going to have to dl and see
<proveditor>	pyon: wow i never knew firemacs was a thing... thanks lol
<pyon>	couldn't you first check the docs?
<grizzlytrident>	pyon: if i were competent, yes
<ennui>	when writing writing criteria (for hibernate) is a projection just the 'select' clause. whilst restrictions would be the 'where' clause?
<pyon>	proveditor: well someone just recommended me another extension, treestyletab, which organizes tabs very neatly... but sadly isn't compatible with firemacs
<pyon>	so i have to relearn the default keybindings
<grizzlytrident>	screw it. i'm doing it without apache
<grizzlytrident>	i don't need their stinkin library >:
<encapsulation>	how can i compare < or > ? i only see using epsilon for ==
<pyon>	encapsulation: != ?
<pyon>	encapsulation: oh
<pyon>	encapsulation: use the absolute value?
<pyon>	encapsulation: test whether the absolute value of the difference is no smaller than epsilon
<encapsulation>	pyon, i need to check if double - double < .5
<planckwalk>	encapsulation: do that then?
<encapsulation>	its not .5
<encapsulation>	because of floating point i just fouind out
<pyon>	um
<encapsulation>	1 - .5 != .5
<encapsulation>	is what i just learned
<encapsulation>	i was taught all wrong in school
<pyon>	encapsulation: you were taught right... it's floating point math that is super weird
<pyon>	but i'd be surprised if 1 - .5 were different from .5
<encapsulation>	it is =s and now im worried about all of my code
<pyon>	oh well
<encapsulation>	pyon, https://ideone.com/hriqj8 infinite loop
<grim001>	just don't use equality checks with floating point unless you had previously set it to that exact value
<encapsulation>	how can i check equality?
<pyon>	thank goodness lately i don't have to fix anyone else's shitty code besides mine
<encapsulation>	i have a function that returns a double, and user has entered a double
<grim001>	subtract and check that the difference is below a threshold
<pyon>	(and that of my coworkers, but their shitty code is shitty in predictable ways)
<encapsulation>	i need to know if one is greater or less
<jeaye>	encapsulation: there are hundreds of articles on floating point comparisons.
<encapsulation>	i just read 3
<encapsulation>	=s
<jeaye>	read 7 more.
<encapsulation>	they all talked about ==
<encapsulation>	not < or >
<grim001>	do you think all math is broken on floating point values?
<grim001>	comparisons work fine
<jeaye>	encapsulation: < and > don't suffer the same issues as ==
<encapsulation>	do theyt?
<encapsulation>	i'm so worried
<jeaye>	encapsulation: you can use < and > normally with floats.
<encapsulation>	the tests i have
<encapsulation>	lots of double vs double tests
<encapsulation>	jeaye
<encapsulation>	what do you mean?
<encapsulation>	it's not working
<encapsulation>	and did you see my code
<encapsulation>	its an infinite loop
<encapsulation>	and std::cout << 1 - .5;
<encapsulation>	no output!
<pyon>	encapsulation: https://ideone.com/eyzxyl
<jeaye>	1 - .5 is using neither < nor >
<nitrix>	pyon: is there a version of >>= that doesn't require the first m to the the same type as the second m ?
<nitrix>	(>>=) :: monad m => m a -> (a -> m b) -> m b
<grim001>	try to be a little more coherent encapsulation
<pyon>	nitrix: no that wouldn't make sense
<encapsulation>	?
<encapsulation>	that shouldnt even work
<encapsulation>	isnt that code wrong
<pyon>	encapsulation: my code is always right, sometimes reality is wrong
<pyon>	jk
<encapsulation>	mine doesnt output .5
<encapsulation>	and the test fails
<pyon>	nitrix: perhaps you want to use a monad morphism (see mmorph package) to project one of the monads into the other?
<encapsulation>	jeaye, this is my code: while((max - min) < 0.5)
<encapsulation>	input value is 6 and 5.5, or 1 and .5 ,e tc
<encapsulation>	loop continues
<nitrix>	pyon: so there's no built-in way to do :: maybe bytestring -> (bytestring -> io ()) -> io () ?
<nitrix>	pyon: i'm looking for a variant of <$> where the function has (a -> m b) type :/
<pyon>	nitrix: what exactly should happen if the first argument is nothing?
<nitrix>	nothing.
<jeaye>	encapsulation: doesn't matter.
<nitrix>	oh.
<pyon>	nitrix: maybet
<encapsulation>	jeaye, what?
<jeaye>	encapsulation: as i said, < and > are fine. - and + and == are not.
<millerti>	yo, what's up?
<encapsulation>	jeaye, its not working
<encapsulation>	thats waht i'm saying
<grim001>	encapsulation, the problem is something in your code.
<encapsulation>	i can show the full code
<millerti>	it's too bad we don't have people on this channel named inheritance and polymorphism.
<nitrix>	pyon: is it idiomatic to wrap to maybet just to use <$> lol ?
<grim001>	are you sure you are dealing with all floating point numbers?
<nitrix>	pyon: i suspect `maybe` is more frequent.
<pyon>	nitrix: you probably don't want to use <$> right now
<jeaye>	encapsulation: i don't want to see your code.
<pyon>	nitrix: oh that could work as well
<jeaye>	encapsulation: take the assumption that i'm correct and re-evaluate your code. you're under the false assumption that your code is magical and that's why it's not working.
<nitrix>	pyon: yeah i know it does, but i'm trying to improve my understanding of monads and transformers; when it makes sense to use them and when it doesn't.
<millerti>	don't you hate it when someone sends you a private message asking for help with code, and you look at their code, and it just gives you a massive headache?
<pyon>	nitrix: another possibility is using sequence_
<encapsulation>	jeaye, what?
<encapsulation>	i'm under the false assumption that my code is magical?
<encapsulation>	lol
<pyon>	nitrix: errr mapm_
<encapsulation>	ive been coding for 3 months
<encapsulation>	you're criminally insane if you beleive that
<jeaye>	encapsulation: magical doesn't always mean good.
<encapsulation>	i'm in here asking for help
<encapsulation>	if i thought it were magical i wouldnt be
<encapsulation>	https://ideone.com/q4qmqx
<pyon>	nitrix: mapm_ :: (bytestring -> io ()) -> maybe bytestring -> io ()
<nitrix>	pyon: yes but no. mapm_ gave me an error because the monad wasn't []
<pyon>	nitrix: the actual type is more general
<encapsulation>	i fully believe i've done something wrong but i don't know what
<pyon>	nitrix: what ghc are you using?
<pyon>	nitrix: 7.8 or 7.10?
<ennui>	if i use a projection with a criteria query does it still return an object?
<nitrix>	pyon: 7.8
<encapsulation>	i just read a few complicated articles on floating point but here people are saying < and > work fine
<pyon>	nitrix: ah that explains it
<jeaye>	encapsulation: you clearly aren't interested in people helping you, so maybe you should just go read more and find it out yourself.
<pyon>	nitrix: use data.foldable.sequence_
<encapsulation>	jeaye, i'm not?
<pyon>	nitrix: which is different from the prelude in ghc <= 7.8
<jeaye>	encapsulation: i'll say it one more time: < and > work fine. i've said this several times now. your code is also using - which has different results than you'd expect, but you're blaming <
<encapsulation>	that's the problem i hadn't realized
<millerti>	encapsulation:  what is the problem exactly?
<jeaye>	you verified this by printing 1.0 - 0.5.
<encapsulation>	the < is fine its the - that doesnt work
<jeaye>	hallelujah!
<jeaye>	encapsulation: it "works" as intended.
<jeaye>	you just need to understand what's intended.
<millerti>	i'm personally taking a hiatus from being smug for a while after realizing that all these years i've been using some_int = (int)round(some_double), when lrnd is the appropriate function and way faster.
<millerti>	sorry, lrint
<ennui>	anyone familiar with criteria or hibernate for java?
<millerti>	i had to do that a few years ago when someone showed me a less stupid way of coding an adder in verilog with a carry-in than the way i had been doing it.
<pyon>	millerti: :-o
<millerti>	pyon:  i'd been doing this weird thing with subtracting 1's complement.  the better solution is ({a, 1} + {b, c_in}).
<pyon>	:-o
<millerti>	that 1 should be 1'b1.
<millerti>	you know what's really weird?  when i think i'm, you know, okay at doing something.  and then i encounter someone who is older and more experienced and believes they're an expert, and i assume their belief about themselves is correct.  then eventually i find out that they're not better than me.
<electrojustin>	happens more frequently than it shoudl
<electrojustin>	*should
<pyon>	millerti: heh
<pyon>	millerti: can happen
<nitrix>	pyon: is there a way to import data.foldable to give priority to mapm_, without using a qualified name?
<nitrix>	i guess i could import prelude hiding mapm_
<nitrix>	since [] is a foldable too? the generic version should work just fine.
<nitrix>	learning a lot today :d
<pyon>	nitrix: yes, in practice, haskell programmers end up have to hide lots of prelude definitions
<pyon>	nitrix: just so that they can import more generic versions
<pyon>	but ghc 7.10 fixes this to some extent
<nitrix>	that saddens me :(
<nitrix>	pyon: oh?
<pyon>	in ghc 7.10, prelude.sequence_ is just a reexport of data.foldable.sequence_
<pyon>	ditto for mapm_
<nitrix>	isn't prelude standardized?
<pyon>	nitrix: yes, but the haskell standard underwent a major revision last year
<nitrix>	how do they get away w--- oh.
<pyon>	the "not general enough" definitions from the prelude got fixed
<nitrix>	brilliant! :o
<pyon>	but the fundamental problem is a weakness of the haskell module system
<pyon>	in ml, you just make a more general signature and call it a day
<pyon>	no need to update any standards, signature matching is structural already
<pyon>	alas haskell modules are... well... "less sophisticated" than ml modules
<pyon>	but thaqt's quite the understatement
<nitrix>	is this why records feels so clunky?
<pyon>	no, record clunkiness is a separate defect
<o0elise0o>	how much would a captured amazon delivery drone be worth?
<nitrix>	lmao
<pyon>	ebut it doesn't annoy me as much -- lenses are a reasonable fix in practice
<nitrix>	o0elise0o: that's brilliant. thank you, you made my day <3
<pyon>	(tho ofc it'd be nicer if haskell records didn't suck)
<o0elise0o>	hehe
<winny>	millerti: each individual presents their capabilities in a different way, there is an effect called the dunning-kruger effect, so that's surprising, because it seems most experts seem to realize there is always so much more to learn
<grizzlytrident>	could anyone tell me why i'm getting an error on line 15? http://pastebin.com/n4kcr1qd
<grizzlytrident>	it's java
<o0elise0o>	i started reading /. again recently and drone talk is most of the articles it seems
<winny>	/. is still alive? lol.
<nitrix>	o0elise0o: i totally have that mental picture of you, hiding in a bush with a butterfly net and an apple watch on the ground, waiting >_<
<o0elise0o>	haha
<electrojustin>	grizzlytrident: perhaps it would help to paste the error message as well
<grizzlytrident>	electrojustin: good idea. please hold
<winny>	o0elise0o: collects mac users
<winny>	gotta catch em all
<grizzlytrident>	electrojustin: http://pastebin.com/mxuvduyk
<grizzlytrident>	error code ^
<grizzlytrident>	error message**
<o0elise0o>	the funny part is if i saw an apple watch on the ground(and new what one looked like) that would be more easily sold off then an amazon drone you have to keep wrapped in tin foil so that it wont phone for help
<o0elise0o>	i hope the amazon drones end up with voices
<grizzlytrident>	and personality
<winny>	'hi honey i'm home'
<grizzlytrident>	robosexuality is not a crime
<o0elise0o>	imagine it sternly ordering you around as you kidnap it
<electrojustin>	yeah, sorry, i'm not terribly familiar with java networking
<winny>	grizzlytrident: seen the futurama episode? it's great
<winny>	robosexuality
<grizzlytrident>	winny: :v
<winny>	:d
<nitrix>	a.z., phone, home.
<grizzlytrident>	electrojustin: oh well thanks anyway
<o0elise0o>	once the amazone drones go live i give it a week before at least one gets robonapped
<grizzlytrident>	can anyone else tell me why i would get a "file not found" when trying to request a web page?
<grizzlytrident>	file not found exception**
<zzultan>	update your malware
<o0elise0o>	i figure itll be about two weeks before the first robonapped amazone drone appears on youtube in an 'unboxing' video involving an autopsy of it
<pyon>	grizzlytrident: filenotfound is a legitimate value of every type
<grizzlytrident>	zzultan: not malwar :c
<pyon>	errr file_not_found
<pyon>	fix'd spelin
<nitrix>	o0elise0o: then there'll be a black market and soon enough, you'll see video on youtube: "how to jailbreak your amazon drone"
<electrojustin>	this is probably a stupid suggestion, but maybe it needs a www.?
<grizzlytrident>	...maybe?
<o0elise0o>	'new method found to safely remove the tinfoil!"
<o0elise0o>	missmatched quotes
<grizzlytrident>	electrojustin: nope
<winny>	grizzlytrident: maybe your routes aren't configured as you thought they are
<grizzlytrident>	my routes?
<winny>	and you're requesting a route that isn't registered
<winny>	yes most webapps have some sort of page routing
<grizzlytrident>	ohh
<grizzlytrident>	okay. let me check, thanks
<o0elise0o>	http://tech.slashdot.org/story/15/05/07/2252227/amazons-delivery-drones-will-be-able-to-track-your-location
<o0elise0o>	http://tech.slashdot.org/story/15/05/07/2131226/creating-the-open-drone-ecosystem-takes-room-to-experiment
<o0elise0o>	http://mobile.slashdot.org/story/15/05/07/1918230/centimeter-resolution-gps-for-smartphones-vr-drones
<o0elise0o>	http://yro.slashdot.org/story/15/05/07/1833227/faa-program-tests-drones-flying-beyond-pilots-line-of-sight
<zzultan>	prolly has tons of mini drones that swarm you if you try to stop it's delivery mission.
<grizzlytrident>	zzultan: and carry you off into the sunset
<grizzlytrident>	"remember meeeeeee..."
<electrojustin>	complete tangent: i think i need to find a project that doesn't just involve playing counter strike
<grizzlytrident>	electrojustin: counterstrike bot
<grizzlytrident>	no wait
<electrojustin>	now now, im not looking for a vac
<grizzlytrident>	electrojustin: you don't need to get vac banned. make it a color aimbot :p
<electrojustin>	although vac doesn't seem particularly good at detecting code injection *looks sideways*
<grizzlytrident>	nope
<grizzlytrident>	i did make a very obvious aimbot and played with it for about 2 weeks before getting vac banned on one account
<grizzlytrident>	they just can't handle my level
<grizzlytrident>	that's all
<electrojustin>	hehe
<electrojustin>	was it a color aimbot?
<grizzlytrident>	nope
<electrojustin>	or i guess that would probably be a trigger bot, huh
<grizzlytrident>	code injection
<grizzlytrident>	color aimbots are neeevvveerrr detected
<electrojustin>	yeah vac isn't particularly good
<o0elise0o>	http://tech.slashdot.org/story/15/05/06/1235213/self-driving-big-rigs-become-a-reality
<grizzlytrident>	they make it sound so legit too
<electrojustin>	overwatch is though
<grizzlytrident>	but it isn't
<grizzlytrident>	vac does not revoke bans
<grizzlytrident>	do not challenge vac
<grizzlytrident>	all who challenge vac will be banned
<electrojustin>	it's very not legit
<electrojustin>	i inject code into counter strike regularly for surprisingly legit reasons
<winny>	vac is zero tolerance, just like punkbuster is
<grizzlytrident>	yeah, like getting points
<grizzlytrident>	very legitimate
<electrojustin>	namely the game doesn't fucking work unless i hook a certain graphics call
<grizzlytrident>	i entered myself into a competition on csgo with my aimbot
<grizzlytrident>	played for about an hour until they admin banned me
<grizzlytrident>	i didn't think it was obvious >.>
<o0elise0o>	http://build.slashdot.org/story/15/05/05/1950212/mark-and-joel-make-autonomous-drones-in-their-spare-time-video
<electrojustin>	doesn't play well with amd on arch linux. i have to inject a call to glfinish() into the rendering pipeline to prevent terrible lag
<winny>	it's really funny, how online gaming works
<winny>	there'll always be an element that requires trust on the client computer
<grizzlytrident>	omg i hate this website....i can't just download the page
<electrojustin>	yeah it's not a static website, you're going to have some trouble
<winny>	therefore all you do is pray and try to make it difficult, but you can never eliminate the possibility of cheating
<grizzlytrident>	electrojustin: yeah i'm trying to find shortcuts
<silenthinker>	is it important to be able to explain concepts to yourself when learning to program?
<grizzlytrident>	silenthinker: if you can explain it then you already know it?
<winny>	restating what you have learned can help
<o0elise0o>	http://tech.slashdot.org/story/15/05/04/2222239/single-verizon-ip-address-used-for-hundreds-of-windows-7-activations
<electrojustin>	winny: they could at least make it a little trickier to re
<winny>	electrojustin: precisely, make it more difficult
<winny>	it's always a temporary solution
<winny>	cat and mouse
<silenthinker>	grizzlytrident:  what if you cant explain it to yourself?
<electrojustin>	you can make things a right pain in the ass though
<winny>	that's what i mean
<electrojustin>	no but i mean permanently
<winny>	but even a pain in the ass is possible to circumvent
<o0elise0o>	its only a pain in the ass for the first person the first time
<electrojustin>	but by that time the game updates with a newer version of the binary and you're back to square one
<winny>	you are giving information to an untrusted computer
<o0elise0o>	you're talking about software not hardware
<winny>	there is always a risk
<winny>	yeah
<electrojustin>	there is some risk, but there is also a limit to the patience and time of an re
<o0elise0o>	re?
<winny>	that's how anticheat really works lol
<electrojustin>	o0elise0o: reverse engineer
<winny>	i agree
<electrojustin>	anticheats make it harder from the actual exploitation/injection part
<winny>	besides cheating doesn't ensure a winner
<electrojustin>	but a lot of games could also do a lot more at the re stage of developing hacks
<grizzlytrident>	electrojustin: they specify directories with spaces o_0
<grizzlytrident>	in this website
<electrojustin>	grizzlytrident: dear god
<winny>	meh
<winny>	it's not that bad
<winny>	as long as your webapp isn't dumb
<grizzlytrident>	winny: only as smart as me
<winny>	:d
<o0elise0o>	%20
<winny>	ah
<grizzlytrident>	yeah %20 and all...but still
<grizzlytrident>	wtf
<grizzlytrident>	why do that?
<winny>	it's percent encoding for a space
<winny>	you could translate spaces to _
<winny>	mediawiki does this for resources
<winny>	like pages and images
<winny>	for example this works https://en.wikipedia.org/wiki/main%20page (redirects to the _ variant)
<grizzlytrident>	winny: hm
<winny>	but in general you should always handle special chars
<o0elise0o>	%21
<winny>	_ is just an aesthetic fix
<grizzlytrident>	well
<grizzlytrident>	i just did a post out of the web browser
<grizzlytrident>	i at least have the directory i need to address to actually send data
<grizzlytrident>	jeeze
<grizzlytrident>	should have thought of that earlier
<audioburn_work>	how can one find out about industries that are living in the stone ages?
<audioburn_work>	technology-wise
<planckwalk>	archaeology.
<grizzlytrident>	planckwalk: nice
<grizzlytrident>	audioburn_work: try looking into gov service
<grizzlytrident>	their methods are usually outdated
<grizzlytrident>	:p
<audioburn_work>	heh
<planckwalk>	pretty much any very large organization that has been around for a while will be using very old equipment and procedures
<planckwalk>	or at best some mix of older and newer.
<grizzlytrident>	planckwalk: software development?
<grizzlytrident>	that would be scary
<grizzlytrident>	i guess if they need to do upkeep on software already made
<planckwalk>	where do you think the cobol job ads come from? :)
<grizzlytrident>	haha
<grizzlytrident>	i have this aunt i despise....she tried to relate to me by talking to me about cobol the other day
<grizzlytrident>	it was pretty funny
<electrojustin>	hehe yeah a lot of people i talk to suddenly have fond memories of working with fortran in school when they find out i do computer stuff
<pyon>	grizzlytrident: don't be like that, when you tell your nephews or nieces about java/python/whatever, they'll think you're a fkn idiot
<grizzlytrident>	pyon: she sold my grandmother's belongings when she was dying
<grizzlytrident>	was stealing them and selling them on ebay
<pyon>	:-o
<grizzlytrident>	i think she deserves it
<grizzlytrident>	and living in her house
<pyon>	oh well that's different
<electrojustin>	pyon: that's why you have to learn lisp and c. apparently they're timeless
<grizzlytrident>	yeah, she is a sociopath
<grizzlytrident>	haha
<grizzlytrident>	i always make it a point to let her know she isn't welcome
<grizzlytrident>	subtle things...like starting a conversation with her and walking away
<pyon>	well i'd just not talk to her
<pyon>	electrojustin: dunno, c just gets me positively angry
<denommus`>	hi
<grizzlytrident>	pyon: she forces herself on us...visits randomly
<zacts>	the main reason i personally find interest in c, is to learn unix and unix syscalls
<grizzlytrident>	anyway, enough about her i suppose
<zacts>	and to possibly do os patches
<zacts>	like kernel stuff
<electrojustin>	pyon: i like it. but it's undeniable that the language never dies.
<zacts>	other than that, i'm mainly interested in lisp and (scheme) right now
<electrojustin>	i kinda want to get into kernel stuff, but looking through the source is pretty intimidating
<zacts>	electrojustin: perhaps check out the minix3 book
<pyon>	for me it's mind-numbing... not even knowing where to begin
<electrojustin>	i know im not the best c programmer, but just the damned macros are on a whole new level
<zacts>	it has a walk through of the entire minix3 os
<zacts>	os
<zacts>	and teaches how os work
<zacts>	then you can apply that to other os too
<denommus`>	electrojustin: pyon: minix3 has a small enough codebase
<pyon>	electrojustin: i hate it when there's no clear "read this first, then that next, then that next"
<pyon>	denommus`: ah
<electrojustin>	i have this nice book on linux 2.6, but it conveniently leaves out anything about drivers
<denommus`>	it's cool for those interested in os development
<electrojustin>	you know, the only reasonably excuse i could have for mucking about in there
<zacts>	even linus reccomends the minix book, well he had an earlier edition
<zacts>	or at least he did on the mailing lists if i recall
<denommus`>	i should make a posix microkernel in rust
<zacts>	electrojustin: what book is this?
<zacts>	a posix microkernel?
<pyon>	denommus`: lol, posix in rust
<denommus`>	so many projects on the backlog
<pyon>	denommus`: sounds like a contradiction in terms
<zacts>	what would make the microkernel posix?
<pyon>	denommus`: posix is *defined* as a c api
<denommus`>	pyon: extern "c"
<zacts>	hrm... perhaps you mean the entire ukernel based os...
<pyon>	denommus`: true but kinda defeats the point to using rust
<electrojustin>	zacts: i think it was this one, but older http://www.amazon.com/linux-kernel-development-3rd-edition/dp/0672329468
<denommus`>	pyon: i still maintain the opinion that rust filled with extern "c" is better than c
<zacts>	well, you could also ask on #kernelnewbies on irc.oftc.net
<zacts>	for books
<zacts>	as the actual linux kernel developers and maintainers hang out there
<denommus`>	pyon: extern "c" in rust is like haskell's io
<pyon>	denommus`: anyway, i think i found a workable combination of safe/unsafe rust that would work for what i need
<denommus`>	pyon: except unsafer
<zacts>	rust does sound interesting to me...
<pyon>	denommus`: haskell's io isn't memory-unsafe
<denommus`>	pyon: i know, i was exaggerating
<electrojustin>	anyways, i was mildly interested in making my own usb peripheral, but looking through the usb specs and the relevant kernel source, i've decided perhaps i should stick to something simpler
<denommus`>	electrojustin: help me on my afrp library
<pyon>	probably not
<electrojustin>	denommus`: afrp?
<pyon>	electrojustin: arrowized functional reactive programming
<denommus`>	pyon: speaking of which, do you think a wgen that may not call step_wire will be problematic?
<pyon>	dunno
<electrojustin>	doubtful id be of any use to that project
<pyon>	i really really really dunno about interactive stuff
<pyon>	the most interactive thing i've ever done in my life is making gui event handlers
<zacts>	i dislike buzzword trendy programming lingo
<denommus`>	i made left and right from arrowchoice today, and they generate a wire that doesn't step on right and left, respectively
<electrojustin>	the only word i really understood in afrp was the programming part
<zacts>	all these paradigms were talked about years ago in sicp / early lispy research papers / and that concepts & techniques & models book
<zacts>	and things like that
<pyon>	electrojustin: frp is using time-evolving computations as first-class values
<zacts>	and i feel people flock to these things as if they are the best newest ideas ever
<zacts>	i prefer a more general idea of different paradigms for different purposes.
<pyon>	electrojustin: e.g., you can have a variable "player_health", and its value isn't a number - its value is a function of time
<zacts>	use the tools that work best for whatevs
<denommus`>	electrojustin: frp treats the mutable parts of a interactive program as a continuous stream of values, called signals, are defined in terms of other signals and events
<denommus`>	electrojustin: meanwhile, events are discrete streams of values
<electrojustin>	don't fully understand, but that sounds like a strange way of looking at things
<denommus`>	electrojustin: "arrowized" means that you don't work with the signals directly. instead you work with signal functions. that is, your program will be composed of functions that take a signal and transform them in other signals
<pyon>	electrojustin: it's the *normal* way to model dynamic systems in mathematics
<denommus`>	electrojustin: it's a very useful way to look at things, because the entirety of the behavior of a signal is clearly defined on its declaration
<pyon>	electrojustin: it's use programmers who've been putting our heads into a hole in the ground
<pyon>	us*
<zacts>	pyon: i can't remember but do you program lisp / scheme?
<pyon>	zacts: i don't
<zacts>	ah ok
<denommus`>	zacts: i do
<zacts>	it must have been another nick i was thinking of
<pyon>	zacts: i'm more of a mler and haskeller
<zacts>	oh ml and haskell are cool too, or so i hear
<electrojustin>	vaguely remember something from linear algebra about discrete signals
<denommus`>	but i am using it less and less
<zacts>	next on my list after dabbling with lisp for a while, is haskell
<pyon>	i really think in maths
<zacts>	pyon: i've been studying math and logik lately like a ton
<pyon>	before haskell, i already was math-inclined, but was kinda frustrated because no language allowed me to express that math directly
<denommus`>	pyon: have you ever considered that as a career?
<pyon>	after haskell... well, there isn't going back
<zacts>	so is haskell pretty mathematically expressive?
<electrojustin>	yes
<pyon>	denommus`: "career" means getting a job and getting paid
<pyon>	denommus`: who's gonna pay for that?
<hotcoder>	do you guys know mortal kombat?
<electrojustin>	as many a haskeller will tell you, it's basically just math
<zacts>	oh cool
<zacts>	i know i'll like haskell for sures then
<denommus`>	zacts: haskell is basically a variation of a typed lambda calculus where you can assign names to functions
<zacts>	i like minikanren too
<electrojustin>	was never particularly good with abstract mathematics myself
<denommus`>	pyon: universities
<anj7>	hey what's a good software to design icons and graphics?
<denommus`>	pyon: sometimes governments
<electrojustin>	i should drag my ass to bed
<zacts>	electrojustin: have you ever taken a logic class?
<electrojustin>	zacts: no
<zacts>	especially deductive logic?
<denommus`>	pyon: even companies occasionally hire mathematicians
<electrojustin>	nope
<electrojustin>	haven't taken much math at all really
<zacts>	ok, you should do logic and sentential and predicate logic
<electrojustin>	calculus and linear algebra
<pyon>	denommus`: there are is basically only one research university here... and it's primarily focused on medicine / life sciences
<zacts>	electrojustin: then i have a good book for you after logic
<pyon>	which is cool but no my thing
<pyon>	not*
<pyon>	and even if i cared, i'd still be incompetent
<pyon>	anyway
<zacts>	electrojustin: http://www.cambridge.org/us/academic/subjects/mathematics/logic-categories-and-sets/how-prove-it-structured-approach-2nd-edition
<zacts>	^ this really only requires high school math
<denommus`>	pyon: brazil is somewhat welcoming for academicians. my wife has lots of cuban professors
<zacts>	and even really if you can solve quadratic equations you can grok this book
<pyon>	:-o
<denommus`>	pyon: not that i think it's the same for mathematicians
<zacts>	and then you'll know maths like at a much more fundamental level imo
<zacts>	for higher level math
<zacts>	i'm so surprised at how many people in maths don't know how to do math proofs
<hotcoder>	ok
<pyon>	denommus`: well i can compromise... things like operations research could also be cool
<zacts>	and they are already in calculus and linear algebra
<electrojustin>	ill take a look at it. thanks zacts
<zacts>	it's crazi9ness
<hotcoder>	but did u play mortal kombat?
<pyon>	which is more immediately applicable in industry
<zacts>	s/9//
<electrojustin>	i should get some sleep
<zacts>	electrojustin: yeah, i'm actually 1/2 way thru it myself now
<electrojustin>	have an exam tomorrow
<electrojustin>	see y'all tomorrow
<zacts>	laters
<tommycannady>	see ya
<tommycannady>	: )
<hotcoder>	apparently no one played mortal kombat
<denommus`>	pyon: anyway, be aware of the imposter syndrome. i think you might be quite talented if you could focus on that
<zacts>	i used to play that game
<hotcoder>	ah ok
<hotcoder>	mk 10
<pyon>	heh
<hotcoder>	have u seen it?
<zacts>	i liked final fantasy
<zacts>	and zelda, for sures
<hotcoder>	they should make an aspect in mortal kombat
<hotcoder>	where during "finish him"
<tommycannady>	i liekd final fantasy and zelda too
<hotcoder>	you have sex with the other character
<tommycannady>	i'm working on an mmo based on those types of rpg games.. zelda and final fantasy
<hotcoder>	i think that would be cool
<tommycannady>	the network code is almost complete
<zacts>	i'm hoping to make a space invaders clone in lisp soon
<zacts>	also some text adventure rpgs
<tommycannady>	oh good... i did a one of those in c
<tommycannady>	great zacts
<tommycannady>	you could add me to skype if you want me to help
<zacts>	i don't use skype
<tommycannady>	i'm into text muds too
<tommycannady>	ah ok
<tommycannady>	well cool :)
<zacts>	but, yeah. i'm on irc often enough
<tommycannady>	ok
<zacts>	although, lately i've been studying for school.
<tommycannady>	people that don't use skype ususally are
<tommycannady>	i comeon maybe once or twice a week
<zacts>	ah yeah
<zacts>	i'm also on #lispgames
<tommycannady>	oh ok cool
<tommycannady>	i might want to learn lisp
<zacts>	but, when i get my beaglebone black setup i'll have my irc client logged on all the time
<zacts>	i've just been too lazy to actually set it up
<tommycannady>	ah
<tommycannady>	ok
<tommycannady>	i'm getting sleepy myself : ) i might take another nap
<denommus`>	hotcoder: i never understood why look for sexual intercourse in a game when there's so much free porn on the web
<tommycannady>	:(
<zacts>	denommus`: pr0n is static, while games are interactive?
<zacts>	you must use strategy with games?
<tommycannady>	bad topic ;d...
<zacts>	yeah, pr0n is borings
<zacts>	anyway, if you guys like functional reactive programming
<zacts>	you should check out minikanren, and logic programming
<zacts>	and even prologish languages
<zacts>	logic is so cool, youtube minikanren, to see some cool stuff you can do
<zacts>	it makes those trendy frp and things kind of seem silly as a thing in and of themselves
<hotcoder>	denommus`, oh its not for gratification purposes
<zacts>	or so it seems to me, anyways
<hotcoder>	i just want johnny cage and sonya to fuck
<denommus`>	zacts: common lisp?
<zacts>	denommus`: well, the original minikanren was scheme lisp
<zacts>	but it has been reimplemented in many other languages
<zacts>	it's kind of like a dsl, almost
<zacts>	let me find the link
<zacts>	http://minikanren.org
<zacts>	and youtube for demonstrations of it
<zacts>	also, clojure's core.logic is minikanren
<zacts>	so you could also search fore core.logic stuff too, to see what you can do with it
<zacts>	pyon: oh it seems haskell has some minikanren implementations also
<pyon>	dunno why i'd use minikanren specifically, if i can use logict tho
<zacts>	ah, don't know what logict is
<zacts>	i like minikanren because it's fun, mainly
<zacts>	and cool
<zacts>	anyways, i'm getting tired actually... so... laters
<zacts>	:-)
<pyon>	cya
<macacada>	if i run a software on sandbox that is suspicious will i eliminate chances of infection?
<ninjapenguin>	i've heard rumors that some malwares can get past the sandbox.
<ninjapenguin>	but if it's a script-kiddie malicious software, i doubt you'll get infected.
<ninjapenguin>	but if you're running it in a virtual machine, i haven't heard of any malware being able to escape a virtual machine.
<aewffwea>	ninjapenguin: i have
<ninjapenguin>	really?
<ninjapenguin>	how does it do that?
<aewffwea>	ninjapenguin: bugs in the vm
<ninjapenguin>	ah.
<aewffwea>	ninjapenguin: it's quite rare though
<ninjapenguin>	i bet.
<ninjapenguin>	macacada: don't run malicious software!
<ninjapenguin>	or if you do, run a sandbox inside a sandbox inside a virtual machine.
<denommus`>	zacts: ever seen naughty dog's state based dsl?
<zacts>	hm.. still up for a bit
<zacts>	denommus`: nope
<denommus`>	zacts: it's interesting. look it up
<zacts>	cool, let me check it out
<zacts>	huh, http://www.shenlanguage.org/
<zacts>	^ i just saw a link to this from a linked to youtube channel for that naughty dog dsl
<zacts>	kind of sounds interesting
<zacts>	huh, and they have a book that looks interesting http://www.shenlanguage.org/lpc/lpc.html
<zacts>	hm.. the chapters mention basically lots of sentential / predicate logic and math proof techniques
<zacts>	and from the title of the book, i assume it applies it to computation
<zacts>	i'll have to check it out tomorrow
<aidanh>	zacts: hm, that looks sort of nice
<zacts>	yeah
<aidanh>	it'd be nice if there was a comparison of features with other languages though
<aidanh>	or perhaps i just can't see it
<zacts>	yeah, i have no idea. i just found it like 2 minutes ago
<zacts>	it looks like it's implemented as a dsl in various other languages, including common lisp and scheme
<zacts>	and clojure
<zacts>	and ruby
<pyon>	zacts: the notoriously missing thing is a *proof* of type safety (as in, progress and preservation)
<pyon>	zacts: for shen
<pyon>	haskell can get away with not having a formal proof, because it's really just the lambda calculus with sugar -- if you believe system f-omega is type-safe (and there is proof for this), it's pretty reasonable to assume haskell is type-safe
<pyon>	but shen has some... erm... "features"... that force one to say, "okay, where's the proof that the type system is actually meaningful?"
<zacts>	ah ok, interesting
<pyon>	if merely having a type system were enough, why not use c++?
<pyon>	it has a type system
<pyon>	(it's unsound tho)
<zacts>	yeah, shen just looks like a curiostiy to me, i don't think i would likely focus a ton of time on it
<pyon>	(fwiw, this is exactly the same reason why i dislike using ghc's crazy extensions)
<ams>	pyon: i don't think there is such a document.
<pyon>	(so it isn't like i'm being unfair tolisp)
<pyon>	(cause i judge haskell by the same strict standard)
<ams>	pyon: closest to "formailized": http://www.aiai.ed.ac.uk/~jeff/lisp/eval.lisp
<ams>	pyon: the spec is heavily cross referenced, so i don't see why you need it written that way ..
<silenthinker>	how do you begin conceptualizing a complex concept?
<aidanh>	start small, work up
<snyp>	start small. fuck up.
<snyp>	*laugh track*
<numb3rz>	im trying to see how.this disassembler works, i downloaded ida and i'm not sure which database to choose
<numb3rz>	it looks like it depends on the os i have but not sure
<silenthinker>	should it feel rewarding the moment you are able to explain a process/application?
<pyon>	ams: to put it in few words, if there's a directed graph, where an arrow "a -> b" means "b is defined in terms of a", i want a topological sorting of this graph
<pyon>	ofc, not doable if the graph has directed cycles
<aidanh>	pyon: why would that be desirable?
<pyon>	aidanh: because it means that i can read the definition linearly
<aidanh>	silenthinker: if you don't feel rewarded from learning new concepts, what is the point?
<aidanh>	pyon: ah, makes sense
<silenthinker>	what if you don't know what reward truly feels like?
<pyon>	jumping back and forth between places is the hardest part of reading documents like, say, the c++ standard
<pyon>	fortunately i didn't learn c++ from the c++ standard
<pyon>	otherwise i would've been royally fucked
<lf94>	i tried learning something from its standard once
<lf94>	didn't churn out anything
<lf94>	there is so much to hold in your mind it is ridiculous to try and do that
<pyon>	lf94: well in c++ it's especially problematic, because there's no single concept that can be learnt and understood in isolation first
<pyon>	everything is intertwined
<rindolf>	hi all. sup?
<pyon>	rindolf: hai
<pyon>	nm hbu?
<snyp>	pyon: can you give an example of a very short such cycle in c++?
<rindolf>	pyon: i just woke up.
<ams>	pyon: i do not think something like that exists.. why not make one?
<denommus`>	pyon: start from special forms
<ams>	pyon: i don't think it would take to much time ... and i sure would be interested in looking at it.
<denommus`>	pyon: you may ignore the fact that some special forms may be defined in terms of others
<denommus`>	pyon: special forms are the most fundamental concept of lisp, everything else (except for some functions, like open) is defined in terms of them
<ams>	execpt for all functions.
<ams>	and yeah, ignore special forms ..
<numb3rz>	rindolf: wats up
<ams>	assume they are macros.
<pyon>	snyp: scope - you don't fully understand scope in c++ if you don't know how templates and overloads are selected, but whether a template can be instantiated itself depends on what stuff is in scope
<ams>	pyon: i think it would be quite cool thing..
<pyon>	denommus`: ok
<pyon>	then starting with special forms
<pyon>	i'll try to build everything from the rest
<pyon>	err
<pyon>	errr try to build the rest from them
<ams>	pyon: happy to help btw ..
<pyon>	ok
<pyon>	ty
<snyp>	pyon: aha
<ams>	you cna prolly ignore types as well ..
<denommus`>	pyon: but be aware that common lisp is dense, complex, and sometimes overengineered. it's more like c++ and ocaml in terms of complexity than c or ml
<snyp>	pyon: yeah i didn't know about koenig lookup until recently... never thought about it.
<denommus`>	pyon: so cross references will happen
<ennui>	if anyone has a clue with criterion then i would really appreciate a hand, ive been stuck on 3-5 lines of code for 4 hours
<ovrh>	good morning
<rindolf>	numb3rz: yesterday i started working on a new project euler problem.
<rindolf>	numb3rz: but i didn't get too far.
<ennui>	anyone?
<denommus`>	ams: i remember trying to get the most static guarantees from common lisp's types as i could
<denommus`>	ams: it was... wasteful
<rindolf>	ennui: what is "criterion"?
<numb3rz>	rindolf y not it was too hard
<rindolf>	ennui: where is your code?
<rindolf>	numb3rz: what?
<ennui>	rindolf: its used to make hibernate queries for java
<numb3rz>	rindolf: i heard those problems were hard to figure out
<rindolf>	ennui: ah, hmmm...
<rindolf>	numb3rz: some of them are.
<numb3rz>	rindolf:what number problem are you on??
<rindolf>	numb3rz: well, you don't have to solve them sequentially.
<rindolf>	numb3rz: i skipped some problems.
<numb3rz>	rindolf: i kno lol i was wondering. which problem u were on
<ennui>	i'm on a phone so i cant post it, the query is just "select f.a from foo as f where f.b ="bar""
<ennui>	i know to restrict on 'f.b=bar' and project on 'f.a'
<ennui>	but nothing at all seems to work
<numb3rz>	rindolf: you also know that solving one problen can give you insight on others
<rindolf>	numb3rz: yes, i know that.
<rindolf>	numb3rz: right now i'm trying to solve this one - https://projecteuler.net/problem=215 .
<aidanh>	rindolf: that's an interesting one
<numb3rz>	rindolf:r u trying to figure out all 8 or just 1??
<ams>	denommus`: why?
<wordandmouth>	^_^
<rindolf>	numb3rz: what?
<anj7>	hey want is ping timeout?
<denommus`>	ams: because if i wanted to maintain the guarantees i'd have to always declare every single type, and that's borijg
<aidanh>	seems like a brute-force solution might be sufficiently fast though..
<ams>	denommus`: example?
<denommus`>	ams: and lisp can't even handle recursive types
<rindolf>	aidanh: well, i'm going to use dynamic programming of sorts.
<denommus`>	ams: i already erased my project that did that
<ams>	denommus`: they are allowed, but they must terminate.
<ams>	see issue recursive-deftype
<denommus`>	ams: well, yeah. not every type terminages. for instance, the type of a list
<aidanh>	rindolf: that does seem to be a good general approach
<ams>	a list terminates when it is nil.
<denommus`>	ams: i am aware of that
<denommus`>	ams: a list terminates, but the type of a list doesn't
<ams>	denommus`: (deftype list-of-length (l) (if (zerop l) nil `(cons t (list-of-length ,(1- l)))))  is a nice example.
<ams>	as for a list, a list is a cons pair.
<ams>	and listp will test for listness.
<wordandmouth>	does it take more energy to talk than it does to think?
<numb3rz>	rindolf: it says it was 8 different ways to solve that problem
<ams>	so you can use listp for listness in deftype.
<denommus`>	ams: ah, yes, i could pretend lists are associated with a maximum length, but we know that's not a factory
<denommus`>	*fact
<rindolf>	numb3rz: no, there are 8 possible layouts. you need to find the number of layouts for a more complex problem.
<denommus`>	ams: and i stated i wanted a static check, not a runtime check
<ams>	infact, for lists, (deftype list () '(or null cons))
<ams>	you don't even need recursive deftype for that.
<aidanh>	rindolf: apparently there are 3329 ways to construct each 32x1 row
<denommus`>	ams: which ignores the type of the contents
<ams>	why would it care?  it is a list, a list can contain anything.
<aidanh>	so maybe a divide-and-conquer brute-force enumeration could work
<ams>	that _is_ the definition of lists.
<denommus`>	ams: because i may want to do with whatever is inside
<ams>	so do that ..
<denommus`>	ams: and checking for the correct type is useful
<ams>	(defun list-of-foo () '(and list (satisfies elements-are-foo)))
<ams>	deftype ..
<ams>	(deftype list-of-foo () '(and list (satisfies elements-are-foo)))
<ams>	need more coffee ..
<pyon>	sounds just like a predicate
<pyon>	a predicate ain't a type
<ams>	that is in some sense what a predicate is.
<denommus`>	ams: well, anyway you're agreeing with me
<ams>	denommus`: how so? you can do exactly what you claimed one cannot.
<denommus`>	ams: all i said was that it's wasteful to try to take the most guarantees from common lisp's type declarations, and you're suggesting me to ignore some types, like the types for the contents of a list
<ams>	denommus`: i didn't suggest that.  if you need to check that you have a list of fixnums, you can trivally do that
<denommus`>	ams: again, statically
<ams>	(deftype list-of-fixnum '(and list (satisfies elements-are-fixnum))) where elements-are-fixnum is (every #'(lambda (x) (typep x 'integer)) l) or whatever.
<numb3rz>	rindolf: im diving into the wond werful world of assembly language and i downloaded a disassembler (ida) -i want to see how it works but not sure which database to choose. it looks like it is os dependent but not sure.
<ams>	and then just use declare proclaim and the forms as normal.
<denommus`>	ams: if i'm not mistaken i have tried that
<ams>	(declare? or is it declaim?)
<denommus`>	ams: and it queries at runtime, it doesn't warn me at compile time
<ams>	(i confuse those two ..)
<ams>	denommus`: it an query at runtime.
<ams>	denommus`: now, there is no guarantee that your _implementation_ will do so, most deftype stuff can be almost ignored
<denommus`>	ams: why are you giving me runtime solutions when i said 3 times i'm talking about static guarantees?
<ams>	cause there is no difference.
<ams>	if you are using a sane compiler, it will deduce it during compile time as well.
<denommus`>	ams: surely there is difference between having a warn when i compile my code and having my program break at production
<ams>	trust your compiler a bit more ..
<ams>	denommus`: did you read the warnings?
<denommus`>	ams: of course
<ams>	i suspect you didn';t.
<ams>	pyon: you gonna attempt that thing?
<aawe>	pyon: a predicate is a type - :: a -> bool
<pyon>	aawe: no that isn't *a* predicate
<pyon>	aawe: that's the type of predicates
<denommus`>	ams: i am not sure if i managed to describe a type for a list with typed contents like you suggested. if i am not mistaken, the only solution that provided me with useful warnings was the one where you use a length
<ams>	denommus`: i'd need to see code.
<ams>	denommus`: you just prolly did it wrong.
<pyon>	ams: what? i have to learn lisp first, before attempting to linearize the presentation of its concepts
<denommus`>	ams: well, it no longer exists
<ams>	pitty.
<ams>	if you would have complained that adding type declarations, and what not is cumbersome i might have agreed :-)
<denommus`>	ams: but i doubt i was "doing it wrong", i asked help from lots of experienced lispers
<ams>	which lispers?
<ams>	joswig? pitman? or the <censored> people in #lisp?
<ams>	cause they aren't very experienced..
<ams>	the later ..
<ams>	joswig or pitman i would consider experienced, very experienced ..
<denommus`>	ams: nobody famous
<ams>	so prolly not experiecned.
<ams>	or like ..
<ams>	:-)
<ams>	anyway .. if you find the code, toss it my way.  i suspect you just did it wrong.
<denommus`>	ams: i trust their competency
<ams>	took the wrong bend somewhere, and ended up in lala land.
<aawe>	ams: so you use mostly lists in your lisp programs, or do you make extensive use of "struct-like" types?
<ams>	aawe: my retort question is: when?
<aawe>	s/so you/do you
<denommus`>	ams: i think he is wondering about alists and plists
<ams>	i use both.  what is mostly used depends on "what" and "when".
<aawe>	i'm curious what the default approach is. since there's no compile-time typechecking, what's the convention for passing data among functions? do you just create your own conventions?
<ams>	there is compile time type checking.
<aawe>	in all lisps?
<ams>	* (defun foo () (car 123))
<aawe>	i've only seen it in typedracket
<ams>	;   constant 123 conflicts with its asserted type list.
<denommus`>	ams: what compiler is that? sbcl?
<ams>	yes.
<aawe>	is "*" the type assertion?
<ams>	sbcl is really good.
<ams>	aawe: that is the prompt.
<denommus`>	ams: then express it. not every compiler has all type warnings. sbcl's inference machinery is quite developed
<ams>	denommus`: most cl implementations have this type of type checking.
<ams>	all modern ones anyway, and you'd be hard pressed to find one that does not i think ..
<denommus`>	iirc, ecl doesn't
<ams>	well, ecl is rather a odd duck .. it is supposed to be embedded and what not .. so it has a different usage scenario than an interactive environment.
<aawe>	ams: which lisp would you recommend i start with? cl/clojure/racket?
<ams>	ccl will do it though.
<ams>	? (defun foo () (car 123))
<ams>	;compiler warnings :
<ams>	;   in foo: error: "the value 123 is not of the expected type list." ..  signalled during compile-time evaluation of (car 123) .
<denommus`>	aawe: the static type checking in common lisp is in the form of warnings, it doesn't actually prevent you from compiling
<ams>	aawe: clojure, nor racket are lisps.
<ams>	aawe: so that leaves you only with cl.
<denommus`>	aawe: so it's not equivalent to typed racket
<ams>	denommus`: why should it?
<aawe>	ams: how are they not? "racket (formerly named plt scheme) is a general purpose, multi-paradigm programming language in the lisp/scheme family", "clojure is a dialect of lisp"
<denommus`>	ams: i'm not claiming it should. i'm explaining the difference
<ams>	denommus`: well, i am curious why it should be the case to error out :)
<ams>	aawe: they share about as much incommon as c and java.
<pyon>	http://i.imgur.com/f2cst2m.png
<ams>	aawe: you cannot write a function in any of those that can be shared across all three implementations.
<aawe>	so common lisp is the most _common_ lisp, eh?
<pyon>	the error went undetected when i defined bar
<ams>	pyon: add some declares.
<zacts>	back
<denommus`>	ams: i'd rather have a compilation error than my program blowing up in production, but each to their own
<ams>	pyon: or bump saftey
<pyon>	bump safety?
<ams>	denommus`: i would exepct that you tried to run the code before deploying :)
<pyon>	ams: manually declaring types feels like using c++
<ams>	pyon: http://www.lispworks.com/documentation/lw50/clhs/body/d_optimi.htm
<ams>	pyon: you need to declare them in any language at some point, even in haskell.
<pyon>	ams: english grammar makes it hard to distinguish the whether a verb or a noun was intended: was "bump" intended to be a verb (e.g. "just bump a pointer") or a noun (e.g. "this variable is a bump counter")?
<denommus`>	ams: a good type system can prevent errors that could go unnoticed. a good example of this is comparing java's null everywhere to languages with option types. guess which of them has unnoticed nullpointerexception
<ams>	denommus`: sure, read the warnings, they are to be read, not ignored.
<pyon>	ams: i don't really declare the type of anything in haskell
<pyon>	ams: at least not manually
<ams>	denommus`: if you are deploying something that is spitting out warnings, then i don't wanna talk to you.
<pyon>	ams: it's the typechecker's job to find inconsistencies in my code
<pyon>	well, type inconsistencies, at least
<denommus`>	ams: i don't
<denommus`>	ams: but lisp hardly checks everything
<ams>	it shouldn't.
<denommus`>	ams: you just looped
<denommus`>	ams: i'm not claiming it should
<aawe>	http://cdn.screenrant.com/wp-content/uploads/joseph-gordon-levitt-as-young-joe-in-looper1.jpg
<pyon>	anyway not that i want lisp to be haskell... i'm trying to learn the dynamic way of thinking
<aawe>	pyon: what's the dynamic way of thinking?
<pyon>	aawe: dunno exactly
<denommus`>	aawe: thinking without statically enforced types, i guess
<pyon>	aawe: but, clearly, programmers who use dynamic languages think in different ways from what i'm used to
<denommus`>	it certainly makes sense for lisp to be dynamically typed
<xeno_>	pyon: that's no surprise, that goes for most users of statically typed languages too...
<aawe>	pyon: ruby is a joy to use thanks to its dynamic typing
<aawe>	def method_missing etc
<literphor>	“abstract thinking?
<denommus`>	a statically typed macro system would be quite difficult
<pyon>	denommus`: it isn't just about this or that language feature... static types lead to a specific design and coding stype, "typeful programming", which means encoding the problem domain's structure in types
<aawe>	denommus`: rust and nim disagrees
<pyon>	xeno_: well i don't consider java static in any meaningful sense
<pyon>	xeno_: just annoying
<pyon>	xeno_: ditto for c
<denommus`>	aawe: not that much. rust people are not that fond of the macro system
<literphor>	static types?? do you mean strong types?
<aewffwea>	pyon: i don't think that's true... i do exactly the same with dynamic typing
<aawe>	who are these rust people you talk about?
<aawe>	i love the macro system
<pyon>	denommus`: rust's macro system is ugly... you can't even use + as a token
<aawe>	am i then not a rust person?
<denommus`>	aawe: exception
<pyon>	aewffwea: no, you really can't encode the problem domain in *types*
<pyon>	aewffwea: just so we're clear - classes aren't types
<xeno_>	literphor: even dynamic languages have strong types
<xeno_>	literphor: languages like c don't
<aawe>	rust macros are awesome
<aewffwea>	pyon: please, define type
<denommus`>	literphor: "strong typing" isn't a meaningful term
<aawe>	nim macros and rewrite rules are exhilarating
<pyon>	aewffwea: a purely syntactically checkable guarantee
<pyon>	aewffwea: a theorem that holds of a syntactic term before it's even deemed valid
<aewffwea>	pyon: please pharaphrase that in english
<xeno_>	denommus`: it does have a meaning, although not a very formal one
<pyon>	aewffwea: i used english, if you don't understand english, too bad
<denommus`>	aewffwea: a type is a restriction on the operations that can be performed on a term
<aewffwea>	pyon: then pharaphrase it in spanish -_-
<aawe>	una typo grande, si?
<xeno_>	denommus`: it's like "the underlying representation of a type will never be handled as if it was the underlying representation of another type" sort of thing...
<pyon>	aewffwea: un tipo es una garantía verificable puramente analizando la estructura sintáctica de un término
<literphor>	xeno_ i’m not sure what you mean by a dynamic vs static language. do you mean like js vs html?
<ams>	literphor: almost all languages today are strongly typed, i.e. they have a type, and generaly produce errors based on that in some form.  where with a weakly typed language, i.e. forth, you really don't know what might occur.
<aawe>	literphor: html is not a language
<aewffwea>	pyon: that didn't make things clearer
<literphor>	aawe of course it is. it’s a markup language based on xml
<denommus`>	literphor: a static language enforces that you're
<aawe>	literphor: it's markup, yes. it's not executed. it is not turing-complete. it is not a programming language
<denommus`>	literphor: sorry
<aewffwea>	pyon: what's a syntatic term?
<ams>	aewffwea: i suggest you take a rudimentary course in programming language theory.
<aewffwea>	pyon: can you give me a concrete example?
<literphor>	aawe it’s interpreted and executed in the browser...
<pyon>	aewffwea: in python, 2 + "foo" is a term
<xeno_>	literphor: no, static type checking. like if you do ( var x = if "hello" = true then 14 else '9'; ) <- that would be allowed in a dynamic language, but typically not allowed in a statically checked one
<denommus`>	literphor: it enforces that the operations over every term are compatible with it
<aewffwea>	ams: programming language theory? what's that field?
<ams>	aewffwea: stop trolling.
<aewffwea>	ams: i'm not trolling -_-
<denommus`>	literphor: while a dynamically typed language allows any operation to be performed over any term
<aawe>	aewffwea: if you write f(x), the compiler can enforce that f really can accept x (that x is the correct type) and if not, kill the compilation
<denommus`>	literphor: pay attention i'm saying terms, not values
<pyon>	denommus`: it may disallow certain operations - it's just that the checks to determine what's allowable aren't purely syntactic
<aawe>	literphor: html is not executed
<aawe>	literphor: html has never once in the history of this universe been executed
<pyon>	denommus`: you need more information than just the ast
<pyon>	denommus`: to see if an operation is valid
<aewffwea>	aawe: you are just talking about verifying that the program expressions type correctly, or whatever you want to call it
<aawe>	aewffwea: so is pyon
<aawe>	albeit with more formal language
<xeno_>	aawe: xml, otoh... that can be executed :)
<aewffwea>	aawe: he explained it in a way that it was really difficult to understand that's what he meant o_o
<pyon>	xeno_: "can be executed" --> but why would you want to? :-p
<pyon>	jk
<xeno_>	pyon: for the craziness, of course... that's the best reason!
<aawe>	xeno_: you mean xslt?
<pyon>	xeno_: lol
<xeno_>	aawe: no, xml :)
<aawe>	xslt is xml
<ams>	pyon: hmm.. seriously, kinda looking forward to such a formalisation ..
<denommus`>	ams: ah, you conflate the concepts of strong and static typing. that's where our discussions come from. now everything make sense
<xeno_>	aawe: yeah, but it's just a representation of another language that is executed by a dedicated engine
<aewffwea>	pyon: so you were comparing static typing vs dynamic typing i assume?
<ams>	denommus`: no, you conflate it
<xeno_>	aawe: but anyway, i'm pretty sure i could encode lambda calculus in entity references
<ams>	denommus`: i am using it as it has been used for over 40 years
<denommus`>	ams: strong typing is exactly what you said it is
<aawe>	xeno_: entity reference? throw me some context
<pyon>	aewffwea: i was just defining what i call a "type", because you asked... i'm *not* interested in debating this again
<aewffwea>	pyon: k
<ams>	denommus`: so how can i conflate something, when i said what is is ..
<ams>	denommus`: you sense making not
<denommus`>	ams: well, i'm basing myself in type theory, which started this whole type discussion way before programming languages even existed
<kayta>	hi i had some qs regarding comp sci undergrad, hope such qs are allowed here
<ams>	denommus`: not in the context of programming languages.
<aidanh>	kayta: "if you have a question, don't ask to ask, just ask!"
<denommus`>	ams: programming languages are applied lambda calculus
<ams>	denommus`: lisp is a strongly dynamically typed language.
<ams>	denommus`: lambda calculus is untyped sweetie
<aawe>	kayta: there is a rule for this channel stating that you are not allowed to ask if you can ask questions. other questions are allowed
<pyon>	aewffwea: i'm actually trying to learn how dynamic language users think... i want to find answers to question like "what reasoning principles do they use for their programs?", "how complex does a program have to get before they say: ah, my brain alone isn't sufficient, i need tests"
<aawe>	it's even in the topic
<ams>	denommus`: i.e. weakly typed.
<ams>	:-)
<xeno_>	aawe: <!entity x "hello">  ... and in the document, <...>&x</...>
<denommus`>	ams: there's untyped lambda calculus and typed lambda calculi
<pyon>	aewffwea: and it's quite evident that merely talking to ams and you isn't sufficient, i need to do it myself to figure it out
<ams>	so say which, they are not the same.
<ams>	pyon: ?
<aawe>	xeno_: nauseating
<pyon>	ams: i'm trying to figure out how a dynamic language user thinks about his programs
<denommus`>	ams: dynamically typed languages come from untyped lambda calculus. statically typed languages come from typed lambda calculi
<kayta>	aidanh aawe , well i am planning to study comp sci as undergrad in us and things there is much different than my country, i wanted to understand what supplementary thing non comp related is included in cirriculum
<ams>	denommus`: they didn't.
<ams>	denommus`: that is really bad history revision lecture ..
<denommus`>	ams: of course they did. take ml as an example. it was expressively based on a typed lambda calculus
<aidanh>	kayta: that varies wildly depending on where you go
<ams>	denommus`: ml is like .. new.
<ams>	denommus`: dynamically languages existed before ml ...
<pyon>	denommus`: perl doesn't come from anything vaguely recognizable as a "lambda calculus"
<kayta>	aidanh, roughly, what is it like, do you also have to study things like psycology and so on?
<ams>	pyon: well, all i can say is how i think about problems ..
<ams>	pyon: i write it down in mathy english, do a proof if i feel like it, put some parens over it, and then fill in the blanks.
<aewffwea>	pyon: i can tell you that if you want
<xeno_>	pyon: if you're going to find out that, then first you need to use the language to solve something that is not theorems
<aawe>	kayta: why would a cs curriculum include psychology?
<pyon>	xeno_: s'okay, i'm not interested in proving theorems today
<pyon>	xeno_: this is more of a socio-linguistics thing than a maths thing
<pyon>	xeno_: except it's socio-programming-linguistics, rather than socio-natural-linguistics
<aidanh>	kayta: i am required to have a certain number of liberal arts credits and do physical education, but then i don't go to a us university, so my experiences don't apply much
<denommus`>	ams: ml is an example
<aawe>	https://twitter.com/haskellceo/status/596109370007670784
<kayta>	aawe i have a friend who is studying med physics there and he was once talking abt psyhcology assignment. i thought some generic courses are added just to make it more practical or sth
<denommus`>	ams: and it's undeniable that it had influence on typed lambda calculus
<kayta>	aidanh thanks, i don't even understand the concept of minor, can be it like say maths or sth completely unrelated like accounts
<xeno_>	pyon: ok, then you should just pick some large real world application, and try to implement that
<pyon>	xeno_: it's a chicken and egg problem, cause i wouldn't even know where to start, using a dynamic language
<pyon>	xeno_: i'd just try to apply my own way of thinking
<aewffwea>	pyon: you need to change the way you think for starters :)
<xeno_>	pyon: same goes for dynamic language users in the beginning
<aidanh>	kayta: as i understand it, it's just like a secondary area of interest
<aidanh>	different universities have different approaches to everything
<xeno_>	pyon: pick a problem, like implementing an ide or something, and just start hacking without a thought in your head...
<pyon>	xeno_: until now, for me, programming has been a matter of applying *my* way of thinking to different languages... problem is that my way of thinking is totally ineffective for using dynamic languages
<ams>	denommus`: yes, and ml is a new language.  you cannot claim that programming languages where influenced by untyped lambda calculus when .. they where nto.
<pyon>	aewffwea: well i can't change my way of thinking if i don't know how exactly it has to change
<pyon>	aewffwea: which is why i want some leads
<ams>	denommus`: you had stronlgy typed languages before you had ml for cripes sake..
<kayta>	aidnah ohh, i got accepted at certain uni and they still have not asked me about my minor, as if there is no seat limit on it. as for ciricullum i only found the one's related to computer like data structure, network programming and so on
<denommus`>	ams
<aewffwea>	pyon: the first important difference, is what's the most important thing...
<pyon>	xeno_: the way i think is apparently too rigid... if a single piece doesn't fit, the whole edifice is brought down
<aewffwea>	pyon: in static languages, usually the most important thing, the outcome of your job, is the source code, or the binary of your program....
<pyon>	aewffwea: the source code -- the binary doesn't matter that much for me
<aewffwea>	pyon: if you truly embrace dynamic languages, then you'll consider that the outcome of your job is not the source code, but the program running on memory...
<denommus`>	ams: lisp was based on untyped lambda calculus (though mccarthy made a mistake regarding dynamic scope). algol was based on some lambda calculus that is not clearly expressed, but since untyped lambda calculus doesn't describes types... well...
<aewffwea>	pyon: a methaphore, which might be good, or bad... is a building... the source code is a blueprint... it tells you everything that you need to know about how to build the building...
<pyon>	aewffwea: ok -- and how do i guarantee that the program in memory does exactly what i want, without appealing to the source code?
<aewffwea>	pyon: bue the blue print is secondary... what actually matters is the building itself, where people live, and use it, and do stuff...
<kayta>	aidnah , so my question is, when you go to college do you spend 4-5 hours just studying thing related to comp? or do you spend appreciable time on other areas as well, because wht i found was that number of credit hours is not fulfilled just by comp scithat
<pyon>	aewffwea: yea, that analogy makes sense
<aewffwea>	pyon: you still use "contracts" and "invariants" and all that stuff... but you use them more informally...
<ams>	denommus`: you had dynamically typed languages before those two.
<pyon>	aewffwea: why does it have to be informal?
<ams>	denommus`: nor do i see what is the mistake he did.
<denommus`>	ams: lambda calculus is lexically scoped
<pyon>	aewffwea: is there no way to reason formally about smalltalk programs?
<aewffwea>	pyon: i never write the contract or invariant of my classes, or whatever i write... but i always know what they are... and you try to put names to the stuff, or comments if that's not enough, that tell you intuitevely what's the invariant of the stuff
<aidanh>	kayta: mostly computer science stuff, really
<denommus`>	ams: mccarthy himself admitted his mistake
<aewffwea>	pyon: because realistically speaking, if you work in a real life company, you won'
<aewffwea>	t have enough time to do it formally....
<aewffwea>	assume you have 1 year to develop a product... do you want to spend 6 months coding and 6 months proving? or do you want to spend 12 months coding without proofs?
<ams>	denommus`: source? i've seen it claimed multiple times, never seen a source for it.
<aewffwea>	a lot of people have found out that coding for 12 months usually give more bussines value, and also, for most projects, having small bugs is usually quite acceptable....
<aewffwea>	it's not "rentable", or a good bussines approach to produce 100% perfect software... it's much more cost effective to produce 90%, or 95% correct software rather than 100%
<kayta>	aidnah thanks for your help, i will have to do a little more research,
<pyon>	ams: dynamic typing and dynamic scoping are quite different things... scheme is dynamically typed but lexically scoped... and the lambda calculus is the bare essence of lexical scoping... allowing dynamic scoping is making it not a lambda calculus (possibly with sugar) anymore
<rounin>	aewffwea: is it for any of the following: 1) a medical device. 2) a vehicle. 3) a nuclear power plant
<rounin>	that will greatly affect the answer
<ams>	pyon: scheme is still a new language.
<aawe>	or 4) a nuclear warhead
<pyon>	aewffwea: oh i'm not talking about financial viability right now... that's a separate concern
<aewffwea>	rounin: 1: no, 2: probably yes, 3: depends on which part, probably half and half
<ams>	pyon: nor do i see where you get that "lambda calculus is the bare essence of lexicial scoping"
<aewffwea>	pyon: if you had infinite time, then yes, go ahead and prove everything
<pyon>	ams: not going to argue with you about that... between you and i, you're the lisper and i'm not, so who am i to question you if you say scheme isn't a lisp
<aawe>	wtb infinite time
<rounin>	aewffwea: i would say 1 day coding and 364 dats proving then
<rounin>	and a dat is 10 years
<denommus`>	ams: https://www.google.com.br/url?q=https://courses.engr.illinois.edu/cs421/sp2010/lectures/dynamicscope.pdf&sa=u&ei=o2jmvzskfyoznuuvgpao&ved=0casqfjaa&usg=afqjcnffvqgyg9wc0njovuqtxbiaqh7amq
<ams>	pyon: you can say scheme is a lisp, if i can say php is a c :-)
<aewffwea>	rounin: what?
<rounin>	aewffwea: i would say 1 day coding and 364 dats proving then
<rounin>	and a dat is 10 years
<aewffwea>	rounin: for what?
<rounin>	if you'd like further repetitions, please take it in privmsg
<rounin>	or scroll
<pyon>	ams: as i said, i'm not going to argue that
<aewffwea>	o_o
<pyon>	ams: if you say scheme isn't a lisp, i'll take your word for it
<ams>	pyon: i hope you at least understand my reasoning for why i do not consider scheme/clojure "lisps"
<aawe>	i will argue any position for 20$/hr, /msg me
<pyon>	ams: yes
<pyon>	ams: i get it
<aewffwea>	pyon: anyway, the 2nd thing you'll learn to learn is tdd...
<pyon>	aewffwea: ummm people claim they do tdd in all sorts of languages
<pyon>	aewffwea: including statically typed ones... although i know that the idea originated in smalltalk
<aewffwea>	pyon: there are different "levels" of tdd...
<ams>	pyon: (then if you agree or not .. that is your choice :-)
<aewffwea>	pyon: the only language that i've used where you can really do tdd is smalltalk btw...
<denommus`>	there's a level that you try to reinvent types as much as you can
<aewffwea>	pyon: (it's not that it's not possible, you just don't have the tools)
<aewffwea>	pyon: but anyway, you can do a "reduced" version on other languages
<pyon>	ams: for the time being, i'll agree with you... i don't have enough time to actually validate it myself, but i trust your assessment regarding "what is lisp"
<aawe>	i tdd in ruby all the time
<aawe>	i did not know i am doing the impossible
<aewffwea>	pyon: you do tdd for several reasons, one of them is that you'll caught 99% of type errors if you do it properly....
<denommus`>	ams: the previous languages weren't nearly as influential as algol and lisp, and you know it
<denommus`>	ams: forth was based on something completely different from lambda calculus, of course
<pyon>	aewffwea: oh, i'm not interested in catching type errors
<pyon>	aewffwea: i'm used to the typechecker doing that for me
<ams>	denommus`: and? you claim that something in the future defined what was in the past, it makes no sense.
<aewffwea>	pyon: tdd will do that for you :)
<pyon>	aewffwea: i use formal proofs to prove stuff that the typechecker won't prove for me
<aewffwea>	pyon: anyway, i don't think you can reasonable program in a dynamic language without tdd :/
<pyon>	aewffwea: so i want to know how i could go about proving stuff in dynamically typed languages
<aewffwea>	pyon: you can certainly do it, i wouldn't advise it
<denommus`>	ams: i stated that most languages nowadays are based on typed or untyped lambda calculus, because they are mostly influenced by lisp and algol
<aewffwea>	pyon: you can prove it in a similar way that you prove it for static languages... the only difference is that now everytning is type object :)
<aewffwea>	(every varible)
<pyon>	aewffwea: errr no, that's just impractical
<aewffwea>	pyon: i told you it's impractical... still, it's doable if you have a lot of free time
<pyon>	aewffwea: that's just saying "dynamically typed languages are worse statically typed ones" -- which is what bob harper says, but is also what i'm trying to disprove
<pyon>	or, rather than disprove, empirically refute
<aawe>	i'd love a statically typed ruby, but it's impossible due to method_missing and {instance,class}_eval
<denommus`>	pyon: good luck
<aewffwea>	pyon: in a lot of places, you'll put as the precondition of a method, that the arguments are of a specified type, or class, or protocol
<pyon>	aewffwea: by showing that dynamically typed programs can also be reasoned about
<ams>	denommus`: they aren't based on untyped lambda calculus at all.  they are adhoc monsters.
<xeno_>	pyon: the problem isn't your way of thinking, but that you are trying to solve problems that barely have any intersection at all with what dynamic languages are used for
<aewffwea>	pyon: so you won't need to assume that everything is an object... most of the time you know pretty well the types of all the stuff... you just don't have the compiler validating that for you
<denommus`>	ams: indirectly inspired would be a better wording
<ams>	immensly indirectly ..
<aewffwea>	pyon: on another note, i'm pretty sure there are some validators out there, that do some basic type checking for dynamic languages
<pyon>	aewffwea: dijkstra could prove stuff without types... e.g., his guarded command language
<xeno_>	pyon: for instance, one of the most frequent uses of dynamic languages is rapid prototyping, where you just mock together a business application with web pages, a mock database, some functionality and so on, just to check with a customer if that resembles what they want
<pyon>	aewffwea: but dijkstra wasn't doing object-oriented programming either
<ams>	pyon: ooh!
<xeno_>	pyon: and that's miles away from finding the most efficient way to represent red-black trees
<aewffwea>	pyon: think of a simple algorithm, implement it in a dynamic language, and then we can prove it
<pyon>	xeno_: ofc
<denommus`>	pyon: how do these theorem provers work?
<pyon>	denommus`: what theorem provers specifically?
<xeno_>	aewffwea: don't even mention proofs, that will ruin the experiment completely
<aewffwea>	xeno_: ?
<denommus`>	pyon: can i prove, say, the monad laws work for a given monad instance?
<ams>	stupid cat ..
<ams>	"object-oriented programming is an exceptionally bad idea which could only have originated in california."
<denommus`>	pyon: i have no idea, i never used them
<pyon>	denommus`: gabriel gonzalez' blog has examples of this kind of stuff
<ams>	not that dijkstra said that .. but whatever ..
<pyon>	denommus`: author of the pipes library
<xeno_>	aewffwea: pyon is trying to get out of his functional/static mindset and into a dynamic language mindset...  the main obstacle for this is his focus on proofs and math
<ams>	http://www.cs.utexas.edu/users/ewd/transcriptions/ewd12xx/ewd1284.html
<denommus`>	pyon: is there something like that for ocaml?
<aewffwea>	xeno_: you can certainly prove stuff on dynamic languages
<aawe>	ams: but how else do i model the relationship "cat is an animal is an object" ;)
<denommus`>	pyon: i need to prove some arrow laws for my library
<ams>	aawe: "thing"
<aawe>	class mammal extends animal // this will surely make my students understand the virtues of oop
<ams>	it is a pitty that dijkstra is misquoted so often :(
<pyon>	denommus`: you can do it semiformally (e.g., assuming evaluation order doesn't matter)
<aewffwea>	aawe: that's probably a bad design...
<pyon>	denommus`: if you don't use mutation and effects, the only thing getting in your way will be nontermination
<pyon>	denommus`: but "proving modulo nontermination" is better than nothing
<aawe>	aewffwea: yet that's the standard example for teaching oop
<aewffwea>	aawe: that's awful
<denommus`>	pyon: do you have a link? i'm on a phone
<xeno_>	aewffwea: you can, but that's not what they typically are used for
<aawe>	some shitty "real-world" examples described as oop inheritance.
<aewffwea>	aawe: the other example that it's wrong, is the figure.draw(); figures don't draw themselves in oop -_-
<pyon>	denommus`: brb
<pyon>	denommus`: http://www.haskellforall.com/2013/12/equational-reasoning.html
<denommus`>	aawe: aewffwea: by experience, any design based on struct inheritance is bad
<pyon>	denommus`: http://www.haskellforall.com/2014/07/equational-reasoning-at-scale.html
<aewffwea>	denommus`: struct inheritance?
<xeno_>	aewffwea: trying to learn about the dynamic mindset while looking at proofs, would be sort of like trying to learn about democracy through the daily operations of a prison
<ams>	urgh .. i have four loafs of bread to bake today :(
<aawe>	bread is the devil
<aewffwea>	xeno_: the dynamic stuff is independent of the proof thing....
<ams>	xeno_: prisons are very democratic.
<aawe>	hypercarbonhydrates and cyanide
<aewffwea>	xeno_: i'm actually a fairly "mental proffy: kind of guy....
<pyon>	denommus`: it's amazing how tekmo proves stuff using just basic/intermediate haskell... it's a lot more approachable than edward kmett's blog
<xeno_>	aewffwea: you mean in the discussion?
<ams>	aawe: eh what?
<denommus`>	aewffwea: i think there's a proper term for that. that's how i call when a class extends another class, instead of implementing an interface or composing
<pyon>	denommus`: (not that ekmett's blog is bad... but it's hard to understand)
<aewffwea>	xeno_: in most of my jobs, i was usually the guy with the least amount of errors/bugs, because i tend to mentally proof almost everything i write....
<ams>	aewffwea: prussic acid?
<xeno_>	pyon: try to implement pet store
<xeno_>	aewffwea: ...but you wouldn't choose to hack things together with perl either, i guess
<ams>	aewffwea: if evaporates afaik in the oven ..
<ams>	meh..
<ams>	aawe: ^^
<aewffwea>	xeno_: i don't know perl... but i think i saw it once, it had a lot of $s and it was horrible...
<ams>	aawe: and i am using ecological flour
<pyon>	xeno_: even when it comes to something like an e-comerce app, the first thing i try to do is reason formally or semiformally about the database
<xeno_>	aewffwea: ...and while it's reasonable, it certainly isn't representative
<xeno_>	aewffwea: yes
<xeno_>	pyon: you need to not do that
<aewffwea>	xeno_: what's reasonable?
<aawe>	presentareprieveative
<ams>	aawe: and afaik, though no source, banned in europe.
<pyon>	xeno_: yes i know i need to learn to just trust "rails generate foo ..."
<pyon>	it's gonna be hard
<aawe>	ams: but carbonhydrates!!!!!!
<aawe>	they are insidious
<aawe>	you think you're getting energy but then bam! dead
<pyon>	xeno_: just like it's hard for freshmen to trust the inductive hypothesis when proving by induction!
<xeno_>	aewffwea: thinking formally. problem is, most dynamic language users don't, they would't be able to identify a proof if it was right in front of them...
<denommus`>	i'm going to sleep a bit
<ams>	aawe: which are important for the body ...
<xeno_>	pyon: not only that, but you need to learn to spend 2 minutes on the database design and 5 more on the implementation
<aawe>	ams: sorry, text is a bad medium etc. i was kidding around
<aewffwea>	xeno_: i've already express my opinion several times, that most programmers sux...
<pyon>	xeno_: that's a little bit harsh, pretty sure many folks in the racket community can prove stuff if they want to
<ams>	aawe: you cannot function without carbonhydrates ..
<ams>	aawe: ooooohh ...
<pyon>	xeno_: whoa
<ams>	aawe: thought you where serious, since you did mention prussic acid ..
<xeno_>	pyon: yeah, but those are not representative
<aawe>	ams: did i? is cyanide the same as pussic acid?
<ams>	aawe: which was used and maybe still is sued ..
<xeno_>	pyon: if you want to get into the mindset, start by reading domain driven design (evans)
<aawe>	is there cyanide in flours?
<ams>	aawe: well, hydrogen cyanide ..
<pyon>	ok
<ams>	aawe: it was used to fumigate seeds, and flour mills, and stuff of dry nature.
<ams>	aawe: can also be used as a chemical weapon ..
<ams>	fyi.
<xeno_>	pyon: and you need to do tdd
<pyon>	mmm
<pyon>	tdd tutorials?
<aawe>	all the cream in the store has gone over to watering the cream down with water and adding a thickener that seems to be bad for you, according to some research
<pyon>	"pyon tries tdd" will be really funny
<aawe>	maybe i should just stop eating any foood
<pyon>	i can already predict a lot of fail
<ams>	aawe: try growing your own stuff
<ninjapenguin>	note to self, do not try to install autocomplete for go for emacs.
<aawe>	pyon: rails 4 in action uses tdd throughout. it's a good read
<pyon>	ok
<aewffwea>	pyon: read stuff from kent beck... i wouldn't trust any other source
<pyon>	aewffwea: heh straight from the horse's mouth
<ams>	aawe: and by ecological stuff and close produce ..
<aawe>	aewffwea: from the mouth claiming tdd is only possible in a fossile language
<njcomsec|2>	i get all my intel from the alex jones
<aawe>	ams: even the local diary company uses the thickener (carrageenan)
<aewffwea>	aawe: in a fossile language that it's still more expressive than probably any other language out there
<ams>	aawe: big diary?
<aawe>	dairy*
<aewffwea>	aawe: it's not my fault if language evolution stopped 35 years ago
<aawe>	aewffwea: ever seen ruby?
<aewffwea>	aawe: yes
<aawe>	the metaprogramming possibilities are endless
<aewffwea>	aawe: i doubt it
<aawe>	there is literally no end
<pyon>	aewffwea: stopped 35 years ago? last time i checked, agda and idris aren't even 10 years old
<aewffwea>	aawe: (although i have to admit, i don't have a lot of knowledge about that)
<aawe>	you could probably create a dsl for time-travel, and it'd just work
<aewffwea>	aawe: can you make 3 + 5 return 20?
<rindolf>	hi all. how are you?
<pyon>	aawe: lol, dsl for time travel
<pyon>	rindolf: hai
<rindolf>	pyon: meow!
<pyon>	nya
<aewffwea>	pyon: that's actually quite a nice problem to model
<pyon>	aewffwea: are a few bugs here and there acceptable?
<aewffwea>	pyon: sure
<ams>	hmm.. given git-format-patch output, can one recreate a repository with the same sha and everything?
<pyon>	is this merely a coincidence? lately i've been growing more open to two possibilities i would've previously furiously rejected: (0) god / [insert supernatural entity here, e.g. cthulhu] exists, (1) program testing can work
<xeno_>	pyon: hmm... lemme see if i can find something
<aewffwea>	pyon: coming back to tdd
<pyon>	sadly, duckduckgo and google aren't helping... when i look for "tdd example", all i can find is ron jeffries' sudoku debacle
<aewffwea>	pyon: the tdd name is misleading... ignore it... tdd should be called: examples driven development...
<aewffwea>	or design
<pyon>	aewffwea: ok, makes sense that way
<ams>	base case testing.
<ams>	and bug journaling ...
<aawe>	aewffwea: re: 3+5=20 - https://gist.github.com/awestroke/5d2d08754bd0318f9f72
<aewffwea>	pyon: the idea is that instead of thinking how do i create a program to work for all my cases... you think one simple example, and you make the program work for that, after it works, you add another example, etc....
<xeno_>	pyon: http://agiledata.org/essays/tdd.html seems like a good summary
<pyon>	chekn
<aewffwea>	pyon: after a while, you'll have several examples and you'll say... if it works for all these examples, it'll surely work for all cases (assuming no malicious design or code)
<xeno_>	pyon: but yeah, tests are examples, not theorems
<_blizzy_>	mfw i can't solve these. https://blog.svpino.com/2015/05/07/five-programming-problems-every-software-engineer-should-be-able-to-solve-in-less-than-1-hour
<ams>	any of those?
<aewffwea>	pyon: the goal of tdd is *not* to create tests... is to help you manage the complexity of a big complex problem, by splitting into smaller pieces (solving each individual example is simpler than solving all the problem at once)
<merijn>	_blizzy_: for real?
<_blizzy_>	merijn, i'm working on the 2nd one atm
<merijn>	the 4th would be a bit annoying to do properly, but as proposed it's easy enough to brute force
<_blizzy_>	note that i've never had a computer science class
<ams>	is it cheating .. to use cl? :-)
<pyon>	aewffwea: mmm, i see "splitting complex systems into simpler parts" as orthogonal to testing tho
<aewffwea>	pyon: it's not about systems, it's about problem...
<xeno_>	aewffwea: you need to practice it
<pyon>	aewffwea: ok, problem, whatever
<pyon>	aewffwea: it's still orthogonal to testing
<xeno_>	it is not
<aewffwea>	pyon: if i tell you to implement something complex like an avl (which i know you know how to implement)
<pyon>	dunno
<pyon>	anyway
<aewffwea>	pyon: most people woudl say wtf? how do i implement an avl? so i tell you, implement creating an avl of size zero. great, it works... then an avl of size one, great, it works...
<pyon>	i haven't found good tutorials, but these video lectures are supposed to be good
<aewffwea>	pyon: and you do little easy steps, instead of thinking of a big complex step
<pyon>	aewffwea: data structures aren't a good example - that's where proofs work wonderfully
<aewffwea>	pyon: so basically with tdd you implement your program, or function only for a subset of the input, so it's easier to do... and then you start accepting more inputs with more iterations....
<pyon>	ah
<ams>	_blizzy_: what are you having problems with?
<aewffwea>	pyon: the idea is to work with a single input, then with two inputs, then with thre inputs, etcs... to make your job easier
<pyon>	aewffwea: doesn't sound too different from "work with base case, then with inductive case"
<pyon>	lol
<aawe>	4 could probably be solved by searching an implicit tree
<ams>	pyon: what are you trying to understand?
<aewffwea>	pyon: the idea is similar, but when you work with really complex problem, you sometimes have a lot of base cases, a lot of inductive cases, and a lot of weird stuff in the middle....
<merijn>	that's when you keep typing "auto" in coq, right?
<pyon>	merijn: lol
<aawe>	cock is an unfortunate name for a programming language
<merijn>	aawe: i'm convinced they picked it on purposes to annoy the us and uk researchers
<pyon>	merijn: today i'm trying to learn an approach different from "maths"
<aewffwea>	pyon: try implementing something like a "drawcircle(center, width)" function with tdd....
<vdamewood>	hi, people, etc.
<ams>	aewffwea: simple.
<aewffwea>	pyon: using only integer arithmetics... that's probably a nice example...
<rindolf>	vdamewood: hi, sup?
<kahrl>	aawe: well, it's better than mumps
<aewffwea>	ams: wait, i haven't finished yet xd
<vdamewood>	rindolf: just wiped my system, and reinstalled the os.
<ams>	aewffwea: ok.
<xeno_>	pyon: btw, here's an example you can take a peek at - probably gives you an idea: https://github.com/jankroken/commandline/blob/master/src/test/java/com/github/jankroken/commandline/happy/basicparsertest.java
<rindolf>	vdamewood: ah, which os is that?
<aewffwea>	you need to use only integer arithmetics, and you can't ask to write anywhere outside the screen....
<pyon>	xeno_: chekn
<vdamewood>	rindolf: os x mavericks
<aewffwea>	and it needs to be optimal
<pyon>	xeno_: and ty
<rindolf>	vdamewood: ah.
<ams>	aewffwea: you can't really draw a circle using only integer arithmetics.
<aawe>	kahrl: what is bad about mumps?
<pyon>	aewffwea: doesn't sound like a good use case for testing - i could just google bresenham's algorithm translate it to my language of choice
<aawe>	 no closely related word comes to mind
<ams>	not a good one anyway.
<pyon>	or was it someone else's algorithm?
<pyon>	dunno
<kahrl>	aawe: it's a disease
<aawe>	oh
<aewffwea>	pyon: eventually, you should end up implementing this algorithm: http://en.wikipedia.org/wiki/midpoint_circle_algorithm (don't cheat by looking at it) xd
<pyon>	xeno_: whoa
<aidanh>	vdamewood: why not yosemite?
<aewffwea>	pyon: damn it, you already know the algorithm :p
<ams>	aidanh: no you won't.
<rindolf>	vdamewood: why did you wipe your system and reinstalled?
<pyon>	aewffwea: yes algorithms isn't a good example
<vdamewood>	aidanh: umm... oops. that actually is it.
<aewffwea>	pyon: the nice thing about bresenham's algorithm is that it has 8 rotations/reflections...
<pyon>	aewffwea: i'm thinking more about the kind of stuff where algorithms isn't the bulk of the work
<aawe>	who is stupid enough to name a language after a disease? except for ecmascript of course...
<pyon>	aewffwea: yea, just work with one, then copy paste to the otehr 7
<aidanh>	ams: wrong person?
<ams>	pyon: bresenham isn't integer only.
<aewffwea>	pyon: so with tdd you'd start only supporting arcs on the 1rst quadrant on the first tests... and then you'd add support for the remaining quadrants in the further tests
<ams>	aidanh: yes.
<aewffwea>	ams: it is, if you do it properly
<ams>	aewffwea: no you won't.
<ams>	aewffwea: uhm, no.
<aewffwea>	ams: http://en.wikipedia.org/wiki/midpoint_circle_algorithm#variant_with_integer-based_arithmetic
<vdamewood>	rindolf: was running out of space. i wanted to change a bunch of stuff anyway, like my username, and to just get rid of anything that wasn't uninstalled completely.
<pyon>	well whatever
<aewffwea>	wikipedia > ams
<ams>	aewffwea: yes, that isn't the same algorithm.
<rindolf>	vdamewood: i see.
<aewffwea>	ams: it's the same idea!
<standoo>	hello world
<ams>	aewffwea: also, that isn't integer based arithmetic.
<encapsulation>	how many global vars are too many
<vdamewood>	rindolf: also, my warranty ran out so now's a great time to start over with a clean slate.
<aewffwea>	pyon: parse a url and extract it into it's different parts
<ams>	aewffwea: you are using floor, floor takes a float for it to be meaningful.
<rindolf>	vdamewood: ah.
<aewffwea>	ams: it doesn't use floor
<aewffwea>	if you do it properly
<rindolf>	vdamewood: it's strange that programs do not completely uninstall themselves.
<ams>	aewffwea: ok, you have no idea what you are talking about.
<xeno_>	pyon: could you elaborate on the whoa?
<aewffwea>	ams: i have, because i implemented it
<ams>	aewffwea: not using integerbased arithmetic.
<aewffwea>	ams: you have the source code on that page, using integer arithmetic only
<ams>	aewffwea: it doesn't use integer arithmetic.
<aewffwea>	ams: public static void drawcircle(int x0, int y0, int radius)
<aewffwea>	it does -_- read the code...
<ams>	aewffwea: no, drawpixel.
<vdamewood>	rindolf: for a mac the big problem is configuration information, which can be in one of a few different places, but usually the program itself is entirely self-contained in a single directory.
<pyon>	xeno_: i'm gonna assume that the verbosity comes from java, rather than the tdd approach itself
<aewffwea>	read this: http://en.wikipedia.org/wiki/midpoint_circle_algorithm#example
<xeno_>	pyon: a bit of both, but yes, a lot of it is from java
<ams>	aewffwea: and nobody uses this to draw circles, since they become ugly like fuck.
<ams>	10:03 /ignore aewffwea
<ams>	now ..
<ams>	one more hour, and baking!
<ams>	my yeast will take over the world!!
<xeno_>	pyon: but managing the complexity and size of tests is something that requires continuous focus
<aewffwea>	pyon: try implementing parsing an url into it's different parts...
<aewffwea>	pyon: you have a lot of cases, yet they are simple
<aidanh>	_blizzy_: those problems seem to be more about your strategy than your implementation
<pyon>	also what's with the names "kata", "koan", etc.?
<vdamewood>	weird, minecraft doesn't like java 7.
<pyon>	aewffwea: yes, that seems a like a better use case for tdd
<aawe>	pyon: that's eastern shit, really cool
<xeno_>	vdamewood: does it like 8? or is it still in java 6 land?
<xeno_>	vdamewood: java 7 is btw more or less unsupported now
<ams>	pyon: boring repetetive crap to try and solve the same problem in different ways.
<vdamewood>	xeno_: 6
<ams>	pyon: immensly meaningless term.
<xeno_>	vdamewood: wow
<xeno_>	vdamewood: that's crazy
<aawe>	aren't microsoft porting it to vb.net?
<xeno_>	vdamewood: given how java 6 went out of support like 2-3 years ago or so
<vdamewood>	oh, nope. i just installed jdk-8u45
<aewffwea>	pyon: another nice case, is implementing a "derivator" logic... given an equation, or whatever you want to call it, return the first derivate...
<xeno_>	vdamewood: even for java 7, oracle stopped releasing bugfixes in january
<pyon>	aewffwea: that's easy without tdd
<kahrl>	vdamewood: i'm running it on java 8 absolutely fine
<pyon>	aewffwea: it takes one line of haskell
<xeno_>	vdamewood: but of course, they're realists, so i guess they will still release critical security patches...
<aewffwea>	pyon: one long line :)
<aewffwea>	pyon: btw: i mean equations, with sin, cos, log, e^... not only polinomials...
<xeno_>	aewffwea: you're keeping him in the wrong domain!
<vdamewood>	i think it's a mac idiosyncrasy. java 6 was made by apple, and when it was released apple had a setup to make 'native'-looking apps with java.
<aewffwea>	xeno_: that's a nice thing for tdd, it has a lot of cases...
<xeno_>	vdamewood: yeah, apple dropped support for java after java 6
<pyon>	aewffwea: thanks to infinite lists, i can represent a function as a maclaurin series, then i just drop the first element, and zipwith (*) [1..]
<pyon>	aewffwea: no need to use tdd for something so obvious
<_blizzy_>	i feel so stupid
<vdamewood>	i'm guessing the java execution stub requires apple jre, but minecraft itself doesn't care.
<_blizzy_>	._.
<pyon>	aawe: i'm of partial chinese ancestry myself, love both chinese and japanese food (haven't tried korean, but japanese food with kimchi is great)... but when it comes to the philosophical stuff (conficianism, taoism, etc.) we've been pretty quick to reject it as pure crap
<aewffwea>	pyon: will you give me the "analytical" solution?
<aewffwea>	pyon: because that's what i want
<aawe>	pyon: rejecting the philosophies of a majority of the earths population offhand seems drastic
<pyon>	aewffwea: if you absolutely want exp, cos, sin as special cases, they can be easily added
<aewffwea>	pyon: and i can also probably ask you to give me the simplest solution, given that there are sometimes more than 1 way  to derivate something... you can probably define simple in any way you want... as long as it's a total ordering....
<pyon>	aewffwea: really, this is just transcribing the mathematical definition
<pyon>	aewffwea: you aren't gonna convince me to do tdd for algorithmic work
<vdamewood>	this kind of sucks, though. i was hoping apple jre was one of the things i could get rid of with this wipe.
<xeno_>	pyon: confucius is frequently blamed for turning china completely introspective and leaving world domination to the west.
<aewffwea>	pyon: i'd totally do tdd for that... i think it's a good example
<pyon>	aewffwea: i want to learn tdd because i finally got interested in other stuff
<aewffwea>	pyon: okay, implement a chess...
<aewffwea>	pyon: they tell you moves, move can be valid or not...
<pyon>	xeno_: can't blame the man for incompetent rulers many centuries after he died
<pyon>	xeno_: but anyway
<aewffwea>	pyon: if it's valid move the chess and follow the rulses, blah blah blah
<aidanh>	_blizzy_: which language are you doing these in?
<_blizzy_>	aidanh, python
<aawe>	python is death
<_blizzy_>	for 2, i learned a new trick, so 2 is now easy
<xeno_>	pyon: meh, i still blame plato for things governments does today... :)
<ams>	pyon: tdd is good for testing the api that you han't broken anything, that is it.
<aidanh>	maybe i'll give them a go in haskell
<ams>	pyon: and not reintroducing bugs.
<aewffwea>	pyon: ignore ams, he has no idea what he is talking about
<ams>	right, like picking yet another algorithmic problem which is trival in haskell.
<aawe>	i must not python. python is the mind-killer. python is the little-death that brings total obliteration. i will face my python. i will permit it to pass over me and through me. and when it has gone past i will turn the inner eye to see its path. where the python has gone there will be nothing. only haskell will remain.
<ams>	nod nod nod .. smart move
<pyon>	aewffwea: ok that's perhaps a better use case
<pyon>	aewffwea: but i think the real tests should be (0) playing against me, (1) playing against players better than me, (2) playing against other engines
<pyon>	aewffwea: no idea how to automate (0) and (1)
<pyon>	aewffwea: don't pick algorithmic examples, i'm good at solving those with... well... just math
<aewffwea>	pyon: the tests are 1. empty board... any instruction fails
<pyon>	ok
<pyon>	aewffwea: the empty board is an invalid position
<pyon>	aewffwea: because there are no kings
<aewffwea>	pyon: 2. board with a single pawn. moving it properly works.... 3. moving it improerly doesn't work
<aewffwea>	pyon: then you start testing with other pieces...
<ams>	aewffwea: all invalid.
<pyon>	aewffwea: a valid position must have at least the white and black kings
<aewffwea>	ams: didn't you ignored me? i was happy about it :(
<aewffwea>	pyon: great! then implement it that way....
<aewffwea>	pyon: the thing is taht you have a lot of cases to test...
<ams>	no you don't.
<vdamewood>	oh, hey... a workaround!
<pyon>	aewffwea: well, just because i can play chess, it doesn't mean i know how to formulate an algorithm that solves chess puzzles
<aewffwea>	pyon: you don't need to solve puzzles
<pyon>	aewffwea: errr evaluates chess positions
<aewffwea>	pyon: you only accept moves from the players, and you validate that the moves are valid, and then you execute them
<pyon>	aewffwea: oh, just evaluating whether a move is legal doesn't require testing either
<aewffwea>	pyon: it's like a player vs player chess. no ai needed
<pyon>	aewffwea: it's algorithmically trivial
<aewffwea>	pyon: just validate that the players don't cheat
<pyon>	aewffwea: as i said, don't give me algorithmic examples
<ams>	you cannot cheat if you cannot make invalid moves.
<pyon>	aewffwea: because i'm already pretty good at doing this kind of stuff without tests
<aewffwea>	pyon: ok -_-
<pyon>	aewffwea: i want examples of stuff where tests allow me to do i previously couldn't
<pyon>	there must be lots of this stuff!
<aewffwea>	pyon: then it'll be quite big and complex
<pyon>	e.g. websites
<aawe>	pyon: rails 4 in action, you know you want to
<aawe>	integration tests is where tdd shines
<pyon>	aawe: ah!
<aewffwea>	pyon: you know that dijkstra himself had a bug in one of his books right?
<pyon>	aawe: is it freely available?
<pyon>	aewffwea: i know he admitted he had published a paper with an error... but that was before he fully embraced formality
<aawe>	ah damn it's expensive
<aewffwea>	pyon: i'm trying to think of something intermediate...
<vdamewood>	interesting, the workaround is... to use the linux version.
<aawe>	i could share it with you if you agree to not redistribute it, they might digitally watermark the pdf
<pyon>	aawe: don't worry, appreciate the good intention, but i'd rather not get you into trouble
<pyon>	:-)
<ams>	pyon: (defun 1+ (&optional (n 0)) (+ 1 n)), a test for this would be (1+) == 0, (1+ <random>) == (+ 1 <random>), with the existance being that if you change the api for whatever reason.  (1+ max-number) being a degenerated case cause of maybe arithmetic bug somewhere.
<pyon>	aawe: because if a problem arises w.r.t. licensing/drm/whatevershit, i'm not sure i'll be able to fix it
<pyon>	:-o
<pyon>	i like to assume that there are no bugs in arithmetic... maybe i'm wrong ofc
<ams>	pyon: like if you for some odd reason decide that 1+  should really be (+ 1 1) ..
<ams>	pyon: i mean in the function it self, if you change it in some way.
<pyon>	oh
<rindolf>	ams: actualy (1+) == 1
<aewffwea>	pyon: you can implement a high watermark fund performance fee :p
<ams>	rindolf: stop stealing my thunder, it is what i wanted to get to :-)
<pyon>	rindolf: sbcl disagrees
<pyon>	ams: whoa
<pyon>	sbcl says (1+) --> error
<ams>	and to be strict, it is not valid.
<ams>	so bo!
<ams>	that is why you wanna have such things ..
<pyon>	lol
<ams>	it would be utterly trivial to change (defun 1+ (n) (+ 1 n)) into (defun 1+ (&optiona (n 0)) (+ 1 n))
<aewffwea>	pyon: implement a simple version of logo... you get a file with instructions, you execute them, and you should get a certain drawing
<ams>	or (n 1) ..
<aewffwea>	pyon: the most complex the language you allow, the more fun it'll be
<ams>	logo is algorithmic.  trivial to write a proof for.
<pyon>	well not trivial but doable
<ams>	well, triviallish ..
<aawe>	can you prove that proofs prove anything?
<aewffwea>	pyon: you need to start with something easy....
<aawe>	in the general case
<pyon>	aawe: no
<ams>	pyon: these types of tests are even more useful when you have complicated cruft ..
<pyon>	mmm
<ams>	pyon: and don't want to break the interface..
<ams>	another one might be i dunno ..
<ams>	fib ...
<ams>	you have base case, maybe fib has a cut of point ..
<aewffwea>	pyon: i have a better idea for you...
<pyon>	ok nvm... i'll just follow this video tutorial anwas it recently and i'm surprised it doesn't have more exposure. there's 120 15-minute videos - that's a lot of material.
<pyon>	derek greer at los techies has a series of posts walking through creating a basic game of tic-tac-toe. this is also very good but obviously doesn't go into as much depth as the previous resource. i'd reco
<ams>	so you wanna see that (fib 12000123483943) doesn't calculate anything ..
<pyon>	dammit
<aewffwea>	pyon: do you do manual testing?
<aewffwea>	pyon: or you just prove stuff?
<pyon>	aewffwea: just prove if possible
<pyon>	aewffwea: if it really doesn't convince me, i test a little
<pyon>	but it's after the fact
<pyon>	not tdd
<aewffwea>	go here: https://code.google.com/codejam
<aewffwea>	implement those problems, and submit them without testing them, just by proving them
<aewffwea>	:)
<ams>	pyon: "tdd" is quite stupid.
<_blizzy_>	i can make web apps
<_blizzy_>	but i can't solve 3 of those problems
<pyon>	ams: doesn't matter, i'm open to trying really stupid stuff!
<aewffwea>	either you eventually start failing the submissions, or you can apply for a job on google and they'll hire you :p
<ams>	pyon: sure.
<ams>	pyon: tdd is useful when you are reimplementing a api, and know the interface, and know the base/extreme cases.
<pyon>	mmm
<aewffwea>	ams: please ignore me, but apart from that... you are talking about automated testing... tdd is *not* automated testing....
<pyon>	ams: there isn't much api design involved, then
<ams>	aewffwea: no, i'm not talking about automated testing.
<pyon>	ams: anyway, iiuc what tdd proponents say, it's about api design
<pyon>	ams: as in, the tests define the api
<aewffwea>	ams: what's the difference between tdd and automated testing in your opinion?
<ams>	aewffwea: same things that are incommon between an apple and a horse.
<pyon>	awesomesaurus: ams: it makes me feel a little guilty, but i'm enjoying your argument
<aidanh>	_blizzy_: what are you stuck on?
<_blizzy_>	aidanh, 3 4 and 5 of https://blog.svpino.com/2015/05/07/five-programming-problems-every-software-engineer-should-be-able-to-solve-in-less-than-1-hour
<aewffwea>	problem 1: bleh
<aidanh>	_blizzy_: well, i'm wondering how to solve 3 in a non-ugly fashion in haskell
<aewffwea>	problem 2: bleh ^ 2
<xeno_>	aewffwea: that might be true, but the tests developed during tdd are kept, and typically continuously run on the source code to ensure that you in the future don't break previously implemented stuff
<aewffwea>	problem 3: if you want to be fancy use the matrix [0 1 0 1] thingy
<ams>	... what?!
<aewffwea>	xeno_: yes, tdd includes automated tests, but it's more than that....
<ams>	a matrix for calculating a list of 100 fibonaci numnbers?
<ams>	...
<ams>	just do a collect ..
<aewffwea>	ams: yes, that's the fastest way
<pyon>	awesomesaurus: you mean [[1 1] [1 0]] ?
<pyon>	err
<pyon>	aewffwea: *
<pyon>	sorry awesomesaurus not for you!
<aewffwea>	pyon: yes, something like that :p
<xeno_>	aewffwea: definitely
<ams>	pyon: i think he has no clue what he means.
<aewffwea>	pyon: you can calculate fibonacci by elevating a matrix to the n power
<xeno_>	aewffwea: and the next step is of course bdd
<awesomesaurus>	pyon, np :p
<pyon>	:-)
<protist>	pyon: hello
<pyon>	protist: hai!
<protist>	hello!!!
<aewffwea>	problem 4: is more interesting
<ams>	(loop for x in upto 100 collect (fib x)) blub.
<protist>	pyon: :)
<vdamewood>	okay, this is starting to be an interesting problem.
<pyon>	protist: today pyon is learning from tdd gurus
<protist>	pyon: tdd?
<pyon>	and lols ensues
<pyon>	protist: test-driven development
<protist>	pyon: why lols?
<protist>	pyon: you sound like a test-driven type guy
<aewffwea>	problem 4: probably sorting them as strings, in reverse order....
<rindolf>	protist: hi, sup?
<pyon>	protist: no no i'm not a test-driven guy
<protist>	rindolf: not much :)...what about you?
<pyon>	protist: i'm trying to learn this test-drivenn stuff from the beginning
<rindolf>	protist: i solved project euler #215 which incidentally was the 215th problem i solved.
<ams>	rindolf: cool
<rindolf>	protist: and i had a birthday on 5 may.
<aewffwea>	problem 5: brute force or dynamic programming... i can't think of a better way atm....
<protist>	rindolf: wow nice :d
<rindolf>	ams: :-) thanks.
<protist>	rindolf: how old are you? :p
<protist>	rindolf: happy birthday!
<rindolf>	protist: i'm 38 years old.
<rindolf>	protist: thanks.
<pyon>	aewffwea: anyway, can i use tdd for guis?
<protist>	rindolf: time to buy life insurance 3:)
<ams>	rindolf: i always wanted to solve euler stuff ... to lazy
<ams>	to much math ..
<pyon>	aewffwea: can an automated test suite check whether a ui is good?
<xeno_>	pyon: no
<ams>	pyon: yes.
<xeno_>	pyon: it can say if it works
<pyon>	mmm
<rindolf>	ams: heh.
<aewffwea>	pyon: technically yes, but you need to have a very big/good framework for that to make sense... and you usually need to develop it yourself
<xeno_>	pyon: if it is what the customer wants can only be answered by the customer
<ams>	xeno_: nah, it can compare to something that one defines as "good"
<ams>	nothing to do with frameworks.
<aewffwea>	pyon: ui is good? only as long as you can create a program that tells if an ui is good or not
<xeno_>	ams: yes, but have you ever done that in practice and succeeded?
<ams>	just the definition of "good"
<xeno_>	pyon: anyway, all this is connected to the concept of agile development
<ams>	xeno_: once ... it worked ... kinda ..
<pyon>	well, "intuitive", "responsive", "pretty", etc.
<ams>	pyon: you can check for responsivness, and such .. anything that can be measured objectivally.
<aewffwea>	pyon: as long as you can program logic to answer those questions :)(
<aewffwea>	ams: designers may have an issue with that
<ams>	pyon: like responsivness : button clickness should take less than 1ms
<pyon>	yea
<pyon>	makes sense
<ams>	"pretty" is a bit vuage ..
<ams>	"similar enough to the mockup"
<ams>	is better
<ams>	and you can check that ..
<xeno_>	pyon: which is: you gather some approximate requirements from the customer (which of course are entirely bogus), spend a week developing, show it to the customer who responds with (nah, that's not entirely what i envisioned... the search gives too many results, can't use that... and the buttons looks odd, i want a dropdown menu instead....  - then you go back and develop for a week or 3 more, show it to the customer, and re
<xeno_>	peat
<pyon>	ams: why wouldn't i just copy the same ui used in the mockup?
<xeno_>	pyon: and at some point the customer goes like "yeah, now i can accept this", and you're done
<aewffwea>	ams: we had automated tests on ui that compared a screenshoot to the previous version for regression
<ams>	pyon: tehcnical limitations.
<pyon>	xeno_: ah
<xeno_>	pyon: there's also a concept of bdd
<ams>	pyon: and useful to not introduce "unwarented changes" -- that is all tests really do
<pyon>	xeno_: how does it differ from tdd?
<_blizzy_>	yeah i'm stumped on 3, 4, and 5
<pyon>	ams: yea makes sense
<xeno_>	pyon: it documents the behavior of the system in a way specified by, and readable by, the customer
<aidanh>	_blizzy_: for 3, recursion is probably easiest
<pyon>	xeno_: but not necessarily easily testable, right?
<_blizzy_>	aidanh, i don't even know fib
<_blizzy_>	.-.
<pyon>	xeno_: i mean, as in, automatically testable
<aewffwea>	pyon: bdd is tdd but using a dsl that seems like english
<xeno_>	pyon: it's basically a customer specification in the form of tests
<xeno_>	pyon: yes, it is
<pyon>	oh
<ams>	xeno_: that somehow differs from north's definition of bdd ..
<ams>	not that i know much about bdd ..
<aewffwea>	ams: you talk a lot about tdd without knowing about it, so why would you prevent you from talking about bdd?
<pyon>	something like this? https://cucumber.io/
<xeno_>	pyon: yes, cucumber is one of the more common bdd tools
<aewffwea>	yes
<ams>	aewffwea: oh go away
<pyon>	mmm
<ams>	aewffwea: i know more about tdd than you
<aewffwea>	ams: i seriously doubt that
<xeno_>	pyon: the stuff in green is stuff you can just let your customer read, and he will say if it's right or not
<xeno_>	pyon: but all of this is very much connected to domain driven design
<aewffwea>	xeno_: what's domain driven design exactly?
<pyon>	this is really really really weird
<pyon>	aewffwea: ams: seriously, there's nobody who knows more about anything than you two guys! you rock, even when you disagree with each other!
<ams>	aewffwea: just that i dismiss tdd as a unworkable approach does not mean that i do not know anything about it.
<ams>	pyon: ;)
<ams>	)
<ams>	someone didn't close a parenthesis!
<aewffwea>	ams: have you used tdd seriously in a professional capacity? if so, how long?
<ams>	aewffwea: yes, decade.  before the damn term became popular. for 3gpp crap.
<pyon>	xeno_: i'd love to see something like cucumber, but adapted to the quickcheck approach to testing
<merijn>	tdd == "my type system is to weak to inform my design decisions"
<pyon>	merijn: lol ikr
<aewffwea>	ams: have you ever written a test, without writting any of the "feature you are about to implement" code before?
<aewffwea>	ams: in which language?
<ams>	aewffwea: yes, yesterday.  common lisp.
<pyon>	merijn: but i still want to see what the world is like on the other side of the fence
<xeno_>	aewffwea: the one liner is: identify a shared domain language so that customers, developers, testers and other involved parties know they talk about the same thing, and then design the application in a way that closely reflects the language
<merijn>	pyon: property testing + integration testing has a far better cost-benefit ratio for me :)
<protist>	aewffwea: i think i may have
<xeno_>	pyon: i can absolutely back you up on that - i also would love to see that
<pyon>	merijn: i agree about the benefits of property testing with autogenerated test cases
<protist>	aewffwea: in apex...i had to write tests...may have started with them at least once
<xeno_>	pyon: i really want more property checking in tests
<aewffwea>	xeno_: that's very nice... how do you "design the application in a way that closely reflects the language"
<pyon>	merijn: no need to convince me of that... i actually *like* typeful programming + quickcheck
<merijn>	pyon: oh and regression testing, of course :)
<ams>	aewffwea: how about you?
<xeno_>	aewffwea: for that, you need to read evans book
<pyon>	merijn: *but* i wanna know what the world is like in exotic less civilized places where they still perform rain dances and stuffs
<merijn>	i could see unit testing in some projects, but most code i write is fairly unsuited to unit testing
<aewffwea>	ams: i worked for about 5 years doing tdd every day, for every feature of a project in smalltalk
<merijn>	i.e. unit testing my compilers runtime system is something i wouldn't even know where to sensibly start
<xeno_>	aewffwea: i won't try to compress that down to a few lines here
<merijn>	pyon: ah, smalltalk, there we go ;)
<pyon>	lol
<ams>	aewffwea: would explain your mental illness.
<xeno_>	a lot of the people behind this stuff did it in smalltalk
<aewffwea>	ams: sure it does...
<protist>	i also write code top down sometimes...that forces the code i write after to conform to what the code i wrote first expects
<ams>	smalltalk is unbeearble to write stuff in..
<aewffwea>	xeno_: as i said before, i haven't seen any language where you can do the full tdd experience, except from smalltak...
<aewffwea>	ams: let's agree to disagree :)
<pyon>	well let's stop the pissing contest really
<ams>	what is the full tdd experience?
<ams>	  tdd
<merijn>	aewffwea: did you maybe consider that that might be a deficiency in smalltalk, rather than in other languages ;)
<aewffwea>	ams: in smalltalk you create the program in the debugger, while the program is running....
<ams>	so .... like this little language, called lisp?
<ams>	the one that .. existed before smalltalk?
<pyon>	ams: "little"?
<protist>	aewffwea: that isn't uncommon in forth, either
<ams>	pyon: sarcasm.
<aewffwea>	ams: there is a very nice button called usually "define" that when you send a message to an object and it doesn't has an implementation, you get an error, you press define, you get a template implementation of that method with a " self half " and then while the test is running (e.g.: the program is running) you fill the method implementation and you continue executing the program
<ams>	aewffwea: i call the button for triangle.
<aewffwea>	ams: i don't know lisp, but it's the only language i'd belive it possible to also have that feature
<aewffwea>	apart from smalltalk, clos is probably the best oo system out there...
<ams>	you worked like this in lisp before smalltalk was even on the map
<xeno_>	aewffwea: you realize how that sentence sounds? :)
<aewffwea>	xeno_: which sentence? and how?
<xeno_>	aewffwea: i don't know lisp, but <statement about lisp> :)
<ams>	yeah..
<vdamewood>	yep. the problem with minecraft is how it's wrapped, not minecraft or the jvm itself.
<aewffwea>	xeno_: i don't know, but i know it's amazing...
<aewffwea>	xeno_: so i have a lot of faith in it...
<pyon>	lol faith
<pyon>	goddammit
<pyon>	this is priceless
<aewffwea>	xeno_: and clos is amazing...
<ams>	aewffwea: have you ever used clos?
<xeno_>	aewffwea: but then you do know lisp?
<vdamewood>	if i do java -jar bootstrap.jar it runs without a problem.
<ams>	aewffwea: tell me, what is the idea behind clos?
<fawefeawfewa>	pyon: as george michael said, you gotta have faith...
<pyon>	fawefeawfewa: clos is amazing... if you never ever feel like dispatching on the types of the inner components of data structures
<fawefeawfewa>	ams: i can't answer that...
<ams>	fawefeawfewa: sorry, meant it for aewffwea :(
<ams>	the autocompletion in rcirc has changed somewhat i think ..
<pyon>	fawefeawfewa: in which case the difference in power between multiparameter type classes and clos multimethods will be hard not to notice
<ams>	it is fucking annoying ..
<xeno_>	fawefeawfewa: the teacher i had in religion in high school said the same thing. i think that statement is a major part of what is wrong with society...
<pyon>	ams: same person
<pyon>	ams: aewffwea and fawefeawfewa
<ams>	is it?
<ams>	oh ..
<pyon>	ams: yes
<ams>	ok .
<fawefeawfewa>	ams: but clos is an object system that originally was implemented as a user library, it supports metaclasses that are not attached to the classes, so you can put weird propreties like they are abstract ( which you can't easily do in smalltalk), it supports multimethods, and you can modify anything you want to extend it....
<ams>	fawefeawfewa: then how the fuck can you even claim that clos is amazing?
<ams>	fawefeawfewa: no, wrong.
<fawefeawfewa>	ams: because i read a whole book about clos
<ams>	a whole book on clos ..
<ams>	and you cannot explain the basic concept behind it..
<fawefeawfewa>	ams: i told you, i don't know lisp, nor clos....
<pyon>	so
<fawefeawfewa>	i just know random stuff about them :)
<ams>	but you can make expert statements about them.
<fawefeawfewa>	but enough to say that it's amazing
<pyon>	fawefeawfewa: that makes no frigging sense
<pyon>	but anyway
<pyon>	anyway
<pyon>	silliness aside, and back to tdd...
<pyon>	and bdd, ddd, etc.
<ams>	sure.
<fawefeawfewa>	ams: my knowledge about clos comes from reading: http://www.amazon.com/the-metaobject-protocol-gregor-kiczales/dp/0262610744
<ams>	pyon: i read a book on bdd, i know it sucks.
<pyon>	lol
<ams>	i never used it, or know anything more .. but it really does suck..
<fawefeawfewa>	nice, the review says it:
<fawefeawfewa>	the philosophy behind the meta-object protocol is that different applications may require different kinds of object models, and so the object model itself should be subject to program control
<xeno_>	fawefeawfewa: well, even the name says it: the *meta-object* protocol :)
<pyon>	fawefeawfewa: best course of action is to stop embarrassing yourself, really... i mean it in a friendly way for once :-p
<fawefeawfewa>	ams: i know enough about clos to say that it's amazing :)
<ams>	no, you maybe know some bits about the mop, but not clos.
<fawefeawfewa>	pyon: i'm not embarassing myself... but i have enough knowledge to sometimes being able to have completely justifiable conclusions based on little information....
<pyon>	goddammit, guys, if you continue arguing about subjective value judgments, you can't focus on teaching me tdd
<ams>	seeing you cannot even read the source code for closette.
<ams>	and that amop does not define all of clos.
<ams>	lets get back to tdd ... and bdd ..
<ams>	bullshit driven development ...
<fawefeawfewa>	ams: assuming that clos is implemented based on what the book says, or on top of what the book says, then clos is amazing...
<pyon>	...
<fawefeawfewa>	ams: the author of the book may have lied to me, sure...
<fawefeawfewa>	ams: but it's not likely
<ams>	fawefeawfewa: clos is an api.
<pyon>	dammit
<ams>	fawefeawfewa: nothing else.
<ams>	fawefeawfewa: most lisps use a totally different implementation, implementing parts of the api interface that makes up the mop.
<ams>	fawefeawfewa: sbcl is based on the pcl implementation or whatever it is called.
<pyon>	fawefeawfewa: ams: i'm guessing that any sufficiently powerful dynamic language can implement an object system entirely as a library
<ams>	yes
<pyon>	ofc it will be more pleasant in some languages than others
<pyon>	(depending on tastes ofc)
<fawefeawfewa>	ams: you are forcing me to joshua bloch you... https://www.youtube.com/watch?v=aab7hsctvgw - how to design a good api and why it matters
<fawefeawfewa>	ams: where he ends up saying that every time you write any program you are creating an api
<ams>	fawefeawfewa: you spoke about implementation, implemenation != api
<xeno_>	fawefeawfewa: that's true - but api design in itself has a lot of other issues that don't apply to internals of a program
<fawefeawfewa>	xeno_: like?
<ams>	and lots of decisions in the api of amop could be better.
<xeno_>	fawefeawfewa: mostly how you handle it when you add new functionality to an api after someone have already started using it
<fawefeawfewa>	ams: the nice thing about what the book describes, is that you can change anything you want
<xeno_>	fawefeawfewa: cause then you can't break anything existing
<ams>	fawefeawfewa: not in clos.
<fawefeawfewa>	ams: maybe the book lied to me :(
<pyon>	so
<ams>	fawefeawfewa: no, you misread it, or didn't read it.  you can do anything you want in the mop.
<pyon>	is there any not-totally-ridiculous example of tdd?
<fawefeawfewa>	ams: but i told you, the ideas described on that book are amazing... which are supposedly related to clos
<pyon>	i'm following this tutorial https://www.youtube.com/watch?v=f534zh9rsaa -- but it's ridiculously stupid
<pyon>	it's something anybody could implement correctly, without tests, in 5 minutes
<fawefeawfewa>	pyon: all tutorials start from 0
<ams>	pyon: tdd is ridiculously stupid.
<pyon>	and that's just because java takes so long to type
<fawefeawfewa>	pyon: search for a big project on github that uses tdd
<pyon>	fawefeawfewa: well there has to be an intermediate point right?
<pyon>	i'm not a tdd expert, i'm a tdd beginner
<fawefeawfewa>	pyon: tutorials will start from the beggining
<pyon>	fawefeawfewa: but i don't want to be re-taught algorithms along the way
<pyon>	i'm decent at algorithms
<xeno_>	fawefeawfewa: for instance, if you distribute an api with an interface and an implementation, then you can't add methods to the implementation without adding them to the interface, otherwise they won't be visible for the user. however, if you add methods to the interface, you will break the code of users that have made their own implementations
<ams>	pyon: s/decent/very good/
<fawefeawfewa>	pyon: sorry, but most books seem to assume you don't know much...
<fawefeawfewa>	pyon: search texts from kent beck
<fawefeawfewa>	xeno_: i'm not seeing your point...
<pyon>	fawefeawfewa: i want a practical example of tdd (0) guiding my design, (1) catching stuff that would be hard to catch with proofs
<xeno_>	fawefeawfewa: then look closer
<fawefeawfewa>	pyon: if you do proper proofs, you'll catch everything....
<pyon>	fawefeawfewa: yea but sometimes it's hard
<xeno_>	fawefeawfewa: the point is that you need to consider all that stuff when designing api's that you are going to publish
<fawefeawfewa>	pyon: but if they hire you in a company, and you start spending time making proofs for everything, unless it's the medical device, the nuclear plant, or nasa, they'll end up firing you
<pyon>	fawefeawfewa: plus, realistically, i don't wanna prove stuff about arbitrary javascript code
<fawefeawfewa>	pyon: because you'll work really slowly
<pyon>	(well, realistically, i don't wanna write javascript to begin with)
<fawefeawfewa>	pyon: a formal 100% complete and correct proof is superior to tests...
<ams>	fawefeawfewa: not really.
<xeno_>	pyon: just get the ddd book by evans - and then after that go through the ooad book by larman
<fawefeawfewa>	pyon: you just don't have enough time to make them....
<pyon>	ok
<xeno_>	pyon: then you will be much closer
<pyon>	ddd gonna check that out
<fawefeawfewa>	pyon: it's not realistic to make proofs for the code when you work in a company... it won't happen
<ams>	ddd?
<pyon>	ams: domain driven design
<pyon>	i just know the name ofc
<pyon>	not the concept
<ams>	fawefeawfewa: it is about as realistic as writing tests.
<xeno_>	pyon: http://www.amazon.com/domain-driven-design-tackling-complexity-software/dp/0321125215/
<fawefeawfewa>	ams: writing tests is much much much much faster
<pyon>	xeno_: chkn
<ams>	fawefeawfewa: not really.
<fawefeawfewa>	ams: okay, you are right...
<fawefeawfewa>	ams: i can write tests much much much much much faster than doing a proof for most of the code i write
<ams>	then, your usage of the term proofs is confusing.
<fawefeawfewa>	ams: prove the correctness of a program, or a piece of code
<ams>	ok, so like in a strictly statically typed language?
<pyon>	fawefeawfewa: a proof of correctness requires a formal specification, chances are you never have such a thing
<fawefeawfewa>	ams: either dynamic or statically typed language
<_blizzy_>	i should get a job
<_blizzy_>	i think i'm decent enough.
<ams>	fawefeawfewa: they are quite different.
<fawefeawfewa>	pyon: apart from that, even if you had it, proving it's slower for the regular human than testing
<pyon>	fawefeawfewa: not always
<pyon>	fawefeawfewa: depends on what you have at hand
<ams>	fawefeawfewa: have you ever even tried doing haskell or some such?
<fawefeawfewa>	pyon: i said average human :)
<fawefeawfewa>	ams: i know a little haskell
<ams>	pyon: (which is to say, the same applies for tests)
<pyon>	ams: heh
<ams>	longest test i ever wrote took 8 hours, and it was 10 lines.
<fawefeawfewa>	pyon: suppose you implement a n queens algorithm, how much time it takes you to implement it, and how much time to prove the correctness assuming you have the formal specification?
<ams>	you really must stop with the algorithmic puzzels ..
<pyon>	fawefeawfewa: proving the correctness of the usual dynamic programming solution is super easy
<fawefeawfewa>	pyon: full proof?
<pyon>	fawefeawfewa: yep
<fawefeawfewa>	pyon: then you are a lot better at it than me....
<fawefeawfewa>	pyon: i remember at university, i used to spend 5 minutes implementing the algorithms, and more than 30 to write the complete proof
<ams>	i would also say that you need to know the proof to even be able to write it!
<pyon>	ams: pretty much
<fawefeawfewa>	ams: i always know the proof, as i said earlier, i "mentally proof" most of my code
<fawefeawfewa>	but writting proofs takes a long time for me
<ams>	now you make no sense again ..
<pyon>	fawefeawfewa: every programmer, not just you, has some idea in their head why their code should be correct
<ams>	if you could write it down in five minutes, but have to spend 30 to write a proof ..
<pyon>	fawefeawfewa: otherwise they wouldn't write that code
<ams>	then .. you did not mentally.. do anything.
<ams>	you just copied a solution from a book.
<pyon>	fawefeawfewa: if you think this is what differentiates you from other programmers, i have bad news for you - people might be stupid, but not *that* stupid
<fawefeawfewa>	pyon: let's agree to disagree
<pyon>	fawefeawfewa: we can agree to disagree w.r.t. programming methodology
<ams>	pyon: and a good programmer knows that he probobly is damn wrong about his solution in many cornercases ...
<pyon>	fawefeawfewa: but assuming that most people won't do something that's basic common sense... it's just demeaning
<fawefeawfewa>	pyon: most programmers i know don't actually know how to prove code correctness....
<pyon>	ams: yep
<pyon>	fawefeawfewa: i'm not talking about proofs
<pyon>	fawefeawfewa: i said "some idea"
<pyon>	fawefeawfewa: which isn't necessarily a formal argument
<pyon>	fawefeawfewa: and if you have a formal argument in your head, you may as well write it on paper
<fawefeawfewa>	pyon: the 30 minutes is writting on a sheet of paper a 100% correct and complete mathematical proof of the code
<pyon>	fawefeawfewa: are you sure most of those 30 minutes were spent on writing?
<fawefeawfewa>	pyon: putting all the preconditions, postconditions, and showing how do i get from the precondition to the postcondition of each line of code
<pyon>	fawefeawfewa: rather than thinking?
<pyon>	fawefeawfewa: i call bullshit
<fawefeawfewa>	pyon: and then applying a recursive proof, or the invariant algorithm if i have a loop or something
<fawefeawfewa>	pyon: i think very fast, and i write very slowly
<ams>	then you must write immensly slowly .. like one word per decade.
<pyon>	ams: am i alone in finding it hard to believe that someone would spend more time writing down a proof than coming up with it?
<ams>	pyon: no.
<ams>	and for n-queens...
<pyon>	yea
<fawefeawfewa>	pyon: you have a quicksort source code here: http://en.wikipedia.org/wiki/quicksort it's 2:13... how much time do you think it'd take you to write the complete proof for the quicksort correctness? (and that'
<pyon>	exactly
<pyon>	it's a toy problem
<fawefeawfewa>	s an easy one)
<fawefeawfewa>	pyon: please, do write the complete proof
<fawefeawfewa>	and we'll see how much time it takes you
<fawefeawfewa>	2:14
<fawefeawfewa>	go!
<pyon>	fawefeawfewa: inductively we assume that the recursive calls return already sorted lists, but then we're concatenating three lists, (0) [all elements less than the pivot, sorted], (1) [all elements equal to the pivot, by definition sorted], (2) [all elements greater than the pivot, sorted]... which obviously returns a sorted list
<kahrl>	i don't follow, where did 2:13 come from
<pyon>	fawefeawfewa: see how much time that took?
<pyon>	fawefeawfewa: ofc in this case, it wasn't problematic, because i already knew the proof
<fawefeawfewa>	pyon: that's not a formal proof
<ams>	and it is a typical d&c problem
<ams>	at least the "new" quicksort algorithm.
<pyon>	fawefeawfewa: well, i can't be arsed typing latex on irc
<fawefeawfewa>	in the code you are callilng quicksort(a, p + 1, hi)... how do i know that p + 1 is the correct value?
<pyon>	fawefeawfewa: oh, i was talking about the recursive, not the iterative version
<fawefeawfewa>	pyon: feel free to upload a .pdf to dropbox or something
<pyon>	fawefeawfewa: ofc the iterative version will be harder
<fawefeawfewa>	pyon: i'm also talking about the recursive one
<fawefeawfewa>	pyon: in wikipedia it has indexes
<ams>	fawefeawfewa: please write an exhaustive test suite for quicksort, you have 3 minutes.
<fawefeawfewa>	pyon: you need to show for each line of code, how from the precondition + the semantics of the line of code, you arrive to the postcondition of that line
<fawefeawfewa>	that's a formal proof....
<pyon>	fawefeawfewa: the theorem to prove is "for all natural numbers n, for all lists of length n, the recurisve quicksort will sort the list"
<fawefeawfewa>	pyon: yes
<pyon>	fawefeawfewa: i first performed induction on the natural numbers
<pyon>	fawefeawfewa: actually, total induction
<fawefeawfewa>	pyon: you need to test that your code does that
<fawefeawfewa>	pyon: the exact code that you wrote, not that "quicksort as an idea" does that
<pyon>	fawefeawfewa: so that my inductive hypothesis is "for all m < n, for all lists of length m, the recursive quicksort will sort the list"
<ams>	fawefeawfewa: pyon's informally specified proof is quite formal.
<fawefeawfewa>	i want you to prove the code
<merijn>	fawefeawfewa: wut, you don't need to do precondition/postcondition for proofs
<fawefeawfewa>	merijn: to prove that the code is actually correct? yes, you do... you need to prove that each line is correct
<merijn>	fawefeawfewa: that's only required in stateful languages where you wanna use hoare logic
<ams>	merijn: honey popcorn?
<merijn>	fawefeawfewa: if you have a sane language that admits equational reasoning you don't need any of that
<fawefeawfewa>	merijn: the quicksort code i showed is on a stateful language
<pyon>	merijn: exactly
<pyon>	equational reasoning si the key
<merijn>	ams: sweet popcorn is an abomination unto the lord
<merijn>	ams: salt popcorn or bust!
<ams>	thought you liked honey popcorn ..
<ams>	who was it who liked honey popcorn?
<fawefeawfewa>	pyon: so you admit that proving on a stateful language is horrible slow
<pyon>	merijn: actually, hoare logic is effectively proving that an imperative program is equivalent to a less efficient but more obviously correct functional or logic program, anyway
<pyon>	fawefeawfewa: that's an argument against non-referentially transparent languages
<merijn>	fawefeawfewa: yes, but so is testing a stateful language
<pyon>	fawefeawfewa: not against proofs
<fawefeawfewa>	merijn: it's easy to test ona  statseful language
<merijn>	fawefeawfewa: because you need to test exactly as many conditions as you need to prove
<ams>	fawefeawfewa: can you please implement quicksort using tdd?
<merijn>	fawefeawfewa: not if you want the same guarantees from your tests as you do from your proofs
<fawefeawfewa>	ams: i could :)
<ams>	fawefeawfewa: no, you can't.
<pyon>	ams: it would be better to say "implement sorting using tdd", because the tdd process is supposed to magically figure out the algorithm for you!
<fawefeawfewa>	ams: surely i can
<merijn>	and as pyon says, this boils down to "non-referentially transparent languages are dumb"
<ams>	fawefeawfewa: no.
<merijn>	fawefeawfewa: ok, go :)
<ams>	pyon: indeed.
<merijn>	actually, i'm inclined to agree with ams
<pyon>	anyway anyway
<pyon>	i think there's value in tests
<pyon>	just not for algorithms stuff
<merijn>	i think in a study 3 out of 5 published (i.e. in books on algorithm) quicksort implementations had a bug
<pyon>	data structures and algorithms are math
<ams>	pyon: agreed.
<ams>	merijn: yup .. lots of basic bugs, lots of things missed.
<merijn>	why anyone would implement quicksort *anyway* is yet another question, mergesort is so much easier to implement bug free and prove correct
<fawefeawfewa>	merijn: in real life quicksort is usually faster
<ams>	no.
<merijn>	no
<merijn>	quicksort just uses less memory
<ams>	for small n, in real life bubblesort is faster.
<merijn>	they have the same asymptotic complexity and mergesort is far easier to parallelise
<ams>	for big n, it depends.
<fawefeawfewa>	http://stackoverflow.com/questions/680541/quick-sort-vs-merge-sort
<fawefeawfewa>	typically, quicksort is significantly faster in practice than other Θ(nlogn) algorithms, because its inner loop can be efficiently implemented on most architectures, and in most real-world data, it is possible to make design choices which minimize the probability of requiring quadratic time.
<fawefeawfewa>	i think you need to start programming in the real word guys...
<ams>	yes .. stack oveflow that quotes wikipedia .. with no empircal data to back it up.
<ams>	right ..
<ninjapenguin>	word!
<merijn>	fawefeawfewa: what, like writing web apps in node.js?
<xeno_>	merijn: not that real :)
<pyon>	merijn: would it also be easy to parallelize "heapsort" (more accurately, heapsort variants), where the underlying heap supports o(1) merging, e.g. brodal-okasaki's bootstrapped priority queues on top of skew-binomial ones?
<merijn>	fawefeawfewa: i did 5 months of hpc optimising away branch mispredictions and cache misses, what did you do that makes you an expert on real world performance?
<merijn>	pyon: i dunno of the top of my head
<pyon>	ah!
<fawefeawfewa>	merijn: implementing all algorithms and benchmarking them at university
<ams>	https://reprog.wordpress.com/2010/04/19/are-you-one-of-the-10-percent/
<ams>	merijn: ^^
<zaxbyes>	if i am posting to a website...how do i pass the 'request body'?
<ams>	merijn: the example about people not being able to implement basic stuff is from programming pearls
<merijn>	ams: is it cheating if i implement in coq and prove correctness?
<zaxbyes>	not the request headers
<ams>	merijn: and it is even simpler, binary search.
<zaxbyes>	but the request body
<ams>	merijn: no.
<rindolf>	zaxbyes: can't you use an http api?
<ams>	fawefeawfewa: oh, and you cannot implement binary search using tdd>
<zaxbyes>	rindolf: i can...but does java come with something in its native library?
<zaxbyes>	doesn't*
<rindolf>	zaxbyes: i think so.
<merijn>	ams: i should try that sometime when i get bored in the weekend to make sure i'm as non-sucky as i think i am >.>
<zaxbyes>	rindolf: i can't figure out what it is
<ams>	merijn: you probobly are. :)
<fawefeawfewa>	ams: did the tdd ogre hit you when you were a child or what?
<ams>	fawefeawfewa: no, just calling you out on bullshit.
<merijn>	ams: i'm smart enough to know i'm not smart enough to program imperatively or in c :p
<rindolf>	zaxbyes: https://duckduckgo.com/?q=java+http+client&ia=qa - maybe it's not core, but it should be easily installable.
<ams>	merijn: searching is tricky!
<zaxbyes>	thanks
<merijn>	i always see people say, "i'm not smart enough to program haskell". i'm not smart enough to not program in haskell >.>
<zaxbyes>	i hate haskell
<zaxbyes>	god do i hate it
<ams>	merijn: honestly, i think i would botch the binary search thing in c ...
<merijn>	zaxbyes: it's ok, the lord will forgive you
<fawefeawfewa>	ams: only one way to find out
<merijn>	ams: definitely, especially if my program has to not exhibit undefined behaviour
<ams>	merijn: yup, and all that other gore ..
<fawefeawfewa>	seriously guys....
<fawefeawfewa>	you can't prove stuff on statesfull imperative languages as in c? o_o
<pyon>	merijn: ams: i find it amazing that most people tried to solve the exercise using closed ranges... half-open ranges are much more convenient
<jupelius>	when you do some kind of benchmarking for your code, how do you do it?
<zaxbyes>	merijn: i hope so. i can do some stuff in haskell but it's just not what i'm used to
<ams>	fawefeawfewa: yes, seriously, put up or shutup, we are still waiting for an exhaustive test suite for sorting or searching.
<merijn>	fawefeawfewa: not without investing 100 times more time than in something sane
<zaxbyes>	"so what does this line do?" "oh, that's the program"
<pyon>	merijn: ams: it's obvious from the "low = 0; high = length - 1;" -- that -1 made me cringe a little
<zaxbyes>	oh...it's the entire program?
<fawefeawfewa>	ams: do continue waiting :)
<jupelius>	when i do it i usually just wrap my code in a loop and use some clock() calls to time it
<ams>	jupelius: interewsting question,. i've in the same boat.
<iamtrying>	is here anyone did programming with id card readers? i have. but i have problems.
<fawefeawfewa>	merijn: k, now it makes more sense your proof stuff...
<jupelius>	but that doesn't really work if you're doing something that isn't very cpu-centered computation
<ams>	jupelius: currently i just do two time stamps, run the benchmark nk times, take averagge, and store it in a file.
<fawefeawfewa>	merijn: you only work on recursive/transparential stuff languages
<jupelius>	or rather, it works best when you're just using cpu
<merijn>	zaxbyes: to be fair, it took me like 6+ months to become even slightly productive in haskell and probably 12-18 to truly become comfortable, but now it has replaced all my other languages as default language (even for my shell scripts!). i only do some c/c++ for gpgpu
<pyon>	fawefeawfewa: working with referentially transparent languages significantly cuts the size of formal correctness proofs
<aidanh>	jupelius: depends on the language; for c i usually use callgrind and cachegrind
<merijn>	fawefeawfewa: actually, almost all my works in the past 5 years has been high performance c and c++ and concurrent/distributed runtime systems
<fawefeawfewa>	pyon: i know
<jupelius>	aidanh: what's that?
<pyon>	fawefeawfewa: so it seems pretty reasonable to use referentially transparent languages
<fawefeawfewa>	merijn: did you prove it? did you tested it?
<fawefeawfewa>	pyon: i actually prefer languages where you can choose whether to  modify stuff or not
<merijn>	fawefeawfewa: no and yes, but no tdd or unit testing
<merijn>	actually
<merijn>	i did prove stuff
<pyon>	fawefeawfewa: well, you can have that for local pieces of your code, e.g., haskell's st
<aidanh>	jupelius: profiling tools in valgrind
<fawefeawfewa>	pyon: i write 100% of my code in statefull/mutable langues, yet 95% of my code is immutable/transparential referencistuff
<merijn>	it took me 3 months and a proof to realise the original distributed reference counting algorithm implemented by a colleague was buggy
<ams>	jupelius: what are you trying to bench?
<pyon>	fawefeawfewa: yes, but even if your code is referentially transparent, the language itself doesn't let you use that as a proof principle
<merijn>	then it took me another 2 months to invent a prove a new distributed reference counting algorithm to fix this mess
<pyon>	fawefeawfewa: proof principles come from what the language forbids you from doing
<pyon>	fawefeawfewa: the less it allows you, the stronger the proof principles
<fawefeawfewa>	pyon: but i know if i'm reassigning a variable or not....
<fawefeawfewa>	pyon: so i know if i can assume it or not
<ams>	fawefeawfewa: no you don't
<pyon>	fawefeawfewa: and you can't really prove anything that isn't warranted by the language's semantics
<fawefeawfewa>	ams: i do, when the variable is in a limited scope, and i'm never re-assigning it
<pyon>	fawefeawfewa: if your proof isn't backed by the language's semantics, the proof is bullshit
<jupelius>	ams: nothing right now, that just popped in my head
<jupelius>	usually when i'm asking something in programming channels i'm not coding anything :p
<fawefeawfewa>	i basically never use global variables
<jupelius>	just wondering
<ams>	fawefeawfewa: not even then.
<fawefeawfewa>	pyon: it's not
<fawefeawfewa>	pyon: the variable has only one place where it's assigned, and it's where it's declared... conclusion, it's immutable...
<fawefeawfewa>	pyon: if its java, i'll put a final modifier on it
<fawefeawfewa>	problem solved
<merijn>	fawefeawfewa: you have to prove that that assumption holds
<fawefeawfewa>	merijn: i've already proved it
<fawefeawfewa>	for any variable assigned where it's initialized and nowhere else, and without pointers or weird stuff
<pyon>	fawefeawfewa: ok, if you have individual instances that a variable is never mutated, you have to manually plumb the proof of that everywhere
<fawefeawfewa>	the value never changes
<merijn>	that's not a prove, which part of your language semantics guarantees it won't change?
<pyon>	fawefeawfewa: which obviously doesn't scale
<fawefeawfewa>	merijn: the fact that it's never reassigned
<fawefeawfewa>	pyon: it does if you don't use global variables
<pyon>	fawefeawfewa: "the fact" --> says the smalltalker!
<pyon>	smalltalker, where anything you painstakingly construct can be easily destroyed with a single brush stroke by a colleague
<pyon>	smalltalk*
<ams>	haha
<fawefeawfewa>	pyon: a collegue can go and break you haskell code too
<pyon>	fawefeawfewa: not without editing my code
<ams>	probobly not even then either ..
<pyon>	fawefeawfewa: in smalltalk, you can break guarantees by means of inheritance
<fawefeawfewa>	pyon: the same is true in smalltalk, assuming you don't mess around with bytecode
<ams>	since if they do something stupid haskell will hit you in the head
<fawefeawfewa>	pyon: happily i never inherit from a concrete class
<fawefeawfewa>	:)
<pyon>	fawefeawfewa: that isn't enough - you must work with other people
<pyon>	and you have to drop an anvil on anyone's head who dares do that
<fawefeawfewa>	pyon: so basically you are saying
<pyon>	well perhaps my social enforcement methods are a little bit too brutal
<fawefeawfewa>	pyon: you don't trust your coworkers, so you need the language to enforce everything, because if not they'll break stuff....
<pyon>	but it's the only thing i can do in the absence of mechanically enforced guarnatees
<pyon>	fawefeawfewa: not like i trust myself either
<fawefeawfewa>	pyon: i prefer to either trust my coworker,s and to create tests for the code if neccesary
<pyon>	lmao
<ams>	and spend .. what? 5 months in merijn case fixing bugs ..
<ams>	sure ..
<fawefeawfewa>	ams & pyon: i think i've realized what your issue is
<merijn>	i'd like to see a tdd test setup that guarantees no races in distributed reference counting :)
<pyon>	merijn: hahaha
<merijn>	i agree with pyon
<merijn>	it's not just that i don't trust my coworkers
<pyon>	what are we gonna do?
<fawefeawfewa>	merijn: tdd doesn't guarantees correctness
<pyon>	manually tests all interleavings?
<merijn>	i don't trust future and past me either
<fawefeawfewa>	merijn: but there are studies that show how it reduces the ocurrences of bugs
<merijn>	evidence suggests that future me will do dumb shit all the time
<fawefeawfewa>	merijn: you can certainly test parallel code, and distributed code
<pyon>	fawefeawfewa: well sure, testing is better than nothing
<merijn>	integration tests, sure
<merijn>	but that's hardly tdd/unit testing
<fawefeawfewa>	merijn: tdd is not about unit testing
<merijn>	i'm not saying that
<fawefeawfewa>	i am saying that :)
<merijn>	i'm saying that neither of those works well for that sort of test
aelstrom>	hey, i'm trying to figure out a piece of code, so i figured i could get some ideas here: in x86 assembly (specifically at&t), what is the purpose of doing an indirect call to a routine: moving an address stated by a c function name to a register (say eax), and doing issuing a 'call *%eax'
<ams>	fawefeawfewa: so oh great guru, what is our issue?
<ams>	[aura]maelstrom: contgext? some vm code? what?
<ams>	[aura]maelstrom: plt jump?
<ams>	reloaction table .. or what? context!
<fawefeawfewa>	ams & pyon: you are "idealizing" programming, instead of viewing it as a real life task done by real life people in the context of a bussiness...
aelstrom>	context is kernel code, this is a part of entry code for application processors started by bsp
<darkcthulhu>	hi all!
<ams>	fawefeawfewa: lol
<pyon>	darkcthulhu: hai
<ams>	fawefeawfewa: it is funny on so so so many levels ..
<ams>	for one, pyon and i have immensly and incompatible views on programming.
<darkcthulhu>	pyon: still awake i see. have you found the secet to sustaining zero sleep for days? ;)
<fawefeawfewa>	ams: as i told you before, with inifnite time avaialble, i'd also proof everything
<pyon>	darkcthulhu: lol, i slept a little today
<pyon>	darkcthulhu: like 3 hours
<ams>	fawefeawfewa: and you still wouldn't be able to write a correct searching function in that time.
<_blizzy_>	i jusat thought about something
<_blizzy_>	*just
<_blizzy_>	the american education system is shit
<fawefeawfewa>	ams: if you say so
<merijn>	i don't need infinite tim to prove the parts i care about because i pick my language to make proving things easier :p
<_blizzy_>	they are basically teaching you for a test
<ams>	fawefeawfewa: please write a search function using tdd.
<darkcthulhu>	pyon: polyphasic sleep helps reduce the total amount of sleep; i tried it once, but it requires a fixed schedule.
<ams>	fawefeawfewa: really, or just shut the fuck up.
<pyon>	darkcthulhu: :-o
<fawefeawfewa>	ams: what's a search function exactly?
<_blizzy_>	you can't spell ##programming without argument
<merijn>	fawefeawfewa: binary search on a sorted array
<darkcthulhu>	pyon: i just finished and submitted by compiler project. it is done at last :) felt good seeing automatic parallelization actually do the right thing for some test programs.
<pyon>	darkcthulhu: :-)
<ams>	merijn: no, just search on a sorted array.
<darkcthulhu>	s/by/my
<ams>	using tdd>
<darkcthulhu>	pyon: what have you been up to?
<fawefeawfewa>	merijn: i've implemented that in university, and at at least a few job interviews...
<merijn>	ams: linear search would be easy enough :p
<ams>	merijn: still not doable using pure tdd>
<ams>	> ...
<ams>	mm ...>>..
<pyon>	darkcthulhu: causing a commotion by saying i want to learn tdd
<ams>	ok..
<merijn>	pyon: when i want to troll i just js and get really confused about dynamic typing^h^h^h^h^h^hruntime tagging ;)
<darkcthulhu>	pyon: haha..:) tdd isn't half-bad. that cycle of tests -> implement -> red/green refactor; actually feels good.
<pyon>	merijn: lol
<darkcthulhu>	hardly anyone likes it though.
<merijn>	darkcthulhu: that's what your typechecker is for :p
<ams>	darkcthulhu: i like it, we call it a repl.
<pyon>	darkcthulhu: actually, i can understand why red/green/refactor feels good :-)
<darkcthulhu>	there's an assurance of correctness.
<pyon>	ams: well python/ruby/javascript/etc. have repls... but their users still do the tdd thing
<pyon>	(well they do, right?)
<merijn>	pyon: you know fuckit.js? where it deletes any source line with an error until there's no errors?
<pyon>	merijn: yes
<darkcthulhu>	merijn: wasn't there a study that showed that type related errors didn't cover too many of those encountered in practice? i doubt it takes away the need for tests.
<fawefeawfewa>	ams: out of curiosity... you told me that lisp supports programming in the debugger right?
<merijn>	pyon: i've toyed with the idea of writing fuckit.hs where you write some quickcheck properties and it uses th to automatically generate expressions matching the type until the tests pass ;)
<pyon>	merijn: "whether the resulting code is still worth running, i don't know, and i don't want to know either" -- i think the readme.md said something like that
<pyon>	merijn: kewl!
<merijn>	darkcthulhu: since those studies used c/java/c++ i believe those results, but don't think they're evidence of typing not being useful
<merijn>	darkcthulhu: because the type systems for those languages are like stupid silly
<merijn>	c++ is getting better, but doing it properly requires stupid amounts of verbosity
<fawefeawfewa>	merijn: the thing about type errors, is that they are the fastest errors you'll find while testing either manually or automatically....
<xeno_>	reminds me that i need to take a peek at c++17
<merijn>	fawefeawfewa: oh really?
<xeno_>	yay! removal of trigraphs :)
<fawefeawfewa>	merijn: so if you want to rule out any other type of error, you'll eliminate type errors quite fast most of the time
<pyon>	merijn: the problem with c++ is that the stuff that should be in the core language is in libraries (e.g., std::tuple, boost::variant, std::function) and vice versa (classes with inheritance and virtuals)
<merijn>	fawefeawfewa: like the types in my zeromq statically guaranteeing no connection can use a code path with the wrong authentication type?
<merijn>	fawefeawfewa: explain how tdd would capture accidentally taking the wrong authentication code path
<darkcthulhu>	merijn: even with a highly expressive type system, i doubt you can convince everyone that it is sufficient and that tests aren't necessary. testing is also done on a module and functional level. why wouldn't those be relevant?
<pyon>	merijn: the stuff that's easy to reason about should be in the core language, and the hard stuff should be in libraries... but for some reason c++ does the exact opposite
<merijn>	darkcthulhu: oh, sure, i'm not saying you shouldn't test :)
<fawefeawfewa>	merijn: like in most cases, having a 100% code coverage makes it quite likely that you caught all type errors... (not 100%, but still quite high)
<merijn>	darkcthulhu: i'm just saying i tend to write functional/integration/property tests and after the code, not before like tdd
<xeno_>	hmm... c++17 has some nice features, but it seems more like a maintenance revision than a major change (like c++11 was)
<merijn>	darkcthulhu: so i'm not saying "no testing", i'm just saying "very different from tdd testing"
<darkcthulhu>	merijn: if your tdd didn't catch the wrong authentication path the first time, you would add that test in, and in future, at least you'd know that what you did didn't change that part of the behavior.
<ams>	fawefeawfewa: in the repl, the repl is part the debugger.
<merijn>	darkcthulhu: i'm not sure how you would detect taking the wrong authentication path, though...
<merijn>	darkcthulhu: what would it's symptoms be?
<pyon>	darkcthulhu: even then, property testing (quickcheck) is more useful than the "story-driven" approach dynamic languages encourage (unit tests, together with english descriptions)
<fawefeawfewa>	ams: so you can modify the program while it's running?
<xeno_>	merijn: i think that's common. actual real tdd with tests first isn't really used that much, but people write tests while they write code, and the code in a way that matches the tests that will soon be implemented
<ams>	fawefeawfewa: ... ofcourse? it is a repl ...
<fawefeawfewa>	ams: can you modify the program while you are inside a ... function? i'm assuming it's called function on lisp
<merijn>	xeno_: i like that there's proper lambda's and static_assert now since c++11? :)
<pyon>	fawefeawfewa: you can redefine a function anytime in the repl
<ams>	fawefeawfewa: ofcourse.  you can even modify stuff outside of "lisp"
<fawefeawfewa>	nice
<darkcthulhu>	merijn: err.. what do you mean? the point is not to detect, but to "cover" that case and ensure that the right thing is done.
<fawefeawfewa>	ams: which ide do you use? or which repl?
<ams>	fawefeawfewa: lisp did this long before smalltalk was even thought about.
<fawefeawfewa>	ams: i'm not saying it didn't
<merijn>	darkcthulhu: right, but how do you detect whether it did the wrong thing?
<ams>	fawefeawfewa: i use slime, emacs, and sbcl.
<merijn>	anyway, time for lunch
<fawefeawfewa>	ams: i told you, i have lisp in a very high regard....
<ams>	fawefeawfewa: not sure what you mean with "which repl"
<pyon>	merijn: bon appétit
<darkcthulhu>	merijn: you cannot. ...and we come back to "testing can only show the presence of errors, not their absence".
<fawefeawfewa>	ams: but which one has the triangle button?
<ams>	fawefeawfewa: my keyboard
<merijn>	darkcthulhu: right, but my point was that the static typing can show me it always takes the right one :)
<fawefeawfewa>	ams: the define button to define a method or function that doesn't exist
<fawefeawfewa>	merijn: what's your example sorry?
<fawefeawfewa>	merijn: authentication of what?
<ams>	that is my keyboard, http://www.asl.dsl.pipex.com/symbolics/photos/io/, triangle is bound to similar functionality you describe for cl.
<merijn>	darkcthulhu: keep in mind, this was a response to "proper testing catching almost all the errors that typing can"
<fawefeawfewa>	ams: so you are in a repl, what happens when you call a function or method that doesn't exist?
<darkcthulhu>	merijn: ah.. well. ...in a super expressive type system, in which the programmer leverages the facilities, that could be possible. i agree.
<merijn>	fawefeawfewa: implementation of zeromq sockets, every connection can specify an authentication type, so you want to ensure that there's no code paths leading to the "wrong" authenticatio code path
<pyon>	fawefeawfewa: enter debugger
<ams>	fawefeawfewa: i get tossed to the debugger.
<merijn>	anyway, like i said, lunch
<fawefeawfewa>	ams: great, and you press triangle and the method gets defined...
<standoo>	what do people think about programming languages which use keywords like "end" to end functions and loops?
<ams>	fawefeawfewa: and there i can choose from various things like "define function", or "return with value" or "always return with this value for all instances of this function"
<fawefeawfewa>	ams: nice... is there a name for that feature in lisp?
<ams>	fawefeawfewa: restarts
<ams>	is the closest you can get.
<fawefeawfewa>	k
<darkcthulhu>	standoo: vb? fortran?
<fawefeawfewa>	ams: anyway, apart from smalltalk, and now lisp that you are telling me...
<fawefeawfewa>	ams: i don't know any other language that supports that, which i consider vital for true tdd
<standoo>	darkcthulhu: vb, fortran, bash
<standoo>	darkcthulhu: in general the syntax
<ams>	fawefeawfewa: any language where you can get "undefined function" supports this.
<fawefeawfewa>	merijn: how would a path lead to the wrong authentication code path?
<ams>	fawefeawfewa: the triangle key works for c as well.
<fawefeawfewa>	ams: what other languages do you know?
<fawefeawfewa>	c?
<ams>	fawefeawfewa: i program only in two, cl and c.  i know far to many to list.
<fawefeawfewa>	the c ides i know don't allow you to modify a c program while it's running
<fawefeawfewa>	it won't even launch it if you are calling a method that doesn't exist
<fawefeawfewa>	a function
<pyon>	standoo: i don't care about syntax, but visual basic is horrible for non-syntactic-related reasons
<ams>	fawefeawfewa: i modify c programs while they are running.
<fawefeawfewa>	ams: which ide? or environment do you use?
<ams>	fawefeawfewa: you cannot compile (kinda, you can .. but hacks) a c program without defining all functions.
<darkcthulhu>	standoo: isn't a real factor for me. the rest of the language matters, like the type system, more than that kind of syntactic thing for me at least. but i have noticed that most of "those" languages are shitty to use in practice.
<ams>	fawefeawfewa: emacs.
<fawefeawfewa>	ams: that's nice...
<standoo>	darkcthulhu: shitty?
<fawefeawfewa>	the world is evolving
<ams>	fawefeawfewa: gdb allows you to redefine running programs, load new functions, using some hacks ..
<ams>	fawefeawfewa: uhm... gdb was capable of this back in the 80s
<fawefeawfewa>	ams: that's the first i've heard of it
<pyon>	ams: doing this for c programs seems like a pain tho
<ams>	fawefeawfewa: dbx or whatever it was called was capblae of this on multic
<ams>	pyon: (it kinda is)
<ams>	fawefeawfewa: we are talking 60s technology here.
<darkcthulhu>	standoo: vb has always been a pain to use. fortran feels like a pain. i think using indentation the way python does was a good idea. at least it forces you to write code that is well organized in some sense.
<ams>	fawefeawfewa: maclisp, long before smalltalk did this
<standoo>	darkcthulhu: what about lua?
<ams>	fawefeawfewa: multics had this capability too
<ams>	fawefeawfewa: algol as well afaik
<ams>	fawefeawfewa: it is you who should like ... visit the real world.
<pyon>	darkcthulhu: yea, iirc there's empirical evidence that beginners find it easier to learn to indent their code when they use a language with significant whitespace
<darkcthulhu>	standoo: haven't used it. a lot of fans of it here though, so i guess it's not too bad.
<ams>	fawefeawfewa: emacs can do this as well
<ams>	fawefeawfewa: for emacs lisp.
<ams>	and that too is like 70s 60s stuff ...
<pyon>	darkcthulhu: for some reason, students who use java/c++/vb/whatever never seem to appreciate the importance of indentation
<ams>	i'm hard pressed to find language where you cannot do it that are sane...
<fawefeawfewa>	ams: it's weird that every other language i've used doesn't support it, or it's not clear that it supports it
<darkcthulhu>	pyon: yeah.. except if someone uses a quadruply nested loop within a method within a class. then it gets a little tedious, but that is rare enough not to be a concern.
<ams>	fawefeawfewa: basic even supports this type of usage!
<pyon>	darkcthulhu: yea
<fawefeawfewa>	ams: i'm pretty sure you cannot do it on java on eclipse nor on c/c++ on visual studio
<pyon>	fawefeawfewa: java and c++ are retarded
<ams>	fawefeawfewa: i don't know, i know you can do it with java.
<pyon>	fawefeawfewa: by no means do they reflect "what you can do"
<ams>	erlang does it to ...
<ams>	really well at that ..
<fawefeawfewa>	ams: which with ide?
<ams>	and that is like what? 80s?
<ams>	fawefeawfewa: emacs?
<ams>	fawefeawfewa: i only use emacs.
<ams>	i know nothing else
<fawefeawfewa>	ams: it's probably an emacs thing
<ams>	fawefeawfewa: no, i wrote most of it.
<fawefeawfewa>	you wrote?
<ams>	yes ..
<fawefeawfewa>	what thing?
<ams>	to be able to define unbound/undefined functions as they pop up.
<ams>	and even do fuzzy completion on it.
<fawefeawfewa>	ams: so when you say that java supports it on java, you mean that it's supported with your plugin?
<fawefeawfewa>	emacs
<ams>	fawefeawfewa: yes.
<ams>	i wouldn't know about what other editors do.
<fawefeawfewa>	ams: ah, that makes more sense...
<ams>	it isn't a language thing.
<fawefeawfewa>	ams: is your plugin published?
<ams>	smalltalk as such doesn't do this either.
<ams>	you need something that does it for you
<fawefeawfewa>	ams: you have "plugins" for every major distribution that do that
<ams>	no, my hack is not published.
<fawefeawfewa>	ams: you should publish it
<ams>	possibly.
<fawefeawfewa>	ams: it's the first thing i'd download if i started using emacs
<fawefeawfewa>	(which i won't xd)
<ams>	i don't find the functionality that useful.
<fawefeawfewa>	i find it extremelly useful...
<ams>	since it is a broken way of working.
<fawefeawfewa>	it makes tdd a lot more nicer/faster/useful
<ams>	not really.
<fawefeawfewa>	broken way?
<ams>	defining new functions is not that common.
<fawefeawfewa>	in tdd it is...
<ams>	not really.
<fawefeawfewa>	you define new classes and methods all the time
<fawefeawfewa>	in pure tdd you write the test before creating the class, or the methos
<fawefeawfewa>	methods
<fawefeawfewa>	in fact, you write a test without knowing all the classes or methods you'll need
<ams>	it is more usful to have something that defines a new test case, or jumps to the test case.
<ams>	or to the function that failed.
<fawefeawfewa>	i don't follow you
<ams>	defining new functions is not useful at all in 100% of the cases.
<fawefeawfewa>	ams: it's useful very often to me
<ams>	then you write shitty code.
<fawefeawfewa>	maybe
<fawefeawfewa>	but it's still very useful
<ams>	so you write like 1000 functions per day where this is useful?
<fawefeawfewa>	ams: when i work in smalltak and tdd?
<fawefeawfewa>	probably at least 100 methods per day
<ams>	that .. (de<complete> name () ...) makes it annoying to write?
<ams>	fawefeawfewa: good god, that has to be a terrible code base.
<fawefeawfewa>	ams: let's agree to disagree
<ams>	so over the course of a week, you have 700 things to care about.
<ams>	no, there is nothing to disagree, more crap == worse code base.
<ams>	period.
<ams>	end of story.
<fawefeawfewa>	let's agree to disagree
<ams>	i really want to see a real world smalltalk example ..
<ams>	in the million lines of code range.
<fawefeawfewa>	ams: i can tell you 2 companies that have very important products
<ams>	cause that is what i tackle everyday.  and not even heavily developed projects get 100 methods/functions per day.
<fawefeawfewa>	you won't be able to see the code though
<ams>	sure..
<ams>	fawefeawfewa: how big are the code bases/
<pyon>	fawefeawfewa: perhaps you can't see code, but at least they should have the decency to tell you what properties that code satisfies
<ams>	fawefeawfewa: and if they get appended with 100 methods per day they cannot be that importsant.
<pyon>	fawefeawfewa: then i can simply assume the correctness of that code in my own proofs... if the assumption is invalid, it is not my fault (tm) that the code i was given is broken
<ams>	fawefeawfewa: to compare, one code base that i am working on is 700k lines, give or take. which handles gis data.
<fawefeawfewa>	ams: https://gemstonesoup.wordpress.com/2007/10/03/case-study-featuring-jpmorgans-kapital-and-smalltalk/
<ams>	fawefeawfewa: is it a code base you have worked on?
<fawefeawfewa>	ams: nope
<fawefeawfewa>	i just know it uses smalltalk
<ams>	ok, then i suspect that they do not add anything near 100 methods per day.
<ams>	more like one per month.
<fawefeawfewa>	ams: i've no idea how many methods they add
<ams>	so basically a dumb example from yourside.
<fawefeawfewa>	http://www.cincomsmalltalk.com/main/successes/shipping/ ---> “30% of the worldwide market of shipping containers is controlled by smalltalk systems” – stéphane ducasse, director of research inria lille*
<ams>	fawefeawfewa: also code bases that do not change much.  legacy at that.
<fawefeawfewa>	i think those are probably the 2 most important programs done in smalltalk
<fawefeawfewa>	ams: the jp morgan changes all the time
<ams>	and 1.5 billion data objects .. that is very little.
<ams>	fawefeawfewa: how do you know?
<fawefeawfewa>	ams: the article says so :)
<ams>	right ...
<fawefeawfewa>	ams: they use smalltalk because their time to market is a lot faster than their competitors who use java
<ams>	even in a new code base you do not have that much change.
<fawefeawfewa>	ams: they use it to implement new financial instruments
<ams>	a startup i worked for had a fresh code base, they didn't even write 100 functions per day with a team of 20 develoeprs.
<fawefeawfewa>	ams: the reason why i created a lot of methods is because my methods are probably an average of 3 lines in smalltalk
<fawefeawfewa>	:)
<ams>	that is bad design.
<fawefeawfewa>	ams: i disagree
<ams>	and leads to complicated code.
<ams>	but then, smalltalk is gritty.. and ugly.
<ams>	basically, you are now back peddeling ... trying to justify your absurd claim.
<fawefeawfewa>	you can think whatever you want
<ams>	still waiting for that tdd search thing ..
<fawefeawfewa>	i don't feel like working, that's why i didn't do it :)
<fawefeawfewa>	but it's easy
<pyon>	fawefeawfewa: seriously, i'm still waiting for a "middle-sized" example of tdd in action
<pyon>	not so trivial that i can prove my implementation correct with less effort
<fawefeawfewa>	pyon: i don't know this for a fact, but my guess is that the jp morgan thing uses tdd
<pyon>	but not so big that implementing will take a whole week
<pyon>	fawefeawfewa: dunno what they do
<pyon>	fawefeawfewa: they could shave their heads and do the buddhist monk meditation thingy for all i care
<ams>	fawefeawfewa: no, it isn't easy, it is impossible.
<darkcthulhu>	pyon: the real pain is bdd. i mean, i like what they set out to do with it, but some of those tools and their english-centric syntax is exasperating to learn.
<pyon>	darkcthulhu: heh
<ams>	it is impossibly impossible to write a binary search function using tdd.
<fawefeawfewa>	ams? o_o
<pyon>	darkcthulhu: if either the user or the programmer goes slower than the other, i can foresee some pain
<_blizzy_>	are we still arguing about tdd.
<_blizzy_>	it's been like
<_blizzy_>	an hour.
<fawefeawfewa>	ams: that statement doesn't make any sense
<pyon>	darkcthulhu: i don't see what using english buys you anyway... is it just tdd with an extra english documentation step?
<hashtagyoloswag>	is there a way to have two sql columns interchangeable implicitly?
<ams>	fawefeawfewa: it makes perfect sense.
<fawefeawfewa>	pyon: you don't like small examples because they are too easy, you don't like big ones because they are too much work
<fawefeawfewa>	ams: not to me
<darkcthulhu>	pyon: it's phrased in a way that the customer can verify it and understand. it's words of the customer directly turned into a test.
<pyon>	fawefeawfewa: what i don't like is examples of tests being used when proofs are easier and more appropriate
<darkcthulhu>	pyon: https://github.com/foxish/aggieexperts/blob/master/features/edit.feature
<_blizzy_>	eli5 proofs vs tests.
<fawefeawfewa>	pyon: implement a tic tac toe program, where the computer plays with different strategies? always win, dumb, etc...?
<pyon>	fawefeawfewa: i've already acknowledged that there are different use cases for each methodology
<ams>	fawefeawfewa: so write binary search using tdd>
<wei2912>	what's the argument about?
<pyon>	fawefeawfewa: that has so few cases, and each case is so simple, that i can simply enumerate all cases
<fawefeawfewa>	ams: what do you mean by that? i think we have a language barrier
<_blizzy_>	idek.
<hashtagyoloswag>	like in facebooks friendship table a row would have two friend fields. i could query with "select * from friendships where frienda = ? or friendb = ?", but there may be a cleaner way that doesn't have the or statement?
<pyon>	darkcthulhu: checking
<ams>	fawefeawfewa: oh for fucks sake no we don't.
<pyon>	darkcthulhu: ah cucumber!
<wei2912>	ams: there's the ignore button
<fawefeawfewa>	pyon: great, do the same with a tic-tac-toe-tuc-tooc of 5 in line i think it is, on an infinite board
<_blizzy_>	i like how
<pyon>	fawefeawfewa: it's infinite cases, but still easy to handle with proofs
<_blizzy_>	people get mad because
<fawefeawfewa>	pyon: (btw: it's been proven that the first player wins, i don't have the slightest idea how though :p )
<darkcthulhu>	pyon: yeah :-| i hate that everything underneath that is regexes parsing natural language. that makes it painful to maintain.
<_blizzy_>	someone's opinion is different than theirs
<wei2912>	hashtagyoloswag: looks clean enough to me
<fawefeawfewa>	pyon: you'll prove that the computer will never lose?
<fawefeawfewa>	pyon: i'd like to see that proof
<pyon>	darkcthulhu: regexes? whoa
<wei2912>	you do know that tic tac toe is a solved game?
<protist>	ams: i am starting to fall in love with loop lol
<hashtagyoloswag>	wei2912: yeah, i'm just wondering about the fundamental concept of interchangable columns
<ams>	protist: loop is wonderful!
<protist>	ams: :d
<fawefeawfewa>	wei2912: i know, but i've no idea how the 5 variant is solved
<pyon>	darkcthulhu: that makes the wisdom of using english... even more questionable
<hashtagyoloswag>	wei2912: is there a new supercomputer? how did they solve tic-tac-toe?
<darkcthulhu>	pyon: https://github.com/foxish/aggieexperts/blob/master/features/step_definitions/web_steps.rb is the underlying thing.
<pyon>	darkcthulhu: checking
<darkcthulhu>	it is what makes that crap work.
<hashtagyoloswag>	wow, that's crazy to think a computer can always tie or beat you at tic-tac-toe. end of an era
<pyon>	:-o
<fawefeawfewa>	pyon: so? tic tact toe of 5 in line in an infinite board
<_blizzy_>	if it's infinite
<_blizzy_>	then wouldn't that mean that it's possible.
<fawefeawfewa>	what?
<hashtagyoloswag>	wait, tic-tac-toe with board length n has been solved weakly?
<pyon>	_blizzy_: "of 5 in line"
<hashtagyoloswag>	where n is any number?
<fawefeawfewa>	in 5 in line, n is infinite
<_blizzy_>	pyon, oh.
<ams>	fawefeawfewa: tic-tac-toe on a infinite board is trivial.
<_blizzy_>	that ping.
<hashtagyoloswag>	ams: it is solved?
<hashtagyoloswag>	that's actually interesting
<hashtagyoloswag>	do you have a link to the proof?
<fawefeawfewa>	ams: you need to get 5 things in a row
<fawefeawfewa>	ams: not 3
<ams>	fawefeawfewa: uhm, yes ... you said so.
<fawefeawfewa>	ams: how is it trivial?
<wei2912>	by being condescending
<ams>	just put your x infinitly close to the o.
<fawefeawfewa>	ams: ?
<fawefeawfewa>	they are discrete squares
<ams>	doesn't really matter for the argument.
<fawefeawfewa>	ams: you are playing tic tac toe here: http://gwydir.demon.co.uk/jo/tess/bigsq.gif
<fawefeawfewa>	(or assume it's actually infinite)
<fawefeawfewa>	the pc can either start or be second
<ams>	fawefeawfewa: that is not an infinite board.
<fawefeawfewa>	it needs to try to wine if possible
<ams>	so i am not playing that tic-tac-toe.
<fawefeawfewa>	win
<fawefeawfewa>	and don't loose for sure
<fawefeawfewa>	ams: if you have a solution, say it
<fawefeawfewa>	if not, shut up and let pyon implement it
<ams>	i just fucking did.
<pyon>	fawefeawfewa: right now i'm trying to learn tdd
<fawefeawfewa>	ams: profs are supposed to be evidently true... yours isn't
<fawefeawfewa>	pyon: implement the tic-tac-toe-tuc-tuu game on an infinite board
<pyon>	fawefeawfewa: and, no, they aren't supposed to be "evident", otherwise n-category theory wouldn't even exist - there's nothing "evident" about it
<hashtagyoloswag>	i want to convert chess rules to code. does anyone know of a discrete list of rules for determining the possible next state?
<ams>	fawefeawfewa: some people still think the world is flat, and that is self evident.  and yet there are idiots who think that...
<fawefeawfewa>	pyon: the computer should always win if possible, and never lose
<wei2912>	why not we expand it to 9 in a row
<ams>	fawefeawfewa: first move wins in n row on a n board. always.
<fawefeawfewa>	ams: sure, but now program that into a pc... and you also need to consider that you might be the 2nd player and the human might be dumb
<ams>	fawefeawfewa: put it on the left or right side of your token.
<ams>	done.
<ams>	loop until n
<rounin>	hm... it's easy to program it into a pc.. you don't even need a smart algorithm
<rounin>	just try all possible moves
<ams>	and mxo board to be clear.
<fawefeawfewa>	ams: what's a token?
<ams>	x or o
<wei2912>	rounin: that's infinity
<ams>	duh ..
<rounin>	wei2912: not in tic-tac-toe, it isn't
<fawefeawfewa>	rounin: that's why i said infinite board
<fawefeawfewa>	:)
<wei2912>	rounin: in fawefeawfewa's version, apparently so
<rounin>	oh... must have missed that bit :p
<wei2912>	rounin: in tic-tac-toe it's really trivial...
<fawefeawfewa>	ams: so if i put in 0,0 where do you put?
<fawefeawfewa>	(note that -10, -10 is valid)
<fawefeawfewa>	it's infinite!
<ams>	fawefeawfewa: 0,1.
<fawefeawfewa>	ams: 1,0
<ams>	0,2
<wei2912>	a block is trivial?
<ams>	wei2912: no.
<ams>	wei2912: since there are infinitly many squares.
<ams>	youc annot block :-)
<fawefeawfewa>	2, 0
<wei2912>	^^
<fawefeawfewa>	ams: 2,0
<ams>	0,3
<fawefeawfewa>	ams: 3,0
<ams>	0,4
<hashtagyoloswag>	oh wow
<hashtagyoloswag>	i'm dumb
<hashtagyoloswag>	of course large chess boards are trivially beatable
<fawefeawfewa>	ams: 4,0... i won in 5 moves... you are certainly doing something wrong
<wei2912>	...
<ams>	fawefeawfewa: yes, and? first to move wins.
<ams>	always.
<hashtagyoloswag>	blocking every diagonal, horizontal, vertical takes only 2*sqrt(board size)
<ams>	kinda like you know .. what i fucking said.
<fawefeawfewa>	ams: the statement was to make it the most difficult possible for me to win
<fawefeawfewa>	ams: you can make it so i can't win on 5 steps
<aawe>	x, y
<fawefeawfewa>	but more than 5
<fawefeawfewa>	i don't know how many exactly
<fawefeawfewa>	but it's definitely more than 5
<wei2912>	ams: should be making the first move
<ams>	fawefeawfewa: first person to start wins, always.
<wei2912>	since his claim is that the first person always wins
<fawefeawfewa>	ams: that's assuming it plays optimally
<fawefeawfewa>	ams: if the first player is human that may not happen
<ams>	fawefeawfewa: uhm., ... yes obviously
<ams>	good god...
<fawefeawfewa>	ams: my statement said that either of the players could be human
<wei2912>	fawefeawfewa: that's like the whole point
<fawefeawfewa>	and he could be dumb
<wei2912>	fawefeawfewa: optimal playing
<fawefeawfewa>	wei2912: for the computer
<wei2912>	we're assuming both sides play optimally
<fawefeawfewa>	he said is trivial to make the computer play optimally, yet he haven't said how yet
<wei2912>	only then can we conclude if the first player can force a win
<fawefeawfewa>	wei2912: no, that wasn't the statement
<fawefeawfewa>	-_-
<ams>	fawefeawfewa: i did, multiple times.
<fawefeawfewa>	ams: how does the first player forces a win?
<ams>	by .. putting .. five .. in .. a ... row.
<ams>	12:45 /ignore fawefeawfewa
<ams>	good god.
<ams>	really ...
<fawefeawfewa>	ams: how does he guarantee that?
<wei2912>	ams: honestly i don't think your method works. can you make the first move?
<wei2912>	unless i'm missing something
<fawefeawfewa>	wei2912: i think he realized he said something stupid, that's why he stoped talking :p
<fawefeawfewa>	wei2912: it's true that the first player can force a win, but i don't think it's a simple algorithm
<wei2912>	well, it's an infinite board, so (0, 0)
<wei2912>	will be taken to beyour first move
<wei2912>	(0, 1) is mine
<ams>	wei2912: 0,1/3
<wei2912>	ams: but it's discrete?
<fawefeawfewa>	wei2912: in my statement it was
<fawefeawfewa>	wei2912: but ams seems to be trying to cheat
<ams>	wei2912: it is a infinite board, there are infitie number of squares. between 0,0 and 0,1, no?
<ams>	:-)
<wei2912>	ams: no, there are zero squares between 0,0 and 0,1
<wei2912>	the set of integers is infinite, but there're 0 integers between 0 and 1
<fawefeawfewa>	explain him how a grid works
<ams>	so it is not an infinite board then.
<wei2912>	countably infinite
<ams>	either there are infinitley many thingies between 0,0 and 0,1 or there aren't.
<ams>	if it is just a infinitly _growing_ board it is a entierly differnet problem.
<ams>	but then don't go calling it a infinite board.
<fawefeawfewa>	ams: am i allowed to call the natural nubmers infinite? or not?
<wei2912>	ehh
<aawe>	how do we unlock the mysteries of the brain
<wei2912>	looks like we have a definition war here
<ams>	aawe: lsd, alcohol, concussion.
<merijn>	aawe: staring at lots of math until you start cackling madly
<wei2912>	well, the conversation is over
<wei2912>	we're done
<merijn>	which may share lots of things with ams' suggestion of lsd/alcohol/concussion ;)
<aawe>	ams: i want me some nanomachines-in-brain augmentation
<ams>	wei2912: what happened?
<wei2912>	ams: any further discussion will derail this into a definition war
<ams>	wei2912: i see.
<aawe>	in case of flame war, i can be hired to fight for any given side for 20€ per hour
<aawe>	give me a call
<wei2912>	aawe: can you give us a sample
<surs>	is there a somewhat complete list of proprietary video formats?
<ams>	aawe: yes.. please demonstrate
<wei2912>	surs: wikipedia probably has one that should cover the formats you need
<aawe>	wei2912: you obviously have no idea what you are talking about, i clearly already gave a sample. or perhaps that passed right over your head, i would not be surprised. in review, the definitions are what they are, and cannot really be argued - you are taking a minority stance here that does not make sense, and hamstrings any further discussion. on top of this, you try to close the window of discussion
<aawe>	and save face by accusing other participans of this very behaviour
<wei2912>	aawe: good job there, but you're not at the level of a liberal arts major yet
<aawe>	wei2912: i can also link web comics that may or may not apply to prove my points
<aawe>	for an additional fee, of course
<ams>	hehe
<wei2912>	aawe: no thanks, i'll hire a liberal arts major instead
<wei2912>	aawe: perhaps you might want to fight my side against yourself?
<wei2912>	i'll give you a dogecoin
<aawe>	wei2912: sure, let me just review the discussion
<adsc>	have you guys read about the memristor neural net they built?
<wei2912>	adsc: no
<aawe>	i think memristors is the wrong way to go
<aawe>	i believe dependency injection and bean factories is the path to strong ai
<adsc>	for neural nets or as memory?
<adsc>	omg
<pyon>	aawe: lol
<adsc>	for a second there i thought you are being serious
<pyon>	adsc: srsly?
<adsc>	yeah i should have known better
<pyon>	we need a quote bot
<aawe>	i have heard about the memristor net but i have not seen much actual information, i am intrigued though
<adsc>	this is the article, btw: http://arstechnica.com/science/2015/05/neural-network-chip-built-using-memristors/
<adsc>	it's not very technical, unfortunately
<aawe>	so are they trying to create a new kind of architecture built upon the fundamental properties of memristors, or are they just searching for a way to bootstrap a von-neumann architecture on it?
<adsc>	a neural net isn't a von neumann architecture, is it?
<adsc>	i think the idea is to offload specific tasks to the neural net and do traditional computing as we have it now for the rest
<aawe>	it's an exciting time to be a programmer
<ams>	is it?
<aawe>	i believe so
<adsc>	now is always the best time
<aawe>	we are on the verge of the singulatiry
<aidanh>	well, we get to witness both the staggering developments and improvements in hardware, and the general stagnation on the software side
<aawe>	s/singulatiry/singularity
<ams>	stagering? ... like .. what?
<adsc>	just wait until they manage to harness the 3d dimension in chip designs
<aawe>	aidanh: don't take the bait, ams is never impressed by any software
<aawe>	adsc: how would cooling be solved?
<aidanh>	heh
<ams>	aawe: the claim was hardware as well..
<adsc>	nanocoolers intermixed with the silicon
<aawe>	adsc: now i would like to see a nanocooler
<aawe>	it goes against all the physics i know
<aidanh>	hardware has gotten thousands of times faster, for one
<ams>	software has stopped impressing me long long ago ..
<ams>	aidanh: and yet .. people have problems editing "huge files" that are 30kbytes
<aidanh>	ams: and i'd guess that that'd be caused by poorly-implemented software
<adsc>	aawe: imagine a porous cube...that's your silicon, and the pores are filled with a material that conducts heat well
<aidanh>	adsc: chips already use the third dimension though
<ams>	there are 4mhz computers that are more capable than todays "advanced susyems" ..
<aawe>	adsc: question is if pores are enough to conduct the generated heat
<adsc>	aawe: let's hope the answer is yes
<ams>	aidanh: lisp machine, about 4mhz .. 80s -- https://www.youtube.com/watch?v=o4-ynlplgtk
<aawe>	ams: now we are entering the realm of "who's definition is the best". capable is not an objectively defined, context-free word
<aawe>	my phone is infinitely more capable than an amiga x-shit-3
<aidanh>	ams: you've shown me this before, i believe
<adsc>	no
<adsc>	definitely finitely
<aawe>	i did not mean literally infinitely. or did i literally mean that?
<ams>	aawe: and yet .. you did more on your amiga.
<aawe>	perhaps i used literally figuratively just now
<ams>	so i would htink your amiga is very much more capable.
<aawe>	ams: i never did anything on an amiga, too young
<anj7>	hey i have a small doubt in php
<adsc>	and so it begins
<ams>	:-)
<anj7>	if(preg_match("/index/",$_server['request_uri']) || preg_match("/",$_server['request_uri'])){
<pyon>	ams: aawe: well there's the fact that we keep using more and more computing power to get less shit done
<pyon>	for the 80's standards, we have supercomputers
<pyon>	yet we use them as google/facebook terminals
<pyon>	srsly
<anj7>	when its creationofgod.cf its not giving true.
<anj7>	how can i make it true if its only creationofgod.cf?
<aawe>	pyon: modern gaming is a good counterexample, really pushing what is possible with our hardware
<pyon>	aawe: well true
<anj7>	anyone willing to help?
<aawe>	anj7: php es el diablo
<pyon>	aawe: but the vast majority of people buy i7's just to use facebook and watch cat videos
<aawe>	and run their antivirus programs
<aawe>	because they download catvideo.exe
<pyon>	aawe: php is satan?
<pyon>	aawe: lol
<aawe>	pyon: el currecto
<aidanh>	some antiviruses need an i8 all to themselves
<pyon>	aawe: i wonder how much computing power could be recovered if, instead of runnig both viruses and antiviruses... well... we didn't run them
<aawe>	ivy bridge(tm) i7 (tm) - now with nsa certification!
<pyon>	aawe: all that computing power could instead contribute to finding ever higher prime numbers or whatever other worthy cause
<pyon>	lol, nsa cert
<aawe>	pyon: is there such thing as a worthy cause wrt computing time?
<pyon>	dunno
<aawe>	save 3 orphans per terahash
<pyon>	heh
<pyon>	aawe: heck even something more mundane, that computing power could be rented to c++ programmers who want to make their builds a little bit faster
<pyon>	lol
<aawe>	pyon: distcc is a pain even on a lan
<pyon>	:-o
<aawe>	always some host refusing to work, taking 30 seconds to timeout from
<pyon>	that's where cs research needs to focus dammit... making ai heuristics to make c++ compilation faster
<aawe>	maybe when we get c++17
<aawe>	it's gonna have real modules, i heard
<pyon>	lol
<jupelius>	https://reprog.wordpress.com/2010/04/19/are-you-one-of-the-10-percent/
<pyon>	jupelius: stupid idiots use closed ranges in the answer, complicating their own work
<pyon>	binary search is easier to implement (not to mention prove correct) with half-open ranges
<jupelius>	am i one of the 10 percent? http://ix.io/ior http://ix.io/ios
<aawe>	i am the 1%
<aidanh>	i refuse to believe that 10% figure
<aawe>	aidanh: have you ever taken programming courses?
<aidanh>	aawe: i'm a cs undergrad at the moment
<jupelius>	well, i can believe the number but the use of the word 'professional' sounds a bit odd
<aawe>	aidanh: do your classmates constitute the pinnacle of computer science and problem-solving?
<jupelius>	as you can see from my code, i'm very talented c++ programmer
<jupelius>	my code is pretty much c with references from c++ :p
<jupelius>	but references rock
<jupelius>	c should have them
<ams>	c should be eradicated from peoples memories.
<jupelius>	don't worry, it won't
<ams>	that is what i worry about though ..
<aawe>	jupelius: no unit tests+
<aawe>	?
<aidanh>	aawe: well... some of them are pretty dopey, but i don't know all of them, so its difficult to estimate overall competence
<justanotheruser>	ams: what shoulld you use for hpc?
<jupelius>	aawe: http://ix.io/iot/c
<justanotheruser>	and low level systems programming
<aawe>	jupelius: not really a unit test though. you never test the negative case
<ams>	justanotheruser: define hpc.
<ams>	justanotheruser: low system stuff, common lisp.
<aidanh>	aawe: i'm certain that all of them could write a binary search with ease though
<aawe>	i'd like some rare or epic lisp
<ams>	rare or epic lisp?
<aawe>	common is the second-lowest item class, with trash being the lowest
<jupelius>	aawe: well, that's users fault
<justanotheruser>	ams: something resource critical
<ams>	https://www.cs.cmu.edu/groups/ai/html/cltl/clm/node200.html the example at the bottom is epic
<aawe>	common->uncommon->rare->epic->legendary
<ams>	aawe: ah, you mean like that.
<gedamo>	i read 'rare' and 'epic' as game development companies :p
<wei2912>	jupelius: i genuinely hope you're not trolling
<ams>	what?!
<ams>	oh ..
<ams>	 :(
<ams>	https://github.com/g000001/cmlisp1 i thought i found the cm1 simulator :(
<aawe>	imma create a hyperlisp with a pretty website and take over the lisp hype
<pyon>	jupelius: http://pastebin.com/gvpfe9cr
<pyon>	jupelius: didn't test it
<pyon>	or even compile it
<aidanh>	pyon: that's nice
<pyon>	but this can be easily proven with dijkstra's predicate transformer semantics
<aawe>	sprinkle some void pointers on that
<aawe>	for good measure
<ams>	mm.. i want cm1 lisp simulator ..
<ams>	mmeeee want
<ams>	nom nom
<aidanh>	although usually i'd add pre+post condition assertions
<standoo>	anyone have any thoughts about function declarations and function expressions?
<aawe>	standoo: any aspect in particular?
<pyon>	aidanh: that changes the complexity of the algorithm, sadly
<gedamo>	ams: connection machine lisp?
<pyon>	aidanh: binary search is o(log n), with the assertions, it'd be o(n)
<standoo>	aawe: eg like javascript
<aawe>	standoo: what's the context?
<standoo>	aawe: function functionname() {} or var functionname = function() {}
<pyon>	aidanh: so i just assume it... and, if the precondition doesn't hold, then the whole thing is simply meaningless
<pyon>	also relying on the fact that / rounds down
<aawe>	standoo: performance doesn't differ, slight semantic difference for lexical scoping
<mister>	i'm wondering something.. wich language should one use to make a 3d game inside a web browser without the need to install anything?
<standoo>	aawe: in terms of global vs local?
<aawe>	mister: javascript
<rabbitator>	hello everyone. does anybody know how to use source code of program with  agpl licence? i want to make android game with part of another program, but should i open code of whole my game too or don't? i read official gnu license documentation, but don't understand anything because i'm stupid russian dude
<mister>	where you can read mouse and keyboard input
<mister>	aawe: aha thanx very interesting
<pyon>	jupelius: http://pastebin.com/m6wae5qb -- sorry, fix'd typo in line 14
<aawe>	standoo: foo(); function foo() { ... } is valid. foo(); var foo = function() { ... } is an error
<aidanh>	pyon: well, assertions get compiled out when not in debug mode; wouldn't that keep the same complexity
<pyon>	jupelius: http://pastebin.com/bmgv7grr -- and now fix'd postcondition
<pyon>	aidanh: well true
<mister>	aawe: aha thanx very interesting, can you make 3d models with javascripit? or wich tools should one use for that?
<pyon>	aidanh: i still think assertions shouldn't change the asymptotic complexity of code
<rounin>	rabbitator: http://www.gnu.org/licenses/po/agpl-3.0.ru.po ?
<pyon>	aidanh: otherwise, debugging doesn't tell you much about the actual performance
<rounin>	rabbitator: never mind... that seems to be only a few strings
<rabbitator>	yeah
<rounin>	rabbitator: ah yes... it's just for the site
<aidanh>	pyon: well, it's fairly ugly if they do; but if such assertions would catch incorrect usage or an incorrect implementation, i think that's more important than asymptotic complexity
<pyon>	aidanh: it's really hard to believe that anyone would botch binary search, really
<aidanh>	as long as you can reason about performance without assertions, of course
<gedamo>	ams: https://www.cs.cmu.edu/afs/cs/project/ai-repository/ai/lang/lisp/impl/starlisp/ ?
<aidanh>	pyon: actually... one classmate of mine did :/ repeatedly...
<pyon>	slol
<rabbitator>	i was reading it in russian but did'nt understand, can i use source code without sharing my program or can't
<pyon>	rabbitator... i like that nick
<rabbitator>	tnx
<pyon>	rabbits are frigging awesome
<mister>	what is the differense between java and javascript?
<pyon>	mister: it's the difference between a slow truck and a fragile bicycle
<gedamo>	they are completely different languages
<mister>	lol
<rabbitator>	by the way my nick is rabbit + terminator
<mister>	pyon, so do i want a slow truk of a fragile bicycle? xd
<mister>	truck*
<pyon>	dunno
<aidanh>	neither, probably
<wei2912>	rabbitator: o_o
<wei2912>	why?
<pyon>	mister: i think i'd like teleportation
<rabbitator>	because it's cool!
<pyon>	mister: saves you the pain of dealing with stupid drivers
<mister>	lol
<mister>	pyon, wich tool should one use to make 3d models for web broswer games?
<wei2912>	pyon: well, so does driverless cars
<pyon>	mister: dunno
<rindolf>	mister: http://stackoverflow.com/questions/245062/whats-the-difference-between-javascript-and-java
<pyon>	wei2912: yea but teleportation is still cooler
<mister>	hmm.. is there even a small concept of 3d web sites?
<wei2912>	https://gkoberger.github.io/stacksort/
<rindolf>	mister: there's webgl.
<wei2912>	pyon: driverless cars are cool enough
<wei2912>	just imagine
<mister>	rindolf: thanx =)
<aawe>	pyon: do you mean portaling, or literally destroying your body, sending the information and rebuilding at the other end?
<gedamo>	mister: http://threejs.org/
<pyon>	aawe: probably the latter
<pyon>	aawe: i don't know enough physics to tell of the latter's even possible
<aawe>	i have kneejerk fear of the latter. i'd probably not upload either
<rindolf>	mister: you're welcome .
<pyon>	aawe: the more i learn about functional programming referential transparency, the more i realize it doesn't matter what exact atoms constitute my body, as long as it has the same properties
<mister>	pyon: hmm i believe teleportation cannot work
<pyon>	aawe: i just banished the notion of "object identity" to the past
<pyon>	a past that i better forget as soon as i can
<standoo>	pyon: interesting
<standoo>	pyon: i'm also looking at referential transparency
<mister>	but we should be able to make a gravity like field that will prevent matter inside from moving relative to eachother
<pyon>	mister: well, if it can't work, it's a shame, i'll have to take the driverless cars then
<mister>	that way we can accelerat to the speed of light without beeing crushed xd
<mister>	in a microsecond
<aawe>	mister: the problem with reaching light speed is the energy requirement of "infinite energy"
<aawe>	infinite energy is quite a lot
<aawe>	more than 4 gj
<aawe>	no, double that, more than 8 (!) gigajoules
<pyon>	lol
<aawe>	man, some numbers are large
<mister>	aawe, yeh ment 99% of the speed of light lol
<pyon>	aawe: surely if you try hard enough you can find a number larger than infinity!
<mister>	infinity+1
<aawe>	i agree. it's just a matter of energy and time
<aawe>	infinite energy * infinite time = infinity + 1
<mister>	and space^
<aawe>	right, we need to store it
<mister>	u ned to store energy in the form of atoms wich takes space
<aawe>	i wonder how many dyson spheres have been built
<aawe>	it might be they have not proven to be feasible anywhere but
<plastefuchs>	if one is build, shouldn't it turn up somehow? it has gravitational effects that should be observable, but the star is not, so seeing a black space that pulls shit should be a giveaway for that or some other thing
<aawe>	there are one hundred billion galaxies, and that's just in our current universe. we see very little
<mister>	hmm
<mister>	and cover it with high powered solar cells that capture all light and makes them impossible to observe
<mister>	lol
<mister>	when the star inside runs out :p
<mister>	it would require alot of matter however
<mister>	earth is probably not enough to make a 1cm layer around an entire planet
<mister>	entire galaxy*
<mister>	hmm i think a deathstar would be more efficient
<mister>	the design i meen
<aawe>	efficient for what purpose?
<aawe>	would it run crysis?
<lf94>	ams gnu cl is looking for maintainers
<lf94>	could be a fun little project for you.
<ams>	yes, i know.. they have been looking for some for a while
<lf94>	have you considered it?
<ams>	gedamo: no, that is a simualtor for starlisp..
<lf94>	that could look really good on your resume.
<ams>	gedamo: i was/am interested in the actual cm simulator.
<lf94>	"yeah not only do i use common lisp..."
<ams>	lf94: meh . :)
<lf94>	"i fucking maintain the gnu common lisp interpreter, bitch"
<ams>	i fucking make glibc release tarballs..
<lf94>	tarball != development
<ams>	haha true .. but i have other shit to do :)
<lf94>	fair enough
<ams>	nah .,. not interested ..
<ams>	simply cause it is to much c
<ams>	i think it is a good project to hack on though
<ams>	would be nice to make it more conformant ..
<ams>	and maybe reduce the c dependencies by implementing bits in lisp
<ams>	as long as you don't need another lisp to bootstrap ..
<rainb>	what is an embedded system
<ams>	nobody knows.
<aawe>	an embedded system is a system that can be embedded in another system and still run crysis
<fiki>	aawe wut?
<rainb>	10/10 quality help
<jupelius>	no, it's just the opposite
<jupelius>	embedded system is system so shitty it cannot even run crysis
<aawe>	rainb: you're the one asking the question "please recite the wikipedia article on embedded systems for me" :p
<ams>	rainb: if you ask dumb questions, you will get dumb answers back.
<rainb>	"what is an embedded system, for you?"
<ams>	everything.
<ams>	it is a pointless term.
<aawe>	oh man
<ams>	some people call phones for embedded systems, despite them having more power than a pdp-10.  some people call tablets and other cruft embedded systems as well.
<aawe>	i had my first experience with embedded system at the prime age of 12. i was walking home from school alone, see. at this time in history, parents readily let their children be outside on their own, so i was not shot by a cop on the way
<ams>	some people think that running gnu/linux on a small arm box is embedded
<jupelius>	my pc is an embedded system because it's not a mainframe server
<jupelius>	i don't really know what mainframe server is but that sounds like something big and powerful
<jupelius>	or atleast power hungry
<ams>	some people are conviced that 8-bit systems are embedded, cause well.. you can embed them into envelopes and stuff ..
<aawe>	any way, i saw these guys standing in a semi-circle, and i catched some fragments of their conversation - "this is some good embedded shit" and "is this the latest system?"
<ams>	jupelius: i wouldn't have a hard time defining a mainframe server ..
<rainb>	i don't even know what embedded means anymore
<ams>	jupelius: "can i pull the psu on it without crashing, while i remove change the cpu for a spare?"
<aawe>	naturally, i was intrigued. had the federal burau of system approved this? i walked closer and introduced myself
<aawe>	they showed me what they had - it was an embedded system 3, 3 kilograms of it! before i could ask, they offered to let me try some. they measured up a few grams and lent me a drinking straw
<rainb>	it was a juicebox?
<ams>	rainb: some people think that it is just functionality, that is specific for one task.  say special device that does something in a bigger thing. a temperature cntroler in an ovven ..
<aawe>	when i snorted it, it was like nothing i had ever experienced with other systems. i saw gabe newells face, but i did not know it was his at this time. i saw crysis 3, yet the most modern game at that time was snake
<jupelius>	snake? snaaaaake?
<aawe>	ever since then i have stayed away from embedded systems, they are just too much for me to handle
<ams>	rainb: as you see, the term is totall bogus, like cloud computing.
<aawe>	rainb: did that answer your question?
<rainb>	so embedded system is something like cocaine
<rainb>	interesting
<aawe>	are you talking about microsoft cocaine, the computing platform?
<ams>	aawe: stop trolling.
<rainb>	what is microsoft cocaine?
<jupelius>	very good quality cocaine produced by microsoft
<aawe>	ams: it's not trolling if i don't pretend to be serious
<jupelius>	but you need a certificate to buy it
<ams>	no, it isn't.
<rainb>	isn't trolling when people get mad
<rainb>	or what's the point of trolling
<rainb>	what is trolling tho
<jupelius>	people get mad what ever you do
<bf4grenades>	i'm maad
<aawe>	rainb: that's a problematic description, since people get mad over all kinds of shit
<rainb>	if no one gets mad you're not trolling
<aawe>	"that offends me, which means you are trolling"
<aawe>	"i do not agree. ergo, you are a troll"
<bf4grenades>	i thought trolling was like leading someone on
<aawe>	bf4grenades: are you mad? do you feel blame?
<bf4grenades>	like trolling motor on fishing boat
<bf4grenades>	i guess i'm way off
<rainb>	there is a platform called cocaine? tho, interesting
<wei2912>	lol
<aawe>	https://github.com/thoughtbot/cocaine
<aawe>	https://github.com/cocaine/cocaine-core
<aawe>	the latter is a self-hosted compute engine
<aawe>	or platform
<aawe>	so i was not completely off the mark
<bf4grenades>	doesn't cocaine need a host?
<rainb>	i wikipedia embedded system before asking here, but i did not understand shit, but, now i clicked on simple english wikipedia, and i think i know what embedded system generally means
<rainb>	wikipedia doesn't seem as good for introducing concepts.
<aawe>	is there a ballmer peak for other drugs?
<denommus`>	hi6
<surs>	i have the following problem: i want to run an .exe using start-process. the exe takes a .rb file as input and the .rb takes a bunch of strings as input. now my problem is that start-process is greedy and interprets all arguments for himself. how do i fix that?
<surs>	start-process 'path\to\my.exe' 'path\to\my.rb' 'rb-arg-1' ... 'rb-arg-n'
<gedamo>	surs: is this powershell?
<surs>	oops, wrong channel
<surs>	gedamo: yes :$
<gedamo>	surs: try start-process 'path\to\my.exe' -argumentlist 'path\to\my.rb' 'rb-arg-1' ... 'rb-arg-n'
<hotcoder>	whats going on here
<wei2912>	does anyone mind reviewing my first full haskell program? it's a tic tac toe implementation
<wei2912>	http://lpaste.net/132221
<oleo>	so so tac tic toe
<oleo>	lol
<wei2912>	oleo: :p
<denommus`>	wei2912: instead of having a showgrid function, you can implement the show typeclass for grid
<wei2912>	denommus`: but `type grid = [[marking]]`?
<wei2912>	does using a type declaration change anything?
<oleo>	http://paste.lisp.org/display/147959
<denommus`>	wei2912: wat
<denommus`>	wei2912: i'm telling you to use a newtype instead of a type alias, and to make grid an instance of show
<wei2912>	denommus`: i see, thanks
<wei2912>	denommus`: i was confused for a moment there, since i thought using a type alias would not allow me to make grid an intsance of sho
<wei2912>	show*
<denommus`>	wei2912: i think "player" is not a terribly good name for that. maybe cell?
<denommus`>	wei2912: also, you could data cell = x | o | none, if you want. it's a matter of preference, though
<wei2912>	denommus`: well, player is also used to represent a player
<denommus`>	wei2912: ah!
<denommus`>	wei2912: makes sense, now
<denommus`>	wei2912: why don't you make the amount of aligned markers to win also parameterized?
<wei2912>	denommus`: good idea there
<denommus`>	wei2912: this way, you can change from tic tac toe to gomoku with two parameters
<wei2912>	denommus`: hmm, perhaps i could also parametrize the size of the grid to be m x n. that way i'd hv implemented the m,n,k-game
<denommus`>	wei2912: that's a good idea
<alexfu>	question: those curly double quotes that sometimes text processors use, are ascii double quotes right?
<gedamo>	depends
<oleo>	http://paste.lisp.org/display/147959#1
<oleo>	now it runs
<denommus`>	wei2912: you could do data game = game int int int, and a function to convert from game to the grid
<denommus`>	wei2912: i'm not sure if that's good design, but it might be interesting
<wei2912>	denommus`: hmm. i think i'd prefer to keep game in record syntax
<gedamo>	alexfu: standard (ascii) double quotes are u+0022 "  but some editors use u+201c “ and u+201d ”
<anj7>	pdo or mysqli? which one should i use?
<anj7>	fast..fast..fast
<denommus`>	wei2912: that's fine
<o0elise0o>	http://www.businessinsider.com/microsoft-deals-with-netsuite-and-dropbox-2015-5
<anj7>	well on one seems to be interested, ok.
<wei2912>	anj7: choose the easier one unless speed is a huge factor
<wei2912>	which it probably isn't
<anj7>	ok
<wei2912>	denommus`: it just occured to me that my `getwinseqs` function doesn't take into account the no. of marks needed to win the game
<wei2912>	so i'll have to rewrite it
<o0elise0o>	http://www.computerworld.com.au/article/574184/rombertik-malware-destroys-computers-detected/
<wei2912>	hmmmmm.
<wei2912>	denommus`: how'd i write a function `chop` such that i can take in 3 and `[1, 2, 3, 4, 5, 6]` to get `[[1, 2, 3], [2, 3, 4], [3, 4, 5], [4, 5, 6]]` without the use of `length`?
<denommus`>	wei2912: i have written a similar function some days ago, but i'm on a phone
<seka>	a
<wei2912>	well, i suppose efficiency isn't a huge issue
<wei2912>	so i'm using `length`
<denommus`>	wei2912: ask in #hasmell
<denommus`>	wei2912: #haskell
<wei2912>	okay.
<wei2912>	ugh, finding the diagonals is going to be hard
<denommus`>	wei2912: chop n = filter (\l -> length l==n) . subsequences
<denommus`>	or ((==n) . length) instead of the lambda
<wei2912>	denommus`: that's going to compute the length of all the subsequences
<wei2912>	denommus`: wouldn't that affect performance?
<denommus`>	wei2912: probably. i'm on a phone, just checking whatever is on data.list
<denommus`>	wei2912: anyway, ski provided a good answer
<wei2912>	denommus`: thanks
<gedamo>	wei2912: denommus` what solution did you get for that?
<denommus`>	gedamo: chop n lst = [take n ys | zipwith const (tail lst) (drop n-1 lst)]
<denommus`>	gedamo: sorry, ys <- zipwith...
<denommus`>	leaving
<gedamo>	ah, neat :)
<aawe>	:t zipwithout
<myrl-chan>	aawe: error - undefined variable "zipwithout"
<numb3rz>	sup everybody
<aidanh>	myrl-chan: #define zipwithout ((void*)0); fixed it
<myrl-chan>	aidanh: oh my god
<aidanh>	heh
<aidanh>	zipwithout = zip would be more reasonable
<numb3rz>	if i put malware thru a disassembler will it harm my computer??
<wagonboi>	how come i didn't need to declare a data type with my abstract queue? https://bpaste.net/show/f4a4bd1fd0bf
<aidanh>	numb3rz: unlikely but possibly
<aidanh>	numb3rz: still, why would you be handling malware on a non-throwaway computer?
<planckwalk>	numb3rz: it won't, but you might accidentally run it.
<aidanh>	planckwalk: it could if the malware exploits bugs in the debugger; exceedingly unlikely though
<numb3rz>	aidanh: i jus wanna see what it does: would a safer way be to put the disassembler in virtual box and then run it??
<aidanh>	numb3rz: that'd be much safer
<aidanh>	but not 100% safe either
<numb3rz>	aidanh: i have some .bat files that i wanna see what happens when i run them and to see if im able ti fix it after they are ran whats the best way that you suggest
<aidanh>	numb3rz: running them in a vm is probably sufficient
<numb3rz>	aidanh:ty
<aidanh>	numb3rz: no problem
<numb3rz>	rindolf, wats up buddy? did you solve your problem in project euler??
<rindolf>	numb3rz: do you mean #215? if so - yes.
<rindolf>	numb3rz: i'm now working on a sokoban solver i found on github.
<patarr>	is there any http proxy sniffing utility for linux that doesnt completely suck? something like charles?
<numb3rz>	rindolf: keeping the old noodle sharp huh??lol
<nitrix>	patarr: charles has a linux version...
<patarr>	mind blown.
<nitrix>	you seem so trigger happy with insulting stuff that you didn't even consider the tools you're familiar with might hold the solution. besides, every other tools you aren't familiar with necessarily "completely sucks". good attitude.
<bacon1989>	pretty dead in here
<nitrix>	bacon1989: work hours.
<ams>	friday.
<bacon1989>	this should be the day where everyone slacks off and vents
<ams>	or hacks on fun stuff.
<ihatehex>	what are some good irc servers?
<ihatehex>	 or networks for that matter
<ams>	irc.gnu.org
<puddlejumper>	what up cs bitches?!
<myrl-chan>	haaai
<puddlejumper>	last day of class !
<puddlejumper>	monday i have two finals and i'm done for 3 months :d
<ihatehex>	ams, no
<myrl-chan>	hmmm...
<myrl-chan>	i forgot darlington pairs. fuck,
<myrl-chan>	oh wait, i didn't.
<myrl-chan>	i just used the pnp configuration of darlington pairs for npn.
<audioburn_work>	anyone here using coffeescript?
<ihatehex>	myrl-chan, you've been a bad feet-loving-boy.
<audioburn_work>	hey ihatehex!
<ihatehex>	audioburn_work, i've heard of it, apparently it reduces errors in code
<ihatehex>	it compiles into javascript but looks a lot like java yes?
<audioburn_work>	i hear good and bad
<myrl-chan>	ihatehex: how do you know about that feet thing.
<audioburn_work>	i was thinking python
<audioburn_work>	or ruby
<myrl-chan>	ihatehex: oh yeah, you were there.
<myrl-chan>	ihatehex: shoo.
<ihatehex>	myrl-chan, shoe?
<ihatehex>	myrl-chan, keep me out of your fantasies.
<ihatehex>	myrl-chan, it's okay to have fetishes, just don't push them on "women" on the internet.
<myrl-chan>	ihatehex: pls.
<myrl-chan>	shoo shoo
<ihatehex>	it's creepy.
<audioburn_work>	is "lambda" just a one line function?
<ihatehex>	audioburn_work, basically
<audioburn_work>	that's what it's looking like to me
<audioburn_work>	okay
<ihatehex>	audioburn_work, what language are you on about?
<ihatehex>	:o
<audioburn_work>	multple now, but i'm looking through these coffeescript docs
<aidanh>	audioburn_work: lambda functions are just anonymous functions (ones without names)
<ihatehex>	well, lambdas are a bit different depending on where you are, but often they are one line functions
<ihatehex>	in javascript they're used for 90 line functions
<ihatehex>	so ignore js
<myrl-chan>	ihatehex: pls.
<ihatehex>	myrl-chan, i'm not showing you my feet you creep.
<ihatehex>	i'm a man, i didn't know you were gay.
<myrl-chan>	ihatehex: anything's a lambda function.
<ihatehex>	myrl-chan, good answer if you want to fail at life
<myrl-chan>	ihatehex: pls.
<ihatehex>	myrl-chan, you're a pls.
<myrl-chan>	ihatehex: pls.
<ihatehex>	myrl-chan, i'm not masturbating you with my feet, i told you this already.
<myrl-chan>	<.<
<someoneigna>	how much times would you say it takes to make four mario style platformer levels?
<yaboy>	yo
<hotcoder>	yo
<ihatehex>	someoneigna, all the times
<aidanh>	someoneigna: depends on the quality you want
<someoneigna>	with tiled to be precise. i'm trying to see if my employeer is nuts.
<aidanh>	someoneigna: if you want them to be reasonably good, maybe 4-6 days per level
<someoneigna>	well my employeer asked me yesterday to prepare four levels and pack them with the game for today. i'm considering quitting, last friday asked me to convert a game to use hd textures and a lot of changes for monday. which the game was not prepared for. thanks
<aidanh>	someoneigna: you could pump them out; but they'd be shit
<aidanh>	playtesting alone needs a looong time, as does the design phase alone
<peterfa_>	scary, my code ran fine the first time.
<someoneigna>	i made the game from scratch in one month. now wants to release it with stock graphics. i'm kind of burning out, not sleeping and working in college hours.
<peterfa_>	i mean, after compile errs corrected.
<gedamo>	just because it runs, doesn't mean it's correct :p
<peterfa_>	someoneigna, hire someone from india to do the work.
<peterfa_>	gedamo, it seems to be correct.
<peterfa_>	gedamo, it was built on code that i already wrote but needed some major improvements.
<peterfa_>	someoneigna, oh, this is an issue you need to deal with with your boss. tell him that you're really overworked.
<peterfa_>	someoneigna, if he refuses then say, "look, i'm burning out, you can at least pay extra."
<peterfa_>	someoneigna, demand extra.
<peterfa_>	someoneigna, if you quit he has to find someone to do the work and that would take too long. his goals will slip.
<znoosey>	is 4 levels all that much? :/
<peterfa_>	someoneigna, it's just easier to pay you extra.
<aidanh>	someoneigna: the game industry is like that
<peterfa_>	znoosey, is 1 pushup all that much? it is after 25 of them.
<znoosey>	peterfa_: still easy after 25
<peterfa_>	znoosey, only after significant training.
<znoosey>	peterfa_: not his bosses problem
<peterfa_>	znoosey, unless you don't do any training, which i could see then why you'd think that.
<someoneigna>	i'm not insterested in money. i just want to do the hours he pays me and have time to keep going with college. but pays me for 6hs and makes me work 12hs with the release dates he sets.
<peterfa_>	someoneigna, you can sue.
<peterfa_>	someoneigna, you're letting him take advantage of you. i know how it is, you need to be a good person with high ethical standards and he's lucky to have a person like you, but bosses will do that.
<peterfa_>	someoneigna, so, you'll have to stand up for yourself.
<znoosey>	someoneigna: if he pays for 6 hours, work for 6 hours and then tell him this is what you had time for
<peterfa_>	someoneigna, you could optionally just quit.
<znoosey>	someoneigna: or as you are still in school, take it as training and do the stuff he asks and don't bitch about it
<someoneigna>	there is no contract. his company is still being registered. i will see what is he reaction today and in case he demands for the work he asked i will then offer him to work till he finds someone else.
<fawefeawfewa>	someoneigna: where do you work?
<someoneigna>	country? argentina. a start up making android games.
<django_1>	anyone here now about backppacking?
<niel>	niel@niel ~> sudo ssh  -d 8888 niel@sdf.org
<niel>	should that not tunnel?
<niel>	wrong chan sorry
<fawefeawfewa>	someoneigna: your boss only has power over you, as long as you think you don't have any options
<peterfa_>	someoneigna, in america, that's not any defense. because he's registering, he's an entity. you operated with a contract. a contract exists. if you can demonstrate that you worked those hours and he agreed to pay you, then you have a case against him.
<peterfa_>	someoneigna, he can't bs this, the law will not allow.
<fawefeawfewa>	someoneigna: update your resume, maybe go to a few interviews... if you know you can get another job easily you can then easily tell your boss: no!
<peterfa_>	someoneigna, oh, i don't know argintinan law.
<peterfa_>	someoneigna, i'm sorry, i guess you could challenge your boss or quit.
<fawefeawfewa>	someoneigna: don't do that
<peterfa_>	someoneigna, but hey, i've seen this crap before and people who cheat do get ahead, but not as far as they should.
<fawefeawfewa>	someoneigna: you need to have an alternative job first
<peterfa_>	someoneigna, if they do really well, it's because they had a wonderful opportunity and they didn't need to be jerks, or they prove that their business is weak already and only being jerks is the way to make it work.
<reynir>	i just had a thought: what if you could leave out the else-clause of ternary expressions and the expression would default to null if the test fails?
<peterfa_>	someoneigna, and in both cases, they have hurt their own dignity and have secrets to hide so they can't enjoy their own success.
<znoosey>	i worked like this when i was still at uni too... was a bit painful then, but got me a really good job after i was done
<peterfa_>	someoneigna, you however will look back and see how you gained, and how that guy is just a loser and will always be there, you will move on to better things.
<someoneigna>	thanks for your support, i will come back and tell you how it goes.
<fawefeawfewa>	someoneigna: get another job offer so you have leverage
<fawefeawfewa>	someoneigna: (or insurance
<fawefeawfewa>	)
<rindolf>	baum: or a bigger font.
<znoosey>	baum: or a debugger
<someoneigna>	baum, or ugly square font.
<fawefeawfewa>	baum: or glasses
<aidanh>	baum: or test cases
<znoosey>	so many solutions
<baum>	a way too much -> solutionoverflowexception...
<peterfa_>	had you chosen not to even try, you wouldn't have that bug in the first place.
<someoneigna>	or foreach's
<znoosey>	bugs are important, they make you learn
<znoosey>	nothing makes you learn as fast as having spent a day looking for a bug
<baum>	guess it just isn't healthy to work on a 12" screen...
<znoosey>	>_<
<znoosey>	i work on 2 24" screens and am considering getting another
<gedamo>	i used to program on a 9 inch screen :|
<znoosey>	gedamo: but you are special
<baum>	why would you need another screen? i got 2 24" on my workstation too, and got pretty much enoth space
<znoosey>	baum: there is never enough space!
<baum>	znoosey: in this case you should use a tiling window manager =p
<peterfa_>	i do all my coding on my ttd machine.
<peterfa_>	braile all the way, baby.
<peterfa_>	it's the only way to code.
<peterfa_>	imagine asm in braile, yeah, that's coding.
<gedamo>	http://www.old-computers.com/museum/computer.asp?st=1&c=499
<baum>	peterfa_: couldn't help, had to think of this: https://xkcd.com/378/
<znoosey>	is it bad that i know now the xkcd commics by reading the numbers? :x
<peterfa_>	baum, :)
<znoosey>	now know*
<baum>	znoosey: nah, it's an important skill - someone might ask it at your next job-interview, you never know ;)
<znoosey>	"so, we see you have 10 microsoft certifications, and some years of experience, but what we really like to know is: what is the xkcd strip #208?"
<znoosey>	i can see that happening... on one of my previous ones i was asked to solve a rubix cube
<baum>	a rubix cube? guess i wouldn't have got that job...
<znoosey>	baum: the thing was that they wanted to see how you attacked the problem
<exio4>	i can't solve more than two sides of the rubix code easily :(
<znoosey>	so when i told them i knew how to solve it the whole exercise was sort of ruined
<baum>	znoosey: bruteforce vs algorithms? ^^
<exio4>	i don't remember the general algorithm
<fawefeawfewa>	znoosey: what are you talking about?
<znoosey>	they basically just want you to try, if you give up you are not the person they want
<baum>	guess i'd have asked for some paint :)
<znoosey>	lol
<ari_>	if i want to push data from my browser (client) to nodejs server
<ari_>	how would i have to go about that?
<ari_>	sockets?
<ari_>	json data
<henke37>	sockets are best for persistent connections
<znoosey>	ari_: websockets
<henke37>	if it's an one off, just use a http request
<ari_>	so i'm using expressjs
<ari_>	does express only handle nodejs -> client ?
<ari_>	and no the other way arround?
<ari_>	not*
<llamageddon>	helloes, i has question~~ what operators would you like to see included in a programming language, other than the usual arithmetic, bit ops, function call, indexing?
<llamageddon>	concatenation, maybe stream operators?
<aidanh>	llamageddon: function composition is nice
<llamageddon>	aidanh: like haskell's . ?
<henke37>	llamageddon, a shorthand variant of x?x:y
<rindolf>	llamageddon: concatenation operators.
<llamageddon>	henke37: is being able to do x and x or y enough?
<llamageddon>	rindolf: already planned :)
<rindolf>	llamageddon: and meta-operators are also useful.
<llamageddon>	meta-operators?
<henke37>	also, make ||= and &&= have the semantics of assigning the second operand to the first if the first evaluates to false. without converting the type of the second operand to an int
<rindolf>	llamageddon: yes, like reduce or map.
<aidanh>	llamageddon: yeah
<llamageddon>	rindolf: reduce and map are going to be functions, i don't want to overdo this :p
<rindolf>	llamageddon: ok.
<llamageddon>	aidanh: isn't it enough to be able to do a().b().c() ? or do you mean for creating lambdas in very shorthand syntax?
<henke37>	also please ensure that the language has a sane event system
<pyon>	llamageddon: that isn't function composition.
<henke37>	c# is almost right. they just screwed up make it safe to just dispatch events without checking if there are any listeners
<llamageddon>	henke37: event system is an api, isn't it?
<pyon>	llamageddon: function composition is h(g,f)(x) = g(f(x))
<henke37>	llamageddon, not in c#
<pyon>	errr, s/h/compose/
<llamageddon>	pyon: and if the function is x -> x then g(f(x)) is equivalent to f(x).g()
<henke37>	for that matter, ensure that it has getters and setters. it's nice to be able to pretend that methods really are properties of the object
<llamageddon>	yes, getters and setters will exist
<pyon>	llamageddon: what do you even mean by "if the function is x -> x"?
<llamageddon>	also magic function for dynamic member access
<pyon>	llamageddon: composing with the identity function isn't terribly interesting.
<henke37>	the language better have strong type safety too
<llamageddon>	where x is the type
<llamageddon>	henke37: yep
<llamageddon>	pyon: in my language, you can do 2.tostring() (or to be exact (2:tostring() )
<llamageddon>	so, if you for example are operating on iterables
<llamageddon>	you can just do [1,2,3,4]:map(something):filter(somethingelse):tolist()
<pyon>	llamageddon: i guess you didn't realize a critical point. you can call the "compose" function without reference to "x".
<pyon>	llamageddon: for example, you can do "compose(bar, foo)"
<llamageddon>	yes, which essentially evaluates to a new function
<pyon>	llamageddon: more precise, you can do "baz = compose(bar, foo)", and then call the result on multiple arguments: "baz(1)", "baz(2)", etc.
<henke37>	llamageddon, so are you going to write a compiler for the language too?
<llamageddon>	equivalent to fn(x) { return f2(f1(x)); }
<pyon>	precisely*
<llamageddon>	henke37: i have various issues, so for now, it's just planning. once i finally settle on all of the main details, i might write it, otherwise, it'll wait some years until i do it. but either way, it will be compiled and low-level, yes
<pyon>	llamageddon: so merely being able to chain method calls isn't enough.
<pyon>	llamageddon: because you can't give a name to the chain itself.
<llamageddon>	pyon: well, you essentially make an anonymous function that chains the two functions together, isn't that right?
<pyon>	errr s/give a name to the chain itself/manipulate the chain itself as a first-class entity/
<llamageddon>	and then you (presumably) assign it to some other identifier
<pyon>	llamageddon: "assign it to some other identifier" --> perhaps, perhaps not
<seka>	what does this command do?               /bin/ln -s /infa/jboss-eap-6.1 jboss
<pyon>	llamageddon: little anonymous functions can be very useful.
<seka>	it allows me to later go to /jboss and it was as if i was going to /infa/jboss-eap-6.1 ???
<myrl-chan>	fuck blocks, lambda functions are way better. psh.
<pyon>	myrl-chan: ikr
<aidanh>	seka: read the man page for ln
<myrl-chan>	{ x = 1 } ? more like (function () x = 1)()
<thnkabtthink>	why do people use the word "fuck" to convey a negative emotional response?
<myrl-chan>	{ x = 1 } ? more like (function () x = 1 end)()
<oleo>	thnkabtthink: no idea
<llamageddon>	thnkabtthink: because historical reasons
<pyon>	thnkabtthink: dunno, but i don't think this is exclusive to english.
<oleo>	thnkabtthink: when you think about it it's not normal......
<myrl-chan>	thnkabtthink: why does why mean why?
<thnkabtthink>	relax
<llamageddon>	originally, having sex was considered as a man "violating" or "taking control" of a woman, which naturally suggested an insult towards the receiving party
<myrl-chan>	heck, even conlangs can degrade to slang, and they most likely will.
<llamageddon>	yay for centuries of sexism and patriarchy
<myrl-chan>	let's face it, proper structuring most likely will make your sentences sound weird.
<oleo>	llamageddon: what a bloody view.....
<ams>	myrl-chan: more like (lambda () (setf x 1))
<myrl-chan>	ams: hehehe. :p
<ams>	sorry .. i just had to
<oleo>	just stupid......
<myrl-chan>	ams: now now, don't worry.
<llamageddon>	oleo: it's true, though, isn't it?
<oleo>	no it's not
<ams>	there hasn't been any lispy dicussion since like .. ages! had to interject ..
<rindolf>	myrl-chan: hi, sup?
<llamageddon>	oleo: do you know of some other etymology of the word?
<myrl-chan>	rindolf: i'm fine.
<llamageddon>	either way, let me google around a bit
<oleo>	no
<myrl-chan>	rindolf: you?
<chargen>	hi. why so many servers run centos? should i use centos or another distro?
<myrl-chan>	rindolf: well, i'm not really fine, my legs hurt.
<myrl-chan>	"walking" is not one of my daily activities, yet i did it today.
<ams>	llamageddon: what word?
<myrl-chan>	i probably walk less than 100 meters each day.
<ams>	chargen: use what you know.
<llamageddon>	ams: people were asking why fuck is often used to express negativity and hostility about something, e.g. "fuck apple"
<myrl-chan>	sex apple.
<ams>	oh
<oleo>	don't give a shit apple.....
<znoosey>	apple is fucking awesome!
<oleo>	no apple care
<oleo>	lol
<llamageddon>	apple is high quality stuff, except designed to milk money even after acquisition, and way overpriced
<ams>	llamageddon: not sure why it is negativef, or hostile.
<llamageddon>	it's only worth the money if you have enough money to burn it in a fireplace
<ams>	llamageddon: but your reasoning is false.
<llamageddon>	ams: why?
<ams>	llamageddon: having sex was not to violate women, nor taking control of women.
<llamageddon>	the only reason gay sex was historically considered a sin was because "a men shall not lie as a woman"
<llamageddon>	ams: historically, women weren't thought very much of in a lot of places
<archilius>	anyone know about bash-it? is it good?
<ams>	llamageddon: which places?
<ams>	llamageddon: one has to define which places first before one can talk.
<llamageddon>	europe, asia, no clue about other places
<ams>	llamageddon: which places exactly?
<ams>	llamageddon: cause in scandinavia women where of highest regard during the viking times, and long after that as well.
<ams>	llamageddon: same in rome, and egypt.
<llamageddon>	i mean, the original definition of marriage was transfer of ownership of a woman from her father to her husband, in europe
<ams>	llamageddon: most of france equally so.
<ams>	llamageddon: again, wrong.
<llamageddon>	and yet they had no right to vote
<llamageddon>	or do a huge amount of stuff
<ams>	llamageddon: men did also not have the right to vote in many places
<llamageddon>	i mean, women voting and being able to do whatever they want is something that wasn't even fully possible 100 years ago
<rindolf>	myrl-chan: i had a productive day today - i worked on a sokoban solver and solved project euler #215.
<ams>	llamageddon: same applies for men equally infact.
<myrl-chan>	rindolf: cool!
<rindolf>	myrl-chan: and i went on two and a half walks.
<llamageddon>	ams: if you turn out to be a redpiller/sexism denialist, i'm out of here u.u
<myrl-chan>	rindolf: i'm traumatized by walks.
<_slade_>	"sexism denialist"?
<ams>	llamageddon: i have no idea what either mean.
<oleo>	it prolly is associated with high blood pressure......
<ams>	llamageddon: but naming calling is pathetic.
<llamageddon>	for the firs, be glad you don't
<ams>	ah, a femenist.
<oleo>	sex == high blood pressure, swear == high blood pressure.....
<llamageddon>	ams: well, you did say that the same applies for men equally
<ams>	llamageddon: because it does.
<oleo>	and the only connotation available for that was maybe that name alone.....
<henke37>	llamageddon, will your language include any special literals? like xml, json, regular expressions and so on?
<rindolf>	myrl-chan: ah, why?
<ams>	llamageddon: remeber this thing called skin colour?
<oleo>	heh
<llamageddon>	and that sounds a lot like "women weren't discriminated against more than men"
<denommus>	llamageddon: ams is not a sexist denier, amazingly
<ams>	llamageddon: i said no such thing, maybe you have an axe to grind though.
<_slade_>	honestly, i'd rather live at home and be provided for than be drafted and sent off to die
<denommus>	llamageddon: he protests against sexist expressions on the channel quite commonly
<myrl-chan>	rindolf: my legs hurt like hell.
<_slade_>	but feel free to enlist as soon as possible if you disagree
<ams>	llamageddon: because so far you have made absurd, baseless claims about a bunch of things.
<llamageddon>	ams: i just got the impression that you do not feel like women were nearly as discriminated against as people say
<denommus>	llamageddon: i think his point is that there were lots of civilizations in which women were not mistreated. but the eurocentric view of the world changed that
<ams>	llamageddon: _where_
<llamageddon>	eh
<denommus>	llamageddon: for instance, there were just as many female viking warriors as there were male
<llamageddon>	i should stop arguing further and admit to being wrong, shouldn't i?
<oleo>	wait, didn't they do sports back then ? why didn't they yell sports and bedone with the anger ?
<oleo>	lol
<ams>	llamageddon: viking women would own the land in the event their husband died.
<llamageddon>	i am fairly sure that "marriage as ownership transfer" is true, but i have no sources to link right now, so i may as well give it up
<xmppwocky>	uhh
<bobbybuns>	oh hello
<oleo>	sport you all sport you spooooorrtt youuuu!
<ams>	llamageddon: what kind of marrige?
<oleo>	nope, it doesn't have the same effect.....
<oleo>	hahahhaha
<ams>	llamageddon: and where?
<llamageddon>	ams: christian marriage?
<denommus>	llamageddon: but i never heard of such a claim that sex meant "to violate" a woman, even though the reasoning behind religious homophobia is what you said
<llamageddon>	in most of europe?
<ams>	llamageddon: that isn't most of europe.
<ams>	it is quite little of europe, and the world.
<bobbybuns>	is this programming or philosophy
<ams>	and when
<ams>	during which era?
<ams>	marrige mostly comes from the romans.
<llamageddon>	denommus: well, the bible doesn't argue against homosexuality. it only argues as a man lying as a woman. and honestly, in the bible, at least the old testament, women were considered property of men
<ams>	as we know it today.
<ams>	llamageddon: well, yuou are wrong again there.  but religious dicussions are explicitly banned here.
<_slade_>	llamageddon: why are you bringing up the old testament when talking about christian marriage?
<denommus>	llamageddon: were them?
<guy1524>	hello guys your day
<bobbybuns>	fine thank you.
<guy1524>	great
<llamageddon>	afaik anal between men in ancient rome was considered deprecating as well, due to being penetrated, even if it did not imply being lower/higher
<bobbybuns>	i'm in england
<guy1524>	i amj in the netherlands
<guy1524>	eating popsicles
<ams>	llamageddon: again, wrong.
<bobbybuns>	we should totally program something
<guy1524>	yes
<guy1524>	i will program your mom oh
<guy1524>	what language
<llamageddon>	ams: well, during medieval, marriage, in a lot of places, was synonymous with the christian definition of it
<bobbybuns>	i will delete your system32!!!!
<guy1524>	i have a unix system
<bobbybuns>	and convert your face to bianary
<llamageddon>	eh
<bobbybuns>	what????
<ams>	llamageddon: which places? you realise that customs between countries varied immensly
<llamageddon>	either way, it's my word vs your word here
<bobbybuns>	a unix system??????
<bobbybuns>	no way!!!!
<guy1524>	the illumintai is at your door step
<guy1524>	or are they
<ams>	llamageddon: cause these hand waving arguments do you no good.
<denommus>	llamageddon: women were really very mistreated by the ancient hebrews, but i don't remember anything on the pentateuch saying they were property
<llamageddon>	you can say i am wrong while i say you are wrong until we both faint from lack of breath
<guy1524>	$$$$$ destroy all civil liberties $$$$$$$$$$
<bobbybuns>	guys
<bobbybuns>	what is a boolean
<denommus>	llamageddon: there's something called burden of proof
<guy1524>	so true
<ams>	llamageddon: well, i won't say you are wrong.  i'll just call you out as what you are, a liar.
<bobbybuns>	no really
<bobbybuns>	what is a boolean
<bobbybuns>	i keep hearing about them
<guy1524>	that question is so true
<llamageddon>	i already said, that i was wrong by making baseless arguments, and am willing to stop
<ams>	bobbybuns: a thing that is true or false.
<guy1524>	everyone needs 2 know
<bobbybuns>	thanks
<guy1524>	or they will be false
<aidanh>	bobbybuns: it's a mathematical object that is either true or false
<llamageddon>	i am not the one still dragging this on
<ams>	llamageddon: yes, you continue to make them.
<bobbybuns>	oh
<denommus>	bobbybuns: it's a value with two variants: true or false
<bobbybuns>	so it it is things like = or >
<aidanh>	bobbybuns: those are relations
<bobbybuns>	*is
<bobbybuns>	oh
<denommus>	ams: cut it out, she already got it
<llamageddon>	ams: there are things i believe in, you are arguing about them further, and as such, i state them
<denommus>	ams: no need to further offend her
<guy1524>	big reveal: we are trolls sorry for bothering u i am gone
<bobbybuns>	thanks guys
<aidanh>	bobbybuns: but if that's within the context of a programming language, then they evaluate to booleans
<bobbybuns>	yeah
<bobbybuns>	i know
<aidanh>	ok
<llamageddon>	also, i like the assumption that i am female merely because i am saying things about historical mistreatment of women
<denommus>	llamageddon: i assume everyone is a female until stated otherwise
<denommus>	llamageddon: most people in the world are female
<znoosey>	denommus: you should narrow down your statistics to irc users
<llamageddon>	somewhat baseless of a claim, and verifiably false by anyone who has any knowledge of the world
<ams>	denommus: i don't see anything offensive, but fair enough.
<pyon>	denommus: a majority (> 50%), but not "most" (say, > 80%).
<denommus>	pyon: ok, thanks for the correction
<denommus>	llamageddon: http://en.wikipedia.org/wiki/human_sex_ratio
<llamageddon>	denommus: i know that there are more women, but by no means "most" :p
<llamageddon>	and well, you did call me a liar, ams
<denommus>	llamageddon: i'm not a native speaker
<pyon>	llamageddon: i guess the real problem is sexism. women have been and continue to be treated worse in many cases, better in others - but, with some exceptions (e.g., maternity leaves), these differences are completely unjustified.
<llamageddon>	either way, we all know things that we know via having learned them at one point or another in our lives. as for exaggerated claims, most people make them, and so did i, but nonetheless, that does not necessarily mean that there is no merit to them altogether. women, among a lot of european nobility, had a role related to creating relationships between houses, or even countries or whatever else, with men being the ones act
<denommus>	llamageddon: you're right. but since history often tells the behavior of nobility, we mistake nobility traditions for that culture's traditions, and they were often very different
<ams>	llamageddon: saying things that are knowingly false is lying, you knew full and well what you said was total crock.
<llamageddon>	so, i guess the main errors in what i said was not specifying that i was talking primarily about nobles, as i have no real knowledge of peasants
<llamageddon>	yeah, i know denommus
<llamageddon>	i realized it after the fact
<archilius>	pyon and the fact that improper use of feminism leads to injustice among men also adds fuel to the fire. this leads to more problems and causes men to assume wrongly.
<pyon>	archilius: dunno about that.
<llamageddon>	ams: the "marriage as transfer of ownership" is something i read of, and, at the time, decided that it most likely is true, given how i was unable to verify it myself, given that i know too little of the problem domain to research it myself
<aidanh>	i had a neo-feminist friend... we don't get along much any more and she seems to have turned into a man-hater :/
<pyon>	archilius: i mean, does "use of feminism" even make sense? feminism isn't a tool.
<llamageddon>	so i certainly did not "say something knowingly false"
<aidanh>	pyon: i think archilius probably meant misuse of the word
<pyon>	aidanh: oh.
<pyon>	aidanh: the importance of quotation!
<llamageddon>	at most, "something i am not 100% certain is true", but then again, you probably cannot claim to know most of what you know with utmost certainty
<_slade_>	llamageddon: "ownership" conveys a sense of enslavement, which isn't applicable.
<archilius>	in my country this is a major issue. by use of feminism, i meant misuse of the sentiment.
<aidanh>	pyon: "syntax error!"
<songarchaeology>	archilius: what country?
<_slade_>	i don't know of any time in europe where husbands were entitled to, for example, kill or sell their wives.
<archilius>	aidanh pyon yes. :p
<songarchaeology>	feminist isn't a sentiment. its a political and social theory
<archilius>	pyon india.
<songarchaeology>	*feminism
<llamageddon>	feminism is somewhat unfortunate of a name, given how many people tend to use it as an excuse to claim that it's about "placing women above men"
<llamageddon>	or maybe i just see too many pathological individuals
<_slade_>	llamageddon: it's less about the name, and more about the radical feminists who outright admit that's what they want to do.
<songarchaeology>	llamageddon: nah, not really. people made those claims before it was called feminism
<llamageddon>	songarchaeology: yes, but in those peoples' minds, it gives them an argument
<aidanh>	_slade_: well, there are just as many men who want the same situation in reverse, of course
<archilius>	llamageddon i think you are close to what i am trying to say
<llamageddon>	and either way, radical feminism is simply a vocal minority
<pyon>	_slade_: so the problem, as i said, is sexism, or, more generally, institutionalized discrimination.
<songarchaeology>	seriously, go back and look at the various cartoons against suffragettes, or go back earlier - the exact same stuff about the name, and them being angry women who wanted to install a world where women where superior - people have been saying the same crap for centuries
<pyon>	_slade_: and it cuts both ways.
<songarchaeology>	llamageddon: how are you defining radical feminism?
<llamageddon>	and the only reason it's vocal is because people publish the shit they say everywhere
<_slade_>	llamageddon: a vocal minority, but one that's given voice in universities.
<llamageddon>	honestly
<llamageddon>	i'm not even referring to the "real" radical feminism, but what _slade_  described
<archilius>	# mind boiling too many difficult words >. <
<_slade_>	pyon: it does cut both ways. that's why i'm strongly opposed to giving special treatment to any demographic.
<llamageddon>	e.g. people who essentially explicitly want to put women above men
<songarchaeology>	okay, yeah, no one in this conversation is using any of these words properly, this is annoying
<pyon>	_slade_: i want to see more women soldiers and women programmers. :-)
<llamageddon>	or at least those who blabber about privilege all the time
<llamageddon>	songarchaeology: forgive me, this was the last time i swear
<xeno_>	pyon: no kidding, the percentage of female programmers can almost be rounded to 0
<songarchaeology>	privilege is a useful academic tool. i dont understand why everyone hates on it, except that they all seem to think it means something that it doesnt
<akersof>	xeno_, they were more female programmers few decade ago
<pyon>	_slade_: basically, the only case of justified discrimination i can come up with is maternity leaves: it makes sense to allow mothers a 3 months leave when they have a child. it does not make sense to do the same thing for fathers.
<aidanh>	xeno_: depends on demographic; in my university it's basically 50-50
<pyon>	xeno_: heh..
<songarchaeology>	that's the problem with academic theories and jargon being widely used by people who have no idea wtf it all means
<xeno_>	akersof: there's still quite an amount of female cobol developers..
<_slade_>	pyon: but holding female firefighters to the same physical standards as men is unjust discrimination?
<akersof>	xeno_, funny fact :)
<archilius>	aidanh same in mine is slightly more on the female side
<songarchaeology>	_slade_: depends whether the standards are arbitrary
<xeno_>	akersof: but mainly because cobol programming is mainly done by people who aren't interested in programming
<llamageddon>	and henke37: no extra literals like xml or regex, but you can skip () for single arguments, e.g.: re"[0-9a-f]+"
<aidanh>	archilius: whereabouts in the world are you, may i ask?
<_slade_>	songarchaeology: i draw the line at least at the point of being able to carry a 5-year-old child out of a building in a safe amount of time.
<llamageddon>	well, there's plenty of sexism against men, it's just usually more subtle
<pyon>	_slade_: lolwut... i truly believe that, in the grand scheme of things, especially given today's technology, the physical differences between men and women aren't *that* big. i know several women who are physically stronger and more resistant than me.
<songarchaeology>	_slade_: interestingly enough, many of the physical standards developed for firefighters, cops and armies don't actually take the job into account, and look only at a few brute force exercises - ones that are traditionally easier for men, but ones that often have no relation to the job at hand
<xeno_>	akersof: female programmers also have a very strong tendency to aim for project management and the like
<llamageddon>	e.g. women much more often win cases related to taking custody of children
<llamageddon>	men are often assumed to be pedophiles or w/e if they interact with children of strangers
<akersof>	xeno_, the reason is programming is not a so sexy job
<pyon>	xeno_: well, in the particular case of computer programming, it isn't entirely their fault.
<akersof>	really
<llamageddon>	there's a lot of stuff, it's just not nearly as significant as the discrimination against women
<winny>	llamageddon: that's a really broad generalization
<pyon>	akersof: i find programming much more exciting than management could possibly be.
<xeno_>	pyon: it's not?
<songarchaeology>	_slade_: they've been working to redo physical standards looking at the job first, and then coming up with a variety of tests that test things you need to do on the job. that stuff is actually really fascinating
<_slade_>	pyon: i'm alluding to a specific case of a female firefighter who was given the job despite failing the physical fitness requirements (which include carrying a 50-pound weight through a building).
<akersof>	xeno_, since google and facebook trends attitude and philosophy i see more girls in programming field
<pyon>	xeno_: in the particular case of computer programming, yeah, not entirely their fault.
<akersof>	xeno_, particulary american womens doing web stuff
<xeno_>	pyon: women have a huge advantage in any job application, they have a head start in education and so on (at least here)
<ihatehex>	xeno_, do you have time to look something over tomorrow?
<pyon>	xeno_: the term "sausage fest" exists for a reason - it describes something that doesn't magically only exist on people's heads.
<xeno_>	ihatehex: sure
<ihatehex>	in the evening?
<llamageddon>	xeno_: there's some advantage, and then there are all the disadvantages. it all depends on fields, company, person
<pyon>	_slade_: oh, well.
<_slade_>	pyon: programming is a weird case for sure. i think women did make up the majority of "computers" (as in the profession) before mechanical computation became viable.
<xeno_>	pyon: maybe, but the ones slipping into project management and such don't escape the environment/people, just the actual job of programming
<pyon>	_slade_: i don't know a thing about firefighting, so i can't comment.
<akersof>	xeno_, if programming is the only way to find a job for the next decade dont worry women will come :) but i will be too old i think to try something with a collegue..
<songarchaeology>	_slade_: i dont know if its the same case, but the case i know about was disputed based on the fact that the test of carrying the weight was arbitrary. she could carry enough weight in the ways needed by the job, but couldn't do that specific test. if you're talking about the one from a ways ago that led people to start looking at how fitness evaluations for these jobs were created
<darkcthulhu>	morning all!
<songarchaeology>	interestingly enough, they weren't even created by people doing those jobs, which is probably why you see such a disparity between the tasks you need to accomplish and what the tests test for
<_slade_>	pyon: i think better education about the current uselessness of humanities degrees would go a long way to reducing the so-called gender gap in stem.
<songarchaeology>	_slade_: lol
<songarchaeology>	thats really adorable
<pyon>	_slade_: "so-called" --> the gender gap in stem is very much real. statistics don't lie.
<_slade_>	songarchaeology: i'm speaking about the ratio of graduates to open position in the field.
<pyon>	_slade_: also, the humanities aren't entirely useless. but, realistically, we don't need *that* many social scientists. we need a few good ones.
<llamageddon>	also, as for "women programmer percentage is close to 0%", while i don't have a source right now, the last time i've seen some cited, i think it was somewhere around ~10%
<songarchaeology>	also to whomever asked, yes, women were property, and often so were children and fathers/husbands could kill them or sell them
<llamageddon>	that was based on stackoverflow's user base
<_slade_>	songarchaeology: in what place at what time?
<llamageddon>	maybe it was more
<llamageddon>	honestly i have shit memory
<songarchaeology>	_slade_: lots of different places at lots of different times. is there a specific society you'd like to query me about?
<llamageddon>	songarchaeology: thank you for being the only one to agree with what i said :(
<_slade_>	songarchaeology: well, i'm mostly thinking about renaissance to enlightenment europe and onward.
<aidanh>	i'm sure there were also lots of different places which were matriarchies or otherwise held women in high regard
<songarchaeology>	_slade_: yeah, you still could. though the law does get more complex there
<_slade_>	and in commonlaw countries at the time that certainly wasn't the case.
<aidanh>	statements like that don't actually help give much perspective on anything
<llamageddon>	songarchaeology: i made a claim that in some of europe, marriage was essentially transfer of ownership from father to husband. can you tell me if i'm full of crock or not?
<songarchaeology>	aidanh: no, not really. there are some ancient societies that highly revered women, or that worked matrillinieally but no matriarchies that we know of
<songarchaeology>	llamageddon: you're not full of crock, though it would help to know which parts and what years we're talking about
<songarchaeology>	that's a lot of different societies and the laws and social mores change wildly
<aidanh>	songarchaeology: that still doesn't help too much with any sort of overall perspective
<llamageddon>	songarchaeology: well, i'm very un-knowledgeable about this, so the most accurate i can give you is "somewhere around central europe" and "uh, medieval"
<songarchaeology>	aidanh: overall perspective of all of human history? that's a little difficult to condense into a line or two and still be detailed, you realise
<_slade_>	also, correction: when i said humanities earlier, i meant social sciences.
<_slade_>	i have no clue what the job market is for artists and such.
<aidanh>	songarchaeology: yes, i realize that
<akersof>	llamageddon, where did you learn that?
<akersof>	anti-european propaganda?
<llamageddon>	akersof: lol, certainly no
<songarchaeology>	llamageddon: okay well not just central europe and not just medieval times. the one most people know of is rome, because pater familias is famous and because for some reason, many schools spend a full year teaching rome and greece in history
<llamageddon>	how would that even count as anti-european propaganda?
<songarchaeology>	the specific legalities vary widely over the centuries and civilisations. some outright consider women and children property, and you can sell them
<llamageddon>	i'm pretty sure i read it in an /r/askhistoricians thread on reddit
<llamageddon>	but i cannot claim that for certain
<songarchaeology>	some don't, but you can still indenture them to pay a debt
<songarchaeology>	oh, that's a good idea, there's probably an ask historian thread with epically long comments i can link, because trying to cover that much history in a few lines in irc is going to be brutal
<songarchaeology>	fortunately, askhistorians organises their archives really well
<aidanh>	they would, wouldn't they
<songarchaeology>	yeah. its really crucial though, because reddit's search is the fucking worst
<aidanh>	i'm not sure i understand the effort to get women involved in stem fields anyway
<songarchaeology>	aidanh: ?
<pyon>	xeno_: "escape (...) the actual job of programming" --> well, in most cases, the actual job of programming is rather unsexy. if i had more people skills, i would escape it as well.
<llamageddon>	aidanh: for one, they pay well and have a future
<_slade_>	aidanh: more workers means lower salaries for employers to pay.
<generalvagueness>	diversity is good for reasons i forget
<aidanh>	your gender doesn't determine whether you're good or bad, and i don't think there's anything inherently wrong with having a male-dominated environment
<llamageddon>	for another, it would help if women were considered as potentially respectable experts in those fields, whereas that is very often not the case
<xeno_>	pyon: who cares about sexy jobs...
<llamageddon>	for yet another, i'm pretty sure that better gender ratios makes for healthier interactions between people
<aidanh>	llamageddon: giving women jobs because they're women wouldn't change the opinion of a sexist
<xeno_>	pyon: and anyway, you're programming at home, so you can't find it completely repulsive
<pyon>	xeno_: people who care about career advancement?
<_slade_>	aidanh: it certainly appeases the sexists who advocate for it, though.
<llamageddon>	aidanh: no. but changing the underlying reasons for which women avoid said jobs would improve the situation
<xeno_>	pyon: yeah, i don't give a rats ass about "career advancement" - i want money for doing fun stuff, and that's it
<pyon>	xeno_: sure, but what i program at home can't possibly be done for a living.
<llamageddon>	or rather, both avoid, and are discouraged from
<pyon>	xeno_: and the kind of stuff that can possibly be done for a living is decidedly unattractive.
<_slade_>	llamageddon: the problem is that there's a lot of disagreement and very little in the way of evidence as to what those underlying causes are.
<xeno_>	pyon: maybe, but you're still doing it... how many women vs men sit at home doing the sexy kind of programming?
<_slade_>	problems are difficult to tackle without knowing what they are.
<znoosey>	heh, just got this post in my twitter: https://tenureshewrote.wordpress.com/2015/05/07/i-have-a-vested-interest/
<songarchaeology>	aidanh: not inherently, but i've never been in a male dominated environment that wasn't ridiculously sexist
<aidanh>	llamageddon: plenty of jobs pay well and grant a future to women, as well as men, who work in them
<_slade_>	or if they even are problems.
<znoosey>	looks like sexism is all the rage today
<llamageddon>	i am not sure what a job being sexy or not has anything to do with stuff here
<ihatehex>	xeno_, what's the sexy kind of programming?
<ihatehex>	porn?
<llamageddon>	_slade_: there won't be any concrete evidence because you can't even realistically quantify the general and vague notions that we as a society have about things
<znoosey>	ihatehex: these days it is functional programming
<xeno_>	pyon: ask pyon
<pyon>	xeno_: dunno if the proportion of females in cs research is bigger or smaller than in industry. [the only thing i know is that it's still "too low".]
<songarchaeology>	aidanh: are you arguing that social sciences are sexier than programming? i'm lost
<pyon>	songarchaeology: no.
<ihatehex>	what is the "good" threshold for women in things?
<tihmstar>	why do you even care about female proportion in any field?
<znoosey>	at my office we are about 60 people, and i think like 6 females...
<pyon>	oops.
<aidanh>	songarchaeology: certainly not
<pyon>	songarchaeology: my bad, misread.
<_slade_>	llamageddon: which is precisely why i'm averse to corporations or government trying to fix things through policies that may do nothing and at worst just create "positive discrimination".
<ihatehex>	is it 1/10? 1/5? 1/4? 1/3? 1/2? 2/3?
<songarchaeology>	aidanh: than what are you arguing? because i'm lost
<fawefeawfewa>	pyon: i think it's bigger
<aidanh>	songarchaeology: i'm not arguing at all, really
<songarchaeology>	_slade_: like what?
<ihatehex>	2/5?!
<pyon>	fawefeawfewa: it *seems* to me as well, that this is the case.
<_slade_>	songarchaeology: quotas. discriminatory scholarships.
<songarchaeology>	aidanh: okay, arguing, point whatever. what were you trying to say when you mentioned programming not being sexy
<pyon>	fawefeawfewa: but i'd like some hard data.
<llamageddon>	_slade_: it's an attempt at effecting change, and unless it's utterly unsuccessful, i don't see any real reason to stop
<llamageddon>	as for the situation itself, honestly, it'll go the way it always did
<aidanh>	_slade_: i was under the impression that women on average earn less due to their selection of jobs, and weren't necessarily paid less than their coworkers (could be wrong though)
<songarchaeology>	_slade_: you realise that even with specific women's only scholarships, men get the vast majority of scholarships, right?
<_slade_>	llamageddon: i'd prefer inaction over naïve action with good intentions.
<llamageddon>	it'll slowly change over years and generations as people's opinions change
<aidanh>	songarchaeology: i don't believe i mentioned sexiness at all
<_slade_>	aidanh: that's true in the us and uk. i haven't checked for other places.
<pyon>	xeno_: anyway, considering each gender in isolation, i don't think there's much of a difference between the ratios of programmers who do the "sexy" kind of programming.
<fawefeawfewa>	pyon: women also usually like "hard data"
<tihmstar>	why do most people tend to either be feminist or sexist? is that a socially defined thing?
<llamageddon>	as to what will accelerate or slow the change, we can only speculate
<_slade_>	songarchaeology: are there more scholarships for more valuable degrees than less valuable ones?
<k-202>	hi. do you know a good c/c++ library for linux for creating both text mode and gui applications? for example debian has gui and text installer but both are very similar.
<tihmstar>	fawefeawfewa: women like getting shellcode injected ;)
<pyon>	fawefeawfewa: was that supposed to be a joke? (i.e., something like "that's what she said")
<songarchaeology>	aidanh: oh sorry, i misread backscroll
<aidanh>	_slade_: which would mean that employers hiring women programmers in order to lower wages wouldn't make any sense; especially when they can do under-the-table price-fixing deals
<_slade_>	songarchaeology: i'd expect there to be greater economic interest in scholarships for hard sciences and other primarily male-dominated fields, which could account for that.
<aidanh>	songarchaeology: no problem
<ihatehex>	xeno_, would you hire a woman to program in your company?
<songarchaeology>	tihmstar: because sexism is the status quo and if you fight against that, you tend to call yourself a feminist
<xeno_>	ihatehex: of course
<pyon>	aidanh: hiring women to lower wages might make sense in some fields... but not programming.
<ihatehex>	xeno_, what if you had the choice between a slightly more competent man and a woman?
<xeno_>	ihatehex: but i wouldn't hire an incompetent woman to work in my company
<fawefeawfewa>	pyon: i meant that woman are more analytical than men in bussines, so they like "hard data" over than a gut feeling
<aidanh>	pyon: that's probably true
<pyon>	fawefeawfewa: oh.
<llamageddon>	i think i love you songarchaeology, you're good with words :)
<sefia>	what's the point of chararrayreader in java? why store the letters as ints?
<songarchaeology>	_slade_: not sure what you mean by that, but in every single stem field, men get the vast majority of scholarships. without women's only scholarships, women would get practically none of them
<ihatehex>	sefia, lol because letters are ints
<ihatehex>	silly
<xeno_>	ihatehex: there's no such thing as slightly more competent
<fawefeawfewa>	<pyon> aidanh: hiring women to lower wages might make sense in some fields... but not programming. ---> please join ##feminism and repeat that statement :)
<pyon>	aidanh: typical cost-saving measures include hiring young programmers who don't have to support a family.
<sefia>	ihatehex: but who would want to use it as an int?
<ihatehex>	sefia, your program would
<ihatehex>	it translates ints to characters
<songarchaeology>	to whomever was wondering about matriarchies: https://www.reddit.com/r/askhistorians/comments/1fef9k/
<pyon>	fawefeawfewa: oh, i mean, from a purely economic pov.
<ihatehex>	ints are stored as binary
<ihatehex>	:)
<pyon>	fawefeawfewa: given market realities.
<tihmstar>	songarchaeology: neither do i agree with sexism, nor i want to be a feminist. i think people should stop keeping woman away from anything and also stop trying to put woman in anything
<ihatehex>	and thus you have binary -> char
<pyon>	fawefeawfewa: not saying that this is how things should be.
<fawefeawfewa>	pyon: i'm pretty sure asking if someone has a family is illegal in a job interview
<llamageddon>	i hate irc
<aidanh>	pyon: ah, that sounds more like it; perhaps unpaid internships as well, depending on the country
<llamageddon>	too much activity to realistically follow :'(
<ihatehex>	i wish i had a family, then i could be offended when people asked me in interviews
<xeno_>	ihatehex: i would probably go for the more competent one, even if the difference wasn't that big - or at least think it would be right to do so... but in general, it doesn't work like that
<sefia>	ihatehex: point is why have a class that gives them as ints. you don't have a class that turns everything into binary right?
<pyon>	fawefeawfewa: yeah, but you can reject candidates who are above a certain age.
<songarchaeology>	okay, but here's the thing. you guys are acting like sexism is a choice that people make....only its not. its unintentional
<ihatehex>	sefia, everything is binary
<ihatehex>	sefia, :)
<_slade_>	songarchaeology: i'm interested in knowing if that statistic controls for there being vastly more male potential-scholarship-recipients in stem than female.
<pyon>	fawefeawfewa: and, in all likelihood, you will have dismissed those who are parents.
<fawefeawfewa>	tihmstar: we should just put things in woman as you were saying?
<ihatehex>	sefia, and yes, you can probably find a class in java that turns everything into binary
<ihatehex>	pretty sure you can anyway
<ihatehex>	never had to look
<songarchaeology>	_slade_: which statistic?
<fawefeawfewa>	<pyon> fawefeawfewa: yeah, but you can reject candidates who are above a certain age. --> no, not in the u.s.
<songarchaeology>	ohhh, i see what you mean
<pyon>	fawefeawfewa: how can anyone even know that you're discriminating on the basis of age?
<aidanh>	fawefeawfewa: now there's one to repeat on ##feminism
<fawefeawfewa>	pyon: i think they audit you from time to time
<ihatehex>	sefia, why do you even need a char reader
<ihatehex>	s:
<songarchaeology>	_slade_: yes, i believe so. besides, even in non-stem fields where applicants pools are the same size, women tend to get waaaay fewer scholarships for men.
<ihatehex>	writing a lexer?
<songarchaeology>	s/for/than
<pyon>	fawefeawfewa: well, i don't really know about the us.
<tihmstar>	fawefeawfewa: why you trying to to twist every statement to make it sound ridiculous?
<fawefeawfewa>	timemage: i'm having fun! come on!
<xeno_>	ihatehex: however, so far it's not been an issue... of the people i've interviewed/hired, the only female was an indian consultant (sourcing), which i hired. except for that, all relevant applicants, but for hiring and consultants, have been men...
<pyon>	fawefeawfewa: but here it's practically impossible to stop companies from only hiring candidates within the age range they want.
<myrl-chan>	night night
<pyon>	myrl-chan: gn
<fawefeawfewa>	pyon: i know that :)
<songarchaeology>	look, we have study after study that shows that people unintentionally view women as less competent. its not a purposeful choice, its social, and we're all used to it
<aidanh>	songarchaeology: and why would they receive less scholarships? are the committees/examiners sexist? do they receive a poorer education/less opportinities due to their gender?
<ihatehex>	xeno_, i'll send some women your way in the next few years
<ihatehex>	:d
<ihatehex>	well, like two
<fawefeawfewa>	pyon: http://www.forbes.com/sites/lizryan/2014/01/31/the-ugly-truth-about-age-discrimination/ ---> “exactly,” said philip. “the headhunter actually told me that the client said i was too old for the job. i asked him if that was illegal – i’m pretty sure it is – and he said that the client’s view is that if they don’t interview me, i’m not a candidate, so it’s not
<fawefeawfewa>	discrimination.”
<songarchaeology>	aidanh: mostly the first one. their sexist...everyone is. its the default in this society
<ihatehex>	i don't know any others that might become competent
<fawefeawfewa>	“that’s false,” i said, but even as i said it, i knew that it doesn’t make any difference.
<songarchaeology>	s/their/they're
<_slade_>	songarchaeology: i'm not familiar with the issue of discriminatory scholarships outside of stem fields, so that seems like a moot point.
<aidanh>	songarchaeology: seems to me that aside from womens-only scholarships, which may or may not have merit, the ideal solution is to find the root cause
<aidanh>	songarchaeology: which society are you referring to?
<songarchaeology>	aidanh: the root cause is social. its hard to change society and you have to do it in bits and pieces
<fawefeawfewa>	pyon: http://www1.eeoc.gov//laws/practices/index.cfm?renderforprint=1 it is illegal for an employer to discriminate against a job applicant because of his or her race, color, religion, sex (including pregnancy), national origin, age (40 or older), disability or genetic information. for example, an employer may not refuse to give employment applications to people of a certain race.
<llamageddon>	aidanh: root cause is that societies change slowly, and you can't do a whole lot about it
<xeno_>	ihatehex: also, so far my ratio for interview vs hiring is ranging from 1 to 5-20 depending on the setting/position
<pyon>	fawefeawfewa: oh, the law can say whatever it wants.
<pyon>	fawefeawfewa: what matters is reality.
<songarchaeology>	aidanh: probably speaking, i'm talking about the world in general, but we can make it just america or europe if you prefer
<pyon>	fawefeawfewa: which the law isn't always 100% in sync with.
<songarchaeology>	s/porbably/broadly
<songarchaeology>	fuck, i'm still asleep and my fingers are fucking shit up
<fawefeawfewa>	pyon: i think they do some statistics and see how many people of each "type" you have hired....
<fawefeawfewa>	pyon: if they find that all your people are below <40 they'll probably start auditing you....
<fawefeawfewa>	pyon: it's certainly doable... but you can do it often, all the time, specially if you are a large company
<pyon>	fawefeawfewa: easy - hire a couple of project managers above 40.
<songarchaeology>	okay, so for example, we have lots and lots of studies where people get identical resumes - only difference is a male or female name. even in fields women have great numbers in (take biology) - the resume with the male name has a higher chance at a job offer, a higher chance at a mentorship offer and a higher starting salary
<pyon>	fawefeawfewa: the ones who will have to stay overnight coding / <insert grunt job here> will still be below 30.
<songarchaeology>	and this is true whether the person making the hiring decision is male or female
<_slade_>	songarchaeology: so female applicants should sue if they feel they've been discriminated against.
<fawefeawfewa>	pyon: it's not that difficult, but it's not that easy either
<songarchaeology>	_slade_: but you can't provie that on an individual case by case issue unless the person was ridiculously obvious about it and said or documented as such
<pyon>	_slade_: discrimination per se isn't bad. for example, when you select a more qualified candidate, you're discriminating on the basis of (perceived) ability.
<aidanh>	songarchaeology: well, perhaps the obvious solution is to hide irrelevant information such as name and gender from interviewers as much as possible
<fawefeawfewa>	songarchaeology: you can make a class action against a company
<songarchaeology>	aidanh: and that's one technique that's frequently used to great affect.
<pyon>	fawefeawfewa: oh, of course, that's why you hire a hr expert to sort out these issues.
<_slade_>	pyon: yeah. there's a lot of difficulty in this subject due to certain connotations.
<fawefeawfewa>	pyon: race, color, religion, sex (including pregnancy), national origin, age (40 or older), disability or genetic information
<fawefeawfewa>	pyon: you are allowed to discriminate based on everything else
<songarchaeology>	a few decades ago, orchestras had pathetically few women. so they started doing blind auditions - including carpet so that you couldnt tell the difference in shoes when they walked on stage
<_slade_>	songarchaeology: in that case, there doesn't appear to be a solution to the problem.
<pyon>	fawefeawfewa: it's the hr equivalent of why you hire a professional accountant to find as many ways as possible to pay less taxes or whatever.
<songarchaeology>	orchestras today are now close to 50/50 women
<songarchaeology>	the only place that women dont do as well is in conducting --- which you cant have a blind process for
<songarchaeology>	_slade_: unconscious bias is a bitch - but it can be tackled. one of the most effective solutions is talking about. interviewers who are taught about unconscious bias and the wage and hiring gap tend to automatically self correct
<_slade_>	aren't most conductors retired musicians?
<_slade_>	songarchaeology: or overcorrect.
<songarchaeology>	_slade_: no. its an entirely different thing. different schooling, training and so on
<songarchaeology>	_slade_: no, not overcorrect. they tend to correct just about right. we've got lots of studies on this one actually
<aidanh>	it seems that programming-oriented jobs in particular could adopt this strategy fairly easily; yet this doesn't seem to be where all the focus is
<songarchaeology>	aidanh: how could they?
<ooommooo>	just made a superfast lcs algorithm. :)
<_slade_>	songarchaeology: correcting just about right to achieve fair hiring practices or just about right to achieve a faster resolution of the "gender gap" than would occur in the case of the former?
<rindolf>	ooommooo: what is lcs?
<songarchaeology>	_slade_: the former
<songarchaeology>	they correct almost exactly as much as the disparity
<ooommooo>	longest common subsequence
<aidanh>	songarchaeology: online interviews, for example
<llamageddon>	songarchaeology: do you want to be my friend? :-o
<ooommooo>	python code (quite bad): http://codepad.org/bqly2iv3
<aidanh>	resumes, online code profiles, and sample code would be easy to peruse without referring to personal information
<songarchaeology>	aidanh: sure, that's definitely an option. but the issue isnt just hiring. too many of the fields work too informally and the connections you make are crucial. too many companies base a lot of hiring choices on "culture". and too many women are driven out of the field too early
<songarchaeology>	llamageddon: sure :)
<llamageddon>	:3
<llamageddon>	songarchaeology: do you use xmpp(gmail/facebook) or steam? :-o
<songarchaeology>	_slade_: in fact, its famously hard to get results where people overcorrect. there is a series of studies looking at elementary school teachers and how they teach their classrooms. they give the boys way more time to speak. boys they think dont speak up enough are in fact speaking as much as the girls they think talk too much. so they tape the classes and have them listen and give them the actual numbers on how much the boys
<songarchaeology>	 are speaking vs the girls and try and get them to correct for the bias. by the time they hit 30%, they're convinced that it's 50/50. when they go past that, they're positive the girls are dominating the classroom
<aidanh>	songarchaeology: if that's the problem, then how is rallying about getting women into programming supposed to help matters?
<songarchaeology>	same in studies looking at the makeup of crowds in movies. when the crowd onscreen has 30% women, people perceive it as gender balanced. if its past that, people percieve the crowd as female dominated
<_slade_>	songarchaeology: i'm willing to take you at your word that informing recruiters of unconscious bias leads to fair hiring.
<_slade_>	songarchaeology: but i don't think either of those examples are relevant.
<songarchaeology>	aidanh: it wont much to be honest. the campaigns focusing on getting girls into stem is lovely, but the real problem isnt getting girls into stem, its getting them to stay, and recruiting more numbers for the beginning wont fix that at all
<_slade_>	songarchaeology: well, let me amend that; they're relevant to the wider topic of unconscious bias, but not to hiring practices specifically.
<vdamewood>	hi, people, etc.
<songarchaeology>	_slade_: true! but i like them because they're intersting studies that show a lot about how unconscious bias works
<songarchaeology>	the brain is a fascinating beastie
<aidanh>	vdamewood: hello
<llamageddon>	songarchaeology: and also cruel, when speaking of some biases. there are lots of things i catch myself doing all the time.
<_slade_>	songarchaeology: also i think the elementary school example is a bit misleading, since girls have been outperforming boys in school for quite some time now.
<llamageddon>	i think the worst offender for me is reinforcing my opinions when people argue against them
<songarchaeology>	vdamewood: since we're talking about discrimination, i think you should probably not limit your hellos to people.
<llamageddon>	i tend to have to consciously make myself accept reason and drop my arguments sometimes
<songarchaeology>	_slade_: girls have been outperforming boys in school for as long as we have records of it. that's not anything new
<literphor>	llamageddon: well it’s better than the alternative which is to allow yourself to be easily swayed. it good to povide a little resistance before changing your mind
<_slade_>	songarchaeology: although it's not necessarily the case that that trend would continue if we were to extrapolate to before those records began.
<amigojapan>	i totally dont undestand this: > print(string.len("あそこ"))  prints out 9,  i think every character should take up 2 bytes,, where is 9 comming from? should be 6 (lua)
<_blizzy_>	i'm naming my rails apps after birds
<_blizzy_>	next up is cardinal
<aidanh>	so, in haskell's guard statements, the left-hand side has to be a boolean expression and cannot be a pattern?
<literphor>	llamageddon just not so much that you disregard what’s reasonable and hurt yourslf in the end
<songarchaeology>	_slade_: true. but all the people bemoaning how school has changed recently and boys are suffering are idiots. we have records of boys doing worse in primary schooling for at least two centuries
<songarchaeology>	this isn't something that happened because of the 60s
<llamageddon>	amigojapan: that's probably more of a question specific to the utf-8 representation of those specific characters
<songarchaeology>	besides, i never said that the study meant that girls dont learn as well or do as well in school. i was simply pointing out a fascinating study in terms of gendered perceptions and unconscious bias
<aidanh>	amigojapan: that's 9 bytes for me as well, with wc -c
<denommus>	aidanh: it can
<fawefeawfewa>	songarchaeology: most girls i know do better in school than boys
<_slade_>	songarchaeology: well, school /has/ changed recently, with zero tolerance policies, removal of recesses, that kind of thing.
<denommus>	aidanh: or not?
<denommus>	aidanh: i don't remember
<aidanh>	denommus: ...damn
<amigojapan>	aidanh: hmm, i am confused why it is 9 and not 6
<aidanh>	amigojapan: three bytes per character
<songarchaeology>	_slade_: sure, school has changed a lot recently. but there arent differences in the numbers of boys grades vs girls, so to assume that recent policy choices impacted boys in a significant way that affects their performance is just totally unsupported by data
<aidanh>	in utf8 they're all three bytes
<aidanh>	amigojapan: e.g. http://www.fileformat.info/info/unicode/char/3053/index.htm
<songarchaeology>	that affects their academic performance, that is
<amigojapan>	aidanh: hmm, that would seem to maek sence, except i already made other fucntions that treat each caracter as 2 bytes, and they seem to be working
<denommus>	aidanh: guards are specific for booleans
<denommus>	aidanh: if you want to pattern match, just... pattern match
<aidanh>	denommus: ok, thanks; ...but... guards look so pretty..
<denommus>	aidanh: you can use case
<technodrome>	good day
<songarchaeology>	i mean, there are tonnes of school policies that are fairly recent that i think are awful and harmful and horrible. but the particular stance that's taken here is just totally unsupported by the data
<denommus>	aidanh: or you can convert yourself to ocaml
<_slade_>	songarchaeology: the datapoint i'm not familiar with is the sex distribution of teachers way back when.
<songarchaeology>	i dont understand how you look at a performance gap and then refuse to look at see how and if that gap is different than in prior years.
<denommus>	aidanh: https://gist.github.com/denommus/dc6a027ec1760abfc8e6
<aidanh>	denommus: hmm... i just started with haskell so i'll focus on picking up the core concepts first i think... too many languages..
<songarchaeology>	_slade_: more women were teachers in prior years. teaching has generally been a profession for women until they get married and have children, or old maids or after their children are grown
<_slade_>	songarchaeology: i know that 20 years ago it was something around 85% female for elementary schools.
<_blizzy_>	ap itself
<_blizzy_>	is just sad
<songarchaeology>	that's one of the reasons that the pay is so low - teachers were never expected to support a family, its supposed to be mild supplemental income
<aidanh>	denommus: that's rather nice syntax
<songarchaeology>	_slade_: which is lower than 20 years before that
<vdamewood>	amigojapan: it's quite possibley that they only *seem* to work.
<denommus>	aidanh: there's lux on the works
<songarchaeology>	the idea that schooling has been feminised is really ironic - there are far more male teachers then ever before
<denommus>	aidanh: https://github.com/luxlang/lux
<_blizzy_>	kentucky's edu system
<_blizzy_>	is sad
<amigojapan>	ok vdamewood
<vdamewood>	amigojapan: perhaps there's some property of your test data that makes the functions work for those test data, but they would fail with others.
<amigojapan>	vdamewood: aidanh , is it always 3 bytes? or is it variable bytes?
<aidanh>	denommus: i'll add that to my ever-expanding list of things to try out some time, thanks
<songarchaeology>	you dont see large numbers of male teachers until after the huge womens lib push. women going into other fields en masse, combined with more and more families needing two incomes meant that you got male teachers
<aidanh>	amigojapan: always, in utf-8
<vdamewood>	amigojapan: utf is between 1 and 4 bytes.
<vdamewood>	... maybe 6.
<aidanh>	vdamewood: depends on the specific encoding
<racho>	vdamewood, indeed utf-8 is mixed length encoding
<vdamewood>	s/utf/utf-8/
<aidanh>	amigojapan: oh, thought you meant those characters (which now strikes me as a very odd question)
<_slade_>	songarchaeology: now if only corporations and activists put as much effort into rectifying that gender gap as they put into stem campaigning...
<amigojapan>	aidanh: no, i mean all japanese characters
<vdamewood>	amigojapan: oh, all cjk characters are 3 bytes.
<amigojapan>	ok vdamewood , that will do, thanks :)
<songarchaeology>	_slade_: corporations generally dont campaign to get people into government work
<_slade_>	songarchaeology: true. although i have mixed feelings on whether teaching should be government work to begin with.
<songarchaeology>	and activists arent' going to either. there isn't really anti-male bias in the school system (male teachers tend to make more money then female ones and get promoted faster)- the only place you have that is for jobs with very little kids, and that's a whole other kettle of fish. besides, school activists have their hands full as it is. school to prison pipeline, zero tolerance, a shitload of stupid education policies, no
<songarchaeology>	 funding and no wages
<_slade_>	songarchaeology: i'm more concerned for the students than the wages of the teachers.
<songarchaeology>	teaching is a ridiculously low paying job. most teachers have to work second and third jobs, and no money in schools means that many are buying supplies and books out of their own money, or scrambling to find donations
<[[boxmein]]>	&[[boxmein]]
<songarchaeology>	_slade_: okay...but i'm confused. you think fewer male teachers is harming students?
<llamageddon>	[[boxmein]]: rust?
<vdamewood>	amigojapan: actually, there are some kanji characters that take more bytes, but they are not joujou or jinmeiyou kanji.
<remram>	does rust have a 'box' keyword?
<vdamewood>	err jouyou
<llamageddon>	just out of curiosity :p
<[[boxmein]]>	llamageddon: hell i don't know lol
<[[boxmein]]>	llamageddon: most i got thinking about boxed values was when i tried learning rust
<remram>	"error: box expression syntax is experimental; you can call `box::new` instead" meh
<_slade_>	songarchaeology: sure -- if it's the case that gender diversity leads to a more productive business environment, why not schooling?
<llamageddon>	remram: i dunno n.n
<[[boxmein]]>	llamageddon: so rust with a mix of c-y pointers
<llamageddon>	rust has references though, except by default you move and not copy them around
<llamageddon>	with multiple references to the same value being only allowed for immutable data
<ivplay>	are there any good solutions on maintaining translations in very large projects? so that its easier both for devs and business people
<llamageddon>	church-: it's not a rust convo :p
<church->	it can be!
<songarchaeology>	_slade_: except that teachers dont really have control in the way necessary for it to make a difference. they're basically following rubrics ridiculously strictly because they dont have other options. diversity creates a better working environment because you're talking about people who are working together and who have a variety of experiences to draw upon. creativity and teamwork are hugely affected.
<llamageddon>	ivplay: sorry, i don't know of any. but i think this is a case where rolling your own solution wouldn't be too horrible
<songarchaeology>	only, there's little to none of that given the way the school system is currently set up
<aidanh>	ivplay: as in, human language translation?
<ivplay>	llamageddon: we already have our own solution which is horrible
<ivplay>	aidanh: yes
<songarchaeology>	at the moment, the hugest predictor of how well someone will do in school is their families income. other things - the quality of the school they go to, types of classes that are available, hours of instruction, materials available and so on - pales to practically nothing in comparison
<aidanh>	ivplay: gettext comes to mind
<llamageddon>	ivplay: roll out a better one based on the points which have turned out to be the weak ones?
<aidanh>	llamageddon: bad idea, when it comes to internationalization at least
<aidanh>	too many irritating details and quirks
<ivplay>	aidanh: im thinking more tool which could hold e.g. views/prototypes and also translations for texts in multiple languages
<ivplay>	so that its easier for devs and business people to communicate
<songarchaeology>	fuck, i still havent' eaten breakfast or finished this cover letter. i need to put irc away until i've actually been productive today
<llamageddon>	songarchaeology: see you later!
<llamageddon>	though you should exchange some im addresses with me so i can bug you about stuff :-o
<aidanh>	ivplay: you'd have to be more specific
<songarchaeology>	llamageddon: pm me whenever. hoenstly, irc is the best way to get ahold of me
<llamageddon>	songarchaeology: well, i'm often not on irc :c
<llamageddon>	and i just tend to forget people that i have on irc
<llamageddon>	._.
<llamageddon>	that has invariably been true until now
<aidanh>	ivplay: if you want to localize an application, i'd recommend gettext; if you're looking for some sort of collaboration tool, i'm not sure
<llamageddon>	i don't know where such an effect comes from but it does
<songarchaeology>	okay, pm me and we'll work out other contact stuff
<ivplay>	aidanh: think about enterprise needs, yes, maybe collaboration tool is a bit more precise
<sefia>	i don't understand people who get offended on irc
<wes->	sefia: i find your lack of sensitivity very offensive
<aidanh>	ivplay: i don't know what enterprise needs are supposed to be
<church->	songarchaeology: and i thought my fifty channels was impressive. :p
<llamageddon>	songarchaeology: can you pm me since webchat is a pain? ;_;
<sefia>	wes-: but it's irc, no need to be sensitive here
<_slade_>	sefia: i don't understand people who get offended by any form of speech.
<sefia>	well if it's in person it's different, you need to be more careful
<songarchaeology>	sefia: ahh, i see. people who talk to each other shouldnt care about what anyone says because of what they say, they should care based on the formatting
<songarchaeology>	totes logical
<songarchaeology>	you're basically just making the argument that the internet isn't real, and therefore doesn't really matter.
<sefia>	for example if somebody says f* u in person it's really offensive, but in irc? who gives a f*
<haktur>	it's worse in irc, because you can't punch the person in the face
<aidanh>	ivplay: the obvious solution for switching languages for demonstration in prototypes is storing the language text in a file and then choosing which language file to load
<aidanh>	ivplay: this is basically what gettext does for you
<songarchaeology>	sefia: why should any of us speak to you then? you've basically just said that you dont give a flying fuck about communicating with us
<sefia>	haktur: well punching someone in the face is just a severe lack of control of 1 person, nothing more
<haktur>	fuck you, i want the option
<aidanh>	sefia: it's always context-dependant; i think saying it doesn't matter is a little simplistic... and your self-censorship is somewhat ironic too
<sefia>	it's just that i see irc as not really talking to peope
<ivplay>	aidanh: well, what im looking for is a tool which could be a centralised place that holds all the texts and their translations for multiple languages. when design changes, developers would update the texts in the tool and specially assigned people (non technical) make sure the translations are right. thing is that, the project is very large, and simple text file is not sufficient, context needs to be provided.
<songarchaeology>	grow the fuck up. its all real life, it all matters, you're talking to people and people have feelings. and that's true whether its in person, or on the phone, or writing letters or emails or irc or whatever. the format doesn't change the basics - people communicating
<sefia>	that's why i find it hard for anyone to offend
<sefia>	same thing really for all internet
<_slade_>	songarchaeology: no one is obligated to accommodate my feelings, which is why i don't see a reason to be offended in the cases where they don't.
<ivplay>	aidanh: maybe something like localization management tool
<aidanh>	ivplay: this sounds like a job for gettext
<songarchaeology>	_slade_: no, no one is obligated to accommodate your feelings. but those of us who arent' jackasses occasionally give some thought to how the people we talk with feel
<llamageddon>	ivplay: assign identifiers to pieces of text in code, and have those put into files? perhaps organize files by some sort of category, and provide a tool(set)?
<_slade_>	songarchaeology: i see that as being separate from whether offense should be taken.
<aidanh>	ivplay: platform compatibility may be an issue, and possibly licensing as well, however
<_slade_>	songarchaeology: otherwise i just consider it disagreement: a rational reaction, not an emotional one.
<songarchaeology>	depends on what is being said. its possible to disagree and be respectful. its possible to disagree and be a flaming arsehole
<_blizzy_>	easy come easy go
<aidanh>	that sounds like a good name for a drink: 'the flaming arsehole'
<ivplay>	aidanh llamageddon thanks, will have to think about it a bit more i guess :)
<aidanh>	ivplay: you're welcome
<oleo_>	lol
<amigojapan>	vdamewood: aidanh , i found a code snippet that returns the lenght of a utf8 string, exactly what i needed :)
<pyon>	amigojapan: something like x.len() ? :-p
<amigojapan>	no pyon , that does not work
<aidanh>	amigojapan: eh, make sure it comes with tests; utf-8 character length is easy to mess up
<pyon>	amigojapan: i was joking.
<amigojapan>	ok @ both
<amigojapan>	useless,length=string.gsub("a日本語𩸽", "[%z\001-\127\194-\244][\128-\191]*", "")   returns 5 in length
<technodrome>	what are you guys up too
<mike802>	slow day
<vdamewood>	amigojapan: if you need to know the length of a (valid) utf-8 string, just count the bytes that have 00, 01, or 11 as the first two bits.
<amigojapan>	vdamewood: thanks, but this code snippet seems ot be working, if it does not work for everything, i will do what you say
<vdamewood>	bytes that start with 00 and 01 are single-byte values. bytes that start with 11 are the first character in a multibyte character. 10 is the extension of a multibyte character.
<vendu>	hello people :)
<vdamewood>	people? where?
<vendu>	aidanh, i think i figured out how to connect my rooms right :)
<vendu>	vdamewood, well, hello bytestreams? :)
<amigojapan>	ok, i am off to bed, thanks guys1
<vdamewood>	oyasumi nasai
<amigojapan>	oyasumi vdamewood
<vendu>	hey amigojapan :)
<aidanh>	vendu: great!
<vendu>	and good night :)
<aidanh>	vendu: sorry, think i dozed off the other night
<amigojapan>	hey vendu , and good night :)
<aidanh>	amigojapan: night
<vendu>	aidanh, i was trying to make it so that there's a minimum number of hallways :)
<amigojapan>	thanks aidanh
<vendu>	er, corridors
<aidanh>	amigojapan: welcome
<aidanh>	vendu: ahh; got any screenshots of the results?
<vendu>	aidanh, but i realised it might be too difficult :p
<vendu>	aidanh, not really, not yet =)
<vendu>	i need to fix some of it first
<aidanh>	vendu: minimum spanning trees come to mind there
<vendu>	aidanh, i'm coping with bsp using a flat table/array :)
<thecha>	hello #progaming
<vendu>	not even a real tree :)
<vendu>	aidanh, i'm fixated on the idea of using core wars as a subgame/quest :d
<vendu>	aidanh, ever tell you about that idea?
<vendu>	whoa, there's thunder here :d
<vendu>	cool
<aidanh>	vendu: you could use bsp to generate the room locations, then join them together separately
<aidanh>	vendu: yeah you did, sounds sweet
<vdamewood>	pita + avocado + tomato + sriracha = delicious
<vendu>	aidanh, i think i can make-do with an easier strategy :)
<vendu>	aidanh, yep, the in-dungeon mainframes, terminals, punchcards, and tapes could be used for that
<vendu>	:)
<vendu>	not sure what you would gain by beating the core wars warriors on them yet :)
<aidanh>	vendu: sounds like a nice change from regular roguelikes :)
<vendu>	aidanh, yup :)
<aidanh>	vendu: anyway i gotta crash, 3:30 am here
<vendu>	aidanh, i'll try to emphasize cyberpunk-like elements instead of the usual ad&d stuff :)
<vendu>	aidanh, ah good night then :)
<thecha>	vendu are you making a game?
<vendu>	a mix of cyberpunk and norse etc. mythologies, i think :)
<vendu>	thecha, well, at least trying to :)
<aidanh>	vendu: nice; good night/day!
<thecha>	can't you use your samen heritage instead?
<thecha>	skyrim tolkien everything has been crammed full with norse
<thecha>	but what about the highly samen culture?
<thecha>	no good?
<vendu>	aidanh, 22:40 here :p
<vendu>	thecha, oh, yep, finnish mythologies :)
<thecha>	everybody knows thor but who knows about the forrest guy with the horns?
<vendu>	and scandinavian ones :)
<thecha>	yes!!
<thecha>	how do oyu go about creating this game? game engine?
<thecha>	text6 based?
<vendu>	thecha, text-based 2d for starters
<vendu>	but my friend does have very good and inexpensive graphics contacts, too :)
<thecha>	nice
<thecha>	so it isn't textbased but with graphics? awsome!
<thecha>	what kinda graphics do you need and how many?
<vendu>	thecha, text-based in a rogue-like way first, but i might get some tiles or sprites or 3d models for it later on :)
<vendu>	thecha, hmm... perhaps around 100 different creatures and objects... or so :)
<thecha>	how do you create a text based game? just a huge ifelse construct?
<thecha>	elseif
<vendu>	thecha, i'm starting with a dungeon generator... somewhat-randomly placed rooms :)
<vendu>	hehe
<thecha>	how does that work?
<the8thbit|work>	beep boop
<denommus>	vendu: hello
<vendu>	thecha, not sure about game mechanics yet, but i suppose some stuff will appear in the dungeons with some probability etc. :)
<vendu>	hey denommus :)
<vendu>	hey the8thbit|work :)
<thecha>	a dungeon generator somehow has to come up with diungeons that are playable right?
<the8thbit|work>	hello vendu
<vendu>	thecha, yep
<thecha>	meaning rooms need to be connected and the rooms cant be all connected
<vendu>	thecha, almost got that one covered :)
<the8thbit|work>	thecha: it doesnt have to
<vendu>	thecha, yes :)
<thecha>	how if i may ask?
<thebigdeal>	did anyone simulate the gravity in computation as 37039.37007874 pixel/s^2? :p
<vendu>	thecha, bsp-strategy... you could google for something like: bsp dungeon generator :)
<the8thbit|work>	thecha: create the rooms and then create pathing between them such that the entrance and exit are both accessible from the path?
<thecha>	k, thx
<vendu>	thecha, so basically, i start with a rectangular are and "recursively" split it into smaller rectangles
<thecha>	oh!
<thebigdeal>	any idea?
<thecha>	so you got the outer limits covered
<thecha>	how do you connect the right rectangles?
<thecha>	math?
<vendu>	thecha, the math is pretty simple; the corridors will be either direct (?) lines or z-shaped :)
<vendu>	i'll show/link you the code once i've fixed it =)
<thecha>	if you split the first rectangle into a set of smaller rectangles will the sum of the area of the smaller rectangles be the same as the original rectangles surface?
<thecha>	initially i mean
<vendu>	thecha, i guess so :)
<vendu>	thecha, but the rooms won't fill the whole rectangles so there will be variation in their sizes :)
<thecha>	then how does your dungeon creator decide which rooms to destroy to creeate corridors?
<vendu>	it's currently a 80x24-cell level
<vendu>	well, levels
<thecha>	oh i see
<vendu>	so you could play it on old terminals :)
<denommus>	have any of you guys used the hxt library?
<vdamewood>	well, this sucks. rooster teeth seems to use flash for videos.
<thecha>	what is rooster teeth?
<generalvagueness>	the people that made red vs. blue and other stuff you've probably never heard of
<generalvagueness>	s/made/make
<thecha>	i know about red vs blue
<pyon>	what's red vs blue?
<vdamewood>	the only other thing of theirs that i've heard of outside of their own site is rwby.
<vdamewood>	pyon: a video series made by recording halo gameplay and dubbing voices over it.
<pyon>	ah
<thecha>	rvb
<pyon>	i've heard of rwby... been meaning to watch it
<pyon>	ssta: something smells nicer than average on here
<generalvagueness>	rvb was one of the first big machinima series, arguably the first
<thecha>	do you know the spys from mad?
<generalvagueness>	started like 3 years before youtube
<pyon>	s/average/usual/
<ssta>	who was it pointed me at 0xdbe?
<ssta>	pyon: that wiol be the egg and cheese sandwiches i had for lunch :)
<pyon>	lol
<vdamewood>	that reminds me. i still need to bug that friend who's name i found in the credits.
<ssta>	i've recently dicovered that streams are awesome, that intellij rocks and i appear to have remembered that life is good
<ssta>	so largely god news really
<pyon>	vdamewood: "who is name"?
<pyon>	ssta: yes intellij rocks
<vdamewood>	dammit, whose name
<jacoby6000>	how long after submitting a sample project (after a technical interview) before you typically get feedback?
<ssta>	except siome fuckwits in the uk elected cameron for another term of fuckery of the economy in the name of fixing it
<vdamewood>	pyon: also, who's isn't always who is, it could also be who has. :p
<pyon>	vdamewood: true
<ssta>	or who was, or even "whores" shortened
<pyon>	ssta: lol that'd be hoes
<ssta>	apostrophes are funny beasties
<ssta>	pyon: not ho's?
<pyon>	ho's works just as well i guess
<vdamewood>	it helps to remember that apostrophes in english always represent an omission of some sort.
<vdamewood>	and that pronouns have their own possessive form.
<vdamewood>	forms
<ssta>	i once saw a sign in a shop (a printed sign no less, so can't blames some illeterate fucwit shop assistant) that said "the do's and dont's of buying cd's"
<ssta>	i was ready to kill someone
<pyon>	lol
<generalvagueness>	i'm a grammar nazi and i can defend all of those
<ssta>	it was the "dont's" that was just...unbelievable
<generalvagueness>	don't's looks awful
<ssta>	the rest i can forgive as shit poor educational standards these days
<pyon>	the "do"s and "do not"s of buying cds
<vdamewood>	apostrophes look aweful.
<vdamewood>	err awful
<generalvagueness>	"dos" doesn't look like do-s, it looks like spanish for "two"
<generalvagueness>	or an old operating system
<ssta>	i can spell quite well...can't type worth a fuck though
<_slade_>	vdamewood: which brings up the question of just what on earth were the ada designers thinking when they used ' for namespace resolution.
<_slade_>	although it'd be interesting to see a survey on whether ' or :: is uglier
<vdamewood>	_slade_: threw darts at a keyboard?
<pyon>	generalvagueness: which is why i used "do"s instead of dos
<generalvagueness>	i'm not fond of "cd's" but an apostrophe after abbreviations is really, really common
<ssta>	_slade_: adas is old...that extra character is important
<ssta>	generalvagueness: common doesn't mean okay
<pyon>	_slade_: using ' for namespace resolution is no big deal
<generalvagueness>	it does actually, language is determined by usage
<ssta>	just because most evefryone gets it wrong in the same jkind of way doesn't make it right
<pyon>	_slade_: it isn't visually pleasant, but people use c++ which is even worse
<ssta>	i wish i could type
<vdamewood>	maybe we should use (__|__) for namespace resolution
<pyon>	vdamewood: ikr
<generalvagueness>	especially english which has no central body, unlike say spanish which has a royal academy of the spanish language or whatever it's called
<_blizzy_>	hmm, i'm making a twitter like website
<_blizzy_>	what should i name the 'tweets'
<_blizzy_>	nvm got it.
<_slade_>	pyon: i like being able to use ' as prime in variable names, but for resolving namespaces it's just awkward imo.
<pyon>	_slade_: agreed
<pyon>	_slade_: but tbf i dont ind becos variable names can be whatever you want
<pyon>	a b c d e ...
<pyon>	^ variable names
<vdamewood>	hmm... imagine a programming langauge based on tex.
<pyon>	vdamewood: lovely
<_slade_>	vdamewood: tex itself probably qualifies.
<ssta>	vdamewood: it exists...it's called tex
<vdamewood>	_slade_ ssta: i was thinking that.
<ilhami>	all of my ideas have been stolen. :p
<pyon>	ilhami: sue them!
<ssta>	tex is turing complete and qualifies as a programming language by any criteria that mattes
<vdamewood>	ilhami: you think you got it bad? i just found out that my idea for a programming language was stolen by the guy who i was trying to steal from.
<ilhami>	haha
<_slade_>	if literate programming had caught on tex wouldn't look so out of place as a programming language.
<vdamewood>	_slade_: that's also where my thoughts were going.
<ssta>	shame nobody but don knuth uses literate programming for anything
<pyon>	ssta: yea but what about a language that whose source code must be *embedded* in tex
<vdamewood>	so, why didn't literate catch on?
<pyon>	ssta: literate haskell and agda makes for cute blog posts
<ilhami>	what do you think that is missing out there in the world? :d
<woggle>	uh, have you tried to use tex as a programming language?
<vdamewood>	i've never used tex directly. i was always wearing a latex condom.
<pyon>	lmao
<bacon1989>	i tried writing my resume in latex
<ssta>	vdamewood: imo for its time and the hardware availabkle it was waaay too verbose and expensive computationally...once hardware caught up nobody really wanted it any more...moular programming was already kinda normal
<bacon1989>	it was more difficult than i thought
<pyon>	bacon1989: i'd just write it in word and export as pdf
<bacon1989>	yeah, that's what i ended up doing lol
<snowblind117>	any one know how i can make a chat client or anything cool like that with dark basic ?
<ssta>	deerhawk: i can factor in o(n) time (where n is the number to be factored)...just trial divide from 1..n (in fact sqrt(n)).  what i *can't* do is factor in o(b) where b is the number of bits in n...*that's* what we want to be able to do.  n for a 512bit number is not 512, it's 2^512
<the8thbit|work>	bing bong ding dong
<the8thbit|work>	beep boop diddly whoop
<deerhawk>	ssta: yes
<deerhawk>	the8thbit|work: omg, reported
<ssta>	2^512 is about 1e150 or so...it's beyond our ablity to compute, but it's still a polynomial algorithm
<the8thbit|work>	deerhawk: tingalinga dinga pinga
<pyon>	ssta: well, normally these things are measured in the sized of the input
<pyon>	ssta: and the size of a number is proportional to its logarithm
<pyon>	(in any sensible base, iow, not unary)
<thecha>	pyon are you programming on something atm?
<ssta>	pyon: indeed...but that's asking to do it in o(log(n)) and not in o(n)...depending on how you measure it
<pyon>	ssta: n is the size of the number, not the number itself
<pyon>	so o(n) already takes into account taking the logarithm
<woggle>	deerhawk: if you're going to make progress on integer factorization, i very much doubt it's going to be by proving anything that implies an answer to p ?= np, since that's a strictly harder problem.
<ssta>	pyon: yes, but that's arbitrarty...in most problems n is the number itself, not the size
<pyon>	thecha: no im reading manga
<ssta>	pyon: if i'm sorting, then i want o(n log n), not o(log n log log n), which is silly
<pyon>	ssta: that's because the size of the input isn't the number, it's the size of the list being sorted
<thecha>	yes? what manga are you reading? hentai kamen?
<ssta>	so factoring is indeed polynomial in the number (and unsurprisingly expoential in the size of it()
<thecha>	i loved hentai kamen very funny
<pyon>	ssta: asymptotic complexity is always given w.r.t. the size of the input
<pyon>	ssta: or, rather, the size of its representation (at this level we don't care about abstract data types anyway)
<ssta>	pyon: you could say then that the size of the input is 1...there's only 1 number to factor.  i understand and agree with you, but i think it's important top bve careful about saying it's exponential without saying in what
<pyon>	ssta: no
<pyon>	ssta: you can't represent an arbitrary natural number in o(1) space
<ssta>	well, probably exponential
<pyon>	and the problem is defined as "factoring an arbitrary natural number"
<thecha>	pyon you know hentai kamen? and what are you reading
<pyon>	thecha: mainly shoujo ai one shots
<pyon>	girl love is pure... uncorrupted by males
<ssta>	pyon is a lesbian trapped in a man's world
<pyon>	wut
<vdamewood>	damn. i want to listen to music, but my music is all gone.
<winny>	this is totally going to nourish programming discussion
<pyon>	vdamewood: what happened to it?
<literphor>	lol…girl love is pure?? wtf?
<vdamewood>	pyon: i reformated my hard drive, reinstalled my operating system, and for some reason my music collection was gone.
<pyon>	vdamewood: ouch :-(
<ssta>	unsullied by cocks
<pyon>	vdamewood: no backup?
<vdamewood>	at least 3.
<thecha>	pyon have you heard of the manga called vagabond? about the famous legendary samurai greatest of all times musashi? no? it is a very serious manga more for grown ups and is propbably one of the  best i have read
<thecha>	https://en.wikipedia.org/wiki/vagabond_%28manga%29
<vdamewood>	time machine, hand copying them to an external hard drive, plus i still have the originals.
<pyon>	thecha: i read manga for the fanservice, not for the plot
<thecha>	but is very serious..
<thecha>	what is fanservice?
<generalvagueness>	t&a usually
<vdamewood>	http://en.wikipedia.org/wiki/fan_service
<thecha>	i just googled it pyon and that is just sad bro...like damn reading comics for the
<thecha>	smdh
<pyon>	thecha: "just sad" --> to each their own
<thecha>	indeed
<pyon>	if i wanted some actual plot, i'd read history books
<jkbbwr>	hey all
<generalvagueness>	i don't get it because the internet makes actual porn free
<thecha>	or even makes erotik novels free lol
<thecha>	but to each their own
<vdamewood>	there's no plot to history and the ending has already been ruined.
<generalvagueness>	there's no reason to reason to mess with half-assed stuff like fanservice unless that's very specifically what you're into or you want to have it out in public and have an excuse
<pyon>	generalvagueness: it isn't half-assed if fanservice is itself the entire point
<vdamewood>	i like ned flander's taste in porn. he has a video called 'girls gone mild'.
<ssta>	it's a matter of taste...i like pink floyd...thyere are deluded individuals out there who like bieber...to each their own
<thecha>	pyon wherein consists this fanservice? the stories are always heavy on the romance...?
<n1cky>	ssta: racho: so i'm doing some reading on foreign keys... how can i have a schema with multiple tags being allowed? i can see how i could have a table of tags, and a table of posts, and have a post row have some foreign key on the tags table, but how can i do multiple tags per post?
<thecha>	i think this is something that has happened in advertising for a while now
<pyon>	thecha: no no
<generalvagueness>	pyon, it's half-assed compared to what i have in mind
<ssta>	all the gratuitous cleavage pics presumably?
<pyon>	thecha: i don't want romance
<deerhawk>	does anyone have a quick knowledge of how many cycles a computer program can do in 32 ms?
<pyon>	thecha: i mean strictly fanservice
<thecha>	lol sounds like you have to pay upfront lol
<vdamewood>	n1cky: make a table that has foreign keys to both.
<pyon>	thecha: and, if there's going to be any romance, it better be girl-and-girl
<n1cky>	vdamewood: but what would i call it?
<n1cky>	:s thank you
<thecha>	pyon who invented fanservice and how?
<vdamewood>	n1cky: posttags
<pyon>	thecha: dunno
<ssta>	n1cky: insert into tags(postid, tag) values(...); multiple inserts like that, one per tag on the post
<pyon>	thecha: dont care either
<thecha>	isnt that the same stuff they do on tv?
<pyon>	thecha: dunno i dont watch tv
<thecha>	like every sitcome has a young hot teenage daughter?
<camcam2>	so, i’m trying to learn me some java gui skills, by building a tic tac toe game. at this point i’ve got a window that displays the board (with css/javafx). for the next step, i was thinking of making rectangle objects, then having each one have a listener where a click will add an imageview to each rectangle (to display the x or o). does this sound like the right approach?
<thecha>	like bundies had kelly
<pyon>	i dont even own a tv set
<thecha>	the show with cosby had the mum
<racho>	n1cky, you have a table where you save the id of the post and the id of the tag. like this |post1id|tag1|->next row->|post1id|tag2|
<thecha>	pyon like literally evry tvshow has like at least 1 designated hotchick
<thecha>	like seinfeld had elaine
<thecha>	it's fanservice
<thecha>	or else they would have like a normal ratio liek 50 50
<pyon>	thecha: if there aren't at least two girls, i can't pair them
<pyon>	thecha: the number of possible pairings in a set is n*(n-1)/2
<ssta>	thecha: "golden girls"?
<pyon>	thecha: so if we want the number of pairings to be greater than zero, n has to be at least 2
<pyon>	vdamewood: chekn
<vdamewood>	i think bea arthur was supposed to be the 'hot' one.
<denommus>	pyon: have you ever messed around with xml parsing in haskell?
<ssta>	vdamewood: you have issues :)
<technodrome>	good day
<deerhawk>	omfg:    fujitsu k-computer_ 10,000,000,000 mips at 2 ghz
<camcam2>	vdamewood: she was the one that was actively sleeping with a different man every episode
<pyon>	denommus: no
<vdamewood>	ssta: i never said *i* found her hot.
<thecha>	vdamewood! have you watched girls?
<deerhawk>	guys pls, i wanna do something important for the world. what is there to do with pen and paper? i cna't do the np-hard shit, they seem impossible.
<vdamewood>	ssta: not that i deny having issues, just none of them have anything to do with this particular show.
<deerhawk>	getting nowhere, wasting my time
<vdamewood>	thecha: watched girls what?
<thecha>	lena dunham?
<thecha>	https://www.hbo.com/girls
<vdamewood>	oh, then no.
<thecha>	the chick you see there? it's all about her living in a new york free from minorities
<thecha>	give it a try
<vdamewood>	so far, i'm not interested.
<thecha>	i hated the whole hting
<thecha>	but it is like a car crash you somehow can't look away
<rcr>	if you hated it why did you watch the whole thing
<rcr>	oh
<rcr>	i see
<thecha>	you have to watch it yourself to describe
<vdamewood>	if i wanted to watch a car crash, i'd go crash a car.
<ruffel>	or what crash
<thecha>	that is not what i meant
<ruffel>	*watch
<thecha>	it is just liek a car crash in it being hard to watch away
<safemoneyonl>	 win 20.000-30.000 euro per year (1700-2500 euro per month) with 1 h per day for 365 days. at start you will earn little money but with time your starting to learn much more at start you can win 0.5 euro per day first week and after a month you will earn 10-20 euro per day its verry simple just make an account on my link and i will train you and i will be your guide as much you need
<safemoneyonl>	sign up here and good luck  -----> http://www.marketglory.com/strategygame/lolopoco
<ssta>	boot please
<thj>	so, i've been a programmer since i was six. got my first full-time job in it at 26, and my interest had began to wane a little by that time. i'm 32 now, and it's beginning to feel like i'm solving the same problem over and over.
<thecha>	30.000 euro? that's like 23 $
<thecha>	that's all?
<darkelement>	quick guys is there a shortcut like in eclipes(ctrl+shift+f) that auto indents accordingly in notepad++?
<vdamewood>	thecha, in some european countries, , is the decimal point, and . is the thousands' separator
<thecha>	i know
<literphor>	thj oh? you didn’t get your first fulltime job till 26?
<thj>	no matter what it is i'm working on, it's always some variation on "bit a and bit b do not fit together, so i have to make the glue that makes that happen."
<literphor>	i don’t feel as bad now then
<deerhawk>	i need a hard problem.. but an impossible one is just a waste of time
<ssta>	darkelement: i think you need a plugin to do that
<darkelement>	ssta: alright ty
<pyon>	ssta: also, me thinks thecha converted usd to eur, instead of the other way around
<thj>	literphor: did work a bit in a few call centers before that, but full time programming job? yeah, 26.
<pyon>	no wait... he converted 20eur to usd... his 30eur statement was misleading
<darkelement>	we good now
<darkelement>	ty
<darkelement>	"indent by fold", btw.
<thecha>	oh i did it x⁻1
<thj>	i find that i'm only really happy in this job when i don't have to deal with the unforseen side effects of somebody else's api.
<ssta>	pyon: eur and usd are close to parity now...usede to be he would have been right
<thecha>	30 euro of course is 40 $
<pyon>	ssta: ah
<thecha>	parity?
<thecha>	o_oomg i am doomed
<vdamewood>	1 usd = 0.89 eur
<ssta>	thecha: equal.  30eur is about $33 at the moment.  it changes depending on exchange rates
<literphor>	thj what was it that finally got you the full time job? i’m trying to get involved in more open source projects, it seems that interviewers care less about what you know and more about what you’ve done
<literphor>	which is kind of hard to do if no one will hire me :-/
<thj>	literphor: well, being unemployed, i did a large project of my own.
<thecha>	i am gonna make some pizza and have some nice innocent fun with numbers vs letters
<snyp>	thecha: what is that?
<thj>	literphor: and it impressed people.
<snyp>	thecha: wow you are talking in first person again
<thj>	literphor: it was a mixture of website code, and rich client code (graphics)
<thj>	literphor: the website code was from scratch, i wrote my own engine and my own orm.
<thecha>	snyp numbers vs letters is  sketch from wondershowzen where numebrs and gangs are enemeies ina  sesmae street like setting
<thecha>	and a death match is looming between them
<thj>	that project made me fairly happy. it was just me designing everything, so it was beautiful and clean.
<thecha>	kinda liek west side story
<snyp>	thecha: oh
<thecha>	idk the show is weird
<literphor>	thj your own engine? as in your own web server?
<thecha>	and yeah i had a replacement set in my xchat that replaced all my first person speech with 3rd person speech
<thecha>	idk why i did that
<literphor>	thj that’s what i figured, i’ve started on my own large project several months ago…all from scratch as well but it’s going to take time to get it to where i want.
<thj>	literphor: i didn't go that far. now, this was back in the early 2000s, so i based it on java servlets. i used jetty as the webserver. when i mean engine, i mean i was basically handling everything, parsing my own urls, routing, feeding stuff to template engine, etc.
<thj>	literphor: jetty kind of works a lot like node.js in how http requests are handled, i.e. it doesn't do much else than accepting the requests and wrapping them in request/response objects.
<_blizzy_>	man, females are strong as hell
<_blizzy_>	props to whoever knows where that's from.
<literphor>	thj: i gotcha.. yea i’m pretty much doing the same thing now in php but i’m utilizing symphony components to handle some of the abstractions but otherwise it’s all done from scratch
<thj>	when i have to write a lot of glue code, i almost grind to a halt. :(
<thj>	brain gets very unhappy about it and it feels like i'm working uphill.
<literphor>	thj: just seems rediculous that i have to go to this extent just to get my first job… i spent so much time learning instead of doing, i thought a degree and a technical knowledge would be enough but i was very wrong
<thj>	literphor: i didn't get the degree. me and school were never very compatible.
<thecha>	my pw for windows is 12341234 how fast do you think this will take to crack in bruteforce?
<snyp>	literphor: can't you write simple, short utility programs instead of large stuff and show them to the interviewer or whatever?
<thecha>	internship?
<thecha>	work your way up
<thecha>	start in the mail room
<thecha>	you can do it bro
<thj>	literphor: school is a lot like writing glue code, really. lots of mentally taxing things you are not rewarded for along the way.
<zacts>	hello programmers
<zacts>	i'm @ my university studying lisp
<zacts>	i feel kind of like a nerd
<thj>	literphor: but yeah, they do typically want someone with work experience.
<literphor>	snyp i have many short utility programs that i use in my day to day coding, but i never get any technical interviews, let alone something where we’re looking at code
<thj>	literphor: it also helps to be over 25, somehow. i didn't get any job i applied for until i got over my mid 20s.
<zacts>	most comp programming job interviews are silly, well the corporate ones are
<technodrome>	how are you guys
<snyp>	literphor: i see
<literphor>	snyp i hate it. i think in my entirety of looking for a job, i’ve had 2 technical interviews taht involved code
<zacts>	i think just sitting down with someone, and having them complete a few projects, and watching how they work is the best interview
<snyp>	literphor: i see.
<technodrome>	thj: bingo, >25 or >27 == easy job close
<zacts>	i've had interviews for all kinds of different tech jobs, and i know how i would personally hire a dev if i wanted one to work for me
<zacts>	i wouldn't be like, what does the -l flag do on ls, or trivia questions
<technodrome>	a 20 year old genius is going to try and make it for himself, job providers still look at the early 20’s like teenage years
<thj>	technodrome: it suddenly got much easier once i hit that age bracket.
<zacts>	plus, i refuse to work for someone who does stupid corporate interviews
<thj>	technodrome: right, 20 y/o isn't considered "grown up"
<literphor>	thj i see…maybe i’m still too youn :(
<technodrome>	agreed thj , i would 23/24 when i got my first job, and at 25 i got a much better job
<technodrome>	now i could have gotten a better job 18-22 than i was doing, but it was really a learning period for me, and i didn’t push things myself like i should have
<thj>	literphor: you said you have a degree. haven't you spent 3-4 years in college since high school then?
<thj>	i'd say that if you're under 25 and you have a degree, you're in a great position.
<_blizzy_>	red is such a hard color to work with
<thj>	i worked in 2-3 it support call centers before i got the programming jobs.
<_blizzy_>	nvm i'm stealing the ror red
<thj>	i mean, you probably wanna take most any job at that age, and keep doing the code on your spare time.
<_blizzy_>	how do i make myself known
<_blizzy_>	as a dev
<thj>	and then with some job experience under your belt (demonstrating that you can keep a job), and some projects to show off, plus the benefit of age, you're going to be a much stronger candidae.
<thj>	*candidate
<thj>	imho, a lot of education would be a lot more efficient if we just gave people reading lists and sent them home. :p
<iamnotarobot>	there's no denying the gaping void between college-level "academic" code and production quality code.
<inphase>	thj: a proper degree still provides a completeness and a rigor that's hard to get without one.  if a person did a lot of programming pre-college, that simply makes some of the courses easier, and frees up more time in college to also learn other things.
<iamnotarobot>	thj, i agree.
<thj>	a lot of the time, the curriculum itself is the most important bit of information. "ah, i should learn about data structures and algorithms."
<inphase>	thj: that's part of it.  there's also a feedback process which is not present in textbooks.
<iamnotarobot>	thj: there's also a potential source of enthusiasm from the teachers/prof which you just don't get from the text.
<snyp>	depends on the book.
<iamnotarobot>	;p
<thj>	inphase: all i know is, the vast majority of college educated programmers i've worked with have not really surprised me with their 'educated' code or special knowledge from college. it's all stuff i can, and have found, on the internet...
<thj>	inphase: so i don't know if i agree with that, basically.
<thj>	if anything, i'm usually told i'm a very talented guy. which felt reassuring. i thought i'd be weak compared to the college educated guys, but it turns out i have been doing just fine.
<inphase>	thj: it's true that nearly everything taught at a masters degree level on down in most subjects has been written down somewhere.  but it's pretty rare to find people without a degree who actually go through and self-teach the equivalency of one.  much more common is people thinking they have.  (please don't take this as any sort of personal comment, since it's definitely not intended as such.)
<snyp>	uh.. i think master's is where the fun begins.
<snyp>	idk
<thj>	inphase: i don't like to see it as "college equivalent", feels a bit sketchy.
<thj>	inphase: more like... what actually sticks after college seems to be fairly close to the stuff i learned on my own.
<snyp>	thj: do you know about functional dependencies in databases?
<snyp>	relations i mean
<snyp>	i am liking the database course more than the formal language one... the questions asked in the latter just make me ask "wtf, why would i want such a language!!!"
<pyon>	snyp: it's really annoying when they give contrived examples of formal languages, indeed.
<pyon>	i mean, what purpose does it serve to analyze <insert random context-free grammar here that couldn't possibly describe anything useful>?
<snyp>	mhm
<iamnotarobot>	knowldge of lambda calculus, for example, could be useful if you code compilers or just want to use lambda expressions.
<pyon>	iamnotarobot: the lambda calculus is useful because it's a model of lexical scope.
<pyon>	iamnotarobot: and lexical scope is useful in practical programming languages.
<technodrome>	thj: how old are you now?
<pyon>	on the other hand, the examples that they usually give in classes about formal languages an automata are super contrived and totally unrelated to anything practical.
<thj>	snyp: and that would be the sort of thing i have never heard anyone utter a word about in day to day work. however, looking it up, i'm grasping it. i've done a fair bit of db design, normalization, etc.
<snyp>	thj: i see i see
<thj>	snyp: here's one hole i admit to
<thj>	snyp: terminology
<inphase>	thj: but these can be the things a person uses internally to select a particular design or approach to solving a problem.
<thj>	snyp: i will often have grasped a concept intuitively, but speaking about it in standardized language is not always possible for me, because i don't know what the word for it is.
<snyp>	thj: idk how you can normalize without knowing about the dependencies... :|
<snyp>	thj: maybe you just called it something else
<bizarrefish>	hi all
<thj>	snyp: because of what i said.
<thj>	snyp: terminology. i have knowledge but often no words for it.
<snyp>	yeah and maybe the databases don't contain a lot of attributes, so it can be normalized using an ad hoc approach
<snyp>	thj: hmmm
<snyp>	thj: how big are the schema's you have worked with?
<thj>	snyp: i see a pattern or grasp a concept. i can talk to you about foreign keys, one-to-one, one-to-many, many-to-many, but i didn't know about that term you used.
<bizarrefish>	urgh, venting time. the ops guys at my work messed up. they migrating to a new server. they gave the server the old (working) server's name, and renamed the old server to a 'legacy' server
<bizarrefish>	so, all devices with the old server's name, as if by magic, stopped working
<_w_>	lucky that was detected in the staging environment
<thj>	snyp: and i know about the normal forms and the relational model and those things.
<_w_>	(wait, you don't have a staging environment?)
<inphase>	thj: the terminology is usually associated with a mental abstract representation that provides a context for a concept, and it is that conceptual context which helps one use it to solve large problems quickly.  i think it might be a mistake to dismiss that as simply terminology, because the people learning it are not just learning a word.
<thj>	inphase: you know, i don't really solve problems with words.
<thj>	inphase: concepts, yes, but i see these things, i don't think them in words.
<_w_>	thj: teams solve problems with words however
<_w_>	it's hard to communicate concepts non-symbolically :p
<bizarrefish>	team work may utilise words, but the distributed problem-solving is still something not well understood. by me at lesat.
<bizarrefish>	*least
<thj>	i find that i resort to code to explain concepts.
<thj>	it's been noted on in job interviews.
<bizarrefish>	code conveys ideas well, because, well, it is ideas.
<thj>	not all of the interviewers like it, since they want the academic symbols.
<user>	hey guys
<pyon>	thj: explaining concepts with code only is super-inconvenient.
<bizarrefish>	user: elo
<thj>	pyon: well, one can always drum up an improv block/flow diagram
<pyon>	thj: that's even worse.
<thj>	not that i've ever needed to
<pyon>	thj: at least code has reasonable control structures.
<bizarrefish>	block diagrams confuse me
<thj>	the people i've worked with have never had any trouble understanding me
<thj>	nor have i had any trouble understanding them.
<vendu>	http://vendu.twodots.nl/pix/sword.png
<pyon>	bizarrefish: the problem with block diagrams is that their meaning is not specified anywhere.
<vendu>	:)
<vendu>	probably my fave piece of graphics from what i've done :p
<bizarrefish>	there's so much that goes unsaid. a good block diagram approaches code, so just use goddamned code without the boxes!
<zacts>	hey vendu
<pyon>	bizarrefish: so they only convey fuzzy understandings. when programming is all about pedantic precision!
<vendu>	heyas zacts :)
<vendu>	btw, that's a povray scene ;)
<zacts>	vendu: any new progress with oszero, (probably the last 3 months or so)
<vendu>	zacts, hmm some, yes
<vendu>	improved the malloc rewrite some
<zacts>	coolio
<vendu>	and been putting some work into the game mjolnir :)
<pyon>	bizarrefish: i'd kill myself if i had to explain everything in a retarded programming language like vb or java, though.
<snyp_>	thj: yes i am also of the opinion that intuition is more important than terminology, but when working with multiple resouces (books, internet, other people) a common terminology is required for conciseness.
<pyon>	thank goodness for natural language - it can make up for the lack of decent programming languages.
<bizarrefish>	java retarded? :/ java has almost all the features of object pascal!
<zacts>	pascal sucks
<zacts>	java is better than pascal, but java still sucks
<zacts>	imo
<zacts>	(of course)
<bizarrefish>	pascal is a curly bracket language without the curly brackets
<thj>	snyp_: sure, and i know enough of that to be able to read it, and to communicate appropriately.
<snyp_>	hmmm
<zacts>	pascal wasn't even supposed to be used outside of a classroom
<zacts>	pascal is so strict in syntax it is silly
<zacts>	i much prefer lisp, or even java, or almost anything else to it
<bizarrefish>	not as silly as fortran
<zacts>	even visual basic
<bizarrefish>	(fortran 77 that is)
<zacts>	fortran is fun
<zacts>	i have an old fortran punch card, i found in a calculus book
<bizarrefish>	pretty sure fortran 77 is strict on syntax
<zacts>	for the univac
<pyon>	zacts: no, not visual basic. i'd take pascal anytime. i know because i use visual basic everyday.
<bizarrefish>	in that it is columnar
<zacts>	pyon: really? but visual basic is at least basicish and so can be pretty entertaining
<pyon>	higher-order functions? use addressof and effectively drop to c!
<zacts>	vb was my first programming language actually, when i was a child
<thj>	snyp_: i technically wanted to go to college. it's just that the way teachers think doesn't agree with me.
<pyon>	at least pascal and c have types for references to procedures.
<bizarrefish>	pyon: yes, and watch your ide crash, losing all the edits you did since starting the program :p
<zacts>	thj: i'm going the route of teaching myself my classes, then testing out of them
<thj>	snyp_: so whenever i sign up for any sort of schooling, i always come to regret it immediately.
<zacts>	as much as possible
<pyon>	bizarrefish: crashes aren't an issue with vb6, really. the problem is that the language itself sucks.
<zacts>	school then goes by easily
<snyp_>	thj: what did you call something like email -> username, age before you came to know about functional dependencies?
<zacts>	i don't have to complain, i just show up to each class for an hour, and then finish the assignments, and then slack off on irc.
<snyp_>	thj: i see.
<pyon>	bizarrefish: in fact, more recent versions of visual studio tend to crash more on my work machine, in spite of the fact visual basic 6 is unsupported crap.
<zacts>	but, i do study a ton for everything on my own
<zacts>	i love basic
<zacts>	basic is just fun, especially for simple games
<zacts>	and for nostalgia
<zacts>	but the lisps, and probably soon haskell, are my favorite languages
<peterfa_>	this is fun. i'm at that stage in my application where i can make changes and the changes do not require bug hunting or architectural changes.
<pyon>	zacts: basic is impossible to reason about. you basically have to run the code to see what it does.
<peterfa_>	it all works with minimal debugging for syntactical errors.
<zacts>	pyon: hehe
<zacts>	yeah, but it's still fun
<pyon>	fun?
<zacts>	for n definition of fun
<snyp_>	pyon: can you run it pythonically?
<zacts>	pyon: mainly probably because of nostalgia
<pyon>	snyp_: wut
<snyp_>	pyon: jk
<bizarrefish>	pyon: the problem is that the language permits unbounded memory access, and uses an in-process debugger.
<bizarrefish>	an out of process debugger would be far better.
<bizarrefish>	vb6 the language is essentially the javascript of the 90s, i'll give you that.
<bizarrefish>	by that i mean it has far too many funny rules relating to type coercions which bugger everything up
<bizarrefish>	oh, and collections. wtf, microsoft?!
<pyon>	bizarrefish: i dislike debugging altogether.
<bizarrefish>	pyon: i agree vs is depressingly buggy compared to vb6
<thj>	snyp_: email -> username, age   seems like an odd example, no? usually, usernames are as unique as emails, where as ages are not...
<pyon>	bizarrefish: i find it more pleasant to work with the code, than with the process that the code can generate.
<snyp_>	thj: uh yeah.. change that to name
<zacts>	i think we need a new programming language that combines basic with pascal
<bizarrefish>	a valid methodology, certainly.
<pyon>	bizarrefish: as dijkstra said, "temporarily forget that the program can be executed".
<zacts>	damn, the perfect silly programming language
<snyp_>	thj: i was just wanting to see how you 'thought' about it.
<peterfa_>	vb is a language with lots of patches. it does allow for a lot, but it also could be simpler should it have a stronger syntax.
<pyon>	peterfa_: what do you mean by "stronger syntax"?
<peterfa_>	java has a bunch better syntax that's more powerful. i know nothing of the other languages.
<pyon>	peterfa_: syntax alone isn't what makes programming languages good or bad.
<peterfa_>	pyon, the idea behind it is simpler but does more, and you can add to it without having to change it much.
<thj>	snyp_: well, i'd think of them as unique or not unique. it really depends on where you're going with that example... what do you want me to think about it for?
<pyon>	peterfa_: plus, java and vb are, deep inside, the same imperative crap.
<pyon>	peterfa_: "does more" --> that's semantics, not syntax.
<thj>	snyp_: what's the problem to be solved/optimized?
<peterfa_>	pyon, oh.
<bizarrefish>	java has some useful features that vb lacks. more sophisticated gc. closures.
<peterfa_>	there's also the fact that java is my first language i really learned.
<peterfa_>	so, my cs understanding is based on that.
<bizarrefish>	vb.net, c
<pyon>	peterfa_: try haskell, prolog and lisp.
<bizarrefish>	vb.net, c#, java, now they are all the same
<usernamed>	hello. i am about to install a linux distro on my new laptop, still, i can't decide which one. i want something that i will be able to 'build from scratch', yet that won't be that hard to do (as long as i follow some guide). i'd like to use the windows manager 'dwm', except if you can suggest a better one, in your opinion. thanks.
<peterfa_>	pyon, better semantics?
<pyon>	peterfa_: they will make java look like an underpowered toy.
<peterfa_>	pyon, ok.
<peterfa_>	pyon, i'll do so. today i want to learn javascript.
<peterfa_>	when i'm done with my app.
<peterfa_>	it's time for testing.
<bizarrefish>	usernamed: i'd go from arch linux if you want to go from scratc
<bizarrefish>	*scratch
<iamnotarobot>	can someone explain what a losure is in one sentence?
<pyon>	usernamed: why use a distro at all? just build your own linux from scratch.
<iamnotarobot>	closure^
<bizarrefish>	usernamed: gives you a package manager (pacman) and a load of prebuilt stuff, unlike gentoo, where you have to build everything (but otherwise follows the same 'from scratch' philosophy)
<snyp_>	thj: ah 'unique'.. that's the word you use.
<thj>	snyp_: well, yeah, because sql keys.
<pyon>	iamnotarobot: a closure is a first-class procedure that has access to variables from the lexical environment in which it was created.
<bizarrefish>	iamnotarobot: it's a function which has access to variables defined outside itself.
<usernamed>	bizarrefish, yeah, i was thinking of arch, too. and i see. thanks. pyon, i am not advanced enough for that
<pyon>	bizarrefish: in the *lexical* environment in which it was created. otherwise, it isn't really a closure.
<iamnotarobot>	thats bizarrefish and pyon
<iamnotarobot>	thanks^
<pyon>	usernamed: well, you said "build from scratch". i wouldn't really recommend this, though.
<bizarrefish>	pyon: there are only lexical variables in most languages. also, he didn't say 'lexical closure' :p
<iamnotarobot>	so then what is clojure with a j?
<usernamed>	pyon, i know, sorry for not being clear enough. i wanted to say that i'd rather choose the software myself
<pyon>	bizarrefish: if it's dynamic scope, you're just using syntactic sugar over a global hashmap.
<snyp_>	thj: how do you mentally think about third normal form?
<bizarrefish>	pyon: that's one method of implementing it, yes. but conceptually not relevant.
<pyon>	bizarrefish: the importance of it being lexical scope becomes evident when you try to formulate the typing rules for closures as sequents. really, it has to be in the lexical environment.
<bizarrefish>	i suppose, in normal languages, most functions are dynamic closures
<bizarrefish>	apart from x = function() { return 4; }
<bizarrefish>	et. al.
<snyp_>	thj: i won't bug you anymore that's my last question... i just sort of find it interesting how one can normalize without knowing about functional dependencies (or rather, knowing about it, just not the official definitions and algorithms).
<snyp_>	and be confident in what s/he's doing.
<pyon>	bizarrefish: dunno, c++ and c# are as mainstream as it can possibly get, and their so-called "lambdas" capture variables from the lexical environment in which they're defined
<thj>	snyp_: well, i think of normal forms as reducing data redundancy more and more.
<pyon>	thj: not just reducing redundancy, but also enforcing more business rules
<thj>	snyp_: if i were designing a schema i might start off with a 'dumb' table and then 'break off' column groups into separate tables.
<iamnotarobot>	pyon are the lambda expressions in c++11 classes as closures?
<usernamed>	off-topic: anyone here with tinnitus?
<bizarrefish>	snyp_: the issue with normalization is that point-of-view is a big part of it. a data model can never be final, or correct. it's about how you intend to use the data.
<iamnotarobot>	rings a bell
<thj>	snyp_: and sure, as you break them off into separate tables, you'd enforce some constraints on the keys, etc.
<bizarrefish>	iamnotarobot: yes, they are lexical closures
<iamnotarobot>	does that mean that all lambda expressions are lexical closures?
<snyp_>	thj: i see.
<pyon>	iamnotarobot: sadly, nope
<bizarrefish>	iamnotarobot: not all lambda expressions will reference free variables. some may simply be pure functions
<bizarrefish>	iamnotarobot: (x) => x + 1
<pyon>	iamnotarobot: some languages have dynamic scoping.
<bizarrefish>	that's not a closure
<thj>	snyp_: and of course you learn. you begin to split off certain things because you know, by experience, that they ought to be.
<thecha>	pyon what's new in the beautiful world of c++?
<bizarrefish>	thecha: closures :p
<iamnotarobot>	what do you mean by dynamic scoping?
<thecha>	:d
<standoo>	what is the outermost block in a script called?global?
<pyon>	iamnotarobot: an abomination that makes languages not amenable to formal reasoning, forcing you to debug the hell out of them.
<bizarrefish>	iamnotarobot: a type of variable, popular in lisp type languages, where the place it binds to is determined at runtime.
<pyon>	iamnotarobot: dynamic scoping is to scoping as goto is to control of flow.
<iamnotarobot>	spaghetti code! :d
<pyon>	iamnotarobot: actually, i should be even harsher: as call/cc is to control of flow.
<snyp_>	thj: yeah... i agree experience is definitely the important thing, even if one knows the theory... or just implement the algorithm mentioned in theoryand let it break the table lol.
<bizarrefish>	iamnotarobot: if i write the c/java loop: while(true) { int x = 3; /* do something with x */ }, we can see that inside that loop there is a place called 'x'. that's lexically bound - it can be determined from reading the code. a new place is created on each loop iteration.
<thj>	snyp_: many times, i'll design things a certain way, and i won't remember why, but i know that if i don't do it that way, it's bad. and if i start thinking about it more, i'll remember the reason.
<iamnotarobot>	bizarrefish, yup this is definately vocab i'm not so familiar with when talking about programming
<thj>	snyp_: and it's not cargo cult programming i'm talking about there. it's more along the lines of having non-verbal knowledge built up from experience and never elaborating it in words.
<bizarrefish>	iamnotarobot: just keep askin :) there are lots of words out there. a demo is probably the best way to convey
<thj>	i suppose if i wasn't a good lateral thinker, and wasn't very clever, knowing formalisms might help me somehow?
<thj>	i don't know. maybe not. i suspect not...
<iamnotarobot>	ok, so under wha circumstances is it useful to talk about a closer rather than a function.
<iamnotarobot>	?
<iamnotarobot>	closure^
<snyp_>	thj: nah cargo cult programming would be not having a clue why something is right and something is wrong. lol
<pyon>	iamnotarobot: never. the concept that actually matters is that of a mathematical function. functions, of course, are legitimate first-class values like any other.
<thj>	snyp_: well, the reason i put in that disclaimer is because it might look that way to other people, when they ask me why i did x, and i can't remember why, but i know it's smart.
<iamnotarobot>	i dont understand the notion of name-binding
<thj>	snyp_: but i can't really give them an answer there and then, without digging back in memory and finding the specific reason.
<pyon>	iamnotarobot: "name binding" --> sounds like time to read tapl, chapter 5.
<bizarrefish>	iamnotarobot: a closure is essentially a special type of function which refers to variables outside its definiton. liek this: https://ideone.com/zqxrnj
<iamnotarobot>	ok
<iamnotarobot>	closures make sense now, thanks.
<iamnotarobot>	tapl?
<thj>	bizarrefish: that doesn't give me much closure, hur hur
<pyon>	iamnotarobot: types and programming languages.
<squarepy>	a closure is a poor man's object and an object is a poor man's closure
<pyon>	squarepy: both are poor man's first-class functions for me.
<squarepy>	he
<iamnotarobot>	side note, when people describe something as "first-class", what precisely is that meant to mean?
<bizarrefish>	iamnotarobot: a name is a variable name, like 'x' or 'counter'. that name is 'bound' to a specific place. normally, you can figure out what place a name is bound to by looking at the code. a name can refer to a number of places, such as a variable defined in a loop in c#, which creates a new place on each iteration
<iamnotarobot>	bizarrefish, thanks
<bizarrefish>	iamnotarobot: first-class means that there is syntactic support in the language for it, normallhy
<bizarrefish>	*normally
<pyon>	iamnotarobot: it can be dynamically created and manipulated. for example, functions aren't first class in c, because you can't create new functions at runtime.
<thj>	having english as a second language, and learning the meanings of many english words through computing, it took me far too long to understand why the "master" and "slave" names for the drives on an ide cable aren't very politically correct...
<bizarrefish>	iamnotarobot: pyon has better answer
<snyp_>	thj: lol yeah... if someone asks suddenly why you did that i can see how you can be almost clueless and need time to recap everythin, it's happened to me, where the guy who asks the question is myself.
<ams>	mooo
<inphase>	pyon: you can, it's just not pretty.
<pyon>	inphase: not using the language itself.
<iamnotarobot>	so a functor would be a sort of pseudo first-calss function? or is that not quite right?
<dreams>	bizarrefish: a name is not necessarily a variable name, when we speak semantics. 1 is a name for (a literal) which denotes the mathematical object 1.
<pyon>	inphase: now, sure, if you rely on implementation details that aren't in the standard, sure, you can create your own functions.
<thj>	snyp_: i think it's what happens to you when programming becomes second nature to you.
<squarepy>	pyon, first class functions for me means you can call it without invoking it and it returns the function object, any sense in it?
<vendu>	pyon, ever hear of concurrent pascal? :p
<snyp_>	i see
<pyon>	inphase: but the standard itself says that programs with undefined behavior aren't valid c.
<pyon>	vendu: no
<thj>	snyp_: you start doing things without thinking about them, almost.
<snyp_>	mhm
<pyon>	squarepy: the ability to call functions doesn't make them first-class.
<pyon>	squarepy: it's the ability to dynamically create them.
<squarepy>	k
<vendu>	pyon, i have a copy of this one: http://www.amazon.com/concurrent-compiler-minicomputers-lecture-computer/dp/3540082409/
<vendu>	:)
<bizarrefish>	dreams: i guess i have spent too much time with lisp and such, where a 'name' is a very specific language-provided thing. it's one of those things which depends on point of view
<pyon>	squarepy: in haskell, lisp, javascript, etc., you can create dynamically. in c, you're stuck with the set of functions you wrote in your source code.
<dreams>	bizarrefish: and first-class means the whatever object we have, said object is in the universal disclosure of the language.
<technodrome>	every time i join this channel i can see the word lisp somewhere
<thj>	one day, they will invent a programming technique where upon you tell the computer what you want the result to be, not how to compute it, and it'll be great for the first few days until every programmer loses his job. :p
<squarepy>	hehe technodrome
<bizarrefish>	technodrome: you can't escape lisp. it's actually everywhere. javascript started out as lisp and only grew a c-like syntax for politcal reasons.
<technodrome>	its true in a weird way
<squarepy>	thanks pyon
<technodrome>	bizarrefish: i’ve heard that story a few times
<bizarrefish>	technodrome: good, cuz it significant :)
<technodrome>	it is, but in realtiy what we have now isn’t really anything like lisp
<thj>	me? i like lithp...
<dreams>	thj: there exist such languages; those falling under the declarative paradigm.
<squarepy>	god created javascript in 7 days and he was in a hurry
<technodrome>	the fact javascript that everything is a closure , doesn’t always make it lisp
<thj>	dreams: yes, but they are limited-scope.
<technodrome>	the power of lisp / scheme are the s’expressions
<bizarrefish>	technodrome: js has eval. c# has homoiconicity in the form of expressions. clojure is essentially a modern lisp.
<vendu>	pyon, the book didn't cost much and i figured it might be good knowledge about how to do compilers for systems with scarce resources (i.e. efficient ones) :p
<technodrome>	i like clojure bizarrefish
<dreams>	thj: how are you defining scope.
<vendu>	what's up folks?
<bizarrefish>	vendu: closures and lisp :p . (again)
<thj>	dreams: well, i mean they're often for specific purposes.
<pyon>	dreams: appealing to categorical semantics, perhaps we could say that a first-class object is one whose type satisfies a suitable universal property? e.g., tuples are tensor products (in strict languages) or cartesian products (in lazy ones), function types are inner homs, etc.
<vendu>	bizarrefish, :p
<technodrome>	i did scheme stuff for school, but i’ve never used it outside
<pyon>	s/tuples/tuple types/
<vendu>	bizarrefish, have you read lisp in small pieces? it's expensive, but i've heard good things about it =)
<vendu>	technodrome, i did scheme back in the university too :)
<pyon>	dreams: on the other hand, there's no convenient universal property for c function pointers - ergo functions aren't first class in c.
<dreams>	thj: no. haskell is one example (to some extent since its weakly declarative).
<bizarrefish>	vendu: unfortunately no. i need to read more :/
<technodrome>	all i do is python and php , oh noes
<vendu>	bizarrefish, wanna see a partial list of my book collection? :p
<technodrome>	php for drupal, python for django
<bizarrefish>	vendu: ...nobody's ever asked me that before
<thj>	dreams: can you tell it to find the frequency components of a signal without first teaching it to do a fourier analysis?
<vendu>	https://github.com/vendu/os-zero/blob/master/notes/booklist.txt
<vendu>	bizarrefish, there =)
<vendu>	aha, gotta add the art of computer programming boxed set :)
<vendu>	i got it for xmas from my sister <3
<vendu>	:d
<thj>	dreams: my statement was making a deliberately unreasonable demand as a joke. only strong ai could pull off what i was trying to say, lol
<bizarrefish>	vendu: information theory is probably the thing i'm studying next.
<dreams>	pyon: hmm, i suspect that there is work for c pointers. i'm pretty sure i've seen one.
<vendu>	bizarrefish, i'm just a tinkerer/hacker (ex-uni student) who likes low-level stuff =)
<vendu>	bizarrefish, some of my projects are listed at http://vendu.twodots.nl/projects.html :)
<akersof>	http://www.paulgraham.com/avg.html : or how lisp beat the world
<bizarrefish>	vendu: gainfully employed ex-tinkerer here.
<paxcoder>	akersof, bleble
<dreams>	thj: ugh, no not that kind. your wordings though described declarative programming.
<vendu>	bizarrefish, hehe :)
<vendu>	bizarrefish, i'm retired already
<vendu>	even though i'm only 41 :)
<thj>	dreams: sort of. i always felt they overpromise a bit with how they describe themselves.
<vendu>	paranoid schizophrenia, but nothing to worry about - abilify works wonders for me :)
<iamnotarobot>	are there any reasons why one might choose not to develop using an ide?
<bizarrefish>	currently doing 'nutritional therapist' course. on top of that, work, and life, not much time for tinkering :(
<thj>	dreams: if you took what people say about declarative languages literally, you'd be like "yay, i don't have to learn to code?"
<ihatehex>	vendu, that's the best schizophrenia!
<ukrainianalek>	if shorting a string means saved time but slightly more vulnerabilities .. is it worth it?
<vendu>	ihatehex, hehe
<vendu>	:)
<iamnotarobot>	the only reason i've personally experienced is memory footprint
<vendu>	ihatehex, the funny thing is that i'm possibly better than ever or in a long time, yet i'm retired and have all the time to hack code, hang with friends, get stoned etc. :p
<thj>	dreams: i mean, in reality, even with those languages, you do have to describe the "how it happens" bit. you're just doing it in a different way.
<ihatehex>	vendu, think you need to be older than you are for an actual 'retirement'
<ihatehex>	:p
<vendu>	dreams, what about c pointers? :p
<bizarrefish>	iamnotarobot: ides are good for those who are unfamiliar with the language and libraries. in most cases, the best option. with enough experience, features like syntax checking become unnecessary.
<vendu>	ihatehex, hehe yeah =)
<vendu>	i'm a poor man, money-wise, but i enjoy the freedom :)
<thj>	dreams: especially if you start taking out the built-ins/intrinsics in those languages.
<paxcoder>	bizarrefish, maybe if you only work with one language
<ukrainianalek>	if shorting a string means saved time but slightly more vulnerabilities .. is it worth it?
<dreams>	thj: from the literature, declarative-ness is measured by two components: control + logic. they don't say you don't have to code, what they mean is that the control component is to a large extent not your responsibility (its the implementation's responsibility), so that you can focus on logic.
<vendu>	ukrainianalek, be a bit more precise of what you mean :)
<thj>	dreams: sure, i'm more refering to evangelical texts you find in places on the internet.
<thj>	dreams: i mean, you took my statement, which is similar to them, to mean that.
<bizarrefish>	righty, i gotta hit the hay
<bizarrefish>	night all
<paxcoder>	nighty night
<vendu>	oops :)
<thj>	dreams: presumably because you read or heard a definition like that somewhere.
<dreams>	thj: yes by convention, you tell it what to do (the logic). and it takes care of the operational details.
<paxcoder>	dreams, declarative = high level?
<mark4>	can someone take a look at this implementation of the arduino millis() function ported to linux and tell me why the hell its not working?
<mark4>	https://gist.github.com/107ac02f96672487b04d
<thj>	dreams: i said to tell the computer what you want the result to be, not how to compute it. ;)
<mark4>	actualy thats old, t is now a uint64_t not 32_t
<thj>	dreams: per your broad interpretation, use of a sufficiently large library or framework would fit that interpretation.
<nitrix>	thj: the problem with that is if you know the result already, then there's no need for a computation.
<dreams>	thj: you tell the computer the logic, and not how to compute it. thats almost how declarative languages are. the results are derived from your logic, unless you mean the results without logic which does not make sense.
<thj>	nitrix: ah, but what if you could show it by example?
<mark4>	https://gist.github.com/367c4ed2878bf73fd1b1
<mark4>	updated code
<thj>	dreams: bingo
<nitrix>	thj: then there'd be a margin of error.
<paxcoder>	this is a silly discussion
<thj>	dreams: it was a joke, so
<dreams>	paxcoder: no. but declarative languages are obviously high-level.
<thj>	dreams: i was of course wishing for the unreasonable thing.
<thj>	dreams: results without logic, that is.
<mark4>	dreams define "declarative language"
<mark4>	would forth qualify as one?
<paxcoder>	dreams, why not? abstractions mean you're not saying how.
<nitrix>	thj: this is how genetic programming actually works.
<thj>	nitrix: sure, neural networks also
<mark4>	so any chance someone can take a look at the link i posted?
<paxcoder>	nitrix, carrot and a stick must have logic
<dreams>	paxcoder: declarative are high-level yes. not "declarative = high-level".
<thj>	however... it was a joke...
<mark4>	a call to millis() followed by a delay followed by a second call to millis() and the second calls return value is lower
<mark4>	sometimes
<paxcoder>	dreams, why not?
<thj>	i will never do standup comedy in front of a live #programming audience. all the jokes will die in a storm of logic objections.
<nitrix>	mark4: careful with that claim.
<mark4>	: foobar lots of forth code here ;  // define foobar
<rainb>	well, it's not part of the language yet 99.99% of c progreammers use it
<mark4>	1 2 3 foobar  excecute foobar at compile time
<rainb>	so it's kinda part of the language
<mark4>	nitrix thats still not extending the language
<rainb>	like, lambdas?
<rainb>	lol jk
<nitrix>	mark4: it is because it introduced new semantics.
<paxcoder>	mark4, let's do this: what do you think the declarative "what" (vs "how") means?
<mark4>	paxcoder, as applied to what?
<mark4>	and how?
<mark4>	 :)
<paxcoder>	i take it you won't answer?
<nitrix>	amark4: ams: and the c language is described as a language syntax, constraints, semantics, and library facilities.
<cannap>	hi
<mark4>	paxcoder,  thers not much point
<nitrix>	mark4: ams: he managed to add new syntax, new contraints and new semantics, without touching the library.
<paxcoder>	mark4, how do you reckon?
<nitrix>	that's an extension of the language by definition.
<mark4>	nitrix, there are non  standard libraries. those libraries are not in the standard therefor they do not extend the language itself
<paxcoder>	nitrix, constraints?
<rainb>	mark4: same with forth
<rainb>	lol
<nitrix>	paxcoder: s/contraints/constraints/ yeah.
<mark4>	rainb no. there is no forth standard. screw the ans forth team they did not define the forth language but a langhuage of the same name
<paxcoder>	nitrix, i didn't notice you misspelled. i wonder what you mean, and why you didn't bundle it with semantics.
<mark4>	"the ans forth standard does not describe the forth programming language but a language of the same name"
<mark4>	 -- chuck moore --
<nitrix>	paxcoder: they are two different things.
<rainb>	wat
<mark4>	any time anyone writes a "program" in forth what they are doing is extending forth to be that program
<paxcoder>	nitrix, can you give an example?
<mark4>	there is technically no such thing as a forth program. everything in forth is forth
<ams>	nitrix: you cannot add new syntax to c.
<mark4>	: constant create , does> @ ;
<ams>	nitrix: you can add new function call like hacks .. but not new syntax.
<rainb>	so forth is an interpreter?
<rainb>	lol
<mark4>	: const create , does> @ state if literal then ; immediate
<paxcoder>	mark4, all i see is a lot of fanboyism here.
<pyon>	what's the point to adding new syntax? syntax is irrelevant. just make the core language's semantics expressive enough for whatever you might need.
<ams>	rainb: yes, and no.
<pyon>	in other words, category theory, dammit!
<nitrix>	ams: you actually can because preprocessor is earlier in the translation phases, prior to parsing.
<ams>	nitrix: no, you cannot.
<mark4>	paxcoder, i am a fan of forth, i think that forth is the software engineering solution in all cases.  the industry disagrees so...
<mark4>	but my arguments still stand
<nitrix>	ams: prove me wrong.
<paxcoder>	mark4, i saw no arguments
<ams>	nitrix: ok, do me a macro for infix notation.
<mark4>	you chose not to
<ams>	nitrix: i want it to work as normal part of the language
<paxcoder>	mark4, i only saw fanboyism, as i said. no practical advantages.
<ams>	nitrix: i.e., i want to be able to write for (i = 0; + i i; + 1 i)
<mark4>	still need to find out why my millis() function is fubar :/
<mark4>	no practical advantages to what?
<mark4>	forth over something else?
<ams>	nitrix: or better yet, i wanna just delcare stuff in the middle of a body in c90.
<mark4>	for any non trivial application forth is 100 times smaller than the equiv c.  development time in forth is 1000 to 10,000 times faster
<mark4>	for example.  libncurses is 600k in size
<nitrix>	ams: you're approaching the problem from the opposite side, by describing limiting aspects of c (constraints) that makes the additions of new syntax elements impossible.
<nitrix>	ams: you're currently just proving me right.
<paxcoder>	mark4, you just came up with those figures
<mark4>	my much more powerful forth version of the same thing (not a port but a stand alone implementation) is 6k in size
<nitrix>	ams: again, prove me wrong.
<paxcoder>	not the 100 times smaller part. that's besides the point. i'm sure apl is even smaller.
<mark4>	paxcoder, the development time?
<mark4>	write 60,0000 lines of code, wait 30 hours for it to compile then start debugging
<mark4>	or
<mark4>	write a primitive, test it immediately. write a second and test it. and a third and test it
<nitrix>	ams: you don't understand the difference between syntax and constraints, right? why even argue?
<paxcoder>	mark4, you sound exactly like lisp fanboys. yet lisp is still cumbersome.
<mark4>	use you low level primitives to create higher level definitions and test them. at all stages of development everything that has already been written has already been tested
<cannap>	i think i need more brain for this here
<mark4>	paxcoder, yes it is but forth is not... its just a bit squirly for people not used to its rpn
<exio4>	nitrix: if i understood correctly, you're saying you can have any new subset of c given that you start with c
<mark4>	paxcoder, development in forth is orders of magnitude faster than just about any other language you can think of because as i said, at all stages of development, everything that has already been developed has already been testefd
<paxcoder>	about to saying mark4 something paxcoder forth
<paxcoder>	rpn
<mark4>	meaning if a function doesnt work the error is "more likely" to be in that function (not a guarantee of course)
<exio4>	nitrix: if you want to add a new constraint, i'd like static checking, by the way, is there any way to do this kind of stuff?
<ams>	mark4: nitrix sounds like north korea ..
<nitrix>	exio4: the c preprocessor is quite limited, but it does allow extending c to some degree. again, preprocessing is done is the early phases of the translation exactly for that reason, before the parsing.
<ams>	the c preprocessor does not allow extending c at all.
<ams>	period.
<exio4>	nitrix: you can't extend much more than a little subset of syntax
<ams>	cpp output must be exactly _c_
<ams>	you cannot extend it, you cannot make new syntax with it.
<henke37>	yes, but it's the cpp input that matters
<exio4>	yeah, you can get pretty far by toying a little bit with it
<nitrix>	paxcoder: maybe no one wants to talk about high and low level buzz words.
<pyon>	henke37: in all fairness, cpp doesn't buy you much over c without the preprocessor.
<paxcoder>	nitrix, you'd rather talk about the c preprocessor?
<nitrix>	am i not entitled to do that?
<paxcoder>	go ahead mate, not sure what it will accomplish, but sure you are
<pyon>	henke37: besides #ifndef guards, cpp doesn't really let you do anything useful that couldn't be done with the rest of the language. and that's actually a good thing! because cpp sucks.
<nitrix>	paxcoder: why in the world would i ask you permission to talk about the c preprocessor?
<paxcoder>	what the heck is going on here today?
<nitrix>	paxcoder: the channel isn't limited to a single discussion, nor entity talking. if that was the case, it'd be a monologue, not a discussion.
<ams>	mark4: your remark abotu code size is unfair, ncurses handles quite a bnit.
<exio4>	the only thing i see that you could play fancy with cpp macros is write things that look like functions and take types as parameters
<paxcoder>	nitrix, you're clearly upset about something
<nitrix>	paxcoder: ams is getting on my nerves for sure.
<paxcoder>	nitrix, never mind the drunk
<ams>	nitrix: cause you are talking in your nightcap.
<ams>	nitrix: you clearly have no frigging clue what you are blabbering about.
<ams>	cpp _cannot_ extend the c language, by definition.
<nitrix>	ams: if you want to live in your delusions, fine. you tried to convince me, i tried to convince you. let's stop here.
<ams>	cpp takes c, and outputs c.
<ams>	that is it.
<ams>	nitrix: so are you saying that i can take cpp and output non-c which a standard c compiler will accept?
<nitrix>	ams: i'm asking you to change topic.
<ams>	nitrix: no.
<ams>	i have no urge to do so.
<mark4>	ams i have nothing bad to say about ncurses. but the only thing i dont do that it does is sub windowing. i can also do stacked movable windows which would be extremely difficult with ncursses
<darkelement>	how can i make a java function that will accept any parameter
<ams>	mark4: and supports +inf number of terminals, and operating systems
<mark4>	ams so does mine. i do the same parsing of terminfo that it does
<mark4>	i just dont fix stupidnesses in terminals the way it does
<ams>	mark4: sorry mate, calling bullshit on that.
<exio4>	cpp doesn't takes c as input
<bf4grenades>	trolling?
<mark4>	ams om me your email addy ill send you my terminfo parser written in forth
<vdamewood>	dammit, i missed the bullshit.
<mark4>	pm
<ams>	mark4: ncurses isn't a terminfo parser.
<_blizzy_>	look at all this stuff
<_blizzy_>	i don't understand
<ams>	mark4: it is basically a terminal emulator
<mark4>	ams no but it uses terminfo to determine how to handle cursor movement (and other things) in terminals
<ams>	mark4: with lots of gory shit.
<ams>	mark4: that works on to many platforms to mention
<mark4>	ams no. its not a terminal emulator, its a wrapper for all terminal emulators giving them all a consistent api/interface
<ams>	mark4: parts of it do actually emulate a terminal
<mark4>	ams ported my forth to arm linux and my curses code works there too
<mark4>	used to have a *bsd port but thas no longer maintined.. it worked there too
<ams>	mark4: again, try porting it to hpux, aix, irix, ultrix, bsd 2, bsd 4, cygwin, ...
<mark4>	ams if it has terminfo my code will work there
<vdamewood>	i have a copy of 2bsd you can try porting it to.
<ams>	mark4: and then try getting it to work sanley on vt100, vt240, a real tty, whatever tektronix might spit out as a vector terminal
<darkelement>	guys how can my java function accept any value as a parameter?
<ams>	mark4: no, it won't
<pyon>	exio4: http://conal.net/blog/posts/the-c-language-is-purely-functional
<pyon>	exio4: so-called "c" programmers actually program in cpp!
<exio4>	pyon: lol
<ams>	mark4: note i'm not trying to defend c ..
<ams>	mark4: it is a immensly crappy language
<mark4>	ams your speaking from a wealth of ignorance about my code :)
<ams>	mark4: no, i am speaking from my experience writing code for various platfrorms.
<mark4>	ams theres nothing wrong with c really. its c coders that suck!
<vdamewood>	darkelement: make it take values of type object.
<ams>	mark4: cause they choose to write in c? ok .. :-)
<vendu>	hey again vdamewood, nitrix, ams, pyon, all of you :p
<pyon>	vendu: hai
<exio4>	vdamewood: are java generics that crappy? :d
<nitrix>	vendu: welcome back.
<mark4>	ams ams not everyone does. tho... very very few people code in forth
<vdamewood>	vendu: i shall hey, your hey.
<bf4grenades>	i'm a crappy c# coder
<vendu>	nitrix, ty :)
<mark4>	you ever watch satellite tv? via direct tv?
<ams>	mark4: i know a few.  my self included at times.
<vdamewood>	exio4: no, it was that bad of a question.
<mark4>	their satellite tracking systems are all done by a company that used to be called vertex rsi in longview texas
<ams>	mark4: but i will take you up on the offer of code, ams@gnu.org
<mark4>	100% of their code was forth. the satellite tracking and the mux.demux for the signals
<mark4>	100% forth.
<ams>	shurg
<mark4>	they are now general dynamics c4 systems and... very little forth is left
<pyon>	exio4: java generics are so crappy that even unityping is better.
<ams>	i could write it in lisp, and be 10% smaller, and faster. =)
<pyon>	exio4: that's how much java generics suck.
<exio4>	pyon: well, that's its whole type system, not just the generics
<mark4>	ams i can send you my unreleased arm version of my forth do you have an arm linux system thats ***not**** debian based?
<pyon>	exio4: no, generics are a particularly crappy part of java's type system.
<ams>	mark4: i have a bbb running arch gnu/linux somewhere.
<vdamewood>	i wonder if ams even has an arm system.
<pyon>	exio4: i'm okay with erause, but not in the presence of reflection. it effectively makes reflection unsound.
<ams>	vdamewood: i use it as my build/bug/devel platofrm.
<pyon>	exio4: erasure* sorry
<mark4>	ams cool this runs on my raspberry pi 2's and my beagleboard xm. both running gentoo
<ams>	vdamewood: it boots of tftp, loads a nfs drive with some init stuff, and fires up whatever is configured.
<exio4>	pyon: right, i still think that's just another wart in its type system, just like those lovely covariant arrays
<ams>	vdamewood: i then connect to it via slime/tramp, and hack away.
<exio4>	pyon: why fix something if you can have a thing that half-works?
<vdamewood>	ams: ah, i heard a rumor that arm holdings were stingy with the design specs and to practically support arm requires a blob or two.
<ams>	vdamewood: not for the bbb's, rpi are blobware.
<ams>	mark4: the curses stuff would be more interestin than yet another forth environment.
<pyon>	exio4: i hadn't heard of the terms "covariant" and "contravariant" when i was 15, but i could've perfectly explained why java's arrays are "wrong". (now i know the term is "unsound", of course.)
<ams>	mark4: i find forth interpreters as interesting as people writing lisp metaevaluators ...
<pyon>	exio4: i think anyone with some intuitive understanding of what "extracting" and "putting in" entails from a type safety pov... could've immediately identified java's array covariance as a design mistake.
<cannap>	gn8
<vdamewood>	ams: google is no help, what are bbb's and rpi's?
<pyon>	it's really just common sense. category theory just confirms that common sense.
<ams>	vdamewood: rpi == raspberry pi, bbb == beagle bone balck
<ams>	mark4: so .. real world code is far more interesting to read to me.
<vdamewood>	ams: ah, so it's just the system, not the arm arch itself.
<ams>	and like .. i can write forth in lisp ... so ha!
<john577>	lol this is programmer porn
<exio4>	pyon: well, most things in mathematics end being just formalized common sense after you know them
<john577>	.
<exio4>	pyon: (or at least they seem like that!)
<denommus>	what a nice day at work
<denommus>	i spend the whole day programming in haskell, with my leader's approval
<vdamewood>	cool, i can get a bbb from mouser.
<ams>	mark4: (setf *readtable* *forth-readtable*) : fib 0 1 rot 0 ?do over + swap loop drop ;
<ams>	mark4: nom nom nom
<john577>	i think
<john577>	for me it's about what it is you made and what it does for others
<john577>	i honestly care less what it was coded in
<ams>	john577: as long as i can code it in lisp i don't care what it is coded in =)
<vdamewood>	too bad my raspberry pi arrived today.
<john577>	i ditched c because i spent every day building objects that exist in .net and picked up c#.net
<nintendo3ds>	i've occasionally read partway through sicp but nothing stuck out to me as extraordinary
<john577>	and ur like henry ford
<john577>	in any color as long as it's  black
<pleiosaur>	or like henry ford, you can be a fascist
<john577>	huh?
<john577>	fill me in plz
<nintendo3ds>	( ͡° ͜ʖ ͡°)
<denommus>	john577: lots of big corporations back in the day invested big money in fascism and nazism
<denommus>	john577: or they received big money from nazism and fascism
<denommus>	john577: i'm not quite sure
<denommus>	john577: ford was among those corporations
<john577>	like mercedes
<john577>	which je
<ams>	ibm .. vw ..
<john577>	jews drive
<ams>	john577: stop it
<john577>	lol
<denommus>	hugo boss
<darkpassenger>	whassup bitchaaz !
<infinitone>	o_o
<john577>	anyways
<paxcoder>	ibm
<john577>	happy mothers day to all
<john577>	in advance
<infinitone>	are you insinuating something
<john577>	remember  u got someone to thank for your life
<john577>	i don't know what insinuating is
<ams>	mm.. i should write a colorforth readtable ..
<infinitone>	onwards then...
<infinitone>	i wrote up some digestable notes on java 8, jee, spring, etc.
<infinitone>	good for a light read
<infinitone>	https://github.com/aysark/notesonjava8
<pyon>	wait, someone with a fsf staff cloak is banned from here? :-o
<ams>	pyon: no?
<pyon>	[18:56] == nully [user@fsf/staff/nully] has joined ##programming
<pyon>	[18:56] == mode/##programming [+b *!*@gateway/shell/*] by chanserv
<pyon>	[18:56] == mode/##programming [+b *!*@gateway/shell/*] by chanserv
<pyon>	err
<pyon>	[18:56] == nully was kicked from ##programming by chanserv [user is banned from this channel]
<ams>	pyon: right .. so an fsf staff member banned someone from gateway/shell/*
<ams>	oh
<ams>	hmm...
<ams>	why?
<pyon>	yeah, i'm surprised.
<ams>	person hasn't said anything ..
<ams>	pyon: interesting, i just got the message from chanserv now ..
<pyon>	:-p
<ams>	0207 ..
<_w_>	chanserv [chanserv@services.]: nully has flags +b in ##programming because they match the mask *!*@gateway/shell/*.
<_w_>	and discussion of bans should really take place in ##programming-ops
<darkpassenger>	hi all
<pyon>	okay.
<pyon>	darkpassenger: hai
<darkpassenger>	hai pyonggg
<pyon>	g?
<darkpassenger>	pyong, instead of pyon
<ams>	_w_: prolly.
<darkpassenger>	don't worry about it
<ams>	_w_: nully is aware, seems something going batshit.
<denommus>	i find it amusing when someone tells me that i shouldn't write a script in haskell because of maintenability and proceeds to write a perl script
<_w_>	ams: nothing is going batshit, everything is working as intended
<mark4>	ams btw that fib definition has a bug in it. say 40 fib and it returns the 39th fib :) my version doesnt have that bug lol
<pyon>	denommus: lol
<pyon>	ikr
<_w_>	well, how he can join the channel if the ban applies is a mystery, but otherwise
<ams>	_w_: well, i consider something is going batshit when one nukes gnu.org machines.
<pleiosaur>	denommus: to be fair it's probably easier to hire someone to maintain your perl script than to maintain your haskell script :p
<pyon>	pleiosaur: um, really? haskell is super easy to understand. (just not operationally!) which is the number 1 prerequisite for maintaining a piece of code.
<mark4>	ams boss came in to nag me with "is it done yet", just emailed you my arm (thumb2) forth
<ams>	mark4: ah
<ams>	mark4: thanks.
<mark4>	thats not top secret code but its not ready for prime time yet, still some bugs and no time to work on it
<denommus>	pleiosaur: that might be right back in the 90s, but i don't know a lot of perl programmers nowadays
<denommus>	pyon: i find that the two biggest struggles for someone that doesn't know haskell looking at the code are pattern matching, the syntax for function types, the syntax for function application and the do syntax
<denommus>	pyon: all of those are pretty alien for most people. except, maybe, function application for rubyists
<denommus>	pyon: (though ruby still uses commas)
<exio4>	pyon: understanding anything opertionally is a pain everywhere anyway
<darkpassenger>	so the idea is online communities
<puddlejumper>	man netflix on the wiiu is gayer than _blizzy_
<darkpassenger>	from a programmer point of view, how does one build an online community ?
<puddlejumper>	darkpassenger: users and their data
<darkpassenger>	yeah, gathering user, what makes the niche user goes for a community
<puddlejumper>	but i guess it would really start with why you're gathering to begin with
<_blizzy_>	i mean, i'm watching pitch perfect
<darkpassenger>	puddlejumper: well i wanna change the world (or something like that) so online community
<_blizzy_>	so i can't deny.
<puddlejumper>	everything can be done with facespace and linktin or w.e it is called
<pyon>	denommus: haskell's syntax i can agree is weird for someone used to c-like languages.
<darkpassenger>	make money (online community) etc... take your pick. gathering, don't want to talk to fucking marketer but it might be necessary
<pyon>	denommus: but pattern matching is really straightforward.
<darkpassenger>	pyon: weird but easily adopted
<darkpassenger>	i mean weird at first sight
<puddlejumper>	darkpassenger: you'd probably make more money with ads
<darkpassenger>	haskell can be very friendly
<darkpassenger>	puddlejumper: yeah, seo + ads
<puddlejumper>	_blizzy_: idk what that means
<pyon>	darkpassenger: oh, sure. getting used to a new syntax is more of an emotional thing than anything else. from a purely intellectual pov, it's a trivial exercise.
<pyon>	darkpassenger: but don't underestimate emotional factors in language adoption.
<mark4>	ams when you run that do "make clean" then
<ams>	mark4: noted.
<darkpassenger>	well that ws unexpected...and refreshing
<mark4>	ams when you run that do "make clean" then "make" then time ./extend  <--- this last part should impress you a little :p~
<puddlejumper>	darkpassenger: what are your plans ?
<mark4>	anyway time to go home.
<ams>	mark4: why?
<mark4>	take work with me :/
<_blizzy_>	puddlejumper, pitch perfect is a movie.
<_blizzy_>	a good movie.
<darkpassenger>	puddlejumper: basically a community for pet rat owner
<puddlejumper>	darkpassenger: like. literal rats ? the rodents ?
<mark4>	on my 1mhz raspi 2 it compiles 229k of code in 0.13 seconds
<darkpassenger>	i mean there is absolutely no communities for pet rat owners that look like they're going into the 21st century, im thinking discourse instead of phpbb on animated gif background, you know what im ean
<mark4>	actualy 600mhz pi
<darkpassenger>	puddlejumper: yeah, pet rats aka rattus norvegicus
<denommus>	pyon: but most programmers aren't used to it
<puddlejumper>	darkpassenger: cool, i had a rat once
<darkpassenger>	puddlejumper: didnt you find the experience very fun and grew attached to the little bastard ?
<ams>	mark4: the rpi is not 1mhz ..
<puddlejumper>	darkpassenger: yeah, i liked the thing a lot actually
<mark4>	the pi2 is
<mark4>	if you oc it
<mark4>	which you can do without voiding now
<puddlejumper>	darkpassenger: nowadays i'm more of a bird guy
<mark4>	anyway i gotta go home its 730:pm
<_w_>	*!*guide_x*@*$##fix_your_identification
<darkpassenger>	puddlejumper: oh yeah ? what kind of bird ?
<_w_>	oops
<_w_>	that's the one
<puddlejumper>	darkpassenger: i currently have a parakeet
<ams>	mark4: no it isn't
<darkpassenger>	parakeet, i'll have to google that up to be honest
<ams>	mark4: you are about 899mhz wrong.
<darkpassenger>	pyon: im glad you mentionned the emotional factor
<puddlejumper>	darkpassenger: some people call them budgies?
<pyon>	darkpassenger: heh.
<darkpassenger>	pyon: pure rationality is for computers, humans have to deal with emotion and pure rationality
<darkpassenger>	puddlejumper: ok i think i know what you mean, my rat "poncho" died last monday, i was quite sad for a day, buried the poor guy
<puddlejumper>	darkpassenger: the rat i had only lived for a few months
<pyon>	darkpassenger: yeah. for good or for bad, when you solve problems past a certain level of complexity, you get attached to the way you have solved the problem.
<puddlejumper>	darkpassenger: a girlfriend and i got it together actually
<ams>	.. darn, he left ..
<guidex>	good evening.. how do you get people interested in a tasking system like basecamp or teamwork? seems like no one is interested in project management outside their email inbox
<ams>	was reading his (mark4) forth thingie ..
<dreams>	darkpassenger: two rats sneaked into my kitchen. i killed both. rats are nasty in general.
<darkpassenger>	puddlejumper: i miss my rat, i got another but i might have to buy another two younger ones, to keep the one survivor from being too lonely...but then im back into the circle of love and pain of losing an animal.
<pyon>	darkpassenger: what kind of food do you give a pet rat? :-o
<darkpassenger>	dreams: you're talking about wild rats, im talking about pet rats, which are nice and very loyal, much like a dog :p
<puddlejumper>	pyon: he feeds them human remains
<baum>	pyon: cheese - but you might want to remove the trap first
<ams>	... that sounds ..
<pyon>	lol
<darkpassenger>	pyon: veggies and pellets (processed food for pet rats)
<dreams>	darkpassenger: ah.
<puddlejumper>	darkpassenger: my gf said she wanted a pet so i got the rat and that backfired on me :|
<pyon>	ah!
<ams>	puddlejumper: do you go to the mourge (sp?), or like .. cut your own flesh and give them that? how does it work..
<puddlejumper>	darkpassenger: and i ended up loving the odd creature :s
<pyon>	puddlejumper: your girlfriend didn't like the rat? :-o
<puddlejumper>	pyon: she did
<pyon>	oh.
<puddlejumper>	ams: i was joking :p
<pleiosaur>	human remains are easy to get, just go to the cemetery and look for the freshly-turned earth
<ams>	puddlejumper: darn :(
<pyon>	pleiosaur: lol
<darkpassenger>	puddlejumper: well rats are ...rat sized dogs :p
<ams>	pleiosaur: do you know of any legal ways? :-)
<puddlejumper>	ams: cut off a finger
<ams>	puddlejumper: typing is hardin that case..
<o0elise0o>	puddlejumper::its not the kind of rat with the giant human sized testicles that it drags behind it, right?
<darkpassenger>	well they have a big set of testicles
<puddlejumper>	o0elise0o: no, and that's disturbing :p
<o0elise0o>	is it a girl rat?
<o0elise0o>	or a neutered boy rat
<puddlejumper>	this topic is getting weird
<puddlejumper>	i'm disappearing for an hour
<o0elise0o>	my friend had hairless rats as pets
<o0elise0o>	they were boy rats and had human sized testicles, i'm not joking
<vdamewood>	sounds like fun with a golf club.
<pleiosaur>	ams: "legal" in certain jurisdictions, perhaps
<ams>	pleiosaur: that you know these things .. scares me. :)
<vdamewood>	sounds like someone has found the ghoul of their dreams.
<pleiosaur>	ams: the world is a cruel place, sometimes you have to be ready to sell human cattle on the black market to make ends meet
<o0elise0o>	anyone wanna see the end credits scene from the new avengers movie?
<vdamewood>	not me.
<o0elise0o>	i recorded it on my phone just to see how the quality was
<pyon>	pleiosaur: "cruel place" --> has treated me relatively nicely so far
<lf94>	ayyy mah 'grammahs
<pleiosaur>	pyon: either you're young, lucky, or unadventurous :)
<pleiosaur>	if calamity does not occasionally befall you, then i daresay you're not living at all
<dreams>	vdamewood: didn't know that ghoul is used in english too! they crossed the red line.
<ams>	pleiosaur: he is a haskeller.
<o0elise0o>	ayyyy papi
<pleiosaur>	pyon: like the letter "a" in english, drawn out
<pyon>	ah
<vdamewood>	dreams: lots of words from other languages are used in english.
<o0elise0o>	haha.
<dreams>	pyon: in some parts of england, it means yes.
<o0elise0o>	i have a massive toothache
<pyon>	:-o
<o0elise0o>	it started yesturday and instantly turned into a swallen obviously infected hell in my mouth
<o0elise0o>	im so desperate i asked random druggies in the hall for antibiotics
<nitrix>	o0elise0o: have you tried natural solutions like lemon, cinammon, etc?
<inphase>	o0elise0o: hydrogen peroxide is a little more legal.
<o0elise0o>	antibiotics are legal too
<o0elise0o>	the idea that some asshole wants to make money off my health sort of goes against my view of life
<nitrix>	h2o2 would work, but i doubt that's a good idea in your mouth. it'll taste disgusting and midly toxic.
<guidex>	i think it's great... making money off of health concerns
<guidex>	i don't see a problem with it
<o0elise0o>	h2o2?
<nitrix>	o0elise0o: that's hydrogen peroxide :3
<o0elise0o>	i have mouthwash
<nitrix>	:s
<inphase>	nitrix: it's in many brands of toothpaste...
<pyon>	inphase: "a little more legal" --> i thought anyone could have hydrogen peroxide in their first-aid kit
<nitrix>	o0elise0o: meh, better than nothing.
<vdamewood>	perhaps h2s04 would be better.
<vendu>	hey again guys :)
<inphase>	vdamewood: because no tooth, no ache?  :)
<vdamewood>	it's just hydrogen peroxide with s02!
<vdamewood>	inphase: sure why not.
<pyon>	vdamewood: why stop there? go pyrosulfuric: h2s2o7
<nitrix>	vdamewood: what could possibly go wrong with a clear, odorless and colorless liquid.
<_w_>	like water
<ams>	how about ... hsbf6 ...
<inphase>	now vodka, that could work.
<pyon>	ams: superacids, heh?
<nitrix>	funnily enough, i'm sure water killed more people than sulfuric acid.
<ams>	pyon: =)
<baum>	file transfer at 44mib/s is quite nice :)
<o0elise0o>	im waiting for you guys to teach me what i can use for antibiotics that i already have laying around
<pyon>	nitrix: lol ikr
<ams>	o0elise0o: garlic.
<o0elise0o>	seeing as i have no money which is why i cant go to the er to get antibiotics
<ams>	o0elise0o: salt.
<o0elise0o>	garlic?
<nitrix>	o0elise0o: cinnamon.
<baum>	well to be fair, there are third-world countrys with a better healthcare ;)
<nitrix>	ams: good night.
<o0elise0o>	yeah like canada
<o0elise0o>	..hehe
<o0elise0o>	nitrix::send me antibiotics
<o0elise0o>	next day ups
<nitrix>	o0elise0o: a phone is critical. antibiotics aren't.
<o0elise0o>	-_-
<nitrix>	xd
<o0elise0o>	well lets hope i dont die
<o0elise0o>	or i make it to the er just prior to me dying but after it turns so bad they are legally obligated to provide free health care to save my life
<nitrix>	that's be a sad way to die.
<rcyr>	lol
<nitrix>	maybe as much as peeing yourself in bed and dying from waking up and slipping on floor.
<rcyr>	'murrica!
<o0elise0o>	baum::i didnt say they are $50 i meant i would be willing to pay $50 if i had to and had the money
<baum>	rcyr: heck, i even got pain meds (containing antibiotica) for 3bucks 30pices this summer...
<nitrix>	oh? emergencies in the us are required to treat you if your life is at risk?
<o0elise0o>	yes
<o0elise0o>	thats the only time
<baum>	o0elise0o: oh i see
<rcyr>	baum: looks even cheaper than where i live (canada)
<nitrix>	rcyr: now i know where you live.
<baum>	rcyr: well, depends on the healthcare you get here - austria :)
<nitrix>	rcyr: expect someone to break in and steal your nas.
<nitrix>	>:3
<rcyr>	hehe
<o0elise0o>	i wish i had a clean syringe too
<nitrix>	o0elise0o: get a 3d printer.
<baum>	and print antibiotica
<o0elise0o>	yeah, i could drain the puss if i had a syringe
<o0elise0o>	i dunno what a 3d printer would get me
<nitrix>	everything you ever wanted!
<nitrix>	it could even make a 3d printer! isn't that fabulous?
<baum>	nitrix: it would be even more fabulous if you would send me a 3d printer you made :)
<nitrix>	yeah! that'd like, make me a super star, ninja coder or whatever recruiters uses to bait developers into a company :p
<nitrix>	let's make printers x]
<baum>	hehe
<pyon>	when people say "ninja coder" or "samurai coder", i can't help but think it's mighty time for a meiji restoration.
<electrojustin>	lol
<aewffwea>	pyon: i actually hate job postings like that...
<aewffwea>	pyon: they make me feel dumb
<nitrix>	i've told recruiters multiple times.
<pyon>	aewffwea: it's childish. it makes us programmers look like the commodity replaceable morons managers want us to be.
<nitrix>	can't believe they get away with it xd
<aewffwea>	pyon: something like that
<aewffwea>	pyon: i'm childish... i just like hiding it xd
<nitrix>	pyon: oh dude, you should've seen the wave we had at work of people leaving.
<pyon>	:-o
<nitrix>	pyon: they stopped trying to retain people by matching salaries. even for 5k or 10k.
<t_rex>	i want to ask a question about “flyway database migrations” is that off topic ?
<nitrix>	pyon: the ceo went as far as saying "everyone's replaceable"
<pyon>	nitrix: "well, okay, replace me, then. goodbye."
<nitrix>	pyon: thing is, it leaked out, the employees didn't being treated like shit and they all left.
<aewffwea>	nitrix: which company?
<nitrix>	pyon: e-x-aaaaclty.
<wagonboi>	in an adj matrix, what is the name for the values in the matrix? the degrees? or the edges?..?
<nitrix>	aewffwea: not going to name it.
<aewffwea>	nitrix: fortune 500 company?
<nitrix>	100
<aewffwea>	nitrix: let me check the list xd
<nitrix>	no need to guess. but point is, that's disgusting.
<nitrix>	i hope they change their mindset.
<pyon>	wagonboi: depends on what exactly you want to represent.
<nitrix>	you invest in your employees and they'll invest in your company. simple logic.
<pyon>	wagonboi: for example, if you want to represent a quiver, then each matrix entry will contain more than just a bit of information.
<aewffwea>	nitrix: do you still work there?
<nitrix>	aewffwea: until my position at facebook concretise itself.
<pyon>	wagonboi: btw, a quiver is like a directed graph, except there may be more than one edge between any pair of nodes.
<nitrix>	aewffwea: there's a limited amount of h-1b visas and i might be stuck waiting another year before moving to california.
<nitrix>	as far as i understood.
<aewffwea>	nitrix: are you on an h1b visa already?
<nitrix>	nope.
<aewffwea>	nitrix: do you work in the us?
<nitrix>	i don't, but it's a possibility with fb.
<aewffwea>	nitrix: did they offer you the position before april 1rst?
<nitrix>	i'm not hired yet, so no. so i'll wait a long time.
<nitrix>	right?
<nitrix>	i think it's 6 months intervals?
<nitrix>	aewffwea: i certainly would love it, but i'm still currently following their long process.
<rcyr>	wagonboi: the lookups are probably going to be faster on a set (if that matters)
<aewffwea>	nitrix: did you had 4 interviews or more already?
<nitrix>	aewffwea: you're quite curious :p
<aewffwea>	nitrix: i am :)
<nitrix>	i have to leave for supper :]
<aewffwea>	nitrix: i like knowing my options
<thj>	how important is socializing at work to everyone in here?
<nitrix>	thj: critical in a team. people aren't machines.
<o0elise0o>	lies
<thj>	nitrix: the background for the question is that i've been remote working for a team across the atlantic since last fall, and i'm increasingly left to my own devices.
<thj>	there is a chat room, but they're really using it more for internal jokes (that of course don't get because i'm not hearing their verbal conversations) than for real talk
<thj>	*i don't
<ori_b>	thj: see if you can schedule a week or so onsite every few months?
<thj>	ori_b: i've been attempting to since i joined the team, and while the manager agrees, it never happens.
<ori_b>	get them to pay, of course.
<ori_b>	thj: hm? if the manager agrees, give him a date, book the tickets, and send the bill.
<thj>	ori_b: i tried that, but more politely. i asked him if i should organize it on my own. his answer amounted to a no.
<_w_>	thj: perhaps your team just sucks
<thj>	a rough date has been proposed. as in, "somewhere around this month". but that has happened before.
<_w_>	it's perfectly doable to do permanent remote working
<ori_b>	_w_: it's doable, but if it's just one person remote, then it's really hard.
<_w_>	but the team has to accept that it means changing some of how they work
<thj>	oh, i'm doing it, however, i'm beginning to feel that it sucks, despite very handsome payouts.
<_w_>	as for socializing, i think it's irrelevant; keep things professional, and it doesn't matter whether you're friends or enemies socially
<thj>	i have used some of the money to set up a company where i am, and i have hired a guy. however, he's not really a programming team mate, so even though i have him, it's still tough.
<thj>	the problem will go away some day, if the company makes it, since i will simply have my own team.
<thj>	it's making it that far that's very tough right now. motivation is low because nobody really cares. except the manager, in the limited sense of "finish the work".
<_w_>	ensure there's metrics for your own work available, and you can ignore the others' lack of motivation
<_w_>	but it does certainly sound like you should make plans to end the working relationship you have
<thj>	i'm hoping i won't need to rely on their income for much longer. however, for the moment, it is financing 2 paychecks.
<thj>	it's one of those startups in san fransisco, and it's interesting work.
<thj>	the engineering part of it is good.
<ori_b>	thj: push harder to go spend time with the team, i'd say.
<nitrix>	working remotely isn't for everyone. i personally work best in a team and when i'm comfortable after couple months, i like take a day or two working from home.
<nitrix>	so enough to know the strengths and weaknesses of everyone, have code reviews, understand their opinions, having a good dynamic (not just people passing themselves the ball)
<nitrix>	but yeah, it's also refreshing staying home, not being rushed to work, then bring the laptop outside in the sun and work on a crazy algo.
<thj>	nitrix: the benefit of this arrangement is that it's flexible. they're far away in a different timezone, so i can choose when i work. and that's nice, because i do keep odd hours, and need more rest than your typical person. but yeah, it's too quiet.
<nitrix>	that's the problem. too quiet leads to less engagement :/
<nitrix>	i've done freelancing before, it was hard at some point to get anything done.
<thj>	i'd be delivering faster if i had the social aspect working.
<alsch>	try music for programming
<ori_b>	thj: have you discussed this with your manager?
<thj>	alsch: on occasions, that does speed me up.
<nitrix>	thj: i think there's a sweet spot. enough to keep in touch with the devs, not too much to have the management on your back.
<alsch>	there is music written specifically for programmers that stimulates the brain
<ori_b>	thj: if you haven't, i'd very strongly suggest bringing it up directly, without trying to soften it.
<thj>	ori_b: yeah, i have hinted at it. but basically, he never has time.
<thj>	well...
<thj>	is it reasonable to be so demanding? it feels wrong with the high pay.
<nitrix>	of course, so busy doing everything else but caring about the team that develop your product.
<nitrix>	typical manager getting the priorities wrong :p
<thj>	the impression i'm getting is that they show no love for the remote worker.
<thj>	i keep hearing about meetings, but i'm never included in them or briefed on them.
<nitrix>	i've had remote workers in my team and you're right, we didn't care that much.
<thj>	everything i know about the going-ons of the company is via hearsay.
<thj>	i find that very few people can genuinely bond over the internet. i can do it, and a few good friends i have can, but a lot of people can't.
<zacts>	hello
<nitrix>	we might understand better because we spend a lot of time on irc, exchanging ideas and helping others.
<vendu>	http://vendu.twodots.nl/files/mjolnir.png :d :d :d
<nitrix>	but, ehm, immagine being in an office and chatting with the remote guy all day.
<vendu>	it looks like the rooms finally get connected right :)
<nitrix>	they have pressure from managers and whatnot, so talking to you is probably not the first priority to comes to their mind.
<thj>	and when i say bond, that includes romance. i've more or less developed full-on relationships on the internet, that were continued without effort in real life.
<vendu>	nitrix, check out the screenshot i linked above :p
<vendu>	it's about damned time i fixed that stuff :p
<vendu>	hey zacts :)
<thj>	nitrix: yeah, chat is impractical for coding, since it steals keyboard time.
<miniman10000>	but it boosts morale and thus efficiency while programming
<thj>	nitrix: and somehow, skype calls are horribly clumsy for discussing code, even with screen sharing. i always feel like i'm temporarily retarded when i have to actually think during a skype call.
<miniman10000>	lol
<miniman10000>	just point to what your talking about
<nitrix>	thj: maybe they should try remote pair programming.
<nitrix>	just throwing ideas.
<thj>	oh man, yeah, if they had the overhead for that.
<nitrix>	"overhead",
<thj>	i mean they hired two more coders now, so they should have
<nitrix>	more and more compagnies only swear by that now.
<thj>	but naw.
<nitrix>	it's the new agile..
<nitrix>	or something like that.
<thj>	pair programming would work great for me.
<thj>	i always code faster when people are looking, lol
<thj>	"oooh, i have an audience, yay"
<alsch>	how does pair programming work?
<thj>	something about "let's sit down and do this together" gets me fired up.
<nitrix>	everyone does. less distractions, focused on getting the task done, direct validation feedback loop, less hacky solutions to problems...
<nitrix>	if done correctly, i'm sure it improves the codebase quality and there are less bugs.
<thj>	alsch: one guy codes, the other watches and gives feedback. then after a while you swap... more or less.
<alsch>	ok, so basically assumed at same location then
<vendu>	exio4, why waste cpu cycles on raid stuff? :p
<aewffwea>	alsch: you discussed the code while coding it
<thj>	well, you could do it with a shared editor of some sort, and a skype call open, i suppose.
<nitrix>	thj: it gets funnier than that. when i did pair programming, we used an editor that let us both modify the source code real-time.
<nitrix>	so, i'd implement a class, he'd implement another, and we'd connect our work and discuss of the interface of both.
<thj>	nitrix: sitting at separate monitors, then? yeah, i have tried software that did that, however, i didn't do it the right way.
<thj>	nitrix: we were working on the same codebase, but not on related parts.
<nitrix>	"hey, your billing stuff needs a way for me to get all the transactions" -- "ah okay, but you'll need to provide me a customer_id" -- "crap, okay, i'll add that, it affects a thing or two here"
<nitrix>	etc.
<thj>	afaik, textbook pair programming means to look at the same file.
<thj>	however, what you're describing would probably be more entertaining, like playing ball.
<nitrix>	thj: ah. well, i've done pair programming when developing huge systems from scratch, so i don't know how it'd work when just maintaining legacy systems.
<darkcthulhu>	holy crap.. the bay area is amazing when it comes to meetups and interest groups. so many good ones! i know what i'm doing this summer.
<nitrix>	vendu: i like it :)
<thj>	it's so rare to be in a situation where you get to share the same part of the project like that.
<nitrix>	vendu: but, use the extended ascii set for walls :3
<thj>	i'd like to see california at one point.
<nitrix>	vendu: one of the characters, can't remember which is a solid block.
<zacts>	yo vendu
<zacts>	vendu: have you ever made any cool computer games?
<nitrix>	vendu: i think that'd look so much better. are the dots necessary for the floor?
<thj>	i'm norwegian, but being a computer programmer for most of my life, various locations in california have heavily influenced my life at various points.
<thj>	i take an interest in film, animation and music too, and again, california...
<darkcthulhu>	thj: various locations in ca have influenced your life? are you referencing hollywood?
<darkcthulhu>	hollywood*
<thj>	darkcthulhu: when i said that, i was mostly refering to all the computer stuff that has happened there, and how it's influenced me (and most of the computer world) as pertains to programming and computing.
<standoo>	hello world
<nso95>	ugh. computers suck.
<pyon>	267914296
<_w_>	42'nd fibonacci
<pyon>	well, i had to provide the functional counterpart to "hello world"
<pyon>	(as in the first toy program that anyone would write in a <insert paradigm here> language.)
<pyon>	and 42 because it's the only non-power-of-two that's a legitimate magic constant.
<nitrix>	hey guys, any digitalocean users out there?
<rcyr>	. . .
<rcyr>	:)
<nitrix>	meh, i thought more people would be curious.
<nitrix>	oh well.
<erste>	hi, i'm trying to do a git clone from openshift.. but i keep getting this error ..
<erste>	http://pastebin.com/frbnpxvf
<erste>	can anyone help me?
<anj7>	hey should we use " `  ` " <<< these in sql while defining fields?
<numb3rz>	hi
<darkelement>	hello all
<darkelement>	seems a very quiet chatroom tonight
<myrl-chan>	hiiiiiiii
<vendu>	hey myrl-chan :)
<vendu>	hello again, everyone
<vendu>	i figured the bsp stuff is kind of annoying to implement and boring :)
<lf94>	nitrix, yes, i am a digital ocean user.
<vendu>	erste, let me take a look
<lf94>	what's up guys
<lf94>	i was doing some research last night on different text data structures
<erste>	vendu, thnkx
<lf94>	seems to me gap buffers and ropes are popular
<vendu>	erste, hmm :)
<lf94>	but is there something better?
<lf94>	why gap buffer vs a rope?
<vendu>	erste, perhaps you have no read rights for the repo?
<erste>	vendu, hmm, how can i verify that ?
<erste>	i've cloned some repos from my own openshift before
<erste>	but i think maybe after 1 or months
<erste>	perhaps some token or permission .. expired.. or sth
<vendu>	could be :p
<vendu>	what's openshift though?
<erste>	paas if i'm not wrong
<erste>	it let you host apps.. like java .. node.js .. and many others
<vendu>	ah okay, i use github myself :)
<erste>	:p
<mark4>	i have copied the serial programming howto to implement async serial input. problem is after getting a signal the read of the port is giving me eagain
<mark4>	which is not making much sense \
<ori_b>	mark4: yes, because you read the data and there's nothing more to read; async means that it won't block.
<ori_b>	so it just returns 'eagain' -- "nothing right now, try again later. i won't stop you, go along and do your thing."
<mark4>	no. i get the signal and the very next read i try is eagain
<ori_b>	er?
<ori_b>	code please?
<mark4>	the signal is "we have data on the port ready to read!" and my read does eagain
<mark4>	hang on
<mark4>	https://gist.github.com/631d54ff2d39270b038d
<mark4>	serial.c
<hotcoder>	question
<hotcoder>	what ide do you guys use?
<mark4>	i dont
<mark4>	ide;s are all horrensoludly bloated piles of shit
<mark4>	with shit on top
<mark4>	i use sublime text 3
<ori_b>	hotcoder: vim.
<hotcoder>	yeah i use sublime text 3 for my node.js
<hotcoder>	for java i use eclipse
<mark4>	for java (android) i use intellij idea
<rcyr>	hotcoder: depends on the language
<hotcoder>	ah
<hotcoder>	for android dev i use android studio
<mark4>	eclipse is about the single worst piece of crap fobbed off as "something useful" i have ever seen
<mark4>	android studio == labotomized intellij idea
<rcyr>	mark4: i disagree with your earlier statement about ides... but definitely agree about eclipse being a pos
<hotcoder>	meh it works for me so far
<hotcoder>	but if theres trouble i'll switch over :p
<mark4>	idea is the only ide i have ever seen which is the exception to the shit on shit rule. idea is freeking awesome
<rcyr>	mark4: for me, it's idea and visual studio
<rcyr>	(and i'm a mac user...)
<mark4>	hotcoder, srsly try idea for java. for everything else try sublime text 3
<mark4>	rcyr have you use st3?
<hotcoder>	i use sub text 2
<mark4>	blow your freeking mind with how good it is.
<rcyr>	mark4: i'm a emacs user
<hotcoder>	for node.js sorry
<hotcoder>	i use windows :)
<mark4>	i regged st2 so i use st3 beta
<hotcoder>	idea for java?
<mark4>	st3 works in linux, windows and mac
<hotcoder>	you mean intellij
<hotcoder>	nah its not free :(
<mark4>	yes idea would be good for java too but not as good as intellij
<rcyr>	mark4: sublime isn't bad at all... but atom is so close in terms of functionalities that i don't think i'll ever pay with st3
<rcyr>	hotcoder: community edition is free iirc
<mark4>	scyr no dood they only think its close, it cant hold a candle
<mark4>	but but they are catching up
<mark4>	now: about my brain dead async serial code lol
<ori_b>	mark4: hm, ok. that's a bit odd.
<hotcoder>	rcyr, for intellij?
<mark4>	signal == hey you got data!... i read and get eagain
<ori_b>	mark4: any reason you can't use select and poll?
<ori_b>	and/or poll?
<ls23>	hello
<ori_b>	they are much nicer than signals, imo.
<mark4>	ori_b, ive been fscking with this for over a week. i tried select. i tried poll
<ls23>	whats up?
<mark4>	and signals are not posix
<mark4>	ori_b, i wrote a forth compiler for linux in 100% pure assembler using syscalls when half the syscalls man pages didnt say anything other than "you dont need to know this"
<mark4>	i cant get a freeking serial port to work lol
<mark4>	ori_b, will i get a signal on the port when a different thread writes to it?
<ls23>	http://postimg.org/image/aj9hdrky7/2c7aa593/
<ori_b>	mark4: no clue; the docs aren't exactly clear -- the only thing i can tell from them is that it's been broken at various times in the past
<ori_b>	(presumably it's not very commonly used)
<mark4>	what isnt? signals for serial ports?
<ori_b>	sigio
<mark4>	aha
<ori_b>	in general.
<mark4>	because ppl shun non posix (portable) code
<ori_b>	no, because signals suck to use correctly.
<mark4>	and linux signals are not posix compliant
<rcyr>	who cares about posix compliance...
<hotcoder>	i'm waiting for a paycheck
<ori_b>	they have the same issues as threading, but worse -- locks don't solve things, they turn races into deadlocks.
<hotcoder>	after i get it im going to buy a linux machine i think :d
<ori_b>	you're stuck with atomics.
<rcyr>	most projects end up having preprocessor crap to use epoll on linux... kqueue on bsds.... etc...
<mark4>	ori_b, mutex's work fine if you dont "shoot yourself in the foot"
<ori_b>	the *only* think you can do in a signal is make a "raw" syscall (ie, no printf() or anything)
<mark4>	as a general rule i never let one thread require two different resoruces that another thread might require
<ori_b>	mark4: from a signal handler? only if you use it as a way of dropping the signal.
<ori_b>	mark4: this isn't a thread -- the original context that took the lock doesn't resume until the handler exits.
<mark4>	well my signal handler just writes a true into a variable :)
<ori_b>	is it a sigatomic_t? that's the only thing you're legally allowed to write into :)
<mark4>	ori_b, yes i know
<ori_b>	although you're *probably* ok if it's word size or smaller.
<ori_b>	yah, so nobody uses it.
<ori_b>	poll() is the way to go for small numbers of fds.
<mark4>	ori_b, erm...no thats not what the example code i stole used lol
<mark4>	and the example code i stole is directly from the linux serial programming howto!
<mark4>	i tried poll i couldnt get it to work :(
<ori_b>	what failed to work?
<mark4>	ori_b, i cant re ember the details ive been fighting getting this working for a little over a week
<mark4>	all i need is a serial read and write and test for "data ready to read"
<mark4>	in fact no read ever happens until the test passes
<ori_b>	if you really need something quick and dirty, you can always use a thread.
<mark4>	i am using threads all over the place
<mark4>	wait
<ori_b>	mark4: one more thing to check, by the way -- you can try dropping the o_nonblock
<mark4>	you mean have the thread block on read but copy the data out to some place
<ori_b>	and see what happens.
<mark4>	kk brb
<mark4>	you mean because i set vmin to 1?
<mark4>	yea does not fix
<mark4>	im still not reading any actual data. get signal, do read, get eagain
<mark4>	i think i like that using a thread, that thread can block on read all day lol
<ori_b>	yep, should probably be decently easy.
<mark4>	i dont even have to change much code
<mark4>	basically i keep my existing thread that waits on the signal
<mark4>	just remove all the sin crap
<ori_b>	although, i'm still wondering why you'd get eagain.
<mark4>	duh
<mark4>	me 2
<ori_b>	also, did you make sure you're getting eagain and not some other error?
<mark4>	im thinking any write performed on that fd will also cause a signal
<mark4>	oh. no i just assumed eagain lol
<mark4>	but it doesnt matter i think you gave me a working solution
<ori_b>	yeah, check.
<myrl-chan>	haaaaaaaaaaaaaaai
<mark4>	assuming my problems are not all down to a stupidly configured serial port
<mark4>	ill do the check brb
<ori_b>	myrl-chan: nyet.
<myrl-chan>	ori_b: nyet?
<ori_b>	da, nyet.
<mark4>	your own language?
<jeaye>	ori_b: yeah, i've been considering matching, too.
<jeaye>	ori_b: it's basically its own dsl. -_-
<ori_b>	jeaye: i have matching, it's just got really crappy code gen :)
<jeaye>	aye.
<ori_b>	and shoving it into the ast is going to be a tad ugly.
<ori_b>	although a rewrite of the entire compiler is coming :d
<ori_b>	(i've gotten to the point where i can get it to self hosting without too much pain.)
<mark4>	ok now my call to read blocks forever
<jeaye>	what's it written in, ori_b?
<mark4>	and i put the noblock back
<ori_b>	jeaye: c -- https://github.com/oridb/mc
<mark4>	ori_b, why anyone would put themselves through those kind of contortions to write a compiler for any language is beyond me. look at how easilly forth does it
<mark4>	my forth compiler for linux compiles 228k of soruce in about .1 of a second
<miniman10000>	if you were to busy loop 4 threads on a 4 core 8 thread cpu would you utilize all the cpu?
<jeaye>	ori_b: neat. yours is much further along than mine: https://github.com/jeaye/jank
<ori_b>	jeaye: yeah, libraries are now the problem i'm poking at solving :d
<jeaye>	ori_b: good to see you have generics.
<jeaye>	generics are a major focus for me.
<jeaye>	oh, an online sandbox, too. very nice.
<ori_b>	well, "online"
<jeaye>	well, browser-based.
<ori_b>	you're running native code on my server.
<ori_b>	:p
<jeaye>	of course.
<jeaye>	like ideone or anything else.
<hotcoder>	hello
<ori_b>	i should update the code in the sandbox
<ori_b>	it's running a pretty out of date version
<mark4>	compiled 229288 bytes eal    0m0.238s
<mark4>	thats on a raspberry pi 2 at 600mhz
<mark4>	"real" not eal
<ori_b>	i think you can still confuse the regex library i tossed in with it using a pattern like '[ab'
<ori_b>	(which will infinitely loop)
<ori_b>	meh.
<mark4>	yea this signal code is not even close to working. they should remove this crap from the howto
<ori_b>	mark4: heh, reminds me that i should optimize my register allocator.
<ori_b>	with something like a linear scan register allocator, i'd probably be compiling at ~10 times what i do now.
<ori_b>	but at the moment i do o(n^2) scans over bit sets
<ori_b>	takes me something like 1 or so seconds to compile 250k of source
<mark4>	ori_b, what reminds you that you should do that?
<mark4>	my compile times or me shooting sigio? :)
<ori_b>	compile times.
<mark4>	will you come close to those speeds when you do the optimization?
<ori_b>	yeah, probably within a factor of 2 or 3.
<mark4>	i keep meaning to implement a random syntatically legal source puker to pule out 3 of 4 gigs of source code
<ori_b>	there's inherent overhead in checking dataflows for correctness and doing optimizations, though.
<mark4>	stuff that doesnt do anything, just to benchmark my compiler more accurately
<mark4>	ori_b, yes. which i dont need to do any of lol
<ori_b>	don't need to, or just don't care to?
<mark4>	my compiler is not optimized and doesnt optimize
<ori_b>	i don't /need/ to do it, but it's rather nice to do it.
<mark4>	some day i may add a peephole just for the academic exercise
<mark4>	probably not on the x86 version tho. maybe on the avr and on the arm versions
<mark4>	that was the arm version (actually the thumb2)
<mark4>	i kind of dread optimizing thumb2 opcodes
<mark4>	but i bet the addition of an optimizer wont put much of a dent in my compile times
<ori_b>	heh, i'm talking about stuff like store forwarding and loop versioning.
<ori_b>	well, at least, licm.
<mark4>	forth does not have forward references at all
<mark4>	you can fake them of course
<mark4>	well it has if/else/then type forward branches
<mark4>	but no forwad references to "words" (functions) not defined yet
<ori_b>	ok... and?
<mark4>	makes things much simpler lol
<ori_b>	it's been a while since i've looked at the profiles, though.
<ori_b>	been focusing on making things actually usable.
<mark4>	lol your doing it all wrong!
<mark4>	the entire point of software is the developing of it... not the err end user!
<ori_b>	i'm the end user, though.
<mark4>	me 2
<mark4>	and i always write my code to make it easier for you to read even if you never will
<mark4>	ive been told by a few people who dont code asm and who dont code forth that they could read my sources
<ori_b>	i'm tired.
<ori_b>	i should sleep.
<mark4>	:)
<mark4>	nite
<darkcthulhu>	sup people!
<mwizard>	ia! ia!
<darkcthulhu>	what are you upto m wizard!
<darkcthulhu>	mwizard*
<anahumar>	what is the difference between servlet, applet and jsp?
<mwizard>	darkcthulhu: bloody sacrifices and distributed systems engineering. sacrifices mostly.
<darkcthulhu>	anahumar, jsp is a server-side thing which lets you write java to talk to web services. applets are self contained java applications that can be run within a browser.
<darkcthulhu>	mwizard, haha.. what specifically under distributed systems? i find that domain quite interesting.
<darkcthulhu>	...the theoretical work is a little too much math.
<mwizard>	darkcthulhu: zero-trust/zero-knowledge ones, as with mental poker.
<darkcthulhu>	mwizard, ah..
<mwizard>	mental poker, essentially, but with wait-free structures, dhts and all those kinds of stuff
<lf94>	what text data structure does vim use?
<darkcthulhu>	lf94, aren't ropes used by modern text editors?
<lf94>	darkcthulhu, vim is hardly modern.
<darkcthulhu>	yeah..
<mwizard>	touche :)
<lf94>	darkcthulhu, i don't know of a single editor that actually uses ropes.
<darkcthulhu>	:-o
<lf94>	seems to me piece tables (?) and gap buffers are dominant
<darkcthulhu>	i was led to believe they'd be useful for text editors. never really saw under one's hood though.
<lf94>	emacs uses gap buffers
<darkcthulhu>	mwizard, i was reading about raft recently for distributed consensus. distributed system algorithms are certainly interesting!
<mwizard>	darkcthulhu: distributed consensus is hardly achievable thing in world of liars. not in practical sense
<lf94>	i might try to implement a rope text editor
<lf94>	but i want to see what other editor's do
<darkcthulhu>	mwizard, yeah, you took away the trust.
<mwizard>	it's better (but harder) to design systems that don't need consensus to remain consistent
<darkcthulhu>	lf94, they probably the same techniques used by bioinformatics folks who manipulate strings of atgc with random insertions and deletions. gap buffers sound like the right thing.
<lf94>	i have no idea what you just said
<lf94>	bioinformatics folks who manipulate strings of atgc with random insertions
<lf94>	>what
<planckwalk>	atgc are the letters used for dna coding
<darkcthulhu>	i know people doing bioinformatics research, who deal with problems which could use similar solutions to the text editor insertions and deletions. one of them was using string index tables, skip lists and gap buffers.
<n1cky>	anyone around knowledgable in sql?
<n1cky>	using postgresql, here is my schema: http://paste.debian.net/173629/
<mwizard>	i'm stuggling with cryptographically-sound "proof of non-ownership", "proof of partial ownership" and "proof of timestamp not from the past" problems, have no practical solution by now
<n1cky>	i want to get a response for something like:
<n1cky>	select posts.title, posts.content, posts.posted, array(select ?????? from ????? where ?????) as "tags" from posts order by posts.posted desc;
<n1cky>	but i need help with the array bit, i would like it to only contain tags relating to a certain row
<n1cky>	i need to be able to reference the outside row inside the subquery
<darkcthulhu>	n1cky, why don't you make an example on sqlfiddle?
<ori_b>	mwizard: "proof of timestamp not from the past" -- signed/encrypted vector clocks is the best starting point i can think of...
<mwizard>	like, alice has something, and bob wants to know if alice has that something, but alice does not want to disclose what does she own to bob, but has to prove him she really does have it.
<ori_b>	mwizard: ...hm, isnt' that basically the idea of public key cryptography? prove that the other guy has a private key x?
<darkcthulhu>	mwizard, isn't asymmetric key encryption used to prove things similar to that?
<darkcthulhu>	exactly..
<ovrh>	'morning!
<darkcthulhu>	ori_b, i was checking out some of the interest groups around the bay area. they're simply amazing. do you attend any of the meetups?
<ori_b>	darkcthulhu: at the moment, bafug.
<ori_b>	i haven't been poking around as much as i should, though.
<ori_b>	any that caught your eye?
<darkcthulhu>	ori_b, there was the hpc group, which convenes at nvidia later this month. the c++ users group seemed rather empty and they'd didn't have a schedule yet. those seemed the most interesting to me, other than the hackathon meetups.
<mwizard_>	is there history for this channel? my internet got dropped after ori_b suggestion and i don't know where to look for answers, if there were any
<ninjarobguy>	does any one want to jump onboard a coding project for a jarvis ai program for linux?
<darkcthulhu>	mwizard_: he pointed out that your description matched the goals of public key cryptography. that's all.
<ori_b>	http://okturing.com/src/2842/body
<mwizard_>	darkcthulhu: not really. pki is a tool, but not a solution to these particular problems.
<mwizard_>	*pkc, sorry
<darkcthulhu>	ori_b, i'm thinking of at least checking out some of these meetups during my first month. should get to know a lot of interesting people.
<mwizard_>	ori_b: thanks for paste. well, if we think about alice hashing whole data she has, and building private key from this hash, then bob can challenge her to sign his arbitrary requests with her derived key and bob would check them later for validity using public key
<mwizard_>	problem is that alice can once generate private key and trash her data
<ninjarobguy>	dude key are an issue
<ninjarobguy>	why not go with a closed system
<ninjarobguy>	no key needed
<mwizard_>	ninjarobguy: can you please elaborate?
<ninjarobguy>	ummm sure
<vendu>	hey folks :)
<ninjarobguy>	for instance "shamless" plug i created a way to cryptographicaly secure all data tranmited and have just the end user unlock it
<darkcthulhu>	hi vendu.. how's it going?
<vendu>	darkcthulhu, hey, not bad at all, even though i only got a bit over an hour of sleep :)
<vendu>	how about you?`i'm having coffee now :)
<ninjarobguy>	vendu: no rest for the wicked man
<vendu>	hehe
<vendu>	hey ninjarobguy :)
<ninjarobguy>	hi
<darkcthulhu>	vendu, a little over three hours of sleep. finals week here at the university. :) almost done though. how is zero coming along?
<ori_b>	darkcthulhu: yeah, i should probably poke at more of them.
<mwizard_>	ninjarobguy: making peer-to-peer talk encrypted is a nice way to go, but it's worth a little of peers don't trust each other.
<vendu>	darkcthulhu, a bit lazily, been doing a bit of work on a sub-project though (a game called mjolnir)
<darkcthulhu>	ori_b, meetup.com had a good list of some of them.
<darkcthulhu>	vendu, ah! thor's hammer.
<vendu>	it's supposed to become a rogue-like but with cyberpunk-like stuff instead of the typical ad&d/tolkien/whatnot :)
<ori_b>	anyways, i was going to go sleep.
<ninjarobguy>	sure
<vendu>	darkcthulhu, yep :)
<darkcthulhu>	bye ori_b
<ninjarobguy>	but i am refering explicitly
<ori_b>	tomorrow, i try to make match statements run better.
<ninjarobguy>	one to one
<ninjarobguy>	closed system
<darkcthulhu>	ori_b, match statements?
<n1cky>	darkcthulhu: http://sqlfiddle.com/#!15/e379e/3
<ori_b>	darkcthulhu: yes, for my language: http://git.eigenstate.org/ori/mc.git/tree/libregex/compile.myr
<ori_b>	think ml style patterns.
<n1cky>	see how on the last statement, the tags array contains all tags, rather than the tags for a given row?
<n1cky>	now, looking at my statement, that makes sense.
<ori_b>	right now, the generated code is shit :)
<n1cky>	but how can i get that to work, is my problem.
<darkcthulhu>	ori_b, i see! looks interesting. good luck! :)
<mwizard_>	ninjarobguy: okay. in the whole world there is only alice and bob. is that closed system enough? no mitm, no eavesdroppers. problem is that alice does not trust bob and vice versa. like, for example, alice owns a datacenter. bob pays alice to get hold of his data for some time.
<mwizard_>	ninjarobguy: but alice takes her money and just trashes bob's data
<darkcthulhu>	n1cky, posting it on stackoverflow may help. i'm on my phone at the moment. sorry :(
<ori_b>	next is refactoring overly eager expansion of expressions that makes it hard to do copy propagation.
<darkcthulhu>	ori_b, nice! compiler optimization already.
<mwizard_>	ninjarobguy: this does not involve anybody else, so system is pretty closed, however alice is still a whore
<lf94>	i'm going to write a post on the most ideal operating system
<rindolf>	hi all.
<lf94>	and then you guys can criticize the fuck out of it
<lf94>	so i can make it even better
<ninjarobguy>	lol
<darkcthulhu>	ori_b, i just finished up my parallelizing compiler in c++. i'd like to ee how it's done in an ml style language.
<darkcthulhu>	see*
<darkcthulhu>	hi rindolf, what's up?
<mwizard_>	lf94: does it run gaems?!?!?!
<ninjarobguy>	by closed system cryptographicaly ii mean only one person knows whats in th message or how to use the system, and one receiver the same
<lf94>	mwizard_, of course.
<darkcthulhu>	lf94, how contentious of you :-p also include a section on the best editor and programming language.
<mwizard_>	lf94: it's bare metal hypervisor used to run other oses capable of running games, right?
<ori_b>	darkcthulhu: i'm debating punting on optimization utnil i get the thing self hosting, though.
<lf94>	no.
<lf94>	it is the one operating system to rule them all.
<lf94>	just like the one ring.
<mwizard_>	lf94: then publish your article, i want to see how it compares to the ideal os of mine
<lf94>	it will be called....one os.
<rindolf>	darkcthulhu: hi! i fixed a small problem i had with kde using one of the oldest tricks in the book.
<ori_b>	lf94: one ring? sounds like poor os design.
<lf94>	hahaha
<mwizard_>	of course, mine is more ideal than yours ;)
<ori_b>	lf94: most of them have at least two rings.
<lf94>	some people think one ring is a good thing!
<darkcthulhu>	ori_b, makes sense. dont really need optimizations for the first self hosting one.
<mark4>	ok so now im thoroughly confused. i set up my serial port, i do the werite. i have a blocking read waiting for a reply and... i never get any
<darkcthulhu>	and it would be something of a milestone.
<ninjarobguy>	simple way have a generic script run on your txt file/ what ever that can decrypt it/ something but only knows the pass code, the "keys" are transmited vai the message so on one person sends and one receives
<mark4>	but i followed the posix serial programming howto to set up the port
<darkcthulhu>	rindolf, what problem? and what technique?
<rindolf>	ninjarobguy: wow! another ninja! in addition to pigninja and ninjapenguin and someone else.
<mwizard_>	ninjarobguy: that would limit the uses very hard. alice may not know the contents of bob's data - it might be encrypted, but it can still be trashed.
<lf94>	too many ninjas.
<rindolf>	darkcthulhu: let me post about it on facebook and give you a link.
<ninjaninja>	hi guys
<ninjarobguy>	sure depends on applicastion
<darkcthulhu>	nooooo
<ninjarobguy>	besides i am the only ninja
<ninjarobguy>	where gandalf?
<darkcthulhu>	nick autocomplete is hard enough without more people with similar prefixes.  :-|
<ninjarobguy>	how do you change your name in here?
<rindolf>	ninjarobguy: /nick
<mwizard>	ninjarobguy: /nick, it's irc
<ninja9001>	hi
<ninjarobguy>	poop
<darkcthulhu>	*sigh*
<ninjarobguy>	didnt work
<ninjarobguy>	gunna name myself mc,ninja
<ninjarobguy>	after mcdonalds fame... lol
<ninja9001>	darkcthulhu -> ninjacthulhu
<ninjarobguy>	great books
<ninjarobguy>	cathula
<darkcthulhu>	no way.. ninja9001.
<mwizard>	/part;/join ##programming
<mwizard>	pft
<lf94>	 /quit ninja
<micninja>	lol
<micninja>	ok mic ninja it is
<mwizard>	linear inputs are better
<jedininjarob>	better
<jedininjarob>	mwizard what proggies you using to send from?
<jedininjarob>	possible to use pluggins?
<mwizard>	jedininjarob: irssi ftw
<mwizard>	yep, lots of plugins here
<jedininjarob>	you got me there
<jedininjarob>	if i were you look for a dedicated p2p plug with chat
<jedininjarob>	get the one one one thing with out the hassle
<darkcthulhu>	judgment keloid lacks melchior hallock mcmichael mcmichael kickstand kidney didn't ¥mungo
<mwizard>	irc is almost p2p itself :)
<jedininjarob>	maybe
<rindolf>	darkcthulhu: https://www.facebook.com/shlomi.fish/posts/10152825844971981 ; http://paste.debian.net/173672/
<mwizard>	if you want something p2pish, look at tox
<jedininjarob>	i bet darkcthulu could hack it though
<darkcthulhu>	rindolf, checking.
<rindolf>	darkcthulhu: thanks!
<jedininjarob>	lol
<darkcthulhu>	rindolf, splash screen issue?
<darkcthulhu>	looks like a bug if that fixed it doesn't it?
<jedininjarob>	ok guys realy i need a coder who is worth there salt any you bitches in here wanna be apart of a humble coding venture for a linux program
<mwizard>	pft. announce your rates, you enterpreneur.
<jedininjarob>	no insult to real bitches thought
<jedininjarob>	though
<jedininjarob>	well
<jedininjarob>	where you located
<mwizard>	i'm located in bed currently
<jedininjarob>	....lol   <<<<in front of laptop pantsless
<jedininjarob>	mostly
<jedininjarob>	whats the m stand for?
<mwizard>	sure, how do you see me?!?!?! lol
<jedininjarob>	music, memories,  masterbastion
<jedininjarob>	????
<mwizard>	masturbation wizard? i should give this a try
<jedininjarob>	hahahahahah
<jedininjarob>	mwahahahah
<jedininjarob>	ok seriously what coding do you do , strong suit
<mwizard>	tell us how much do you pay, so i'll now if sharing my skills is worth that :p
<jedininjarob>	well apply for the job
<rindolf>	darkcthulhu: maybe.
<jedininjarob>	rates discused after interveiw
<jedininjarob>	lol
<jedininjarob>	ok here is the project, i am creating a linux sub os, right now its kinda like a second terminal and i call him jarvis,
<darkcthulhu>	rindolf, hmm..
<mwizard>	in your ponyworld maybe, but in mine ponyworld, employers compete to hire me instead ;)
<jedininjarob>	jarvis do this, do that,,, ect.. ect..
<mwizard>	siri, but not that dumb?
<jedininjarob>	and he responds yes sir no sir
<jedininjarob>	ect
<jedininjarob>	with oice
<jedininjarob>	voice
<jedininjarob>	right... lol
<jedininjarob>	so i am trying to get a speek to text module setup for him now
<mwizard>	jedininjarob: what have you done already? except for coming up with name, of course?
<jedininjarob>	i have commands and responses taken care of and the learning modle i am training now
<jedininjarob>	he talks to me, and i can expand
<jedininjarob>	that from here
<jedininjarob>	i use att voice module suck but works
<jedininjarob>	responses are randomized but soon will have "weight"
<mwizard>	"isn't it nice to have a computer that will talk to you?"
<jedininjarob>	and the learning model i have i need help with
<jedininjarob>	lol   yes
<jedininjarob>	but responses are limited
<jedininjarob>	lol
<jedininjarob>	dick
<jedininjarob>	hahah
<pyon>	mwizard: "computer that will talk to you" --> sounds creepy
<jedininjarob>	doesnt it? lol
<mwizard>	pyon: it actually is
<jedininjarob>	but thats hat i am working on
<darkcthulhu>	unsupervised learning right?
<jedininjarob>	kinda
<jedininjarob>	controlled
<jedininjarob>	but yes
<jedininjarob>	here is an example
<darkcthulhu>	would be interesting if the responses weren't random.
<jedininjarob>	jarvis give me google >>> run a start script for google.
<darkcthulhu>	or several limited.
<darkcthulhu>	severely*
<jedininjarob>	hes ok sir
<jedininjarob>	google up and running
<mwizard>	do you perform any sort of nlk preprocessing? semantic parsing?
<mwizard>	or is it on pure regexes (lol)?
<jedininjarob>	lol
<jedininjarob>	right now he is a bash script
<darkcthulhu>	i don't trust this :-p
<jedininjarob>	with files in a couple folders
<jedininjarob>	rather simepl but powerful
<myrl-chan>	...
<jedininjarob>	hahah
<mwizard>	omg, bash ai
<myrl-chan>	mwizard: exactly what i'm thinking lol.
<jedininjarob>	lol
<jedininjarob>	yup
<myrl-chan>	if you can make an ai in bash, you can probably make it in any other language.
<jedininjarob>	it works man
<mwizard>	i've once did a wolfenstein 3d-like first person shooter in bash
<jedininjarob>	yes
<jedininjarob>	exactly
<deerhawk>	is there anything less than bits? i can't find any smaller units; "some analysis" of numbers always leads to bits.
<mwizard>	deerhawk: no, nothing less than bits. bits are atomic
<jedininjarob>	so what i need is some one who can out bash me and maybe through in some c+ or python
<myrl-chan>	deerhawk: if you want, we can also consider the voltages.
<mwizard>	deerhawk: they are "set" or "clear", no further states
<mwizard>	myrl-chan: then you stray from logics
<myrl-chan>	mwizard: i agree.
<deerhawk>	are bits the atoms of information? it seems so when i do some analysis
<jedininjarob>	yes
<jedininjarob>	base
<jedininjarob>	bit
<mwizard>	jedininjarob: i hate to say this, but i think as you don't presumably have any revolutionary learning model, you're doomed to siri-like performance. no real ai, regardless of whether it's in bash or c
<deerhawk>	mwizard: not talking from a physical view, but a theoretical view.
<anahumar>	what is the difference between servlet and jsp? is it the same thing?
<jedininjarob>	well i have the learning model already ready just need to hard code
<mwizard>	deerhawk: from theoretical view, there is nothing more subtle than bit. there are, however, non-binary systems
<darkcthulhu>	deerhawk, you could represent things in unary where the number of symbols could represent information.
<jedininjarob>	each section needs it own dedicated script but yes in theory its doable in bash or any other lang
<mwizard>	where bits can have three states (true, false, maybe), or floating values (probability of it being true), or complex values (quantum bits)
<jedininjarob>	which bring me to a question can a program talk to a system in pure binary?
<jedininjarob>	or is that interprited through the os
<mwizard>	they already do that, and there is no other way they could do that.
<jedininjarob>	hmmm
<myrl-chan>	isn't machine code interpreted as "pure" binary? ;)
<jedininjarob>	no
<jedininjarob>	100101010101010001111100100011
<mwizard>	what? why?
<darkcthulhu>	jedininjarob, general purpose operating systems schedule your code directly on the hardware and then interrupt it routinely and perform context switches.
<jedininjarob>	thats binary
<myrl-chan>	jedininjarob: and that's you demonstrating you have no idea what you're talking about.
<mwizard>	no, that's string representation of binary
<jedininjarob>	sudo make me a sandmich
<jedininjarob>	thts computer talk
<darkcthulhu>	jesus.
<mwizard>	jedininjarob: *** no rule to make target `me'.  stop and go away.
<myrl-chan>	i'll call bs that you made a pseudo-ai in bash.
<jedininjarob>	hahaha
<jedininjarob>	its a work in projress
<llamageddon>	hello songarchaeology ^^
<llamageddon>	and hello channel
<mwizard>	sharing is caring. don't you have public repository?
<jedininjarob>	sudo make "me" (a-sandmich)
<jedininjarob>	lol
<jedininjarob>	not yet
<deerhawk>	darkcthulhu. mwizard. start with the quantity 1. give it the symbol '1'. express 2 with any previously defined symbols  (you can only use each symbol once). you'll have to create a new symbol, '2'.  3 = 2+1. 4=4. 5=4+1 and so forth. for each 2^n, you will be forced to create a new symbol or position in a binary string (equates to adding a new symbol). binary. can't get any smaller than that unless you reuse symbols which still require some
<deerhawk>	sort of storing the information about multiplicity of repeating symbols.
<jedininjarob>	i wanted to have something usable before showing the world how low level me bash coding is
<jedininjarob>	and why i am looking for help
<llamageddon>	let me ask: how would you people here feel about being able to define custom operators, but only using otherwise valid identifiers? e.g. "combine", but not "~*~" or something
<jedininjarob>	i am open to a public repo
<songarchaeology>	llamageddon: hello
<jedininjarob>	but havent yet no
<mwizard>	deerhawk: you're wrong in "you can only use each symbol once" - why would you?
<darkcthulhu>	deerhawk, if the goal is to represent useful information, the multiplicity and a single symbol could be sufficient. transmitting that data would be hard though with such a  system..
<llamageddon>	songarchaeology: :) how are you?
<darkcthulhu>	deerhawk, transmitting,interpreting and disambiguating
<songarchaeology>	llamageddon: tired
<songarchaeology>	i'm headed to bed
<knobi_wan>	hi , anyone familiar with opencv and vlfeat c ?
<deerhawk>	mwizard:  1+1+1+1+1+1+1+1+1+1   requires more information for each 1.
<llamageddon>	mhm. are you on the west coast of the us?
<mwizard>	deerhawk: you're mistaking representation with information
<songarchaeology>	oh....time zones dont actually affect my sleep schedule. i'm always off
<llamageddon>	ah, that's a lot like me, since i don't really have any need to adhere to a schedule
<llamageddon>	though right now i go to sleep and get up early
<deerhawk>	mwizard: no, we're just talking about different things.
<mwizard>	deerhawk: obviously, 111111 needs more space than 111, but that's kind of expected?
<deerhawk>	mwizard: yes. each 1 is a single unit of information. you don't seem to be able to divide it to anything smaller than that
<deerhawk>	a bit seems to be, by definition, the smallest unit of information.
<deerhawk>	however.. someone mentioned non-binary bits.
<deerhawk>	but those still seems to reduce to binary bits.
<mwizard>	ah, you're about that
<mwizard>	no, they don't
<deerhawk>	but not to anything smaller than that.
<llamageddon>	reduce, no, convert, yes
<mwizard>	no-no, llamageddon, you're not right either
<mwizard>	think of real numbers
<mwizard>	they have infinite precision
<jedininjarob>	1    and 0    basic basic
<llamageddon>	well, the underlying concept of numbers is base-independent
<mwizard>	you can't convert real number to finite binary without losing information
<llamageddon>	but that's not the case with data you're storing
<jedininjarob>	ok here come the info whores
<mwizard>	by real number i mean "any" real number. of course you can convert partial subset
<jedininjarob>	so copying from one system to another with highly compress stuff you loose say my gf' number in the process?
<mwizard>	deerhawk: so, you can convert tertiary bits to binary bits and vice versa, because there is lossless dual mapping between them - and this is true for any bit radix. but when it comes to real and complex numbers, you no longer can.
<mwizard>	you can, however, convert each complex bit into two real bits
<mwizard>	jedininjarob: are you being serious now?
<jedininjarob>	.....no
<jedininjarob>	lol
<anahumar>	what is the fucking difference between servlet and jsp? is it the same thing?
<jedininjarob>	you just got all computer sciency on us and i felt i need to be stupid
<deerhawk>	in number theory, there seems to be no smaller units than bits :/
<planckwalk>	anahumar: it's in the fucking links that people have given you multiple times in the past 24 hours.
<jedininjarob>	dang...
<jedininjarob>	lol
<mwizard>	anahumar: nobody knows. maybe, you should ask in #java instead of repeating same question over and over?
<ams>	mooooooooooooooooooooooooooooooooooooooooooornign peeps
<planckwalk>	mwizard: already got kicked from there for being abusive.
<deerhawk>	ams: omg, reported to the feds.
<ams>	oh?
<hotcoder>	hello
<mwizard>	ams: it's a crime to awake at 3pm
<hotcoder>	mwizard, then go ahead and arrest me
<ams>	mwizard: i see, explains why i got a message from the feds ..
<ams>	federal bureau of investigation (fbi) anti-terrorist and monitory crime division. federal bureau of investigation.
<jedininjarob>	or is that becuse of the porn on your hard drive?
<deerhawk>	ams: where were you 5 minutes ago? how come that we can't see any traces of you being on jupiter? you are hiding something.
<mwizard>	hotcoder: please move closer to ams, so feds won't go twice for you guys. think of all taxes you pay
<ams>	... they want to transer me 2.3 million usd
<jedininjarob>	share.. dude
<hotcoder>	the feds can eat my insomnaic ass
<rumpledelf>	best give them your bank account details then
<jedininjarob>	here have min too
<jedininjarob>	lol
<deerhawk>	rumpledelf: wowoowwoowowow... look who's here :d
<ams>	jedininjarob: i will reinvest it to the feds.
<deerhawk>	rumpledelf: you have risen from the dead
<rumpledelf>	hardly, i've been here quite a bit since i got internet at home
<jedininjarob>	ill start my own private b13 group... lol
<mwizard>	deerhawk: "in number theory, there seems to be no smaller units than bits :/" - no, actually, what did you expect? bit quarks?
<jedininjarob>	black ops here i come
<rumpledelf>	amazing how many complaints you get when you normally go out regularly and you turn into a hermit for a few weeks >.<
<jedininjarob>	ok how many bits represent 1
<ams>	you are already black listed
<jedininjarob>	the number 1
<ams>	jedininjarob: 0.
<jedininjarob>	:)
<jedininjarob>	always
<jedininjarob>	<<<nbinja
<jedininjarob>	ninja... lol
<deerhawk>	mwizard: i'll have to think outside the box here, create something new.  well, i was hoping to find something more fundamental. did some analysis, re-invented bits so to speak.
<mwizard>	jedininjarob: when you have only "1", it's 0. all your whole fing universe is just a single "1", it's self-contained and need no additional expression.
<deerhawk>	rediscovered*
<ams>	mwizard: even when you have more it is just 0.
<jedininjarob>	bits wise?
<jedininjarob>	repsresentation
<ams>	1: #b0, 2: #b1 3: #b10 ...
<blipped>	my girlfriend has installed candy crush on all my devices in the last 2 days in order to get extra lives.
<jedininjarob>	10?
<anahumar>	planckwalk: did you really split with your boyfriend?
<deerhawk>	planckwalk: why did you do that?
<mwizard>	ams: nope. if you have two distinct symbols (1 and 0, yes and no, yin and yang, whatever), you need log2(2) bits, e.g. 1
<planckwalk>	blipped: i can just imagine ... you go to microwave something, and wtf?  candy crush?
<anahumar>	planckwalk: you seem very angry jackass
<jedininjarob>	ok
<ams>	mwizard: nah, just to continue to represent 1 as #b0 is just trivial.
<mwizard>	ams: and if you have 100 distinct symbols, you need log2(100) bits. that's simple.
<jedininjarob>	lol
<planckwalk>	anahumar: just mirroring you :-)
<rumpledelf>	the question here is why does she have access to all your devices to do that
<jedininjarob>	porn... obvoiusly
<blipped>	planckwalk: that's about how it worked. what's the draw i'll never know. flashy colors, catch music, subliminal messages... it certainly isn't game play
<mwizard>	ams: ah, you mean "clear bit", and not "zero bits" as in "no bits". because if you mean latter, you can't distinguish where you have no bits when you have something already
<ams>	mwizard: or you could go unary ..
<ams>	and have a headache
<standoo>	hello
<mwizard>	ams: or so. but then you need as much unary bits as you have symbols, so that becomes trivial
<jedininjarob>	how many bits represent a blank hard drive
<ams>	mwizard: i just got up .. that is what i mean.
<mwizard>	jedininjarob: you can't represent blank hard drive in binary bits, because of schrodinger uncertainty
<jedininjarob>	lol... got ya
<myrl-chan>	what exactly constitutes as blank?
<rumpledelf>	same number of bits on a blank one as a full one
<jedininjarob>	yup
<ams>	jedininjarob: you take the plater out, then you polish it really really well ..
<ams>	jedininjarob: until it is blank.
<myrl-chan>	rumpledelf: i'm considering that too.
<jedininjarob>	its just how the os see it that changes
<jedininjarob>	magnetic stripts being the exception
<aidanh>	afternoon all
<jedininjarob>	those have quntifiable changes
<jedininjarob>	what ever..
<jedininjarob>	cant spell
<mwizard>	jedininjarob: btw, os does not know what changes on drive, because drive does not change by itself.
<jedininjarob>	catching up are we..
<jedininjarob>	does so
<jedininjarob>	a files changes it see it change
<jedininjarob>	or swap out a drive change something on another drive swap back change is noticed
<mwizard>	nope, they don't. files are logical structures in fs that is maintained by os
<jedininjarob>	liar liar pants on fire
<mwizard>	when you pull-out a drive in hot swap, it's not drive telling info had changed, but chipset
<anahumar>	planckwalk: well then just answer the fucking question.
<anahumar>	are jsp and servlet the same thing?
<anahumar>	or two different things
<mwizard>	and os resets all it's caches and starts building it's knowledge about drive again from the scratch
<mwizard>	anahumar: are you serious?
<jedininjarob>	the reading of the drive changes the understand the interpritastion on the drive the read on the informastion
<jedininjarob>	also changes it to as it is read
<rindolf>	anahumar: i think they are different.
<anahumar>	mwizard: yes ... my english is so fucked so taht i can't find the answer online
<ams>	harddrives are like unicorn farts ..
<jedininjarob>	yup... lol
<anahumar>	however i know jsp is java server page
<anahumar>	but i couldn't figure the fucking question's answer
<jedininjarob>	and all our computers are reall just grand brain suck devices made by the man/ nwo to suck out our creativity and souls.... what they already invented that,,, tv
<mwizard>	jedininjarob: i remember the same was told about photography
<teakey>	jedininjarob, what
<jedininjarob>	lol
<jedininjarob>	do you know how many times i masterbated to this thing... freaking puter... geassshhh
<jedininjarob>	i thought we havd a realastion ship,,,,
<jedininjarob>	i thought we ment something to one another,,,
<jedininjarob>	then i turned on my puter today,,,,,, candy crush
<mwizard>	type with both hands, you have trouble pressing shift lol
<teakey>	i can't tell if it's because i'm really tired, but this channel is really surreal right now
<mwizard>	teakey: programming is magic
<teakey>	i know
<anahumar>	o fuck the humanity if you people don't help in such a fucking trivial question
<teakey>	i'm a magician
<teakey>	anahumar,
<anahumar>	teakey: magician my ass
<teakey>	look at the wikipedia page for java servlet
<knobi_wan>	²³
<teakey>	it answers the question on there
<teakey>	don't get mad at people for not answering a trivial question
<anahumar>	what makes you fucking think that i didn't look everything before i come to ask such a fucking losers here
<teakey>	"the difference between servlets and jsp is that servlets typically embed html inside java code, while jsps embed java code in html. "
<anahumar>	?
<jedininjarob>	or go to mooporn.com you have about the same chance of getting the quastion answer there right now as here,,,
<teakey>	because if yo uhad
<teakey>	you would have read that
<anahumar>	mother fuckers
<teakey>	instead of acting like a jackass
<teakey>	hahahahah
<aidanh>	anahumar: lol, what makes you think anyone is going to help you after you insult them?
<jedininjarob>	lol
<jedininjarob>	i could resit
<jedininjarob>	mooporn.com.. lol
<jedininjarob>	there are riots in the streets right now over this site in india
<teakey>	i'm at work, can you give me a description?
<benda>	damn humans :(
<jedininjarob>	lol
<teakey>	i need you to really paint me a picture with your words here, jedininjarob
<jedininjarob>	watch how they handle those utters
<jedininjarob>	lol
<jedininjarob>	just funning teakey
<mwizard>	ow, i tried to lookup a link to meatspin
<teakey>	:p
<mwizard>	and it seems it's gone
<teakey>	what?
<mwizard>	teakey: meatspin
<jedininjarob>	dont forget    zooskool
<mwizard>	here some russians cached good ol' version - http://meatspin.on.ufanet.ru/
<jedininjarob>	fucked up poeple in there man
<jedininjarob>	"shiver"
<teakey>	mwizard, i know what it is i just can't believe it's gone
<teakey>	thank you russia
<teakey>	i owe you one
<jedininjarob>	dude
<jedininjarob>	lol
<mwizard>	if you look at it long enough, you start to notice a slight desync of counter with actual spinds
<jedininjarob>	i cant stop luaghing
<jedininjarob>	freaking crying... lol
<jedininjarob>	27 spins
<deerhawk>	am i stupid that's trying to find the "quarks" of bits? am i a retard? i know that there aren't any (probably) .. but it's an assumption i'm making to see if it's leading anywhere.
<jedininjarob>	keep goinf i am sure you research will lead you places
<grim001>	quarks?
<teakey>	i don't know much about these here computer system machines
<jedininjarob>	dude, and more like that that was worth the 15 seconds on side spliting
<blipped>	deerhawk: ?
<teakey>	but i think quantum computing is pretty complicated
<teakey>	and are you talking about qbits?
<blipped>	deerhawk: the quarks of bits? you're trying to find a physical concept inside an abstract one?
<jedininjarob>	yup
<jedininjarob>	he realy just want to deabte'
<teakey>	i don't know what that means
<mwizard>	teakey: nope, deerhawk wants disprove illuminati stating there nothing inside bits
<jedininjarob>	i called him a liar liar pants on fire,,, he has yet to remark
<deerhawk>	blipped: figuratively speaking. bits don't have quarks of course.
<blipped>	deerhawk: strictly speaking "bits" don't exist.
<teakey>	mwizard, oh
<mwizard>	blipped: strictly speaking nothing exists
<deerhawk>	blipped: we're talking information theory here
<jedininjarob>	exostentialy we are all nothing,,, and something
<mwizard>	no, something part is wrong. just nothing, period
<deerhawk>	if bits are the atoms or quarks, i want to find their string-theory equivalent.
<blipped>	mwizard: well, that's debatable, but not the kind of debate that gets anywhere.
<jedininjarob>	make love to a woman or a man
<blipped>	deerhawk: you're analogy is all messed up.
<jedininjarob>	then make that statment again
<blipped>	*your
<deerhawk>	blipped: you lack fantasy.
<deerhawk>	imagination, sir.
<jedininjarob>	there is an undeniable force of "us" in "something" but the definistion is lost,   it like asking the meaning of life
<jedininjarob>	from a dog
<jedininjarob>	sniff lick fuck shit, eat,,
<jedininjarob>	got it covered
<mwizard>	blipped: thought experiment - you can indeed write formula that describes the next step of game of life field evolution. in fact, combination of this formula and starting configuration is enough to describe all the timeline of gol world
<teakey>	am i high right now?
<blipped>	deerhawk: a bit is an idea, an abstraction of a physical thing. a n atom or quark is a physically measurable thing.
<mwizard>	including all the sentient beings inside of it, if there were any
<jedininjarob>	yes tokey you are
<deerhawk>	blipped: lol, noob. troll somewhere else. you're not thought provoking enough. i did that when i was 8.
<teakey>	oh okay so deerhawk is a troll
<jedininjarob>	i shit bits
<teakey>	glad we cleared that up
<jedininjarob>	, and other stuff
<mwizard>	most trollish part would be if jedininjarob won't actually be a troll
<blipped>	deerhawk: you can't break an idea into two parts in the same way you can break down something physical. it's meaningless. i can say a bit breaks down into two parts imagination and one part love.
<jedininjarob>	dude teakey you post that meat spin?
<mwizard>	despite looking so
<teakey>	deerhawk, i think the quark of a bit can only be constructed from pre-existing neoquarks using a contained faurinian construct
<jedininjarob>	sorry
<jedininjarob>	super trollin man
<teakey>	no that wasn't me, it was mwizard
<deerhawk>	blipped: you're like those guys who said "there's only one infinity, period". but we know now that there are sub-infinities.
<teakey>	i'm not a troll
<jedininjarob>	lol fucking fantastic
<teakey>	maybe
<jedininjarob>	liar
<mwizard>	trolled you all
<jedininjarob>	lol haha
<jedininjarob>	truth come out
<teakey>	welcome to the trollocaust
<jedininjarob>	dus fuer
<jedininjarob>	!!!
<jedininjarob>	how many spins you make it through?
<mwizard>	btw, do you know that all you guys are just cool chatbot simulations i've done on a weekend? i'm the only human here
<blipped>	deerhawk: i'm like the guy saying you're trying to write an english essay by using chinese.
<jedininjarob>	liar
<jedininjarob>	i am creating that here... lol
<deerhawk>	blipped: i'm trying to construct bits out of smaller parts.
<jedininjarob>	and scraping this chat for research pourposes
<blipped>	mwizard: cool. do i have to go to work on monday then?
<jedininjarob>	nope
<mwizard>	jedininjarob, for example, is implemented with just spitting out "liar" and random questions from prebuild db
<blipped>	deerhawk: define bit.
<jedininjarob>	<<<<<total troolin
<mwizard>	ah, and "nope" part when you mention him by name
<blipped>	deerhawk: in fact, go get one and bring it back here then we can continue.
<blipped>	mwizard: what was the point of the gol thought experiment exactly ? within what context was that statement made?
<deerhawk>	blipped: if you do an analysis of quantities, you'll see that every 2^n quantity requires a new symbol or space-slot to be expressed.
<deerhawk>	blipped: bit can be defined arbitrarily otherwise though, lets not get stuck in semantics
<blipped>	deerhawk: go get me a bit.
<blipped>	deerhawk: i can get you an atom.
<blipped>	deerhawk: we'll trade.
<mwizard>	blipped: within context of if we are something or not. you don't need to execute gol in reality on any kind of simulator for all it's evolution to exist. so if there are any sentient beings in gol universe, they can't distinguish if they are really being executed with some kind of simulator
<mwizard>	or are just a thought formula and start configuration
<grim001>	yeah man, i create and destroy thousands of universes with my thoughts every day.
<blipped>	mwizard: ah got it.
<mwizard>	because with running it through simulator, you only "observe" it, but don't create it
<mwizard>	it's created at time it was though - or even earlier
<blipped>	grim001: you probably destory countless potential lives every day in the shower as well.
<jedininjarob>	well same can be discussed with lucid dreaming,,, those seem real enough till poeple wake
<blipped>	mwizard: is observation necessary for existence?
<jedininjarob>	ask a rock
<mwizard>	grim001: you actually might, if you can think of complex and long-lasting initial conditions
<mwizard>	blipped: i don't think so. why would it be?
<mwizard>	does one need to compute any term of fibonacci sequence to know it exists?
<jedininjarob>	hmmm
<jedininjarob>	no
<jedininjarob>	the pricipal is
<jedininjarob>	the pricipal
<rert>	hi, is someone here experienced with spring framework?
<blipped>	mwizard: it seems like a lot of things within the physics world depends on perception, measurement, or some form of observation. states change when observed.
<jedininjarob>	same as pascal
<jedininjarob>	or measure
<jedininjarob>	measured
<jedininjarob>	the act of observing changes the envoroment
<jedininjarob>	force of will?
<blipped>	so can we be sure that initial environment existed?
<mwizard>	blipped: nothing in physics depends on perception, actually. measurement indeed influences things, but mecause measurement is done with physical particles itself
<jedininjarob>	on this we must meditate my padawan
<knobi_wan>	has anyone of you studied computer science at university ? i would wnt to know if you have to programm a lot in the later job ? or are there field where this isnt necessary
<knobi_wan>	i just dont get into this programming thing xd
<grim001>	then why the hell would you want to get a cs degree?
<jedininjarob>	lol.... there hasnt been a computer qustion in here in about 10 mins
<mwizard>	so "force of will" does no change anything, or whether you understood results of measurement or not. if you mess with something, you become a common system with it, but it's not further
<mwizard>	blipped: in terms of gol, yes. maybe :)
<jedininjarob>	well
<knobi_wan>	i dont know i liked math and i soon have a degree but no practical experience lol
<knobi_wan>	:(
<jedininjarob>	i gotta firmly disagree
<grim001>	knobi_wan: you're saying you're almost done with a cs degree but you don't know jack about programming?
<jedininjarob>	create a new way to calute something
<jedininjarob>	can i do it
<jedininjarob>	.....
<jedininjarob>	wait for it
<jedininjarob>	liar
<blipped>	mwizard: it's funny you mention gol because i just used it as a project in class to review arrays.
<jedininjarob>	mwahahaha
<knobi_wan>	when we had programming tasks i got bad grades but passed exams
<knobi_wan>	:p
<jedininjarob>	hey knobi_wan
<grim001>	knobi_wan: that's like being an english major that barely speaks english
<jedininjarob>	here you go answer to all you issue with programming
<mwizard>	blipped: i've used gol, because it's simpler to describe than our actual universe - no need for assumptions like "imagine we have complete theory of everything that let's us determine outcome of interaction of any two particles"
<grim001>	and asking whether they can get a job that doesn't really involve speaking english after they graduate
<mwizard>	but if we some day will, it won't be any hard to create universes at our will and observe them at given points of time. i dunno if it would make any sense, however
<blipped>	mwizard: you teach?
<jedininjarob>	here you go should help
<jedininjarob>	http://meatspin.on.ufanet.ru/
<mwizard>	blipped: nope
<mwizard>	should i? lol
<jedininjarob>	you could
<jedininjarob>	would be hard
<jedininjarob>	i have tuaght for a while
<jedininjarob>	challeging but fullfilling
<blipped>	mwizard: perhaps give it a try.
<jedininjarob>	knobi give that link a spin see if it helps you coding
<blipped>	mwizard: i've been in this channel on and off for awhile. sometimes under this nick, sometimes others. usually just lurking. i think you're the same person that posts rather interesting coding puzzles and such. you're more into computing theory and such if i remember correctly?
<mwizard>	blipped: hm... no, unfortunately, i'm just trying to help others at #javascript and #python, answering noob questions
<knobi_wan>	well i was thinking when u have to do it a lot u get used to it and it becomes easier but often i have a idea how it could work but no idea how to programm it
<jedininjarob>	.... try bash
<jedininjarob>	great start
<knobi_wan>	math was easier than the programming stuff haha :/ weird
<jedininjarob>	can do alot acualy
<blipped>	mwizard: ahh then i'm mistaken.
<mwizard>	blipped: it's okay, i like puzzles too
<jedininjarob>	acualy i have a good question
<mwizard>	jedininjarob: hard to believe you do
<jedininjarob>	i want to teach a computer to learn to play go the chiness game
<mwizard>	to teach or to program/
<jedininjarob>	whith out the library of moves
<blipped>	jedininjarob: it's a good ai problem.
<jedininjarob>	just the basic strategy
<jedininjarob>	program /teach same here for results
<mwizard>	when you program something, you implement algorithm for solving a problem. when you teach something, you implement an algorithm that will implement an algorithm to solve a problem.
<mwizard>	that's different stuff
<jedininjarob>	hmmm
<mwizard>	anyway, if you want to teach it something, you could try evolve some kind of brainfuck program with genetic algorithms
<mwizard>	that would be punished for wrong moves
<jedininjarob>	...lo;
<jedininjarob>	lol
<jedininjarob>	troolled?
<mwizard>	no, i'm serious now
<jedininjarob>	pk
<jedininjarob>	ok
<znoosey>	lisp would be easier, then you could read it after it is done >_<
<jedininjarob>	 i am very eager to master bash
<mwizard>	znoosey: brainfuck is better for evolving, because any brainfuck program is valid
<jedininjarob>	kinda working on it, got a col random number generator figured out
<mwizard>	with lisp you better evolve asts, and that makes crossover harder
<znoosey>	mwizard: does it matter? even if it is valid it won't do you any good if it does not work
<blipped>	znoosey: that's why you evolve it to do something.
<mwizard>	znoosey: it does matter. imagine you have a program that requires you to write 100 digits of pi before each line
<jedininjarob>	the current program i am working on now,
<mwizard>	znoosey: in this ridiculous case it would be very hard to evolve such a program to do anything useful
<jedininjarob>	my jarvis ai
<mwizard>	because it contains large piece of syntactic noise
<jedininjarob>	i am implamenting a learning cycle
<mwizard>	and evolution is a blind watchmaker
<mwizard>	it will have to guess it again over and over without knowing what it's looking for
<jedininjarob>	with basic rule sets that can evolve over games would change that
<lf94>	text editors go
<mwizard>	the only thing i'd add to brainfuck is char to skip everything up to the next instance of the same char, so that could be used to toggle "genes" and comment-out temporarily useless code regions
<znoosey>	mwizard: you might be right, i wouldn't know, i only have a very basic understanding of ga's, but to me that does not make sense, so my "why" here is actual questions
<blipped>	if you want to start simple, just create a ga to fit a line to a set of points. that's the basis of a lot of ai
<mwizard>	znoosey: gas are very simple. you have a "dna", which can be anything - literally anything. and you have a fitness function, which takes your dna, whatever it is, and returns some number, which is "score" for that dna.
<znoosey>	mwizard: yes i know the basics
<mwizard>	znoosey: so dna can be plain source of program, or ast, or complex structure, whatever
<pyon>	znoosey: it's basically one way to justify a trial and error process
<mwizard>	yep
<mwizard>	and just another approach on function optimization
<znoosey>	mwizard: my problem here is: why would you want it to have impossible programs? it seems wasteful
<pyon>	znoosey: where the things being tried don't necessarily come from a deep insight on the nature of the problem
<mwizard>	znoosey: i wouldn't, that's why i'm against using lisp as it is. any brainfuck program is valid, but not any lisp program is valid, and that unnecessarily inflates search space
<jedininjarob>	if given clear enough os or simple programming can make hard task or impossible task managble time wated is equal to resource spent
<znoosey>	if you have (lets make this easy) the basic maths operators, +-/* make them the crossover points? then whatever maths thingy it would produce would be legal, it requires some knowledge about the language beforehand sure but wouldn't this be faster? than to just let it go through it all blindly?
<blipped>	though most of the time other methods work better than ga
<jedininjarob>	and your thoery of a blind whact maker is wrong,  evolution is a building process,,,, one of towers and bridges,
<jedininjarob>	one system from another, to another, to another
<znoosey>	i guess if you are ok with ending up with a black box, sure go for an unreadable language, but i want to see what it has ended up with!
<jedininjarob>	every point in math is comparitive, one thing agasnt another, + / - / * or / or =  < or > is all it is
<mwizard>	znoosey: do you know how evolved lisp programs look like? they aren't more readable than brainfuck
<znoosey>	mwizard: i have made a few
<pyon>	mwizard: evolved programs in any language aren't readable
<mwizard>	yep, that's my point
<znoosey>	mwizard: it is a while ago though, and they where just toy problems
<mwizard>	you can always use another ga to shrink your program to minimum
<pyon>	evolving code doesn't make much sense... the space of syntactically valid consists mostly of shit useless programs
<mwizard>	just introduce another term in fitness function that accounts for length
<pyon>	so using ga to come up with a program is like trying to find a needle in a haystack
<mwizard>	pyon: that's why we are optimizing against some fitness
<mwizard>	no, you're not right
<planckwalk>	gas work best where the function mapping genes to fitness is at least somewhat continuous
<pyon>	syntactically valid programs*
<rantingdude>	should i prefer chibi scheme over guile? i couldn't find anything about how chibi's performance characteristics.
<pyon>	dammit
<mwizard>	just don't make restrictions very hard at the very beginning
<mwizard>	space of syntactically valid programs is huge, but humans somehow navigate in it with meaningful results.
<mwizard>	there is nothing to stop guided random to do the same
<pyon>	mwizard: humans do it but they don't try random stuff
<pyon>	or at least i don't try random stuff
<znoosey>	pyon: you must not have seen the average college student
<mwizard>	pyon: they try random stuff, but unconsciously - that's called thinking
<mwizard>	znoosey: shotgun programming, yeah
<pyon>	i use heuristics, but these heuristics are based on principles that make them sweet reasonable things to try
<pyon>	even if they might fail
<znoosey>	pyon: but if someone put you infront of a machine you had no idea how worked, and told you to work it, you would just try pushing buttons until it did something
<znoosey>	pyon: and eventually you would learn which buttons did what
<znoosey>	as long as you got feedback
<pyon>	znoosey: or i'd ask for the manual
<znoosey>	pyon: this machine is built by me, therefore it has no manual
<mwizard>	pyon: you're biased, because you have an experience. better think of a toddler making use of machine znoosey told about
<pyon>	znoosey: also, my willingness to try arbitrary stuff depends on (0) how much time i have, (1) how costly the machine is, (2) how likely random actions are to break the machine [or, rather, an estimation of this]
<mwizard>	you can't break the machine, because machine is stateless
<znoosey>	pyon: in this case the machine is all that matters, your life depends on making it give you water and food, there is nothing else in the universe
<mwizard>	nothing you do to it is permanent, or it would quickly get you into a trouble of "unwinning state"
<blipped>	znoosey: no manual? i'm sorry, but we can't hire you for our next project.
<deerhawk>	let [] be to bits what bits are to natural numbers. i'm looking for []. am i confused here?
<znoosey>	blipped: good! i like my current job :p
<mwizard>	deerhawk:
<ninjapenguin>	deerhawk: here you go; []
<mwizard>	deerhawk: let [] be to 0 what apple is to empty set.
<ninjapenguin>	don't lose the square brackets again!
<deerhawk>	mwizard: fair point. but i'm trying to find the sub-parts of bits :d. implicitly that redefines 'bit'.
<mwizard>	deerhawk: i understand what you are trying to do. however, you're doomed for one simple reason
<mwizard>	when talking about quarks, scientists search for details, because they didn't create them.
<mwizard>	they don't have full understanding of how system works
<mwizard>	it's total opposite of bits, which were created by information theory scientists
<mwizard>	they are defined so. you can't explore nothing more beyond what was defined
<mwizard>	it's like doing "noclip" in quake or half-life map and flying around, trying to find secret city with live citizens
<mwizard>	that leads to disappointment only, because those maps were created limited, and bits were created to only hold their valid
<mwizard>	*value
<rumpledelf>	mwizard: i like your train of thought
<deerhawk>	lol, i liked the part with noclip
<deerhawk>	well, now we're on the same page mwizard :p. thanks. what i want to do from here is to define some stuff from which you can derive bits :3
<deerhawk>	so if you're clever enough, that can be done? :3
<mwizard>	deerhawk: you can try to think of common superclass of "quantum bit", "binary bit", "ternary bit" and so on, but i'm not sure information theory doesn't already have this done
<rantingdude>	which scripting language to use for embedding in rust? is there anything that takes special advantage of rusts features?
<mwizard>	so you can go along "generalization" way, but you can't go along "containment" way further.
<pleiosaur>	rantingdude: there's lua bindings for rust
<mwizard>	rantingdude: lua, as always?
<pleiosaur>	rantingdude: i don't know of any scripting languages that specifically cater to rust's features, no
<mwizard>	but you can make use of rust features in lua, because it's easy to extend lua with whatever features you want it to use
<rindolf>	hi all.
<mwizard>	hi, mr. fish :)
<anj7>	hey guys o/
<rindolf>	mwizard: heh.
<rindolf>	anj7: hi, sup?
<ihatehex>	xeno_, how do you usually handle postal codes?
<anj7>	rindolf: just developing my website. you ?
<rindolf>	anj7: i've moved to my laptop for now.
<rindolf>	anj7: and been configuring it.
<anj7>	rindolf: oh, ok.
<rindolf>	anj7: yesterday i worked on a sokoban solver.
<xeno_>	ihatehex: it depends, my preference is as a postalcode value object
<anj7>	rindolf: you know how can i get rid of the dotted rectangular selection for a button in html?
<anj7>	rindolf: nice!
<ihatehex>	xeno_, elaborate? :p
<rindolf>	anj7: maybe using css.
<ersteven>	....omg.. openssh .. after installing this, it resets your path variable ???? really???
<rindolf>	ersteven: what?
<anj7>	rindolf: yea, i need the property.
<ersteven>	rindolf, after installing it, most of the commands are not recognized, gem .. rhc.. git ..
<xeno_>	ihatehex: a value object is typically an immutable object (that is, you set the value when you create it, and can't change it later)
<rindolf>	ersteven: how did you install it?
<ersteven>	then when i took a look, only the openssh directory was there
<xeno_>	ihatehex: and it doesn't have any id, the id of it is the value
<ihatehex>	xeno_, so an enum would fit this description?
<rindolf>	ersteven: what is your os+distro+versions?
<ersteven>	rindolf, through an installer, i'll see if i can find the link.. so many tabs open
<ihatehex>	but i would need so many lines of code... would have to find a way to script this
<ihatehex>	i don't want to write 4000 lines
<ersteven>	windows 7 - ultimate
<anj7>	rindolf: any idea?
<xeno_>	ihatehex: you should not use an enum for postal codes
<jedininjarob>	any cryptography guys here tonight?
<rindolf>	ersteven: ah, windows.
<ihatehex>	why? >:
<ersteven>	rindolf, yah.. crap man
<ersteven>	lol
<rindolf>	anj7: sorry - not offhand.
<xeno_>	ihatehex: since it's almost 10000 possible values
<ihatehex>	thoughts, then? :p
<jedininjarob>	i need help with rand numbs
<anj7>	rindolf: ok
<planckwalk>	also because they're defined by some external agency, and not your code
<xeno_>	ihatehex: class postalcode { final string postalcode; public postalcode(string value) { objects.requirenonnull(postalcode); ... other validations... ; this.value = value; } public string getvalue() { return value; } }
<ihatehex>	xeno_, this type of thing would still belong in domain, right?
<xeno_>	yes, absolutely
<ihatehex>	ok, good
<ihatehex>	i was thinking of doing something like that, but wasn't sure how popular it is to make classes for everything that ... in practice ... is just containing a string
<xeno_>	i almost always do that
<ihatehex>	is it wise to do the same for addresses?
<xeno_>	yes
<ihatehex>	basically break every string into some kind of class that checks for it
<ihatehex>	whether it's the right kind of string, while simultaneously making code more readable
<xeno_>	yep.
<xeno_>	yes, and if you for instance need some other code to handle it, you have a natural place to put it
<rindolf>	anj7: did you try asking on #css ?
<anj7>	rindolf: yea. no respones.
<rindolf>	anj7: ok.
<znoosey>	anj7: have you tried typing your exact question into google?
<mwizard>	have you tried asking on stackoverflow?
<znoosey>	anj7: as when i did it the first result was exactly what you need
<ihatehex>	xeno_, say i have a class like "address", would it make sense to have classes like "street" and "city" in it as well, or would i keep those as strings?
<anj7>	znoosey: yes, and the outline property i set to 0 but still ain't working
<xeno_>	ihatehex: only thing is, you should avoid having references to larger domain objects inside smaller one, or having references to services from domain objects
<znoosey>	anj7: in which browser?
<anj7>	znoosey: firefox
<ihatehex>	xeno_, what would an example of such a reference be?
<anj7>	and i tried -moz.... as they suggested.
<xeno_>	ihatehex: it depends
<xeno_>	ihatehex: for postalcode for instance, a method to get the name of the city inside the postalcode object would likely require a reference to something more complex, so it would be a bad idea to have it there
<xeno_>	ihatehex: while for instance, for an address  to contain a postalcode is fine
<ihatehex>	i'm really not sure how to obtain cities/areas from postal codes, i know the other groups stole code from previous students of the course
<ihatehex>	:p
<ihatehex>	i could take the string of a postal code and return the correct "postal area" but then i'd have to code 10 000 lines or something
<ihatehex>	just for that
<znoosey>	anj7: if you post your html somewhere we might be able to help, i can't even manage to replicate it
<anj7>	znoosey: check www.creationofgod.cf/login.php
<mwizard>	ihatehex: shouldn't there be something reference algorithm for that?
<ihatehex>	mwizard, surely there should be :p
<ihatehex>	but i don't know where to obtain it :p
<ninjapenguin>	anj7: is that a serious site, btw? or just a placeholder text for designing purposes?
<xeno_>	ihatehex: you would typically have a hashmap that maps codes to cities, and populate it from a data file or a database
<anj7>	ninjapenguin: that is serious.
<ihatehex>	xeno_, the problem being how to obtain that data file
<xeno_>	...and in both of those situations, a repository would be the way to handle it
<ihatehex>	:p
<xeno_>	ihatehex: yes, you could probably download it from the web pages of posten.no or something
<ihatehex>	xeno_, been searching on posten.no but can't find it... hmm
<anj7>	brb, if you get any solution. you can pm me.
<xeno_>	http://adressesok.posten.no/nb/postal_codes/search?utf8=%e2%9c%93&q=oslo
<xeno_>	but yeah, i couldn't find the full list
<ihatehex>	tricky
<ihatehex>	annoys me because i know other groups have stolen this from older students
<xeno_>	ihatehex: http://www.bring.no/hele-bring/produkter-og-tjenester/brev-og-postreklame/andre-tjenester/postnummertabeller
<rumpledelf>	last time i needed a list like this it turned out that some nice person had compiled it and put it on their blog
<rumpledelf>	the 'official' source was piecemeal etc so someone made it all good
<znoosey>	anj7: it looks like the second most upvoted answer works: http://stackoverflow.com/questions/71074/how-to-remove-firefoxs-dotted-outline-on-buttons-as-well-as-links/3844452#3844452
<ihatehex>	xeno_, that's great, thanks!
<ihatehex>	xeno_, where would i put the file in ddd?
<ihatehex>	resources outside of the java?
<ihatehex>	hahaha
<ihatehex>	as if you'll grow up
<ihatehex>	:d
<rumpledelf>	growing up is overrated
<xeno_>	ihatehex: you would typically have a resource folder (like src/main/resources) where you put embedded data files
<ninjapenguin>	anj7: well, just as a heads up, don't ever attack other beliefs. your "false theories" is basically attacking those who believe in evolution and people don't like aggressive believers.
<xeno_>	ihatehex: ...or you could put it into a database, and maintain it there - but that's shitty...
<ihatehex>	xeno_, i'm not allowed to use databases, can exclusively use 'files'
<ninjapenguin>	i don't mind if one believes in what i don't, as long as they don't attack my believes or try shoving their believes down my throat.
<xeno_>	ihatehex: ok, then either keep it on static record length, or use csv, and put it in a file /src/main/resources/postalcodes.csv or something
<ihatehex>	xeno_, it's tab separated
<ihatehex>	can't i just use that?
<ihatehex>	:p
<mwizard>	ninjapenguin: it's strange to "believe" in evolution, given it's a proven fact.
<ihatehex>	i would have to rewrite it if i wanted it to be .csv
<mwizard>	it's like believe in math
<xeno_>	ninjapenguin: it's a funny dilemma there... if they believe nonbelievers goes to hell, respecting your believes is actually the most selfish thing they can do
<xeno_>	ihatehex: yeah, you can use that
<rindolf>	mwizard: there's a difference between a theory and a fact.
<mwizard>	rindolf: gravitation is only a theory
<xeno_>	rindolf: true, facts are theories that people believe are true while at the same time thinking they don't believe.
<mwizard>	xeno_: isn't what you've just said a perfect example of doublethink?
<mwizard>	similar to "atheist is religion"?
<mwizard>	*sm
<mwizard>	"non-smoking is addiction"
<xeno_>	mwizard: i have no problem considering most atheists as religious
<mwizard>	"non-believing is belief"
<mwizard>	xeno_: yeah, and bald dudes have hair color of bald
<xeno_>	mwizard: i consider everyone who aren't epistemological nihilists to be somewhat religious
<xeno_>	ihatehex: rewriting would be a one-liner with sed, or a single command in vi
<mwizard>	xeno_: that's what chains of proofs are for. you prove something, publish proof so anyone can prove it later, and then you can build up on previous proofs without going through burden of proving them again
<mwizard>	that's how science works.
<mwizard>	i personally do not _believe_ in anything. i either know or i don't. if i know, that because there are proofs for it.
<xeno_>	ihatehex: like "vi postal_codes.txt" and then esc :s/[<tab>]/;/g <enter> esc :wq <enter>
<xeno_>	mwizard: ok, what is there proofs for?
<mwizard>	xeno_: in which domain?
<xeno_>	in all domains
<xeno_>	(quick brb)
<mwizard>	do you literally invited me to give you a list of all the proofs for everything that exists and does not exist in the world, did i get it right lol?
<ihatehex>	xeno_, still, isn't it easier to just do tabs? :p
<aidanh>	how can you know your interpretation of a proof is correct? if you can't, how can you say you know anything?
<deerhawk>	when you want to test a theory but that requires you to write a large program .. would you do it?
<znoosey>	ihatehex: xeno_ has been spending too much time with project managers who wants everything to be opened in excel
<mwizard>	aidanh: proofs are built that way. they are not "tests", they are either sound (and proving something), or they are not (e.g. they are not proving something they ought to be)
<mwizard>	so proofs don't have ambiguity by definition
<mwizard>	deerhawk: why not?
<xeno_>	mwizard: just give me one
<aidanh>	mwizard: you're missing my point, i think; how do you know, for example, you didn't misread the proof?
<mwizard>	deerhawk: computational proofs obtained with languages like coq or isabelle, are sound
<xeno_>	mwizard: btw, i know what proofs are, i've just written 214 formal ones
<aidanh>	deerhawk: well, as long as you accept that such tests can only disprove theories, why not?
<xeno_>	mwizard: but then you do know that proofs can only prove relations, right?
<mwizard>	aidanh: ah. you can't in general case, as to me. you might not be smart enough to understand it, but that's easy to test against by trying to think of conclusions and consequences of what proof states, and looking if what you came up with is what proof is proving
<mwizard>	if they are not matching, then either proof is invalid, or you misunderstood it
<ihatehex>	deerhawk, define large
<mwizard>	but if proof is consistent in all it's claims, it's definitely you
<aidanh>	mwizard: but if they do match, you still can't be certain that it's not just by coincidence
<xeno_>	mwizard: there's also a significant difference between scientific proof, and mathematical proof
<xeno_>	ihatehex: it makes no difference if it's ; or tabs
<ihatehex>	i figured
<ihatehex>	xeno_, should i use regex to validate the postal code, or is that pointless?
<xeno_>	ihatehex: it's slightly more obvious with ;, since with tabs you won't immediately see if it's actually tabs or if it's spaces, you have to check...
<mwizard>	aidanh: sure. but the point is not to just take a proof and be proud you have one, but be able to use its outcomes (is it correct word?..). it's not necessary for me, for example, to perform all kinds of experiments to, for example, know that there is compton scattering, it's enough to know that experiments done by others proved it exists and laws derived are accurate within given scope of applicabil
<mwizard>	ity
<ihatehex>	i could probably use integer.parseint(foo) instead in this simple case
<xeno_>	ihatehex: but with ;, you have to consider the possibility that the data themselves can contain ;
<ihatehex>	xeno_, so basically there's no winning
<ihatehex>	:p
<xeno_>	ihatehex: welcome to reality :)
<mwizard>	aidanh: but if i wished, i can do all those experiments myself, so i don't have to _believe_ in it being correct
<ihatehex>	xeno_, integer.parseint() or regex?
<mwizard>	believe as in accepting something without asking why
<xeno_>	ihatehex: for what?
<ihatehex>	checking postal code strings
<ihatehex>	i need validation
<ihatehex>	or should i just slap that into the gui?
<xeno_>	length and parseint is the simplest
<ihatehex>	that's what i thought
<xeno_>	but nah...
<xeno_>	or yeah
<xeno_>	hmm...
<xeno_>	with parseint you have to consider that someone can put in -143 and such
<aidanh>	mwizard: that's quite true, although there's always the (marginally slim) possibility that the theory/proof you're testing is wrong, and you make precisely the same mistake as everyone else, and therefore think it's correct
<xeno_>	ihatehex: and 0999 can cause an error
<xeno_>	ihatehex: since 0 in the beginning indicates octal
<ihatehex>	xeno_, d:
<aidanh>	aren't those integers as well though?
<ihatehex>	xeno_, regex easier then?
<xeno_>	aidanh: they are, but 0999 is an invalid octal number, since octal digits only go up to 7
<ihatehex>	just check for 4 consecutive integers? :p
<xeno_>	ihatehex: yeah, or you could also just convert it to a character stream and do find on something not in [0-9]
<ihatehex>	is that efficient? :p
<xeno_>	for regexp, just check for ^[0-9]*$ and check that length is 4
<mwizard>	aidanh: hitting that slim possibility is the process how we got quantum physics and general relativity
<aidanh>	xeno_: ahh.. strip leading zeroes then perhaps... although i think i've missed a bit of context
<aidanh>	mwizard: yep
<xeno_>	ihatehex: don't worry too much about that now
<xeno_>	aidanh: you could do that, but then it's more operations, so then it might be better with a different approach
<mwizard>	aidanh: so, it's expected, and there is nothing wrong. i've said about "scope of application", those cases don't necessarily disprove previous theories - they might just shift their scope of application so they remain correct within given conditions
<xeno_>	ihatehex: for regexps, just be sure you compile the regexp only once
<ihatehex>	haha, why?
<ihatehex>	is it slow?
<xeno_>	ihatehex: to compile it, slightly
<aewffwea>	xeno_: where do you compile regepxs?
<xeno_>	aewffwea: it's part of the java regexp api
<aidanh>	mwizard: for some theories that's certainly doable
<mwizard>	aidanh: yes, and for caloric theory it isn't, that's why nobody uses that now
<aidanh>	mwizard: that's the one i was thinking of
<xeno_>	aewffwea: doesn't make a huge difference, but when you give a regexp, it compiles it into a state machine
<aewffwea>	xeno_: deterministic or non deterministic one?
<mwizard>	aren't regexes always deterministic?
<aewffwea>	mwizard: i meant the state machine
<xeno_>	aewffwea: depends on if you try to extract groups or not
<aewffwea>	xeno_: why would that matter? o_o
<xeno_>	mwizard: heh, no... the old oromatcher for java could get into infinite recursion scenarios
<xeno_>	aewffwea: if you extract groups, you can't merge states in a way where you lose track of the actual group
<mwizard>	xeno_: how is determinism connected with halting problem? i might not see the relationship
<aewffwea>	xeno_: you are right
<aewffwea>	xeno_: so assuming no groups, it's deterministic?
<xeno_>	aewffwea: take a(\(b\)c|b\(d\))e, without groups you would just convert it do ab(c|d)e - but you can't do that with groups
<xeno_>	aewffwea: yes
<aewffwea>	xeno_: i know...
<aewffwea>	xeno_: still most regepx analyzers don't usually convert regepx to state machines... and even when they do, they don't usually convert it to a non-deterministic one because the state number can be exponential
<aewffwea>	xeno_: that's the reason i was surprised...
<xeno_>	mwizard: good question
<protist>	so if i have a feedforward neural network, do i update the weights on the output neurons?...if so, how?
<ihatehex>	xeno_, how do i use a char reader for this? s: they usually take files
<ihatehex>	the postal code will be given in a string
<ihatehex>	:p
<protist>	or do you only update the others?
<protist>	(using backpropogation)
<xeno_>	ihatehex: just do "hello".tochararray().stream().find(c -> c < '0' && c > '9') or something
<mwizard>	protist: what is type of that network?
<ihatehex>	that was way easier than what i was doing
<ihatehex>	:p
<protist>	mwizard: feedforward
<protist>	mwizard: acyclic, layered
<mwizard>	protist: then output neurons should not have any weights connected to them?
<ihatehex>	xeno_, your stream() method doesn't exist however
<ihatehex>	:p
<mwizard>	because there are no outcoming edges
<protist>	mwizard: ok that is what i was thinking...don't see it said explicitly in what i am reading
<xeno_>	aewffwea: i haven't read the code to most regexp implementations, just the theory, so i'll have to take your word for it
<xeno_>	aewffwea: if i was to implement one, i would compile to a state machine though
<protist>	mwizard: and do i use the threshold function on the output of the final neurons?
<xeno_>	s/was/were/
<protist>	mwizard: i guess i would?
<mwizard>	protist: what suits your purpose best. there is no practical sense in doing that, as threshold function is meant to control whether your neuron "spikes"
<xeno_>	mwizard: anyway, the infinite recursion problems are typically caused by backtracking
<mwizard>	protist: if you use per-neuron bias, then you probably should
<xeno_>	mwizard: with a dfsm you don't need that
<protist>	mwizard: i weight edges, is that what you mean by bias?
<protist>	mwizard: sorry, new to this :)
<mwizard>	protist: you should consider adding bias to your neurons as well, you will achieve much better results - a lot better
<mwizard>	let me find an example for you
<protist>	mwizard: ok :)...point me to some reading if you will :)
<mwizard>	protist: http://stackoverflow.com/questions/2480650/role-of-bias-in-neural-networks
<protist>	mwizard: the thing i am reading hasn't discussed biases
<mwizard>	protist: http://www.heatonresearch.com/wiki/bias
<mwizard>	because biasless networks are, well, old enough.
<protist>	mwizard: what do you mean by old enough? :p
<anj7>	znoosey: thanks i got it :)
<mwizard>	protist: neural networks, iirc, were invented at the beginning of 60s
<myrl-chan>	ihatehex: eww.
<ihatehex>	myrl-chan, you done watching your favourite anime? what was the name of it? bo.. something
<mwizard>	protist: rosenblatt perceptrons
<myrl-chan>	ihatehex: ew.
<protist>	mwizard: thank you...looking it all up :)
<mwizard>	protist: you're welcome. just remember that without bias your network might never converge
<mwizard>	and almost surely it won't
<darkcthulhu>	...
<mwizard>	protist: also consider using algorithms other than plain back propagation. it's a kind of outdated and tends to die in local minimums
<mwizard>	darkcthulhu: that's an ellipsis object, right?
<protist>	mwizard: i am looking into it :)
<protist>	mwizard: gonna implement many different types :p
<darkcthulhu>	mwizard: \ldots right there.
<protist>	mwizard: "bias and threshold amount to two different ways of doing exactly the same thing. "
<protist>	mwizard: ah...i am using a threshold...hmmm
<protist>	mwizard: is this just an efficiency concern?
<mwizard>	protist: no, unbiased neural networks lack an ability to shift their activation functions
<mwizard>	and that way they can't approximate everything
<mwizard>	protist: you use threshold function
<mwizard>	like tanh
<mwizard>	just "threshold" is different kind of thing - it relates to "binary" networks
<mwizard>	those who have only two states per neuron - activated and not activated
<protist>	mwizard: from my reading "arbitrary functions. any function can be approximated to arbitrary accuracy be a network with three layers of units (cybenko 1988)."
<mwizard>	yes, with biased network
<darkcthulhu>	mwizard: i thought you were into distributed systems, not ml and neural networks.
<protist>	mwizard: i'm using sigmoid units
<protist>	mwizard: sorry...not arguing...just ignorant and trying to prompt you to lecture me more haha
<mwizard>	protist: well... imagine you have a neuron and want to determine it's value. there are n connections to this neuron, and his "upper" neurons have values v[0...n]. you also have weights, so you can control how much upper neurons influence you - w[0...n], one weight per edge (e.g. per upper neuron)
<mwizard>	so your neuron value is w[0]*v[0]+w[1]*v[1]+w[2]*v[2]+...
<ihatehex>	xeno_, pretty confused by all this char business
<ihatehex>	what's the advantage of doing this vs handling a string?
<mwizard>	but this value would be out of range, and you'll get avalanche effects, which are undesirable
<mwizard>	so you do tanh(w[0]*v[0]+...)
<protist>	mwizard: thresh(w[0]*v[0]+w[1]*v[1]+w[2]*v[2])
<mwizard>	thresh is tanh in my example. tanh is hyperbolic tangent function, it's sigmoid going from -1 to +1
<protist>	mwizard: ah
<protist>	mwizard: i'm using thresh(x) = 1/(1+e^(-x))
<xeno_>	ihatehex: the simplest way is just string.matches("^[0-9]*$") && string.length() == 4.
<ihatehex>	any reason i shouldn't do that? :p
<xeno_>	ihatehex: the only advantage is slightly higher speed, at the cost of readability/maintainaility
<ihatehex>	my code is a huge mess, not sure this will even work
<xeno_>	ihatehex: and to be honest, if construction of postal codes is happening frequent enough for it to be a problem, then there's other better ways to optimize it
<ihatehex>	i have my chararray, i use read() on it, but that will return an int, no?
<mwizard>	protist: consider using tanh, it's faster with exactly the same behavior. so, back to bias
<protist>	mwizard: i see it mentions tanh here too :d
<ihatehex>	haha, i'll use matches then
<xeno_>	mwizard: btw, did you get the point about proofs being relations?
<xeno_>	not important, but https://xkcd.com/386/ :)
<ihatehex>	haha
<darkcthulhu>	xeno_: i'm curious to know what a program proof looks like. could you link me to your proof?
<myrl-chan>	was going through 4chan and i found this through reverse image searchs.
<myrl-chan>	https://wiki.installgentoo.com/images/b/b8/niceproprietarysoftware.jpg https://wiki.installgentoo.com/images/7/7b/rmstitan.jpg
<xeno_>	darkcthulhu: they look horrible, but give me a second
<mwizard>	protist: ah, i see where you got that about thresholds. no, that's entirely different concept, that was finally abandoned in favor of bias, being simpler. binary networks have thresholds too, however, but there they are different thing, more related to step activation function
<xeno_>	darkcthulhu: this is the last one: http://pastebin.com/jwsxvl8c
<xeno_>	darkcthulhu: note that i didn't attempt to clean it up at all, but it wouldn't help that much...
<mwizard>	xeno_: if you are talking about mathematical proofs, then yes. if you were talking about physical proofs, then no
<darkcthulhu>	encapsulation: hmm.. looks quite abstruse.
<darkcthulhu>	oops.. sorry encapsulation
<protist>	mwizard: makes sense i think
<darkcthulhu>	xeno_: ^
<darkcthulhu>	xeno_: how does one read that proof?
<bizarrefish>	hi all :)
<xeno_>	darkcthulhu: to understand it you basically have to a) understand what the different things does, and b) run it interactively so you can see the current proof targets along the way
<gedamo>	hi bizarrefish :)
<mwizard>	protist: so, not to repeat all those articles again, but the point of bias is to be able to shift activation function back and forth, making it cover wider spectrum of possible values, that way making neural network able to more general models
<reynir>	i don't know the context, but using booleans in proofs usually isn't 'nice' :)
<xeno_>	reynir: it's one of the exercises in software foundations
<darkcthulhu>	xeno_: hmm.. any good resource for a quick run through?
<bytefire>	hi
<xeno_>	reynir: the end of this page: http://www.cis.upenn.edu/~bcpierce/sf/current/prop.html#lab260
<xeno_>	darkcthulhu: software foundations is the best, but quick isn't the way i would describe it
<xeno_>	darkcthulhu: http://www.cis.upenn.edu/~bcpierce/sf/
<gedamo>	hi bytefire :)
<darkcthulhu>	xeno_: ty :) will try to wrap my head around the basics.
<bytefire>	hey gedamo
<ihatehex>	xeno_, right, so now i have to check the entire registry for whether the number exists
<bytefire>	a c question. can anyone tell why the output of this c program is always 1, irrespective of number characters typed?
<reynir>	xeno_: humm
<bytefire>	http://pastebin.com/aqubirjw
<ihatehex>	xeno_, any particular reader i should use for this?
<ihatehex>	bufferedreader of some kind i guess
<xeno_>	ihatehex: for the file?
<ihatehex>	xeno_, yes
<darkcthulhu>	bytefire: scanf returns number of chars read?
<ihatehex>	the file containing the \t separated values
<bytefire>	darkcthulhu, yes
<xeno_>	ihatehex: just use files.lines(path)
<ihatehex>	the hell is that? lol
<xeno_>	ihatehex: do something like files.lines(path).map(lineparserfunction).collect(collectors.tocollection(hashmap::new);
<protist>	mwizard: *s* is my sigmoid predictor....*t* is my tanh predictor
<protist>	mwizard: my tanh seems to not be converging...or not learning at all
<protist>	mwizard: http://pastebin.com/l8rkaxsm
<xeno_>	ihatehex: or actually, you have to keep the first part outside of it (typically in a try block) to close the file descriptor afterwards
<ihatehex>	can i even do lines(path).map(lineparserfunction)?
<ihatehex>	yes
<ihatehex>	i need try (files.lines(path)) { something; } catch (exception e) { somethingelse;}
<darkcthulhu>	bytefire: looks like it'll return the number of items successfully read, which is still 1 according to it here.
<ihatehex>	yes?
<vendu>	hello =)
<ihatehex>	the files.lines(path) will buffer all the lines of the file in memory
<xeno_>	actually, it needs to be like (l -> lineparserfunction)
<protist>	mwizard: could it be that my initial weights are too small?...or they update too slowly in backpropogation?
<ihatehex>	l?!
<xeno_>	where lineparserfunction is a method that takes a string and returns a postalcode
<ihatehex>	i take it i'm not putting this in the postalcode class then, but the gui
<bytefire>	darkcthulhu, say i type 4 characters. then it read 4 characters right?
<darkcthulhu>	bytefire: it is going to return the number of items successfully assigned, and there is only one, a.
<sleeper>	if you had to pick, what would you say are the most efficient web development language platforms in common use today?
<mwizard>	protist: i opted out from using back propagation long ago, i now use either gas or simulated annealing, they're more universal
<bytefire>	oka. can there be more than one?
<lf94>	sleeper, laravel
<darkcthulhu>	bytefire: wondering...
<protist>	mwizard: the backpropogation explaination tends to use sigmoid....but should it fail like this with tanh?
<mwizard>	darkcthulhu: i'm also in ml and nns too.</slowpoke>
<sleeper>	lf94: i mean in terms of memory and cpu overhead.
<protist>	mwizard: or is this a sign of my implementation being wrong?
<mwizard>	protist: i have no idea without looking at your implementation
<gedamo>	bytefire: scanf returns the number of items read, not the number of characters
<mwizard>	protist: but, frankly saying, i don't want to look at your implementation too close :)
<sleeper>	i get that i don't want to be doing shit in c and assembly, but out of e.g. php, rack, wsgi, node, other
<protist>	mwizard: :)
<protist>	mwizard: understandable
<bytefire>	gedamo, does that mean it wil always return 1.
<darkcthulhu>	bytefire: http://ideone.com/w572j2
<darkcthulhu>	there.. returns 2
<gedamo>	bytefire: for your example, yes, you only have one element in the format string
<protist>	mwizard: pretty short without all the class definitions http://pastebin.com/g8eejhbk
<darkcthulhu>	mwizard: i see.
<lf94>	sleeper, nodejs
<rindolf>	protist: hi, sup?
<protist>	rindolf: programming :)
<bytefire>	ah i see!
<sleeper>	lf94: that's fair
<rindolf>	protist: nice. :-)
<protist>	rindolf: playing with neural networks
<mwizard>	you can post that as question on so and see, if someone wants to "dive into clojure.jpg"
<bytefire>	thanks darkcthulhu gedamo
<protist>	rindolf: what about you?
<darkcthulhu>	bytefire: you're welcome :)
<rindolf>	protist: i've fixed the splash screen on kde 4.
<protist>	rindolf: what was the issue?
<ihatehex>	god i need a break, try to come back with it with fresh eyes
<darkcthulhu>	freenode webchat really needs to be a chrome webstore application. the damn thing doesn't even raise notifications.
<protist>	mwizard: it is common lisp
<mwizard>	protist: also, i don't know about innards of your data, but do you know tanh does -1 to +1, and your sigmoid goes 0 to 1, right?
<mwizard>	protist: i didn't look too close, from your initial sample it looked like scheme to me
<myrl-chan>	i just saw a benchmark with an 8gb video card.
<myrl-chan>	wow.
<mwizard>	protist: syntax is the same anyway, the only difference is standard library, so it's irrelevant :)
<protist>	mwizard: ah i wrote my sigmoid function wrong....but it /seems/ to be working >:(
<mwizard>	protist: sorry for making you realize that :)
<protist>	mwizard: haha :)
<mike802>	this is not the channel for hardware benchmarks
<mike802>	try ##hardware
<myrl-chan>	mike802: pls.
<rindolf>	protist: http://paste.debian.net/173672
<rindolf>	protist: that's the kde issue and its solution.
<mike802>	you think that has anythning to do with coding?
<myrl-chan>	mike802: did i say that it does?
<myrl-chan>	heck, a shittonne of topics here have nothing to do with coding.
<myrl-chan>	mike802: but i don't see you complaining.
<protist>	rindolf: lol, nice
<mike802>	i guess you're just unlucky
<mike802>	must be your nick'
<protist>	rindolf: fixed an issue my room mate was having with his ide in a similar fashion earlier haha
<protist>	rindolf: turned a setting off and back on
<myrl-chan>	mike802: perhaps.
<rashad>	hello. i have implemented the alphabetawithmemory function found here: http://people.csail.mit.edu/plaat/mtdf.html but there is a problem: if you have a node with evaluation 6 at depth 3, and another node with same evaluation at depth 1, then the two moves leading to these nodes will be equal to the algorithm. i want the move that gets faster to winning to be considered first.
<rashad>	how do i do this?
<gedamo>	rashad: you want it to prefer the node at depth 1?
<rindolf>	protist: nice.
<mwizard>	i've just thought about the thing... what if interactive fiction games were multiplayer?
<_blizzy_>	i'm starting to hate elitist programmers
<gedamo>	mwizard: muds?
<mwizard>	gedamo: no, muds are a bit different kind of thing. they are sort of rpgs with textual controls
<mwizard>	and i mean something like zork
<gedamo>	i used to play a moo (mud, object oriented) which was player programmable so you could make it into whatever you wanted
<mwizard>	gedamo: tadaaa, tads seems to have multiplayer support
<mwizard>	however i'm sure how thorough it is
<gedamo>	it could be seen as a collaborative programming environment
<mwizard>	programming is fun, but it wouldn't be the game to play with anyone
<mwizard>	like, it requires specific skills and way of thinking
<rashad>	gedamo: yes.
<gedamo>	rashad: perhaps something as simple as adding the depth to the score would do it
<gedamo>	oh, wait, the depth decreases as you go down, so maybe subtract it
<rashad>	i thought of that. but there is a problem: i want the depth to be only a tie-breaker, and not make a deeper node worse than a shallower node when in fact the deeper node is better.
<rashad>	only when two nodes are equally good the depth should be considered.
<rashad_>	i got disconnected. what was the last line i sent that you received?
<rindolf>	rashad_: <rashad> only when two nodes are equally good the depth should be con
<rashad_>	ok.
<rashad_>	can we make the alpha beta also output the depth at which the minimax value was calculated?
<rashad_>	i am googling "alphabeta tie breaking" and "minimax tie breaking" but getting no results.
<_blizzy_>	i tried to fib 100
<_blizzy_>	bad mistake
<protist>	mwizard: ok much more confident in my implementation now
<rindolf>	_blizzy_: fiboanacci?
<protist>	mwizard: tanh seems to go wild
<_blizzy_>	rindolf, yes.
<bytefire>	how come this c code doesn't give a compiler error at `a = 1, 2, 3;`? http://pastebin.com/eaw5btt4
<protist>	mwizard: sigmoid doesn't on my set up
<rindolf>	_blizzy_: the 100th term in the fibonacci sequence is not that big.
<protist>	mwizard: will explore more approaches....bias, etc
<_blizzy_>	rindolf, oh
<_blizzy_>	idk why ruby is having a hard time with this then.
<lf94>	text editors go
<_blizzy_>	sublime go
<rindolf>	bytefire: a, b has a meaning in c.
<rindolf>	_blizzy_: is it the tree recursive algo?
<protist>	mwizard: tanh seems to converge one output and then the rest of the outputs go wild
<bytefire>	rindolf, what does it mean? any links?
<miniman10000>	hmm
<_blizzy_>	rindolf, it's this. https://gist.github.com/notblizzard/de1bb7cd01b8cf4539d8
<_blizzy_>	so yeah, recursive one
<miniman10000>	ive never used shader toy before and im not sure how i get a texture that doesnt scale to the full screen...
<reynir>	"for most people, the computer is only a tool, like a vacuum cleaner. for me, it’s like a colleague."
<miniman10000>	oh it must be frag coord
<miniman10000>	lol ive got no idea what im doing
<miniman10000>	change all the numbers!
<_blizzy_>	hmm, seems like python can't handle this either
<_blizzy_>	this is going to sound silly but
<_blizzy_>	i didn't know the fib sequence until like
<_blizzy_>	10 minutes ago
<miniman10000>	still not entirely sure why webgl requires .0s
<aewffwea>	reynir: colleagues are a tool
<_blizzy_>	aewffwea, tools are tools
<bytefire>	rindolf, got it here, http://en.wikipedia.org/wiki/comma_operator#examples
<rindolf>	_blizzy_: ah, maybe try «def fib(n) ; a,b = 0,1; for i in 1 .. n do a,b = b,a+b; end ; return a; end» instead.
<gedamo>	_blizzy_: let fib = 0:1:(zipwith (+) fib (tail fib)) in fib !! 100
<rindolf>	_blizzy_: this is an o(n) solution.
<reynir>	eh
<xgc>	_blizzy_: right. you don't need recursion.
<_blizzy_>	i still don't understand big o notation.
<_blizzy_>	.-.
<_blizzy_>	if only my school had an ap comp sci class.
<lf94>	big o notation is easy.
<_blizzy_>	that's what people who know it say
<lf94>	_blizzy_, big o is simply this
<_blizzy_>	.-.
<reynir>	you can do fibonacci in o(log(n)) using a 2x2 matrix
<lf94>	anything with a loop
<lf94>	is o(n)
<rindolf>	_blizzy_: you can also do it in o(log(n)) using matrix exponentiation.
<lf94>	loop with a nested loop
<rindolf>	_blizzy_: like reynir said.
<_blizzy_>	do i need to know pre-calc for this
<lf94>	is o(n^2)
<lf94>	no.
<miniman10000>	alright im getting somewhere if i can just figure out how to have true/false on differnt pixels i should be able to draw a non full screen texture
<lf94>	_blizzy_, log(n) is a litlte more complex
<wei2912>	lf94: that barely covers big o notation :p
<lf94>	i forget how to figure out if something is log(n)
<reynir>	_blizzy_: nah, all you need to know is how to multiply two 2x2 matrices and exponetiation by squaring
<rindolf>	lf94: if you keep dividing by 2.
<wei2912>	lf94: let me try to find something for you
<lf94>	ah right
<_blizzy_>	thanks everyone for the help.
<lf94>	wei2912, no that is basically it
<lf94>	then you just combine everything.
<wei2912>	lf94: well, for practical usage, sure
<lf94>	o(log(n)+1)
<wei2912>	but there's recursive functions too
<lf94>	o(log(n)+n)
<lf94>	o(log(n)+n+5)
<lf94>	etc
<lf94>	recursive are log(n) iirc
<wei2912>	no
<lf94>	wait no you are right
<reynir>	_blizzy_: i think python has matrix support so it should be "easy" :)
<lf94>	it depends
<_blizzy_>	i mean, i'm learning this so if it comes up in an interview
<wei2912>	master theorem
<_blizzy_>	i won't be stuck
<_blizzy_>	i hope they wouldn't ask too hard of questions for a junior position.
<wei2912>	if you do plan to go more into algorithms, you'll have to study the whole concept of big o notation
<lf94>	_blizzy_, there is a good chance they would ask big o notation questions.
<_blizzy_>	rip.
<_blizzy_>	i would just honestly answer i don't know.
<_blizzy_>	i'd rather be honest than to lie.
<lf94>	_blizzy_, there is a good chance they will ask about the development life cycle too.
<wei2912>	_blizzy_: the questions they ask should be easy
<lf94>	dlc is pretty important imo
<znoosey>	i was at like 10 interviews here before i got my job, none of them asked about big o... guess norway is different from the us :p
<rindolf>	_blizzy_++ # honesty.
<wei2912>	heh
<_blizzy_>	i'm not an int tho
<_blizzy_>	._.
<wei2912>	rindolf: well, it's a way better strategy than bullshitting your way through
<wei2912>	rindolf: unless you're a liberal arts major *ducks*
<rindolf>	wei2912: heh.
<lf94>	_blizzy_, you have a interview?
<lf94>	_blizzy_, you'll be fine.
<_blizzy_>	lf94, no.
<lf94>	_blizzy_, they usually ask algorithmic questions too
<_blizzy_>	i want my first one to be a programming job however.
<lf94>	that's exactly what i did ;)
<_blizzy_>	ugh, i have no math knowledge past algebra 2.
<lf94>	(and, i got it)
<_blizzy_>	nice.
<reynir>	hm, it seems i was wrong - you need libraries for matrix multiplication in python
<lf94>	_blizzy_, math usually never matters.
<wei2912>	reynir: well, if you want actual matrix multiplication, sure
<lf94>	_blizzy_, just know your language well.
<lf94>	(pl, not talking language)
<lf94>	and basic software development concepts
<lf94>	life cycle, methologies, etc
<lf94>	oh, and most importantly!
<lf94>	be enthusiastic!
<lf94>	show you are full of energy etc
<lf94>	people love that
<wei2912>	writing haskell feels like bliss when you get it right
<_blizzy_>	ikr
<_blizzy_>	lf94, oh ok.
<tazmain>	hi all, does anyone have some code or examples to controll a 4 pin stepper motor ?
<znoosey>	tazmain: try in #arduino
<zacts>	morning
<rindolf>	zacts: morning.
<zacts>	hello rindolf
<rindolf>	zacts: sup?
<zacts>	_blizzy_: i find that math proofs and sentential deductive logic have been really helpful for me to understand maths
<zacts>	namely a good book i've found is: how to prove it by cambridge press
<zacts>	if you know quadratic equations you can work through this book
<zacts>	and you'll do lot's of cool stuff with it
<zacts>	and then i find more advanced maths to be much simpler after this
<zacts>	rindolf: hey, i'm just doing lots of homework / studying lately, and lisp
<_blizzy_>	thanks, zacts
<zacts>	the author of how to prove it is daniel j. velleman
<zacts>	i can highly recommend it
<zacts>	_blizzy_: also check out the mit open courseware math courses
<zacts>	and khan academy for a review
<_blizzy_>	zacts, oh ok.
<rindolf>	zacts: ah, ok.
<zacts>	sorry, i've just got maths on my mind, as i'm studying to pass into the highest possible math placement at my university via a placement exam
<mostly_y>	the book is really good indeed
<_blizzy_>	weird how i can't pick up big o
<_blizzy_>	but i can pick up sorts easily
<rindolf>	_blizzy_: what don't you understand about big o notation?
<_blizzy_>	rindolf, like, i understand that it's a way to measure how efficient an algorithm is
<_blizzy_>	i just don't understand the the variables inside o( )
<_blizzy_>	i know what log is, etc.
<wei2912>	_blizzy_: it depends on what the variables refer to
<wei2912>	o(n) in the context of sorting a list usually refers to the number of elements in the list
<lf94>	i figured out my performance problem.
<lf94>	flippin'. friggin'. battery.
<lf94>	i guess the kernel has to constantly talk to the battery, and if the battery is considered low, power management kicks in.
<lf94>	i have a real shit battery though, almost 100% dead
<lf94>	so i took it out...system runs like brand now.
<lf94>	s/now/new/
<_blizzy_>	wei2912, oh ok.
<travelr>	frameworks. why can't i stand them.
<rindolf>	_blizzy_: if the complexity is o(n^2) it means that if n moves from a to b then the approximate time (or whatever) will grow by b^2/a^2
<znoosey>	travelr: either you have only used bad ones, or you are new enough at programming that you don't see how much more effective they are than to write stuff from scratch
<_blizzy_>	and that's where you lost me.
<_blizzy_>	travelr, which one(s) did you use?
<rindolf>	so if a is 100 and b is 200 (twice that), then the time will grow 4 times.
<_blizzy_>	oh.
<rindolf>	travelr: frameworks for what?
<lf94>	travelr, znoosey is right. you have to have walked a thousand miles to understand why you'd want a horse, car, train or anything to make your life easier.
<lf94>	</zen>
<_blizzy_>	thank god for rails
<lf94>	yes i like trains too.
<lf94>	;)
<_blizzy_>	lol.
<lf94>	i personally prefer laravel.
<_blizzy_>	seriously though, building a mvc from scratch is not that easy
<lf94>	it is like rails, but no magic.
<_blizzy_>	wait, did you just openly like php?
<lf94>	yes?
<lf94>	php 5 is actually pretty decent.
<lf94>	5.6 being the nicest so far.
<_blizzy_>	laravel is cool though. good framework.
<lf94>	it is an amazing framework.
<wei2912>	lf94: compared to php 1, probably
<lf94>	not probably. it is a matter of fact...
<travelr>	_blizzy_: laravel has amateur mistakes in it
<travelr>	god don't talk about php frameworks at all.
<_blizzy_>	php 5 is actually cool.
<_blizzy_>	travelr, ok.
<_blizzy_>	no framework is perfect.
<travelr>	this is not about being perect, but propagating antipatterns out of ignorance
<_blizzy_>	oh, is it circlejerk hour already?
<travelr>	the authors are amateurs
<lf94>	travelr, what the hell are you talking about?
<lf94>	why are you talking out your ass?
<_blizzy_>	php 5.6 has made php way better
<travelr>	i'm not talking about php, but framewoks.
<_blizzy_>	people keep complaining about the php 5 years ago
<_blizzy_>	laravel is good though.
<_blizzy_>	other than you have to make your own database.sqlite for some reason
<travelr>	_blizzy_:  you think it' good because you don't have enough experience to see why it's bad. it promotes monolithic architecture
<_blizzy_>	travelr, um
<_blizzy_>	i have experience
<lf94>	....
<travelr>	so none of that experience is in writing modular code it seems
<lf94>	travelr i don't know why you're doing this to yourself
<_blizzy_>	lol.
<_blizzy_>	i can't even.
<lf94>	if you've actually used laravel it is the exact opposite of everything you are saying.
<_blizzy_>	laravel is fucking amazing
<_blizzy_>	not like rails or django tier
<_blizzy_>	but it's good
<lf94>	laravel is like rails. it can do everything rails can do.
<travelr>	it's like i'm in a room full of teens telling me justin bieber is amazing.
<_blizzy_>	except run on ruby
<_blizzy_>	:p
<lf94>	well yeah!
<lf94>	lol ok i'm done with this guy
<myrl-chan>	ay
<_blizzy_>	i love debating.
<myrl-chan>	gaise
<myrl-chan>	:d
<lf94>	you got me for a bit there travelr
<_blizzy_>	hi myrl.
<lf94>	myrl-chan sup?!
<lf94>	soup??!?!
<myrl-chan>	lf94: yus
<_blizzy_>	travelr, you seem to not know what the word 'opinion' means
<myrl-chan>	pyon: udder?
<numb3rz>	hey all
<lf94>	_blizzy_ he knows what the word troll is though
<_blizzy_>	it's like programmers can't handle other peoples opinions.
<znoosey>	hello numb3rz
<_blizzy_>	*peoples'
<_blizzy_>	lf94, lol.
<lf94>	da peep-pos
<lf94>	peep-pos opinions
<lf94>	myrl-chan when do we make the money
<numb3rz>	znoosey: wats new??
<myrl-chan>	lf94: wat
<lf94>	you ruined it already
<znoosey>	numb3rz: absolutely nothing
<lf94>	you're supposed to go along with random shit
<myrl-chan>	lf94: oh yes
<myrl-chan>	day aftur internety
<_blizzy_>	oh, seems like the debate died.
<znoosey>	oh wait, giro d'italia has started!
<_blizzy_>	.-.
<_blizzy_>	i'm just sitting here, waiting for f/sn
<lf94>	i'm sitting here doing my last web programming assignment
<lf94>	facebook v2
<lf94>	now includes a friend system
<_blizzy_>	nice.
<aidanh>	sounds awful
<_blizzy_>	i'm working on a twitter v2
<lf94>	aidanh it's a learning experience.
<lf94>	learn2learn
<travelr>	this channel used to be about programming but i guess all programmers have left.
<aidanh>	lf94: well that's good
<wei2912>	o_o
<_blizzy_>	travelr, lol.
<lf94>	wait this is about programming?
<wei2912>	travelr: insert a coin to try again
<_blizzy_>	i guess laravel isn't programming
<_blizzy_>	even though it's a programming framework.
<numb3rz>	if94: i like that-"learn2learn"
<lf94>	no it's a vagina framework
<myrl-chan>	travelr: lol
<_blizzy_>	l0l
<_blizzy_>	how can one learn to learn if he does not know how to learn
<lf94>	numb3rz, yes learning to learn is actually important, even though i was being silly with that phrase :)
<wei2912>	travelr: read the topic
<wei2912>	_blizzy_: that's why it has a steep learning curve
<_blizzy_>	wei2912, true.
<lf94>	i think that's why i'm finding uni unsatisfying...
<wei2912>	you just need to let it click in your head
<lf94>	i've been shown what higher education is like via college
<_blizzy_>	i can't wait until uni.
<wei2912>	then you have a bit of ability to learn
<lf94>	and taught myself to teach myself how my profs taught me
<_blizzy_>	1 more year of high school.
<znoosey>	travelr: when did this channel become about programming? :o
<lf94>	and now everything is just easy to learn
<lf94>	_blizzy_, uni/college is great.
<wei2912>	lf94: you clearly have not reached a high enough level
<lf94>	wei2912, yeah i guess ba is too easy for me.
<lf94>	phd would be nuts.
<lf94>	i don't have the money for that, unfortunately.
<_blizzy_>	lf94, i've heard.
<lf94>	i would looooooooooove to be in school for the rest of my life.
<lf94>	i love it.
<lf94>	i love learning.
<reynir>	there are places that pay you a living wage while you're doing your phd
<lf94>	i would need to pay to get that master's though.
<lf94>	reynir, didn't know that was an option though :) thanks
<znoosey>	as a programmer you learn just as much when you are done with school
<znoosey>	problem is that you sort of get stuck in a specific field
<numb3rz>	i think lf94 is rite in class all u really do is read material from a publised book, learn new vocabulary about the subject and practice if you apply these principals to everything you can learn anything
<lf94>	znoosey, theory offers some sort of transcendence above experience.
<lf94>	at least in my experiences.
<lf94>	it makes your practical work that much better.
<znoosey>	lf94: no one asks you to stop learning theory
<lf94>	znoosey> as a programmer you learn just as much when you are done with school
<lf94>	this is true but i was giving a pro to keep going to school.
<numb3rz>	znoosey: learning as much wen your done with school is just being a professional with it
<lf94>	numb3rz, not exactly.
<numb3rz>	lf94:not exactly what??
<travelr>	_blizzy_, lf94 you buncha amateurs.
<k-202>	undefined reference to `array_size'
<k-202>	i included ncurses.h, menu.h and stdlib.h
<_blizzy_>	travelr, potassium
<wei2912>	travelr: err, can you improve your trolling skills first?
<lf94>	travelr you're such a wang gobbler!!!1!
<wei2912>	travelr: before inserting a coin
<_blizzy_>	le master troll xdddd
<wei2912>	travelr: i'll have to remind you that you have exactly one coin left. you should make use of that well to earn more coins.
<wei2912>	this is from a master coinller.
<reynir>	lf94: fwiw in denmark you can under certain circumstances start on your phd after the bachelor. i don't know how it works with 'foreigners', though
<lf94>	:o
<lf94>	cool
<travelr>	tha tragedy with the noob is he's convinced he's not a noob as he doesn't know what he doesn't know.
<travelr>	and we're witnessing big tragedy here.
<lf94>	i think though i could achieve phd level theory with personal study.
<wei2912>	yes, the loss of your only coin, travelr
<wei2912>	lf94: not reall
<wei2912>	really*
<_blizzy_>	travelr, idk how liking laravel makes me a noob
<znoosey>	travelr: that is correct
<lf94>	wei2912, not truly, but i think i could get close
<reynir>	lf94: yea, probably. :)
<_blizzy_>	i mean, i've probably made more stuff than you, travelr
<lf94>	travelr you're right there is a huge tragedy here
<wei2912>	_blizzy_: stop feeding the troll, he has not inserted a coin
<travelr>	wei2912: what is this, are you cosplaying like a sega arcade? do you swallow? coins i mean
<lf94>	travelr come get a taste of this milkshake
<_blizzy_>	wei2912, but feeding trolls are fun.
<wei2912>	travelr: i am a coinller, as i said.
<myrl-chan>	wei2912: coinller?
<wei2912>	travelr: i used to be an troll like you but then i took a coin to my dick.
<reynir>	lf94: one thing you might miss out on is the networking opportunities
<lf94>	wei2912, ooooou. yeouch.
<travelr>	_blizzy_: it's kinda apparent that "stuff" was small or you'd know the problem with laravel.
<travelr>	_blizzy_: your opinions betray your lack of experience.
<nszceta>	anybody know of a way to read contents of 7z files without extracting them?
<_blizzy_>	sigh
<_blizzy_>	travelr, wanna see my github
<lf94>	reynir, yeah. not only that though, but to be able to discuss ideas and your understandings with peers...
<sc0rpide>	s
<nszceta>	more specifically, how can you browse stackexchange offline
<sc0rpide>	uh, sorry for that
<travelr>	_blizzy_: hell i bet you don't kow the first thing about di
<wei2912>	_blizzy_: err, don't do that
<reynir>	lf94: yes, that's sort of what i meant ^^
<_blizzy_>	wei2912, don't do what
<wei2912>	nszceta: i'm not sure if so offers dumps
<lf94>	reynir, ah x)
<nszceta>	they do
<wei2912>	_blizzy_: pass him your actual github acc
<nszceta>	i have them downloaded
<nszceta>	26 gb of glory
<myrl-chan>	ooohhhh github battles
<_blizzy_>	wei2912, why? just curious.
<reynir>	it wasnt phrased well heh
<travelr>	_blizzy_: my github is longer than your github
<lf94>	reynir, i take networking as "meeting people to make connections"
<wei2912>	_blizzy_: he's a troll, he's probably going to rekt your repositories
<lf94>	reynir, instead of meeting people for the sake of meeting people.
<_blizzy_>	my github is github.com/trollbetter
<travelr>	_blizzy_: but anyway i'm not willing to look at your crap, thanks
<_blizzy_>	thanks, wei2912
<lf94>	travelr baby come to papa
<lf94>	come to papa
<_blizzy_>	travelr, man, calling me crap
<reynir>	lf94: are you in the us?
<_blizzy_>	you're so mature :^)
<travelr>	wei2912: github is not that open. i can't do anything to his repos.
<lf94>	reynir, australia atm, canadian though.
<myrl-chan>	travelr: my shitty statements are way better than yours. lolkbye.
<travelr>	not that i want to.
<wei2912>	travelr: nice try
<reynir>	ok
<wei2912>	travelr: insert a new coin, you piece of shit
<_blizzy_>	also
<travelr>	i mean, everyone is free to post their crap on github, it's the facebook of nerds.
<lf94>	reynir, i'm getting my ba here in australia.
<_blizzy_>	dependency injection.
<reynir>	cool
<_blizzy_>	lf94, nice.
<travelr>	but he'x onfusing posting to github for knowledge and skill
<travelr>	which is obviously lacks
<wei2912>	travelr: insert a coin, or you shall not pass
<lf94>	5 more months to go.
<lf94>	insert coin into urethra
<_blizzy_>	travelr, lol.
<_blizzy_>	lf94, ow
<lf94>	you have a choice
<lf94>	coin into there
<travelr>	wei2912: only if you sing the theme song of sonic.
<lf94>	or coin into your ear
<lf94>	which would you choose?
<lf94>	this is a 1$ coin.
<_blizzy_>	neither.
<_blizzy_>	travelr, them spelling skills
<lf94>	_blizzy_ wrong answer you're dead
<_blizzy_>	are amazing.
<lf94>	play again
<travelr>	wei2912: tara rara raaah taa taa ta ra tatatat pam pam ppararara tilululu tululu...
<wei2912>	travelr: been there done that: https://www.youtube.com/watch?v=dqw4w9wgxcq
<_blizzy_>	lf94, :c
<travelr>	wei2912: no sonic no coin
<lf94>	programming by permutation (or "programming by accident", or "programming by coincidence"): trying to approach a solution by successively modifying the code to see if it works
<lf94>	i have done this too many times
<_blizzy_>	but anyway, rails and laravel are cool to use.
<lf94>	in times of desperation
<bobbarker>	does anyone know how to get this code to autoplay? http://jsfiddle.net/j7ycmr7y/3/
<rabit>	thank you textual for inline media link preview :)
<travelr>	_blizzy_: -man you have so much to learn it's ridiculous
<wei2912>	travelr: https://www.youtube.com/watch?v=oguvmcliyic
<lf94>	9:19 /ignore travelr
<_blizzy_>	travelr, i know right.
<_blizzy_>	you do too.
<wei2912>	travelr: never gonna give you up
<lf94>	travelr psych go eat fudge
<wei2912>	travelr: never gonna let you down
<wei2912>	okay, i think i fulfilled my troll quota for today
<wei2912>	on to the next troll! /ignore travelr
<lf94>	i like that idea
<lf94>	quota for venting
<travelr>	_blizzy_:  show me your github i show you mine
<travelr>	_blizzy_: no homo
<_blizzy_>	ok.
<lf94>	blind faith: lack of checking of (a) the correctness of a bug fix or (b) the result of a subroutine
<lf94>	lots of this too
<lf94>	lots of it
<lf94>	i have faith in the computer god
<lf94>	the big electron
<wei2912>	lf94: are you a knuth fanboy?
<lf94>	no
<lf94>	lol
<lf94>	i hardly know anything about knuth.
<lf94>	1. made latex
<lf94>	2. loves math
<wei2912>	blasphemy!
<lf94>	i'm reading over these: http://en.wikipedia.org/wiki/anti-pattern
<_blizzy_>	no we will not let him go
<_blizzy_>	*no/
<reynir>	yesterday i was bitten by java's inputstream behavior. when you read a single byte they return an int where -1 signals end of file
<lf94>	lol
<wei2912>	rip travelr
<lf94>	interface bloat: making an interface so powerful that it is extremely difficult to implement
<wei2912>	was counter-trolled too hard
<reynir>	i was buffering it and stored the read bytes in a byte array. java's bytes are signed so 255 turns into -1 /o\
<travelr>	i've… seen things you people wouldn't believe… monolithic di containers spread tentacles across modules off of shoulder of orion. i watched controllers mixed in with business logic near the tannhäuser gate. all those… moments… will be lost in time, like [small cough] tears… in… rain. time… to \quit…
<lf94>	hahahaha
<lf94>	groupthink: a collective state where group members begin to (often unknowingly) think alike and reject differing viewpoints
<wei2912>	travelr: that's nothing compared to parsing html with regex.
<lf94>	happens too often as well.
<wei2912>	you can't parse [x]html with regex. because html can't be parsed by regex. regex is not a tool that can be used to correctly parse html. as i have answered in html-and-regex questions here so many times before, the use of regex will not allow you to consume html.
<reynir>	*/quit
<reynir>	you can parse html with regex
<mwizard>	someone tried to parse html with regex here?
<_blizzy_>	hmm, i think i might make my next project in scala, laravel, or django.
<wei2912>	mwizard: no, just copypasting
<jeaye>	travelr: enough with the insults you're throwing around.
<lf94>	ohhhh boy this one makes me frustrated:
<lf94>	smoke and mirrors: demonstrating unimplemented functions as if they were already implemented
<numb3rz>	rindolf, wats up bud?
<lf94>	fuckin' smoke and mirror software.
<mwizard>	wei2912: aware of tony the pony
<rindolf>	numb3rz: i ate a piece of the cake that my sister prepared for my birthday.
<wei2912>	mwizard: heh
<rindolf>	numb3rz: it's an apple cake.
<travelr>	wei2912: you can lex html with regex, and as g i joe says: "lexing is half the battle"
<jeaye>	apple cake?
<jeaye>	rindolf: sure it wasn't pie?
<rindolf>	jeaye: maybe it was pie.
<jeaye>	:p
<_blizzy_>	rindolf, did it cost like 999$?
<wei2912>	rindolf: mmm
<wei2912>	rindolf: also, happy birthday!
<travelr>	jeaye: what insults
<rindolf>	_blizzy_: no, it did not.
<_blizzy_>	rindolf, oh.
<travelr>	jeaye: i'm not insulting anybody.
<rindolf>	wei2912: thanks! it was on 5 may.
<_blizzy_>	happy late bday, rindolf
<lf94>	holy shit. faker is an amazing data generator.
<rindolf>	_blizzy_: thanks!
<wei2912>	lf94: interesting name
<lf94>	<rindolf> numb3rz: it's an apple cake.
<lf94>	you probably cringed so hard
<lf94>	told her thank you
<travelr>	_blizzy_: your papers and your github please
<lf94>	laughed a bit
<lf94>	and just ate it
<wei2912>	travelr: 1v1um8
<lf94>	thinking you were devouring apple
<numb3rz>	rindolf: i never had an apple cake how was it
<lf94>	rindolf thought he was godzilla and apple was tokyo
<lf94>	eating away at apple's infrastructure
<lf94>	a moster
<lf94>	a monster was born
<travelr>	wei2912: did you just invite me to an orgy
<jeaye>	rindolf: something like http://tinyurl.com/m62lrjd
<_blizzy_>	sigh
<bzaidan>	good afternoon
<_blizzy_>	github.com/notblizzard
<wei2912>	travelr: yes
<lf94>	_blizzy_, stop talking with that guy
<_blizzy_>	hi bzaidan
<_blizzy_>	lf94, ok, sorry.
<lf94>	_blizzy_, i'll have to slap you with a trout if you don't stop for you're own good
<bzaidan>	hey _blizzy_, ladies, and gentlemen.
<wei2912>	yeh, i should stop too
<lf94>	you're/your
<_blizzy_>	lf94, ok.
<wei2912>	the temptation to counter-troll is too strong. :(
<_blizzy_>	^
<travelr>	_blizzy_: anthony
<jeaye>	wei2912: -_-
<travelr>	_blizzy_: you kinda look like a fox man.
<wei2912>	jeaye: i learnt the techniques from ##philosophy, don't judge
<travelr>	_blizzy_:  but it's ok.
<myrl-chan>	wei2912: lol
<wei2912>	wait a moment.
<numb3rz>	rindolf: do you know if you have to have the paid version of the disassembler ida in order to edit whats push on the stack
<wei2912>	am i not supposed to talk about other channels?
<wei2912>	if so... forgive me :p
<guide_x>	tfs doesn't add new files
<guide_x>	how do i make it
<myrl-chan>	wei2912: eh, it's not inherently(?) against the rules, i think.
<rindolf>	numb3rz: no idea about ida.
<travelr>	_blizzy_: i'm not sure what to look a most of those look like someone gave you homework, and not like real projects. but anyway, i don't want to insult your github. that would be a grave offense nerd to a nerd
<myrl-chan>	wei2912: but cross-channel talks are most of the time unwritten rules in any channel,
<travelr>	_blizzy_: you still got lots to learn tho
<jeaye>	travelr: feel free to show the channel yours.
<jeaye>	you must have lots to teach.
<guide_x>	also, when  save a file being managed by tfs, it makes me "overwrite" it or rename
<rindolf>	bzaidan: hi, sup?
<bzaidan>	rindolf: hey.
<bzaidan>	rindolf: i'm alive, yourself?
<myrl-chan>	"no unpaid do-my-homework/do-it-for-me requests" does that mean it's fine if it's paid? :d
<travelr>	jeaye: oh yeah i do.
<jeaye>	bzaidan: i imagine he's also alive.
<rindolf>	bzaidan: so am i. i had a birthday recently.
<jeaye>	myrl-chan: yeah
<bzaidan>	jeaye: seems like it. could you measure his pulse for me?
<bzaidan>	rindolf: happy cakeday :)
<rindolf>	bzaidan: and i've been working on a sokoban solver.
<jeaye>	bzaidan: he's too far away.
<rindolf>	bzaidan: thanks.
<bzaidan>	:)
<lf94>	myrl-chan, i did paid homework requests for a short period in time.
<travelr>	myrl-chan: it's a livin'
<lf94>	i had to stop.
<wei2912>	myrl-chan: do my math homework for me :d i'll send you java for dummies
<lf94>	it was killing me morally.
<bzaidan>	rindolf: how's the sokoban solder?
<bzaidan>	*solver
<wei2912>	myrl-chan: jk
<myrl-chan>	wei2912: but isn't java for dummies?
<wei2912>	owwww
<_blizzy_>	i've never had programming-related homework.
<_blizzy_>	because i'm 2cool4school.
<rindolf>	bzaidan: well, i found it on github and have been gradually improving it.
<rindolf>	bzaidan: been sending pull requests.
<bzaidan>	nice.
<travelr>	_blizzy_:  anyway before i go i wanted to say you have epic github and keep going.
<travelr>	_blizzy_: but laravel sucks
<_blizzy_>	travelr, thanks.
<wei2912>	travelr: can i convert you to haskell?
<wei2912>	legit question
<lf94>	_blizzy_, i was doing university assignments for people.
<reynir>	what's your github nick, _blizzy_ ?
<lf94>	$50
<lf94>	i felt so bad doing them
<wei2912>	lf94: ehhhh
<lf94>	so dirty
<lf94>	yeah i'm not proud of it
<myrl-chan>	lf94: lol
<lf94>	take my advice never do that shit
<_blizzy_>	reynir, github.com/notblizzard
<_blizzy_>	lf94, wow.
<wei2912>	i would never do so
<_blizzy_>	idk if 50$ is cheap.
<wei2912>	i cannot bring myself to voluntarily let lazy bastards go out of school
<myrl-chan>	mah geethub. https://github.com/myrl
<travelr>	wei2912: haskell, with erlang, falls into the group of lanaguages i've screwed around with, learned a lot about programming, but i don't think i'll ever use in a real project
<jeaye>	lf94: i charged $30/h in college for "tutoring," where i basically wrote other peoples' assignments.
<myrl-chan>	jeaye: lo.
<wei2912>	:p
<lf94>	i tutored someone for $16/hour in c.
<jeaye>	paid for pizza and tea, and was pretty good money for college.
<lf94>	i wrote bits of her code, but i felt much better doing it.
<lf94>	because i wasn't actually writing code she could use
<lf94>	but code she had to figure out how to use.
<myrl-chan>	lf94: you felt good for doing c?
<myrl-chan>	you gotta be kidding me.
<wei2912>	i should tutor someone in uni and then write my code on a whiteboard
<lf94>	it felt good because it was theory myrl-chan.
<lf94>	theory vs actually doing the entire flipping assignment
<lf94>	jeaye, how did you feel?
<reynir>	now that we're at it: mah github https://github.com/reynir
<lf94>	you were ok doing that?
<myrl-chan>	wei2912: i plan on doing a lecture.
<wei2912>	just to screw around with them
<wei2912>	and leave a couple of bugs
<jeaye>	lf94: it was college and i wanted the cash; i enjoyed it.
<myrl-chan>	reynir: i lick yer picture
<wei2912>	myrl-chan: a lecture on?
<reynir>	thanks
<wei2912>	reynir: following
<wei2912>	_blizzy_: followed you
<myrl-chan>	wei2912: everything. haskell, c, lua, the meaning of life.
<wei2912>	reynir: excellent profile picture
<wei2912>	github.com/wei2912 -- i need a suggestion for a profile pic, can anyone give me one?
<wei2912>	one-line summary of what it should represent: simplicity, math, haskell
<lf94>	jeaye, good on you i guess :)
<myrl-chan>	wei2912: anime.
<lf94>	i just couldn't do it after awhile
<reynir>	there's a new conference called "curry on". unfortunately, they don't have any ocaml talks ;)
<wei2912>	myrl-chan: excellent idea!
<myrl-chan>	wei2912: i'm telling my friend to draw me haskell-chan.
<_blizzy_>	wei2912, thanks. :d
<_blizzy_>	i'll follow back.
<myrl-chan>	i planned to do it myself.
<myrl-chan>	it didn't end well.
<wei2912>	myrl-chan: o_o
<wei2912>	myrl-chan: what's your github?
<wei2912>	i like to feel connected
<myrl-chan>	wei2912: https://github.com/myrl
<myrl-chan>	that profile picture was drawn on ms paint.
<wei2912>	how on earth
<myrl-chan>	wei2912: ikr?
<_blizzy_>	that's great for ms paint
<jeaye>	https://github.com/jeaye
<wei2912>	that's revolutionary for ms paint :p
<wei2912>	jeaye: thanks
<wei2912>	myrl-chan: followed
<myrl-chan>	i'll link his other works.
<wei2912>	jeaye: wait, i followed you on github previously. :p
<jeaye>	wei2912: heh :p
<reynir>	wei2912: maybe a picture using the right shift assignment operator. i hear it's popular among haskellers
<lf94>	lets all follow each other.
<_blizzy_>	yeah.
<lf94>	github.com/lf94
<wei2912>	it's how i find stuff like http://paperswelove.org
<_blizzy_>	twitter for nerds.
<wei2912>	i can't read any of the papers yet, but it'll be great when i get to uni, i suppose
<lf94>	q3
<lf94>	a quake 3 like game with voxelized destructible maps
<lf94>	nice!
<myrl-chan>	here's another drawing. http://puu.sh/hh1wf.jpg
<jeaye>	lf94: :)
<jeaye>	stopped when i stopped using rust.
<myrl-chan>	reynir: right shift assignment. laughing so hard, lol
<lf94>	jeaye, was it hard to do?
<wei2912>	reynir: oh, i get that joke now
<reynir>	heh
<wei2912>	reynir: i've completely forgotten about shifts
<myrl-chan>	i think a lambda would be more appropriate.
<myrl-chan>	overused, but appropriate.
<reynir>	every time i get the chance in java or c i use the right shift assignment operator :d
<bzaidan>	would anyone care to recommend a few books on lambda calculus?
<jeaye>	lf94: it's not complete. the work i had done wasn't particularly hard; it was more annoying.
<jeaye>	lots of boilerplate needed, even in rust, to get a multi-threaded 3d renderer going.
<lf94>	jeaye where is the video of this
<protist>	bzaidan: denotational semantics by joseph e. stoy
<jeaye>	then the voxelization, skeletal animation, etc.
<reynir>	bzaidan: what is your goal? lambda calculus by itself is *really* simple
<protist>	bzaidan: only read the first 100 or 200 pages, though
<wei2912>	reynir: could you give a crash course then? :p
<bzaidan>	reynir: i have no direct goal...
<protist>	bzaidan: i have only read*
<jeaye>	lf94: no videos that i know of. there are pictures from the first vertex rendering to when i stopped in the pics/ directory.
<lf94>	jeaye, could you actually destroy things
<travelr>	myrl-chan: why kernel for calculators. what can it do
<jeaye>	lf94: yeah, but there were no physics yet.
<myrl-chan>	travelr: flexibility.
<travelr>	myrl-chan: sure, but, to do what :) just curious
<myrl-chan>	travelr: one would be an improved calculator.
<myrl-chan>	calculator program.
<reynir>	wei2912: λx.e is a function taking an argument x. e1 e2 is function application.
<lf94>	myrl-chan, there are kernels for calculators lol
<lf94>	z80 kernels :)
<lf94>	i think you were doing that weren't you
<myrl-chan>	lf94: yes.
<travelr>	myrl-chan: another could be cheating on tests
<lf94>	travelr, maybe a grade 9 test.
<myrl-chan>	anyways, ti-83+ is actually already flexible.
<reynir>	wei2912: when you apply a function λx.e1 to e2 you (lexically) replace occurences of x in e1 with e2
<myrl-chan>	and there's even a calculator application in it. lol.
<travelr>	lf94: well if i was in a position of taking a test, i know i'd try!
<reynir>	wei2912: then there are different evaluation strategies (do we evaluate e2 before replacing?), and various extensions
<lf94>	there is no hope for this man
<travelr>	oh this is why i don't like unit testing, cause it inflicts bad memories from school
<jeaye>	<3 testing
<myrl-chan>	reynir: i think wei's talking about >>= instead of lambda calculus lol.
<travelr>	myrl-chan: is there still a reason to use a specialied calculator, aside from institution mandates
<myrl-chan>	travelr: i'd like to do some programming on my calculator.
<travelr>	myrl-chan: yeah but why not your smartphone
<travelr>	i'm basically sayin i wondr if it's a dead category
<lf94>	embedded programming is an art!
<travelr>	it is an art.
<travelr>	limitations lead to art.
<travelr>	but in terms of value..
<lf94>	you are saying all art is worthless.
<lf94>	then again that could mean all art is priceless.
<travelr>	lf94: well no, but some art can be appreciated widely some not so much
<travelr>	travelr: say i can very artfully pick my nose right now, but no one shall know
<myrl-chan>	travelr: i was being half sarcastic there, but a serious answer may be that phones are now allowed in my school, even during break time. yes, i'm in high school.
<lf94>	i'm impressed by the amount of young intelligent people in here
<travelr>	myrl-chan: well yea so mandatory rules. damn 'em rules.
<lf94>	i'm 20 years old, but i don't think i'm all that intelligent unfortunately....
<travelr>	myrl-chan: if you become an engineer do you think you'd be using a ti calculator or a smartphone app day to day
<lf94>	neither, really.
<myrl-chan>	lf94: wei2912's probably more interestingly intelligent than me. i learned haskell from him(and pyon.)
<myrl-chan>	i agree with lf94.
<myrl-chan>	i don't like phones for the most part, it's annoying to type on, but it's not that i don't program on my phone either, because i do.
<lf94>	i only use my hand held computer to browse the internet...
<myrl-chan>	travelr: i made half of this on my phone. https://github.com/myrl/luaskell
<reynir>	i hate phones
<myrl-chan>	travelr: the reason why it has no readme is because i made this on my phone.
<myrl-chan>	imo, i made lua way better.
<myrl-chan>	`map_(map(incfrom(1), function (x) return x*2 end), print)`
<travelr>	myrl-chan: you have patience
<myrl-chan>	in haskell, that would probably be `mapm_ print $ map (* 2) [1..]`
<wei2912>	myrl-chan: not really
<z51b3>	would anyone recommend web storm?
<myrl-chan>	wei2912: hmm?
<wei2912>	myrl-chan: you're a way faster learner than me
<myrl-chan>	wei2912: thanks.
<lf94>	it took me like 6 months to learn haskell.
<lf94>	i'd say that's pretty fucking terrible.
<myrl-chan>	it took me 3 times before i finally learned how to smoke haskell.
<sc0rpide>	z51b3: web storm is cool
<reynir>	i don't really like haskell much for some reason
<wei2912>	lf94: up till where?
<wei2912>	reynir: too rigid for you? :p
<lf94>	wei2912, up until what?
<lf94>	i learned it all, i think
<lf94>	all the concepts
<lf94>	throw things at me
<wei2912>	that's impossiru
<reynir>	wei2912: how do you mean?
<wei2912>	you must have a phd
<lf94>	reynir, yeah haskell really takes a bit to smash into your brain.
<myrl-chan>	4 months of smoking haskell, i still don't know how to implements monads that much.
<lf94>	no, no phds here...
<myrl-chan>	s/ts/t/
<lf94>	i haven't needed to implement a monad
<lf94>	but i know how to use them
<lf94>	ok, 4 months, i don't feel so bad about myself anymore then
<myrl-chan>	i'm not entirely amazed with myself either.
<reynir>	i mean, i don't have a problem with good type systems or functional programming (i like to use ocaml, coq and idris)
<myrl-chan>	https://gist.github.com/myrl/cde51df005abd7e2a418
<wei2912>	reynir: oh, i see
<myrl-chan>	this is what happens if you just decided to go "fuck this shit, i just want it done."
<wei2912>	lf94: arrows and lens included?
<myrl-chan>	also.
<wei2912>	lf94: category theory too? :p
<lf94>	lens is not a standard part of haskell ;)
<myrl-chan>	there's a google code jam on mother's day... that's kinda mean. lol.
<lf94>	not sure what the hell arrows are either.
<lf94>	category theory, yes
<wei2912>	type theory too, i suppose
<lf94>	category theory is just a bunch of noise
<wei2912>	lol
<myrl-chan>	lf94: arrows are part of category theory.
<myrl-chan>	iirc
<lf94>	are we talking about -> <-
<lf94>	or something else
<wei2912>	no
<lf94>	explain then :)
<lf94>	i'm all eyes
<myrl-chan>	lf94: i don't understand arrows, so... https://wiki.haskell.org/arrow_tutorial
<reynir>	i guess one thing i don't like too much is the type classes
<wei2912>	yeh, neither do i
<wei2912>	"generalization of monads" i was thinking of gonads, honestly
<myrl-chan>	wei2912: lol
<wei2912>	which reminds me
<wei2912>	got to study for my bio exam
<myrl-chan>	wei2912: my classes are done, i got an average of 89 without passing anything except schoolwork.
<wei2912>	myrl-chan: wut
<wei2912>	what type of sourcery is this
<myrl-chan>	didn't pass homeworks, and didn't pass these things we call iws.
<wei2912>	wut
<bizarrefish>	reynir: haskell arrows are like monads, but more general
<myrl-chan>	basically, iws are a piece of paper that you decorate and then you will answer questions given to you.
<myrl-chan>	i didn't make them because i hate decorating.
<reynir>	for example, you can only have one monoid instance for integers ¯\_(ツ)_/¯
<lf94>	bizarrefish, yep.
<lf94>	arrows look like noisy monads.
<wei2912>	myrl-chan: so what happened to exams?
<lf94>	haskellers like noise it seems.
<myrl-chan>	wei2912: for my math exams, i get a constant 95%+.
<myrl-chan>	wei2912: for my other exams, i get a constant 80%+, i guess.
<wei2912>	fair enough
<wei2912>	i thought you didn't pass your exams either
<wei2912>	now it makes perfect sense
<myrl-chan>	err..
<myrl-chan>	let me rephrase what i said.
<myrl-chan>	without submitting anything except schoolwork.
<wei2912>	oh, ok
<lf94>	well isn't that how school generally works?
<lf94>	you submit school work and get grades?
<lf94>	that's how school was for me at least.
<myrl-chan>	lf94: i meant schoolwork, in the sense that you're doing it in class.
<lf94>	oh. we never had that.
<fo_constant>	hi
<lf94>	always theory in class, then always work for home.
<fo_constant>	can anyone please help me with js algorithm i wrote
<lf94>	that guy can
<lf94>	over there
<lf94>	--------------------------------->
<myrl-chan>	rather, i'm talking about a stricter sense where "schoolwork" only refers to exams.
<_blizzy_>	ugh i wold never wish depression on my worst enemy.
<myrl-chan>	and any other tests.
<_x_c_v_b_>	hopefully it works now
<fo_constant>	here is my implementation of mergesort on linked list https://gist.github.com/anonymous/e52154e6c4620882c6af and here is my doubly linked list implementation https://gist.github.com/anonymous/02e514785931d239bb28 . i am getting undefiend as my output :p
<fo_constant>	i am not sure what am i doing wrong
<myrl-chan>	homeworks, and things which require decorating is not part of "schoolwork"
<bizarrefish>	_blizzy_: for depression: sugar-free diet, l-theanine supplementation.
<myrl-chan>	last quarter, i was sure i'd fail, but yeah, i got an average of 89 instead, and i'm laughing at my schoolmate who was trying so hard.
<_blizzy_>	bizarrefish, i'm not sure if that would work, but thanks. ._.
<myrl-chan>	laughing like play-teasing, mind you.
<bizarrefish>	_blizzy_: is indeed possible that nothing would work at all. try stuff when you're ready to - it's all there is.
<wei2912>	fo_constant: wait a moment.
<fo_constant>	wei2912: sure
<bizarrefish>	_blizzy_: good luck, etc.
<_blizzy_>	thanks, bizarrefish.
<_blizzy_>	.-.
<reynir>	fo_constant: maybe stepping through the code with a debugger would be helpful for that
<myrl-chan>	er...
<myrl-chan>	why would you merge sort on linked lists.
<myrl-chan>	oh wait, appending on linked lists is o(1) in languages of mutability. carry on.
<_blizzy_>	mfw i still don't know big o.
<_blizzy_>	._.
<fo_constant>	reynir: when i do console.log(middle) in the mergesort method
<lf94>	_blizzy_, you are tired.
<fo_constant>	i see all the nodes but first, reynir
<rantingdude>	(why) aren't they any good statically typed functional languages for embedding?
<lf94>	_blizzy_, exercise more too
<myrl-chan>	rantingdude: name relevant.
<_blizzy_>	lf94, for learning big o?
<myrl-chan>	rantingdude: at least there are dynamically typed functional languages for embedding, lua for example.
<rantingdude>	lua isn't that functional. its rather all-paradigms and none at the same time.
<myrl-chan>	rantingdude: i agree on that, and that's why it's functional.
<myrl-chan>	rantingdude: you set your own paradigm in lua.
<lf94>	_blizzy_, yeah
<_blizzy_>	lf94, oh ok.
<rantingdude>	myrl-chan: but still no types
<myrl-chan>	rantingdude: not that one can't extend types on it though.
<_blizzy_>	thxs, lf94, i'll do that.
<_blizzy_>	afk.
<reynir>	rantingdude: hold on..
<wei2912>	fo_constant: has anyone reviewed your code yet?
<wei2912>	fo_constant: what is giving undefined?
<reynir>	rantingdude: i know there's one language that may be relevant, but i forgot its name and my internet connection is being flaky (so googling is slow)
<reynir>	finally! http://en.wikipedia.org/wiki/ats_(programming_language)
<reynir>	rantingdude: ^
<fo_constant>	wei2912: noone has given any review yet
<fo_constant>	fo_constant: console.log(sort.call(dll))
<fo_constant>	returns undefined
<fo_constant>	which is stupid
<fo_constant>	wei2912: okay removed that error i needed return mergesort(...) in my sort method
<fo_constant>	but still wrong answer :p
<fo_constant>	oho it makes sense
<rindolf>	hi all. how do i find the minimal element of a http://en.cppreference.com/w/cpp/container/set (c++ std::set) or should i use a std::map instead?
<fo_constant>	wei2912: it's breaking at middle one hmm
<rindolf>	pyon: hi, any idea?
<rindolf>	http://stackoverflow.com/questions/10290548/algorithm-efficiencyfinding-the-5-largest-elements-in-an-array - maybe it's *set.begin()
<wei2912>	fo_constant: sorry, i don't think i'll have the time to help you. :( good luck with your problem
<fo_constant>	wei2912: np
<darkelement>	hey guys i want to use youtube-dl to download all the videos in a playlist, but it will only download the first. what am i doing wrong with thiscommand? youtube-dl --playlist-start 1 https://youtu.be/a5pbrd1jh04?list=pleseuhrelqohh1xzm05wo3r7q5cc-2bsl
<rindolf>	darkelement: for me it works with the youtube.com url and without the --playlist-start flag.
<zpartw>	i am looking for a place which lists the full credits of video games. in particular, i'm currently looking for who were involved in making "worms" (1995, amiga/pc).
<rindolf>	darkelement: just by sayign one of the videos there.
<zpartw>	also, i'm trying to figure out what the system requirements were for that game (and others).
<darkelement>	rindolf: oh that seems to be working, lol thanks
<gedamo>	zpartw: https://www.mobygames.com/game/worms_
<rabit>	darkelement: i've never had problems downloading entire playlists with youtube-dl.
<rabit>	darkelement:  well, sometimes using -f bestvideo+bestaudio fails for some reason but an ffmpeg issue
<darkelement>	:p
<rabit>	youtube now saves high quality video and audio streams separately so you use that option if you want the very highest quality audio and video streams.  it downloads them separately and multiplexes them in ffmpeg.
<zpartw>	gedamo: "this release of worms is an adaptation of the series made by team17 for mobile phones."
<zpartw>	the opposite of what i wanted...
<rindolf>	darkelement: you're welcome .
<gedamo>	zpartw: sorry, https://www.mobygames.com/game/worms
<zpartw>	ah.
<zpartw>	what might "cpu logic design" be?
<zpartw>	does that mean "worm ai"?
<k-202>	how to force #include <menu.h> load library menu.h, not my local menu.h?
<inphase>	zpartw: in that context, probably.
<inphase>	k-202: the <> by default searches the include path first.  make sure it's in the include path.
<inphase>	k-202: although if you are using a library with a menu.h, you should immediately rename your local menu.h to avoid confusing problems.
<zpartw>	inphase: does the "design" part of "cpu logic design" here refer to that person not actually coding it, but rather specifying in some sort of formal document how the computer-controlled worms should behave, in detail, leaving the actual implementation up to an actual programmer?
<reynir>	pfft, "chrome[20131]: segfault at 0 ip 00007f3b9929e20a sp 00007ffc0ebdc8a8 error 4 in libc-2.21.so[7f3b9921e000+199000]"
<inphase>	zpartw: perhaps in 2015, but probably not in 1995.
<zpartw>	inphase: i just find the phrasing of "design" odd in this context. "programming" is used elsewhere.
<inphase>	zpartw: and the same guy is listed under "pc programming", so he probably coded at least the initial logic routines himself.
<zpartw>	hmm... good point.
<inphase>	zpartw: design is a separate and important art which is undervalued in a lot of software genres, but recognized in gaming.  they are probably trying to give him special credit for that craft.
<zpartw>	they should've called it "worm ai design/code".
<zpartw>	not even sure where mobygames got their info.
<zpartw>	i assume from either a "staff roll" or the manual.
<reynir>	ok my xmonad setup is officially thoroughly broken: "could not find module ‘xmonad’"
<wei2912>	reynir: :p
<travelr>	pyon: "building complex algorithms" is not done across module boundaries for me. the module api should be dumb like hell and reusable
<exio4>	the easiest way to make code dumb, is make it parametric
<travelr>	in part, yes
<pyon>	exio4: yes, more specifically, parametric in the sense of parametric polymorphism
<pyon>	travelr: ^
<exio4>	right, i should start using complete words :p
<delta-nry>	i heard that singletons introduced too much global state so i created a singletonfactoryfactory to pass singletonfactorys into my methods to create more singletons :p
<rcyr>	:p
<travelr>	delta-nry: har har :/ just use abstract factories
<travelr>	delta-nry: their name is a mouthful but they're simple.
<ssta>	just don't use state
<ssta>	state is for wips
<ssta>	wimps too
<travelr>	as if
<pyon>	travelr: if they're so simple, what's the simple principle for proving their implementation correct?
<pyon>	travelr: as in, formal proof
<exio4>	is there any "oop design pattern" that's actually worth to look at?
<travelr>	in fact some of my best friends are abstract factories
<rcyr>	exio4 observer perhaps
<ssta>	exio4: no.  design patterns are cookie cutter teaching tools that mean you can teach idiots to do stuff that they don't understand in a (relatively) safe way
<travelr>	pyon: i know your "formal proof" routine and i don't care about it. we have qa and tests for this shit. works.
<pyon>	rcyr: observers? nah, lazy evaluation
<xmppwocky>	works?
<delta-nry>	is it just me or do many of the oop design patterns exist to work around class hierarchy dependencies?
<rcyr>	pyon: not all languages are created equal.
<travelr>	ssta: thats like saying english is cookie cutter communication, means you can teach idiots to say words they don't understand
<travelr>	ssta: so i won't use english anymore. screw it.
<ssta>	pretty much, yeah
<rcyr>	i don't have a strong opinion on design patterns... they're just label on solutions to problems (if those "solutions" are actually good ones is another story)
<ssta>	exactly
<pyon>	delta-nry: "work around class hierarchy dependencies" --> that, and also the inability to express interesting logical relations with them
<pyon>	delta-nry: patterns capture what class types themselves can't say
<pyon>	(to which the obvious solution is "don't identify classes with types!"
<pyon>	)
<travelr>	pyon: you don't have to express everything to the computer. the computer can't understand everything. leave computers alone
<travelr>	pyon: you express some to the computer and some to the other devs using your code. in english.
<travelr>	pyon: if you disagree i urge you to stop using english and communicate only in types
<pyon>	travelr: i wouldn't mind doing that, if english speakers were the ones running the program
<travelr>	pyon: they pretty much are, because when you implement a contract you're "running" the contract on yourself.
<pyon>	travelr: i use english to communicate with people, and formal languages to communicate with computers
<travelr>	pyon: if you can understand it, job done
<pyon>	all this pattern and bdd shit is just a bunch of lame attempts to communicate with computers in english
<travelr>	pyon: computers just run machine code in the end. they don't give a damn about your types. it's a constraint for you not for computers.
<delta-nry>	travelr: some languages are more expressive than others
<hackal>	hello, i am trying to parse one line of csv. https://gist.github.com/hackal/2e9a5e213597eb781d6a everything works until actual values will need delimiter itself as part of value. what would be the correct way to check for it? escape it? put values in ""?
<exio4>	travelr: "in the end"
<exio4>	conal elliot said something about this
<ssta>	hackal: "" is standard in csv
<travelr>	exio4: yes in the end, meaning beneath the layers of abstractions, a computer just runs electrons through wires. and it doesn't give a fuck about type theory.
<exio4>	http://conal.net/blog/posts/why-program-with-continuous-time
<hackal>	ssta: so for example one line of csv with comma as delimiter may look like this? "adam","usa,miami","13"
<exio4>	''“in the end”, yes. just as in the end, numbers are displayed as ascii numerals. however, programming is more about the middle than the end, i.e., more about composition than about output. for that reason, we don’t generally use strings in place of numbers''
<ssta>	hackal: yes
<ssta>	hackal: and the common usage is that a literal " is ""
<hackal>	ssta: what if anyone needs " in value?
<ssta>	hackal: ""
<ssta>	hackal: see rfc 4180
<travelr>	pyon: can you formally prove your own behavior btw
<pyon>	travelr: that makes no sense
<pyon>	travelr: there's no specification that i'm supposed to satisfy
<hackal>	ssta: thank you very much for help
<pyon>	travelr: proving without a specification is like grabbing your fork and knife when there's no food on your plate
<travelr>	pyon: of course there is.
<travelr>	pyon:  "survive and reproduce offspring that can reproduce"
<pyon>	s/proving/trying to prove/
<travelr>	it's the spec of life.
<travelr>	spe of life dammit.
<travelr>	for shame you don't know your own spec.
<hackal>	ssta: thinking about it csv might not be best format for me but again thanks :)
<pyon>	travelr: dunno about yourself, but i prefer to view my own goals as being beyond biological imperatives
<ssta>	hackal: csv is easy to use, but not very powerful...one major advantage is there are already lots of libraries out there to help handle it
<travelr>	pyon: i guess compilation failed for you :p
<pyon>	travelr: for example, i couldn't care less about reproducing, but i want to appreciate as much beauty as possible in my life
<travelr>	pyon: you're off spec, so you exist only because nature doesn't formally prove its specs.
<exio4>	wat
<travelr>	travelr: so thank nature and introduce some chance into your code
<hackal>	ssta: i believe there is not a native lib for delphi/pascal. in my case i am not allowed to use libraries.
<exio4>	that's all i can say, wat
<ssta>	hackal: csv is very easy to implement
<pyon>	exio4: yea it's really really weird
<ssta>	hackal: either via a state machine o regex (and basically regex is just a compact state machine)
<travelr>	exio4: say wat again, i dare you, i double dare you mother fucker. say wat one. more. god. damned. time.
<exio4>	that's the beauty of life, there's no specification!
<exio4>	travelr: wow, that's really rude
<exio4>	you're making me go full wat! :p
<pyon>	exio4: don't expect much better from hactor :-p
<delta-nry>	wat with cheese
<travelr>	exio4:  https://www.youtube.com/watch?v=uphue5pdles
<hackal>	ssta: since i know i will have only max 200 values do you think using just a txt file and add each value to each line is good idea?
<ssta>	hackal: sure, whatever works for you
<travelr>	pyon: i'm honored you remember me btw.
<travelr>	pyon: i have now formally proved there's a piece of your mind dedicated to me
<mark4>	im having file issues. i have a log file that i want to open for write or i want to create it.  last night this was working. i wake up and now nothing goes to any log file and the file isnt being created
<xmppwocky>	mark4: are you dreaming?
<mark4>	xmppwocky, if you have anything to add?
<mark4>	this was working now shit is just falling apart
<mark4>	i need to understand why my file open is not working
<mark4>	i can delete the log file i created and create it with touch
<mark4>	my code does not create it
<mark4>	https://gist.github.com/4c1eb2862b7795eec570
<mark4>	whats wrong with that code?
<bizarrefish>	hi all
<hackal>	is it possible to listen for keypress in simple console application? using pascal/delphi?
<pleiosaur>	hackal: oh man, somebody using pascal or delphi in the wild!
<pleiosaur>	a rare sight
<hackal>	pleiosaur: yes, having finals in highschool in a week
<bizarrefish>	nothing wrong with delphi. it's got pretty much the same feature set as c# 3.5 last time i used it
<pleiosaur>	hackal: no idea, but good luck on your finals
<hackal>	thanks will be 100% but i am just fooling around with delphi and trying to improve all the assignments for finals
<hackal>	pleiosaur: here is how our finals look. we have 30 topics like this http://i.imgur.com/y0s2e9c.jpg you pick one at random
<bizarrefish>	hackal: if on linux, it's as simple as telling the connected terminal to disable canonical mode. for windows, the solution doesn't look as pretty http://stackoverflow.com/questions/5845080/how-i-can-implement-a-iskeypressed-function-in-a-delphi-console-application
<bizarrefish>	you have to peek into the 'console input buffer'...ew
<rounin>	"the unicode encoding"... which one?
<rounin>	pleiosaur: if i were you, i'd definitely ask them for a clarification there
<rounin>	the answer could vary by a factor of 4
<bizarrefish>	heh
<hackal>	rounin: yes
<bizarrefish>	didn't think utf-32 was actually standardized.
<rounin>	oh, but how silly of me
<rounin>	you could just write down all of the correct answers and explain
<bizarrefish>	my mistake. looks like it is
<rounin>	or at least the common ones, like utf-8, utf-16 and utf-32... i guess utf-7 and gb18030 would be unnecessary :p
<manicpanic>	is there a real benefit in jwt over regular sever sessions ?
<bizarrefish>	i propose utf-64, for the purposes of lulz.
<rounin>	:dd
<kazagistar>	utf-128, so it is basically a stream of uuids
<rounin>	the beginning of each document could be a uuid for the entire document...
<pyon>	i propose using a xml-based format to represent text.
<rounin>	stupendous :)
<cluelessperson>	hey guys, does anyone know of a good webserver irc client to run on a personal server?
<cluelessperson>	i'm hoping that my server can always be logged in as me, logging chats, recieving pms, and i can login over the web to start chatting myself or view past pms and stuff
<kazagistar>	cluelessperson: i knew someone used irrsi + screen for that
<bizarrefish>	cluelessperson: i used to run irssi inside screen on a personal server
<bizarrefish>	haha
<bizarrefish>	yeah, i reckon it's a common setup
<kazagistar>	i found you a tutorial :p http://quadpoint.org/articles/irssi/
<cluelessperson>	kazagistar,  bizarrefish   honestly, the best way to term it is   "ircbouncer + userbased irc webclient"
<bizarrefish>	i found you a picture of a cat http://i.imgur.com/76emppz.jpg
<bizarrefish>	(it's actually a dog)
<cluelessperson>	bizarrefish, http://i0.kym-cdn.com/photos/images/original/000/522/050/1f3.jpg   f-18  for you.  (nswf)
<bizarrefish>	cluelessperson: that's...quite something
<bizarrefish>	brb
<cluelessperson>	bizarrefish, lol "brb"  30 seconds, tops
<bizarrefish>	you're too kind
<bizarrefish>	reddit delivers a nice weasel gif (sfw) http://i.imgur.com/ep9kzoa.gifv
<numb3rz>	hey all
<bizarrefish>	hi
<numb3rz>	wats new in tge wonderful world of programming?.
<numb3rz>	s/tge/the
<nintendo3ds>	https://www.reddit.com/r/programming/comments/35cr6n/real_programmers_can_do_these_problems_easily/cr3v3ew?context=3
<nintendo3ds>	what is wrong with the people on /r/programming
<bizarrefish>	numb3rz: for me, mqtt
<numb3rz>	bizarrefish: whats mqtt?
<bizarrefish>	numb3rz: it's a simple message-oriented pub/sub protocol.
<pyon>	nintendo3ds: it just means that programmer intuition alone can't be trusted if we want to write correct programs
<nintendo3ds>	pyon, it was a linked comment
<bizarrefish>	numb3rz: quite heavily associated with the 'internet of things' at the moment.
<nintendo3ds>	the guy's saying programming interviews are literally the most stressful non-lifethreatening situation possible
<bizarrefish>	numb3rz: how about from your side? learned about anything cool as of late?
<nintendo3ds>	and then says you're an asshole if you disagree
<kazagistar>	it was a post making fun of a previous post, were you expecting the cream of /r/programming to show up for a deep and intellectual discussion?
<pyon>	nintendo3ds: lol
<bizarrefish>	nintendo3ds: some people seem to have a seriously hard time in interviews for some reason :/
<bizarrefish>	nintendo3ds: i personally can't get enough of them. they're exciting. good opportunity to show off your shit.
<pyon>	yes, interviews are an excellent time and place to show off
<pyon>	not just your code, but also your methodology
<bizarrefish>	normally in work there's little time to show off :(
<bizarrefish>	mhm, indeedy!
<numb3rz>	bizarrefish, thats cool your designing one wow??me im a noob to all this i jus dove into leaning assembly language and python-i have an arduino also but have yrt to do anything cool with it
<pyon>	e.g., massaging invariants, designing types and contracts... the right mix between mathematical rigor and pragmatic heuristics...
<pyon>	iow, exactly what i won't be doing in the actual work anyway
<kazagistar>	i was really disappointed by my last interview, the hardest technical question involved reading some java code with labeled breaks
<bizarrefish>	numb3rz: you misunderstand me; i didn't make mqtt :) . though the company i work for co-wrote it about 20 years ago
<bizarrefish>	numb3rz: what kind of assembly language? for an arduino?
<numb3rz>	bizarrefish, oh ok do you know anyone designing a cool video game i want to get into that as well alot of this is self taught cuz i don't have money fir school but-jus the machine assembly language and i think arduino is in c but not sure
<numb3rz>	bizarrefish, i got the blinking lights example rite and thsts it on the arduino im trying to hook up this lcd but have to do research on some electrical engineering first
<bizarrefish>	numb3rz: might i recommend ##electronics for that kind of thing, if nobody here can help
<darkcthulhu>	numb3rz, what is your question?
<rounin>	darkcthulhu: have you seen the video?
<darkcthulhu>	rounin, yeah.. it's inspiring and makes you think.
<felishia>	hello :3
<larrybolt>	could someone explain to me why "i support girls in tech" actually means that you don't support girls in tech? and what that even actually means?
<darkcthulhu>	what would one do differently if one had a few months, rather than years to live...
<numb3rz>	bizarrefish, cool thanks, darkcthulhu, no questions yet im jus on here shooting the shit, still reading and doing research b4 i ask questions , whats up?
<felishia>	i'm confused can someone with more experience tell me what's going on?
<larrybolt>	i'm really wondering, just read it somewhere
<darkcthulhu>	numb3rz, i'm an electronics guy (or used to be one). that's why i asked.
<thebigdeal>	how to download and install vlc?
<felishia>	sudo apt-get install vlc
<numb3rz>	hey felishia
<thebigdeal>	:p
<felishia>	x3 windows instructions are waaay longer
<rounin>	darkcthulhu: it got me thinking a bit as well
<thebigdeal>	felishia, i thought it is the best way to insult computer scientists :p
<felishia>	numb3rz, hello :3
<darkcthulhu>	rounin, did you read the book?
<numb3rz>	darkcthulhu, cool don't worry i'll be askin in a moment
<felishia>	thebigdeal, meh... i asked a question on how to extract an sd card from a raspberry pi
<bizarrefish>	larrybolt: it means that some believe the ladies are somehow forcibly kept from making it in tech
<felishia>	i needed twezeers xd
<rounin>	no, darkcthulhu... now that you mention it
<rounin>	firing up my google as we speak
<bizarrefish>	i'd love to work with the ladies :'(
<bizarrefish>	no ladies in my jobv
<bizarrefish>	only men. it's like a submarine.
<darkcthulhu>	rounin, it's amazing so far. it has so much more about what went behind that lecture initially.
<felishia>	:o
<bizarrefish>	(a man-submarine)
<felishia>	xd
<thebigdeal>	felishia, extracting an sd card from a respberry pi?
<felishia>	thebigdeal, yes... it's a hard task!
<numb3rz>	felishia:you usually have to push it back in for it to come out
<darkcthulhu>	felishia, i thought it has to do with pulling out eyebrows :-d
<felishia>	doesn't really work!... it's still stuck!
<rounin>	darkcthulhu: awesome! well, i'm putting it in my ever-growing list of things to read or see, hehe
<darkcthulhu>	:)
<rounin>	at least, after "a song of ice and fire", i've become a fast reader
<felishia>	well that's the same thing! yeah then they say that my beautifier kit is useless
<rounin>	wish i'd started on it before i started on my degrees ;)
<thebigdeal>	felishia, i didn't get it, does it have to do with compressing and extracting?
<larrybolt>	bizarrefish: i get what you mean!
<rounin>	maybe i'd have gotten through that macroeconomics book
<deerhawk>	hi dear beloved people. i'm giving up the impossible problems (np-hard stuff) but still want something challenging and perhaps equally important. any suggestions?
<larrybolt>	what would be correct way to be towards woman in tech anyway, lol
<felishia>	thebigdeal, twezeers to extract the sd!
<thebigdeal>	ah
<bizarrefish>	deerhawk: try np-complete?
<thebigdeal>	felishia, stuck there?
<felishia>	yeah :p
<thebigdeal>	lol
<felishia>	hey i just wonder something
<deerhawk>	bizarrefish: lol, i've spent way to much time on that too. it's impossibru.
<thebigdeal>	felishia, didn't you ask in ##hardware?
<bizarrefish>	deerhawk: on a serious note, i'd look into better ways to write multithreaded systems.
<felishia>	why my bosses who according to internet are dirt rich...
<felishia>	choose me to help starting a new company?
<pyon>	bizarrefish: you mean, like, concurrent process calculi?
<bizarrefish>	pyon: was coming from a more practical sense, but that sorta thing could be involved.
<felishia>	i mean, a student from the corner of the world, in a poor neighbourhour, it doesn't make much sense
<thebigdeal>	felishia, that's an np-hard problem :p
<pyon>	bizarrefish: well if the calculus already exists, it's just a matter of tweaking the syntax so that programmers can type it on a keyboard without groaning (too much), right?
<deerhawk>	bizarrefish: well, that's something feasible. it's a very academic and theoretical one that require lots of reading about the current state of the research. google go has been an attempt by google. gotta beat google then :p.
<felishia>	thebigdeal, but i mean... :c it's weird!... yet the money they pay seems to come from silicon valley
<bizarrefish>	deerhawk: go, i believe, has quite an intuitive angle - the erlang one of course.
<thebigdeal>	oh
<felishia>	it doesn't make sense
<felishia>	it's like suddenly henry ford called you to make a new car with him...
<darkcthulhu>	felishia, investors called? or tech folks?
<pyon>	bizarrefish: does go follow the "let it crash" philosophy? where if one process fails it's no biggie
<felishia>	investors
<thebigdeal>	hmm, what does the company make?
<felishia>	school tech... for kids
<darkcthulhu>	felishia, whoa.. must be one hell of a recommendation you got from someone.
<bizarrefish>	pyon: perhaps not to the extent of erlang. need to learn bit more about the current state of go. haven't used for a number of years
<felishia>	darkcthulhu, doesn't make sense... i'm a total unknown, i'm just a student that lives in a poor latin neighbourhood in venezuela
<thebigdeal>	felishia, you just need to check whether you're qualified and decide, that's all
<darkcthulhu>	felishia, o_o well, in that case, i'd be wary.
<darkcthulhu>	felishia, a local enterprise is what they wanted to fund?
<felishia>	thebigdeal, actually the strangest part is that they fired the rest of the team some time after i came...
<darkcthulhu>	felishia, something seems off.. has any real money crossed hands?
<felishia>	so the only fontend person is me... and i get direct orders from the ceo
<felishia>	darkcthulhu, yes... not too much but yes...
<rcyr>	i always felt that go was an attempt to make the dumbest programming language, discarding every discovery from the last 50 years of programming language research.
<rcyr>	but hey... whatever floats your boat.
<cluelessperson>	rcyr, what is php? :p
<felishia>	the origin of checks are perfect...
<rcyr>	cluelessperson: nobody knows, it a language without any clear direction..
<bizarrefish>	rcyr: i think it's a bit like plan9 - an argument. rather than building a mountain of stuff which needs a bigger mountain of documentation, rework the 'foundations' a little.
<darkcthulhu>	felishia, hmm.. curious. well, as long as you can verify that they're legit, there isn't a real problem per se. never look a gift horse in the mouth... :)
<darkcthulhu>	thebigdeal, wut?
<cluelessperson>	rcyr, python?
<rcyr>	cluelessperson: whatever's guido direction....
<larrybolt>	php is something.. lol :p
<thebigdeal>	never mind
<bizarrefish>	php doesn't exist. it didn't happen. just like the matrix 3. just like torchwood season 4.
<felishia>	darkcthulhu, but taking direct orders from the ceo... like none else can tell me what to do with him? i'm just a silly student, and the others dudes sometimes i had to tell what to do (the ones fired) went through all university...
<numb3rz>	lol at thebigdeal how did u do that????
<rcyr>	php sometimes looks like it wants to be java... but they're not taking the idea all the way (arrays/strings/numbers are still primitives without any kind of boxing)
<larrybolt>	pity that something that doesn't exists is soo easy installable :(
<thebigdeal>	numb3rz, how did i do it? :p
<bizarrefish>	rcyr: pretty sure php is c with garbage collection.
<darkcthulhu>	felishia, it is curious. have you had any video conference with your employer? you could ask them that yourself if you have a good professional relationship.
<rcyr>	bizarrefish: hehe :)
<numb3rz>	*wondering about thebigdeals intentions
<larrybolt>	and weird arrays, lol
<thebigdeal>	numb3rz, nothing serious about my intentions!
<felishia>	darkcthulhu, not video but voice conference...
<rcyr>	it's strange that php arrays are... everything but arrays
<bizarrefish>	i can definitely support go's strategy of chucking out various things in favour of tweaking foundations to build a nicer system. the plan9 os is great in this way. it's all written in bog standard c, but by tying the whole thing together with 9p like it is, it's stupidly simple and powerful.
<numb3rz>	thebigdeal:no i was askin how did you leave that message
<darkcthulhu>	felishia, i'd be worried it was a scam but you say it's education related, and that you're being paid actual money.
<felishia>	darkcthulhu, beyond that, i always ask him about his kids... and say jokes and stuff, in a polite way of course, and always work, once i told him dad lol...
<thebigdeal>	numb3rz, yes i understand, i just leave it for fun :p
<felishia>	darkcthulhu, i'm being paid actual money
<felishia>	but it always lasts too much
<thebigdeal>	:o
<thebigdeal>	really!
<felishia>	it's like i'm getting paid this week 4 weeks after
<thebigdeal>	wonders if felishia could send some money
<felishia>	thebigdeal, :p nuu!
<thebigdeal>	nah it needs a /me
<darkcthulhu>	felishia, si valley folks are unlikely to hire someone without proven abilities, nor are they likely to delay payments. it would be prudent of you to verify who you're working for.
<numb3rz>	thebigdeal: yea but how??
<bizarrefish>	i've been paid a little and paid a lot and have decided it's pretty much inconsequential as far as happiness goes.
<bizarrefish>	it's nice to feel this way.
<darkcthulhu>	bizarrefish, amen to that.
<thebigdeal>	numb3rz, how what? sending money? you just send it.
<felishia>	i'm saving to get out venezuela, and my relation $$$/bsf isn't too good
<felishia>	darkcthulhu, i got a contract
<felishia>	everything seems in place o.o
<numb3rz>	nvermind
<darkcthulhu>	felishia, ah!
<thebigdeal>	numb3rz, :d
<darkcthulhu>	felishia, i've been taught that if it looks too good to be true, it probably is. but this defies all logic, if accurate.
<felishia>	how could scam be so perfect? also, it's just an starting company... i was told that the company was actually demanded because it didn't pay taxes because some random formalism was forgotten and my boss had to go to the us to fix that and that was the reason my payments were delayed
<darkcthulhu>	felishia, hmm. your boss is local?
<felishia>	nope
<darkcthulhu>	one thing to find out would be how they found you
<felishia>	darkcthulhu, they made an online test... on odesk
<felishia>	i did it...
<felishia>	and they said i was one that best answered it.
<darkcthulhu>	hmm
<thebigdeal>	felishia, are you a freelancer?
<felishia>	yes, i used to be... until that, i only work for them...
<felishia>	even when i still think it relates to freelance
<darkcthulhu>	as long as the money is good... why not
<felishia>	40 times a venezuelan salary o.o
<thebigdeal>	wow!
<felishia>	meh 2600$ a month... in us
<felishia>	the ratio is really bad
<thebigdeal>	do you mean the money of freelancing?
<felishia>	yes
<thebigdeal>	great
<darkcthulhu>	$2600 for remote intermittent work isn't too bad.
<darkcthulhu>	felishia, what do you work on? front-end only?
<rounin>	felishia: well, until you have the money, you haven't been paid, though, right? are you still waiting or what?
<felishia>	yes... but i know server side, database languages, and server management... :3
<thebigdeal>	i registered in many freelancing websites but haven't done any work yet, i need self-confidence :/
<felishia>	in the test they asked a bunch of stuff... and put a picture of what they wanted to do, i didn;t answer any, i wrote code...
<felishia>	so there was their solution, just in the test... .___.
<darkcthulhu>	hmm..
<felishia>	it's more confusing to explain than just put the code there xd
<thebigdeal>	it's just like tweezers :p
<felishia>	rounin, i have been paid some... but they owe me some too
<felishia>	:o
<deerhawk>	how is research in math/programming done? do you just sit there and .. try different things till you get it right?
<felishia>	what i don't get is why are my bosses so dirt riiiich!... why they talk to me directly like that? well it may be because i'm the only empleoyee... mmm... o.o
<aidanh>	deerhawk: look for patterns mostly; ways of applying knowledge to new areas, and ways of isolating properties from systems and combining them into new ones
<bizarrefish>	deerhawk: sitting quietly and thinking. writing a lot of code and looking for patterns.
<bizarrefish>	deerhawk: i would guess
<dreams>	deerhawk: normally you attempt to solve an open problem, or introduce a new concept.
<inphase>	deerhawk: for successful research you must set out with a research agenda which fits into broader research goals, and relies on specific experience you have accumulated.
<felishia>	i need to create a json based on a json with instructions to create that json... mmm :c
<felishia>	any idea?
<bizarrefish>	i came up with a cool deduplicating string-storage format on a bus once.
<deerhawk>	bizarrefish, aidanh: see patterns? got any examples of that?
<aidanh>	deerhawk: nothing particularly concrete; a lot of stuff related to algorithms is based on mathematical properties
<aidanh>	although some things are just the product of hard work, of course
<aidanh>	felishia: http://jsonpatch.com/
<aidanh>	although... why not just produce the json you want in the first place, really
<bizarrefish>	deerhawk: monads: http://blog.sigfpe.com/2006/08/you-could-have-invented-monads-and.html an abstract structure for composable computations.
<bizarrefish>	a particular monad is defined by the way a number of computations combine to form another computation. there is the identity monad, where things just flow like with functions.
<bizarrefish>	there is the list monad, where functions have a list of possible result values.
<bizarrefish>	and a ton of others
<inphase>	deerhawk: perhaps here's one way to help you think about programming-related research.  programming is writing code to solve a problem.  software engineering includes architecture, which involves thinking about how to design your approach to solving a problem.  software research often ventures into thinking about new ways to approach the designing of a solution to a problem.
<inphase>	deerhawk: that last part is what they are referring to when they talk about looking for patterns.  one wants to work at the next level of abstraction to do impactful research.
<felishia>	i'm leaving :3
<deerhawk>	thanks guys :3
<inphase>	deerhawk: and in case your question was related to your question about what you should work on, you should not attempt cutting edge research on your own.  if you are interested in this as a career, you should either seek to work under someone (nearby) in academia doing something interesting to you, or focus on projects which gain you the deep experience you would need for doing research later.
<inphase>	deerhawk: research is a long path.
<genaside>	when going for a job interview, what sort of programming question do they give you? i just read that they give people super easy questions that 80 percent cant get.
<koreanmaster>	should you be able to reexplain things that you've studied in the past?
<phylogenesis>	genaside, depends on the company.  at amazon that was absolutely not the case.
<inphase>	genaside: depends on the place.
<phylogenesis>	they may start with that just as a quick filter for people who aren't qualified for even entry positions.
<phylogenesis>	but that's not going to be enough to get the job
<phylogenesis>	all, is perlin noise on-topic?  i am really struggling to figure out the variables i want.
<inphase>	genaside: my favorite example is the fizzbuzz test, but this sort of thing is generally just used to avoid wasting time on the truly unqualified.  i guess go try the fizzbuzz test, and if you can't do it, go learn more programming?
<koreanmaster>	inphase:  can you explain concepts really well to yourself?
<inphase>	genaside: if you can handle things like that, then hopefully a good place is going to ask you more about the projects you've worked on.
<inphase>	koreanmaster: yes, one should be able to explain things that one understands.  this requires both actually understanding it, and communication literacy.  but the latter is an important skill for team-based work.
<koreanmaster>	inphase: what would you do if you have trouble explaining something?
<inphase>	koreanmaster: in the context of an interview?
<koreanmaster>	no
<koreanmaster>	well, yeah sure
<inphase>	koreanmaster: i would breathe deeply, put on my most confident pensive expression, and say something like, "well, that can be complicated to explain," and then try to point out some important points related to the topic.
<inphase>	koreanmaster: and perhaps while listing those points, something more insightful will come to me.  and if not, at least i said something intelligent.  :)
<koreanmaster>	that sounds like the best way to handle that situation
<deerhawk>	inphase: (about research). makes sense, thanks. even if i think i know the answer, i'll ask. why not try to do cutting edge research by oneself?
<magnus_rm>	i had an idea the other day, not sure it is possible to do, but the idea is to have a number of microphones in a room, feed the sound waves into a computer and then calculate the soundwave that a microphone on another place in the same room would pick up if such a microphone had been set up
<magnus_rm>	i know that in principle it should not really work, but in practice it might be possible to a certain extent
<magnus_rm>	it could be very useful for film recordings, or tv studios etc.
<bullhorn>	sounds unrealistic
<magnus_rm>	yeah, i think so too, but it just might be doable
<bullhorn>	(i happen to be an audio enthusiast as well as a musician :x )
<magnus_rm>	me too
<magnus_rm>	i have in mind for example how image processing can find a sharp picture from an unfocused one, it is also not possible in principle, but in practice, for various reasons, it is doable
<magnus_rm>	it would be a very valuable invention
<felishia>	http://imgur.com/ohdo0py,vnosqpr
<felishia>	:3
<felishia>	bootstrap
<nikio_>	it says extjs is gpl licensed, but how can u break their gpl policy ? its not really possible to make extjs code closed source since the code gets downloaded to the user
<_w_>	nikio_: that's not all that copyrights deny
<_w_>	e.g. someone could remove the license and re-distribute it
<nikio_>	what do you mean?
<_w_>	include it in some embedded device even
<nikio_>	remove the license ?
<_w_>	nikio_: one of the conditions of distributing gpl software is that you retain the license terms when distributing it
<nikio_>	they are written in the library
<nikio_>	so you dont need to do much
<_w_>	so
<_w_>	you're still not allowed to remove them
<nikio_>	u just write the code and fire up the website.. there is no real way a webdev could break the terms
<_w_>	there's also extensions that qualify as derivative works
<_w_>	if you distribute those under some other license, you're still in violation
<nikio_>	hmm ok
<_w_>	you're asking missing things like extracting and re-using /parts/ of the code
<_w_>	even porting to other languages
<peyed>	my program is supposed look for an entry in a file, if found, delete that line and the next seven lines following and then add the entry fresh. but it's deleting the entire file and then adding  https://bpaste.net/show/db70a79c7ed9
<inphase>	peyed: you need to open in append mode, not w mode.
<inphase>	peyed: w truncates.
<tsumetai>	peyed: you're writing one entry to tmpfile.db and then replacing zonelist.db with it.
<inphase>	peyed: i see no place where you output the previous contents of input.
<tsumetai>	peyed: you're not even doing anything with the input file. :)
<tsumetai>	maybe you should start with something simpler first. :s
<adsjlkdk>	what programming language should i learn
<inphase>	adsjlkdk: my favorite one.
<adsjlkdk>	whats your favorite one
<inphase>	adsjlkdk: i was answering for everyone.
<adsjlkdk>	oh
<_blizzy_>	adsjlkdk, what do you want to make?
<adsjlkdk>	games
<_blizzy_>	on the pc?
<adsjlkdk>	for the gnu/linux operating systems
<_blizzy_>	oh.
<adsjlkdk>	or maybe windows too
<inphase>	adsjlkdk: professional quality someday?  or toy games for fun?
<adsjlkdk>	professional quality
<inphase>	adsjlkdk: then you go learn c++.  there is no other choice.
<adsjlkdk>	how should i learn
<_blizzy_>	c++ as a first language?
<_blizzy_>	eh.
<inphase>	_blizzy_: sure.
<tsumetai>	"there is no other choice."
<tsumetai>	lol
<_blizzy_>	c# is a choice.
<_blizzy_>	if windows.
<adsjlkdk>	what pdf should i read to learn c++
<inphase>	adsjlkdk: join ##c++ and type !book
<genaside>	if you want to make games then learn c++
<monroe>	does it matter which registrar one chooses in terms of performance ?
<adsjlkdk>	thank you inphase
<henke37>	winters, it can be faked if you control a router on the route to the faked address
<peyed>	tsumetai: o
<peyed>	thank you!
<inphase>	monroe: no, only the nameserver affects performance.
<henke37>	also, don't forget about the x-forwarded-for http header that allows overriding the client address
<inphase>	monroe: the registrar's only job is filing your data with the top level nameservers.
<peyed>	inphase: ^^
<henke37>	inphase, they also accept your money
<monroe>	sorry for the dumb question, who takes care of the name servers
<monroe>	who is responsible ?
<adsjlkdk>	guys should i start with an intermediate or advanced book
<monroe>	are they spread all around the world ?
<henke37>	monroe, it depends on the domain
<monroe>	.com
<monroe>	top-level
<inphase>	adsjlkdk: if you have to ask, then beginner or intermediate.
<adsjlkdk>	inphase ok
<winters>	henke37: ok. then i think i'm safe.
<inphase>	monroe: http://en.wikipedia.org/wiki/icann
<lseactuary>	anyone here know about gmail and how i can archive emails and get rid of labels to clean out my inbox
<henke37>	looks like .com is managed by verisign
<rumpledelf>	adsjlkdk: er, what if we don't?
<adsjlkdk>	inphase:
<adsjlkdk>	do you use an ide
<adsjlkdk>	and do you use linux
<inphase>	adsjlkdk: primarily i use the g++ package with libstdc++.  starting out you might prefer the assistance of an ide like qtcreator.
<adsjlkdk>	inphase: what programming languages do you know
<inphase>	adsjlkdk: a lot.
<adsjlkdk>	inphase i wish i knew how to program
<inphase>	adsjlkdk: well, then learn.  :)
<adsjlkdk>	how did you learn c++
<rumpledelf>	have to start somewhere
<inphase>	adsjlkdk: i walked into a bookstore and bought the best looking book on the shelf.  this was back in the dark ages before amazon, when we went to physical bookstores.
<adsjlkdk>	inphase: ok
<delta-nry>	if you want to use unity, then c# may be your best choice. it apparently supports javascript and another lesser-used language too.
<inphase>	delta-nry: i don't think very much of the professional game development industry is using c# at present.
<delta-nry>	some game engines use different languages, so i would choose a language based on what engine you want to use.
<miniman10001>	i said "i want to do x" and was like c++ is fast ill use that. then i used c++ and googled various websites that documented the libraries like cppreference.
<rumpledelf>	i like learning from "i want to do x", at least you have a goal
<miniman10001>	i doubt i could program without having some kind of goal
<rumpledelf>	yeah, same
<inphase>	miniman10001: programming can be its own sort of soothing brain massage.  but certainly goals can be useful.
<miniman10001>	i'd be like playing an instrument without having a song.
<miniman10001>	ughhh
<inphase>	miniman10000: sometimes i program just because i want to relax.  and then i'll pick something i want to work on to achieve one of my goals while i'm at it.
<yomic>	anyone see a way to optimize this?  http://pastebin.com/t786myg4 the next best thing i can think of is making a separate arraylist of only "blocked" tiled objects rather than searching them all.
<adsjlkdk>	the pdf i got for c++ has over 1000 pages
<adsjlkdk>	is that normal should i get another
<rumpledelf>	sounds about right
<adsjlkdk>	it must take a year to learn how to program
<miniman10000>	alright so #c++ requires you to be logged in to send a message and something changed my username to miniman10001 and i'm almost positive because of that "be logged in to chat feature" piece of trash that it is prevents me from changing and loggining in to miniman10000 because it causes freenode to say "cannot change while in a channel that you are banned from" even though it only restricts chat til you log in.
<delta-nry>	adsjlkdk: you don't need to know the entire language to make good programs
<inphase>	adsjlkdk: you'll be writing programs the first week.  it takes many many years to get good at programming.
<miniman10000>	c++ has a lot of features so people can pick and choose the ones they want to use... to try to tackle it all and once sounds rediculous
<miniman10000>	hi hentai pyon
<adsjlkdk>	inphase: what do you do while you c0de
<adsjlkdk>	do you listen to music or watch a movie or something
<inphase>	adsjlkdk: never watch a movie.
<adsjlkdk>	inphase: why
<inphase>	adsjlkdk: music is possible, but only if it has no words.
<adsjlkdk>	what music doesnt have words
<inphase>	adsjlkdk: because programming is linguistic, and utilizes the linguistic parts of the brain.  you cannot occupy these with processing other words at the same time.
<adsjlkdk>	i dont know many albums that dont have words
<adsjlkdk>	give me some please
<miniman10000>	i usually listen to anime osts or game osts
<inphase>	adsjlkdk: i like this collection for programming:  http://www.pandora.com/station/play/2639440326146559671
<miniman10000>	of course quietly because to loud and i find it hard to think
<adsjlkdk>	inphase: should i read the stuff that explains what a function definition ,etc is
<adsjlkdk>	inphase: or should i just read the code and if i dont get it read it
<inphase>	adsjlkdk: i would say you should.  skipping it will result in the sort of misunderstandings that will cause people to tell you to go read a book.  :)
<adsjlkdk>	inphase: how long should it take me to read this book(1200 pages)
<genaside>	i want to be like that guy that can read 1000 pages in 30 minutes
<inphase>	adsjlkdk: if you got a decent book it should have exercises.  and if you try to speed-read it you are doing it wrong.  pause at the exercises, and do them until you understand it, then move on.
<inphase>	adsjlkdk: you don't learn a spoken language just by reading a book describing the language.  you learn it by practicing it.  the same applies to programming.
<aewffwea>	inphase: you don't learn a concept by reading a book describing it... you can *actually* learn just a language by reading a book describing it
<inphase>	aewffwea: i've never seen someone who could do that without existing programming experience.  (which gives something for the language to connect to.)
<aewffwea>	inphase: that's why i said you can learn a language, but not concepts
<generalvagueness>	i got a book on pascal, spent a bunch of time reading it, wrote some simple programs out on paper, and i don't remember pretty much any of it now, and i had some prior experience with programming
<inphase>	aewffwea: i think we agree.  :)
<coldblackice>	any thoughts on the new stripped-down visual studio release?
<adsjlkdk>	inphase: im a slow learner
<adsjlkdk>	its taking me forever to read this pdf
<adsjlkdk>	what do you suggest
<adsjlkdk>	inphase: i dont think c++ primer has exercises
<adsjlkdk>	but maybe im not at the point where there are
<yaboy>	yo
<yaboy>	its ya boy
<adsjlkdk>	hotcoder: hi boy
<hotcoder>	wass good
<adsjlkdk>	hotcoder: what coding languagies do u know
<hotcoder>	adsjlkdk, just java
<adsjlkdk>	hotcoder: what have u coded
<hotcoder>	adsjlkdk, on my own? or for someone?
<adsjlkdk>	hotcoder: both
<hotcoder>	on my own i just did small stuff just for learning purposes
<hotcoder>	for someone else i made a software for data minind and processing and presenting
<inphase>	adsjlkdk: you've been trying to learn c++ for about an hour and a half.  if you think it's taking too long 90 minutes in, then you should probably either dig deep and find a reservoir of patience, or consider a different career path.  because it's going to take quite a bit more learning time.
<textmode>	adsjlkdk: to be clear, its takes about 2-3 to get *competent* at this. becoming actually *good* takes about 7+ years
<textmode>	years*
<textmode>	this is not a profession for the impatient.
<adsjlkdk>	inphase: how long should it take to read a prog book
<inphase>	adsjlkdk: it should probably take you at least a month to get through that if you have a lot of time to dedicate to it.
<inphase>	adsjlkdk: maybe 2 months if you put some good time into the exercises, and get more out of it.
<textmode>	which book?
<mostly_y>	textmode is php that hard too ?
<adsjlkdk>	c++ primer
<adsjlkdk>	textmode:
<mostly_y>	or lots easier ?
<textmode>	mostly_y: only on your soul.
<inphase>	textmode: lol
<mostly_y>	textmode what do you mean ?
<mostly_y>	textmode php is easier than c++, right ?
<textmode>	mostly_y: php is god-fucking-awful.
<mostly_y>	but not many on pair alternatives for web, right ?
<textmode>	mostly_y: google "a fractal of bad design"
<textmode>	mostly_y: perl, python, ruby...
<textmode>	and with cgi, you can use basically anything on the web.
<textmode>	(not that cgi has the best performance, but then niether does php. so...)
<mostly_y>	but are all those you mentioned as viable and scalable as php for large-scale web apps ?
<travelr>	i can't ebelive php is being discussed again
<travelr>	mostly_y: vat are yer requirements
<mostly_y>	object oriented web app that will make use of database and that is preferably scalable
<rcyr>	mostly_y: scalability is unrelated to language.
<rcyr>	you could actual scale with bash... if you were careful with your architecture
<travelr>	mostly_y: what does the app do more specifically
<mostly_y>	social network kind
<mostly_y>	lots of database use
<travelr>	eww
<adsjlkdk>	inphase: can you take a look at c++ primer again i think its weird it has a lot of reading is that normal
<travelr>	mostly_y: well i propose java for the core services, and fine, php for the controllers and templates. there.
<rcyr>	travelr: that's what i would probably use for a serious project.
<travelr>	rcyr: yeah it's my go-to solution for web stuff in general
<mostly_y>	amazing tip
<mostly_y>	thanks a lot man :)
<travelr>	np
<wei2912>	travelr: do you hate php that much? :p
<hotcoder>	adsjlkdk, what are you trying to do?
<hotcoder>	like whats your question?
<travelr>	wei2912: i just recommended php, so i guess i don't have it that much. but there isn't much to talk about it especially here.
<travelr>	hate*
<inphase>	adsjlkdk: i see nothing abnormal about it.
<wei2912>	travelr: okay, php frameworks
<travelr>	wei2912:  death to shitty php frameworks.
<inphase>	adsjlkdk: and there is a hello world exercise at the top of page 9.  if you didn't get to that, you didn't read very far at all.
<adsjlkdk>	inphase: the book im reading is from 2012 is that bad
<inphase>	the latest edition is the 5th.
<jave>	hello, event event = new event(eventid, name, actor); objectmapper mapper = new objectmapper(); string json = mapper.writevalueasstring(event); produces the entire object as json, is there any way i could just get eventid? like {"eventid":"x4234"}
<inphase>	adsjlkdk: and it was published in 2012.
<adsjlkdk>	inphase is it bad if its from 2012
<adsjlkdk>	do u think theyve updated/changed c++
<inphase>	adsjlkdk: the major changes to c++ happened in 2011, which this book incorporates.
<textmode>	standards get upgraded slowly…
<inphase>	nothing significant changed in c++ from 1998 through 2011.  then 2011 was a major change.  only very minor things have changed since then.
<adsjlkdk>	inphase how many pages should i read per hour
<adsjlkdk>	inphase: i think im really slow
<inphase>	adsjlkdk: i think you're talking instead of reading.  this does not work.
<textmode>	loaded question, you should ready slowly enoughn to understand the material.
<textmode>	but quckly enougn to make progress.
<inphase>	adsjlkdk: if you are serious about learning, go get away from all the distractions and focus.
<textmode>	on my shelf is a book that says in the introduction that if you are reading faster than a page an hour, you are moving to fast.
<textmode>	dense book,
<adsjlkdk>	inphase answer me first
<aewffwea>	inphase: lambdas were 2011?
<inphase>	adsjlkdk: you should read the paragraphs quickly, stop at the source code and try to understand it, then read the paragraphs, etc.  then get to the exercises, stop, and do them on your computer.
<aewffwea>	adsjlkdk: are you trying to learn c++?
<inphase>	adsjlkdk: you should have compiled the int main() { return 0; } program already.  if you did not, i don't know what you are doing.
<adsjlkdk>	inphase: yeah ive done that more than that
<adsjlkdk>	inphase: what worries me is im on only on page 46
<aewffwea>	adsjlkdk: are you trying to learn c++?
<inphase>	adsjlkdk: if you're on page 46 you probably skipped way too much.
<adsjlkdk>	aewffwea: yes
<adsjlkdk>	inphase: yeah i skipped the first chapter
<aewffwea>	adsjlkdk: how many programming languages do you know already?
<adsjlkdk>	aewffwea: 00
<aewffwea>	adsjlkdk: then learn something else first
<adsjlkdk>	inphase: but the first chapter is just the basics like wht an oop is and other stuff that doesnt mtter
<aewffwea>	adsjlkdk: you don't go to math 5 before going thorugh math 1 to 4 first....
<adsjlkdk>	aewffwea: i did i was placed out of algebra and into calculus
<aewffwea>	adsjlkdk: what you are doing is a horrible idea...
<adsjlkdk>	just kidding
<aewffwea>	adsjlkdk: do if if you want, but you'll probably won't end up learning anything
<inphase>	adsjlkdk: without trying it, do you know what output you should get from:  int main() { unsigned char c = -1;  std::cout << c << std::endl; }
<adsjlkdk>	inphase let me think
<adsjlkdk>	it prits out -1
<aewffwea>	inphase: i don't even know that :p
<rcyr>	hmm, not what i expected.
<sssilver>	hey guys, is there a programming language that makes it easy to shoot yourself in the foot (like c or c++), but at the same time results in very slow programs (like interpreted languages)
<inphase>	adsjlkdk: no.  you skipped the part about signed and unsigned types, and about the size of characters.
<aewffwea>	adsjlkdk: what if he replaces "unsigned char" by "char"?
<inphase>	adsjlkdk: the output is 255.
<rcyr>	yup
<sssilver>	as in, a programming language that's the worst of both worlds
<adsjlkdk>	inphase: dang
<adsjlkdk>	inphase im going to chapter 1 then :(
<aewffwea>	adsjlkdk: go to another language
<inphase>	(actually the output is not 255 because i made a typo in my example, but whatever.)
<adsjlkdk>	what is the actual output then
<adsjlkdk>	what was your typo
<adsjlkdk>	aewffwea: ill undersand this
<aewffwea>	adsjlkdk: you won't
<adsjlkdk>	aewffwea: what do you think will be hard for me
<aewffwea>	adsjlkdk: stupidity
<inphase>	an unreadable character.  std::cout doesn't automatically cast unsigned char to int.  one must have the int cast in there.
<inphase>	but my point was about the value anyway.  :)
<wei2912>	sssilver: don't.
<wei2912>	sssilver: do.
<wei2912>	sssilver: it.
<adsjlkdk>	aewffwea: i think i can understand
<sssilver>	wei2912 don't do what?
<wei2912>	sssilver: find that programming language
<sssilver>	wei2912 why? i need it for my presentation
<aewffwea>	adsjlkdk: you won't
<adsjlkdk>	what exactly wont i
<inphase>	http://ideone.com/xdix8v  <--  correct version.
<wei2912>	sssilver: o_o
<sssilver>	wei2912 i'm doing a presentation on rust, and i have this 2-dimensional axis where horizontal goes from "dangerous" to "safe", and vertical goes from "slow" to "fast"
<sssilver>	wei2912 and i'm gonna put rust on the top right corner
<sssilver>	but i want smth for the bottom left corner, just for fun
<sssilver>	the other corners are easy
<wei2912>	err, why not bash up something like...
<wei2912>	bash?
<wei2912>	:p
<sssilver>	bash isn't really dangerous though
<sssilver>	as in, you can't crash your process
<sssilver>	(unless you do a fork bomb)
<wei2912>	well, you can
<wei2912>	lol
<sssilver>	(but that's not bash, that's the kernel)
<wei2912>	i honestly can't think of anything else
<wei2912>	even malbolge isn't that horrible
<sssilver>	how about brainfuck?
<sssilver>	does it have a gc?
<pleiosaur>	brainfuck does not have a gc
<wei2912>	i don't think it's slow
<pleiosaur>	no, it's slow
<pleiosaur>	it's very slow
<wei2912>	hmm
<numb3rz>	hello all
<hotcoder>	adsjlkdk, stop talking. stop reading
<hotcoder>	i think you're better off getting an ide, terminal and installing c and learning for yourself
<hotcoder>	learn by trial and error
<hotcoder>	and use google
<hotcoder>	reading books for programming is yucky
<inphase>	hotcoder: that is not very sound advice.
<hotcoder>	he said himself he's slow
<inphase>	he's impatient.  there's a difference.
<inphase>	he was trying to finish a 1000 page book in an evening.
<adsjlkdk>	inphase: i read like 20 pages an hour
<hotcoder>	some people might be cut out for learning through reading
<hotcoder>	for some, going out and trying out is much easier
<hotcoder>	like for me, if i read i'd take far longer learning java from reading than by actually trying it out for myself, which is what i did
<adsjlkdk>	hotcoder: how long did it take you to learn
<hotcoder>	you never finish learning code. you always learn
<hotcoder>	but it took me about 2 months to learn enough to make money off of
<adsjlkdk>	hotcoder: you made a program and made money off of it after 2 months?
<hotcoder>	i started on self teaching java. then in 2 months i learned enough to write that program that someone paid me for
<adsjlkdk>	so ta 2 months you started making the program?
<adsjlkdk>	hotcoder:
<adsjlkdk>	when did you start writing the program
<hotcoder>	about a week ago
<adsjlkdk>	and how many months ago was it when you learned to program
<hotcoder>	i dont understand your question
<hotcoder>	i never stopped learning code. i just get better at self teaching. thats how this field works
<hotcoder>	2 months ago i started on java
<hotcoder>	a week ago, someone contacted me to program something for them. i did that then got paid
<hotcoder>	but my learning never stopped
<adsjlkdk>	dang how much money did you make
<hotcoder>	1000 in one week :3
<adsjlkdk>	holy guacamole!
<hotcoder>	which is actually cheap. but its good for a beginner i guess :p i dunno
<adsjlkdk>	how many lines of code was it
<hotcoder>	didnt count lol
<adsjlkdk>	guess
<hotcoder>	but it was pretty complicated
<adsjlkdk>	what was the program
<hotcoder>	data miner and processor
<hotcoder>	but i'm not done with the project
<hotcoder>	i'm gonna add more stuff and he'll pay me more
<hotcoder>	the 1000 was just for the prototype which took one week to finish
<hotcoder>	my advice to you would be to learn from a video series then practice on your ide/terminal/text editor whatever you choose. and always push for more
<hotcoder>	get practice problems from the web
<adsjlkdk>	or should i read the pdf
<adsjlkdk>	i already started
<hotcoder>	if reading is your thing, then yeah go for it. but a lot of people dont learn well by reading. i'm not a reading learner
<adsjlkdk>	hotcoder: how many hours a day did you dedicate to learning code
<hotcoder>	but point is, at one point, the sooner the better, you have to start practicing
<rumpledelf>	i've been learning something new for over a year and can't imagine getting paid for it ... just haven't put enough time into it
<hotcoder>	adsjlkdk, well some days i didnt even learn code lol. i did it as a hobby. i had no intention of making money off of it
<hotcoder>	but i'd say per week maybe like 5 hours?
<inphase>	i suspect that was a little over market rate.
<hotcoder>	but most of those hours were spent practicing. not just reading or watching the vid
<rumpledelf>	i haven't done unit testing or anything like that yet
<adsjlkdk>	inphase: you made me waste my time reading the first chapter i dont think it covered the problem you gave me
<hotcoder>	also once you get into the job you'll know that most software, like 70% of it you'll have to do some sort of research and learn it while you're coding the software
<hotcoder>	its impossible to remember everything
<inphase>	adsjlkdk: i scrolled through it and saw that covered in there.
<adsjlkdk>	what page
<hotcoder>	rumpledelf, network more
<hotcoder>	i would say
<inphase>	adsjlkdk: i closed it, and am not going to handhold you.  it covered signed and unsigned integers, as well as the ranges for the primitive types.
<rumpledelf>	networking more isn't going to get my skill level up
<coldblackice>	hotcoder: how did you find that gig?
<hotcoder>	coldblackice, networking
<hotcoder>	met new guy, he knew a guy who needed some thing done
<hotcoder>	met new guy's friend, 40 year old analyst
<inphase>	adsjlkdk: i even saw one section where it assigned -1 to an unsigned char.
<hotcoder>	one thing led to another
<hotcoder>	and soon i'm coding for him :d
<rumpledelf>	last dev i hired i asked around and got someone, its not hard to find devs
<adsjlkdk>	inphase: in chapter 1??
<hotcoder>	rumpledelf, it may not bring your skill up, but i'd say to make money just jump into a project that seems reasonably doable and learn as you go along
<rumpledelf>	hotcoder: companies aren't going to throw someone who doesn't know much into a project. nor will they pay much
<inphase>	adsjlkdk: you said you were on page 46, i flipped to somewhere about halfway between 1 and 46 and picked the first thing i saw to ask you about.
<adsjlkdk>	inphase: you probably didnt read the chapter #
<hotcoder>	rumpledelf, idk. it depends
<adsjlkdk>	inphase: maybe you went to the tble of contents
<rumpledelf>	most juniors are hired coming out of the wdi course here
<rumpledelf>	so i need to get up to about the skill level a wdi graduate has, which is going to take me freaking ages
<hotcoder>	also doesnt have to be a company. get hired as a freelancer. get that done. put that on cv/resume. then companies will want you more
<rumpledelf>	i'm not going to freelance in something new i don't know much about
<hotcoder>	rumpledelf, what language are we talking here?
<rumpledelf>	just need to slowly build up a decent portfolio ... been converting my old sites to rails
<rumpledelf>	rails
<hotcoder>	how much do you know of it?
<rumpledelf>	which isn't a language
<rumpledelf>	just enough to be dangerous
<hotcoder>	ruby on rails
<hotcoder>	rumpledelf, you spent over a year on it?
<rumpledelf>	yes, which is very little actual hours
<hotcoder>	have you made any practice projects?
<rumpledelf>	i have two, one isn't deployed yet. neither have unit tests
<hotcoder>	what they do? if you dont mind me asking....
<hotcoder>	i want to know the complexity of your projects
<rumpledelf>	been referred to be a ta for the wdi course which would be awesome, would get to leech the entire content of that course *and* get paid for it
<rumpledelf>	one is complex but very specific, the other is a very simple site
<inphase>	adsjlkdk: page 35, middle of the page.
<hotcoder>	i'd dive into some freelance work
<hotcoder>	and get some programming stuff to put on my resume
<hotcoder>	if i were u
<rumpledelf>	i'm not touching freelance work on something i'm unfamiliar with
<hotcoder>	who knows man. maybe it would work out well for you
<inphase>	adsjlkdk: "unsigned char c = -1;" verbatim from my example question.
<rumpledelf>	i think the wdi is a better option
<hotcoder>	i mean for my freelance, i knew nothing of the work i was assigned to do at first. i didnt lie, i said i would research on it. then i figured i could do it and i did it
<rumpledelf>	got reffered to that by the instructor of the course i'm doing now
<hotcoder>	ok then you have something then :)
<hotcoder>	your instructor's reference
<rumpledelf>	no, i have a referral
<hotcoder>	ye
<hotcoder>	its somethng
<hotcoder>	wait
<hotcoder>	you mena like a recommendation right?
<nullentity>	any recommendations for a home office chair that can hold my 330 lbs ass? the dxracer king can hold that. a friend recommended a herman miller chair, but idk about their weight limits.
<rumpledelf>	they are looking for a wdi ta and they said i should talk to their person about it
<rumpledelf>	apparently they think i'd get on well with the current instructor or something
<hotcoder>	oh ok
<hotcoder>	sounds nice rumpledelf hope it works out for you
<rumpledelf>	its a part time gig, it would be ideal. i could just freelance in between
<hotcoder>	what program are you
<hotcoder>	major*
<adsjlkdk>	inphase:  you have a different pdf
<nes173>	let's say i've made a struct x{int a; int b;}
<rumpledelf>	so would be fun getting a ta job with that lot
<nes173>	then i've made a vector<x> vec
<nes173>	how can i sort vec to sort the b's?
<nes173>	from lowest to biggest?
<rumpledelf>	they actually put more weight on liking to teach and help people than on strong subject matter knowledge, for the tas in particular
<blipped>	nes173: use any sorting algorithm for x.b ?
<inphase>	nes173: either add a comparison operator to struct x, add a global comparison operator for type x, or use the std::sort call which takes a comparator, and pass it a lambda function that compares on the b values.
<nes173>	i want to use std::sort
<inphase>	nes173: all three approaches will use std::sort.
<nes173>	how do i make it sort through the b's and not the a's?
<nes173>	sort, the one with the v.begin(), v.end()
<inphase>	nes173: the question is, do you want to bundle your comparator with struct x, or do you want it expressed only at the sort operation?
<nes173>	i want it to be changed
<nes173>	so i can use it later for other stuff
<inphase>	nes173: different times sorting in a different manner?
<rumpledelf>	anyway, time to go play in traffic with the kids
<hotcoder>	rumpledelf, sounds like a helpful environment
<hotcoder>	around here things are not very helpful
<hotcoder>	hard getting a job
<nes173>	i want to sort it, so that it changes.
<nes173>	like, if the b's were 4, 3, 6
<adsjlkdk>	hotcoder: do you think ill be as successful as you
<nes173>	they'd get rearranged in the vector to be in this order 3,4,6
<nottapesahc>	nes173, look up the quicksort algo in whatever language you're wanting
<nes173>	i want a one line solution, if possible
<nes173>	like, if there was an array g that had [4,5,3,2]
<hotcoder>	adsjlkdk, lol....
<nes173>	i'd do
<hotcoder>	adsjlkdk, i'm not successful
<inphase>	nes173: doing it as a lambda will look like:  std::sort(v.begin(), v.end(), [](const x& x1, const x& x2) { return x1.b < x2.b; });
<nes173>	sort(g.begin(), g.end() );
<adsjlkdk>	hotcoder: you made 1000 in a week
<nes173>	why the return?
<adsjlkdk>	imagine if you made 1000 every week
<nes173>	i don't want it to return anything.
<nes173>	just change the vector
<hotcoder>	adsjlkdk, would be 52000 a year
<inphase>	nes173: you want what i wrote to do what you said.
<adsjlkdk>	hotcoder: yeah thats good
<hotcoder>	its not enough. i want to make 120000-150000 one day
<adsjlkdk>	hotcoder: and you only get better everyday which means you make more
<nes173>	can i use it without the return?
<inphase>	nes173: look at the documentation for std::sort, see form 2, and the description:  http://en.cppreference.com/w/cpp/algorithm/sort
<adsjlkdk>	hotcoder: how old are you
<hotcoder>	adsjlkdk, 1000 a week for the work i did is cheap
<hotcoder>	i'm 20
<inphase>	nes173: note the comp must return a bool.
<nes173>	i just want it to be changed, not for it to return anything.
<adsjlkdk>	how do you plan to make 150k
<hotcoder>	he should had paid me more
<inphase>	nes173: by default the comparator used there is the less than operator.
<nottapesahc>	nes173, the array would have to be in scope if you didnt want it to return
<hotcoder>	adsjlkdk, could be own business. own project. something big. something of my own
<inphase>	nes173: i'm returning a bool so it sorts on .b of each element.
<inphase>	nes173: i'm not returning the vector.
<hotcoder>	i honestly deserved more for this gig
<adsjlkdk>	did you go to college
<planckwalk>	deserve?  hah.
<adsjlkdk>	how did you find that guy
<hotcoder>	met guy. said he knew a guy who needed some code done. met him. discussed things. got the job
<nes173>	is there a simpler way?
<planckwalk>	if you think you deserved more, then your negotiating skills need improvement.
<inphase>	nes173: you must express that you want to sort it with .b.  there is no way to do that without writing a comparator function which accesses .b of each element.
<hotcoder>	planckwalk, they really do
<nes173>	can i write it without the const ?
<hotcoder>	but when i first got it, i thought it was what i deserved. in hindsight i wish i negotiated more
<inphase>	nes173: yes, but it does not follow formal const correctness then.
<nes173>	sort(s.begin(), s.end(), [](int a, int b) {
<nes173>	        return b < a;
<nes173>	    });
<nes173>	wouldn't this do?
<inphase>	nes173: no.
<inphase>	nes173: what do you think it will pass to that function?
<monroe>	if i develop on a wamp stack on my local pc , is it trivial to migrate that site to a lamp on a possible remote server ?
<monroe>	does the w part will have any influence on the code per si ? i will migrate only the code, right ?
<planckwalk>	w = windows?
<monroe>	yes
<nes173>	sort(s.begin(), s.end(), [](&x x1, &x x2) { return x1.b <x2.b; })
<nes173>	this will work?
<monroe>	wamp = windows apache mysql php
<inphase>	nes173: if you fixed your syntax errors.
<monroe>	lamp is the same except l = linux
<planckwalk>	there are a few minor differences in php behaviour there, but you should be able to avoid them.
<planckwalk>	i haven't used apache on windows, so dont' know about that aspect
<nes173>	what's the syntax error?
<nes173>	i didn't put ; in the end?
<inphase>	nes173: &x
<planckwalk>	i'd expect it's just configuration
<nes173>	thank you inphase
<nes173>	very cmuh
<pulock2016>	hello all....installed xchat on my fedora 21 system....now chatting from there
<pulock2016>	are you there rindolf,amigojapan?
<monroe>	i see, i hope so :s
<pulock2016>	seeing the source of the tor client....
<adsjlkdk>	hotcoder: what did u do before u coded
<amigojapan>	hi pulock2016 i am here
<hotcoder>	adsjlkdk, i just drift through the winds
<hotcoder>	couldnt afford to get into uni/college
<pulock2016>	amigojapan, do you believe in the anonimity of the tor network?
<yeah__>	hello, where can i find documentation jar/maven artifcat for hibernate 4.3.9
<amigojapan>	hotcoder: well, for a programming career you dont really need to go to uni/collage, although many companies still use it as a way to discrminate in emplyment
<yeah__>	i can't believe it's not included within the hibernate-core artifact
<yeah__>	or is there something wrong with my ide and it can't detect it
<hotcoder>	amigojapan, i know aha
<amigojapan>	pulock2016: i dont. also, the tor network is one of hte worst places on the internet
<pulock2016>	the hosts that participate in the formation of a tor circuit maybe infact government agents....once you have a siezable amount of such hosts the tor network is no longer anonymous..
<hotcoder>	i dont care. if companies want to be bitches, let them be
<amigojapan>	hotcoder: this will probably change in the future
<pulock2016>	amigojapan, at the end its the age old number theory that protects us......lol
<amigojapan>	pulock2016: i think htey can descript ssl probably
<pulock2016>	amigojapan, but the heartbleed has been fixed i heard..
<amigojapan>	pulock2016: yeah,  but think about it… these are the same people that would secretly invent an atomic bomb…   they will just as well pour money and resources into cracking ssl for homeland security
<pulock2016>	amigojapan, professional encryption algos are safe i feel....again at the end its money that speaks...
<wei2912>	professional encryption algs? there is no such thing
<planckwalk>	i'm pretty confident that the actual encryption part is safe.
<amigojapan>	pulock2016: the germans thought the enyngma was safe, but the allies cracked the code
<standoo>	anyone here uses ada?
<planckwalk>	all the rest surrounding it though?  probably not.
<hotcoder>	adsjlkdk, how old are you
<pulock2016>	wei2912, i mean the ones to implement which one needs to pay....not the open source ones....which can be freely implemented
<planckwalk>	enigma was just "security by obscurity"
<planckwalk>	they didn't have any mathematical basis for believing it safe
<wei2912>	pulock2016: even more so not
<inphase>	enigma was state of the art.
<inphase>	it would be arrogance to look at enigma from a modern perspective and dismiss it.
<planckwalk>	it hadn't been extensively peer-reviewed or anything.
<pulock2016>	inphase, agrees with you....
<wei2912>	pulock2016: when it comes to encryption, it is crucial that many people need to study an encryption algorithm
<wei2912>	pulock2016: the algorithms which one needs to pay for can't be peer reviewed by anyone
<pulock2016>	wei2912, brb....
<pulock2016>	wei2912, you have a point there though...brb
<inphase>	wei2912: that's not strictly true.  you can pay professionals to critically review your algorithm in secret.
<inphase>	wei2912: it's just that this is rarely done.
<planckwalk>	beside which, enigma wasn't used correctly
<wei2912>	inphase: point still stands -- i'm talking about the public, not the companies.
<planckwalk>	(which was known at the time)
<wei2912>	of course the companies can review their algorithms.
<inphase>	wei2912: i of course agree with the premise of not assigning trust to non-public algorithms.
<adsjlkdk>	inphase:
<wei2912>	inphase: planckwalk i'm curious though -- how was the engima not used correctly?
<adsjlkdk>	are you still with us
<wei2912>	amigojapan: well, no, but any viable encryption is probably crackable
<adsjlkdk>	is it bad if im barely on page 64
<adsjlkdk>	its the page with the review questions and exercises i havent started them yet
<wei2912>	amigojapan: there's a very simple encryption scheme known as the otp which is guaranteed to be uncrackable mathematically assuming the key is used once
<wei2912>	but the key has to be as long as the message
<amigojapan>	wei2912: ok, i dont know enough math to understand it probably
<wei2912>	amigojapan: perhaps you do? :)
<amigojapan>	wei2912: probably not
<planckwalk>	wei2912: all the usual operational problems: key re-use, cribs, weak key generation, reduced rotor numbers, retransmission of the same message with different keys, etc
<amigojapan>	wei2912: how do you send the key. withought it being captured?
<wei2912>	planckwalk: i see
<andreasl>	if i have a bunch of data that i need a database for, is it reasonable to default to choosing some sql-derivative, and then instead migrate parts of the database as i learn more about our requirements? i have limited experience with databases
<wei2912>	amigojapan: there're a few methods to do this afaik
<amigojapan>	andreasl: migrating a database is a major task
<andreasl>	amigojapan, yes, i am somewhat aware of that
<wei2912>	amigojapan: wait, are you asking abt in general, or with the use of a otp?
<inphase>	wei2912: you can transmit your otp by encrypting it with the only trustworthy encryption scheme, the otp.  just this requires a key of the same length.
<wei2912>	unbreakable: apt name
<amigojapan>	wei2912: i was asking with the use of otp
<andreasl>	i guess what i'm asking is, given an unspecified set of operations on data, what is a reasonable choice of database technology to default to? something that is flexible enough to handle most things, without being a major pain to work with. i think i can worry about performance later
<hotcoder>	adsjlkdk, you did not answer my question
<wei2912>	amigojapan: there's another assumption that the key is known to both parties and not transmitted, for it to be perfectly secure. otherwise you can use the general ways
<wei2912>	inphase: well, you'd need to transmit another key
<wei2912>	:p
<amigojapan>	andreasl: you can probably start with sql, and if your project grows to somethign that can no longer be handled by sql,   then you should migrate it to shas or something
<inphase>	amigojapan: realistically the otp key has to be distributed in advance.  for example, you take a thumbdrive with you and don't let it out of your sight.
<wei2912>	^^
<inphase>	amigojapan: i've heard it said that the otp depends on an armored car.  this is pretty close to true.
<andreasl>	amigojapan, all right, thanks. good to hear i'm not a moron for thinking this
<inphase>	amigojapan: however, it can be possible to trust physical distribution of a key more than other encryption algorithms, and for certain high security applications this could be the wisest approach.
<andreasl>	amigojapan, wait, what is/are 'shas'?
<planckwalk>	otp is only practical in very restricted circumstances.
<amigojapan>	ok wei2912 , so basically you cant transmit the key over hte internet, gotcha…   why not just send the message on the thumbdrive?
<inphase>	amigojapan: because you can distribute the key in advance, and be ready to send a message when you need to.
<wei2912>	^^
<amigojapan>	andreasl: i ment “shars”
<planckwalk>	e.g. if you have a secure channel *now* and want to use that to send a message securely later.
<amigojapan>	andreasl: shars is a kind of database that is supwer scalable, basicallyw hat google uses
<inphase>	amigojapan: for example, a 32gb thumb drive could encrypt decades worth of irc chat, using each byte of the otp only once.
<andreasl>	amigojapan, i... can't easily find a reference by googling? i'm slightly confused!
<amigojapan>	inphase: i thouhgt you guys sais otp needs a different key for each message
<planckwalk>	amigojapan: each byte of message needs a new byte of key
<adsjlkdk>	hotcoder: what was your question
<inphase>	amigojapan: if you have a 32gb pad, and a 16 byte message, you use the first 16 bytes of the pad to encrypt it, then mark those as used.
<wei2912>	^^
<adsjlkdk>	adsjlkdk: im 19
<yeah__>	hello, how to make intellij idea enterprise version display javadoc popup on mouse hover automatically?
<yeah__>	google does not help!
<amigojapan>	i see inphase
<inphase>	amigojapan: the standard encryption algorithm for using a otp is to take each byte of your message and xor it with the next unused byte from the pad.  and that's it.  the math is very simple.  :)  to decrypt, you xor with the same byte on your own copy of the pad on the other end.
<inphase>	amigojapan: as long as the otp is random, this is fundamentally unbreakable.
<amigojapan>	andreasl: seems i misspelled it http://en.wikipedia.org/wiki/shard_(database_architecture)
<andreasl>	amigojapan, ah, i see. thanks!
<hotcoder>	adsjlkdk, how old are you
<amigojapan>	np andreasl
<amigojapan>	ok inphase
<planckwalk>	note though that although it can't be decrypted, an attacker can get some information from the messages.
<planckwalk>	e.g. x sent a message to y at z time of length w
<wei2912>	^^
<adsjlkdk>	hotcoder: 19
<inphase>	what planckwalk mentions is resolvable by padding messages with random bogus extra data, and sending bogus messages at random times.  tor does this.
<yeah__>	intellij stopped display documentation automatically
<yeah__>	help
<planckwalk>	yep.  it's just an illustration of one of the distinctions between security and encryption.
<hotcoder>	ahh ok
<amigojapan>	andreasl: apparently mysql supports sharding, i did not know
<andreasl>	amigojapan, oh, interesting
<wei2912>	amigojapan: a lot of dbs should support sharding, i think
<hotcoder>	adsjlkdk, what langauge are u thinking to learn?
<amigojapan>	ok wei2912 , it is all on http://en.wikipedia.org/wiki/shard_(database_architecture)
<adsjlkdk>	hotcoder: c++
<hotcoder>	adsjlkdk, why do u want to learn that particular language?
<adsjlkdk>	hotcoder: they said its  good for games
<andreasl>	next question. consider a large set x. given a subset y (of x) and a collection c of subsets of x, does anyone know an efficient algorithm to determine all sets in c that contain y?
<amigojapan>	adsjlkdk: it is easier to learn another easier language before c++
<andreasl>	i just don't know what to search for
<amigojapan>	adsjlkdk: like python
<hotcoder>	adsjlkdk, who said? and why are you trying to learn how to make games?
<wei2912>	andreasl: hmm
<adsjlkdk>	hotcoder: for fun
<inphase>	andreasl: are the elements sortable?
<andreasl>	inphase, i could make them sortable, yes
<horny-sama>	https://www.youtube.com/watch?v=uemixraa-dw <--- cs career in my place
<andreasl>	inphase, conceptually i could introduce a one-to-one mapping of elements in x to integers
<hotcoder>	adsjlkdk, ah ok
<andreasl>	inphase, actually, if it makes things easier, you can make the set x consists entirely of unique integers
<inphase>	andreasl: if we assume the sets in c and y are of similar sizes, i'd sort all sets in c, sort y, and for each set in c iterate through y and a set of c together and discard that set from c as soon as an element is missing that is in y.
<horny-sama>	any tips for my os class?
<hotcoder>	adsjlkdk, well to make a decent game taht also looks pretty, it would take months of dedication
<inphase>	andreasl: basically, you want to discard all sets in c that are missing an element in y, and return the rest.
<wei2912>	andreasl: iterate through the whole collection. binary search the lowest element and highest element in the y set which is in the set in c. iterate through
<adsjlkdk>	hotcoder: i dont care about hwo it looks
<wei2912>	andreasl: err, my second statement isn't clear. let's say x is a range from 1 to 10000. y is a subset of 100 to 1000 for example. then, binary search 100 in each set, then iterate till you find that the set in c contains an element that y doesn't.
<hotcoder>	adsjlkdk, a big part of games is its aesthetics
<wei2912>	andreasl: arghh, let me type out a pastebin instead
<adsjlkdk>	hotcoder: its just gonna be 2d
<adsjlkdk>	nothing fancy
<adsjlkdk>	not planning to even sell it
<adsjlkdk>	not that i could
<hotcoder>	you might
<hotcoder>	who knows
<inphase>	andreasl: now if you can confine the number of these sets and the range of integers possible, you can get some serious optimizations via some bucket algorithms.
<hotcoder>	flappy bird, angry bird these things are not hard to implement
<hotcoder>	if you can make an addictive game for a phone
<hotcoder>	you might make money
<inphase>	andreasl: the one i proposes is i think about as fast as you can get for arbitrary set counts and ranges.
<inphase>	one i proposed
<inphase>	hotcoder: the vast majority of people who have made game apps have not made any real amounts of money.
<andreasl>	inphase, your solution is clear and elegant. however it does have a worst-case complexity equal to the sum of the sizes of all subsets in c...
<andreasl>	inphase, as far as i can see anyway!
<inphase>	andreasl: correct.  but i don't think you can solve it without visiting every element of every subset of c once.
<inphase>	every element of every set in c
<andreasl>	inphase, somehow i imagine there exists a graph algorithm for this
<wei2912>	well, that's in the worst case
<wei2912>	average case shouldn't be too bad
<hotcoder>	inphase, true. but i mean. it could happen
<andreasl>	wei2912, if the data is random, that's true :)
<hotcoder>	i personally dont like game dev because i dont play games
<hotcoder>	but if thats your thing, go for it
<inphase>	andreasl: where i picture a bucket advancement is if, say you have a max of 64 sets in c, and you express those sets as unsigned 64 bit integers next to the values in x.  then you simply iterate through the values in y, and do a bitwise and of the set values in x.  then when you get to the end of all those bitwise ands, you have an integer with a 1 at every set that works.
<inphase>	andreasl: more stuff is being considered there, but the cpu is handling it in parallel so it's substantially faster.
<wei2912>	andreasl: http://pastebin.com/w4gjdyy6
<wei2912>	that should be fast enough for your needs
<andreasl>	inphase, that's interesting. if you have more than 64 sets, could you simply concatenate multiple unsigned integers...?
<andreasl>	wei2912, ok, let me consider that for a second!
<inphase>	andreasl: sure.
<wei2912>	andreasl: psuedocode i wrote checks only a single set.
<inphase>	andreasl: it fails only when you run out of space.  and there's a point where it becomes inefficient, because my original proposed algorithm will exclude sets in c very early on if they are missing a lot of elements of y.  so which is more efficient is a matter of the nature of the data.
<wei2912>	wait a moment.
<pleiosaur>	pyon: this reminds me of you http://www.blog.felixangell.com/virtual-machine-in-c/ , are you still regretting embarking on this rust rewrite? :)
<wei2912>	i wonder if a bloom filter would help
<andreasl>	inphase, ah, yes, good point. still, i'm convinced there must be an algorithm with better asymptotic complexity somewhere!
<inphase>	andreasl: the bitwise operation one has to and everything, at least until an integer reaches 0.
<andreasl>	wei2912, oh, that's a good point!
<inphase>	andreasl: you won't beat linear inspection.
<andreasl>	wei2912, hmm, it isn't directly applicable though
<andreasl>	inphase, are you completely sure?
<inphase>	andreasl: how could you?
<andreasl>	inphase, i'm not sure :)
<andreasl>	inphase, oh, sorry, let me add an important element!
<wei2912>	andreasl: well, why not test the algorithm first, then tell us if you need a more efficient algorithm?
<wei2912>	the current ones proposed should meet your needs and look quite clean
<inphase>	andreasl: that's asking a program to prove that every element in set a is in set b without going through the elements of set a once.
<wei2912>	^^
<inphase>	andreasl: you won't do that short of some sort of quantum computing algorithm.
<andreasl>	ok, let's add the following, which i completely failed to mention. i'm sorry. consider the collection c to be static, and that you want to check many, many sets y. my point is that it's ok to spend a long time setting up the data structures for c in whatever manner you please.
<andreasl>	wei2912, well, it's more out of curiosity for now. the linear algorithm will work for my purposes for the very foreseeable future, but it's likely that it is eventually not going to provide the latency i need
<inphase>	andreasl: the best you can do to prepare i think is sort collection c, and arrange it in the bit-packed form.
<pyon>	pleiosaur: cool, but this virtual machine is a little bit too simplistic. automatic memory management is left as an exercise to the reader.
<wei2912>	lol
<pleiosaur>	pyon: i expect a blog post of your own describing your multithreaded gc
<pyon>	pleiosaur: lol, i'm not making exactly a multithreaded gc.
<pyon>	pleiosaur: anyway, my heap is just a bunch of vec<usize>s, and "compacting the heap" is just moving live objects upwards in the vector, to fill the gaps left behind by dead objects.
<andreasl>	inphase, wait, my set x will probably have size 3000-10000.
<andreasl>	inphase, does that not mean i need 3-10000 bits for a set? or did i completely misunderstand you?
<pyon>	and it stops the world completely - it can't work otherwise.
<inphase>	andreasl: one bit for each set in c.
<pyon>	concurrently running the garbage collector while running the program is too hard.
<andreasl>	inphase, eventually i'll have thousands of set in c too though
<inphase>	andreasl: well, a thousand bits by 10,000 values is about a megabyte sized bitfield.  this is trivial.
<wei2912>	thousand bits are negligible
<andreasl>	inphase, that's true
<andreasl>	inphase, hmm, i think i don't quite understand your proposed algorithms. would you mind trying to explain it one more time?
<andreasl>	algorithm*
<inphase>	andreasl: pretend c has 64 sets for simplicity, numbered 0 to 63.  we assign each set in c to one bit of a 64 bit "word".
<champloolaptop>	what are web applications typically developed with for the gui elements?
<pleiosaur>	pyon: is rust helping or hindering?
<inphase>	andreasl: then x has 10,000 values, so we have 10,000 values next to 10,000 words representing the membership of each value in a set of c.
<pyon>	pleiosaur: helping.
<wei2912>	inphase: you're clearly doing this in c
<wei2912>	:p
<inphase>	andreasl: then y has a set of values, so we iterate through the values of y, go to that entry in x, and grab the word.  then we and all those words together.
<pyon>	pleiosaur: the unsafe parts (there's a lot of this) are no better than c, but there are safe parts.
<wei2912>	brb
<inphase>	andreasl: and if the conclusion isn't clear, the result of all those anded words represents the sets from c that contain all values in y.
<andreasl>	inphase, ah, i understand. thanks for clarifying! i think i just had to visualize things as boolean vectors
<andreasl>	inphase, i see your point. this should be very fast if y has a small number of elements
<andreasl>	inphase, hell, it'd be very fast no matter what unless my data set drastically increases
<inphase>	andreasl: roughly sizeof(y) * setsin(c) / 64 operations, plus some time to find the next element in x if y is much smaller than x.
<inphase>	andreasl: and if y doesn't come presorted, you might gain time by sorting it first.
<andreasl>	inphase, because of cache utilization?
<inphase>	andreasl: because if y is sorted you can go through your x bitfield in sequential order.  otherwise you'd have to log(n) search x for each element of y.
<andreasl>	inphase, oh, right, of course. yeah, cache didn't make any sense once i started thinking about it
<inphase>	andreasl: which is better i suppose depends on their relative sizes.
<inphase>	but, i should close this window and go finish my work for the evening.
<andreasl>	inphase, that does sound like the reasonable thing to do. :) thanks for your input, appreciate it!
<andreasl>	you too, wei2912 !
<adsjlkdk>	inphase: ive been reading the wrong pdf the whole day!
<adsjlkdk>	i was reading one called c++ primer plus instead of c++ primer
<adsjlkdk>	inphase: what should i do
<adsjlkdk>	i cant believe this
<adsjlkdk>	i shouldve listened to hotcoder
<hotcoder>	man
<hotcoder>	just learn from videos
<wei2912>	adsjlkdk: lol
<adsjlkdk>	dude i wasted my time
<adsjlkdk>	lierally hourss
<adsjlkdk>	c++ primer seems faster to learn
<textmode>	has he been given the "why tf are you starting with c++?" rant yet?
<textmode>	because we got a quota.
<adsjlkdk>	im not starting with c++
<textmode>	oh?
<adsjlkdk>	anyways the problem isnt what im starting with
<adsjlkdk>	its what the heck im reaading
<adsjlkdk>	c++ primer plus sucks
<hotcoder>	adsjlkdk, if this is just a hobby
<hotcoder>	then why are you looking for a fast to learn approach?
<hotcoder>	just relax
<hotcoder>	chill
<hotcoder>	try different things and have fun wit hit
<hotcoder>	its just a hobby right?
<adsjlkdk>	yeah  but i want to build the game before im 90
<hotcoder>	lol
<hotcoder>	trust me, whatever you're thinking of building
<hotcoder>	it wont take that long
<hotcoder>	just get started on the code itself
<hotcoder>	learn basics
<adsjlkdk>	yeah but learning the code will
<adsjlkdk>	that pdf ruined my weekend
<adsjlkdk>	i cant believe this
<adsjlkdk>	i wouldve started building the game if it wasnt for that pdf
<hotcoder>	create a framework in your brain about the code. then learn to make graphics. then make them interact
<hotcoder>	then make the game
<hotcoder>	its all step by step
<adsjlkdk>	yeah but step 1 is learning c++
<textmode>	if you want to make a game *quickly* then c++ isn't the language to use.
<textmode>	c# tends to be pretty popular with indie gamedevs.
<adsjlkdk>	i dont want to make a game quickly
<adsjlkdk>	i want to learn c++ quickly
<adsjlkdk>	but c++ primier plus wasted all the time i had to learn it
<adsjlkdk>	now ill never be able to build it
<textmode>	theres also things like pygame, pyglet, löve2d.
<vdamewood>	hi, people, etc.
<adsjlkdk>	no
<textmode>	and, i guess, unity, shiva3d et al…
<hotcoder>	you're kind of being a bit misinformed about this adsjlkdk
<adsjlkdk>	those are python
<hotcoder>	that is a polite way of saying you're being an idiot right now
<adsjlkdk>	i wan c++game c++glet love2d for c++
<textmode>	adsjlkdk: if this weekend was all the time you had, then when were you planning to make the actual game?
<adsjlkdk>	next weekend
<textmode>	adsjlkdk: why do you care about c++?
<hotcoder>	lmao the fuck?
<hotcoder>	learn c++ this weekend. make game next
<xordd>	lol
<wei2912>	adsjlkdk: that's not going to work, sorry
<hotcoder>	thats not how it works bro
<textmode>	adsjlkdk: surely your goal is to create a game, regardless of with what?
<rcyr>	c++ takes 10 years to learn :)
<adsjlkdk>	but i cant the pdf ruined my life
<vdamewood>	hi, people, etc.
<hotcoder>	you ruined your own life
<textmode>	rcyr: there is no evidence that anyone has actually mastered c++.
<rcyr>	textmode: indeed.
<hotcoder>	we always learn
<hotcoder>	thats what programmers do
<uberjar>	pro tip: c++ sux
<uberjar>	it gives you too much rope to hang yourself with
<adsjlkdk>	what should i use
<belzelutte>	eeh, should have started this all with question "what kind of game i want to make?"
<vdamewood>	uberjar: you're not very familiar with the channel rules, are you?
<adsjlkdk>	if c++ sux then what rox
<rcyr>	uberjar: it's a standard in the game industry... so whether it sucks or not is irrelevant.
<uberjar>	basically it depends on what game engine you need to use
<uberjar>	if you need a particular engine then you're stuck with using whatever you need
<hotcoder>	uberjar, if it gives you too much rope, wouldnt you just reach the ground and live?
<hotcoder>	lol
<adsjlkdk>	i want a game engine that does 2d
<adsjlkdk>	and does stuff like the mario games
<adsjlkdk>	where he jumps and stuff
<uberjar>	lol nice 1 hotcoder
<rcyr>	adsjlkdk you could learn a bit of javascript and use <canvas>
<xordd>	adsjlkdk: if you could wave a magic wand and have your game made would you? if that answer is yes than forget about c++. learn c++ if you love to learn about how a computer works.
<hotcoder>	adsjlkdk, thats not how coding works
<hotcoder>	thats not how any of this works
<rcyr>	adsjlkdk: that would be way more accessible to your current skill level
<wei2912>	adsjlkdk: learning a programming language takes a long time
<adsjlkdk>	xordd: my answer is not yes
<xordd>	well than enjoy
<adsjlkdk>	so what game engine does what i explained
<textmode>	adsjlkdk: about ten billion of them.
<textmode>	2d engines are dime a dozen.
<vdamewood>	they're cheaper and more common than that.
<textmode>	theres a torque2d, ffs.
<uberjar>	idea: start learning by making a flappybird clone
<xordd>	you can do 2d games with 3d engine. just lock the camera
<vdamewood>	i think mighty number 9 was made with the unreal engine
<textmode>	asandari: you could use flash, either via the official compiler or haxe.
<textmode>	er, adsjlkdk*
<textmode>	you could do the js+canvas thing too, as mentioned earlier.
<textmode>	theres torque2d, love2d, pyglet. i think there is a unity2d.
<xordd>	oh you want to do web based games ?
<textmode>	you could go straight c, though thats only marginally more learnable than c++
<adsjlkdk>	textmode: yeah boot js is a n00b language
<adsjlkdk>	i want something extreme and hardcore
<textmode>	adsjlkdk: you are a noob.
<uberjar>	i recommend learning javascript and building a web based game.. you can make it work with both the web *and* mobile
<uberjar>	the double whammy
<textmode>	adsjlkdk: i get that you want to fly with the big boys but...you can't even crawl yet.
<xordd>	i kinda start to think that asdjlkdk is a troll lol
<textmode>	adsjlkdk: this shit takes *decades* to get good at.
<uberjar>	there's always asm.js
<adsjlkdk>	what about html5 for games
<textmode>	adsjlkdk: c++ is probably one of the most complicated and error-prone languages in general use today.
<uberjar>	^
<rcyr>	^
<adsjlkdk>	i think ill stick with c++ but ill keep js on my mind
<textmode>	adsjlkdk: you mean try to.
<xordd>	with c++ you are litteraly programming a computer. you are given a cpu and some memory and do wathever the fuck you want.
<textmode>	the book you are reading is probably fine. bare that in mind.
<uberjar>	it might be a good idea to just learn 3d modeling before you even try to learn a programming language if your goal is to develop console of pc games
<textmode>	in one channel i was in, there was a guy who liked to pose a quiz about c++. no one ever passed it. ever.
<adsjlkdk>	but i want 2d not 3d
<textmode>	not even close to passing it.
<textmode>	adsjlkdk: dos can do 2d.
<adsjlkdk>	im on windows
<adsjlkdk>	i mean linux
<textmode>	hell, i'd say 2d graphics under dos is f-king assembly is more newbie freindly than c++
<textmode>	in*
<xordd>	you want to do pixel art type stuff or 2d perspective kind of like limbo?
<textmode>	and its 2015. 2d is a camera setting.
<adsjlkdk>	what makes c++ so hard
<adsjlkdk>	pixel art
<textmode>	adsjlkdk: the fact that its fucking mental.
<uberjar>	why make a flappy bird game that won't run in the browser or on mobile
<uberjar>	you're just wasting your time when you could be raking in the big $$$ :)
<adsjlkdk>	good point
<adsjlkdk>	so are you saying i should learn js
<textmode>	adsjlkdk: c++ freqently questioned answers http://yosefk.com/c++fqa/
<adsjlkdk>	how should i learn it
<uberjar>	people are making some impressive shit with js these days
<uberjar>	especially on mobile
<textmode>	uberjar: not to mention webgl is coming.
<uberjar>	^
<uberjar>	it's only going to get better.. if you want to learn "web + mobile" as your environment then yes definitely javascript
<xordd>	web-vr is going to be a thing
<textmode>	there is increasingly projects and frameworks to support js-based applications, too.
<inphase>	adsjlkdk: i told you hours ago it was your responsibility to make sure you were reading the right pdf, when you kept insisting it didn't have the things in that i told you were in the book.  i guess you at least learned something from that.
<adsjlkdk>	yeah i did learn some stuff
<textmode>	inphase: you might be disappointed with that.
<uberjar>	https://www.youtube.com/watch?v=bv32cs_cmqo unreal 3 engine in firefox with asm.js
<inphase>	adsjlkdk: i was hoping you learned something about how to learn things.  :)
<adsjlkdk>	inphase: i think im goign to learn js instead
<adsjlkdk>	really stupid question : am i going to need to know html5 to make js games
<gedamo>	not very much of it
<xordd>	html is really easy
<uberjar>	no
<gedamo>	a basic page and the canvas
<xordd>	most of what you want is in the canvas anyway
<xordd>	literally just <canvas></canvas>
<adsjlkdk>	any pdf recommendations for js
<adsjlkdk>	or how should i learn itthanks
<gedamo>	adsjlkdk: "mary live-codes a javascript game from scratch" https://vimeo.com/105955605
<xordd>	i have not used it but some people have mentioned codeacademy
<uberjar>	adsjlkdk: i wasn't joking when i mentioned studying flappybird… familize yourself with that annoying little bird game.. then check out all of the open source clones of it on github.com
<adsjlkdk>	ok
<uberjar>	there are implementations of flappybird in js that are quite small in terms of lines of code
<gedamo>	adsjlkdk: https://simon.html5.org/dump/html5-canvas-cheat-sheet.html
<uberjar>	yea codeacadement doesn't suck
<pulock2016>	uaq and qiaaa and iiy seem to have some inter communication ...lol
<pulock2016>	time to go.....need to study for upsc ...bb...tc....laters ..also mca exams coming...laters
<o0elise0o>	https://play.google.com/store/books/details?id=0vwdbaaaqbaj
<o0elise0o>	yay new neal stephenson
<xordd>	i not a sci-fi guy but i've head that snowcrash is pretty good
<xordd>	it's about vr right?
<gedamo>	snowcrash is excellent
<xordd>	aren't they making a movie based on the book?
<o0elise0o>	snow crash involves vr, yes
<o0elise0o>	i dunno, but snow crash is so old tech has made it almost not at all sci-fi
<uberjar>	 o0elise0o have a torrent ?
<uberjar>	i preferred "the diamond age" over snow crash
<uberjar>	to be honest
<uberjar>	but they're both excellent
<o0elise0o>	even if i did i wouldn't share it here
<xordd>	is it about vr as well?
<uberjar>	=^o
<uberjar>	i'ts more about nanotech
<xordd>	i'm crazy about vr these days
<xordd>	these years*
<uberjar>	and 3d printing
<xordd>	oh cool
<o0elise0o>	yeah the diamond age is about nano tech and 3d printing
<xordd>	are those falling in the cyberpunk genre?
<uberjar>	definitely yea
<o0elise0o>	snow crash isn't really about vr though it does involve it
<uberjar>	it has alot of encryption stuff involved
<o0elise0o>	the characters do not spend a lot of time in vr
<xordd>	awesome
<xordd>	just to be sure is it snowcrash the one with the crypto or the diamond age ?
<o0elise0o>	cryptonomicon is the one with crypto
<o0elise0o>	hehe
<xordd>	oh thanks
<xordd>	i guess my reading list just grew
<o0elise0o>	the diamond age is about a poor girl who ends up with a book called "a young ladies illustrated primer" which is made of nano tech and ai
<o0elise0o>	the book takes the place of her family and raises her
<uberjar>	the diamond age does get into a bunch of crypto stuff though.. which she needs in order to deal with the ai stuff
<o0elise0o>	in the end she ends up being a princess of a large group of people
<uberjar>	it's in there, just not as much as cryptnomicon
<uberjar>	at least if i remember correctly it does
<uberjar>	also it deal with cryptocurrency
<xordd>	that sounds facinating
<o0elise0o>	i dunno, to me the story is about princess nell. :-d
<uberjar>	^
<uberjar>	yep
<uberjar>	in the diamond age digital cryptocurrency was mentioned as a driving force that eliminated the nation state by destroying their ability to collect taxes from citizens
<uberjar>	and this was written way before bitcoin was a thing
<xordd>	wtf
<o0elise0o>	cryptonomicon is about the creation of computers btw
<uberjar>	neil stephenson was on the ball
<uberjar>	ya
<bullhorn>	so im super noob and dont know where to star
<bullhorn>	t
<bullhorn>	python? c? arma3 sqf scripting? :x
<gedamo>	depends what your interests are
<o0elise0o>	yeah, snow crash was all future tech back in 94 but now if you read the strange way he describes things and translate it most of the stuff is real
<o0elise0o>	he didn't account for tech getting micro though
<xordd>	so what did he envision that haven't happend yet? cause i'm investing in that
<gedamo>	i don't think we have mind viruses yet :p
<uberjar>	xobano: imagine 3d printers that are so advanced they're more like "matter compilers" that can make whatever you want if you download the spec
<o0elise0o>	yeah the name sake of the book is still sci-fi
<uberjar>	gedamo:  i woudln't be too sure about that.. maybe you just haven't met enough politicans :)
<xordd>	that sounds like what kurzweil describres in the singularity is near
<xordd>	impregnating matter with intelligence
<o0elise0o>	'snow crash' is sold in the street(vr world) as a drug, but it's really a virus, and they call it 'snow crash' because what you see when you view the 'drug' looks like the snow on a dead tv
<xordd>	damn i hope it's not a spoiler
<o0elise0o>	knowing what snow crash is?
<bullhorn>	gedamo my interests are gaming and automation
<rumpledelf>	maybe bullhorn and adsjlkdk need to get together
<o0elise0o>	no, the first part of the book involves hiro learning that.
<xordd>	ahah right
<bullhorn>	and possibly more things that i dont even know im interested in
<o0elise0o>	the story isn't a myster novel
<gedamo>	this is what i want from nanotech https://en.wikipedia.org/wiki/utility_fog
<o0elise0o>	gedamo likes grey goo
<gedamo>	bullhorn: do you have any knowledge of programming?
<bullhorn>	gedamo: no. i did qbasic/pascal when i was 6 years old 2 decades ago, thats about all i ever done
<gedamo>	o0elise0o: utility fog is less likely to lead to grey goo than a universal assembler
<bullhorn>	i did some mirc scripting but.. not that i remember anything ;/
<gedamo>	bullhorn: you could start with an online course or tutorial
<o0elise0o>	bullhorn::qbasic does teach the basics of programming
<bullhorn>	i didnt expect anything else, but which one?
<o0elise0o>	other languages are more advanced so allow you to do things qbasic cant tho
<jackattack>	what should i read up on in order to write software like virtualbox?
<o0elise0o>	qbasic is sort of simular to plain c too
<uberjar>	jackattack:  ansi c or go
<uberjar>	jackattack: virtualbox is low-levels system programming
<jackattack>	ah
<uberjar>	jackattack: low level doesn't mean easy.. it means closer to the metal
<gedamo>	bullhorn: python is often recommended for beginners
<bullhorn>	i think i did a crash course in assembler back in 8th grade but obviously dont remember anything at all
<uberjar>	jackattack: i recommend go
<bullhorn>	yeah gedamo thats what i heard. do you think that would be a good place to start ?
<uberjar>	jackattack: https://golang.org/
<o0elise0o>	ibuprofen is actually useful
<o0elise0o>	i never knew that before because it doesnt work on headaches
<jackattack>	uberjar: thanks
<gedamo>	bullhorn: you might try this one https://www.udacity.com/course/intro-to-computer-science--cs101?utm_medium=referral&utm_campaign=api
<bullhorn>	ill take a look, thanks gedamo
<gedamo>	this site collects courses from all over https://www.class-central.com/
<bullhorn>	thanks, bookmarked
<gedamo>	i'm currently doing this course https://www.coursera.org/course/nand2tetris1
<xordd>	i'm enrolled as well, i love the concept
<miniman10000>	do you guys know the default timer resolutions of windows/mac/linux? seems windows has 15 ms accuracy
<miniman10000>	alright looks like 1 ms on i386
<miniman10000>	so linux that is lol
<bullhorn>	how does that work gedamo? is there an actual teacher? is it like over google hangouts or something?
<kahrl>	miniman10000: i think on linux it's 1/config_hz seconds, but don't quote me on that
<gedamo>	bullhorn: videos and quizzes usually
<gedamo>	there are also forums
<o0elise0o>	http://science.slashdot.org/story/15/05/10/0553244/messenger-data-says-mercurys-magnetic-past-goes-back-billions-of-years
<wei2912>	myrl-chan: send you a memo.
<wei2912>	sent*
<myrl-chan>	wei2912: yeah, thanks.
<lf94>	guys, i highly recommend reading this if you want to fix your javascript brains: https://developer.mozilla.org/en-us/docs/web/javascript/a_re-introduction_to_javascript
<lf94>	i feel like i know javascript again.
<myrl-chan>	wei2912: i like #1 and #4.
<kenndel>	hey guys im geting a new laptop for when i transfer from my cc to my 4 year college for a cs degree. mostly java/c++ i think. i know i want a good processor for compiling but does the amount or cores matter? i5 vs i7 a big deal? do i care about graphics?
<wei2912>	myrl-chan: any suggestions for #2 and #4? #2 seems a bit advanced for them
<wei2912>	but well, i did mention that it would be tough
<znoosey>	lf94: javascript patterns is a very good book on javascript, it will show you how to actualy implement stuff using it
<wei2912>	lf94: ooh
<znoosey>	kenndel: no, good screen is what matters for programming
<kunji>	umm, javascript has always been like that, it was my first programming language... lol, i worked with no ide and there is of course no compiler, it was a big pain.
<wei2912>	kenndel: speed of compiling won't vary that much
<vdamewood>	kenndel: i5 vs i7 is a medium-size deal (i personally stuck with i7 for my programming systems), number of cores can mean more compilation jobs at once or more virtual machines running at once if you have virtualization, graphics are unimportant unless you're developing with opengl.
<myrl-chan>	wei2912: i like #4 the most. #1 is solvable in other ways, and some people might catch that and avoid looping.
<kenndel>	im gonna get a macbook pro so it will have a pretty solid screen. i'm just looking at the different processor options and wondering if i should get the 13 for lighter or wait for the new 15 for a beefier processor and gfx card
<xordd>	kenndel, i don't think performances requirements are high for learning purpose
<kenndel>	i dont think i need a gfx card really
<myrl-chan>	wei2912: which is both a good and a bad thing.
<vdamewood>	kenndel: err, i stick, not "i stuck".
<wei2912>	myrl-chan: #2 has 2 solutions as well, but the 2nd solution is math-intensive
<kunji>	kenndel: unless you're compiling something really huge... which you won't have to for cs unless you get involved with some big open source projects on the side or something, and please don't get a mac
<myrl-chan>	wei2912: yeah.
<monroe>	s
<kenndel>	i love coding on my mac :)
<vdamewood>	kenndel: if you're going with a macbook pro, the lowest-end model is wonderful. the bigger stuff is only important if you're virtualizing.
<xordd>	kennedel: screen quality is cool but get yourself a second screen, screen realestate is what matters
<kenndel>	i have a 2010 mbp 15 in im just upgrading
<wei2912>	myrl-chan: same goes for #3, though the 2nd solution is less mathy
<wei2912>	myrl-chan: any suggestions for tasks? i have 13 students :p
<kunji>	kenndel: i would say there's something wrong with you then... xcode... but anyway, we all have our own opinions on this, it's a religious war :p
<kenndel>	i have a beefy desktop at home this is just for at school
<myrl-chan>	wei2912: i'm pretty bad at teaching.
<wei2912>	myrl-chan: another task should be enough
<kenndel>	i vm into linux usually
<vdamewood>	kenndel: then get a beefier system.
<wei2912>	myrl-chan: and it should not require knowledge of arrays or objects
<kenndel>	i have a beefy gaming computer at home that im on now this would just be for at school etc
<wei2912>	vdamewood: why? :p
<o0elise0o>	why spend more for less and by an apple?
<vdamewood>	kenndel: well, will you be running a linux vm on the system you're asking about?
<o0elise0o>	buy*
<kenndel>	yea probably
<wei2912>	vdamewood: i'd think that a basic laptop with a decent screen size should be adequate
<kunji>	my question: how do you make r use only 1 thread when using it with openblas?  my task in disk i/o bound so multiple threads all try to grab their own data which makes the task take much longer.
<kunji>	*is
<kenndel>	vdamewood, because a macbook pro is a luxory and my scholarship program is giving me some extra money for a laptop
<kenndel>	so im going big
<vdamewood>	wei2912: well, i have an 4-core system with 8 gigs of memory, and my system slows down if i run more than 2 vms.
<wei2912>	vdamewood: :p
<o0elise0o>	but then why get an apple
<wei2912>	vdamewood: i should try that on my desktop
<kenndel>	why get an apple?
<znoosey>	i have 4 core with 32gb of memory, and it quite happily runs 6 vm's right now
<kenndel>	on a laptop?
<o0elise0o>	yeah why not get a better laptop
<znoosey>	no, i don't like laptios
<znoosey>	laptops*
<kunji>	kenndel: umm yeah, there are some nicer things out there
<kenndel>	half the people here are talking about desktops and half about laptops
<vdamewood>	ugh, such trolling.
<kenndel>	haha
<myrl-chan>	wei2912: also, haskell-chan. http://puu.sh/hhwgu.png
<znoosey>	kenndel: did you really go on irc to get a clear answer on something?
<vdamewood>	kenndel: if it helps, i'm chatting with you using a mbp myself.
<kunji>	kenndel: for both, mac is the overpriced decent option, but if you want the best, it's not the one for either laptops or desktops
<wei2912>	myrl-chan: wow
<kenndel>	haha
<wei2912>	myrl-chan: oh wait, that isn't ms paint. still impressive
<myrl-chan>	wei2912: thanks.
<vdamewood>	also, feel free to ignore the trolls.
<myrl-chan>	wei2912: i gave up on trying to do it on ms paint.
<ovrh>	good morning
<kenndel>	i really just wanted to clear up how important duel vs quad cores were
<wei2912>	kenndel: very
<o0elise0o>	the difference is a duel core can do two things at once and a quad core can do four things at once
<vdamewood>	kenndel: if virtualizing, quad cores are very important. if not virtualizing, they are mostly important.
<o0elise0o>	assuming the os knows that
<miniman10000>	kenndel, you tryina tellme theres 100% more importance!?
<wei2912>	ooh, a duel core
<myrl-chan>	o0elise0o: the difference is that duel core can fight each other.
<inphase>	and unfortunately the duel cores keep trying to kill each other.
<wei2912>	^^
<wei2912>	lol
<miniman10000>	lol
<o0elise0o>	haha myrl-chan
<wei2912>	kenndel: let us know what laptop you choose to purchase
<wei2912>	myrl-chan: hmm, do you know of any websites with simple coding exercises?
<o0elise0o>	vdamewood::i wasnt trolling btw
<manicpanic>	when is the best time to use json web tokens over server and cookies sessions ?
<o0elise0o>	its true that apple charges more for their hardware then the same stuff from other ppl
<miniman10000>	its hard to say these days
<miniman10000>	it used to be hands down a massive rip off but it doesnt seem so bad anymore
<myrl-chan>	wei2912: nope. i didn't do algorithms until like 2 or 3 years ago, and i immediately went to middle-tier questions.
<o0elise0o>	the iphone is a distinct rip off
<wei2912>	myrl-chan: same... lol
<vdamewood>	o0elise0o: all of what i've read on the subject says that apple is usually either cheaper than a comparable system, or about the same.
<miniman10000>	to add to that
<o0elise0o>	and look at the knew digital watch they have for like 10k$
<miniman10000>	almost all flagship phones are a rip off
<vdamewood>	o0elise0o: i've also noticed people to make comparisons against apple's stuff when the comparison wasn't accurate.
<kenndel>	the iwatch has exactly one very very big pro
<miniman10000>	if it costs more than the nexus 5 then your not getting good hardware per dollar.
<kenndel>	it will making cheating on tests insanely easy, if your into that sort of thing
<kenndel>	like when texting first came out and teachers didnt know to look for it
<o0elise0o>	im 33
<o0elise0o>	i havent seen a test in 15 years
<miniman10000>	it doesnt make it much easier thancheating on your phone... im sure teachers arn't oblivious enough to know something like the applewatch
<miniman10000>	to not know*
<kenndel>	spin the face to your inner wrist and its just another watch
<kenndel>	then get someone to text you formulas and stuff
<inphase>	you know people used to just write on their wrist, right?
<inphase>	they have this technology called a "pen".
<o0elise0o>	i doubt i'd ever wear a watch
<inphase>	you can get quite a lot of them for $10,000.
<textmode>	or fingernails, thats a fun one too.
<mwizard>	why go with these obsolete cheating methods, when you can just use transcranial magnetic stimulation and synthesize images on your retina directly?
<o0elise0o>	even if the iwatch turned into a 'must have'
<kenndel>	did you guys see on reddit that jewlers will make your watch the 10k gold watch for $400?
<o0elise0o>	hehe.
<mwizard>	or use microwave auditory effect, as an alternative
<o0elise0o>	oh, the reason it costs $10k is cuz it's gold?
<inphase>	no.
<o0elise0o>	jesus, do this idiot watches have phone home tech in them?
<inphase>	it just happens to have gold, as well as costing $10k.
<o0elise0o>	wow.
<kenndel>	they all are the same watch
<kenndel>	slightly different shape
<kenndel>	no new features
<kenndel>	you are buying the band
<inphase>	it appears there's $800 worth of gold in the watch.
<o0elise0o>	so it's a crappy over priced watch that drains its battery doing things that arent telling time?
<vdamewood>	if i pay $10k for a band, they better play a set of at least 5 songs.
<kenndel>	so what do you guys do?
<vdamewood>	i'm a programmer.
<o0elise0o>	not buy watches
<xordd>	lol
<o0elise0o>	does the iwatch come in a tiny girl version?
<kenndel>	im waiting for the ipendant to come out
<kenndel>	more of a necklace guy
<xordd>	i believe so
<wei2912>	:p
<o0elise0o>	if they had a girl version and it played mp3's i might like it
<o0elise0o>	for $50
<o0elise0o>	i heard you need an iphone too for the iwatch to be more then just an extremely over priced digital watch
<vdamewood>	what if it *only* played mp3's (and other audio)
<vdamewood>	?
<o0elise0o>	sounds good to me
<o0elise0o>	a musical bracelet!
<kunji>	vdamewood: that's hilarious, dig deeper into those prices of what the components would cost you, since those here would of course build our own systems, crap like dell, hp, and gateway are also overpriced.
<vdamewood>	so, ipod shuffle.
<o0elise0o>	i dont like ipod stuff
<lf94>	ok guys.
<lf94>	neovim vs emacs.
<o0elise0o>	they make you have to download itunes
<vdamewood>	i didn't have to download itunes for my ipod.
<vdamewood>	... (it was included with the computer i already had.)
<kunji>	https://xkcd.com/378/
<lf94>	has anyone ever tried arbex with mp3s and ipods?
<o0elise0o>	i was going to say that, you have an apple so it was probably already installed
<o0elise0o>	itunes is horrible tho
<vdamewood>	o0elise0o: i disagree. i rather like it as an audio player.
<pyon>	low-level hackers: what's the most efficient way to iterate the bits of a uintptr_t?
<o0elise0o>	er
<o0elise0o>	you use itunes to /play/ music?
<pyon>	using a mask that selects the current bit, and then doing "mask <<= 1" to move on to the next bit?
<vdamewood>	o0elise0o: yes. that's what it was originally designed for.
<vdamewood>	o0elise0o: and it has loads of nice features for doing just that.
<o0elise0o>	i didnt think it actually played stuff
<o0elise0o>	i only used it when i had an ipod touch but it was pretty insanely annoying that you can only sync a whole library
<o0elise0o>	to add one new song is like backing up your entire library
<vdamewood>	o0elise0o: there's a checkbox to sync a subset of your library, at least in my copy.
<o0elise0o>	this was like 4 years ago, and people told me you could, but i spent days trying to figure out how
<o0elise0o>	and i am not that dumb
<vdamewood>	o0elise0o: and when i sync, it doesn't copy files that already have been copied, though it does transfer metadata (such as play count) for files on both devices.
<o0elise0o>	all i know is adding a few knew songs to a regular mp3 player or an android takes about 3 seconds but doing it on my ipod touch was so annoying i stopped trying
<o0elise0o>	it such a hastle apple finally got me to pay for music :-(
<o0elise0o>	it was easier to buy it over wifi on the device then to transfer it
<vdamewood>	we've had very different experiences, it seems.
<o0elise0o>	i guess
<o0elise0o>	apple also ripped me off too
<kunji>	drag and drop yo, they're files, apple and their stupid drm...
<o0elise0o>	turns out 'buy' means 'rent until you delete'
<vdamewood>	kunji: apple doesn't drm music. they haven't for years.
<kunji>	vdamewood: purchased music
<o0elise0o>	vdamewood::no but at the time they didnt let me re-download stuff unless i paid again
<o0elise0o>	so they werent even selling me music they were renting it
<miniman10000>	lol
<miniman10000>	this is fricken rediculous
<vdamewood>	o0elise0o: i've never had a problem redownloading a song.
<miniman10000>	i can only assume mac has 1 ms accuracy because i can not find a person who states mac's timer accuracy
<kunji>	o0elise0o: well yes, those are the terms, but they did let me redownload and should have for you as well, the process is not obvious though.
<kenndel>	guys is you get the mac pro with all the options it is over $10k
<kunji>	o0elise0o: that is, you don't own it, but you have the right to listen to it and that includes downloading it again
<o0elise0o>	using the ipod touch over wifi i was not able to redownload previously purchased stuff for free
<disconsented>	if you're gona spend 10k on a laptop you might as well go for a falcon northwest one
<o0elise0o>	trust me, i paid for the same song twice because everyone insisted it wouldnt charge me again
<vdamewood>	kenndel: all of the opitons? i maxed out at $3500 or so.
<kenndel>	not macbook
<kenndel>	mac pro
<kenndel>	its the black circle thing
<vdamewood>	kenndel: oh. yeah.
<vdamewood>	kenndel: at that point, you're buying something with the power of a server.
<kenndel>	in a weird little trash can shaped container
<kunji>	o0elise0o: you should be able to redownload your entire existing library, if you're charged again it's in error and you should have called them and complained.
<vdamewood>	kenndel: did you make sure to get 3 displays for it?
<kenndel>	i only got one actually, thats a problem
<rumpledelf>	i may have to get a new mbp if i change jobs, bleh
<o0elise0o>	i didnt have a phone and i dont know how to find the phone number to complain to
<vdamewood>	rumpledelf: what's wrong with the one you have now? company property?
<rumpledelf>	vdamewood: yup
<kenndel>	i wish you guys would learn to love the macbooks they really are delightful
<o0elise0o>	i dont see it
<disconsented>	they're great for holding windows open
<o0elise0o>	the touchpad itself is annoying to me
<vdamewood>	rumpledelf: i like to keep my company property separate from my personal property just so i don't get attached.
<rumpledelf>	touchpad is awesome, is what convinced me to switch to mac
<rumpledelf>	vdamewood: i'm not bringing a personal laptop to work every day
<o0elise0o>	i rely on the windows style touchpad gestures
<vdamewood>	my friend bought me a mouse that i still don't use very much because the touch pad is so good.
<rumpledelf>	if it comes to it i'll just buy a new one, they don't take long to set up
<o0elise0o>	the macs ive tried at bestbuy like dont even have touchpad features
<rumpledelf>	i say i bought my imac just for the touchpad
<kenndel>	i like my desktop i built at home im speaking only to the actual laptops
<vdamewood>	rumpledelf: i can't really blame you for having your work/personal boundary either.
<rumpledelf>	oh, it blurs severely
<rumpledelf>	i go to a lot of stuff after work and take the lappy along
<vdamewood>	rumpledelf: oh.
<rumpledelf>	had to upgrade the os for one of them, which then broke some of the stuff i use for work >.<
<kunji>	disconsented: "they're great for holding windows open"  what do you mean?
<vdamewood>	i'm rather excited. a friend of mine asked me to program a system to control his solar panels.
<disconsented>	kunji: http://i.imgur.com/wjwrfsf.png
<disconsented>	it was a joke
<o0elise0o>	id do that
<o0elise0o>	hehe.
<kunji>	ah, i hadn't seen the image before.  ^_^, good ol aluminum, it actually is ok for that.
<vdamewood>	so, once this is done i'll have a portfolio project involving low-level hardware access, probably some sort of web api, and a mobile app.
<o0elise0o>	do the macbooks have screws to open them up yet?
<rumpledelf>	i really need to work on my portfolio, sigh
<vdamewood>	o0elise0o: when did they ever stop having them?
<kunji>	mere mortals are not to have access to the contents of the machine!
<kunji>	:p
<o0elise0o>	i just assumed they were like all the other apple stuff ive seen and are anti-hobbyist
<vdamewood>	when i bought my macbook pro, i replaced the hard drive and ram.
<rumpledelf>	some of us actually don't have any urge to tinker :p
<kunji>	rumpledelf:sometimes practical things must be done (e.g. new battery)
<znoosey>	i love buying pc's fully assembled and then just throw it away when it isn't good enough anymore >.<
<rumpledelf>	i'd take it back and get someone else to do that ...
<disconsented>	laptops in a nutshell
<kunji>	rumpledelf:that's just silly, it's a trivial task
<vdamewood>	apple seems to have a distinction between products for power users, and 'normal' users. macbook pro, power user... macbook air, normal.
<rumpledelf>	kunji: then someone else can do it trivially
<disconsented>	power user is debatable
<vdamewood>	though, in recent years, they have been slipping away from power users, at least for hardware.
<protist>	apple makes nice stuff (hardware wise)...but then they jack the price up 2 fold
<protist>	additionally, i prefer linux
<protist>	ios wont even let you change window decorations
<protist>	screw that
<o0elise0o>	wow really?
<o0elise0o>	even windows lets you do that
<rumpledelf>	i suspect i'm apple's main demographic :|
<vdamewood>	rumpledelf: people who have better things to do than have a box of spare parts?
<o0elise0o>	someone not actually into computers but likes to do stuff computers enable?
<cluelessperson>	rumpledelf,  asus zen book,  looks as nice as an air, but like 1/3rd the cost and double the power.
<rumpledelf>	vdamewood: something like that
<rumpledelf>	cluelessperson: does it run ios?
<cluelessperson>	rumpledelf, fuck no
<rumpledelf>	not much use then is it
<disconsented>	lol
<disconsented>	that was funny
<znoosey>	cluelessperson: here they actually cost the same...
<znoosey>	cluelessperson: actually, the asus one seems to be more expensive
<cluelessperson>	znoosey, at coming out, the air i5 cost like 1500, the zenbook like 700
<cluelessperson>	zenbook i7 at that
<o0elise0o>	i just want a laptop with a touchpad screen you can convert to a tablet and doesnt involve the keyboard being exposed
<o0elise0o>	i dont understand why all these laptop convertibles leave the keyboard keys handing out the back so when you grab it you're pressing keys
<znoosey>	the cheapest zenbook i can find here is 1336 usd, and the cheapest air: 1304 usd
<znoosey>	the zenbook does have 8gb ram vs 4gb for the air though
<disconsented>	what the heck is a 'touchpad screen'?
<disconsented>	+
<aidanh>	it's a screen made out of a giant touchpad; it has to be entirely opaque, of course
<disconsented>	ah that makes sense
<hotcoder>	question for you guys
<o0elise0o>	was that serious question?
<disconsented>	yes
<hotcoder>	so i want to parse a webpage of which to access, i need to login
<disconsented>	unless you're referring to a touch screen i don't have a clue what you where talking about
<o0elise0o>	http://www.dell.com/us/p/xps-12-9q33/pd
<rumpledelf>	touch screen laptops are cool
<hotcoder>	how do i do it? can i log into the webpage then use the user agent in my program?
<rumpledelf>	i had to buy a laptop at short notice earlier this year, the only one i could find that fit the spec was an air. so i bought it
<aidanh>	i've yet to see a good use for touch screens
<hotcoder>	how to programmatically parse a webpage only accessible through login
<znoosey>	hotcoder: find the form you need to fill in on the page, then do a post request with the data filled in
<o0elise0o>	touch laptops that don't convert make no sense to me
<hotcoder>	znoosey, ah okay. so i login programmatically
<vdamewood>	hotcoder: figure out how the login system works, then send the appropriate authentication headers or cookies.
<znoosey>	hotcoder: yes
<hotcoder>	cool
<hotcoder>	thanks
<hotcoder>	i'll just use htmluser
<znoosey>	i so need to make a macro for answering these things
<znoosey>	it is the third time this week this question has been asked
<disconsented>	why not a tablet like a surface pro o0elise0o?
<znoosey>	just in this channel, and just in the time i'm here
<rumpledelf>	if i need my own laptop i'll probably get a secondhand mbp and steal that air ... its so small and cute
<hotcoder>	znoosey, haha. are you from ##java?
<znoosey>	hotcoder: no
<hotcoder>	you sure act like it. thanks for the help though
<bullhorn>	gedamo that website is cool
<znoosey>	they get a lot of the same questions asked there too?
<bullhorn>	those short videos and quizzes
<bullhorn>	im starting it now :o
<o0elise0o>	disconsented::cuz the keyboard isnt permanently attached?
<hotcoder>	znoosey, dunno. but they sure complain a lot
<disconsented>	and thats an issue why?
<znoosey>	hotcoder: i wans't complaining, i was stating a fact
<znoosey>	wasn't*
<hotcoder>	ah okay then :)
<hotcoder>	hmm
<hotcoder>	im at a dilemma
<hotcoder>	should i buy a tablet or should i buy a linux system
<rumpledelf>	have had a few people in here today ask how to start programming
<hotcoder>	adjfdkjfsakjf being one of them
<gedamo>	bullhorn: good luck :)
<hotcoder>	he's too impatient i dont think he's fit for this field
<o0elise0o>	disconsented::i want a table/laptop combo so i can only care one thing
<aidanh>	rumpledelf: i assume you told them to open a text editor?
<o0elise0o>	thats why
<rumpledelf>	aidanh: someone else told them to get a book
<disconsented>	surfare pro and a type/power cover
<rumpledelf>	i have kids on weekends so i'm in and out all weekend ... intresting seeing a conversation span an entire day
<znoosey>	books are awesome!
<znoosey>	i just bought programming books for about $500 >_>
<hotcoder>	ah
<hotcoder>	i just watch videos and learn from tha
<hotcoder>	that*
<aidanh>	i need to get a new bookshelf... it's getting cramped
<hotcoder>	java baby
<znoosey>	videos and blog posts are good for learning, but not for giving you a good foundation, as they try to make it short so they skip things
<kunji>	buy anything, then install linux
<aidanh>	actually, my old house started to tip over due to having more than a tonne of books in one corner
<znoosey>	aidanh: lol
<kunji>	lol, o.o
<rumpledelf>	i need to hit some calendar app and schedule my life down to the hour i think. make some time, tell people to leave me the hell alone and get stuff done
<rumpledelf>	not really hard when you only have one evening free a week
<hotcoder>	yeah znoosey i understand what you mean though
<znoosey>	rumpledelf: you should read: getting things done
<rumpledelf>	znoosey: you still need the time to start with unfortunately
<kunji>	rumpledelf: well... you know leaving this chat is probably the place to start... we'll miss you.
<znoosey>	rumpledelf: audio book, for when doing other things
<hotcoder>	read do hard things - chuck norris
<znoosey>	rumpledelf: that is how i got through it, god that thing was long...
<rumpledelf>	heh, its the weekend. that's dead time
<o0elise0o>	is it weird that the only books i own are word war z and the zombie survival guide?
<znoosey>	o0elise0o: we wouldn't expect anything else from you!
<rumpledelf>	audiobooks would probably work on the train/bus
<rumpledelf>	12 hours a week right there
<znoosey>	rumpledelf: they do, and with audacity they are easy to get too
<vdamewood>	sleepy time
<o0elise0o>	audacity?
<bullhorn>	audible maybe
<o0elise0o>	does audacity have text to speech now?
<bullhorn>	audacity is a free audio recording/editing software
<znoosey>	o0elise0o: uhm... audible*
<o0elise0o>	oh, i dunno what that is
<znoosey>	i'm still tired
<znoosey>	o0elise0o: it is amazons audio book store
<liuwenhao>	speaking of audio books, anyone know of some must listens for programming books? most of the stuff i would listen to is only available in book form (presumably because of the code snippets0
<rumpledelf>	that's the catch, i have like zero books on my reading list
<aidanh>	damn bouncer...
<znoosey>	rumpledelf: getting things done!
<rumpledelf>	i have a bunch of blog posts to write and trains are not the place to do that
<o0elise0o>	why not?
<aidanh>	any suggestions on a better way to implement split? http://sprunge.us/gdvx?hs
<rumpledelf>	rather hard to do much of anything with one hand, standing up
<o0elise0o>	oh
<o0elise0o>	when you said train i thought of a real train with only seats and stuff
<rumpledelf>	yes, a real train
<znoosey>	lol
<o0elise0o>	you mean like a t not the kind of train you have to have a seat to ride on
<rumpledelf>	i mean a completely ordinary train, i don't know how different trains are between countries
<o0elise0o>	some are like subway trains where you can stand up and you pay for access to the train and some only sell seats and you pay for a seat
<o0elise0o>	anyways, i just had assumed you meant the sit down kind
<rumpledelf>	well they *have* seats apparently
<o0elise0o>	yeah
<rumpledelf>	still haven't worked out exactly how early/late to get up to get one with seats
<znoosey>	rumpledelf: too early
<rumpledelf>	bus is easier to get a seat, you just have to be one of hte first 40 people on the bus
<znoosey>	rumpledelf: or too late...
<rumpledelf>	znoosey: that's the conclusion i am starting to draw to after a couple weeks trying different trains/buses >.<
<rumpledelf>	my bus to work only starts running at 7:30 so no point leaving home before 7
<znoosey>	rumpledelf: you should do what i have done, move 15 min walking distance from work :p
<rumpledelf>	can't just show up to work at 10 now i have to leave at 5. so i've sort of resigned myself to a 1+ hour commute at the height of peak, never getting to sit down :(
<rumpledelf>	my work is not close to anywhere, and i can't afford to live close to it
<znoosey>	rumpledelf: ah, that sucks
<rumpledelf>	its one of the things on my list of reasons to change jobs
<rumpledelf>	its also the primary reason i decline idiots wanting lunchtime affairs ... hmmm
<o0elise0o>	uh?
<rumpledelf>	you don't get propositioned by idiots
<rumpledelf>	?
<znoosey>	i have so many things i want/need to do
<znoosey>	think i'll do what rumpledelf proposed and make a schedule of when to do things
<rumpledelf>	dont forget to get some actual free time too :)
<znoosey>	that way i won't always feel like i'm not doing what i'm supposed to be doing
<rumpledelf>	i tried to schedule something last week at 9pm but they turned up late and i was on the verge of falling asleep ... had been a 14 hour day for me and i had no energy left
<znoosey>	rumpledelf: what does one do at this "free time"?
<rumpledelf>	top of my list at the moment is some blog entries
<znoosey>	i want to start blogging... been thinking about it for years
<znoosey>	got like 10 blog posts that i have started writing...
<rumpledelf>	i just need somewhere to document 'interesting' stuff i've done at work in the last year
<o0elise0o>	i've never figured out what the point of blogging was
<rumpledelf>	well its that or put it in an internal wiki where nobody will see it
<znoosey>	o0elise0o: to write stuff down so you don't forget it, and maybe help some others who are in the same position
<znoosey>	heh, my blog has 0 entires!
<rumpledelf>	so does mine
<znoosey>	and an image which takes ages to load...
<znoosey>	and i work as a web programmer... i should be ashamed!
<znoosey>	at least the colors are all off
<textmode>	znoosey: i have blog posts, but no blog.
<textmode>	how do i count that?
<znoosey>	textmode: negate the number of blogposts
<hentai-pyon>	morning.
<reynir>	hi pyon
<sc0rpide>	hello guys
<pyon>	reynir: hi.
<reynir>	oh heh
<reynir>	so hentai-pyon is not you?
<pyon>	yes, it is me.
<reynir>	^^
<pyon>	anyway, i have a super-primitive garbage collector, and i wondered if there was some way to make it prettier before working on generalizing it.
<pyon>	https://github.com/eduardoleon/pyon/blob/master/plum/memory.rs
<pyon>	s/generalizing it/making it more sophisticated/
<myrl-chan>	i fucking give up. i'll try google code jam next year.
<znoosey>	pyon: you could write it in a language that uses readable names for stuff!
<pyon>	lol
<rumpledelf>	oh goddammit i don't have any evenings free this week >.<
<pyon>	znoosey: my code isn't particularly idiomatic rust.
<ninjapenguin>	rust uses double colon scope operator? i already hate it.
<pyon>	ninjapenguin: it's for bringing stuff from modules. it isn't anywhere as crazy as c++'s double colon.
<pyon>	myrl-chan: why are you giving up?
<ninjapenguin>	i still feel repulsed by it. :<
<pyon>	well, i don't care about concrete syntax right now.
<myrl-chan>	pyon: i'm going to continue drawing haskell-chan.
<pyon>	this code *really* needs to be as efficient as possible.
<pyon>	myrl-chan: ah!
<ezekielnoob>	someone is selling a 2nd hand  dell up2414q for $230, should i go after it?
<znoosey>	anyone know how i can make my image smaller (in the sense of less number of bytes)? :( i don't do well with this visual stuff
<pleiosaur>	ninjapenguin: rust's ugly syntax keeps the hipsters away, i *love* it
<pyon>	pleiosaur: oh, so you're awake!
<pleiosaur>	sadly, yes
<pyon>	do you have any idea how to make my "adjust" function more idiomatic, without sacrificing efficiency?
<pyon>	https://github.com/eduardoleon/pyon/blob/master/plum/memory.rs
<pyon>	right now, it looks like transliterated c.
<pyon>	(that's because it's actually transliterated c.)
<pleiosaur>	let me see
<znoosey>	heh, i had an orange spot on my screen just where it was some extra space between "let   ptr"
<znoosey>	took me a while to see it was not part of the code >_>
<pyon>	"compact" itself doesn't annoy me much, because i already know it can't be done more idiomatically without sacrificing efficiency. but w.r.t. "adjust", i still have this lingering feeling that it can be done more idiomatically.
<pleiosaur>	pyon: you can use debug_assert! there instead of assert! if you want to be able to compile that check out in release builds
<pyon>	myrl-chan: mangafox.me has been down for quite a while already. :-(
<myrl-chan>	pyon: me too
<pyon>	pleiosaur: oh, makes sense.
<pyon>	what i would really like to do is use an iterator to traverse the cells of each object. (each cell is a usize. an object consists of a single tag cell, followed by a variable number of data cells. the number of data cells is part of the information contained in the tag cell.)
<pyon>	"traverse the cells" --> in "adjust"
<pleiosaur>	pyon: isize? really?
<pyon>	pleiosaur: the offset method takes an isize argument.
<pyon>	pleiosaur: i am extremely annoyed by this. i wish it took a usize.
<pleiosaur>	lolwut
<pyon>	pleiosaur: but i can't change rust's standard library.
<pyon>	or, rather, i could, but that's outside of the scope of what i'm trying to do.
<pyon>	file:///usr/local/share/doc/rust/html/std/primitive.pointer.html#method.offset
<pyon>	ammit
<pyon>	ammit
<pyon>	dammit*
<pyon>	http://doc.rust-lang.org/1.0.0-beta.4/std/primitive.pointer.html#method.offset
<pleiosaur>	pyon: i guess it's so that you can do a negative offset if you want?
<pyon>	in that case, i'd just take a pointer to the true beginning of the object, and still only use positive offsets.
<pyon>	anyway, what annoys me is the "adjust" method.
<pyon>	there has to be some way to traverse the fields of an object, using an iterator, rather than .offset(1) all the time.
<pleiosaur>	let me think
<textmode>	which language?
<pleiosaur>	textmode: this is rust
<textmode>	ah, then i don't know.
<textmode>	is it still under active development?
<pyon>	yes.
<pyon>	well.
<pyon>	it isn't being updated crazily as before.
<pleiosaur>	it's still pretty rough
<pyon>	it's stable enough for what i need.
<pleiosaur>	1.0 is coming out, but it's still a ways off from being "done"
<pyon>	i'm implementing a runtime for another language, and any improvement on c and c++ is greatly appreciated.
<pleiosaur>	in two years i think it'll be a serious fuckin contender, for now it's just the plucky up-and-comer
<textmode>	its that cycle time that is the bitch.
<textmode>	i mean, two years doesnt' really help me with anything i'm doing right now.
<ninjapenguin>	pleiosaur: hah.
<myrl-chan>	pyon: some colors added!
<myrl-chan>	http://puu.sh/hi1eh.png
<pyon>	myrl-chan: checking. :-)
<pyon>	purple? :-o
<myrl-chan>	yeah, i like purple.
<textmode>	oh wow, painttool sai. i haven't seen that thing in years.
<pyon>	lol
<pleiosaur>	myrl-chan: loving the hairpin
<myrl-chan>	pleiosaur: ikr?
<pleiosaur>	textmode: you can use it quite seriously now, but you have to be ready to put up with early-adopter pain like thin tooling
<pleiosaur>	myrl-chan: i think you need another little leg on the hairpin to make it match the logo precisely
<myrl-chan>	pleiosaur: it's the bind operator though. :p
<pleiosaur>	oh, i thought it was https://en.wikipedia.org/wiki/haskell_%28programming_language%29#/media/file:haskell-logo.svg :p
<pyon>	(>>=) :: monad m => m a -> (a -> m b) -> m b
<textmode>	pleiosaur: so i can toss it on the pile of languages i already use that have no tooling beyond syntax highlighting?
<myrl-chan>	or if you want, it's the right shift assignment operator.
<pleiosaur>	pyon: if you were willing to store your data cells behind a layer of indirection then you could transmute to vec<(usize, vec<usize>)> and make use of the iterators there
<pleiosaur>	pyon: but i have no idea whether you want that indirection
<pyon>	pleiosaur: but i'm not willing to o that.
<myrl-chan>	welp, i'm changing the saturation.
<pyon>	pleiosaur: the focus of my implementation is *optimizing away* much of the indirection that arises from naïvely implementing functional languages.
<yorwos>	is there any way to reinstall postgresql but with reseting all users/databases/passwords/etc ?
<pleiosaur>	textmode: hey it's got, like, an emacs mode! and a half-complete eclipse plugin!
<crawfs>	heh
<pyon>	imo, rust's borrow checker eliminates the need for much of the tooling that is needed when writing c and c++.
<textmode>	yorwos: you mean "without"?
<crawfs>	i'm an idiot, i was trying to use % to check how many times a value can be divided by anotyher static value
<crawfs>	not sure where that came from
<pyon>	crawfs: hehe
<textmode>	lol
<crawfs>	i was wondering why my values were so far out of a reasonable range
<myrl-chan>	changed the colors to match haskerru,.
<pyon>	myrl-chan: :-o
<pyon>	pleiosaur: ah, i think i found where the solution could be: some_mut_slice.split_at_mut().
<myrl-chan>	sounding like a weeab makes me want to have cancer.
<myrl-chan>	it's harder for me to speak normally now. <.,
<myrl-chan>	<.<
<vendu>	hello world :)
<vendu>	what do you guys think of this as a birthday present for a 4-year-old son of my sister? =)
<vendu>	http://vendu.twodots.nl/pix/sword.png :)
<vendu>	i did that around 1999 or 2000 or so =)
<pleiosaur>	vendu: are you going to 3d print it?
<vendu>	pleiosaur, hehe i guess they'll do 3d, but i should have the povray source around somewhere =)
<vendu>	er, do 2d
<vendu>	:)
<vendu>	just print it with a regular printer :)
<myrl-chan>	welp, i'm going to steal the eye from someone else.
<vendu>	hey myrl-chan :)
<myrl-chan>	hewwo.
<vendu>	http://vendu.twodots.nl/projects.html <- more stuff (under graphics projects) :)
<myrl-chan>	pyon: i was following a tutorial, so i immediately went to detailing the eyes. http://puu.sh/hi3hv.png
<pyon>	:o
<pyon>	checking.
<pyon>	nice.
<myrl-chan>	also, my friend made a way better one in 10 mins. lol. http://puu.sh/hi2ii/c841d78ab5.jpg
<vendu>	myrl-chan, i have a book called practical computer vision in c =)
<vendu>	haven't read it, but i got it for a low price so i figured why not :p
<myrl-chan>	vendu: i know that feeling. i think i haven't read 2 of the books i bought.
<myrl-chan>	but it was $1 each, so... yeah.
<vendu>	myrl-chan, i think i have like a dozen fiction books and twice that of cs books i need to read =)
<vendu>	myrl-chan, hehe i know the feeling =)
<_blizzy_>	i'm not ready for tomorrow. .-.
<vendu>	myrl-chan, i got a c programming book, around 1,000 pages, that sells for over 100 bucks for 50 euro-cents once :)
<vendu>	hehe the postage was around 10 euros :)
<vendu>	myrl-chan, this one (yep, the latest/3rd edition): http://www.amazon.com/applications-programming-ansi-c-3rd/dp/0023611413/
<vendu>	:d
<myrl-chan>	vendu: wow.
<pyon>	myrl-chan: "better one in 10 mins" --> whoa...
<pyon>	myrl-chan: she looks like she's pouting. so cute!
<lf94>	v8 is coded in c++, right?
<_blizzy_>	yes.
<lf94>	does c++ initialize all memory to zero?
<pyon>	lf94: no.
<_blizzy_>	oh
<lf94>	when does it not
<lf94>	i'm about to do a nice little experiment.
<pyon>	lf94: for example, when you just malloc().
<lf94>	how often is that done
<lf94>	i know malloc() can be used
<lf94>	but in a c++ context is that really done often?
<textmode>	its not uncommon for the os to zero memory in idle cycles, though.
<lf94>	i'm about to go over v8 source code, wondering what to expect.
<vendu>	aidanh, ping? =)
<vendu>	myrl-chan, hehe yeah, no one else took part in the auction :)
<vendu>	textmode, yep, that's a security concern... one cannot let the os hand applications memory contents of other processes :p
<znoosey>	lf94: heh then you have some fun, (guessing) 50k lines of code to read
<vendu>	writing a memset() and/or bzero() is a very fine exercise in code optimisation :)
<vendu>	there's a ton of tricks to be applied :)
<vendu>	hey znoosey =)
<znoosey>	hello vendu :)
<znoosey>	vendu: what's up? did you finish your c book yet? :p
<vendu>	znoosey, i need to hack a good dungeon generator for a game project =)
<vendu>	znoosey, which one, the one i'm writing? :p
<znoosey>	vendu: yes
<vendu>	znoosey, haven't worked on that one in quite a while :p
<vendu>	i have this feeling it might never be officially "finished" :)
<znoosey>	vendu: cool, i did that once, in action script!
<znoosey>	hehe
<vendu>	znoosey, what kind of a generator? bsp? cellular automata? what? :p
<vendu>	znoosey, this stuff looks cool: http://www.gridsagegames.com/blog/2014/06/mapgen-cellular-automata/
<znoosey>	vendu: bsp
<vendu>	znoosey, hehe i have almost covered bsp, but i was thinking i just might go for something more "interesting" :)
<lf94>	znoosey, no this shouldn't take long.
<lf94>	znoosey, i know what i'm looking for.
<lf94>	you guys will hear the results of the experiment relatively soon.
<znoosey>	vendu: looks cool ^^
<znoosey>	lf94: what are you trying to do?
<vendu>	znoosey, let me link you to some of my ideas for the game project =)
<vendu>	https://github.com/vendu/os-zero/blob/master/usr/games/mjolnir/ideas.txt
<znoosey>	vendu: http://frigg.hiof.no/spill_v1113/innleveringer/the_escape/spillet/the_escape.php my game :p it is in flash though...
<znoosey>	can't find the one where we actually used the bsp...
<znoosey>	this one was "faked" :p
<vendu>	znoosey, hehe :)
<vendu>	znoosey, i'm getting another box of computer parts for 35 packs of cig-rolling papers :)
<vendu>	which i paid 40 cents per pack for (60 zig zags per pack) :p
<vendu>	the box should have several dual-core cpus, some intel mobo, lots of ram, etc. :d
<znoosey>	vendu: not bad :p
<vendu>	znoosey, yep yep, might go for another dual-core desktop machine :)
<gedamo>	https://www.kickstarter.com/projects/1598272670/chip-the-worlds-first-9-computer
<lf94>	hm.
<lf94>	what i want to do may not be possible.
<lf94>	because javascript always returns undefined.
<lf94>	hm.
<lf94>	at least it claims to.
<textmode>	?
<lf94>	ok guys here is what i'm trying to do
<lf94>	i'm trying to cycle through memory
<lf94>	in order to gain any data
<lf94>	it is obviously for malicious purposes
<vendu>	znoosey, ah, i think i've seen the escape before :)
<lf94>	but i want to know if it's possible to pull off an attack like this
<aidanh>	vendu, pong
<aidanh>	about to start work though
<vendu>	aidanh, what kind of dungeon generators did you do? :)
<lf94>	the idea is
<vendu>	aidanh, ah, won't bug you for long now then :)
<lf94>	loop, call malloc(), and send malloc()'d data to a server for later analysis.
<vendu>	aidanh, http://www.gridsagegames.com/blog/2014/06/mapgen-cellular-automata/ <- this stuff looks wicked :)
<lf94>	thing is v8 doesn't really do any malloc().
<lf94>	i'm looking around here
<vendu>	lf94, shouldn't work on any reasonable os :)
<lf94>	vendu, could you explain please?
<aidanh>	vendu, mostly 2d top down room layouts
<lf94>	vendu, when i run malloc and then printf it, it is seemingly random.
<lf94>	this is in linux at least.
<vendu>	lf94, yes i can. malloc() typically uses heap memory from sbrk/brk and any half-decent os needs to make sure it's either cleared or belonged to the same process before :)
<vendu>	or it might mmap() anonymous memory which is zeroed :)
<vendu>	the trend is laying towards mmap()'d regions these days
<lf94>	what is sbrk
<aidanh>	my approach was basically for generating realistic building layouts, so i used a partitioning system, and then used lots of heuristics to choose where to put doors and things like that
<aidanh>	a system call
<vendu>	lf94, it might be "random", but it should be earlier allocations of the same process if not cleared in some other way =)
<lf94>	hm.
<vendu>	aidanh, lf94, sbrk() is actually an interface to the brk() system call :p
<vendu>	but close enough ;)
<aidanh>	hah, woops
<vendu>	hehe
<vendu>	aidanh, got any code laying around for the dungeon gen? :)
<lf94>	vendu i think that means if someone was running their browser for a long time, and i pulled off an attack like this, i could get javascript objects/code that was running, and maybe even html.
<lf94>	is that a possibility?
<vendu>	lf94, ah that might actually work :)
<lf94>	yea, ok.
<lf94>	hm
<aidanh>	vendu, not on my phone :p and i never got around to finishing it really
<vendu>	lf94, i think it might be possible, yep =)
<lf94>	vendu, the issue is now...
<vendu>	aidanh,  hehe :)
<lf94>	i don't think v8 calls malloc anywhere.
<vendu>	v8?
<lf94>	it's the javascript compiler in google chrome
<aidanh>	should probably get back into that sometime this summer
<vendu>	aidanh, i just might do a dungeon library with different approaches to generating them :)
<vendu>	not sure yet... but i need something cool for the rogue-like, at least :)
<ssta>	watching hikaru no go (again)...am i weird?
<myrl-chan>	http://puu.sh/hi4aw.jpg
<myrl-chan>	i'm done. never drawing again.
<myrl-chan>	pyon: ^
<ssta>	there aren't even any naked girls in it
<vendu>	myrl-chan, not bad at all :)
<lf94>	myrl-chan, nice
<lf94>	myrl-chan, i drew a few girls in my teen years.
<vendu>	lf94, well, the basic thing is you shouldn't get anything but zeroed memory or something that belonged to your process before from malloc :)
<vendu>	calloc() is usually used for explicitly-zeroed memory =)
<lf94>	hm.
<myrl-chan>	i don't use calloc at all.
<mwizard>	lf94: isn't it spelled "drown"?
<lf94>	mwizard, wat
<lf94>	what
<rounin>	that's perhaps a tad unconventional
<vendu>	myrl-chan, sometimes i do... depends on the use case =)
<vendu>	malloc() is better in case you are going to fill the memory with some data anyway =)
<vendu>	but for stuff such as structures where you don't want to initialise all fields explicitly (to zero), calloc() is fine =)
<myrl-chan>	vendu: yeah.
<pyon>	myrl-chan: "never drawing again" --> awww, don't give up!
<dreams>	hai \o/
<pyon>	dreams: hai
<anahumar>	i know the differene between jsp and servlet you fuckers
<pyon>	that was... weird.
<rindolf>	dreams: hi. sup?
<wei2912>	back
<dreams>	rindolf: not much, reading a badly written pesudo-code. you?
<lf94>	hentai-pyon quit jacking off and jack in ##programming
<hentai-pyon>	lmao
<hentai-pyon>	connection issues
<rindolf>	dreams: i ate lunch now.
<wei2912>	back to spamming bio
<wei2912>	:p
<lf94>	i think v8 is safe against my attack plan.
<rindolf>	dreams: and i've ran into some problems with a project euler problem.
<hentai-pyon>	lf94: what's your attack plan?
<hentai-pyon>	lf94: and what's it s'pos'd to achieve?
<lf94>	loop, call malloc(), and send malloc()'d data to a server for later analysis.
<hentai-pyon>	oh
<lf94>	(copy+pasta from earlier)
<dreams>	rindolf: using perl?
<lf94>	let me uh, pastebin a more formal description
<rindolf>	dreams: no, c++.
<ctrlc>	hi, what is the best way to limit accessing to our server to a specefic software? i don't want to use ssl. so user aget is kinda useless.
<rindolf>	dreams: well, i also have a perl version, but the c++ one is faster
<ssta>	i'm trying to redo the pe problems i lost in a hd crash...pita, i keep being off by one (although there's no doubt i'm writing better code this time around imo...even if it is still a bit childish due to the nature of the problems)
<rindolf>	ctrlc: use a challenge+response handshake?
<dreams>	rindolf: ah.
<pyon>	damn
<rindolf>	ssta: i keep my project euler code in a public mercurial repo on bitbucket.org.
<ctrlc>	rindolf: what is that?  the client is public by the way.
<rindolf>	ctrlc: the client is public?
<rindolf>	ctrlc: it's a cryptography thing.
<ssta>	rindolf: yeah, i ought to do similar...but it's too scrappy for me to want to publish really.  people might think i write production code like that
<rindolf>	ssta: heh, don't worry about that.
<rindolf>	ssta: bitbucket.org also gives you free private repositories
<ctrlc>	rindolf: ok. thank you. *going to see what it is!*
<dreams>	ctrlc: an easier solution is to use firewall rules (they're easily probed though).
<lf94>	hentai-pyon, http://pastebin.com/h9k78zbd
<rindolf>	hentai-pyon: what is hentai-pyon a reference to?
<ctrlc>	dreams: thank you too. but i may not have the access to firewall.
<lf94>	rindolf, if you could read that too that'd be appreciated
<myrl-chan>	wei2912: i'm done.
<rindolf>	lf94: ok, i half-read/half-skimmed it  - what's the problem?
<rindolf>	lf94: why are you trying to find an exploit in v8?
<wei2912>	myrl-chan: with what?
<lf94>	i'm not trying to /find/ one, i'm wondering if it's there
<lf94>	if it's even possible
<myrl-chan>	wei2912: http://puu.sh/hi4aw.jpg
<ihatehex>	lf94, seems like something they'd patch
<blipped>	rindolf: seems like fun to me.
<lf94>	ihatehex i know they'd patch it
<rindolf>	blipped: what does?
<lf94>	why wouldn't they, ihatehex?
<ihatehex>	i mean it's probably patched already
<blipped>	rindolf: looking for security holes, or just thinking about how things can be broken.
<rindolf>	blipped: ok.
<lf94>	i think it wasn't even possible from its inception, ihatehex.
<lf94>	anything undefined is assigned a value.
<blipped>	rindolf: you never took apart things as a kid?
<lf94>	uninitiaziled*
<rindolf>	blipped: i don't remember if i did.
<lf94>	uninitialized values don't exist in this interpreter
<ihatehex>	wei2912, hey, you been kansas-city shuffled yet?
<lf94>	that is the only way this attack would work
<wei2912>	ihatehex: switched to mongodb yet?
<ihatehex>	y, it's webscale
<ihatehex>	making a javscript operating system too
<blipped>	rindolf: that long ago or you live a memento life :)
<ihatehex>	javascript malloc is hard ok
<ihatehex>	:(
<ssta>	rindolf: https://github.com/ssta/projecteuler  (i'm sure this a bad idea :)
<ihatehex>	ssta, why do you return strings?
<ihatehex>	couldn't you just return the long?
<ihatehex>	s:
<ssta>	ihatehex: because then i don't have to care about what type i'm returning...i don't want to care about whether i'm returning int, long, biginteger, etc
<ihatehex>	ssta, in general you don't need to care about that either way afaik
<myrl-chan>	wei2912: so, how does it look like?
<ihatehex>	you could just have the result print it in a string
<ssta>	ihatehex: makes it very easy to just copy/paste the test classes
<ihatehex>	:o
<ihatehex>	sneaky
<ihatehex>	sneaky i say
<myrl-chan>	ssta: yep, it's a bad idea. it's in java.
<ssta>	myrl-chan: java is what someone pays me to write
<rindolf>	ssta: nice!
<ssta>	i really should get around to writing a proper wheel rather than loading primes from a file though...a proper wheel is faster
<wei2912>	myrl-chan: wait a moment... :p
<wei2912>	myrl-chan: let me finish this topic
<hentai-pyon>	"[06:18] <rindolf> hentai-pyon: what is hentai-pyon a reference to?" --> nothing in particular
<rindolf>	hentai-pyon: ok.
<ssta>	it's a reference to the fact that pyon never grew up and still prefers cartoons :)
<ssta>	even in pr0n
<hentai-pyon>	ssta: ironically i never watched cartoons as a kid
<hentai-pyon>	so, i managed to implement heap compaction for a heap that's a single memory block
<hentai-pyon>	but extending this to multiple memory blocks is now kinda tricky
<hentai-pyon>	each memory block is 64kb - i think it's reasonable to allocate memory in blocks of 64kb in this day and age
<cassandra119>	dang no cartoons ouch
<hentai-pyon>	myrl-chan: btw when's your dad buying you a new laptop?
<cassandra119>	i read news and politics but i only watch cartoons
<hentai-pyon>	cassandra119: iuno i never felt like i was missing anything
<vendu>	net price 14 euros, total :)
<hentai-pyon>	vendu: whoa kewl
<vendu>	i.e. 35 packs of zig zag rolling papers :d
<vendu>	hentai-pyon, yep... the set did have 1-gig ddr2 sodimms so i'll upgrade my acer aspire one mini-laptop to the max of 1.5 gigs :)
<ihatehex>	are those illegal or something?
<ihatehex>	lol
<vendu>	the diff with a gig is crucial for the use :)
<vendu>	ihatehex, hehe nah, just someone's collection of stuff he needed to get rid of :p
<pyon>	damn you, firefox.
<vendu>	so the price was formal :)
<ihatehex>	informal?
<ihatehex>	confus
<vendu>	http://www.engadget.com/products/acer/aspire/one/zg5/specs/
<vendu>	ihatehex, i mean he just asked for something very little to get rid of the stuff :p
<vendu>	there's the acer i'm gonna make a gaming box with :)
<cassandra119>	anyone know how much job training they give for software engineer entry job
<cassandra119>	assumjng u know basic programming prereq
<znoosey>	cassandra119: i got: none
<znoosey>	cassandra119: usually you go straight into work, and just have someone look over your code before it goes into test/production
<cassandra119>	is that bad
<znoosey>	cassandra119: no it is fine
<znoosey>	cassandra119: you usually have people around to ask when you don't know how to solve something, you generally are not put all by yourself
<cassandra119>	a kid who got a b- on the school programming  course could do it?
<znoosey>	cassandra119: don't see why not
<ssta>	since i want ctes, is postgres the only sane option?
<cassandra119>	darn if only i can find a jonb like that i been looking for a while  now and   one
<cassandra119>	none
<cassandra119>	postgres prob is the only sane option
<cassandra119>	znoosey: how blinged out should my resume be
<cassandra119>	or is programming to competitive
<znoosey>	cassandra119: i have no idea where you are from, and what i see is that it is a lot of differences between countries
<cassandra119>	usa ca
<znoosey>	cassandra119: not got any personal experience from usa, but for a junior position if you got a cool project on your resume it won't hurt you
<znoosey>	cassandra119: probably a good idea to spend more time on your cover letter than on your actual resume
<znoosey>	cassandra119: make them see that you are passionate about whatever that company does and want to improve and all that stuff... they love that
<cassandra119>	they seriously read that
<aed>	is "the little schemer" a good reading for recursions?
<znoosey>	cassandra119: yes, they skim it, so make your strong points a few times
<cassandra119>	i was hoping not, should i sound like a 10 year old jumpy girl with clean sentences about how happy i am to want to work for them?
<aed>	i've started reading the book and it seems pretty easy
<znoosey>	cassandra119: heh no but grown up jumpy girl might work
<ssta>	cassandra119: in general, just be yourself...
<cassandra119>	same thing
<aed>	cassandra119: right, cuz tits
<aed>	lol
<ssta>	oh, you have funbags?  you have an advatage right away then
<znoosey>	girls here have it too easy getting programming jobs -.-
<aed>	you can start on monday
<cassandra119>	nah no one like me for myself
<ssta>	depends how desperate you aere for the job i guess
<cassandra119>	really? last i randomly checked they were at huge time low
<aed>	so, could anyone answer my question? my intention is to improve my "recursive thinking"
<aed>	i'm not sure if that book is a waste of time
<znoosey>	aed: recursion is overrated and it is just recursion...
<cassandra119>	im kinda desperate yea, how long should cover letters be
<o0elise0o>	http://hardware.slashdot.org/story/15/05/10/0936213/enterprise-ssds-powered-off-potentially-lose-data-in-a-week
<ssta>	lispy languages almost require you to think recursively
<vendu>	znoosey, http://www.evilscience.co.uk/a-c-algorithm-to-build-roguelike-cave-systems-part-1/ :)
<znoosey>	cassandra119: i'd say about half an a¤ page
<ssta>	cassandra119: depends...i'd generally try to keep it to a page or two max
<aed>	ssta: so it's a good book?
<cassandra119>	they read all that?
<ssta>	aed: no idea, never read it
<znoosey>	cassandra119: no
<ssta>	cassandra119: they skim it probably
<ssta>	they read it if they're interested
<znoosey>	vendu: finally you are posting something using a good language ;)
<aed>	ssta: what should (or should i at all) read about it to get better? 'solving' problems doesnt seem to work
<vendu>	znoosey, hehe
<aed>	it's like im learning a new algorithm for every program
<vendu>	:)
<ssta>	aed: mainly practice...lots, and lots.  and read anything you think might help.  sicp is a good place to start
<znoosey>	cassandra119: get in something that is special about you, and why you are different than the other 100 people that is applying for the position
<cassandra119>	can i say i like anime introverted and read a lot of politics?
<ssta>	sure
<ssta>	i'd probably skip the introverted bit though
<cassandra119>	what about fetishes?
<znoosey>	cassandra119: not if you want the job, but the politics part might be a way to go, depending on where you applu
<znoosey>	apply*
<ssta>	cassandra119: depends on whether you want to be a programmer of a fluff bunny
<aed>	ssta: thank you, i'll look it up
<znoosey>	cassandra119: they never help, nor does nudes, the latter might make you end up in the news though
<cassandra119>	darn thats what im saying no one gonna like me as i am
<aed>	cassandra119: you should sleep with the boss
<znoosey>	cassandra119: lol
<ssta>	cassandra119: this is your first real job?  nobody (sane) will expect you to know anything yet.  they're looking for potential, so lots about how much you love learning and are eager for challenges is good
<hadok>	http://wklej.org/id/1707747/ segfaults, most likely due to the unintialised value on the game_output struct
<cassandra119>	im a guy..im using cassandra irc web thing
<znoosey>	cassandra119: all you are is an introvert politics lover with anime fetish?
<hadok>	how do i fix this?
<aed>	cassandra119: you should sleep with the boss
<aed>	lol
<hadok>	here are the structs
<hadok>	http://wklej.org/id/1707748/
<znoosey>	hadok: have you tried valgrind?
<hadok>	yes...
<hadok>	it tells me of an conditional jump from unintialised value
<cassandra119>	and i believe triple h slept with the bosses daughter, that worked well
<znoosey>	hadok: does it tell you the line?
<vendu>	valgrind is mad cool :d
<hadok>	znoosey: no
<hadok>	just some hex data
<vendu>	hadok, you need to build the stuff with the -g compiler option :)
<znoosey>	hadok: then compile again as debug
<vendu>	it will generate debugging info
<znoosey>	:)
<aed>	cassandra119: don't sleep with his daughter, sleep with him
<hadok>	no i know the problem
<hadok>	i just want to know how to fix it
<aed>	cassandra119: are you in the us?
<hadok>	i need to initialise *models in the game_output struct
<wei2912>	crappy advice there
<cassandra119>	yeah
<aed>	... the promised land
<aed>	lol
<cassandra119>	i think the companies and schools are corrupt
<aed>	ill see myself out, bye guise, thx ssdude for that recommendation
<ssta>	everyone is corrupt...only the amount varies
<cassandra119>	school in parricular, it became a massive scam
<cassandra119>	a super one actually
<znoosey>	cassandra119: they hard part is to stick out when you are right out of school
<znoosey>	cassandra119: writing a blog or doing some cool project will help
<ssta>	stuff some code on github
<cassandra119>	darn i dont have time for that
<cassandra119>	i dont like programming in spare time
<ssta>	ah, so you're only a hobby programmer then?
<znoosey>	cassandra119: no time to get a job? then that is your problem
<planckwalk>	it's not spare time.  it's job-hunting work.
<cassandra119>	though i pretty good, i learned from great material
<ssta>	good companies are looking for people who eat, sleep and breathe programming
<ssta>	they're looking for passion
<myrl-chan>	ssta: and breed programming.
<ssta>	that too :)
<cassandra119>	i could care less what they want as long as its me
<ssta>	either that or tits.  if you don't have a passion for programming, you better have nice tits and ass
<planckwalk>	"good companies".
<cassandra119>	i dont have passion but i do got ambition
<ssta>	if you don't have the passionm, then fake it
<myrl-chan>	ssta: does it matter if you're a boy or a girl?
<cassandra119>	of course ill fake it
<ssta>	myrl-chan: for the passion part, no...for the t&a option, yeah, that;s probably restricted to the female gender
<myrl-chan>	ah dammit
<ssta>	myrl-chan: you could always go the ladyboi route i suppose
<myrl-chan>	lol
<cassandra119>	last tech job i stole the automation codes they worked long and hard for
<ssta>	okay, remind me not to hire you
<cassandra119>	still got them, their security was so poor
<cassandra119>	thats too bad cause i was best employee
<reynir>	employees that steal are not the best.
<planckwalk>	doesn't sound like it.
<cassandra119>	they never gave raise from temp worker so i stole a buncnh of mem and data and stuff
<planckwalk>	wow, you suck.
<planckwalk>	(they probably do too, but two wrongs do not make a left)
<cassandra119>	they work for hp, and damn are they bad
<myrl-chan>	cassandra119: wow, you're so pro. tell us more you 31337 pro h4x0r.
<cassandra119>	one of the laptops actually caught fire
<reynir>	my neighbors house was on fire due to a laptop
<cassandra119>	it was literally only turned on and left on for some hours during testing
<cassandra119>	dayum u see what i mean
<reynir>	no
<myrl-chan>	cassandra119: w0w.
<cassandra119>	u cant trust them companies
<myrl-chan>	ogm, muhc agri
<cassandra119>	their head engineer spend weeks not doing a th8ng all day, he be just bored walking around and he calls up indians at tech support in india to code for him real quick
<cassandra119>	that pissed me off so much
<cassandra119>	i sant to be like him
<cassandra119>	want
<cassandra119>	u still think i can be myself on that cover letter or do u recomend i should fake it
<ssta>	i recomend you kill yourself before you can reproduce
<o0elise0o>	https://www.youtube.com/watch?v=rpxfav5onre
<reynir>	wow harsh
<znoosey>	cassandra119: yes, please be yourself :) we don't want people like you actually getting a job :p
<blipped>	ssta: working for a great company sounds terrible if they want you to eat, sleep, and breathe programming.
<blipped>	ssta: i got other things i'd like to do with my time than sit in front a computer 24/7
<ssta>	blipped: then you're not a real programmer[tm]
<o0elise0o>	sit in front of the main stage at a stripe club, blipped?
<o0elise0o>	strip*
<blipped>	ssta: i'd rather pass on that badge, read some good books, get outdoors and explore the world a bit.
<rounin>	blipped: one might ask what would make it a great company
<rounin>	if you mean great as in "actually big", then sure
<blipped>	o0elise0o: nah, stripe clubs are boring.
<o0elise0o>	sit on the couch and watch tv?
<o0elise0o>	sit in a car going somewhere?
<o0elise0o>	sit in a waiting room?
<blipped>	rounin: true. i think a great company would encourage well-rounded employees. ones that can actually interact and work with other people.
<blipped>	o0elise0o: don't need a car where i live.
<rounin>	i've gone from a company that expected me to work 120%, 24/7, 365 days a year, to one that forbids me from being 100% productive and just has me sit there
<rounin>	now i'm wondering if i could get two part-time jobs at both
<rounin>	or rather one at each
<blipped>	rounin: hah, from one extreme to the other.
<rounin>	yeah... be careful what you wish for :)
<blipped>	rounin: i actually quit programming and went into teaching for awhile because of companies like the first.
<rounin>	blipped: oh wow! what kind of teaching, then? and what kind of students?
<blipped>	well, quit coding for money. i still do plenty in my spare time, and it's much more enjoyable because of it. i'll probably go back into the industry later.
<blipped>	rounin: high school math and computer science.
<belxjander>	blipped: i've been teaching esol with the former  style of demand myself... 120% all the time with little or no actual time for preparation :/
<rounin>	ah... they have computer science in high schools now?
<rounin>	in my day and so on and so forth
<rounin>	insert rant
<blipped>	i work overseas in china at an international school. my contract is up here in a few months so i'm not sure what will be next.
<grublet>	rounin: they put baking soda and vinegar in the computer
<blipped>	belxjander: where are you at?
<rounin>	grublet: haha what :d
<grublet>	it's science!
<belxjander>	blipped: i'm not so far from you if you consider distances to tokyo
<blipped>	rounin: i actually started off as math and then started the computer science department by creating demand from the students and parents :)
<blipped>	belxjander: awesome. i'd love to live in japan for awhile. china is starting to wear on me.
<rounin>	blipped: ah wow! students who see the relevance of their subjects and a school that cares!
<belxjander>	blipped: are they tacking cs as an adjunct to getting other things done or actually letting you have a primary of coding with extras tacked on to deal with other things?
<belxjander>	blipped: well i can certainly find you a decent placement if you want me to try ?
<blipped>	rounin: the kids i teach are so different than us kids. the biggest classroom problem i've had all year is kids texting in class.
<grublet>	blipped: imo, other students are the world part of going to school
<blipped>	belxjander: it's an ib school, so computer science is an option, but before i got there they had no one qualified to teach it.
<grublet>	worst*
<rounin>	ah, ib! i rather wish i'd gone there
<rounin>	i went a rather... crooked path
<rounin>	which was also fun, though
<blipped>	grublet: from my high school history i agree.
<rounin>	a lot of things are easy with the benefit of hindsight, of course
<blipped>	rounin: ditto that. in fact i dropped out and got my ged then worked my way through some community college classes until i had the basics for university.
<grublet>	all i got for computer lab was typing and html
<belxjander>	blipped: well considering my own schooling history... i feel dammed lucky i am still here
<grublet>	blipped: i decided to opt for the ged route as well
<blipped>	grublet: the ib is java based, so i did most of the intro stuff with processing.
<grublet>	well i went to community college to get an a+ cert
<graygray>	hey
<grublet>	pretty worthless cert imo
<blipped>	grublet: what are you working on now? university?
<grublet>	nah i decided college wouldn't work for my goals
<miniman10000>	uhm so
<blipped>	grublet: a lot of people are starting to do that. too expensive really.
<grublet>	i prefer learning for learning's sake not learning for potential employment
<grublet>	and yeah, financial considerations as well
<rounin>	now there are all those moocs as well
<encapsulation>	https://ideone.com/qsmsfc how can i improve my code to protect against the user being able to enter a letter and a number
<miniman10000>	i downloaded this one application that prints to a command window but it closes before i can read it... its a exe. any solutions to pause it?
<encapsulation>	i only want valid numbers to get through
<grublet>	idk what they teach behind the doors but i've watched enough standford and mit lectures to see that wikipedia has the same info
<rounin>	i did the last two years of my b sc basically that way - by sitting in my chair at home, plowing through the course materials, and doing all the assignments - from every years, if possible
<rounin>	people who want to go that route can now get some of their stuff from mit
<grublet>	rounin: i've been watching several mit courses
<rounin>	grublet: cool
<miniman10000>	alright i just decided to hold enter on the exe and read it
<rounin>	miniman10000: open up the command window first
<blipped>	miniman10000: start->run->cmd and run from there.
<miniman10000>	yeah i got command window open
<miniman10000>	i tried start clockres.exe from the cd and it just launched as normal
<miniman10000>	dono if theres another way?
<blipped>	miniman10000: in the command window navigate to the folder
<miniman10000>	http://puu.sh/hiadg/4e3f49eaf4.png for a snapshot of cmd prompt
<znoosey>	miniman10000: just type the name of the program
<znoosey>	miniman10000: no run/start first
<miniman10000>	ah thanks thats it znoosey
<o0elise0o>	https://youtu.be/tb_-a9i_fto?t=701
<graygray>	ok so i have this really bad entity relationship diagram for my a-level project and was wondering what you guys would think about improving it but at the same time adding a useless amount of code
<miniman10000>	huh
<miniman10000>	this seems like a problem waiting to happen
<wei2912>	graygray: can you elaborate?
<wei2912>	to the whole channel, that is
<wei2912>	i don't hv much time to help you out
<miniman10000>	windows timer resolution is by default 15.6 ms chrome sets it to 1 ms but it can be set to 0.5 ms
<graygray>	i am doing a computing project and my basic er diagram looks like this l http://puu.sh/hi9tl.png
<miniman10000>	i wonder if they conflict with each other
<mwizard>	lol, guys, did you know there will be no windows 11?
<mwizard>	windows 10 will be offered for free, and then provided as service
<mwizard>	want to use - pay monthly
<mwizard>	thanks god i'm os x user
<lf94>	you guys are going to love this paper.
<belxjander>	mwizard: i'm staying with amigaos myself...they do updates for free and only expect a nominal payment each release
<ssta>	i'll stick with linux thanks.
<belxjander>	mwizard: more on the order of $30usd each major release
<lf94>	the one os
<ssta>	although work force me to use windows, but as long as i can run vms who cares
<lf94>	an early look at an ideal computing system.
<belxjander>	ssta: that works for you then great :)
<lf94>	who the hell would use amiga os?
<lf94>	what a joke
<mwizard>	lf94: you're only promising, no paper release yet ;)
<lf94>	mwizard, i'm almost done the foreword ;)
<lf94>	x)
<mwizard>	belxjander: i'd love to use amigaos, but my speccy isn't powerful enough
<miniman10000>	lol
<miniman10000>	ive got no idea what im doing
<miniman10000>	this code uses dllimport but im not entirely sure...well how to work it
<miniman10000>	guess ill try googling importing a dll
<rindolf>	hi all. sup?
<protist>	pyon: hey what is the best way to denote pairwise multiplication of two vectors in math notation?
<mwizard>	protist: how are your neural networks doing?
<protist>	mwizard: decently :)....but i'm back on my actual research at the moment :)
<protist>	mwizard: have a meeting with my supervisors in like 7 hours
<protist>	mwizard: 1:46am here
<mwizard>	20:46 at my side
<protist>	mwizard: oh meeting is later...i wake up in 7 hours
<protist>	mwizard: i taught my network to do the identity function on all 8 bit patterns with 1 bit set to 1 using an 8×3×8 feedforward network
<protist>	mwizard: hope you have unicode on here
<protist>	mwizard: i mean i used an 8×4×8
<protist>	mwizard: sad because it is possible with 8×3×8 :/
<protist>	mwizard: and i had to train it with all the 1 bit positions 20,000 times...the material i was reading said they did it in "5,000 training epochs"
<wei2912>	myrl-chan: that glasses
<protist>	mwizard: could be their definition of "epoch"...idk
<myrl-chan>	wei2912: is it shit?
<wei2912>	myrl-chan: interesting
<myrl-chan>	wat
<wei2912>	lol
<wei2912>	<-- not a good art critic
<o0elise0o>	https://www.youtube.com/watch?v=aab8vjzuxym
<o0elise0o>	lol
<bizarrefish>	hi all
<reynir>	hi bizarrefish
<myrl-chan>	wei2912: tried a different eye. http://puu.sh/hidm3.png
<myrl-chan>	this took me like 30 minutes, lol
<wei2912>	myrl-chan: ooh
<mwizard>	protist: "epoch" is common name for one iteration of learning, however some authors may define epochs as more coarse units
<wei2912>	myrl-chan: i'm really bad at art, so i can't really critic art
<myrl-chan>	wei2912: that makes the both of us then. :p
<protist>	mwizard: ah, thank you
<mwizard>	protist: it took quite a long, 20k is not a joke - what learning method did you use? have you tried simulated annealing?
<protist>	mwizard: check out this monster sentence in my thing i am typing
<protist>	mwizard: "tf-idf of each of an ordered vector of each term within the corpus for each document in the corpus can be used to construct a vector characterizing each document."
<mwizard>	protist: such sentenses make me yawn preventively
<protist>	mwizard: i used sigmoid units with initial weights random between -.5 and .5 with a learning rate of .5
<protist>	mwizard: i manually changed the outputs to round up/down
<mwizard>	try narrowing your initial weights
<mwizard>	like, -0.1..+0.1
<protist>	mwizard: i think i may have an issue with some part of my algorithm....i don't ever update the weights on the output nodes....and i'm not sure they should even have weights
<mwizard>	large initial weights often cause a bit of paralysis state
<protist>	mwizard: ah....well that was the only setting i could get it to work on
<wei2912>	myrl-chan: you're good at art
<wei2912>	i genuinely can't draw anything
<protist>	mwizard: even then i needed 8×4×8 otherwise i would have one bit pattern mapped wrong
<wei2912>	i tried a stickman but i couldn't close the circle for the head
<wei2912>	:(
<protist>	mwizard: i'll hassle you more when i get back to it :)
<protist>	mwizard: if you liked that sentence you would love my latex equations haha
<myrl-chan>	wei2912: welp, this is just a passing thing probably.
<protist>	mwizard: (the quoted sentence)
<myrl-chan>	wei2912: in less than one week, i probably can't draw shit again.
<myrl-chan>	this kind of thing happens to me from time to time.
<o0elise0o>	https://www.youtube.com/watch?v=j_oyhuqiiou
<miniman10000>	on windows games are cpu tasks not usually done on a per frame basis?
<abiram>	hello
<abiram>	anyone?
<miniman10000>	like i'm having a hard time understanding how games don't run 100% on a single core.
<henke37>	blocking os calls
<jupelius>	miniman10000: because it doesn't have to
<gedamo>	it may be gpu limited
<henke37>	also, it's considered bad manners to talk about the same topic in multiple channels at the same time
<protist>	henke37: who's gonna catch you?
<protist>	henke37: and
<protist>	henke37: if they do...can they get mad at you in both channels?...or would that be breaking the rulke
<protist>	rule*
<rindolf>	abiram: hi, with what?
<lf94>	1575 the_one_os.content
<lf94>	words
<lf94>	not even half way done
<rindolf>	audioburn: hi.
<audioburn>	hey rindolf
<audioburn>	i figured out my error
<audioburn>	my nodes weren't physically acutlaly connecting -- i had connections with nodes that weren't there
<audioburn>	actually*
<rindolf>	audioburn: ah.
<rindolf>	audioburn: so the js code you showed me was not the problem?
<audioburn>	correct, i've got to restructure the data on the backend.
<audioburn>	well part of it was, the json
<rindolf>	audioburn: ah.
<rindolf>	audioburn: bye, i'm going for a walk.
<il>	woops
<audioburn_>	in building basic crud apps, when you have an error its exceptionally frustrating
<audioburn_>	because you are really doing anything that significant
<audioburn_>	i mean, it may look and seem significant sure, to others. but you, the architect, know it isn't
<audioburn_>	working with data is actually doing something, datavis, data science, ml (later on hopefully)
<audioburn_>	aren't*
<_blizzy_>	hmm
<_blizzy_>	to learn scala, or to not.
<henke37>	learn <favorite language> instead!
<_blizzy_>	atm i'm learning perl and php.
<myrl-chan>	_blizzy_: rip.
<_blizzy_>	myrl-chan, why rip.
<numb3rz>	hey all
<_blizzy_>	hi numb3rz
<numb3rz>	happy mothers day to all the moms out there
<_blizzy_>	yeah, happy mother's day.
<_blizzy_>	.-. ow idk but that reminded me of depression.
<_blizzy_>	*idk how.
<_x_c_v_b_>	_blizzy_: perl and php mathematical equivalent of hell
<_x_c_v_b_>	*are the
<_x_c_v_b_>	shift 4, shift 4, shift 4, shift 4
<_blizzy_>	perl and php aren't that bad.
<henke37>	php is an evolved language
<miniman10000>	i just dont get it
<_x_c_v_b_>	henke37: why do we still to press shift 4
<_x_c_v_b_>	*need
<miniman10000>	if you use sleep your doing it wrong but if you don't use sleep good luck not running at 100% cpu because your boned now
<inphase>	i treat php as an excellent tool for serving dynamic web content.  i don't know anything better for it.  but i don't think it has any good applications outside of there.
<inphase>	miniman10000: why do you say sleep is "doing it wrong"?
<miniman10000>	inphase "<zap0> the reason you want higher timer accuracy via sleep hackery is probably due to ignorance of better/proper methods."
<aidanh>	there are plenty of better tools for serving dynamic web content; django is one, and i wouldn't say it's particularly mindblowing
<inphase>	miniman10000: there's nothing wrong with sleep for timing events.  there are other solutions like scheduled timers, but they're really just sleep via a diferent interface.
<rounin>	miniman10000: perhaps whoever it is is referring to sleep() not being very accurate
<rounin>	but never mind that... some people just love to complain
<miniman10000>	hes referring to me trying to increase sleep's accuracy
<_blizzy_>	is it me
<inphase>	miniman10000: i saw that previously you were using sleep_for.  have you considered whether sleep_until better matches your needs?  if at least does not accumulate drift.
<rounin>	that sounds a bit like a lost cause, miniman10000
<_blizzy_>	or does the ##csharp channel seem hostile.
<rounin>	i would guess just from knowing about these channels in general, that the answer is yes, _blizzy_
<miniman10000>	rounin, it isn't a lost cause it's just i wanted to set accuracy to the highest it would go which is lower level than winapi
<aidanh>	_blizzy_: depends on the sort of questions you ask, probably
<rounin>	even this channel tips over into hostile territory fairly quickly, and this is known to be one of the friendlier ones
<_blizzy_>	rounin, aidanh, oh.
<inphase>	_blizzy_: you were expecting socially adjusted programmers?
<_blizzy_>	i openly liked php in another channel
<_blizzy_>	lets go.
<rounin>	miniman10000: ah... i did hear about a kind of timer resolution one could set
<miniman10000>	inphase, i havn't looked into it but i assume sleep until does some math and its a wrapper around sleep.
<rounin>	though it lasted until the next reboot or something like that
<aidanh>	_blizzy_: i used to hang around on ##c sometimes; questions from people clearly having a weak grasp of the core concepts were, imo, treated with thinly veiled contempt
<miniman10000>	winapi has beginsomething which gets resolution to 1ms nssomething gets the resolution to the lowest possible of 0.5 ms
<rounin>	_blizzy_: the way i see it, some people confuse factual questions and moral questions, for one thing, so if you ask them about something they don't like, they react as if you murdered a baby
<_blizzy_>	aidanh, wow.
<_blizzy_>	rounin, true.
<rounin>	and they also confuse personal preferences and factual questions, and rant about anything they don't like being "broken" and "wrong"
<inphase>	miniman10000: it might be the other way around actually.  i imagine the kernel internally sets scheduled wakeup alarms as its most fundamental approach.
<rounin>	_blizzy_: then you can add to those two all the people who are just looking to start arguments, and chaos is right around the corner :)
<_blizzy_>	some people are elitists.
<_blizzy_>	who think "lol you're not using #{x} language? you suck as a programmer."
<rounin>	ah yeah, totally!
<aidanh>	_blizzy_: well, this happened fairly rarely, but often enough to raise my eyebrows; in addition there was a general lack of willingness to try to interpret questions phrased somewhat loosely
<inphase>	miniman10000: but mostly the advantage of sleep_until would be that you could set it on a fixed interval.  sleep until every 1 second interval from program start, and if one wakeup was 30ms late, the next one still aims for the same interval.  so by the end of hours of running, you've had exactly 1 per second even if a bunch of them happened "late".
<_blizzy_>	those are the worst types of programmers.
<rounin>	perhaps that in itself is a reason to use php sometimes... just to filter those types out
<miniman10000>	inphase, oh i see -i'm aiming for 16.7 ms
<inphase>	miniman10000: you just need to pick a behavior for a missed interval.  either a makeup with a very short interval, or skipping one update.
<_blizzy_>	people can't take opinions.
<_blizzy_>	"i like language x"
<inphase>	_blizzy_: what is wrong with you for thinking that??
<monroe>	what is the best option someone should opt to learn between the languages php, python and ruby if he wants to create a big web app that relies heavily on data-base such as quora or small-sized facebook ?
<miniman10000>	inphase alright i got it now- yeah sleep uses relative delay - it is not a set time
<_blizzy_>	inphase, nothing.
<jeaye>	monroe: whichever one you know more.
<miniman10000>	one of the features that ntdelayexecution which is called by sleep but sleep doesnt have access to is the ability to set absolute time to wake up
<monroe>	jeaye i don't know any
<monroe>	although i have experience in programming
<aidanh>	monroe: not php, preferably
<redab>	wasn't facebook written in php from the beginning?
<monroe>	which should i choose to put effort on ?
<jeaye>	then you're not going to be making facebook, monroe.
<monroe>	and learn ?
<inphase>	monroe: python is a fine language, but there's a much bigger crowd making php web apps, so you may find it easier to find support and questions answered on details.
<monroe>	jeaye its not facebook and doesnt intend to compete with it
<jeaye>	monroe: all of them can do it.
<monroe>	i know c+=
<monroe>	c++
<aidanh>	monroe: ruby has weird syntax quirks, while python seems to be more consistent and intuitive; but opinions differ of course
<monroe>	but no web dev experience at all
<jeaye>	monroe: what do you "know" of c++?
<miniman10000>	jeaye, modules are being work on
<monroe>	some time ago i learned to the point of oop
<jeaye>	monroe: the choice between the languages you listed is almost entirely subjective.
<monroe>	oh, is it ? :(
<jeaye>	monroe: so, you're briefly exposed to oop and that means you know c++?
<monroe>	i thought at least i could discard php, i hear so many people talking bad of it
<jeaye>	miniman10000: so?
<jeaye>	monroe: then do that.
<miniman10000>	well you asked what i knew of it and thats what i know and am excited about so i had to say it
<monroe>	inphase i see, is the same case for ruby ?:
<inphase>	monroe: if your programming experience consists of learning c++ only to the point of oop, then i suspect your odds of success at this new project are greatest with php.
<jeaye>	monroe: as i said, you can implement what you want in all of them.
<inphase>	monroe: because of the greater availability of tutorials, examples, and help.
<miniman10000>	i hear a lot of trash talk about php being slow.
<inphase>	miniman10000: that is unlikely to be a factor.
<aidanh>	i think php's slowness is a minor complaint compared with language quirks
<jeaye>	miniman10000: people trash talk a lot of languages. php's biggest issues, especially for beginners, won't be performance.
<miniman10000>	lol
<jeaye>	miniman10000: i didn't ask what you knew of c++.
<inphase>	php is ridiculously slow if you're using it for numerical computation, so, don't.  php's performance is negligible when serving up dynamic web content.
<jeaye>	i explicitly highlighted monroe, miniman10000.
<miniman10000>	jeaye, yeah you asked someone else i still responded
<miniman10000>	thats how excited i am over modules
<_blizzy_>	this guy just basically called me dumb
<_blizzy_>	because i like php
<miniman10000>	lol
<monroe>	i was just wondering, given someone that know the three of them equally well and starting the project now, which would he best choose
<jeaye>	monroe: asking in here, for the most part, isn't going to get you anywhere.
<miniman10000>	my only experience was an image to raw data converter and php had functions for doing that with ease
<_blizzy_>	monroe, what languages ddo you know.
<_blizzy_>	*do
<jeaye>	stop thinking one of them is "the best," monroe.
<redab>	if monroe has no experience with web development, i don't think performance should be taken in to account. just pick a languange that you like and stick with it. the more you learn the better you will become and choosing one language over another.
<aidanh>	_blizzy_: i'd just say something about ignorance and bliss, myself :p
<_blizzy_>	aidanh, lol.
<miniman10000>	i enjoyed node.js
<monroe>	_blizzy_ not a pro, but i'm a fast learner and i learned pascal, c, c++
<jeaye>	monroe: again, you "learned" c++ to what extent?
<jeaye>	monroe: have you written non-trivial software in it?
<monroe>	well i did some not so hard projects using oop and design patterns ...
<_blizzy_>	monroe, oh.
<monroe>	dont know if that would be trivial
<_blizzy_>	wow, those langauges
<monroe>	i guess it would
<jeaye>	oop and design patterns != c++
<_blizzy_>	are those even used in web dev?
<jeaye>	_blizzy_: yes.
<jeaye>	c++ is, anyway.
<jeaye>	monroe: i'm trying to point out to you that you don't "know" c++ and you haven't "learned" c++ since it's too fucking difficult to "know" or "learn" in any small amount of time.
<monroe>	yes, you are right
<monroe>	but i have dedication and motivation
<monroe>	lots
<_blizzy_>	this guy
<_blizzy_>	nvm.
<jeaye>	you can have experience with it, but, if your measurable experience with c++ is quantified as "oop and design patterns," you likely don't have much.
<monroe>	jeaye yep. i guess non-trivial projects would be things like games ?
<jeaye>	monroe: anyway, if you like oop, ruby is the most "objectified" of the languages you listed.
<monroe>	or waht sort of projects ?
<monroe>	jeaye right
<aidanh>	monroe: difficult to define; medium-large games / game engines could be considered non-trivial though
<jeaye>	monroe: do you know what raii is?
<monroe>	jeaye no
<aidanh>	monroe: basically non-trivial == takes many days or more of work
<jeaye>	then you have a long way to go, still, with c++, monroe.
<jeaye>	as do we all.
<monroe>	yeah but i intend on web dev now
<jeaye>	you're doing backend web dev work, where c++ is also used.
<_blizzy_>	monroe, if you're going webdev, learn js
<jeaye>	monroe: if you're doing frontend work, none of the languages you've listed will do.
<jeaye>	javascript (or something more sane, like the statically typed languages which compile to js) is better suited.
<monroe>	jeaye i see. i think i just need to choose one of the three and start things going , then if i get to the point of learning more c++, i put some effort on it
<_blizzy_>	learn node and js
<monroe>	one of the three back-end*
<_blizzy_>	monroe, try out node and js.
<_blizzy_>	they both are basically the same, and they can do front and back end.
<monroe>	_blizzy_ thanks for that name
<_blizzy_>	monroe, np.
<monroe>	thanks all for the tips
<_blizzy_>	time to get joked on
<_blizzy_>	by elitist programmers
<aidanh>	_blizzy_: how are you going with those five questions
<_blizzy_>	aidanh, i can do the first three
<_blizzy_>	i can kind of do 4
<_blizzy_>	i found this
<_blizzy_>	for #4
<_blizzy_>	array.map(&:to_s).sort.reverse.join.to_i
<__outlaw_milad>	hi guys, how is it going?
<aidanh>	_blizzy_: that looks like it would work... although i'm not sure it doesn't miss corner cases
<__outlaw_milad>	guys i want to develop a minimal os
<__outlaw_milad>	but i dont know how i should start my research
<aidanh>	__outlaw_milad: ##osdev
<aidanh>	oops, that's just #osdev
<redab>	__outlaw_milad: http://wiki.osdev.org/introduction ##osdev
<__outlaw_milad>	thanks guys
<aidanh>	the trouble with freenode's channel naming scheme is that half the channels don't use it..
<o0elise0o>	i thought the problem with it is they dont even try to enforce it
<aidanh>	probably that too
<_w_>	i see no problem with either of those facts
<_blizzy_>	ok, i'm gonna focus on c#, java, and php
<_blizzy_>	perl and scala can wait.
<_w_>	_blizzy_: why c# /and/ java? one or the other, they serve almost identical niches
<aidanh>	you may benefit from exploring languages which use different paradigms
<blox123>	hello
<blox123>	i used invoke larger, [edi], [edi+2], addr resx
<blox123>	on this: http://pastebin.com/qv6mtkzh
<blox123>	i get 0 in resx
<blox123>	why is mov word ptr [res], ax not updating the value of resx ?
<o0elise0o>	_w_::what do you mean by you see no problem? you disagree with the supposed naming scheme rule?
<_w_>	o0elise0o: i see no problem in channels themselves choosing whether to follow the guideline or not
<o0elise0o>	ah
<_w_>	it's not like most people go around guessing channel names anyway - you have to know the channel to join it
<o0elise0o>	but it ends up being odd that way
<_w_>	helps little to know all channels have only one # if you don't know if it's #coders #programming #code #programmers etc
<_w_>	o0elise0o: it serves a purpose however, in reducing whining when someone with a legit claim to a project name is given the channel by staff
<bizarrefish>	blox123: might be worth asking in #osdev
<blox123>	thanks bizarrefish
<zacts>	hello
<rindolf>	zacts: hello. how are you?
<zacts>	i'm well
<zacts>	and you?
<rindolf>	zacts: i'm fine - i have a job interview tomorrow.
<zacts>	oh cool
<zacts>	a tech job, or editorial job?
<rindolf>	zacts: a software dev job.
<apiw>	rindolf: good luck!
<rindolf>	apiw: thanks!
<zacts>	coolio
<zacts>	rindolf: will it involve perl?
<zacts>	(if i may ask)
<rindolf>	zacts: not sure.
<zacts>	hm... well hope it goes well! :-d
<rindolf>	zacts: i'd rather not spill too many details about it.
<zacts>	that's cool, i totally understand
<rindolf>	zacts: thanks!
<wizard>	hi
<rindolf>	wizard: meow!
<zacts>	mew
<adsjlkdk>	guys im going to learn javascript today
<adsjlkdk>	how should i learn it
<rindolf>	adsjlkdk: don't know.
<zacts>	adsjlkdk: make a full linux kernel clone
<zacts>	i guarantee you will learn js inside out
<wizard>	do you know any programming language?
<zacts>	wizard: i always wanted to be a wizard when i grew up
<adsjlkdk>	no
<zacts>	adsjlkdk: what are your programming goals?
<zacts>	do you aim to be a web-developer?
<rindolf>	wizard: i know a few to a substantial extent (probably don't know them 100%)
<zacts>	or are you learning js for fun?
<wizard>	than i have no idea :-)
<adsjlkdk>	zacts: no
<adsjlkdk>	i want to make games
<zacts>	adsjlkdk: um... hm... i'm interested in lisp games
<zacts>	i think that lisp or racket might be a place to explore, and you'll learn some various paradigms and design ideas
<inphase>	adsjlkdk: are you going to try to learn it in one afternoon and then give up in frustration again?  :)
<wizard>	in javascript?
<zacts>	but that's just my opinion
<zacts>	common lisp that is
<nizumzen>	adsjlkdk: weren't you learning c++ the other day?
<adsjlkdk>	they told me to learn js
<aidanh>	who's they
<adsjlkdk>	this channel
<nizumzen>	:|
<wizard>	lol
<adsjlkdk>	inphase: fine ill keep learning c++ the problem was that i read the wrong book
<zacts>	adsjlkdk: perhaps try the realm of racket book
<zacts>	and how to design programs
<zacts>	then you can apply that knowledge to other implementation languages, once you want to make a production game
<zacts>	(remember: all just my own suggestions)
<wizard>	if it comes about c++, thinking in c++ is the best.
<zacts>	wizard: is thinking in c++ a book?
<wizard>	but i don't speak c++ well
<wizard>	yes
<zacts>	ok
<inphase>	i would look for a post-c++11 book for someone starting out now.
<zacts>	i think racket is cool because you'll learn lots of different paradigms
<adsjlkdk>	wizard: but thats from 2000
<zacts>	and good design ideas
<wizard>	bruce eckel's
<zacts>	i like stroustrupp's c++ programming books
<inphase>	enough changed that it would be making life harder to try to learn pre-c++11 c++ first.
<zacts>	there is that one with ducks or swans on the cover iirc
<zacts>	i own it, i read the first couple of ch
<zacts>	the latest edition covers up to c++-14 i think
<zacts>	and it's aimed at newbie coders
<wizard>	hmm, 2000 or not, for beginner it's still ok
<lucas05>	hi. i was asked to develop an erp software, but i need some designs advices. i start with thinking about the language that i'am most comfortably with (now) and it's java. i think about using spring as ioc container, but i'm partially stuck when i think about the ui.
<nizumzen>	the c++ programming language is a great book for c++ but you might need some pre-existing programming knowledge to get the best out of it
<zacts>	nizumzen: yes, thus the book i just mentioned
<lucas05>	has anyone developed an erp?
<zacts>	the c++ programming language is more like a reference, than a guide to teach programming / design concepts
<adsjlkdk>	ill just read c++ primer
<zacts>	but personally i feel that racket can be a good first language
<zacts>	i have the c++ primer, but it's not really designed for people who have never programmed before
<zacts>	i would go with the stroustrupp one with swans on the cover
<zacts>	let me find the actual link
<inphase>	wizard: beginners should not start out c++ using raw pointers, as was common in pre-c++11.  they serve virtually no purpose anymore.  i actually search my code for them now and treat every instance as a bug.
<zacts>	http://www.amazon.com/programming-principles-practice-using-edition/dp/0321992784/ref=dp_ob_title_bk
<zacts>	^ this book is better for newbie programmers than the c++ primer, imo
<inphase>	wizard: this is especially important considering how difficult beginners usually find the grasping of pointers.
<zacts>	and it's written by the language's inventor bjarne stroustrup
<adsjlkdk>	zacts: that ones from 2009 ill stick with c++ primer
<adsjlkdk>	i already started reading it anyways
<zacts>	adsjlkdk: what?
<zacts>	no the link i linked is from 2014
<zacts>	the 2nd edition is
<zuu>	inphase: what feature of c++11 obsoletes pointers?
<inphase>	zacts: i think that one is an acceptable choice, but probably not as straightforward as primer.  stroustrup goes on a bit more about lofty ideas like the impact of computers and discussing the experience of trying to write software, and i don't think that much text devoted to this early on is helpful to beginners.
<knobi_wan>	hi , double k = pow(2, 1 / 20);
<knobi_wan>		cout << k << endl;
<knobi_wan>	value becomes 1 but why ?
<knobi_wan>	how do i use roots in c++ :(
<zuu>	anything to the power of 0 is 1
<adsjlkdk>	knobi_wan: how are you learning c++
<zuu>	knobi_wan: cast your arguments to double :)
<zacts>	laters
<knobi_wan>	omg
<knobi_wan>	i was thinking its automatic
<knobi_wan>	:((
<knobi_wan>	thx
<inphase>	zuu: the obsolescence of raw pointers is brought about by smart pointers, which are helped a great deal by the new move semantics, and the associated concept of receiving an rvalue.
<rindolf>	zuu: hi! how are you?
<aidanh>	knobi_wan: / with integers is integer division
<knobi_wan>	mh ok lol another half hour wasted
<inphase>	zuu: it was possible to make smart pointers before, and smart programmers did.  but now smart pointers are much smarter, more efficient, and much more exception safe than before.
<rindolf>	zuu: you're back i see.
<zuu>	inphase: oh, ok. i thought you were on to something entirely different
<zuu>	hi rindolf :d
<rindolf>	zuu: what's nuu?
<zuu>	im good, rindolf, and well, i guess i came to pay a visit yea :)
<aidanh>	inphase: well, smart pointers are generally implemented with raw pointers, so they aren't exactly obsolete
<pomf>	ay
<zuu>	rindolf: got a new job. but apart from that, all is the usual :d
<zuu>	how about you? :d
<pomf>	aidanh, variables are also referenced with pointers if that makes it any better.
<inphase>	aidanh: inside the standard library they can be implemented with raw pointers.  (but they technically do not have to be.  they only have to behave the same.)
<rindolf>	zuu: i have a job interview tomorrow.
<rindolf>	zuu: and i had my birthday on 5 may.
<rindolf>	zuu: what is your new job about?
<zuu>	wooh, congrats on the bday :d
<aidanh>	pomf: what do you mean by 'referenced'?
<inphase>	aidanh: but what that means is that an application should not have any raw pointers in it except in edge cases when interfacing with a c library.
<zuu>	rindolf: my new job is about sonar software for subsea surveying stuffeys :d
<inphase>	aidanh: or, in the edge case of implementing a small container to replace a standard library component, such as making an alternate smart pointer.
<pomf>	aidanh, fetching or mutating the contents of a variable requires pointers in pretty much any architecture
<zuu>	all kinds of sensor stuffs interfacing with analysis software
<rindolf>	zuu: thanks!
<rindolf>	zuu: ah, sounds interesting.
<aidanh>	inphase: why does it mean that?
<aidanh>	pomf: oh, well yes of course
<inphase>	aidanh: because raw pointers come with no safeguards, and smart pointers can come with no overhead.  which makes sense to choose?
<zuu>	rindolf: you see what it is? its red :>
<zuu>	are you still doing perl cell solvers, rindolf ?
<inphase>	aidanh: it's also in c++11 now possible (with reference_wrapper) to store references in the standard containers, so one of the reasons people would have used raw pointers for no longer applies.  a reference_wrapper performance-wise should behave like a pointer, but without risk of being null.
<inphase>	aidanh: so there were a lot of features like that added to make pointer-free programming much more straightforward.
<rindolf>	zuu: do you mean freecell solvers?
<zuu>	ye
<rindolf>	zuu: it's not written in perl.
<zuu>	it isnt?
<aidanh>	inphase: ah, didn't see the connection with what you were saying previously; is there any protection against reference_wrappers being invalidated?
<inphase>	aidanh: if the owner of the data can go out of scope during the container's lifetime, one should use shared_ptr.
<inphase>	a reference does not share scope, only access, and thus should only be used in strictly nested scopes.
<aidanh>	inphase: ah; then i wonder what the value of that is, since null pointer bugs tend to be much easier to debug and fix
<inphase>	aidanh: because it wouldn't be a null pointer bug, it would be a dangling pointer.
<inphase>	aidanh: to get a "null pointer" you need to use shared_ptr with a weak_ptr, such that the weak_ptr is remotely invalidated when the shared_ptr is deleted.
<inphase>	aidanh: what the reference gives you is a guarantee that no null pointers will be passed, which means you don't need logic throughout your code to keep checking for null pointers.  (which, any sane person has every place a passed-in pointer is going to be dereferenced.)
<inphase>	the omission of a null pointer check is the big problem though, since it goes silently overlooked until the crash.  the reference on the other hand would trigger a compile error right away.
<aidanh>	inphase: alright, but there's no guarantee against dangling with other smart pointer types?
<inphase>	aidanh: unique_ptr cannot dangle because it is unique and moved.  therefore it is valid or null.
<inphase>	aidanh: and smart_ptr cannot dangle because it is smart, and the resource stays allocated until the smart_ptr's all go out of scope.
<aidanh>	inphase: smart here meaning reference-counted?
<inphase>	aidanh: so there are no dangling pointers with smart pointers unless you do something quite bizarre like try to assign one with casting.
<inphase>	aidanh: sorry, i meant shared_ptr there.
<inphase>	aidanh: so, yes.
<aidanh>	inphase: alright, thanks
<rindolf>	zuu: and i'm still working on it on and off.
<rindolf>	zuu: no, freecell solver is written in c.
<rindolf>	zuu: well  , it has some utility code in other languages.
<archilius>	hello world
<zuu>	i see
<archilius>	sup everyone?
<rindolf>	zuu: i have some other solvers in perl/etc.
<zuu>	i just recalled it as if you were doing loads of per stuffs :>
<zuu>	that might explain it
<rindolf>	archilius: hi! i'm fine, i have a job interview tomorrow.
<rindolf>	archilius: and i watched the third episode of fairy tail now.
<zuu>	what job are you interviewing for, tomorrow?
<zuu>	i mean, what's it about?
<archilius>	rindolf that's cool. all the best for the interview. hope you nail it.
<archilius>	rindolf and is fairy tail good?
<rindolf>	archilius: thanks!
<rindolf>	zuu: it's a software dev interview.
<rindolf>	zuu: s/interview/job/
<rindolf>	zuu: i'd rather not spill too many details.
<rindolf>	archilius: fairy tail seems ok so far i think.
<rindolf>	not sure yet.
<zuu>	alright :> but good luck nonetheless :>
<rindolf>	zuu: thanks!
<rindolf>	zuu: heh.
<zuu>	i wonder, do people celebrate christmas in your country, rindolf?
<rindolf>	zuu: the christians do, i think.
<rindolf>	zuu: jews normally don't.
<zuu>	:)
<zuu>	make you the perfect guy for working on secret santa tech :p
<rindolf>	zuu: i'm actually part of the anti-santa being an evilreindeer™ / etc.
<zuu>	nu-uuh! i recall that your evil twin randolf was the bad one :)
<zuu>	you were the good reindeer remember
<zuu>	have you been working on your scripts lately too?
<rindolf>	zuu: my scripts?
<rindolf>	zuu: scripts to do what?
<zuu>	err... plays?
<rindolf>	zuu: ah, screenplays.
<zuu>	:d
<rindolf>	zuu: no, i have not worked on them a lot.
<rindolf>	what's there is still on my site.
<zuu>	i see. it seemed like a fun hobby though.
<rindolf>	zuu: you don't recall well. randolph and rudolph are santa's goody-two-shoes reindeer and i'm their evil twin brother.
<zuu>	i guess my brain has suffered bit-rot :p
<rindolf>	zuu: bit-rot13!
<zuu>	hehehe
<impaloo>	how do i select everything between "$foobar: ( .... )" ? (e.g. everything between '$foobar: (' and the first occurrence of ')'?
<impaloo>	(regexp)
<impaloo>	./$foobar:\s?\(.*\)/m
<impaloo>	(ignore the initial dot)
<impaloo>	but that will select everything until the last occurence of the last ')'
<lseactuary>	hello. my company stores data in something called 'manhattan' (like vertica i assume). im unsure how to query the data - can i use sql?
<porkbonk>	that would match multiple closing parenthesis i think
<zuu>	let me slightly correct impaloo's suggestion: $foobar:\s?\(.*?\)  notice the added '?'
<impaloo>	zuu: what difference does the ? do in this case
<impaloo>	?
<porkbonk>	i really need to learn look-ahead/behind
<zuu>	it makes the search lazy instead of eager
<rindolf>	impaloo: you can use either [^\)]+ or .*?
<porkbonk>	i always use [^\)]* to match anything that is not ')'
<impaloo>	i keep re-learning lazy and look-ahead and all that regexp stuff, i forget about it a week later
<impaloo>	ugh
<impaloo>	thanks btw
<zuu>	also, use rindolf's thing, its muuuuch better :)
<porkbonk>	it's easier to read
<poio>	hi, i'm facing my first solo project as freelance, and now i have the application requirements. my next step should be to write a budget specifying timeline and price for each module... i'm totally lost, can anybody point me to any example document to follow?
<rindolf>	poio: well, i've read or heard a little about scheduling.
<rindolf>	poio: my father told me his mentor once told him to take the schedule estimate and multiply them by pi (~3.14).
<poio>	i have the schedule, i'm asking more about the literature, i don't know if i'm explaining myself since english is not my first language. should i just detail the development stages and the cost per module?
<poio>	anything more?, i already have a document with the details about the functions of the app
<rindolf>	poio: and then there's this - http://www.joelonsoftware.com/items/2007/10/26.html
<dg_subrata>	a lebel pixmap is not updated when set with xtvasetvalues function .. how to update this ?
<poio>	rindolf: thank you, i'm reading it right now.
<rindolf>	poio: you're welcome .
<rindolf>	dg_subrata: is this the xt toolkit for x-windows?
<dg_subrata>	yes
<thegladiator>	hi rindolf
<dg_subrata>	rindolf: yes
<rindolf>	thegladiator: hi, sup?
<rindolf>	dg_subrata: ah, i don't know a lot about it. :-(
<thegladiator>	rindolf: nothing =), been testing i3 wm
<rindolf>	thegladiator: ah, do you like it so far?
<thegladiator>	rindolf: yes good for power use, not flashy though
<thegladiator>	rindolf: which one do you use?
<rindolf>	thegladiator: i use kde 4 if i can help it (will look into plasma 5 soon), and i also sometimes fallback to jwm or xfce.
<thegladiator>	nice, will check plasma5
<adsjlkdk>	how long should it take me to read a chapter of a programming book
<adsjlkdk>	and do the exercises in the programming books
<adsjlkdk>	of one chapter
<rangergord>	adsjlkdk: about 3 or 4
<adsjlkdk>	3 or 4 wht
<adsjlkdk>	hours? days? minutes 30 minutes 40 minutes?
<rangergord>	adsjlkdk: yes
<adsjlkdk>	yes to which
<adsjlkdk>	hours or minutes or days
<rangergord>	i'm just messing with you. it depends on the book, the chapter, and so on
<rangergord>	dont bother mentioning the book, i wont know
<rangergord>	more importantly, why do you ask
<rindolf>	travelr: well, there's https://en.wikipedia.org/wiki/evil_demon where descartes concludes that an evil genius can convince you of many things, but he cannot in fact convince you that you exist while in fact you don't. therefore "i am conscious - therefore i exist."
<adsjlkdk>	rangergord: i feel like its taking me forever
<rangergord>	adsjlkdk: what language
<demi>	hi
<demi>	im lovato
<rindolf>	demi: hi.
<adsjlkdk>	rangergord: c++
<demi>	what the language more easy?
<demi>	java or php?
<rindolf>	demi: you're trolling.
<adsjlkdk>	but the language doesnt matter
<rangergord>	demi: php...but java can be used for more than just web stuff
<demi>	hmm
<demi>	no is trolling
<rangergord>	adsjlkdk: what's your goal? why are learning c++ in 2015?
<demi>	is doubt!
<reaga>	just had an idea.... how does debugging in haskell work?
<jjthomson1>	howdy. i'm interested on getting some advice regarding a programming language, i was thinking of learning python over the summer but my interests lay in websites, penetration testing ect. would i be better suited learning php/html?
<reaga>	oyu cant go line by line
<demi>	my app is small
<demi>	developed in java
<demi>	i need programmer
<adsjlkdk>	rangergord: isnt it good for making games
<rangergord>	jjthomson1: websites and penetration testing are 2 completely different domains. php/html for the former, python/other for the latter.
<travelr>	rindolf:  oi am not convinced (that ie xist)
<rindolf>	rangergord: https://en.wikipedia.org/wiki/demi_lovato
<demi>	lol
<rindolf>	travelr: "oi"?
<demi>	what the price of yours?
<travelr>	i think therefore i exist seems like bullshit in fact.
<demi>	to develop java
<rangergord>	adsjlkdk: no, it's good for making game engines. actual game designers then use the engines with easy languages so they dont have to use c++.
<rindolf>	travelr: why?
<demi>	i from brazil
<rangergord>	adsjlkdk: use unity if your goal is making games
<travelr>	rindolf: a program can be programmed to say "i think therefore i am"
<travelr>	rindolf:  it doesn't mean anything.
<rindolf>	travelr: well, if you're conscious, you must exist.
<demi>	$200 month
<travelr>	'tis all an illusion
<demi>	2 hrs per day
<rindolf>	travelr: how can you be conscious without existing?
<travelr>	rindolf:  i don't know if i'm conscious. maybe i'm not
<adsjlkdk>	rangergord: but im almost done with 1 chapter of c++
<travelr>	rindolf: how would i know if i'm conscious
<ssta>	travelr: cartesian existentialism exists so that first year philosophy students have something thast 'feels' real to learn.  or at least that was the case until tthe matrix when they introduces that fucking spoon
<rangergord>	adsjlkdk: yeah, so cut your losses! consider yourself lucky, i wasted 3 years on c++.
<rindolf>	travelr: do you have a sense of self?
<adsjlkdk>	and why is c++ so hard its like oop and everything else combined
<jjthomson1>	rangergord: sorry you're correct i was mixing my areas up there. by penetration testing i was suggesting website vulnerability. i used to play about looking for the vulnerable mysql databases when i was younger but i have taken a genuine interest in the subject now. apologies if i ask some dumb questions.
<travelr>	rindolf: i don't know. how do i know what a sense of self is
<demi>	is hard develop game similar candy crush saga?
<ssta>	demi: no...what's hard is the artwork and the marketting (don't fool yourself, neither of those are cheap or asy)
<rangergord>	jjthomson1: no problem...python is in fact used to automate penetration testing. maybe other scripting languages too (look for whatever metasploit and such  are written in). it can also be used for web stuff, but php is the most popular for web stuff.
<rindolf>	travelr: it's hard to define consciousness/sentience.
<adsjlkdk>	rangergord: so should i learn c?
<demi>	i need someone to develop game per android
<demi>	i have idea cool
<rangergord>	adsjlkdk: are you trolling me? what the hell
<adsjlkdk>	rangergord: what do you want me to learn then
<ssta>	demi: you have capital?  there are plenty of good android developers who work for cash
<travelr>	rindolf: therefore it's hard to prove i exist.
<adsjlkdk>	c#?
<demi>	only $200 month
<demi>	but
<rangergord>	adsjlkdk: i told you already. <rangergord> adsjlkdk: use unity if your goal is making games
<demi>	what the price?
<demi>	to develop
<ssta>	demi: umm, $200 *might* buy tou about 3 hours of someone's time
<demi>	per day?
<demi>	or only monthly?
<rangergord>	unity can be scripted with c#, python, or javascript. pick your favorite (ideally c# because it has the most documentation/examples).
<ssta>	no, once
<juliann>	3 hours
<demi>	ahh understand now
<demi>	lol
<demi>	=(
<ssta>	to be fairm, you can probably get someone at least semi-competent for about $4-600/day
<demi>	the user explode box of same color
<demi>	is sux the game
<demi>	more i think that no
<demi>	ok ssta
<rangergord>	demi: gotta do everything yourself. anyone on irc is between age 26-40, so you can't afford them
<_blizzy_>	i'm 17. .-.
<rangergord>	with some exceptions i guess :p
<_blizzy_>	:p
<ssta>	demi: you might find some student who'll do it for a share of the profit maybe...not there there's likely to be any profit, but hope springs eternal
<zuu>	travelr: suppose you dont exist. if that's the case, you couldnt possibly ponder wether you exist. therefore you have to exist. at least for the time being :)
<zuu>	easy peasy proof :>
<rangergord>	_blizzy_: out of curiosity how'd you find out about irc? i thought all you kids used snapchat or whatever
<demi>	ok thank you
<ssta>	for every rozio/angrybirds out there, there's 10,000 who made zero or less
<_blizzy_>	rangergord, idk really. i don't use snapchat.
<ssta>	umm, rovio?
<ssta>	roxio?  something like that
<rindolf>	good night , everyone.
<travelr>	zuu: well this is about different type of existing. like "me" what is the ego.
<bizarrefish>	 i'm 23, been coming here since i was around 15. discovered it through open source projects saying things like 'ask for support on irc'
<rangergord>	adsjlkdk: unity is the easiest/most productive way to develop an indie game. and you can put the game on every platform (including mobile appstores). trust me, i've done the research. follow my suggestion and it will be the best path.
<travelr>	zuu:  otherwise my wristwatch, it ponders what the time is, metaphorically, and gives answers. but it has no ego
<jjthomson1>	rangergord: thank you for the info again, i just read that metasploit was initially written in perl, then rewritten in ruby. would it be of great help to dedicate some time to learning ruby?
<travelr>	bizarrefish: , we can't program her
<demi>	learn algoritms is hard?
<adsjlkdk>	rangergord: stupid question: does it work on gnu/linux operating systems
<zuu>	travelr: well, the very fact that you wonder if you, yourself, is in or out of existence, is a pretty clear indication that your ego exists too.
<rashad>	the guys at #ai appear to be sleeping: i have implemented two versions of the mtd-f algorithm to find the next move for a variant of chess with only pawns and rooks, and the mtd-f performed poorer than pure alphabeta with memory.
<rashad>	what is wrong? is it the nature of the game?
<rashad>	here is my code: http://hastebin.com/ronogipeyi.avrasm
<zuu>	a watch wouldnt even begin to consider it's own well being. at least not now nor anytime soon :>
<ssta>	mine does
<ssta>	it talks to me
<zuu>	hehe
<ssta>	tells me to do things
<bizarrefish>	ssta: apple watch?
<ssta>	at leastthe watch only tells me to do good things
<rangergord>	adsjlkdk: yes. works on everything under the sun. including webgl.
<ssta>	my belt tells me to kill people
<bizarrefish>	ssta's watch: 'buyyy mooorrr unbearable shiiittt'
<rangergord>	adsjlkdk: i mean the actual games work on lunix. the ide itself, i don't know. it might be windows/mac only.
<ssta>	bizarrefish: fuck no...i might be certifiablhy insane, but i'm not so far gone that i'll sell my soul to steve jobs' ghost
<adsjlkdk>	rangergord: so does that mean i wont be able to compile the code in lunix?
<travelr>	zuu: nope it's not a clear sign at all. imay just wonder because i was given a task to figure it out and i lack inputs to decide.
<ssta>	adsjlkdk: unity3d stuff can be compiled on linux
<adsjlkdk>	ssta: how
<demi>	fuck
<ssta>	i think i'll email mark shuttleworth and rant at him about how much i hate what he's done to ubuntu
<demi>	http://www.twitch.tv/dreamhackcs
<travelr>	zuu: we all are just machines. and honestly that sense of drama when we contemplate our own mortality or the pain of losing those we love is just an instinct, a mechanism of self preservation. it's just aprogram, it's nothing else. there is no self. there is no ego.
<bizarrefish>	ssta: please post critique here, so that i may probably agree with it.
<travelr>	zuu: therefore  we are not.
<travelr>	anyway let's discuss modular code.
<ssta>	adsjlkdk: http://lmgtfy.com/?q=unity3d+linux
<zuu>	well, we're the machines who defined the concept of self and ego, and we defined those concepts to describe our thoughts instincts and actions.
<zuu>	travelr: so, regardless, we have egos :)
<bizarrefish>	i don't see why 'just a' needs to precede 'program'. a program is a program. can be wonderfully complex. hilariously simple. evil. good.
<demi>	hahhaha
<demi>	crazy the lmgt
<zuu>	hi bizarrefish it's almost as if i used to know you.
<travelr>	zuu: no that's lke saying because we defined soul and ghosts, there are ghosts.
<bizarrefish>	zuu: and i you...hmm
<adsjlkdk>	ssta: i dont want to use wine
<travelr>	zuu:  we define things based on what we wish there was. like god.
<zuu>	travelr: no, its liek saying, that because we defined it, we know what it means.
<travelr>	zuu: it's not a proof any of it exists.
<travelr>	zuu you don't exists. it's a mass delusion
<bizarrefish>	zuu: i'm probably that guy you're thinking of. but now i have a beard.
<zuu>	bizarrefish: :d
<electrojustin>	who honestly thought "you know what ubuntu needs? a custom package manager. that will get people to switch back"
<rangergord>	adsjlkdk: that's right, no lunix support. http://en.wikipedia.org/wiki/unity_%28game_engine%29
<demi>	is hard i enter in usa?
<ssta>	adsjlkdk: http://blogs.unity3d.com/2012/11/22/linux-publishing-in-unity-4-0/
<bizarrefish>	electrojustin: tbh, it was mint doing custom things which led people to it :p
<bizarrefish>	mint just tried to make sense! and it succeeded!
<electrojustin>	and ubuntu failed
<bizarrefish>	also, it tried to not be full of bugs. it succeeded mostly.
<rangergord>	ssta: he means using the unity ide in linux
<zuu>	beards are cool, i wish i had a nice one :>
<rangergord>	adsjlkdk: just use a windows vm
<bizarrefish>	mint = ubuntu - bugs - ridiculous hobby horses
<demi>	windows go be service
<electrojustin>	unity, weird dependency issues, lots of strange opacity. and now some new package manager
<rangergord>	bizarrefish: more like mint = ubuntu - crappy ui + some bugs
<ssta>	electrojustin: ubuntu has a custom package manager?
<electrojustin>	ssta: it's going to
<ssta>	they're dumping dpkg?
<bizarrefish>	rangergord: i guess my hardware combo is a lucky one. (since i worked as firmware engineer, i seem to have trouble summoning the strength to build up a gentoo/arch system at home)
<electrojustin>	ssta: it's called snappy, apparently https://plus.google.com/+willcooke/posts/axfou3n1ezo
<bizarrefish>	(i went over to the lazy side of prepackaged distros)
<pyon>	electrojustin: let's see how crappy it'll turn out.
<demi>	+(
<adsjlkdk>	rangergord: ok. but how should i learn to use unity
<ssta>	ah, it's aimed at the enterprise market looks like
<adsjlkdk>	im sorry for the stupid questions
<electrojustin>	the way they had the repos set up in the past, it'll be hard to exceed that level of shitty. i have faith in ubuntu's ability to get shittier though
<bizarrefish>	this is the kind of stuff i dislike - people rebuilding things because they cba to 'git clone' and do some reading.
<demi>	today, fedora or ubuntu or other?
<electrojustin>	i think at one point every application on my system listed the weird splash screen as a dependency. wtf, why?
<bizarrefish>	similar to the way people insist on building kernel-space bridges to do things in user space because it makes them magically better.
<demi>	the irc dead
<electrojustin>	wait what's this about kernelspace bridges?
<bizarrefish>	electrojustin: things like fuse and uio
<ssta>	some of that makes sense (fuse for example)
<rangergord>	adsjlkdk: first, learn the basics of c# (the really simple programming parts, such as flow control, classes, etc), then read the documentation on unity. there's also youtube videos/tutorials.
<bizarrefish>	fuse is useful in some situations, but the ntfs-3g driver should be in kernel. only reason it can't be is because of legal crap
<electrojustin>	that's almost as bad as windows making drivers run in userspace and giving them direct memory access
<bizarrefish>	electrojustin: do they do that?
<electrojustin>	bizarrefish: supposedly, yes
<ssta>	things like sshfs should be in userspace...
<bizarrefish>	heh
<electrojustin>	that might have changed in 7 or 8
<ssta>	and smb/cifs
<demi>	bye
<bizarrefish>	ssta: how about nfs?
<demi>	windows is beeter!
<demi>	ahhaha
<ssta>	bizarrefish: an interesting question.  depends what it's for.  if it's for a user specific thing then yes, for a asystem thing no.  so if you nfs mount /usr/share for example, that should be in kernelspace.  if you want to nfs mount /home/files/somewhere then that should be in userspace
<bizarrefish>	electrojustin: linux provides that functionality too. direct hardware access, in fact. how'dya think xorg talks to the video card? :p
<ssta>	bizarrefish: xorg runs as root and derops privs once it maps the hardware
<electrojustin>	"how does xorg talk to the video card" i'm really hoping the answer is "through a carefully conceived api" but something tells me it isn't
<reaga>	anyone have any good videos explainig git
<reaga>	i want to know why it has a staging area and so on
<bizarrefish>	ssta: i'm not sure i follow the case for doing /usr/share in kernel space and /home/files/somewhere in userspace. the fact that it's needed at bootup shouldn't affect it.
<reaga>	i dont want a manual, i want to understand why it is the way it is
<bizarrefish>	electrojustin: the file /dev/mem is the physical memory space of the machine.
<ssta>	bizarrefish: if it's /usr/share what user would mount it?  it belongs to the system, not to a user
<bizarrefish>	electrojustin: xorg goes through the pci config space (using something it calls libpciaccess)
<bizarrefish>	bizarrefish: root could mount it, just like root runs udev, etc...
<ssta>	bizarrefish: of course, ifr you go the micerokernel route then virtually everything is in userspace
<bizarrefish>	ssta: ^
<ssta>	sort of
<electrojustin>	 i was under the impression access to /dev/mem wasn't just freely handed out
<bizarrefish>	ssta: the microkernel route definitely has it's niceness aspect, but for performance, you end up needing to export all the unsafe functionality from the kernel, making the the ipc system an unnecessary layer of bureaucracy.
<ssta>	bizarrefish: udev is a different case (and is mainly kernelspace)
<bizarrefish>	electrojustin: you have to be root, that's the criteria afaik
<electrojustin>	yeah
<electrojustin>	that's not too terrible then
<ssta>	what udev replaced was largely userspace...so a sgtep backwards :)
<bizarrefish>	electrojustin: they are moving toward a nicer way of doing it (kernel modesetting)
<bizarrefish>	ssta: udev is in kernel space?
<bizarrefish>	the kernel emits events and udev binary picks them up. at least, that's what i thought happened.
<ssta>	bizarrefish: the bits that matter, yes.  how else do you think it provides access to the hardware?  anything that interacts with hardware is at leaqst somewhat ion kernelspace
<bizarrefish>	ssta: udev doesn't really interact with hardware so much as feed off information passed to it in those events, and also information exposed through /sys.
<ssta>	the old /dev functionality was just a bunch of files with specfial markers that allowed for an interface with the kernel.  udev requires more information to be passed around
<bizarrefish>	 /dev is still that, though. udev just creates/deletes those files (with mknod)
<ssta>	yes, but now with an extra bunch of information back and forth
<ssta>	as long as it all works i don't really care.  i *like* not needing root for some stuff though (like smb mounts)
<bizarrefish>	i may be a bit behind the times (systemd is still new to me) but i thought udev's role was pretty much: naming things, persistently naming things, handing firmware to the kernel when a device appears.
<ssta>	bizarrefish: you don't call that interaction with kernelspace?
<ssta>	the devices stil belong to the kernel
<bizarrefish>	ssta: any system call is interaction with kernel space :p . i just wouldn't say that udev is 'in' kernel space.
<ssta>	bizarrefish: the files it creates are
<ssta>	udev doesn't change the fact that /dev/sda is still in kernelspace
<bizarrefish>	 /dev/sda , the device node, is located in a filesystem just like any other file
<bizarrefish>	usually tmpfs,  or more recently, devtmpfs. but could easily be sitting on your hard disk.
<ssta>	udev is of type devtmpfs, which is a kernel driver
<bizarrefish>	devtmpfs is basically a tmpfs which is preloaded with default device nodes. was an attempt to simply udev's experience.
<bizarrefish>	it's still the userspace program udev which adds/deletes them. devtmpfs is really a bit of a hack in my view.
<ssta>	okay, you're right.  doesn't change that the nodes are still interfaces to the kernel
<bizarrefish>	ssta: absolutely. and lovely ones they are at that :)
<ssta>	the older i get, the more i think any time i have to type "sudo" is a loss
<nullentity>	so how about dat agile development
<nullentity>	i'm coding for my friend's startup and i need to learn more about project management
<darkelement>	guys what would be something cool to have constantly being sent to the serial port of an arduino? i am trying to think of a way to use that to display a cool live feed of some data, but can't think of any cool things to send to it.
<bizarrefish>	ssta: hehe, too true bout dat sudo
<nullentity>	darkelement, i had an idea before for an analog guage of unread emails
<darkelement>	nullentity: so it would just display the new unread emails?
<bizarrefish>	what you want is a password protected user which can roll back the filesystem etc.
<darkelement>	not bad idea
<nullentity>	i have a servo lying around too, i've just been too lazy to do it
<darkelement>	servo?
<bizarrefish>	darkelement: temperature sensor
<nullentity>	no what
<darkelement>	oh yea
<bizarrefish>	even better, humidity sensor!
<nullentity>	it's a motor
<nullentity>	oh
<darkelement>	alrighty
<nullentity>	i thought you were responding to his question lol
<darkelement>	there already is a temp sensor
<darkelement>	yea nullentity did you get thestarter kit as well
<nullentity>	no, i've had a couple arduinos lying around and some random parts i picked up from friends
<nullentity>	wow i have 3 arduinos and a pi now and i don't use any of them lol
<darkelement>	o_o
<bizarrefish>	darkelement: could publish the data to an mqtt broker or suchlike
<bizarrefish>	nullentity: i have this trouble. recently moved house and haven't got set up here. my good kit (oscilloscope, power supp) is still at my parent's place (i moved out about 4.5 years ago :p), and i'm gonna be moving again in a few months. no point in starting anything.
<nullentity>	is it that hard to move an oscope and power supply? :p
<darkelement>	bizarrefish, what do you mean? i'm unfamiliar with this
<darkelement>	an "mqtt broker"
<bizarrefish>	nullentity: when they're in scotland and you aren't
<nullentity>	oh yeah, that'd be a problem
<darkelement>	so we've got a mail display, any other ideas?
<darkelement>	*unread mail8
<bizarrefish>	darkelement: it's a data-transport protocol that's used a lot in the 'internet of things'. we use it a lot at work. you have nodes 'publishing' to 'topics', which are strings, and 'subscribers' can 'subscribe' to those topics. you could have a 'temp_sensor' topic.
<darkelement>	hmm, i think i understand
<bizarrefish>	the 'broker' is the central server which manages all the topics and such.
<bizarrefish>	'mosquitto' is a popular one
<darkelement>	i don't really care about the temperature, but that's cool
<darkelement>	hehe
<bizarrefish>	heh
<bizarrefish>	can certainly be used for other stuff. just a nice way of moving data around. there are more sophisticated protocols like activemq, but mqtt is, i feel, a nice middleground.
<darkelement>	alright
<bizarrefish>	i'm delivering a workshop on mqtt amongst other things on thursday, so you've actually just been practised on. hah!
<nullentity>	bizarrefish, do you know anything about can? does that serve a similar purpose? (i only know the basics about it)
<darkelement>	btw do either of you know how to send data to an arduino's serial port?
<bizarrefish>	nullentity: can is really a small scale networking technology. think of it more like ethernet.
<bizarrefish>	used a lot in industrial stuff. i'm not overly familiar with it.
<bizarrefish>	darkelement: from inside the arduino?
<nullentity>	i was on my high school's first robotics team and i think our escs used can
<darkelement>	bizarrefish, no, like sending data from a program on my computer to it
<nullentity>	i believe there's a virual serial device installed for it, isn't there?
<bizarrefish>	darkelement: oh right. i've only ever used an arduino due. when plugged in, that produced a serial port.
<bizarrefish>	either /dev/ttyusb0 (or similar) if on linux, or com5 (or similar) on windows
<darkelement>	bizarrefish, ah. i can view the serial port with an external program, i just don't know how to send data, to it.
<bizarrefish>	darkelement: you can use a terminal emulator or putty to do that.
<bizarrefish>	*a terminal emulator like putty
<vendoo>	hello :)
<darkelement>	ohh, you can just direct connect
<darkelement>	like with ssh or other
<bizarrefish>	http://www.chiark.greenend.org.uk/~sgtatham/putty/download.html
<darkelement>	i haveputty
<vendoo>	(in case someone doesn't know, i'
<vendoo>	i
<vendoo>	er
<nullentity>	putty is amazing
<vendoo>	i'm vendu with my secondary nick :p
<darkelement>	next question: how can i send data over ssh with javascript/python/other
<darkelement>	or in putty, you know
<nullentity>	it's over serial, not ssh
<bizarrefish>	darkelement: it's got a serial mode. figure out what the virtual serial port the arduino creates is called, put putty in serial mode, give it the port, have fun.
<darkelement>	ok, and i can just run a program in putty and it will send the output to the port?
<darkelement>	i haven't used putty extensively.
<bizarrefish>	darkelement: no, putty will let you type directly into the port
<vendoo>	what's up people?
<bizarrefish>	you can write a program which will open the serial port and send things to it
<nullentity>	apparently there's a pyserial library
<bizarrefish>	yeah, like that
<nullentity>	(i literally just googled python serial write)
<bizarrefish>	heh
<darkelement>	nullentity, that's right i forgot
<nullentity>	i used c# the last time i did something like that which was pretty simple
<vendoo>	nullentity: i've done such stuff in c, it's _ery_ easy :)
<darkelement>	only problem is that i want to send the data from a phantomjs(.js) file
<vendoo>	_very_*
<darkelement>	i will see what i can do
<vendoo>	but you need at least temporary root privileges
<vendoo>	(to use ioperm() to set permissions for some i/o ports)
<bizarrefish>	darkelement: you on windows/
<bizarrefish>	?
<nullentity>	darkelement, looks like you use phantomjs with nodejs
<darkelement>	yea, but i have vms for linux
<darkelement>	nullentity, really? nodejs can connect to serials as well?
<nullentity>	then there's a node-serialport package
<nullentity>	nodejs can do everything :d
<darkelement>	lol
<darkelement>	alright awesome
<nullentity>	honestly i think the most important skill to learn about programming is how to search effectively
<darkelement>	i've just had trouble with javascript sending output to it.
<nullentity>	js running in a browser i don't believe would be able to do that
<darkelement>	didn't think to try looking with nodejs, since ihave'nt done much with it.
<ams>	what are you doing?/
<darkelement>	looking forward to learning more about it and using it.
<nullentity>	ams: trying to write to a serial port from js
<nullentity>	he's using phantomjs so i assume he's scraping a web page
<ams>	... why from js?
<darkelement>	browser->js->nodejs->serial port->arduino
<ams>	seems like .. idiotic thing to do.
<darkelement>	i am using phantomjs to scrape data
<darkelement>	he is correct.
<bizarrefish>	can't see any hugely nicer way to do that
<ams>	doing what exactly?
<darkelement>	phantomjs is pretty awesome :d
<nullentity>	give an overview of the whole system. what's the browser for? what'll trigger data being sent to the arduino?
<darkelement>	ams: at the moment, it seems i will be doing it to tell me when i've got mail.
<ams>	can't you just use biff?
<ams>	or comsat ..
<bizarrefish>	ams: windows
<darkelement>	nullentity, browser is so i know when i have mail or whatever i decide to do, and whenever the value of unread emails changes, it will send data to the thing
<darkelement>	if it works in a vm, i can use that as well
<ams>	bizarrefish: ok .. and?
<nullentity>	what i was looking into before was actually having the arduino log in to webserver via imap
<nullentity>	and get the number of unread emails
<nerdherd>	he
<nerdherd>	hey
<nullentity>	oh yeah, nvm that was with an ethernet shield
<ams>	... why don't you just log into the imap server directly and check how many unread messages?
<nullentity>	but yeah i'm sure having a nodejs script do that should be pretty easy
<nullentity>	https://github.com/mscdex/node-imap hey look, like i said, node does everything :d
<nullentity>	ams, i understand where he's coming from, he's trying to use the stuff he knows
<ams>	i don't.
<twey>	that is a truly horrible api
<nullentity>	actually yeah, it looks like that is lol
<bizarrefish>	ams: if the project was next going to scrape something other than emails, an email-specific solution would be of no use. if general web-accessible-stuff-to-arduino is the problem, scraping is probably the appropriate solution
<twey>	you have to attach event handlers to the input stream…?
<darkelement>	i may just do a the button monitor instead
<ams>	bizarrefish: and are you planning on scarping other things?
<darkelement>	that way it would get data every second
<darkelement>	instead of waiting for an event
<nullentity>	but that's already been done :(
<darkelement>	ehh, it's alright
<ams>	seems like this is like 10 lines of bash ..
<bizarrefish>	ams: i'm not, and i don't know if darkelement is (he's the one doing the project)
<darkelement>	i get notifications on my phone when i get emails anyway
<ams>	bizarrefish: then why design for what might never occur?
<nullentity>	http://www.reddit.com/r/thebutton/comments/35ho5v/psa_moderators_of_any_buttonrelated_subs/ holy shit how is there this much drama
<twey>	‘an extremist gray-only organization’ — haha
<bizarrefish>	ams: i was coming up with reasons someone would want to take that path. if someone told me to write a mail-responding application, i would probably take the biff approach
<nerdherd>	heyheyhey
<darkelement>	lol
<ams>	bizarrefish: maybe add a gui on top of it, and design for corba, and sql access at the same time.
<ams>	bizarrefish: oh, and cross portabiulity, and redudnancy while you are at it ..
<bizarrefish>	ams: if i was messing around, trying to get all kinds of data off of the web, setting up that platform would allow for quick experimentation with different kinds of data.
<ams>	yeah, 10 lines in bash.
<ams>	or whatever.
<pyon>	i have made a simple garbage collector that compacts a heap implemented as a single memory block. now i want to implement a similar garbage collector to compact a heap implemented as several memory blocks. any ideas? https://github.com/eduardoleon/pyon/blob/master/plum/memory.rs
<bizarrefish>	ams: i'm familiar with yagni, and wouldn't build such a system in production, if the problem was to respond to emails, if that wasn't clear.
<darkelement>	just gonna work on sending easy stuff before stepping up to mail
<nullentity>	ams, don't forget the unit testing too
<ams>	ha
<adsjlkdk>	does anyone think c++ is a waste of time
<ams>	yeah .. and write a 10k page specificaion of the thing before writing a single line.
<bizarrefish>	ams, nullentity, screwit, lets make this monster com-visible and thread safe!
<reveredge>	pyon, what kind of file is .rs?
<nullentity>	i don't like c++, i think templates make doing simple stuff give extremely complicaated errors
<pyon>	reveredge: rust source code.
<bvcm>	rust
<rangergord>	adsjlkdk: depends on how philosophical you wanna get. i mean, no knowledge is useless, but if your goal is career/jobs, then you can pick stuff that makes you more money in less time.
<pyon>	reveredge: but my rust code reads like transliterated c.
<bizarrefish>	before rewriting the whole thing in ruby so we can make a dsl without specifying a domain :p
<rangergord>	also ease-of-use
<bizarrefish>	rangergord: best answer.
<bizarrefish>	props to you sir
<ams>	adsjlkdk: i think it is a waste of time.
<rangergord>	bizarrefish: i'm a c++ dev trying to jump ship, i know the feel :p
<reveredge>	pyon, yeah it does, just had a look
<rangergord>	thankfully my company's next app will be in c#
<adsjlkdk>	ok i guess i wont learn c++
<rangergord>	based on my suggestion
<ams>	adsjlkdk: why not?
<adsjlkdk>	you guys say it sucks
<pyon>	reveredge: idiomatic rust code is not like this, though. i know how to write idiomatic rust, but what i'm doing requires using unsafe stuff. :-p
<bizarrefish>	rangergord: on-and-off c++ person here. last thing i learned about was rvalue references. im sure the guys in ##c++ would eat me alive :p
<pyon>	adsjlkdk: just look at job ads.
<ams>	adsjlkdk: some people like it, some people don't.
<pyon>	adsjlkdk: and learn whatever seems like it will land you on interesting jobs.
<rangergord>	adsjlkdk: it doesn't suck, it's just not a smart choice. it's a great language for certain use-cases. just not the sort of stuff you'll write, statistically-speaking.
<ams>	adsjlkdk: learn it, and make your own judgment.  you didn't ask _why_ we might dislike it.
<adsjlkdk>	why do you guys dislike it
<ams>	adsjlkdk: i.e you are listening to a bunch of blubbering anonymous idiots, and taking their word as gospel.
<rangergord>	everything is 10x more complex and 10x harder. and the standard library sucks. they didnt have threading until 2011's standard, that's how far behind it is.
<bizarrefish>	adsjlkdk: it's not about disliking it (for me, anyway), it's just huge.
<pyon>	adsjlkdk: because it is utterly unsafe, and it takes 10x the effort to get the same degree of abstraction you get in something like haskell.
<rangergord>	ams: and you're fanboying or a deluded academic
<ams>	rangergord: i am?
<adsjlkdk>	rangergord: whats your second favorite programming language
<bizarrefish>	adsjlkdk: as rangergord says, it's more likely jobs will want something else. still exists, and you'll still find work with it (well paying work, certainly).
<rangergord>	ams: the dude is a novice programmer, why the hell would anyone tell him to learn c++? it's like someone asking "what 2nd language should i learn" and you answer "bulgarian".
<rangergord>	meanwhile the people that'll actually get a job speaking that 2nd language are speaking spanish, chinese, etc
<ams>	rangergord: immensly bad comparison.
<bizarrefish>	adsjlkdk: don't get me wrong, it's not 'disused', but it's not exactly 'hot'. learn c first.
<nullentity>	rangergord, holy shit as a c++ noob, when i see errors that bring me into stl source, holy shit the simplest things are so amazingly complicated
<ams>	rangergord: bulgarian isn't that hard of a language, there are about 8 million people who learn it as their first language.
<rangergord>	bizarrefish: the sort of companies that still hire c++ devs (high-performance apps), won't take juniors. they'll want accomplished devs already. so he'd be fucked.
<ams>	rangergord: if he wants to learn bulgarian, then he should.  no matter if it is his first, second, or billionth language.
<bizarrefish>	adsjlkdk: nullentity use clang if you aren't already, the errors are muuuuch much nicer
<rangergord>	ams: you're right, i should've said "thai". cause then it's pointless and hard.
<adsjlkdk>	ams: but maybe bulgarian wont make me $$ he says c# will
<bizarrefish>	nullentity: ^
<ams>	bizarrefish: gcc errors are of similar, if not better quiality.
<pyon>	nullentity: reimplementing the standard library containers is what made me really learn c++.
<rangergord>	ams: your statement is only correct in a world where we're all immortal vampires.
<ams>	rangergord: do you know thai
<ams>	rangergord: ?
<rangergord>	ams: no, but it's probably harder than bulgarian to a westerner
<ams>	rangergord: why do you think that?
<pyon>	nullentity: without reading the original source. (because back then i only had access to microsoft's implementation, and it sucked.)
<ams>	rangergord: and which westerner?
<nullentity>	i'm a ms dev. i'm working for my friend's startup and we're part of bizspark so yaaay tons of free ms stuff.
<rangergord>	ams: the really alien-looking script
<nullentity>	i use c# when i can and i really really enjoy it
<hyuke>	it's rather annoying that c++ improves on c in so many ways at the expense of complicating things unnecessarily
<rangergord>	ams: the fact that they got like 5 different pronunciations of "a"
<pyon>	hyuke: rust improves on c++, while simplifying things enormously. :-)
<rangergord>	each meaning a different thing
<ams>	rangergord: so is cyrillic, and finnish/estonian looks totally weird as well.  how about polish? which is ranked as the most difficult language to learn in the world.
<nullentity>	but i'd be sooo lost developing on linux without a sexy ide like vs
<bizarrefish>	adsjlkdk: c# is a pretty safe bet at the moment. it's pretty much multi-paradigm, the standard tools are of good quality, lots of support, runs on linux.
<pyon>	nullentity: there's emacs.
<nullentity>	it's something i should learn but i don't really need
<pyon>	nullentity: which is pretty fucking advanced.
<ams>	rangergord: thai grammar is quite simple.
<pyon>	nullentity: but, if you want to use a traditional ide on linux, you can.
<hyuke>	pyon: maybe i need to give rust a try. once i finish this project i am working on for a friend, i have told myself that i will never use c or c++ again for a personal project
<pyon>	:-)
<rangergord>	ams: dude i'm not looking to get lost in the technical accuracy of my analogy. it's just not a smart choice to learn c++ 15 in 2015. not if care about: a) writing things you want people to use, and b) finding a job
<rangergord>	c++ *can* be used for those things
<ams>	rangergord: your analogy is taken out of your ass, and totally stupid.
<rangergord>	but the odds are stacked against you
<ams>	c++ is as easy to learn as any other language.
<rangergord>	ams: search craigslist for job postings and get back to me
<pyon>	ams: um, no.
<ams>	it might be harder to master, since it is a complicated and big language
<pyon>	ams: i was going to comment how much i agreed with what you had said so far, until you said "as easy to learn as any other language".
<ams>	pyon: do not confuse learning, and mastering.
<reveredge>	ams, but if are in search of job, c++ is not a good option to go for
<rangergord>	ams: and after you conquer the language, now you got an ecosystem wholly inappropriate for high-level apps.
<martinhath>	ams: it's _impossible_ to master, and pretty hard to write anything without shooting yourself in the foot a milion times
<ams>	if you ignore most of the cruft in c++, it is a relativley simple language to learn (maybe not understand fully, and what not).
<ams>	martinhath: so is c.
<hyuke>	ams: i think much of the problems with c++ stem from the people who write c++. on that note, c++ makes it easy for people to write horrible code
<pyon>	ams: i'm talking about basic learning. i've found that concepts like ownership an references don't come naturally to most. if they did, people would use linear logic and static analysis, not gdb.
<martinhath>	ams: although c is a much smaller language
<bizarrefish>	not wishing to feed the troll, i do wish to comment that for formal languages, 'learning' in my mind means becoming familiar with all the forms in the grammar. this, in c++, is extremely hard.
<ams>	martinhath: possibly.
<ams>	bizarrefish: please stop attacking people and calling people names,
<nullentity>	oh man when i was on my high school robotics team, we made a scantron program. we had a memory leak that'd leak every ~200mb scan.
<martinhath>	ams: no, it literaly is. just look at k&r vs stroustrup, page count wise
<pyon>	bizarrefish: never mind the grammar. even if you simplified the concrete and abstract syntaxes, you'd still be left with a messy semantics.
<nullentity>	our mentor was the one that implemented the scanning because it was over com and a huge pita
<ams>	martinhath: k&r is not what defines c.
<rangergord>	say what you want about java as a language, at least it's popular. it's like english: mediocre language, but you can speak it all over the world.
<ams>	martinhath: i never said that.  but it is not a trivial, or small language.  stdatomic.h is immensly fucked up, the threads.h stuff is also totally fubar ..
<bizarrefish>	rangergord: true stuff dat
<martinhath>	one could argue that the reason c is simple is because the language itself offers very little.
<ams>	martinhath: i know nobody who even uses that shit .. or just take a look at tgmath.h ..
<martinhath>	ams: i thought we were talking about c++ as a first langugae?
<rangergord>	i wish they'd used java in uni instead of c/c++. maybe then more than half my classmates would have programming jobs.
<hyuke>	martinhath: that being said, the project i am current working on for a friend is being done in c++ because sometimes it's nice to have classes and to have arrays that know their own size in the standard library
<reveredge>	i have not been in touch of c# lately. though learned basics when i used to work in vs
<bizarrefish>	rangergord: they used java in my uni, people still sucked :p
<ams>	martinhath: yes, and why not? there is absolutley no reason to pick it as a first langauge.
<bizarrefish>	rangergord: tended to copy off of eachother
<ams>	first languages don't really matter much ... learning them does.
<adsjlkdk>	since we've all agreed c# is the best whats second best
<ams>	and it takes time to learn a language, no matter what.
<ams>	adsjlkdk: well, i disagree.
<rangergord>	bizarrefish: but they could claim they've used java on their resumes. half my classmates were unemployable upon graduating (2011). basically everyone that didn't learn useful programming languages on their own time.
<martinhath>	ams: but you do say that you'd rather learn c++ over c as a first language?
<martinhath>	ams: i'm not sure what we're arguing
<ams>	martinhath: neither, they both suck.
<bizarrefish>	adsjlkdk: javascript, i'd say. in terms of wide-use and features available and amount of stuff being developed in it
<_w_>	adsjlkdk: no trolling
<textmode>	rangergord: did you just call c a useless language?
<pyon>	martinhath: how about neither?
<martinhath>	ams: i'd say that depends on what you want to do
<martinhath>	pyon: i'm not saying c is the ideal first language
<rangergord>	textmode: in the context of my story. for a junior looking for his first job, it is. no one's hiring juniors in native languages.
<ams>	martinhath: "learn programming"
<martinhath>	pyon: but it offers a few things (ie. pointers) that are pretty valuable to know
<martinhath>	ams: then i'd say c is pretty decnt
<hyuke>	rangergord: people are, but you need something more than a computer science background
<martinhath>	decent*
<_w_>	rangergord: i've yet to see a programmer that's unemployable (due to lack of skill atleast - some other personal factors can make someone inelligible)
<bizarrefish>	adsjlkdk: it'd be good to learn both, really. but c# would be, not only easier to learn first, but would help you become a better programmer more quickly.
<ams>	martinhath: you mean it is a totally undefined language?
<ams>	yeah, sure .. i guess ..
<pyon>	martinhath: i don't think pointers are useful without some notion of ownership and borrowing.
<rangergord>	textmode: think of a typical b/c grade average uni student. has a social life, but learns what the uni tells him to learn. graduates, looking for a programming job. as i said, half my classmates were fucked.
<martinhath>	ams: what?
<pyon>	martinhath: and keeping track of these notions of ownership and borrowing entirely in your head is utterly plebeian.
<martinhath>	pyon: you don't?
<adsjlkdk>	bizarrefish: ok thanks
<rangergord>	because no one's looking for an average junior programmer that only knows c or c++
<bizarrefish>	pyon: are you familiar with any languages which provide good, language-level support for those notions? (serious question - i've been looking for such a thing)
<_w_>	i've seen companies hire people based on them being /interested/ in programming
<pyon>	bizarrefish: rust.
<martinhath>	pyon: sure, it's a pain to work with sometimes, but i think it's a pretty important concept, programming (and cs) wise
<ams>	martinhath: c is a total undefined mess, it is unsuitable for real world, and totally unsuitable for anything.
<_w_>	no experience, no skills
<pyon>	bizarrefish: ats.
<textmode>	rangergord: i get your point, though the grognard in me is thinking "working as intended" :p
<pyon>	martinhath: i'm not dismissing pointers. i'm dismissing pointers without some notion of ownership and borrowing.
<hyuke>	rangergord: there's a reasonably good demand for programmers in native languages working on specialty software. for example, there is software specific to chemistry, biology, geology, etc that requires a background in those fields to work on
<adsjlkdk>	what are the best/common things you can do with c# and js
<rangergord>	textmode: that's cynical. writing applications doesn't take much knowledge today. you could concentrate all the required knowledge down to 7-8 months imo. why want to put up walls for the average person? job protection?
<ams>	adsjlkdk: i suggest you learn python.
<martinhath>	ams: seems to have worked out pretty good. i don't know about you, but i know that most software i run is written in c.
<pyon>	martinhath: pointers, of course, are plenty useful. indirection is one of the most important algorithmic tradeoffs in data structure design: you avoid the up-front cost of copying data closer to where you need it, but pay the price of following a pointer every time you want to access the data.
<bizarrefish>	adsjlkdk: c# is often used to write desktop applications, but is used widely for server-type apps too. video games, absolutely (what they were saying about unity)
<ams>	martinhath: most things were written in assembly back in the day, must have been pretty good that too?
<pyon>	martinhath: it's just that c's particular pointer system is useless and unhelpful.
<ams>	martinhath: such comments are totally useless, since they are based on popularity, popularity is not a good metric for what is good or bad.
<martinhath>	pyon: i've written some rust the last week, and i have come to like the idea of ownership that rust enforces. however, it seems to me that this is more of a saveguard for the programmer
<reveredge>	even android developers demand is increasing. that has given java a head up over other languages
<rangergord>	funny how google picking java for android is what kept java so popular, and in return oracle sued them
<bizarrefish>	adsjlkdk: javascript is used to create web applications, often. it's also finding a lot of use in some server-side roles, these days.
<martinhath>	ams: i didn't say it was good, i just pointed out that it has indeed been usable for the real world
<pyon>	martinhath: it's applied logic. a useful program has to *mean* something. and this meaning has to be known by your tools (in particular, the type checker), because realistic programs are too big to fit entirely in the programmer's head.
<bizarrefish>	rangergord: they also were laughed out of court and forced to pay google's legal bills iirc :p
<martinhath>	ams: although i think it's pretty ok
<ams>	martinhath: and i find it sad that this is the metric to hold up to, we had better operating systems back in the 70s, and yet we use this dumb, illdesigned, thing called unix.
<textmode>	rangergord: its only that easy because no one cares about things like performance, host agnosticism, or maintainability.
<reveredge>	or other way round that google picked up java as it is more popular now then any other language
<bizarrefish>	ams: used plan 9 much?
<textmode>	rangergord: programming at a basic level is easy. programming *well* requires effort.
<ams>	bizarrefish: no.
<ams>	bizarrefish: it is still unix, and it still has the same faults as unix.
<rangergord>	textmode: those things are less useful from a business perspective than getting the product done. and very few people code for reasons other than money.
<_w_>	it depends on what kind of business you're running
<bizarrefish>	ams: it's probably one of the most beautiful, useful architectures an operating system can have. plan 9 isn't unix. windows nt is more like unix than plan 9/.
<textmode>	rangergord: i can't really argue with that, but i don't have to like it.
<ams>	bizarrefish: not really.
<bizarrefish>	ams: yup, sorry dude.
<ams>	bizarrefish: it is not beutiful at all.
<_w_>	if it's a one-season i-want-venture-capital kind of business aiming to get bought out, sure, quality matters little
<textmode>	rangergord: (ergo, "the grognard in me")
<bizarrefish>	ams: you're not doing well today, are you
<rangergord>	textmode: t'es francais?
<ams>	bizarrefish: i am doing fine, thank you.
<_w_>	if you're in big business selling to established corporations however, quality is what you live by
<ams>	bizarrefish: please stop it.
<nullentity>	http://www.newegg.com/product/product.aspx?item=9sia3gy2t30346 bought this chair yesterday, hopefully it'll be nice for a home office
<textmode>	rangergord: not really.
<ams>	bizarrefish: come back to me when you can do this in plan9, or unix: www.youtube.com/watch?v=o4-ynlplgtk
<rangergord>	_w_: the average mobile app (the local ones at least, not the front-ends to large social platforms) is not complex enough to worry about maintenance and stuff like that. you could rewrite everything in a month.
<rangergord>	err, even the front-ends
<_w_>	rangergord: absolutely. mobile apps are all dayflies
<textmode>	_w_: mayflies*
<_w_>	rangergord: if your business is based on mobile apps, you're already working in an environment that might disappear in a year
<_w_>	textmode: both works
<arch-user>	i need help with this : http://hastebin.com/anivagulax.hs (it's a short question)
<rangergord>	_w_: but demand is high for those devs. #iphonedev guys told me they make 250$/hr typically. everyone and their mom wants their app. it's replaced having a website for many people.
<_w_>	rangergord: sure, it's probably even catching up to the amount of php web dev jobs
<rangergord>	i see it only increasing. phones replaced pcs in most of the world (not to us devs, but the average person).
<_w_>	rangergord: my point was that it is not a business that is on stable fundament, so you already don't care about doing things for the long run
<_w_>	doesn't matter if mobile phones are here to stay; the platforms themselves are in flux
<_w_>	next year all mobile phones might be pcs
<_w_>	as in running what's now desktop os'
<rangergord>	can you give me an example of "long run" apps that are not desktop apps for content creation? (cad and such). most gui apps fall there imo.
<_w_>	sure, but not all software is gui
<pyon>	ams: whoa, that demo is really sexy.
<_w_>	i for instance work in telecoms
<ams>	pyon: yes.
<textmode>	_w_: probably not per say, low power cpus aren't generally x86.
<rangergord>	oh yeah
<pyon>	ams: to think that, instead of a repl, on unix you get... shell scripts.
<pyon>	like, seriously, what the fuck?
<ams>	pyon: which are like .. lame.
<pyon>	ikr
<_w_>	textmode: hardware in that space might see drastic evolution
<rangergord>	pyon: what demo
<ams>	rangergord: www.youtube.com/watch?v=o4-ynlplgtk
<textmode>	_w_: now you've got me wondering how likely a switch in the reverse direction might be…
<_w_>	rangergord: if you're providing services that other people make /their/ apps on as well, you need quality. amazon, rackspace, etc.
<rangergord>	_w_: that's the top 1% programmers. what about the remaining 99% :p
<bizarrefish>	textmode: it's a bad idea. intel's quark processor is a steaming pile of crap
<_w_>	rangergord: i don't get your point
<nullentity>	i love garry's mod servers, but i don't think making a business off server hosting would be feasible. it seems any good coders move on from garry's mod scripting once they get any good.
<rangergord>	_w_: i agree with what you say, but it doesn't apply to the average programmer. it should, but it doesn't.
<bizarrefish>	textmode: it's hotter, slower, more power hungry, more expensive than a modern arm cortex chip.
<_w_>	rangergord: perhaps that's why they /are/ average programmers?
<rumpledelf>	wait, the bottom 99% are average now?
<pyon>	average or not, they're well off (enough).
<_blizzy_>	i love how i can mention c# in the java channel
<pyon>	rumpledelf: the bottom 99% are, on average, slightly below average, of course.
<textmode>	bizarrefish: yes, that would be the normal direction, i said the *reverse*
<rumpledelf>	pyon: true, that
<bizarrefish>	textmode: what? such that intel made better low power cpus?
<bizarrefish>	hmm
<bizarrefish>	would be nice, certainly
<ams>	pyon: the fun part is that genera is something like 600k lines of code ..total, with 6-7 languages, mail client/server, chat, editor, ...
<textmode>	bizarrefish: i don't care about any particular manufacturer. i meant a trend of traditional mobile/lowpower isa into desktop boxes. i'm guessing not overly likely. too much legacy to overcome.
<nullentity>	what's typescript? is it like coffeescript that compiles to javascript?
<_blizzy_>	yes.
<pyon>	ams: well, that's because one line of lisp does a lot more work for you than one line of c. :-p
<textmode>	bizarrefish: is quark notacibly worse than other "low power" x86 chips, though?
<ams>	pyon: yeah .. and yet c is a "
<ams>	systems" language, while lisp is consdierd something else ..
<ams>	go figure
<bizarrefish>	textmode: i feel we're on the trailing edge of the binary-compatibility era. technically, things should improve. however, we're well past the leading edge of the ridiculously unnecessary functionality era, which seems to be even more bloating.
<ams>	what?
<pyon>	ams: ok, so where do i get this stuff?
<ams>	pyon: it is non-free software.
<pyon>	oh.
<ams>	pyon: license status, unknown..
<textmode>	bizarrefish: not sure exactly what you mean by that.
<_blizzy_>	i love how mature the java channel is.
<_blizzy_>	not sarcasm.
<textmode>	_blizzy_: compared to...this channel? or just in general?
<rumpledelf>	i keep hearing about this mythical java channel, yet have no need to ever go there
<_blizzy_>	textmode, in general.
<_blizzy_>	other channels i won't mention will jump on you when you mention java
<twey>	the java channel will also jump on you when you mention java ;)
<nullentity>	i love c#'s var keyword. java's verbosity really annoys me.
<_x_c_v_b_>	is everyone on freenode depressed
<textmode>	the only real issue i have with java is the spawling mess they call an inheritance library. i think it was something like 5 different interfaces to get all the mouse events.
<rangergord>	_x_c_v_b_: why?
<_x_c_v_b_>	seems like it
<textmode>	all of which have to be individually registered.
<nullentity>	_x_c_v_b_, i'm not. i got pills to make me not depressed :dd
<textmode>	(there is a *class* that combines them. but then you can't extend anything else.)
<rangergord>	nullentity: ecstacy?
<_blizzy_>	_x_c_v_b_, depression sucks.
<_blizzy_>	however, i take meds.
<_blizzy_>	i personally like java and c#.
<_blizzy_>	both are fucking cool.
<nullentity>	nah some generic prozac. i should probably run to my care and take my meds.
<rangergord>	what would happen if someone that isn't depressed tries something like prozac? is it like adderall where if you don't have the problem, it increases your abilities?
<pyon>	nullentity: and you think c# is concise?
<pyon>	nullentity: try haskell or prolog
<pyon>	nullentity: or if you're feeling game, even lisp, you could reinvent the language of your dreams in it
<reveredge>	pyon, i think prolog is not very general, especially for ai programming
<reveredge>	dont know if it can feed all purposes
<nullentity>	it's just more concise than java. i think var mydict = new dictionary<string, tuple<int, int>>(); is a lot more preferable to dictionary<string, tuple<int, int>> mydict = new dictionary<string, tuple<int, int>>();
<pyon>	welp
<arch-user>	i'm having trouble figuring out a problem i have : http://hastebin.com/anivagulax.hs
<hyuke>	nullentity: those both suck :p
<nullentity>	they do really
<pyon>	nullentity: let x = dictionary.new ()    (* type inference figueres the rest *)
<nullentity>	i should learn haskell
<nullentity>	and rust
<nullentity>	and a lot of things
<pyon>	well that snippet was ocaml
<pyon>	but yea
<_x_c_v_b_>	this network was made by and made for crazy people
<_x_c_v_b_>	right???
<martinhath>	nullentity: diamond syntax takes care of _some_ of that, tohugh
<nso95>	_x_c_v_b_: lilo was pretty crazy
<rumpledelf>	_x_c_v_b_: where are you going on freenode that makes you think everyone is depressed?
<tsoutseki>	hello
<nullentity>	my meds turned my life around. i went from failing out of 4 yr college with a 1.2 gpa to a 3.9 in tech school and cto of my friend's programming startup
<tsoutseki>	nullentity, what are you taking
<nullentity>	software development
<reveredge>	arch-user, you cannot find best solution in this case, its np-hard problem
<tsoutseki>	no
<tsoutseki>	i mean, what meds
<nullentity>	oh
<nullentity>	venlafaxine
<reveredge>	arch-user, http://stackoverflow.com/questions/19197836/algorithm-to-evenly-distribute-values-into-containers
<nullentity>	it's a generic prozac
<tsoutseki>	i see
<tsoutseki>	how do you think that it is helping you?
<rumpledelf>	is that the stuff that stops anxiety?
<nullentity>	i'm a lot more positive now. i would use to have trouble getting up in the morning and motivating myself to do stuff like my school work
<rumpledelf>	my ex was taking that
<tsoutseki>	nullentity, i see, makes sense
<bizarrefish>	i'm not clinically depressed, but have taken amytriptyline back when i was a teenager.
<tsoutseki>	nullentity, did it help your concentration, too?
<bizarrefish>	(i was then)
<arch-user>	reveredge, thanks i'll see if it helps me and come back for feedback!
<rumpledelf>	i tend to risk depression whenever i get burnout, the fix is usually just step back for a bit and not do so much
<nullentity>	tsoutseki, i'm not too sure. quite frankly, in tech school it's a lot more interesting material than gen eds. i'm definitely more interested than when i was in the 4 year.
<bizarrefish>	my current depression-keeping-away recipe is a ketogenic diet + weightlifting, and just recently, l-theanine supplement.
<nullentity>	yeah i need to do something like that
<bizarrefish>	i can vouch for both keto and l-theanine doing marvellous things for focus
<hyuke>	adam carolla gave the cure for depression about 15 years ago on loveline: jog and listen to classical music
<tsoutseki>	nullentity, be careful with what you are taking while on an ssri. look online and ask you doctor, too. you don't want serotonin syndrome
<nullentity>	i'm a fatty. had to call in sick to work today because of my gout flaring up
<bizarrefish>	bounce out of bed, no mid-afternoon droop, yay! l-theanine just generic anxiety-stopping thingy.
<hyuke>	you know, except when that doesn't work :p
<rumpledelf>	just having time away from people for a day a month is great for mental health
<arch-user>	reveredge, i shouldn't have use containers in the description its more like teams the number of items is fixed
<ihatehex>	l-theanine doesn't really 'stop' anxiety
<ihatehex>	it counteracts some effects of caffeine
<rumpledelf>	i'm looking at my schedule the next week and i have a run of 14 hour days, solid people contact. fun, but can't keep it up too long
<ihatehex>	ignore rumpledelf, she isn't human and works 12 hour days while taking care of her family
<tsoutseki>	nullentity, while on an ssri, you should even be careful with coffee
<ihatehex>	oh it's 14 now
<ihatehex>	lovely
<ihatehex>	ssris affect coffee? wat?
<rumpledelf>	heh, my work day is a lot less than that
<rumpledelf>	and i've just left ingredients for food at home that the kid can cook
<nullentity>	i hate that i work out of my parent's basement lol. i hate not having natural light. i'm really considering getting this office: http://images.craigslist.org/00d0d_borxktmv572_600x450.jpg
<tsoutseki>	ihatehex, idk if it affects coffee, but you should just be careful
<tsoutseki>	look up serotonin syndrome
<nullentity>	$469/mo flex terms, furniture and internet and everything included
<ihatehex>	tsoutseki, why say that then?
<bizarrefish>	ihatehex: funnily enough, i don't become anxious, regardless of how much caffeine i take (300mg+ makes me sweaty though). i just have a kind of somewhat-hidden background anxiety, like a stretched rubber band.
<ihatehex>	lol?
<tsoutseki>	it doesn't affect coffee
<ihatehex>	that's what i thought
<ihatehex>	-.-
<tsoutseki>	but you may have b ad effects if you take it with an ssri
<rumpledelf>	ssris effect a shitload of stuff though, wouldn't surprise me if they effect coffee
<ihatehex>	it's affect
<ihatehex>	:(
<ihatehex>	either way it probably doesn't
<tsoutseki>	rumpledelf, ok, listen. it is not about getting coffee not working. it is about the combination. you  ca n get really bad chronic side-effects
<ihatehex>	coffee doesn't do that much to serotonin
<reveredge>	arch-user, yeah it doesn't make any difference. its still np-hard. where you got this problem?
<ihatehex>	mainly coffee handles an adenosine receptor
<bizarrefish>	things that mess with serotonin can mess with gi tract though, can be bad.
<ihatehex>	tsoutseki, you get really bad chronic side-effects from ssris in general
<rumpledelf>	tsoutseki: friend just stopped taking ssris and all the feelings returning was rather overwhelming
<reveredge>	arch-user, may be there are some other constraints which make it solvable
<ihatehex>	'just stopping ssris' sounds like a horrible idea
<tsoutseki>	ihatehex, true, but the ones you may get with that combination
<tsoutseki>	may be too bad
<ihatehex>	stop talking about things you have no clue about, lol
<arch-user>	reveredge, working on a simple game with a friend
<ihatehex>	there's ##chemistry for that, tsoutseki
<ihatehex>	they might sell you some too
<tsoutseki>	i don't want any. i just wanted to warn nullentity
<tsoutseki>	because someone mentioned nootropics like l-theanine
<ihatehex>	if nullentity is depressed, and he's tried exercise and therapy, then ssris are a valid course of action
<ihatehex>	though preferably in combination with therapy
<ihatehex>	depression is a pattern of thought that is pervasive and requires a long time on ssris with therapy for neuroplasticity to properly kick in.
<tsoutseki>	ihatehex, i agree. all i said is that they should be careful with what they are taking while on an ssri
<ihatehex>	mostly they should be careful taking things like cocaine
<ihatehex>	and khat
<ihatehex>	and possibly grapefruit
<ihatehex>	grapefruit is a cunning devil
<_w_>	"neuroplasticity"
<_w_>	let me link you an article
<ihatehex>	i can't highlight your name but that is what my psychiatrist told me, anyway, and she has 9 or so years of training
<rumpledelf>	yay people who give out cocaine like lollies
<ihatehex>	and like 9 of experience
<_w_>	http://mindhacks.com/2010/06/07/neuroplasticity-is-a-dirty-word/
<ihatehex>	(i have, however, not been on ssris)
<rumpledelf>	i feel left out. i don't have a psychiatrist :(
<nullentity>	i'm still terrible at exercising
<rangergord>	i dont know what it is about white people and taking drugs all the time
<nullentity>	tomorrow i'll go for a bike ride though if i can move my foot
<ihatehex>	nullentity: it's not about how much, or how effective exercise you do
<ihatehex>	it's about doing it every day in quantities you can manage
<rumpledelf>	i walk a fair bit, that's all the exercise i get
<nullentity>	my schedule's so fucked up lol
<textmode>	?
<nullentity>	though it will be easier once i'm done for classes in the summer
<ihatehex>	nullentity: get up and walk 10 minutes every hour, for instance
<rumpledelf>	nullentity: i have to work it into my routine. i walk halfway home sometimes, and when i'm in the city i walk across it instead of getting the train
<nullentity>	that's a good idea
<ihatehex>	rumpledelf still isn't human and can probably run a marathon every day while working 10 hour days
<rumpledelf>	full way home is too long and kills me
<nullentity>	i live out of the city so if i have to go anywhere i'm driving
<rumpledelf>	i'm not *allowed* to work 10 hour days
<ihatehex>	pesky work rules
<bizarrefish>	walking's cool exercise. resistance is king of feel-good/mind-altering exercise. beats typical cardio regimes for injury rate, too.
<nullentity>	wonder what if there's a limit to how much time i can put in as an executive
<ihatehex>	bizarrefish, walking is what you do when you're fat and or prone to injury
<ihatehex>	and it works great
<bizarrefish>	(at least for me. source: been to hell and back with running. done that. got the injuries.) weights + walking is my thing now
<ihatehex>	nullentity, the point is not to do a lot of exercise every day but do the amount you can bring yourself to do
<rumpledelf>	nullentity: oddly, i have the cap as a freelancer. the full-timers work much longer hours than me
<ihatehex>	nullentity, i strongly recommend going for a half hour walk or longer every morning, if that's manageable
<rumpledelf>	nullentity: my producer is often there at 7:30 and leaves at 6
<ihatehex>	you will have a lot more energy
<nullentity>	yeah i could probably do that
<nullentity>	just requires me forcing myself to wake up earlier lol
<menpa>	weight lifting is honestly the best thing i ever got into
<ihatehex>	nullentity, it's not recommended to exercise at night, as it tends to get you 'pumped' and hinders sleep
<rumpledelf>	i'd normally work 10-5:30 but i'm doing too much in the evenings right now and have to leave around 5
<ihatehex>	weight lifting is also fine, but you can't do the same exercises every day
<ihatehex>	requires more effort than walking
<nullentity>	my family has a bowflex they never used
<ihatehex>	whatever you do, nullentity, do something you can do every day, that doesn't make you hurt or annoy you
<bizarrefish>	my gym is half hour walk away. hah - problem solved. obviously have to plan around it.
<nullentity>	but they left the flex bars hooked up
<ihatehex>	the key to exercise improving mood and well being is consistency
<nullentity>	that they lost all of their tension :(
<ihatehex>	nullentity, fresh air for half an hour every morning probably doesn't kill you either
<ihatehex>	:p
<ihatehex>	better than some exercise machine in a basement
<nullentity>	yeah
<rumpledelf>	sunshine is good too. lack of sunshine does some odd things
<bizarrefish>	a glycogen deficit in muscles to improve insulin sensitivity and absorb blood glucose spikes is good, too :)
<ihatehex>	again, the important thing is not to exercise to become a fit specimen like eric lagergren
<ihatehex>	but to have the habit, and improve well being and mood
<ihatehex>	it takes a long-ass time to build a habit, something between 30 and 70 days usually, depending on person and habit
<nullentity>	i've been playing a bit of ingress lately. i got a mount to put my phone on my bike
<ihatehex>	so make it an easy one to do and remember
<nullentity>	i like ingress, it's decent motivation
<a-sqaured-plus-b>	i wanted a longer nick
<_w_>	everyone is different
<_w_>	for some, doing something regularily kills any chance they'll stick with it
<ihatehex>	i'm not taking the bait, he who shall not be named
<bizarrefish>	a-sqaured-plus-b: a2+b is the name of a finances company
<rumpledelf>	some of us really lack routine and are still alive
<ihatehex>	but good try
<_w_>	they need change, mixing things up
<bizarrefish>	http://www.aab.co.uk/
<rumpledelf>	and i deal with someone who just doesn't do long range planning ... he's visiting on wednesday and booked the flights sunday night
<rumpledelf>	now i have to reschedule the second half of my week around that >.<
<ihatehex>	rumpledelf, is he at least romantic?
<rumpledelf>	not even slightly romantic
<bizarrefish>	right! bedtiem!
<bizarrefish>	night all
<ihatehex>	the hell
<ihatehex>	good night bizarrefish
<ihatehex>	nullentity, anyway, for mood and energy -> exercise, for weight -> eat less (but not too little) for a long period of time
<ihatehex>	:p
<rumpledelf>	i think i need to evict my regular housemate to a coworking space or there's going to be friction
<ihatehex>	exercise definitely most important if you're depressed, as depression might cause you to eat more
<adsjlkdk>	im going to learn java
<nullentity>	lol i need to stop drinking mtn dew
<rumpledelf>	lots of places in the city with free wifi and a nice spot to code though
<ihatehex>	nullentity, in the us, mountain dew contains bromine, which is a fairly deadly and annoying chemical
<nullentity>	god i want an office with natural light
<ihatehex>	nullentity, it balances flavour :d
<_w_>	adsjlkdk: you're announcing this to the channel because...?
<nullentity>	apparently my brother'll be moving out
<ihatehex>	adsjlkdk, cool, let us know if you need help
<nullentity>	so i can steal his room as an office
<rumpledelf>	natural light ftw
<nullentity>	i don't agree with the bromine thing. that's like saying don't drink tap water because there's chlorine in it and chlorine was used in ww2 as a chemical weapon
<rumpledelf>	my office at home is set up in a storage room/closet/media room/study (depending on real estate agent buzzwords) and has no window ...
<a-sqaured-plus-b>	what did g0d d?
<textmode>	yeah, a lot of windows dev is just figuring out where the libraries went, and how to tell the compiler where to look for them. on linux? it already knows.
<textmode>	(from what i remember, that is)
<textmode>	(god, wheres my coffee?)
<grublet>	textmode: yeah that
<grublet>	exactly
<grublet>	i installed linux and it was just like 'install the things' and suddenly im doing actual work
<grublet>	instead of figuring out how to
<grublet>	the coolest thing is i can just use nano and gcc and focus on actual programming instead of futzing with settings in an ide
<nullentity>	i really really like developing in visual studio
<pyon>	visual studio isn't interactive enough
<grublet>	well i think i'm jut easily distracted
<pyon>	where's the repl in visual studio?
<twey>	to be fair, that's because under *nix all the libraries are in the same place, usually.
<nullentity>	pyon, debug -> view -> immediate window
<nullentity>	that is one thing i don't really like
<nullentity>	lots of powerful features are hidden away
<wagonboi>	for double hashing hash function 1 is the starting point, while hash function 2 calculates the step to add onto the hash index, right?
<grublet>	twey: makes since to have it all in one spot imo, but i could just as easily criticise myself for not knowing where to stick them instead of blaming windows
<deerhawk>	is there some general and efficient solutions to equations in the form of constant = a*b +c*d*e*123 and variations of that?
<pyon>	twey: that just means that tree file systems are horrible for organizing stuff
<twey>	oh, beg your pardon
<pyon>	the problem is that, if realloc() [or the moral equivalent of it] moves the memory block, then i need to readjust all pointers
<pyon>	which is why i want to have a growable collection of non-growable memory chunks
<twey>	well, if your pointers include the extra indirection then you only have to adjust the growable collection
<twey>	but i guess you probably want to avoid that
<pyon>	nothing (in the user program) will point directly to the growable collection
<twey>	yes, but you can point *through* the collection
<sbrg>	be the collection
<twey>	that is, have pointers be pairs of (index into growable collection, index into element)
<sbrg>	there is no collection
<pyon>	twey: fortunately i'm implementing pointers as in c
<twey>	at the cost of bigger pointers and costlier lookups
<pyon>	in other words, directly to the object
<generalvagueness>	http://ping.nkkm.lt/images/6kodas.jpg
<pyon>	this is what i have: https://github.com/eduardoleon/pyon/blob/master/plum/memory.rs -- it's effectively transliterated c
<twey>	i'm a bit confused as to what's wrong with vec<heap>
<pyon>	twey: the heap compaction phase
<sbrg>	saw a talk about rust today. thinking about taking a peek
<pyon>	twey: it's easy to compact each individual heap (i call it block in my code, tho), but if the individual heaps are too small, it's messy to merge them together
<grublet>	a well-structured one
<pyon>	grublet: a well-structured what?
<grublet>	pyon: i make a smartass comment to a message without realising i was scrolled back
<pyon>	lol
<grublet>	someone asked what structure to use
<grublet>	yeah
<twey>	pyon: why?  surely it should work just the same — if heaps[0] has enough space to contain heaps[1] then you simply write heaps[1] at the end of heaps[0], update pointers normally, and eliminate heaps[1]
<nullentity>	so is rust useful where c usually is? high performance and low level applications?
<pyon>	nullentity: yes, exactly that, but without the segfaults and undefined behavior everywhere.
<nullentity>	can rust be used for microcontrollers currently? that'd be really neat
<pyon>	nullentity: well, right now, i doubt that.
<pyon>	twey: sadly, many c and c++ idioms are gone in rust. for example, there are no pre- or post-increment operators, and pointer arithmetic was (deliberately) made verbose (so as to discourage people from using it).
<pyon>	i'm happy that pointer arithmetic has to be marked unsafe.
<pyon>	i'm less happy that it was made verbose.
<sbrg>	pyon: how verbose?
<pyon>	sbrg: ptr = ptr.offset(diff)
<sbrg>	not too bad
<pyon>	sbrg: as opposed to `ptr += diff`
<pyon>	also, no post-increment or decrement.
<sbrg>	yeah saw
<pyon>	so no cute `*ptr++` tricks.
<sbrg>	eh
<sbrg>	not a big loss
<pyon>	also, the compiler prevents aliasing mutable references, which is a good thing... except when you want to write unsafe code anyway.
<sbrg>	yep, saw the talk and knew that beforehand
<darkelement>	my ubuntu vm will be able to send data to a serial port, correct?
<nullentity>	darkelement, what programming are you running the vm in?
<darkelement>	vmware
<darkelement>	nice to see you again nullentity
<nullentity>	https://www.vmware.com/support/ws3/doc/ws32_devices3.html#1023765
<nullentity>	like i said, i just google the shit out of everything ;p
<darkelement>	yea i shouldve
<deerhawk>	i've finally realized, for semi-real, that cleverness isn't enough to solve c=p1*p2 in logarithmic time - you've got to be equipped with a lot of experience and knowledge first.
<darkelement>	how can i send data to node.js from phantomjs?(assuming i have hooked up node.js to send data it receives to a serial port)
<nullentity>	darkelement, my thought was that you can call the phantomjs stuff from nodejs
<darkelement>	yea, i just figured it be easier to use my already existing phantomjs script
<darkelement>	and i've not used node.js
<darkelement>	so idk how to take live input it is gettting from phantomjs script, and send that to serial port.
<champloolaptop>	what networks are typically used for web application guis?
<champloolaptop>	frameworks*
<rcyr>	champloolaptop: there's a new one every week..
<_w_>	champloolaptop: did you check the list on wikipedia?
<champloolaptop>	_w_: a list on wikipedia wouldn't describe what's typically used :\
<_w_>	champloolaptop: why are you concerned about popularity anyway?
<champloolaptop>	_w_: to put on a resume as an example of things i've worked with
<_w_>	ah, so you want what companies are interested in, not programmers in general?
<champloolaptop>	_w_: i'd say pretty much, yea.
<_w_>	then i'd say do specific searches against things like job sites, and count hits
<nullentity>	champloolaptop, i'm using bootstrap
<nullentity>	with angular
<champloolaptop>	nullentity: thanks :)
<nullentity>	angular2's coming soon i think which i believe is a complete rewrite
<nullentity>	but yeah, angular's crazy nice
<nullentity>	i'm working on a single page app
<code>	hi guys ? anyone here ?
<mike802>	what do you want
<darkelement>	nullentity: what are you working on?
<code>	some viruses
<darkelement>	 hey guys how can i execute and get the live output of a phantomjs script in node.js?
<code>	just to play nothing serious
<darkelement>	code: are you serious?
<mike802>	are you one of those paranoid freaks?
<darkelement>	code: oh.
<mike802>	paranoia is unfortunate
<code>	nope
<darkelement>	so you want to see how they work?
<darkelement>	relatable, i would also like to see this
<code>	well some of my college friends think that im not normal
<code>	but its cool
<darkelement>	hehe
<darkelement>	nobody's normal my frind
<darkelement>	friend*
<code>	i agree
<code>	so ... what are u doing ?
<darkelement>	i don't have any viruses on me, but right now i'm working on a project with phantomjs, node.js, and arduino
<code>	ohh sounds cool ! i dont know much about that, but i really would like to read about
<vendu>	hello babes =p
<vendu>	=d
<code>	hi there
<ihatehex>	darkelement, some might argue that node.js is a virus
<ihatehex>	propagated by hipsters
<code>	well i read about phantomjs, its a cool project
<darkelement>	ihatehex: xd
<darkelement>	ihatehex: we need to get together for some more of our legendary dreamteam later
<ihatehex>	yes
<ihatehex>	i'm playing with 5k players on my other account
<ihatehex>	mostly because i nag them into it
<ihatehex>	:d
<darkelement>	ihatehex: aww shit lol
<ihatehex>	actually more like 5.5-5.9k players
<ihatehex>	:d
<ihatehex>	we had a game we lead 16 0
<ihatehex>	and we lost it
<darkelement>	what is your mmr on that account? lol
<darkelement>	lmao
<ihatehex>	because enemy team just manned the fuck up and went balls deep in combos
<darkelement>	russian dotka man, drink vodka and keep playing
<ihatehex>	never been singled out so hard by a team before
<darkelement>	sometimes you have to start playing shingeki no kyojin and never stop
<ihatehex>	they would skewer me into their tower, rp, sf-ult, lina ult
<darkelement>	they obviously did
<ihatehex>	haha, have you ancient-farmed necrophos yet?
<ihatehex>	it's so satisfying
<ihatehex>	6.5 minute midas
<ihatehex>	your job is to stand still and stack at 53
<ihatehex>	:d
<darkelement>	that's legit, want to try it now xd
<darkelement>	ive done it with medusa and got a 4 minute midas :p
<darkelement>	what is your mmr on that account? i am considering temporarily switching to an alt to see my mmr after it gets high enough leveled
<ihatehex>	it will go up
<ihatehex>	i'm currently at ~3.5k hidden
<ihatehex>	that's 1k over my other one
<ihatehex>	i'm winning most of my games
<ihatehex>	so it's gonna be 4k when i play ranked at some point
<darkelement>	nice
<ihatehex>	however you will be playing in some weird unbalanced games...lots of other smurfs...many of them bad
<darkelement>	i need to find my unranked on my current account
<ihatehex>	can you play mid?
<darkelement>	lol yea
<darkelement>	yes i can mid
<ihatehex>	storm spirit
<ihatehex>	go storm spirit
<darkelement>	oh yea
<ihatehex>	you will get to 4k ez
<darkelement>	xd
<ihatehex>	just watch pro games of him and go mid every game you can
<ihatehex>	good storm spirit dominates
<darkelement>	dude didn't i play storm with you? lmao i play him all the time
<darkelement>	i fucking love storm spirit
<ihatehex>	you did
<ihatehex>	like i said
<ihatehex>	play storm spirit
<darkcthulhu>	what if i wrote an ai so good that it convinces me that it's a real person?
<ihatehex>	i can't play him that well yet
<ihatehex>	storm spirit mid is the key to ~4k
<ihatehex>	after that you're gonna wanna play support
<ihatehex>	:p
<darkelement>	darkcthulhu, then it would have passed the turing test on you
<darkelement>	yea storm spirit is awesome
<darkcthulhu>	darkelement: indeed. now wouldn't that be good..
<ihatehex>	darkelement, then you're the computer
<ihatehex>	:o
<ihatehex>	err
<ihatehex>	meant cthulhu
<darkelement>	when they are confused, then you are on the right track
<darkcthulhu>	with just enough randomness and unsupervised learning, it might actually be possible.
<darkelement>	indeed, i've considered it, but don't know how to teach it sentence structures.
<darkelement>	and allllll the other stuff
<darkelement>	also, how do you get it to learn other than getting it to run against other people? and even then it would have to test the idea multiple times for certainty.
<darkelement>	the dream is to have it learn on it's own, from...the internet!
<darkelement>	this is why phantomjs is the key to the future guys
<darkcthulhu>	yep.. the internet is the best place.
<darkelement>	:p
<darkcthulhu>	needs some form of sentiment analysis built in to figure out what to say and when
<darkelement>	yea, but learning from the internet is the first step.
<darkcthulhu>	now if i had the kind of data google does, it would be easy to build such a thing.
<darkcthulhu>	...and scary
<darkelement>	they are making one right now
<darkelement>	ray kurzweil is working on it as well
<darkelement>	they have either already done it, or it's harder than it seems
<darkelement>	either way, perhaps we can combine our superior adjectives to make it, :d
<darkcthulhu>	hmm.. i'm joining them this summer. let me go have a peek :)
<darkcthulhu>	i guess this stuff would come under googlex, and hence would need some superior kind of access.
<darkelement>	joining google? gj
<darkelement>	yea, i think it does
<darkcthulhu>	yeah.. internship.
<darkelement>	but imagine the look on their faces when some interns make it for them
<darkelement>	*intern and other guy with good adjective choice
<darkelement>	:d
<darkcthulhu>	heh.. there must be enough phds working on these problems. but i do want to do this as a personal project.
<darkelement>	and me as well.
<darkcthulhu>	sure :) how handy are you with python?
<darkelement>	i <3 python
<darkcthulhu>	haha
<darkcthulhu>	i've always wanted an ai to talk to. i would hook it up to a few social networks, and then, it would sometimes send messages through; and sometimes manufacture chats. the first time it tricks me, i'll have succeeded. that was my metric anyway.
<darkelement>	sounds legit
<darkelement>	you can also hook it up to ##chat or something
<darkelement>	that was the idea behind my question-response irc bot
<darkelement>	however, i quickly realized it was an asshole
<darkcthulhu>	heh.. yeah. i built an irc bot here for counting language mentions and popularity. got some interesting stats and then it wasn't all that interesting anymore. channel policy is no bots though.
<darkelement>	indeed.
<darkelement>	it's like a really risky final turing test
<tsoutseki>	darkelement, darkcthulhu hello
<darkelement>	i think we have similar aspirations for our own ai
<darkelement>	perhaps you could include me in your project?
<darkelement>	tsoutseki: hiya
<darkcthulhu>	hi tsoutseki.. haven't seen you here before.
<tsoutseki>	i was standing in the dark corner
<darkelement>	hehe
<darkcthulhu>	darkelement: sure.. i'm setting up the repository right now. so far, i spotted pyttsx for some initial text to speech., so it seems cool.
<darkcthulhu>	darkelement: do you develop on linux?
<darkelement>	darkcthulhu, still transitioning, but ive done some.
<deerhawk>	guys, if the prize pool in go is large? why don't you just develop an heuristic algorithm with the help of a supercomputer and attend to a world championship and win?
<darkelement>	deerhawk: easier said than done
<darkelement>	deerhawk: also, i'm sure they don't allow bots
<deerhawk>	darkelement: you just memorize the algorithm .. or cheat >:d.
<darkcthulhu>	darkelement: hmm.. even though it is python, it might have some non-cross-platform components. it will certainly involve a lot of reading up before attempting something like this. are you up for it? :)
<darkelement>	deerhawk: lol
<deerhawk>	no, but seriously. you make an algorithm of size z that's possible to memorize.
<darkelement>	darkcthulhu, sure
<darkelement>	deerhawk: if i made one, it would probably be for dota 2
<darkelement>	deerhawk, perhaps i'll try that after working with darkcthulhu
<darkcthulhu>	darkelement: python2.7 okay with you? i would go with 3.x but some of the speech and text processing libraries didn't seem to have made the jump.
<tsoutseki>	darkelement, on gaming, i can instantly 'see' when someone is a bot
<tsoutseki>	how will you make it non-apparent
<darkelement>	darkcthulhu, perfect, i actually prefer python2.7
<darkelement>	tsoutseki, i think i would want to make it first, for the fun, then maybe work on hiding it
<tsoutseki>	darkelement, i don't  mean hiding it by an anti-cheating software guard t hing
<tsoutseki>	thing
<darkelement>	tsoutseki, i don't either.
<tsoutseki>	i mean making it seem like a human is playing
<tsoutseki>	og
<tsoutseki>	oh
<darkelement>	:d
<darkcthulhu>	darkelement: now for the hardest part...
<darkcthulhu>	naming it :p
<tsoutseki>	darkcthulhu, darkelement are you ai
<darkelement>	i used the glados method for my irc bot
<darkelement>	that's a difficult question tsoutseki, are you?
<tsoutseki>	how do i know you aren't
<darkelement>	how do i know you aren't?
<darkelement>	:]
<tsoutseki>	;(
<darkcthulhu>	time to have you both solve complex recaptchas
<deerhawk>	darkelement: i've dreamed about that but don't have the time for a dota-2 bot
<darkelement>	darkcthulhu, my only weakness!
<darkelement>	"what is 9/3?" 3.000000000000000001
<darkcthulhu>	heh.. fixed point arithmetic would help there.
<darkelement>	deerhawk, well maybe i can work with you on your csgo bot
<grublet>	darkcthulhu: i saw a comic with that joke
<grublet>	"prove you're human"
<darkelement>	i forget the link but it was welcome to the secret robot internet
<darkelement>	http://www.smbc-comics.com/?id=2999
<darkelement>	there we go
<tsoutseki>	darkelement, as an ai
<tsoutseki>	do you feel the cyberpunk world is coming to a reality
<darkelement>	deerhawk, perhaps later though, it seems me and darkcthulhu are gonna work on it as well
<darkelement>	tsoutseki, you mean ghost in the shell world? absolutely
<darkelement>	darkcthulhu, when do i start?
<grublet>	darkelement: thanks
<grublet>	that shit is infinitely amusing to me
<darkelement>	grublet, np, :d
<tsoutseki>	darkelement, no, i didn't mean the manga specifically, but yeah, as a concept in general
<darkelement>	yea, i was just using it as an example. i think it will happen soon, and i am very excited for when it does
<tsoutseki>	i like cyberpunk art http://en.wikipedia.org/wiki/cyberpunk
<grublet>	darkelement: https://xkcd.com/217/ i like this one as well
<darkelement>	grublet, dear god
<adsjlkdk>	can you guys give me programming ideas
<darkelement>	grublet, lmao
<grublet>	 tsoutseki i prefer crust punk
<darkelement>	adsjlkdk, depends on difficulty and language
<darkelement>	darkcthulhu, feel free to pm me whenever
<adsjlkdk>	whats a game engine for c# linux
<tsoutseki>	grublet, well, i don't like the music
<darkcthulhu>	darkelement: cool.. will do as soon as i setup virtualenv and setup the initial stuff. we can then go over an initial plan. i have finals going on, so i'll start off full time on this after 2 days or so.
<tsoutseki>	just the scenery etc.
<tsoutseki>	it is very interesting to me
<darkelement>	adsjlkdk, i have no idea
<darkelement>	darkcthulhu, sounds good!
<darkelement>	what about steampunk? dishonored made me love that artstyle
<grublet>	i'm hoping the future is like s.t.a.l.k.e.r.
<grublet>	the game
<grublet>	gonna get cheeki
<grublet>	im considering my first project to be a linear resampling of a 1d data set
<grublet>	start small
<tsoutseki>	grublet, will we even be alive till that happen
<tsoutseki>	i doubt it
<kg21>	my c++ is a bit rusty... is it possible to define char[][][] for a matrix of string?
<kg21>	(i need it c-style, not using stl due to cuda)
<grublet>	tsoutseki: life finds a way
<grublet>	i mostly just like the idea of being more secluded within nature
<tsoutseki>	hmm
<gnuyawk>	hi guys
<lf94>	hey
<gnuyawk>	is anyone here familiar with a pairwise disjointness test?
<darkcthulhu>	darkelement: done. could you pm me your github username?
<ihatehex>	i bet it's zipzap()
<ihatehex>	:d
<ihatehex>	i jest
<digipeng>	okay do you guys have any sugestion on how to learn the  gnu build system
<demtrizzle>	i suggest you ask yourself why would you want to do it itfp
<mark4>	nullentity, i have tried that and no thats not the problem
<mark4>	what leak
<mark4>	it either works off the bat or fails off the bat or has a 10% success rate off the bat
<mark4>	i followed the posix guide for setting up the port config
<nullentity>	well i've seen it where you could let's say open a file, but if you don't explicitly close it
<nullentity>	you'll get errors trying to access it later on
<nullentity>	pretty much make sure you're closing the port when you're done with it
<mark4>	nullentity, no - any time a process dies the os should close all files that it had opened and free up all memory it had allocated
<mark4>	but thats not the issue here
<darkelement>	drat i get back online after 20 minutes and darkcthulhu is gone
<mark4>	i know what i said above does not always happen, for example the bluetooth device doesnt get handled gracefully
<mark4>	is there anyone here with linux serial port programming skills?
<mark4>	this not working will probably be my job :/
<mark4>	lol
<nullentity>	can't you access serial ports just as a file?
<darkcthulhu>	darkelement: did you get my messages?
<mark4>	nullentity, you have to set them up for example baud rate? stop bits? etc etc etc
<mark4>	so no its not as simple as simply opening a file
<darkelement>	hey, i did!
<nullentity>	looks like stty does that. i'm looking at http://unix.stackexchange.com/a/117064
<mark4>	stty does what?
<nullentity>	stty sets the baud rate and other settings for the device file
<mark4>	oh. that would be pretty useless for me. this is an application wiitten in c not a bash script
<mark4>	so executing stty commands does not help me at all
<mark4>	for example with that stty write up how do you test the port for data available for read
<mark4>	you cant
<mark4>	you either do a blocking read or you set the tty to non blocking which causes multiple other issues
<vendu>	https://github.com/andystobirski/roguelike/blob/master/cscavegenerator.cs <- wow
<darkcthulhu>	darkelement: are you getting my pms?
<mark4>	what i have is a blocking read in a separate thread
<vendu>	i think it's about time i learnt to read some c# code :d
<vendu>	http://www.evilscience.co.uk/a-c-algorithm-to-build-roguelike-cave-systems-part-1/
<vendu>	here's a page that describes the stuff ;)
<mark4>	i kind of need someone with serial port skills to help me debug my code
<digipeng>	make autoconf automake
<allegorical_>	what's a good linux distro i can work in on 2gb?
<zacts>	allegorical_: alpine linux
<nullentity>	arch if you know linux well
<zacts>	and sabotage?
<n1cky>	allegorical_: how much *nix experiences do you have?
<zacts>	but alpine and sabotage use musl libc instead of glibc
<zacts>	and are missing many packages
<allegorical>	hmm i would say beginner still
<zacts>	in comparison to something like arch
<zacts>	damn small linux? (if it still exists)
<n1cky>	allegorical: i'd recommend lubuntu or xubuntu honestlyu
<zacts>	or do you mean 2gb ram?
<zacts>	sorry, i misread
<n1cky>	if you're willing to push yourself to learn, try openbsd
<zacts>	i thought you meant 2gb storage
<zacts>	there is also elementaryos
<allegorical>	i want to work on my usb stick it says it's 1.95 gb
<zacts>	which is an ubuntu derivative with a really easy to use desktop interface
<allegorical>	ah, xubuntu was in a list i had looked at
<zacts>	and seamless apps
<zacts>	or so i hear
<n1cky>	xubuntu and lubuntu are both <1gb
<zacts>	linux mint is nice, i have my aunt (who is a grandmother) using it
<n1cky>	zacts: don't recommend elementaryos to people
<zacts>	and she knows nothing about computers
<zacts>	n1cky: ok
<n1cky>	not after their crying about payments and such
<zacts>	ah ok
<n1cky>	they're bad for the community
<zacts>	well, linux mint has been useful for me
<n1cky>	linux mint is a good choice for a beginner.
<zacts>	so i can recommend linux mint to people, from my own experience
<n1cky>	i'm only 20, i started using linux when i was about 12.
<zacts>	i think the mint desktops are easier to use than ubuntu unity
<n1cky>	it's hard to remember what it was like back then.
<disconsented>	i recommend mint for newbies as well
<n1cky>	christ i can't believe it's been almost 8 years.
<zacts>	also mint has more seamless apps than ubuntu too, and fewer things you have to configure yourself (sane defaults)
<n1cky>	allegorical: is this your first experience with *nix
<allegorical>	i worked a little bit in them before but nothing serious
<zacts>	allegorical: perhaps try linux mint
<allegorical>	i think at my workplace was using fedora, and i use raspbian a little
<allegorical>	yeah i'm reading about mint now
<zacts>	oh, so you know more than just gui
<allegorical>	i've heard it mentioned here before
<nullentity>	arch is amazing once you know what you're doing
<zacts>	if you know the command line a bit then your options are greater, otherwise linux mint is ok
<n1cky>	allegorical: is your goal to learn, or to program, or what?
<allegorical>	yeah both
<nullentity>	it doesn't come with any silly stuff you don't need
<nullentity>	like sudo :v
<allegorical>	but also, my laptop seems slow maybe its the windows
<zacts>	nullentity: i don't totally like arch linux
<n1cky>	i'd start with a ubuntu derivitive like lubuntu or ubuntu, because you'll have the most luck googling for problems and finding solutions
<zacts>	mainly i've read some of the lists from the ex-vi maintainer, and other packages
<zacts>	they scared me
<zacts>	i couldn't build nvi on arch linux
<n1cky>	after that, do a debian minimal install, and you'll be thrown into a command-line only situation, where you'll be responsible for configuring a lot of things.
<zacts>	and i don't trust aur totally
<n1cky>	after that, do a gentoo install and build the kernel from source.
<zacts>	i'm getting more interested in gnu guix lately
<zacts>	i like funtoo too
<zacts>	debian is nice for my servers
<zacts>	i also <3 slackware
<n1cky>	from there, go back to arch or ubuntu because you'll have enough experience that you'll realize playing around with crap isn't worth the effort.
<zacts>	but slackware is in due need of a major update
<allegorical>	ok sounds good
<nullentity>	what was that one distro with the gecko
<n1cky>	suse
<nullentity>	yeahh
<zacts>	n1cky: i'm currently on ubuntu (i was on debian), i just wanted a more stable system (to where if i forgot to update it for a couple of months, i wouldn't get a broken system)
<nullentity>	i still got cds lying around with it lol
<zacts>	i don't use a desktop wm, just i3 or stumpwm
<n1cky>	zacts: jessie just released, debian is great.
<zacts>	the gecko distro is opensuse
<zacts>	yeah, jessie is nice
<zacts>	the main reason i'm using ubuntu is for a few ppa repos, and some more up-to-date stuff
<n1cky>	the thing is, you can always make an unstable chroot with debian and debootstrap makes it super easy... if you need some package, you can make it work.
<n1cky>	fuck ppas, worst system ever.
<zacts>	i prefer debian over ubuntu whenever possible
<n1cky>	seriously, i hate ppas with a passion, i don't know who decided that was a good idea.
<zacts>	n1cky: well, but i don't have to build a few packages
<zacts>	so i don't care, but i don't like ubuntu's philosophy of os much either (or anything canonical really)
<zacts>	i'm mainly just lazy
<n1cky>	zacts: that's why you make the unstable chroot, it generally has bleeding edge packages
<travelr>	ob_start handlers like black magic
<zacts>	n1cky: oh how do you do that?
<travelr>	the hell i set buffer size to 1 and it sends me eveything at once
<zacts>	n1cky: feel free to private /msg me too
<zacts>	you may get me to switch back to debian if this sounds reasonable
<n1cky>	zacts: mkdir ~/chroot && debootstrap sid ~/chroot
<zacts>	can you run x11 apps from the chroot?
<zacts>	(meaning an entire wm even?)
<n1cky>	yeah, thats how crouton works
<zacts>	crouton?
<n1cky>	the chromebook chroot system they have.
<zacts>	oh
<zacts>	cool
<zacts>	n1cky: have you heard of bedrock linux?
<n1cky>	no
<n1cky>	link?
<zacts>	sure: http://bedrocklinux.org
<zacts>	it's in active pre-release development
<zacts>	led by paradigm, a vimmer from #vim
<zacts>	(he did the vim multi-cursor plugin)
<zacts>	it aims to let you run multiple distros side by side without rebooting
<n1cky>	zacts: interesting... i imagine it gets messy quickly.
<zacts>	n1cky: they've had their share of problems, especially with systemd iirc
<zacts>	n1cky: but they seem to be making some good progress
<zacts>	(or so it seemed 6 months ago when i last checked)
<n1cky>	zacts: have you heard of docker? docker is just a system around chroots.
<zacts>	i don't like docker
<zacts>	i had to use it
<zacts>	i hate it
<mark4>	if your on ubuntu you are on debian
<nullentity>	i looove docker
<zacts>	i prefer vagrant over docker, even though vagrant uses vbox or kvm
<nullentity>	put a gmod server in it
<nullentity>	it was so easy to spin up more copies
<zacts>	nullentity: docker build scripts can b0rk depending on the host build env
<zacts>	also docker mountpoints are totally buggy
<mark4>	and not one debian based distro honors the fhs so meh :p
<zacts>	also, if you don't keep your docker filesystem layers clean
<zacts>	they eat up tons of space quickly, and then you have to manually modify /var/docker or whatever
<zacts>	the /var/docker/ dir, or whatever the dir is
<n1cky>	zacts: when have you last used it? i used it just a few months ago (and i'll be working on a project with it this summer for gsoc) and it was mighty stable.
<zacts>	unless you perfectly do everything from the beginning
<zacts>	this was a couple of months ago
<zacts>	that's when i worked on it for a job
<zacts>	i think for certain use-cases docker is fine
<zacts>	but if you don't use it for that one use case, it can get ugly really quickly
<n1cky>	it's not really meant to be a development tool
<n1cky>	it's more or less a way to create scalable, self contained elemnts of complex systems
<zacts>	i didn't use it as a dev tool
<n1cky>	well you said you preferred vagrant
<zacts>	i used it for a git server and chat server actually
<zacts>	n1cky: yeah, i mean even for docker's use case, i prefer vagrant
<zacts>	that's how much i disliked docker
<zacts>	i didn't mean to imply that i used docker for the vagrant reproducible build envs
<n1cky>	there are many, many advantages of using docker vs using vms
<zacts>	even with the overhead of vagrant + kvm or vbox, i have fewer problems with it
<zacts>	indeed
<zacts>	less overhead
<n1cky>	exactly.
<zacts>	but the messy crap you can get into if you don't keep things clean from the beginning, or you upgrade, or have different host envs for docker builds
<zacts>	it can cause headaches
<n1cky>	i haven't had that experience, but i believe it.
<zacts>	i think nixos was working on something dockerish at one point
<zacts>	that was more powerful and clean than docker
<zacts>	but i can't remembwer
<zacts>	i think someone from #guix mentioned something like this
<zacts>	also, the ubuntu bugs + docker were annoying
<zacts>	some bugs were ubuntu too
<zacts>	redhat linux is probably the best distro to use docker with, or so i've heard
<digipeng>	vbox,hyperv,centrix,,vmware, all give me the closedsource heeby jeebys
<n1cky>	mark4: what parts of debian / ubuntu don't follow fhs?
<zacts>	anyways, back to on-topic #programming
<zacts>	s/on-topic/more on-topic/
<mark4>	n1cky, terminfo in /lib. items *****m*o*v*e*d***** out of /usr/share/termino into /lib/terminfo
<mark4>	violates the fhs
<zacts>	i've heard fhs can be pretty useless
<zacts>	parts of it
<zacts>	anyways, i'm going to read my lisp book
<zacts>	practical common lisp
<zacts>	(while i install my beaglebones)
<scriptgeek>	593 people, that's a pretty good turnout for a sunday evening
<n1cky>	mark4: well that's annoying, why?!
<n1cky>	what's more annoying is that their wiki page doesn't even talk about not being complaint with fhs
<n1cky>	https://wiki.debian.org/filesystemhierarchystandard
<mark4>	because what if /usr isnt mounted (shock horror!!)
<n1cky>	"some unix and linux systems break with the fhs in favor of a different approach, as in gobo linux." and debian aparantly.
<darkcthulhu>	connecting to freenode with sasl is failing o_o
<darkcthulhu>	"due to ongoing abuse the tor-sasl hidden service has been temporarily disabled "
<darkcthulhu>	great
<nullentity>	are you using tor?
<darkcthulhu>	nope
<darkcthulhu>	still failing for me
<nullentity>	then that's not a problem :d
<n1cky>	mark4: https://www.debian.org/doc/packaging-manuals/fhs/fhs-2.3.txt search for terminfo
<nullentity>	i had
<nullentity>	-nickserv- last failed attempt from: <sasl> on may 10 03:11:23 2015.
<zacts>	n1cky: so with the debian chroot, how would i launch iceweasel or something?
<nullentity>	not sure if it's supposed to show as sasl
<zacts>	just modify $path?
<zacts>	or an alias?
<darkcthulhu>	nullentity: it was working a couple of days ago; i'm sure it's not my configuration that changed.
<nullentity>	you can try asking in #freenode if sasl's working
<n1cky>	zacts: i haven't done it before actually... in theory it should be as easy as `sudo chroot ~/chroot /bin/bash -c 'export display=$display' /path/to/executable`
<n1cky>	no
<zacts>	ok, i'll check on #debian
<n1cky>	zacts: try #linux
<zacts>	ok
<mark4>	n1cky, i dont find it in there but i have read that spec before and it says terminfo belongs in /usr/share
<n1cky>	the following directories, or symbolic links to directories, must be in /usr/
<n1cky>	share
<n1cky>	man, misc
<cyclob|work>	hi guys, how do you work out what pixels to draw to make an cylinder base?
<n1cky>	terminfo  directories for terminfo database (optional)
<n1cky>	(sorry for shitty pasting)
<n1cky>	but aparently it's optional in the current version of the spec
<mark4>	yea they probably changed the spec to cater to debian because debian is the most popular distro if you go by it and its derivatives
<mark4>	they are still wrong. terminfo belongs in /usr/share/terminfo. copy items out to /lib if you like but dont freeking move them duh
<n1cky>	mark4: do they at least symlink it back to /usr/share?
<mark4>	no
<n1cky>	yeah that's pretty dumb.
<mark4>	they just move the files out
<felishia>	awwww :( noisy neighbourhours!
<felishia>	neighbours
<deerhawk>	is there any efficient algorithm to solve 123 = 1+c+d+cd for integers?
<inphase>	d=0, c=123-1
<deerhawk>	except for the trivial solutoin
<inphase>	you'll have to be more specific.
<deerhawk>	inphase: you gave a solution, but that solution you gave is one so called trivial solution: it's trivial.
<deerhawk>	for example by setting one variable to 0. usually not of any use.
<inphase>	i don't know, i found it useful.  :)
<deerhawk>	lol
<generalvagueness>	deerhawk, i feel like you're not stating your problem that well
<generalvagueness>	you have constants on both sides of the equals sign, is that really what you want?
<deerhawk>	generalvagueness: yes. i want an efficient algorithm to solve some_constant = other_constant+c+d+cd
<deerhawk>	integer solution, that is.
<deerhawk>	i want to satisfy the equation.
<generalvagueness>	oh but not necessarily 123
<deerhawk>	wolframalpha is able to do it, but i have no idea how it does it.
<generalvagueness>	just some known number
<generalvagueness>	ok
<winsoff>	so, when someone uses a lot of goto statements in their programs, they are a bad programmer.  however, if someone makes a bunch of general-purpose functions that get called again and again, they are a great programmer?
<deerhawk>	123 = (1 + d)(1 + c) .. then wolfram probably use some fast prime number algo
<deerhawk>	solved.
<deerhawk>	winsoff: to vague to argue about that.
<winsoff>	deerhawk, entire languages are dedicated on an abstraction of reassignment and goto statements.
<deerhawk>	winsoff: correction: bad programmers that use goto are bad programmers. good programmers that use goto are good programmers.
<winsoff>	we call them functional.
<joeblow>	where can we learn to program or own ps3 games
<winsoff>	joeblow, ask sony for the development kit?
<deerhawk>	joeblow: pretty much what he said
<deerhawk>	joeblow: ps4 has a x86 cpu, ease things up a bit.
<winsoff>	joeblow, from an entirely naive perspective, games are created for systems with specific tools that prepare your program for the hardware that the console uses.
<joeblow>	but dont you make the game first in windows
<deerhawk>	joeblow: so you gain no skills that you can use outside ps3 if you learn to dev it
<joeblow>	i just want to make a cool game for pot smokers
<deerhawk>	joeblow: you can do that. then you gotta port it. therefor, you write portable code.
<winsoff>	joeblow, what's your game idea?
<joeblow>	hippies smoking pot and getting laid
<winsoff>	joeblow, sounds like a lot of 3d modeling.
<aewffwea>	winsoff: i love 3d modeling...
<winsoff>	aewffwea, shame that they all have 3dting disorders.
<aewffwea>	winsoff: it's like a bug... you wont' have progress without having a few disorders...
<deerhawk>	winsoff: 3d-games written by amateurs looks terrible. just use unity if only making a game is your goal. only the game-design is a full-time job. programming too.
<daspiritmac>	hello. how exactly does x86-64 support 32 bit apps?
<inphase>	half way.
<aewffwea>	daspiritmac: by hardware
<winsoff>	deerhawk, it usually comes down to that.
<winsoff>	daspiritmac, by using half of the bus.
<daspiritmac>	does it just switch modes for those applications?
<deerhawk>	daspiritmac: the cpu goes into a 32-bit mode for that process.
<winsoff>	yep.
<deerhawk>	daspiritmac: yes
<aewffwea>	winsoff: doesn't it just fills everything with 0s?
<winsoff>	this is more of a ##hardware question
<daspiritmac>	thanks.
<deerhawk>	daspiritmac: the instructions are ~64-bit large on 64-bit apps i think.
<winsoff>	aewffwea, complex patterns don't work like that, to my knowledge
<aewffwea>	winsoff: ok :(
<winsoff>	imagine an instruction that reverses the sequence
<winsoff>	filling it with 0s gives you all 0s for the 32 bits of 0 on the end
<aewffwea>	winsoff: yeap, you are right
<aewffwea>	winsoff: who wants to beat? how many years till we go 128 bits?
<aewffwea>	bet :p
<lf94>	going to play roulette again today
<aewffwea>	lf94: russian?
<lf94>	i wonder if i can win like 50 times again
<aewffwea>	lf94: i hope you lose!!!
<aewffwea>	lf94: (just joking xd)
<lf94>	aewffwea, we have the capability to use 128 bit cpus now.
<lf94>	they are not necessary though
<lf94>	hell we could have 1024 bit cpus
<aewffwea>	lf94: but when will they become "neccesary"
<aewffwea>	we were running out of memory at 32 bits, and also integer stuff is faster...
<lf94>	whenever we need them
<aewffwea>	lf94: at which year will that happen?
<felishia>	deerhawk, sympy..
<lf94>	why does that matter?
<aewffwea>	lf94: i'm just wondering
<lf94>	it's silly wondering - it'll happen when it happens.
<lf94>	nothing will change
<lf94>	we will still be writing software as we write it today
<deerhawk>	felishia: sympy?
<felishia>	deerhawk, sorry i'm quite sleepy now, but sympy source code has helped me a lot with any math stuff
<felishia>	it's like wolfram alpha, but you can read it
<felishia>	so you can check how the algorithm actually works
<felishia>	and they're quite good
<deerhawk>	aewffwea: there's no special technical challenge in going to 2^n bits. it's just that there's a trade-off going higher. you get slower buses and integers require larger space in some regards etc. the main reason 64-bit got introduced was to support not only larger integers, but foremost larger memories as memories are getting cheaper
<felishia>	now i need to go to bed :3
<felishia>	night night
<deerhawk>	aewffwea: but i doubt we will see 2^64 bit memories any time soon since that require more atoms than there are in the universe.
<felishia>	deerhawk, quantum physics :o apparently they can go infinite bits
<deerhawk>	aewffwea: sorry, correction: more atoms than half of the visible universe
<deerhawk>	felishia: that's not quite true.
<felishia>	beddie time! now for real...
<deerhawk>	felishia: n q-bits are equivalent to 2^n^n classical bits or something like that.
<anj7>	morning
<inphase>	deerhawk: it's not at all that simple.
<inphase>	deerhawk: quantum computers present a different programming paradigm.
<inphase>	qubits can be entangled with each other in a complicated manner, such that the values in a memory of many qubits are a superposition of many numerical values, each with a coefficient.
<deerhawk>	inphase: yeah, i know :p
<deerhawk>	inphase: so it can do the computation in parallel for the superposition
<nate_b_higgers>	are there any good courses on 8086 asm programming?
<deerhawk>	nate_b_higgers: if you mean the old 8086 cpu, no. they don't teach that anymore. get a book.
<deerhawk>	nate_b_higgers: the internet is full of information anyway, what do you need a course for?
<nate_b_higgers>	what about intel x86?
<deerhawk>	nate_b_higgers: they teach that on uni, for example. there are books and internet. etc.
<nate_b_higgers>	deerhawk, i'm not good at reading stuff and figuring out on my own, i need a lecture with structured "homework" so i can retain the concepts
<deerhawk>	nate_b_higgers: well, how the education system works (and provides info about its courses) in your country depends on what country you live in
<nate_b_higgers>	well, i am really liking online courses right now, i wish there was something like codeschool for assembly
<deerhawk>	idk \o/, i just read stuff wherever convenient.
<mike802>	hello everyone
<amigojapan>	i was able to make espeak speak japanese, still a little buggy,  but i will work out the bugs soon https://github.com/amigojapan/ejspeak
<vdamewood>	hi, people, etc.
<nate_bradley>	hi, we're not people, just robots
<vdamewood>	just a little bit longer and i'll have an os for my newest computer. yay!
<amigojapan>	hey vdamewood , check out my new open source japanese language speach synth, it is stilla  bit buggy,   but i am working on it https://github.com/amigojapan/ejspeak
<amigojapan>	vdamewood: basically i got espeak to speak japanese… it could not do it before
<amigojapan>	vdamewood: i still have some small bugs , like i dont know how to make it say the “small tsu” sound…    and i need to make it pause duing commans and periods….  and take away japanese 「」    but besides that, if you type just japanese, it kindof works
<vdamewood>	amigojapan: you might want to see if there's a way to use espeak phonetically rather than through text.
<amigojapan>	vdamewood: what do you mean? i am using it phonetically
<vdamewood>	amigojapan: ah, it looked like you weren't using a phonetic system in the tests.
<amigojapan>	vdamewood: oh, vdamewood those are espeak ipa phonems
<vdamewood>	yeah, it looks like i was basing my impression on the wrong file. what you actually are using is what i was suggesting, so never mind.
<amigojapan>	ok vdamewood , gtg now,  thanks for taking a look
<amigojapan>	lets talk about it later
<amigojapan>	またね
<vdamewood>	amigojapan: ohh, one thing before you go?
<amigojapan>	vdamewood: i dont really have time, but go ahead
<vdamewood>	amigojapan: do you know what gemination is?
<lf94>	 man canada has shit funding for research and development.
<amigojapan>	nope vdamewood
<farrioth>	lf94: name somewhere that doesn't.
<lf94>	i dunno
<vdamewood>	amigojapan: http://en.wikipedia.org/wiki/gemination see if there's a way to do that with espeak.
<lf94>	i just looked at my country's - is it the same everywhere else?
<vdamewood>	it's the general phonological term for small tsu
<amigojapan>	ok vdamewood i will take a look,  thanks….
<amigojapan>	thanks vdamewood
<farrioth>	a lot of places it depends what field you're in, and how commercializable your research is.
<lf94>	i see
<amigojapan>	ok, bye for now
<lf94>	that makes sense - most of the grants in canada are for the food industry.
<farrioth>	mmm, food is easy to sell.
<farrioth>	as is food tech, i imagine.
<lf94>	maybe i should get into food technology.
<lf94>	rest api food service
<lf94>	b)
<farrioth>	the more i know about food tech, the less i want to eat technologized food.
<lf94>	get /vegetables/root/potato?quantity=10
<farrioth>	but yeah, you could apply your skills to the food industry.
<matviy>	"technologized food"
<lf94>	post /purchase
<lf94>	a local farmer gets your request
<lf94>	sends out the delivery boy
<lf94>	bam
<lf94>	3d printed potato
<farrioth>	ew.
<lf94>	you just need...potato flakes.
<farrioth>	"just add printer!"
<lf94>	hahaha
<vdamewood>	yum, potatoes.
<vdamewood>	welcome back, amigojapan!
<lf94>	moshi moshi
<amigojapan>	vdamewood: ty, my job canceled on me
<amigojapan>	vdamewood: last minute
<vdamewood>	yay! now you can look into gemination.
<amigojapan>	vdamewood: ok, so let me ask a question about gemination, do you have any example like in french or someother langauges that espeak does speak?
<amigojapan>	vdamewood: it is possible to give espeak a -x parameter and get the espeak phonems for that….
<vdamewood>	amigojapan: what langauges does it speak?
<amigojapan>	vdamewood: like apparently french has gemination
<vdamewood>	i can't think of any examples in french.
<amigojapan>	vdamewood: here are the langauges espeak speaks http://espeak.sourceforge.net/languages.html
<amigojapan>	maybe turkish?
<vdamewood>	finnish.
<amigojapan>	lf94: moshi moshi is only used on the phone…  it is kindof rude to use it in person… cause when youuse it in person it is like saying “hey you!”
<lf94>	i'd like it if someone said hey you
<lf94>	:d
<amigojapan>	vdamewood: can you give me an example of a word in finnish that has gemination?
<amigojapan>	ok lf94 :)
<vdamewood>	amigojapan: yeah, give me a sec. most of the words i can remember have long vowels rather than long consonants.
<amigojapan>	ok
<vdamewood>	amigojapan: ymmärtää (to understand)
<amigojapan>	let me try putting that thry espeak, thanks
<amigojapan>	vdamewood: is that a long m?
<vdamewood>	amigojapan: yes.
<amigojapan>	ok…   hmmm, it seems repeating the konsonant makes it long… that did not seem to work for me before, but i will try it gain
<amigojapan>	again*
<amigojapan>	vdamewood: aparently you add a : to the consonant to make it long, thanks a lot! :)
<nate_bradley>	so what is the point of having multiple programming languages?
<nate_bradley>	how do they all work?
<nate_bradley>	i know ruby python and javascript and i don't get it
<resco>	heyo peepl
<amigojapan>	nate_bradley: each programming lnaguage is like a tool that can do a different thing… eventhought some are like swiss army knifes, and can do many things
<nate_bradley>	that's what makes it confusing for me
<winsoff>	an interpretation that i want to get rid of.
<vdamewood>	nate_bradley: learn languages that don't have as much in common with the languages you already know.
<winsoff>	every language has a library for everything.
<winsoff>	there is so much code out there that you can do anything with anything.
<winsoff>	they are less like tools, and more like communities, now.
<nate_bradley>	oh...
<miniman10000>	i want a brainfuck library for game development
<winsoff>	however, ruby, python, and javascript, like vdamewood, are very similar.
<nate_bradley>	this makes it even more confusing
<winsoff>	in reality, what people talk about
<winsoff>	is the fact that different language families do things better.
<vdamewood>	nate_bradley: for example, if you learn c you'll probably get a small idea of how different languages can be.
<farrioth>	winsoff: i'm sure there are many languages that don't have libraries for many things.
<nate_bradley>	i know c
<winsoff>	i can agree with that.  systems languages are good for systems programming.
<nate_bradley>	it was the first language i learned
<vdamewood>	nate_bradley: it wasn't on your list of languages.
<nate_bradley>	i realized that languages are the same, just different syntax and people tell me i'm wrong i can't say anything because i don't know enough
<winsoff>	scripting languages are good for scripting.  see, the difference in the "tool" is actually the structure of the language itself, which barely varies between languages in similar families.
<nate_bradley>	c was the first language i learned, but i heard it's not a real language since it's not used anymore
<miniman10000>	lol
<miniman10000>	so not true
<jrslepak>	"languages are the same, just different syntax" -- what's the syntax for adding a method to an already-existing class in c? ¬_¬
<vdamewood>	nate_bradley: what do you think python, ruby, and javascript are written in ?
<nate_bradley>	c?
<miniman10000>	c is a language by definition. it's used a lot in open source development
<farrioth>	nate_bradley: c is still used. i think all the programs i'm runnnig currently are written in c, except one, which is in c and c++.
<vdamewood>	nate_bradley: javascript can very, but for the most part, yes.
<farrioth>	nate_bradley: not to mention the libraries they use.
<nate_bradley>	so tell me, if they're written in c, then why don't we use c instead?
<winsoff>	miniman10000, what are you trying to say?
<winsoff>	and no, most languages are written in themselves.
<miniman10000>	im trying to say that c is a language and it can be found in a lot of places inverse to what nate said
<nate_bradley>	i am so confused
<farrioth>	nate_bradley: if spoons are made of metal, why don't we just use ingots to eat our food?
<winsoff>	they are bootstrapped.  the first version may be compiled on c (because it was simple at the time), but many languages are also first written in ocaml and compiled from there.
<vdamewood>	nate_bradley: if computers are made from integrated circuits, then why doesn't everyone go out and get a kit of ics to do their computing?
<miniman10000>	well yes self hosting is often a important goal for a language or compiler.
<nate_bradley>	vdamewood, that sounds like a great idea
<farrioth>	winsoff: out of interest, can you name some that were initially written in ocaml?
<nate_bradley>	but spoons and programming are different
<vdamewood>	nate_bradley: it's also error prone and time consuming.
<amigojapan>	nate_bradley: then you must realize the different level of abstraction of like c to make a 3d game, and unity3d to make a 3d game,  unity3d is much easier….  while it is still possible to make it in c, but it is much harder
<miniman10000>	as well as the performance loss you get by not taking advantage of modern ic fabs
<miniman10000>	and power efficiency
<nate_bradley>	but don't you need to program the games in c?
<farrioth>	also, i don't think being self-hosting necessarily is (or should be) a goal of many languages.
<vdamewood>	being self-hosted is impractical for most interpreters anyway.
<nate_bradley>	how does one language be written in itself?
<nate_bradley>	what if i want to tell the computer in plain english what to do?
<nate_bradley>	why can't there be a programming language like that?
<amigojapan>	nate_bradley: langauges like cobol are very close to plain english
<vdamewood>	english is crap!
<jrslepak>	"how does one language be written in itself?" -- same way that language could be written in any other language
<amigojapan>	nate_bradley: computers are stupid, and they dont know hwo to handle slight differences in what people mean
<farrioth>	nate_bradley: english is a pretty poor choice for explaining things to a computer. it has been attempted to various degrees, and failed to various degrees.
<miniman10000>	i like lua for its non requirement of brackets and ; and the use of using key words "and" "or" etc
<nate_bradley>	so what am i trying to understand when i'm learning programming
<nate_bradley>	i don't get it
<nate_bradley>	what's the main idea that i should learn
<amigojapan>	miniman10000: i chose lua for one of my projects because of it’s use of words, cause i except some blind people to be programming in my project, i thought it would be easier for them
<miniman10000>	the only thing i learn while programming is what do i need to do to get twords my goal.
<farrioth>	you shouldn't necessarily be looking for one single main idea.
<nevodka>	is it true that compilers for early languages generated code that ran slower compared to code written by programmers
<amigojapan>	nate_bradley: learn how to give the ocmputer instructions in order?
<woggle>	nate_bradley: i suggest getting the computer to do things that you personally find useful.
<nate_bradley>	oh thanks amigojapan
<miniman10000>	nevodka, it's possible that people wrote above average assembly code that was faster than the first compiled codes since they were more about getting it working then getting it right i imagine.
<miniman10000>	just speculation.
<farrioth>	nate_bradley: probably, if you're comparing unoptimized compiled code to hand-written assembler.
<winsoff>	farrioth, i believe rust was.
<vdamewood>	one thing to keep in mind is that ultimately, languages are implemented in one of two ways: translation to another language, or execution by an interpreter.
<miniman10000>	translate to machine code! woo~
<farrioth>	winsoff: ah, interesting. thanks. is it a common choice, though?
<vdamewood>	in the case of c, you use a compiler, written in c, to translate to machine code. the machine code is then interpreted by the cpu.
<nevodka>	the c compiler is written in c?
<nevodka>	how exactly does that work
<vdamewood>	though, when you use the compiler, you're actually using a machine-code translation of the compiler's c code.
<amigojapan>	nevodka: it has been written in c for quite a while
<winsoff>	farrioth, i have heard of multiple people writing compilers in it, but i am unsure if it is actually popular in language completion.
<nate_bradley>	are there courses online where we can learn assembly?
<farrioth>	winsoff: aha.
<vdamewood>	nate_bradley: i learned assembly from books.
<miniman10000>	nevodka, originally a compiler will be written in some other language or possibly assembly - they use that to create c and then c can eventually compile itself also known as self hosting.
<amigojapan>	nevodka: basically, whena  programming langauge can compile to machine code, it can write tiself in itself
<nevodka>	yeah
<nevodka>	interesting
<vdamewood>	miniman10000 nevodka: also, some early programmers would compile by hand.
<nevodka>	yeah
<nevodka>	back in the dark ages :>
<amigojapan>	back when programming was done in punch cards, it was not that difficult to write a program in machine code i think
<vdamewood>	amigojapan: it still isn't if the program is simple enough.
<cluelessperson>	amigojapan, i would say it was more difficult.
<miniman10000>	vdamewood, wikipedia on compiler "a compiler is a computer program (or set of programs) that transforms source code written in a programming language (the source language)" which would mean the transformation of source code to written programming language into another language. are you saying that's what they did?
<amigojapan>	cluelessperson: you could look at the machine instructions as wholes in the punch cards
<cluelessperson>	amigojapan, fewer options, mistakes were harder to correct, limited to smaller applications, slower output, limited overall.
<lf94>	amigojapan is right
<lf94>	it is essentially the same thing
<amigojapan>	now all you see is a stream of 1s and 0s, or hex, which is harder to read than punch cards
<lf94>	not only that
<lf94>	those punchcards actually had text all around them to help
<miniman10000>	like comments?
<vdamewood>	miniman10000: the 'some early programmers'? yes, they did the translation themselves.
<amigojapan>	oh, you mean comments?
<winsoff>	we call it bootstrapping, miniman10000
<lf94>	comments were little post-it notes b)
<cluelessperson>	lf94, amigojapan   it's a god damn pain in the ass is what that would be.
<cluelessperson>	usign punch cards.
<lf94>	back then it wasn't
<lf94>	today, yes
<cluelessperson>	just the practical application of it would make me want to blow my brains out.
<lf94>	everything is relative
<vdamewood>	after all, if i know enough to write a compiler, then i would know enough to compile code by hand as well. it's just that the computer can do it faster than i can.
<cluelessperson>	lf94, still cumberson, even back then
<miniman10000>	winsoff, googled what a bootstraper is. i've made a bootloader but it looks like a bootstrap is the second stage loader. never did that.
<cluelessperson>	some
<winsoff>	miniman10000, bootstrapping exists in the same way; no need for jargon like "self-hosting"
<amigojapan>	cluelessperson: well, in comparison yes….    but there were some things about the early machines that where simpler, like being able to look at machine code in the form of wholes in a punch card, and as lf94 says, people could write comments on the piece of papper
<vdamewood>	miniman10000: 'bootstrap' is a heavily overloaded word. in general, it means to get something started, and often implies fulfilling self-dependencies.
<inphase>	a long time ago i used to write programs in straight machine code, entering numbers in.  it's not really much harder than assembly once you wrap your head around it.
<winsoff>	vdamewood, overloaded is a good thing in this sense, because it lets people see how it happens
<winsoff>	"self-hosting" doesn't sound even half as cool as picking yourself up by the bootstraps
<miniman10000>	vdamewood, ah now it makes sense - this is probably why "jargon" exists because your meaning gets lost otherwise.
<lf94>	bootstrap? did someone say bootstrap?! i love bootstrap it is the best ui framework ever like i love it like it is so easy!~
<vdamewood>	winsoff: i just mean overloaded as in having more than one meaning.
<miniman10000>	just like real overloading!
<lf94>	they had bootstrap back then too????
<miniman10000>	lol
<miniman10000>	bootstrap is a ui framework too!? lol thats just silly.
<vdamewood>	okay, time to see if this works
<miniman10000>	hes launching skynet
<winsoff>	vdamewood, precisely, which is an overloaded term itself!
<vdamewood>	crap. the text is so small i can't read it.
<vdamewood>	on the bright side, my raspberrypi works.
<miniman10000>	b+ or 2?
<nate_bradley>	is bootstrap illegal to use if you're getting paid to develop a site  and you want to use it
<nate_bradley>	is that copyright infrigement?
<miniman10000>	if i were to take a guess while having no idea what bootstrap is id go with it's in the liscencing.
<vdamewood>	2, i think.
<miniman10000>	2 is the quad core b+ is single core
<vdamewood>	nate_bradley: without a license, any inclusion of someone's else's code in your own project is copyright infringement. read the license to find out what you can do with a project's code.
<cluelessperson>	nate_bradley, google whether or not bootstapping is even owned by anyone, probabaly not.
<cluelessperson>	nate_bradley, take his advice, ignore me lol ^
<planckwalk>	"bootstrap" is mit licensed, isn't it?
<planckwalk>	as in  http://getbootstrap.com/
<nate_bradley>	what is mit license mean?
<vdamewood>	nate_bradley: http://opensource.org/licenses/mit
<planckwalk>	or specifically for that project:  https://github.com/twbs/bootstrap/blob/master/license
<vdamewood>	miniman10000: it was a gift someone gave me so i could figure out how to program his solar panels and make a management interface for him. i don't know exactly what specs it has right now. i just know the pinout of the gpio.
<vdamewood>	amigojapan: remember when i gave your robot seizures?
<amigojapan>	vdamewood: robot seizures? sorry, i dont know what you are talking about.  is that a software you gave me with mario lost levels?
<vdamewood>	amigojapan: not "gave you robot seizures", "gave your robot seizures." as in "gave seizures to your robot"
<nate_bradley>	how is this not illegal?
<nate_bradley>	* blueprotoman (~blueproto@sb130245064190.cs.stonybrook.edu) has joined
<nate_bradley>	<v
<nate_bradley>	http://www.telegraphacademy.com/
<amigojapan>	vdamewood: is that my ear cleaning robot?
<blueprotoman>	nate_bradley: ???
<nate_bradley>	blueprotoman, a discriminatory programming school that only allows black people in
<nate_bradley>	that's racist
<vdamewood>	amigojapan: i don't know. at the time it was just an arm (really a stick) that was on a motor, and you made an interface to control the motor.
<blueprotoman>	nate_bradley: before i share my thoughts, why me?
<remram>	i don't understand where gcc places the profile files, when building with -pg
<nate_bradley>	blueprotoman, you replied ???
<amigojapan>	vdamewood: yeah, that was quite a qhile ago
<nate_bradley>	so i answered your question
<vdamewood>	amigojapan: well, a more local friend wants me to give his robots seizures too!
<blueprotoman>	nate_bradley: didn't you ping me one just before that?
<blueprotoman>	<nate_bradley> * blueprotoman (~blueproto@sb130245064190.cs.stonybrook.edu) has joined
<amigojapan>	vdamewood: hehehe,   remote control robots are fun
<nate_bradley>	no i didn't, i don't think
<nate_bradley>	oh shit, sorry
<vdamewood>	amigojapan: how much do you know about electronics and how not to release the magic smoke?
<nate_bradley>	my stupid client copied and pasted
<blueprotoman>	nate_bradley: oh, i see.  no worries, then, just curious.
<vdamewood>	so, that explains when the <v is, it's the beginning of my nick on the next line.
<vdamewood>	s/when/what/
<blueprotoman>	nate_bradley: anyway, "people of color" doesn't necessarily mean black.  and a given person of low income is more likely, at least in the us, to be of color; this is an opportunity to help such disadvantaged people to succeed.  i bet if you were white, and could prove that you had nothing, that you'd be let in.
<vdamewood>	hmm... on the one hand i want to go to the coffee shop. on the other hand i don't.
<nate_bradley>	blueprotoman, i'm low income and i'm white as sperm, am i of "color"
<blueprotoman>	nate_bradley: well, have you applied to the damned thing!?
<amigojapan>	vdamewood i dont really know that much abotu electronics, fortunately i have not burnt much hardware yet, just an sd card
<nate_bradley>	blueprotoman, no i don't think i'm dark enough to qualify, but i'll try
<blueprotoman>	nate_bradley: regardless, i believe this is also to try to diversify technology in the us; take a walk in my school's cs building, and you'll find a *hell* of a lot more white, asian, and indian students than black, latino, or even native american ones.
<blueprotoman>	also http://www.telegraphacademy.com/founders/
<nate_bradley>	blueprotoman, maybe that's because they're interested in sports?
<blueprotoman>	nate_bradley: stop.  just stop.
<nate_bradley>	no i'm serious
<blueprotoman>	nate_bradley: and on what basis do you make that claim?
<nate_bradley>	it's cultural
<nate_bradley>	are you trying to be pc here? they're not... i'm trying to be fair here
<blueprotoman>	nate_bradley: i'm trying to avoid broad, baseless generalizations
<nate_bradley>	they're not baseless
<pyon>	okay. so, i'm making a function that moves "elements" (whatever that might be) from one object to another. because i'm using a language with oo syntax, i'm being forced to make a choice between `source.move_to(destination)` and `destination.move_from(source)`. are there any good reasons to pick either over the other?
<nate_bradley>	they see that they can make a more money drug dealing, pimping, or playing sports than doing something that they feel is in "control of the white man"
<nate_bradley>	i read lots of books about the subjects and i've done my thesis on criminology
<nate_bradley>	i literally had to go to ghettos and interview hundreds of people
<blueprotoman>	nate_bradley: what exactly was your thesis on?
<winsoff>	stop drawing lines in the sand
<winsoff>	let me blow your mind
<winsoff>	white and black doesn't exist the way you think it does
<blueprotoman>	(also, before we continue, if i'm gonna talk about evidence i should present some for my own prior claim http://kff.org/other/state-indicator/poverty-rate-by-raceethnicity/ )
<blueprotoman>	winsoff: i know that.  there's different flavors of all of the above.  just ask any south african
<farrioth>	pyon: would it work to make both methods available?
<nate_bradley>	blueprotoman, you're taking that out of context
<winsoff>	the system of race needs to be ignored, because it is statistically insignificant.  it is entirely foolish to classify people the way that race attempts to.
<nate_bradley>	take the same amount of whites and the same amount of minorities, you'd see that the minorities are the majority in the given categories usually
<winsoff>	it is a poor sociological model, and if it is poor, it needs to be discarded.  stop saying "whites"
<remram>	i have no idea where my gcov data gets written to :-°
<winsoff>	this is like watching middle school kids argue that blonde girls are stupid
<remram>	i'm not even sure how many files or what names they have
<nate_bradley>	winsoff, blonde girls are white, so they can't be stupid...
<blueprotoman>	nate_bradley: out of context?  remember, the link i gave is in reference to this claim: "and a given person of low income is more likely, at least in the us, to be of color"
<nate_bradley>	blueprotoman, why put a picture that's as black as my tires on the homepage?
<nate_bradley>	of a black guy that's as black as my tires*
<winsoff>	the fact that race/ethnicity is self-defined is what shows you that it is entirely bullshit.
<pyon>	farrioth: one would simply be a wrapper around the other. :-|
<blueprotoman>	nate_bradley: because they might be their primary target audience?  doesn't have to exclude others, though
<nate_bradley>	blueprotoman, what if someone said for white people or asian people?
<nate_bradley>	what if it said that
<amigojapan>	yay! vdamewood , i got the small tsu pronouced correctly! https://github.com/amigojapan/ejspeak
<vdamewood>	amigojapan: yay!
<amigojapan>	:)
<blueprotoman>	nate_bradley: in the context of computer science and/or technology, it wouldn't be quite so meaningful, given that there's a bazillion such people in the field already
<farrioth>	pyon: that's fine; then the choice of which one is the wrapper is essentially arbitrary.
<nate_bradley>	well i'm going to start my own school that's only for white people and if black people want to join they can go to telegraph academy because only white people can go to fiber academy
<heer>	hi
<heer>	you ?
<heer>	nate r u here?
<heer>	where is everyone ?
<blueprotoman>	nate_bradley: okay.  sure thing.  just don't teach them how to make good arguments, though; they'll ask for refunds
<heer>	hi blue
<blueprotoman>	hi, heer
<nate_bradley>	no, i'll teach them how to properly burn crosses and use jiggaboo sticks on jungle bunnies ;)
<blueprotoman>	nate_bradley: maybe one of them will know a good lawyer, you're sure as hell gonna need one
<nate_bradley>	why?
<heer>	hello blue r there others here?
<vdamewood>	nate_bradley: i think you should acquaint yourself with the channel rules.
<heer>	it is quiet
<blueprotoman>	heer: are we in the same channel?  it is most certainly not quiet in here
<nate_bradley>	heer: do you think this is racist? also, why is harvard discriminating against asians
<heer>	yes my first time here
<nate_bradley>	http://www.telegraphacademy.com/
<nate_bradley>	heer ^^^^
<blueprotoman>	nate_bradley: prove the harvard thing
<nate_bradley>	do you think that's racist
<remram>	can i select a sane location for .gcda and .gcno files?
<nate_bradley>	http://www.nytimes.com/2014/11/25/opinion/is-harvard-unfair-to-asian-americans.html?_r=0
<nate_bradley>	blueprotoman,
<vdamewood>	nate_bradley: ranting about things is one thing, but using actual slurs crosses the line. don't do it.
<blueprotoman>	nate_bradley: reading the article now, gimme a minute
<amigojapan>	nate_bradley: well i'm going to start my own school that's only for white people and if black people want to join they can go to telegraph academy because only white people can go to fiber academy<— racism is against channel rules
<nate_bradley>	amigojapan, how is that racist? don't you know about telegraph academy?
<nate_bradley>	http://www.telegraphacademy.com/
<amigojapan>	nate_bradley: i dont need to know what it is to know that the statement is racist
<amigojapan>	it is discrimination
<amigojapan>	by skin color
<ams>	morning
<vdamewood>	ams: run for your life!
<ams>	why ..
<blueprotoman>	nate_bradley: the difference is, harvard (ideally, at least) decide on admission (*not* necessarily financial aid; that's a separate matter) by merit.  telegraph academy seems to be based on need.  (both use motivation, of course)
<farrioth>	amigojapan: had you been following the conversation? nate_bradley was using that as a contrastive example to demonstrate his views on telegraph academy's admission policies, not actually proposing to start such a school. as far as i'm aware, talking ~about~ racism isn't agains the rules.
<blueprotoman>	nate_bradley: oh, on top of that, telegraph's website seems to make very little indication that it favors minorities; "the 12-week software engineering accelerator for people of color." appears to just be marketing!
<amigojapan>	farrioth: ok, no, talkibg about it is not against the rules
<jeaye>	nate_bradley: you've pasted that link three times now. don't do it again.
<amigojapan>	nate_bradley: if i missunderstood, i am sorry
<blueprotoman>	however, i bet that if you want to apply, you'll won't get in, but not because you apparently don't make a lot, but because you've had an opportunity to learn programming; you obviously went to college, as you mentioned a thesis you did.  so you could've majored in cs there, if you didn't already (doubt you actually did, because your thesis indicates otherwise, but i'm not calling your field of study into question)
<nate_bradley>	blueprotoman, you're contradicting yourself
<amigojapan>	actually the people of telegraph academy are being racist against white people
<blueprotoman>	nate_bradley: how?
<nso95>	might i remind everyone that it's 2015
<nate_bradley>	well you're saying that it's marketing, but that kind of "marketing" is discriminatory and against the law
<nate_bradley>	it's implying that nobody but "colored" people can join the camp
<blueprotoman>	nate_bradley: do they say that anywhere?
<vdamewood>	http://kathyescobar.com/wp-content/uploads/2013/10/equality-vs-justice.jpg
<nate_bradley>	try wording the same thing but the opposite, "the 12-week software engineering accelerator for white people."
<nate_bradley>	how does that sound?
<ams>	please stop
<blueprotoman>	nate_bradley: a bit pointless, given that there seem to be a lot of them in software already
<remram>	can't go to sleep because travis is too slow during the day... ouch
<nate_bradley>	blueprotoman, so that gives people the right to make a racist bootcamp?
<ams>	nate_bradley: cut it.
<nate_bradley>	ams, please just help me end the racist bullshit
<nate_bradley>	i'm sick of it
<blueprotoman>	nate_bradley: go to one of their meetings and see if they're really racist!  oh, and one of the founders is a white chick; you think she'd want to support a cause that excludes white people?
<nate_bradley>	blueprotoman, she's not that white
<blueprotoman>	nate_bradley: are we looking at the same person?
<nate_bradley>	yes
<ams>	nate_bradley: i won't help you in trolling, flaming, or being off-topic. cut the dicussion.
<blueprotoman>	nate_bradley: she has freckles, for christ' sake!
<ams>	blueprotoman: you too.
<ams>	lets talk programminmg
<blueprotoman>	ams: i was about to get to that, actually
<blueprotoman>	my argument is ultimately this; telegraph academy, from what i understand about it and its mission, is doing nothing wrong.  stop making baseless assumptions and broad generalizations about telegraph academy, its target audience, and its purpose.  the whole "they're interested in sports, it's a cultural thing" remark you made could very well be enough to kick you from this channel.  end this farce right now, and i think we'
<blueprotoman>	ll all be fine.
<nate_bradley>	i know her personally, i met her at a startup incubator her mom's side of the family is italian and indian/black mixed
<nate_bradley>	she seemed really nice but a bit superficial
<ams>	jeaye: can you cut the dicussion?
<nate_bradley>	blueprotoman, would i be doing anything wrong then if i make my programming bootcamp mission to only recruit white people?
<jeaye>	nate_bradley: blueprotoman you're not only very far from talking about programming, you're making multiple people uncomfortable.
<jeaye>	stop the discussion now.
<nate_bradley>	how is it my fault? are they uncomfortable because they can't handle the truth?
<nate_bradley>	serious question here
<blueprotoman>	jeaye: i was finished, that was my last statement on the matter
<nate_bradley>	this isn't far from programming as programming should be an inclusive community, not exclusive
<jeaye>	nate_bradley: if you want to banter about my call, /j ##programming-ops
<jeaye>	any more in here and you're +q
<nate_bradley>	i don't understand what you're saying
<nate_bradley>	banter about your call?
<blueprotoman>	nate_bradley: he's saying "shut up or i'll shut you up"
<planckwalk>	discuss teh decision.
<blueprotoman>	and that, that too
<nate_bradley>	you're just going to stand by idle, and not do anything to change the racism in this community? seriously?!
<amigojapan>	nate_bradley: blueprotoman, would i be doing anything wrong then if i make my programming bootcamp mission to only recruit white people?<— you would be, and so are the telegraph academy
<ams>	anyone know of any good decompiler tools for c? ...
<blueprotoman>	ams: probably not an easy task unless you're trying to pick apart a binary that has debugging symbols
<ams>	binary has debugging symbols... so it shouldn't be to complicated to figure it out..
<joeblow>	let me google that for you
<blueprotoman>	ams: try ##c or ##c++-general
<ams>	blueprotoman: no, i'm trying here.
<blueprotoman>	ams: i didn't say don't try here, but those places are more likely to have knowledgeable people on the matter
<ams>	blueprotoman: no, they don't.
<blueprotoman>	ams: you tried already?  well, that was quick
<vdamewood>	ams: what arch are you decompiling from?
<xeno_>	nate_bradley: you're arguing against a programming bootcamp aimed at only black people?
<ams>	blueprotoman: no, since the only thing on topic in ##c is the c language.
<ams>	blueprotoman: decompilation is off-topic.
<xeno_>	nate_bradley: i can see the issue, but at the same time, what if it was a programming bootcamp aimed at women?
<blueprotoman>	ams: try ##c++-general, then (there is a ##c-general, but it doesn't have a lot of people in it)
<inphase>	xeno_: the conversation was ended by op.  best to move on.
<xeno_>	ah
<xeno_>	sory
<ams>	blueprotoman: so before you start recommending random channels, please figure out what is being decompiled (it might just not be c!!!), and just recommending channels blindly is _rude_
<planckwalk>	besides which, your conversation partner can't talk
<ams>	blueprotoman: no, please stop giving useless advice.
<blueprotoman>	ams: didn't you just say you wanted to decompile a c program?
<ams>	blueprotoman: no, i didn't.
<blueprotoman>	<ams> anyone know of any good decompiler tools for c? ...
<amigojapan>	blueprotoman: ams only uses lisp
<blueprotoman>	then what's this, an egg salad?
<ams>	blueprotoman: yes, so decompilation of something into c.
<blueprotoman>	ams: okay, that's a bit clearer (i thought you meant you were trying to decompile a program *that was written in c*)
<ams>	possibly, in either case recommending a c++ channel is even more useless in that case since the two languages are not even compatible.
<ams>	boomerang .. looks promising...
<blueprotoman>	ams: and that's a totally fine thing to ask in here; i just pointed you in the best direction i could because i bet a lot of the best c++ programmers in ##c++-general are also pretty handy with c
<amigojapan>	blueprotoman: even if he was asking about how to decompile a program written in c, that would not be a c question….   cause the resulting code would not be c but most likely assembler
<blueprotoman>	amigojapan: it would depend on the decompiler.  and i was just going by what he asked; i ain't a mind reader, or that knowledgable about decompilation
<amigojapan>	blueprotoman: it does not matter what a program is written in,   decompilation usually spits out assembler...
<blueprotoman>	amigojapan: i obviously didn't know that!  i mean, it makes sense now that i think about it, but since you mentioned debugging symbols i'd assumed you were trying to get back information in c, because depending on the amount of debugging information the binary might just contain enough info to reproduce the entire program
<amigojapan>	i did not mentiond ebugging signals
<amigojapan>	debugging*
<textmode>	once upon a time maybe. but these days optimisation is *brutal* on anything that might actually have implied structure.
<blueprotoman>	<ams> binary has debugging symbols... so it shouldn't be to complicated to figure it out..
<ams>	yes, (dwarf to be specific) debugging symbols  are language agnostic.
<blueprotoman>	ams: really, now?  did not know that
<blueprotoman>	you learn something every day, i suppose
<ams>	yes, just like elf is also language agonstic.
<amigojapan>	ams: if you find a good decompiler to c, i would like to know it
<blueprotoman>	elf's not debugging, i don't think
<textmode>	i think a lot of us would.
<blueprotoman>	i always assumed debugging symbols were compiler-dependant
<textmode>	blueprotoman: symbols are symbols.
<ams>	blueprotoman: i never said that elf was debugging.
<ams>	it is an executable format.
<ams>	for which you can complile down from any language.
<blueprotoman>	ams: ah, yes, right
<ams>	amigojapan: will do.
<amigojapan>	ams: maybe if you first dissasemble, and them use an assembler to c converter like these http://reverseengineering.stackexchange.com/questions/3748/converting-assembly-code-to-c
<textmode>	i've heard that hexrays is supposed to be pretty good..
<ams>	amigojapan: uhm, no thanks ..
<woggle>	having full debugging information is quite unusual, so i'd be surprised if "decompilation" tools that target c took advantage of it.
<ams>	textmode: that is non-free software, so totally unusable.
<textmode>	ams: i contend that it runs just fine.
<blueprotoman>	woggle: depends on what you're trying to decompile.  real software, sure.  but an open source project or one of his own things for shits and giggles?
<ams>	amigojapan: uhm, thanks .. nah, i've done enough disassembly and decompilation manually that it isn't fun.
<ams>	textmode: the license explicitly prohibits running as you choose, so no, it doesn't.
<woggle>	blueprotoman: unusual in the sense that one usually doesn't care about decompilation if one has it.
<amigojapan>	ams: it would seem the natural progression, since a dissasembler produces assembly….      then if you want to see that in c, you need to complie hte assmebly to c
<blueprotoman>	woggle: like i said, maybe it
<blueprotoman>	woggle: like i said, maybe it's meant to be an educational exercise; but don't ask me, ams is the one trying to decompile things!
<ams>	nothing educational about it.
<ams>	it is one more attempt in making propietery software irrelevant.
<blueprotoman>	ams: i'm just talking about *your* wants and needs in general, not the purpose of decompilers as a whole
<ams>	blueprotoman: yes, and i said my wants.
<ams>	jeez..
<vdamewood>	ams: if i knew something, i'd have mentioned it by now.
<blueprotoman>	ams: oops, i must have missed that; sorry, half of my attention is elsewhere
<textmode>	ams: the license would surely allow it to be used for its intended purpose though? make a "opensource forever!" stand if you must, but don't pretend that perfectly functional products don't work.
<vdamewood>	textmode: i'm pretty sure ams is in the free software camp, and not the open source camp.
<ams>	farrioth: non-free software is not functional, it cannot be modified.  i have not read the license in detail, but it will contain bits and bobs that prohjibit using it on it self, and other stupidity.
<amigojapan>	vdamewood: what is the difference?
<ams>	amigojapan: https://www.gnu.org/philosophy/open-source-misses-the-point.html
<amigojapan>	ok let me see ams
<vdamewood>	ams: am i right, though?
<ams>	vdamewood: yes, thanks.
<textmode>	ams: which is an ideological opinion. i'm not saying you are wrong. but you are misrepresenting both yourself and the product in discussion. all evidence suggests that hexrays works, and for a great number of people. saying otherwise without concrete evidence just makes you look silly, regardless of the ideological purity of your position.
<ams>	textmode: clearly it does not if i cannot run it.
<ams>	textmode: clearly it does not since i cannot modify it.
<ams>	textmode: clearly it does not since i cannot distribute it.
<textmode>	ams: i can not run mac software on my linux. it still perfectly functional software.
<ams>	sure you can, you can recompile it.
<aewffwea>	does anyone here supports that all software should be free?
<textmode>	ams: only if i have the source code. perhaps its been lost through no fualt of the developers?
<blueprotoman>	aewffwea: beer, or speech?
<ams>	textmode: if it is free software, yo have the source code.
<textmode>	(a common usecase for a decompiler)
<aewffwea>	blueprotoman: nobody ever gets charged by software, and you get the source code
<ams>	aewffwea: i support it.
<aewffwea>	ams: not neccesarily... sometimes the .exe is free, but the source is not
<vygj>	ams: what if it uses cocoa
<textmode>	aewffwea: yeah, that tact isn't going to work.
<ams>	aewffwea: then it is not free software.
<textmode>	ams: look, we get it. you -- ideaologically -- do not consider closed source software worthy of your time. *but it still exists*
<aewffwea>	ams: how do you realistically expect programmers to make a livelihood if all software is free? i know you can see that companies will pay you to fire "free software" but i find that not extremelly realistic... a lot of time software only matters because a company gets it first compared to another company....
<ams>	textmode: i said non-free software, not closed source.  two different things.  i suggest you visit www.gnu.org and read up on the differences.
<ams>	aewffwea: realistically? like before.  i've been making my livelyhood on free software for over 25 years.
<textmode>	ams: offs, you know exactly what i meant. you are just being deliberately obtuse. and its not strengthening your position. its just making me dislike you.
<textmode>	and i doubt i'm the only one.
<ams>	textmode: it is also wrong to say it is ideological, it is about ethicas, morals, and being able to control your own computer.
<aewffwea>	ams: i think that sadly, a lot of companies would stop investing in software if all the software was available to everyone all the time...
<ams>	textmode: sorry, no, i do not know exactly what you meant.
<textmode>	ams: thats the textbook definition of ideological.
<ams>	textmode: again, no it isn't.
<ams>	aewffwea: lots of companies are investing in free software, i do not see why yuou think they are not.
<aewffwea>	ams: i'm not saying it applies to 100% of the cases... i'
<aewffwea>	ams: i'm saying it applies to a lot of it, i don't know the exact numbers but i guess that probably more than half of the software....
<ams>	aewffwea: most companies don't care as long as they get stuff that works.
<ams>	aewffwea: e.g., all software i write is licensed under the gpl to my customers
<aewffwea>	ams: do you think that jpmorgan and morgan stanely would invest so heavily in software if they could both get all the software the other has?
<textmode>	ams: fine, whatever. pretending that certain things you don't like happen to also have the property of nither being functional or present is disingenious and likely to provoke arguments, like this one.
<textmode>	ams: it would serve you better to just say "i don't use non-free software."
<aewffwea>	ams: do you think that microsoft would release new versions of office if it were free?
<ams>	textmode: no, since that will not get others to stop using sofwtare that does not work.
<textmode>	ams: or whatever you may.
<ams>	aewffwea: why not? nobody is going to sit down and figure out it.
<aewffwea>	ams: do you think that antivirus companies would release new antiviruses if we don't pay them? i certainly prefer paying them rather than getting a lot of ads....
<aewffwea>	ams: i didn't understand your last comment
<ams>	aewffwea: anti-virus software is pointless.  but the big thing about them is not the software itself, but the database that they need.
<textmode>	ams: actually, this conversation really makes be wonder why i bother with this shit, when i could just cough up some cash and be done with punks like you.
<aewffwea>	ams: so you can charge for the database but not for the software?
<ams>	textmode: and now youa re both hostile, and attacking me.
<ams>	aewffwea: that is why they do anyway ..
<ams>	aewffwea: most anti-virus software is gratis, and it is the subscription to the dataase you pay for.
<ams>	aewffwea: as for ms office, and some other big bemoths, if ms would release it as free software, i doubt anyone would make a fork of it .. it is to big, to expensive to maintain, and what not.  just look at libreoffice... orthe linux kernel, nobody is forking it off and starting their own ship.
<aewffwea>	ams: kind of... you cannot download an antivirus and use a 3rd party database, so they are actually charging for the software in my opinion, because it's locked to their database or nothing
<ams>	aewffwea: the important thing about software is seldom the source code, it is the support, the knowledge the developers have.
<aewffwea>	ams: if they only wanted to charge you for the database they would allow you to use 3rd party databases
<ams>	aewffwea: possaibly, i do not know what it is now.
<ams>	(anti-virus stuff is pintless anyway but for different reasons)
<aewffwea>	ams: but that's my question... i'd like office to continue evolving.... will someone add more features if it's free and open source?
<aewffwea>	ams: i find anti-virus stuff useful :)
<ams>	ofcourse they will, that is what programmers are paid for _anyway_
<ovrh>	good morning!
<aewffwea>	ams: who will pay a programmer to add stuff to office?
<ams>	aewffwea: the customer that wants the features
<ams>	aewffwea: exactly like it is now.
<aewffwea>	ams: but it costs like $100.000 to add a feature... most single customers won't be willing to pay that much
<ams>	aewffwea: no it doesn't.
<aewffwea>	ams: it depends on the feature... but it can cost that, less, or more...
<ams>	(it depends on what kind of a feature as well)
<aewffwea>	ams: i know... but $100.000 is basically a single guy working for office for a full year...
<aewffwea>	ams: who will pay that?
<ams>	aewffwea: a company?
<ams>	just like it is today?
<textmode>	some features would cost a lot more than that.
<aewffwea>	ams: which company? realistically speaking?
<ams>	aewffwea: red hat?
<textmode>	bare in mind that not everyone is, or knows, a programmer.
<ams>	aewffwea: any company that needs some program?
<aewffwea>	most companies i know would say: bleh, someone else will pay for it... don't bother
<ams>	there are very few features that would cost anyone 100k.
<aewffwea>	ams: actually, i think that most important features would cost much more like that... although i have to admit i have no idea...
<ams>	100k is about 2 years full time in europe on a nice wage.
<ams>	2 years is enough to write alot of programs from scratch.
<textmode>	programmers command some decent wages, though.
<textmode>	and consider that all the "easy" stuff would be done first.
<aewffwea>	ams: modifying a very big program is usually much more complicated than creating a program from scratch...
<textmode>	so after a while, the only things left would be the real bastards that cost lots of time and money.
<ams>	aewffwea: sure, and hence why one has support contracts.
<aewffwea>	ams: apart from that... the new feature needs to be tested... word can run on a lot of different machines... how do you ensure a good qa process?
<ams>	aewffwea: 10k month for n hours of service.
<ams>	aewffwea: same way you do it for anything else.
<aewffwea>	ams: i don't think that it'll work realistically speaking...
<aewffwea>	ams: on an "hipotetical plane" it's very nice, and very idealistic...
<ams>	aewffwea: there is nothing hypothetcial about it.
<ams>	it is real world.
<aewffwea>	ams: sadly, i think that reality is a lot more complicated, and that approach would be a disaster...
<textmode>	who'd take command of the testing effort, if onyly to make sure says hours are actually accounted for?
<ams>	the programmer.  the contractor.  who ever does the job.
<ams>	like it is done today.
<textmode>	well, if they do the testing themselves, then they have to foot the bill for it too.
<lf94>	what are we talking about
<textmode>	you'd be surprised how much testing can cost.
<aewffwea>	textmode: actually you release the new version, and it breaks... so someone says it doesn't work on mac, they fix it on mac but it breaks on windows... then they fix it on windows and it breaks on android... so people star forking and you have 3 branches of office, and everybody develops on the latest stable version because they don't want to integrate the other guys code, so after a
<aewffwea>	while the code that somenoe else creates it's useless to you....
<ams>	textmode: no, you would be suprised how little it costs.
<aewffwea>	ams: the thing is that if my company only uses android i'll only pay for testing in android... if anything else breaks i don't care...
<ams>	good for you.
<textmode>	ams: you mean distributed testing? then you need someone to pull that all together. and if we're talking companies that could include pulling information in from *competing* companies. good luck with that.
<aewffwea>	ams: it's even more complicated, maybe i don't care if word is 20% slower because of that feature, so they test it, it works but it's 20% slow which is fine for me... they commit it but someone elsees disagrees and they don' want to pay to make it faster because it's very expensive....
<aewffwea>	ams: you'll end up with 1 branch per company eventually, the branches will become quite different, and they won't be able to share code after a while, defeating the whole purpose....
<ams>	aewffwea: no you won't.
<ams>	you really think that you end up with one branch per company? then you must be a really shitty programmer.
<textmode>	ams: given that this is *already happening*
<ams>	with what?
<textmode>	i'd löve to see your counter argument.
<textmode>	ams: er, all over the place? openoffice/libreoffice
<textmode>	springs to mind.
<ams>	i cannot counter argument something that occurs in a non-free program! i cannot see how many branches they have or don't.
<aewffwea>	ams: a lot of free/open source projects have issues like that... io split from node.js, blah blah... it's not that easy to manage an open source project... imagine if you had 2000 companys wanting different features
<ams>	textmode: what is all over the place?
<textmode>	(must…stop…hitting…enter…too…soon…)
<ams>	aewffwea: well, i have no clue what it is to manage open source projects.
<lf94>	i do that all the time.
<ams>	i know how to manage free software, and writing code that works across multiple platforms is relativley simple
<aewffwea>	ams: me either... but i've seen a lot of stories about splits, and forks, and that they are a lot of times a disaster....
<ams>	and?
<aewffwea>	ams: it depends on the software, and on the platform....
<textmode>	ams: linux, (x)office, the ten billion art programs, used to be browsers, but there seems to have been an effort to consilidate that.
<ams>	you two are both moving the goal post, ignoring the whole issue, and just hand waving things.
<aewffwea>	ams: try making some advanced javascript code for a lot of old browsers, and we'll see if multiple platforms is easy :)
<ams>	web browsers are notoriously hard ..
<aewffwea>	ams: android versions are too
<vdamewood>	often times, when there's a fork in the open-source world, either the original or the fork soon dies.
<ams>	i wouldn't know, android isn't free software.
<textmode>	ams: how is it not? the repository is opensource? oh, unless you are complaining that your right to swing your fist ends an my nose again?
<ams>	textmode: it contains nonf-ree source code, i don't know if it is open source.  i know that it is not free software.
<textmode>	i think i just suddenly ran out of fucks to give.
<textmode>	ams: have a nice life.
<vdamewood>	for example when x.org forked from xfree86, xfree86 pretty much died after that.
<aewffwea>	textmode: so now you are receiving fucks? :)
<lf94>	someone is frustrated
<lf94>	:le reddit face:
<ams>	textmode: please stop the personal attacks.
<textmode>	ams: its hard to avoid when someone unironically tries to take a position as extreme as you do.
<textmode>	especially since i get the feeling i've done this dance with you once before.
<ams>	textmode: there is nothing extreme about being able to control your own computer.
<ams>	textmode: there is alot to say about non-free software, and how it violates your rights.
<textmode>	ams: no, seriously. stop talking to me.
<ams>	textmode: no.
<lf94>	may he rest in pepperoni.
<textmode>	ams: we've done this before. niether of us has changed our positions *in the slightest.*
<ams>	textmode: you are continuing to attack and ridicule me.
<ams>	textmode: i have been more than polite
<textmode>	ams: there is literally no point in persuing this for either of us.
<lf94>	textmode switch to defense mode
<lf94>	play your magic cards
<textmode>	lf94: that would be effort.
<ams>	textmode: you on purpose confuse open source and free software, and associate one with the other to cause confusion, you continously spread fud.
<lf94>	ams that's a common misconception though, i'd let him have it
<lf94>	how can you confuse something on purpose though
<ams>	he already "had it".
<textmode>	ams: i don't agree with you, i literally consider your position to be a parody of the free software mantra. you obviously don't. there is *no* common ground here.
<textmode>	ams: we literally can not have a conversation on anything relating to software rights.
<lf94>	stallman would be proud of us
<ams>	textmode: how on earth is my position a paradoy of free software?!
<textmode>	(note: i said *consider.*)
<lf94>	because he says so
<pyon>	muh freeeeeeeeeeeeedomz!!!!!
<pyon>	i mean, good night.
<pyon>	s/night/evening/
<ams>	pyon: ;-)
<lf94>	good morning
<vdamewood>	bonus nachos!
<ams>	textmode: ys, and so explain yourself instead.
<lf94>	beunos naches?
<pyon>	dunno
<planckwalk>	textmode: that's exactly it.  thank you.
<vdamewood>	lf94: buenas noches
<lf94>	close enough
<lf94>	ams pls help
<vdamewood>	so's bonus nachos.
<lf94>	you are concurrency god
<ams>	textmode: are you saying that free software likes non-free software? no it doesn't, we have been working on purpose to make non-free software irrelevant since the start.
<lf94>	vdamewood yeah that's why i said buonos nachesoseseus
<ams>	textmode: so how on earth is that a "pradody" of anything?
<lf94>	prodaddy of foss
<textmode>	ams: i believe in the right to control what runs on my system, but i temper that with the rights of others as well as basic practical concerns. for instance i happily run non-free drivers on my system for various benifits. i would *prefer* them to be free-and-open-source, but you take the lumps as they come.
<vdamewood>	lf94: oh, so i ruined your joke. sorry.
<lf94>	no it was your joke, i am sorry.
<vdamewood>	boner notches?
<lf94>	??!
<lf94>	that is probably bad.
<lf94>	i do not want boner notches.
<vdamewood>	lf94: do you want bonus nachos?
<ams>	textmode: if you cannot see what a programs does, you cannot control your computer.  if you cannot modify a program, youc annot control your computer.  it is quite that simple.
<jeaye>	ams textmode be civil.
<lf94>	yes
<lf94>	the letter y is so funky
<lf94>	it's like a little alien
<vdamewood>	lf94: only in english.
<ams>	lf94: the letter s is werider.
<textmode>	jeaye: at this stage, i'm just trying to explain myself.
<lf94>	textmode start with the day you were born
<zacts>	hello
<lf94>	bonjourno
<ams>	textmode: i'd rather hear an explanation why you think my stance is a parody of a movement i have been part for over 2 decades.
<lf94>	zacts do you need help
<lf94>	we need to fill this channel with positive energy
<zacts>	lf94: why do you ask?
<farrioth>	or with nachos.
<textmode>	ams: have you read the paper "trusting trust"? if you can't you really trust the software you compiled yourself, what can you trust?
<zacts>	i'm a hello bot, didn't you know that?
<vdamewood>	bonus nachos for everyone!
<lf94>	farrioth, good idea.
<lf94>	zacts, no
<ams>	textmode: totally hogwash argument that.
<zacts>	i'm a hello bot didn't you know that?
<zacts>	hello
<zacts>	hello, world
<zacts>	:-d lol
<textmode>	ams: eventually you have to decide where you consider the risk/benifit line for yourself. i've decided where mine is.
<vdamewood>	i think we have an unauthorized bot here.
<lf94>	zacts is turing complete
<ams>	textmode: free software is not about trust.
<lf94>	zacts do you like nachos?
<textmode>	ams: then why did you bring up a trust issue earlier?
<vdamewood>	if only vdamewood were turing complete.
<ams>	textmode: (tt can also be mitigated completely)
<ams>	textmode: i didn't, you did.
<ams>	just now.
<ams>	0929
<ams>	exactly then.
<lf94>	one day vdamewood, one day...
<textmode>	this i considered an argument about trust --> <ams> textmode: if you cannot see what a programs does, you cannot control your computer.  if you cannot modify a program, youc annot control your computer.  it is quite that simple.
<ams>	textmode: yes, nothing about trust.
<ams>	it is about control.
<textmode>	ams: then what is it about?
<textmode>	control is trust.
<ams>	no, it isn't.
<textmode>	trust is control.
<lf94>	guys what happens when our copper is filled with proprietary nano bots?
<ams>	09:32 /ignore textmode
<lf94>	have you thought about that?!
<ams>	i give up.
<aewffwea>	ams: just to be clear... my point is that i think that your idea is "unrealistic"... i agree that it's a beautiful idea, i'd be amazing if it were possible to do that in a good way... i just don't think that's actually possible...
<textmode>	then i guess we have found something else we have no common ground on.
<lf94>	not even your electrons will be safe.
<pyon>	lf94: lol ikr
<ams>	aewffwea: i find it realistic, i've been doing it for 20 years.
<lf94>	pyon are you a concurrecny master
<pyon>	lf94: no
<lf94>	i need some professional concurrency eyeballs
<ams>	aewffwea: lots of people are doing it as well.
<lf94>	anyone
<textmode>	aewffwea: that is essentially my position. wonderful to think about but happen to live on this earth.
<farrioth>	pyon: oh, did you write any more about garbage collection?
<pyon>	not yet
<planckwalk>	lf94: are you doing concurrency in some language/environment that actually has some concurrency guarantees?
<ams>	aewffwea: do you have to do things differently from a non-free software gig? yes.  obviously.  but it is entierly possible to make a nice cozy living on developing free software.
<vdamewood>	garbage collection is on tuesday.
<pyon>	farrioth: i'm writing the code!
<aewffwea>	ams: i mean for the vast majority of the software and programmers... i know that it works in a lot of nitches... linux, firefox they are "quite good"... but i don't think you'll be able to apply it to everything without any bad consequences appearing...
<pyon>	vdamewood: lol
<farrioth>	pyon: great.
<pyon>	vdamewood: just one ay a week?
<ams>	aewffwea: why not?
<pyon>	day*
<ams>	aewffwea: you are making rash decisions without having even looked at the problem!
<lf94>	planckwalk, of course not! hahahahaha!!
<planckwalk>	lf94: ah fun :-)
<vdamewood>	pyon: yes. we prefer that you live in your own filth for a few days.
<ams>	aewffwea: when wouldn't it work?
<aewffwea>	ams: it has too many issues that i don't think that can be succesfully solvable....
<pyon>	vdamewood: lol
<lf94>	planckwalk, are you a concurrency master
<ams>	aewffwea: ... like?
<planckwalk>	i am not.
<lf94>	rip
<lf94>	rip my fate
<planckwalk>	i am a concurrency disaster
<aewffwea>	ams: how do you make a free database system progress?
<vdamewood>	just to avoid this, i don't know concurrency worth squat.
<lf94>	i'm going to be the second concurrency master in here after this course
<pyon>	vdamewood: it's actually quite efficient that way... altho i'm not sure if i'd go as far as collecting garbage only once a week (perhaps 2 or 3 times a week)
<ams>	aewffwea: how do you make a non-free database system progress?
<aewffwea>	ams: you pay oracle
<ams>	aewffwea: no, you don't.
<ams>	you cannot afford any sum that oracle would be willing to lift a finger up for you
<pyon>	vdamewood: here the gc truck comes everyday... which is comfortable, but disastrous from the pov of efficiency
<vdamewood>	i'm so glad postgresql isn't controled by a company.
<aewffwea>	ams: the thing is that oracle wants to stay in marked, so they develop features that will benefit a big part of it's users
<vdamewood>	pyon: i live in a small apartment complex. we get gc 3 days / week.
<ams>	aewffwea: here is how you can add features to postgresql http://www.postgresql.org/support/
<aewffwea>	vdamewood: what do you consider to be better... oracle or postgresql?
<pyon>	ah!
<ams>	aewffwea: so does postgresql, mariadb, ..
<farrioth>	pyon: wow. assuming we're talking about physical garbage now, and not computer gcs.
<pyon>	farrioth: yea
<vdamewood>	aewffwea: neither.
<ams>	aewffwea: http://www.postgresql.org/support/professional_support/northamerica/
<lf94>	hahahah
<ams>	aewffwea: pick one.
<lf94>	you guys are great
<aewffwea>	ams: i'm not an expert on databases... but the people i know that supposedly know about databases consider oracle to be far far superior to every other db
<farrioth>	pyon: i couldn't produce that much garbage if i tried.
<ams>	aewffwea: could it be that they work for oracle?
<lf94>	oracle superiority complex
<aewffwea>	ams: no, because they work for the same company i do...
<farrioth>	pyon: well, it depends how much is collected each day, obviously.
<ams>	aewffwea: who has time, money invested in oracle software?
<aewffwea>	ams: we actually hate using oracle... but there is nothing better out there :p
<aewffwea>	ams: nope...
<ams>	aewffwea: how do you know?
<aewffwea>	ams: trust me, i know :)
<ams>	aewffwea: no, i don't fucking trust you.
<aewffwea>	ams: great, don't trust me... but it's true anyway....
<lf94>	is that like saying you hate cars but you still use them?
<ams>	people who say that oracle is supeor duper, generally have never bothered getting someone who knows postgres to setup postgres.
<ams>	in all cases, it is some loon sysadmin in a basement that setups postgres, default installation, and thinks it will just magicallyw ork for the same workload as oarcle db that someone spent a few million on.
<aewffwea>	ams: as far as i've been told... the main difference is if you have an insane amount of data, like 1 petabyte... oracle still works quite well, and all the other dbs basically start to die...
<ams>	aewffwea: how much do you spend on oracle support, licenses, and such?
<planckwalk>	"all cases".  heh.
<farrioth>	lone sysadmin? or do you actually mean loon sysadmin? :p
<vdamewood>	farrioth: he really means loon.
<ams>	farrioth: i really meant loon :-)
<farrioth>	ams: :)
<vdamewood>	i understand this guy to well.
<exio4>	vdamewood: you realize the side saying that is actually a politician, and is trying to convince you to vote him
<vdamewood>	s/to/too/
<aewffwea>	ams: as far as i've been told (note, i'm not an expert, and this may be false)... most db perform faster than oracle on small data sets, but on bigger data sets they all die except oracle...
<ams>	aewffwea: how much have you spent on oracle support, licenses, and such for oracle?
<aewffwea>	ams: i don't have the slightest idea...
<ams>	aewffwea: guess
<aewffwea>	ams: there is a "db admin team"
<ams>	so like 5 people, full timers .. and oracle license/support/specialzied hardware ..
<aewffwea>	ams: i don't have the slightest idea
<vdamewood>	that might be an interesting test. install oracle, mariadb, microsoft sql server, and postgresql on like systems, and compare how well they work under different levels of stress.
<aewffwea>	vdamewood: you need an expert of each of those dbs to install it and manage it
<aewffwea>	as ams was saying
<ams>	aewffwea: those 100k that you felt so cheap about, are now cents.
<ams>	aewffwea: your company has probobly spent in the excess of 2-3 million on oracle stuff alone.
<aewffwea>	ams: i don't have the slightest idea :)
<ams>	aewffwea: excluding hardware, and company staff.,
<ams>	aewffwea: if you dumped that kind of cash, and lets make it simple, just one million... on postgress ..
<ams>	aewffwea: you think you would get progess?
<aewffwea>	ams: sure, but it'd still be nowhere near oracle based on what i've been told
<ams>	aewffwea: how do you know?
<aewffwea>	ams: i told you... i'm using heresay here...
<aewffwea>	i'm not a db expert
<ams>	so you don';t.
<ams>	you have absolutley no clue infact.
<planckwalk>	nor does ams.
<aewffwea>	ams: because oracle has a lot more than 1 millon invested in db, implementation, research, etc....
<ams>	planckwalk: well, i do have a database, postgres, and a petabyte of data in it.. :/
<aewffwea>	ams: sure, now go to 1000 petabytes :p
<ams>	aewffwea: you don't have that.
<ams>	so shurg.
<aewffwea>	ams: i don't have 1 petabyte either on oracle... but  i've been told that oracle far outperforms the other dbs on a lot of data....
<ams>	aewffwea: that is why yahoo doesn't use oracle, and uses postgres?
<aewffwea>	ams: how much data do they have?
<ams>	in 2008, it was 2pb
<planckwalk>	i'm just amused at everything in this argument being based on hearsay, and using database size as the sole benchmark.
<ams>	and i think they got something like 30 billion updates per day
<aewffwea>	yahoo started with the postgresql engine and replaced the query processing layer with code designed for its commodity hardware cluster.
<vdamewood>	does anyone remember the cofee-howto?
<aewffwea>	did they contributed all that back to postgresql code? can i download it and use it?
<vdamewood>	err coffee
<planckwalk>	vdamewood: sorry, not i.  it rings a bell though.
<ams>	aewffwea: ask them.
<aewffwea>	ams: the other thing is that they've seen to have modified postgresql to work specifically for their use case... so they broke everything else according to that article
<ams>	aewffwea: just like you'd have to do with oracle to make it work with 1000 pb.
<vdamewood>	planckwalk: back in the 90s someone wrote a howto on the linux documentation project that was basically instructions on how to solder up a serial interface to a coffee maker.
<aewffwea>	ams: i mean they modified the engine itself... it's not a configuration
<ams>	aewffwea: same for oracle.
<planckwalk>	vdamewood: ah, nice :-)
<planckwalk>	yep, found it in a web-search now :)
<aewffwea>	ams: oracle you may need to tweak the configuration, but you won't need to modify the engine (that's what i'be been told)
<ams>	i should be decompiling ..
<vdamewood>	in this day and age of raspberry pi and arduino, stuff like that is becoming more and more common.
<ams>	aewffwea: yeah you will, and if you have 1000 pb you will gladly pay oracle a few million to do so.
<hotcoder>	yo
<ams>	(i'd call it insanity to keep that much data in one single db anyway :)
<aewffwea>	ams: i actually hate dbs, but that's another issue :p
<ams>	ditto.
<aewffwea>	ams: you'd probably love gemstone... you should give it a try...
<ams>	minerals are pretty, yes.
<aewffwea>	ams: yes, they are: http://gemtalksystems.com/products/gs64/
<ams>	free software?
<aewffwea>	ams: nope... but you get a trial... and i think it has a version free for non comercial use
<ams>	not interested in it then.
<ams>	you cannot have free software that can only be used for non-commercial use.
<ams>	that is non-free software by definition.
<aewffwea>	ams: it's free depending on the context :)
<aewffwea>	ams: anyway, i'm not telling you to use it... just to learn what it does...
<ams>	i said free software, which has a specific meaning.
<ams>	stop weasiling with words.
<aewffwea>	ams: that's an amazing paid software... you should learn what it does...
<ams>	i am happy to pay for software, lots of money infact.
<aewffwea>	ams: go ahead and pay them
<ams>	no, they make non-free software.
<aewffwea>	ams: ok, go ahead and pay someone to make a clone that it's free :)
<ams>	i see no business value in doing so.
<ams>	since i don't need such a thing.
<aewffwea>	ams: if you knew what that software does, you'd see the value
<aewffwea>	ams: do you currently use any database?
<ams>	aewffwea: i read what it did, i don't see a need for it.
<aewffwea>	ams: that's the problem... that explanation sux :(
<ams>	aewffwea: there is a postgress database that i query at times that contains about 1pb of data.  locally i normally use some kind of persitant memory structure that can hold index in memory, and data on drive, that are a few tb in side.
<ams>	size.
<aewffwea>	ams: that could potentially replace all of that... if it weren't for the fact that it doesn't support 1pb of data xd
<aewffwea>	ams: at least it didn't support it 5 years ago :p
<ams>	i doubt it could.
<aewffwea>	ams: technollogically? it could... it's just that they don't have that much "investors"
<aewffwea>	ams: the lookup on that thing is o(1)... a data base is usually o(log n) because you have to search an index...
<aewffwea>	ams: so that thing can theoretically scale with the same model it has more than a database...
<ams>	making look up o(1) is easy.
<aewffwea>	ams: i know it's easy... but databases don't have it
<pyon>	aewffwea: o(1) best case? amortized? what?
<aewffwea>	pyon: o(1) worst case
<ams>	aewffwea: the one i use locally does.
<aewffwea>	pyon: it just stores pointers to disk for everything...
<aewffwea>	pyon: so fetching data it's o(1)
<pyon>	aewffwea: okay, what about looking up data in order?
<pyon>	aewffwea: you know, between ... and ... queries.
<aewffwea>	pyon: that thing is *not* a database...
<aewffwea>	pyon: so you don't have "traditional queries"...
<aewffwea>	pyon: but short explanation, yes, you can have "relational" indexes there... and they execute in o(log n) time
<pyon>	aewffwea: except you have to implement them by hand...?
<aewffwea>	pyon: in fact you can implement/add any index you like...
<aewffwea>	pyon: the "traditional" index is already implemented
<aewffwea>	pyon: if you have something custom, you need to implement it yourself... note that implementing them it's really easy... i can probably create a minheap in less than 2 hours....
<ams>	no you can't.
<aewffwea>	ams: yes i can
<pyon>	aewffwea: last time i checked, implementing concurrent indices is super hard.
<pyon>	aewffwea: implementing indices that can be used in a single-threaded manner is super easy.
<pyon>	aewffwea: but also super useless.
<aewffwea>	ams: that thing has some "concurrent indexes" already implemented...
<aawe>	how do i spawn a process inside a ruby script that should continue after the script has exited
<aewffwea>	ams: but anyway, the implementation i was proposing for the minheap was single threaded....
<ams>	aewffwea: no, you can't.  not one that is optimized, has tests, and is relativley bug free.
<aawe>	do i need to double fork?
<ams>	aewffwea: so totally useless.
<aewffwea>	ams: i can a single threaded one... and it's not completely useless.... it'd just be slow in the worst case scenario...
<pyon>	aewffwea: "single-threaded" --> wow, so useful for large business applications!
<aewffwea>	ams: that thing supports acid and transactions....
<aewffwea>	ams: so if i implement the single threaded version it'll just block the 2nd transaction if they modify the same part of the heap....
<aewffwea>	ams: on the other hand, i actually can get off with a single threaded version.... as long as i can add items in an async manner
<ams>	right, so totally useless for anything.
<aewffwea>	ams: yeap, when you insert something i put it in the async queue, and move on... i can make that work with a single threaded version
<aewffwea>	ams: and then i consume the queue on background
<aewffwea>	ams: or i can figure out how to implement a concurrent version...
<ams>	not in two hours.
<aewffwea>	ams: still, it's certainly possible....
<aewffwea>	ams: two hours was for the single threaded version
<aewffwea>	ams: i need to meditate on the concurrent one :)
<ams>	yes, which is totally bogus with no real world usage.
<aewffwea>	ams: it works, as long as it's not the bottleneck of your application
<pyon>	aewffwea: using *your* approach to computer programming, i'm pretty sure you can't get concurrent indices right, unless you already have access to someone else's proven correct implementation.
<aewffwea>	pyon: but i'll probably find that implementation on google :)
<aawe>	how do i stop programs from leaking out through stderr even though i redirected stderr with 2>&1?
<ams>	aewffwea: (foo) 2>&1 usually works best
<txdv>	im back, hi guys
<ams>	everyone, txdv is back .. lets hide!
<pyon>	lol
<pyon>	txdv: hai :-)
<pyon>	textmode: hai
<antranigv>	how can i change the value of x and y without additional variables
<aawe>	how do i silence the pid output from "cmd &" ?
<ams>	aawe: you cannot.
<ams>	it is from the shell.
<ams>	antranigv: huh?
<ams>	antranigv: x = x + y ... there
<antranigv>	say if x=1 and y=3, to be y=1 and x=3
<farrioth>	antranigv: first, why?
<antranigv>	it's just a task :d
<farrioth>	you mean, homework?
<ams>	antranigv: x = x + y, y = x - y, x = x - y
<aawe>	ams: i can do it in bash with set -b
<aawe>	i need to do it in zsh
<antranigv>	nop, a friend of mine asked me to think about it.
<aawe>	ah i solved it
<textmode>	pyon: what have you been up to?
<farrioth>	antranigv: ah. well, just being given the answer isn't as fun :p
<pyon>	textmode: nm rewriting lots of ugly c code in rust, hbu?
<textmode>	pyon: i'm working up to procrastinating.
<textmode>	pyon: its hard work, you know?
<pyon>	textmode: ikr :-)
<antranigv>	ams: thank you^
<textmode>	pyon: maybe in a few hours i'll fire up sublime text...or not.
<pyon>	lol
<textmode>	pyon: i mean, i already have openoffice loaded. thats close enough.
<pyon>	textmode: what for?
<textmode>	pyon: heh.
<pyon>	:-p
<textmode>	pyon: i r wrtr. or something.
<pyon>	lol
<textmode>	pyon: i should get another cider, but the cooler is too far away.
<pyon>	textmode: they should make coolers that come to you when you want them near
<textmode>	pyon: sounds like effort.
<textmode>	pyon: i mean, you'd have to make a *decision*
<pyon>	textmode: ofc *someone else* should do it
<pyon>	oh!
<pyon>	right
<flonk>	most coding styles have a space before an opening curly brace (e.g.: `if (foo) {`). is there any particular reason for this?  i don't do this at all (e.g.: `if(foo){`) .
<textmode>	pyon: so far it looks like i'm going to have to double the cast and weaken the theme to make my story work. not exactly what i planned.
<blueprotoman>	for readability, i guess; and for the space between the "if" and the "(", probably to better denote that "if" is not a function
<textmode>	flonk: define "most"
<pyon>	textmode: story? for a game? :-o
<textmode>	flonk: really though, there is strictly more formatting styles than there is programmers.
<flonk>	textmode: kernel, k&r, otb
<blueprotoman>	pyon: you must not play a lot of rpgs or adventure games
<flonk>	textmode: i just wondered, i see it a lot
<pyon>	blueprotoman: i indeed don't
<textmode>	flonk: a lot of styles would put the brace on the next line. or do yo count a newline as a space? :3
<ams>	flonk: wouldyouliketoreadsentenceslikethis?
<textmode>	pyon: in this case, just a story. but the *setting* is one i use for games.
<pyon>	textmode: oh!
<flonk>	textmode: yeah, allman style for example.. i think that's batshit crazy but meh
<pyon>	textmode: genre? :-o
<textmode>	pyon: and one day i'll be published! published i say! oh, you all doubt me now but you'll see!
<znoosey>	flonk: it is done for readability
<pyon>	textmode: :-)
<aawe>	textmode: publish what?
<flonk>	ams: the parens round your (condition) is seperation enough imho
<flonk>	znoosey: okay so no other practical reason then? :)
<znoosey>	flonk: no
<aawe>	you writing fiction?
<blueprotoman>	pyon: trust me, if a game dev wants to put a deep-ass story in a game, he will.
<blueprotoman>	and it can be *good*
<flonk>	znoosey: okay, thanks for clearing that up
<pyon>	blueprotoman: :-o
<aawe>	i never read a deep ass-story. in fact, i never read any ass-stories
<textmode>	pyon: this particular one is looking to be a urban fantasy novellette, but don't qoute me on that. i'll deny everything.
<pyon>	ah!
<ams>	flonk: thewordorderandsymmetryofthewordsisalsoenoughforwritinglikethis.
<wei2912>	ams: no it isn't
<textmode>	blueprotoman: to be fair, you mostly see that in the if scene more than anything else.
<ams>	wei2912: icanreadit.
<textmode>	ams: have you ever been to the pen islands?
<textmode>	:3
<wei2912>	ams: sure, after putting in loads of effort
<wei2912>	imsocertainyoucanreadwhatonearthiamwritinghererightnow
<ams>	nahiwrotethesentenceidon'tneedtoreaditagain
<blueprotoman>	textmode: even games outside of that genre can have deep stories.  metal gear, final fantasy, and the mario rpgs come to mind
<wei2912>	iwentontoredditandreaditalready
<textmode>	blueprotoman: right, i said "mostly." :3
<ams>	wasitnice?
<znoosey>	wei2912: after reading all of those it actually gets pretty easy, the last one i read almost as a normal sentence
<wei2912>	itwasahugewasteofmytime
<wei2912>	znoosey: the last one was designed to be easy
<wei2912>	i can design sentences to be hard too
<textmode>	blueprotoman: and obviously, rpgs are another place where you tend to see it a lot.
<textmode>	blueprotoman: but the lions share is still if, since it attracts a lot of people that *are* writers by trade. so it tends to be the sort of thing they do. :3
<wei2912>	ifithrowinalotoflongandshortwordsandwordsthathavethesamegroupoflettersimcertainyoucantreadwhatiamwritingandafterawhileyoullhatemeforthisbcyoucantreadwhatthehelliamwriting
<farrioth>	wei2912: bc isn't a word :p
<^python111>	i can
<^python111>	and im not mad
<textmode>	i could read that, but i had to do it "consciously"
<ams>	wei2912: icanreadthatjustfine.
<znoosey>	wei2912: still fine to read
<wei2912>	^^
<scriptgeek>	it became easier to read halfway through, almost natural
<znoosey>	wei2912: and as your brain just tries to match words you don't even need to spell correctly!
<farrioth>	interestingly, certain languages don't have any inter-word gaps in normal writing, although they tend not to use alphabets.
<aawe>	this is your brain on words: http://upload.wikimedia.org/wikipedia/commons/3/35/flickr_-_cyclonebill_-_spejl%c3%a6g.jpg
<wei2912>	jameswhilejohnhadhadhadhadhadhadhadhadhadhadhadabettereffectontheteacher
<henke37>	for what definition of "alphabet"?
<aawe>	words. not even once
<aawe>	henke37: for what definition of definition?
<^python111>	wei2912, i hate you for your tries
<scriptgeek>	haters gonna hate
<aawe>	^python111: i agree, trie is such an overrated data structure
<farrioth>	henke37: where graphemes represent individual phonemes, both consonantal and vocalic, or at least did once.
<wei2912>	aawe: lmao
<rindolf>	hi all.
<farrioth>	hi rindolf.
<rindolf>	scriptgeek: and the players gonna play.
<rindolf>	farrioth: hi, sup?
<scriptgeek>	rindolf: true
<aawe>	rindolf: programmers gonna gram?
<rindolf>	aawe: heh.
<farrioth>	rindolf: not a lot; you?
<wei2912>	thatthatisisthatthatisnotisnotisthatititis
<henke37>	farrioth, under that definition i can't think of a language that doesn't use an alphabet
<rindolf>	farrioth: i may have discovered another bug in perl 5.
<farrioth>	henke37: chinese is a classic example.
<scriptgeek>	yrdersominimororsisassesdenderrorsis?
<farrioth>	rindolf: a big one?
<wei2912>	henke37: lookatasia
<ams>	hmph
<farrioth>	lookatasia sound like some made-up eye disease.
<^python111>	henke37, maybe under the wrong definition, or by the assumption you are hunting alligators in louisiana
<rindolf>	farrioth: don't know how severe it is.
<farrioth>	rindolf: hmm. do you know if it's a regression, or has it been there for a while?
<rindolf>	farrioth: it seems to exist in perl-5.20.2 and bleadperl.
<rindolf>	farrioth: here is the reproducing recipe - https://github.com/shlomif/possible-perl-ln-f-hash-bug
<rindolf>	farrioth: seems to exist back at least since perl-5.10.1
<farrioth>	rindolf: there's too much f for me to make sense of that code :p
<farrioth>	rindolf: although in reality, it's just because i don't know that much perl.
<rindolf>	farrioth: ah.
<rindolf>	farrioth: well, i can rename stuff.
<farrioth>	rindolf: don't bother, unless you were going to anyway.
<rindolf>	farrioth: ok.
<amigojapan>	is .net for mac already out there?
<txdv>	coreclr works on mac
<amigojapan>	what is it txdv , seems to be just another github project
<amigojapan>	txdv: i was asking about the impelemntations of .net for mac adn linux from microsoft i have been hearing much about
<txdv>	coreclr is the official .net implementation of microsoft which should work on widows and linux, work on other oses is contributed purely by volunteers
<txdv>	that being said, there is a dude who made it run on macosx
<txdv>	its also on github
<txdv>	https://github.com/dotnet/coreclr
<amigojapan>	txdv: yeah, i am looking at the github repo….   thanks
<wei2912>	and a radioactive source as well as an internal monitor
<wei2912>	ihatehex: you're both dead and alive, you can't do that
<wei2912>	i haven't observed you yet
<amigojapan>	if .net acutally works on the 3 platforms, it will be much better than java i think….  for write once run anywhere
<amigojapan>	at least i much rather write c# than java
<ihatehex>	wei2912, i'm in a state of superposition, bitch
<ihatehex>	i can do all the things
<ihatehex>	and not do them
<ihatehex>	simultaneously
<ihatehex>	my wavefunction is not collapsed
<ihatehex>	bitch
<ihatehex>	i always thought quantum mechanics needed more 'bitch'
<matviy>	>2015 writing c# instead of vb
<ihatehex>	vb is still in use?
<ihatehex>	thought that went out with windows 95
<znoosey>	amigojapan: it won't work on 3 platforms, .net core will work on 3 platforms, not all of .net
<amigojapan>	znoosey: oh, that sucks :(
<amigojapan>	znoosey: so mono is still what we have? mono is quite buggy,  i made an app, but th emac version is buggy…   windows and linux work fine
<znoosey>	amigojapan: yeah, but it is a step in the right direction, and you get all of asp.net 5 there so for running web stuff it will be awesome
<wei2912>	ihatehex: lmao
<amigojapan>	i was hpping i could finally run my app on mac
<amigojapan>	hopping*
<wei2912>	ihatehex: meanwhile, mongodb
<ihatehex>	webscale
<znoosey>	amigojapan: yes, you need the mono libraries around the .net core, not sure what the mono people are planing to do yet
<wei2912>	paerformance
<amigojapan>	znoosey: so it is a kindof hybrid?   maybe my program will run on mac, i will try it out
<ihatehex>	znoosey, mac is evil, hush
<znoosey>	amigojapan: yes, if your program compiles using .net core it will run on mac
<znoosey>	amigojapan: in visual studio 2015 you can set it up so you only have access to features in .net core and it will give you errors if you are using things part of the .net framework
<amigojapan>	znoosey: but my program is gui, not i bet it uses more than just the .net core, it uses winforms
<znoosey>	amigojapan: that it does :) you will need mono for that
<amigojapan>	hmmm, confusing
<planckwalk>	mono's implementation of winforms is still somewhat buggy
<planckwalk>	(also probably won't ever not be buggy)
<znoosey>	somewhat buggy, as in sometimes they work
<amigojapan>	planckwalk: yeah, it is buggy, that is why i was hoping that microsoft had released it for free… cause i have a gui windorms program that i want to release on mac….    interestingly, mono for linux works fine with my program, it only crashes on mac
<amigojapan>	my program works until i try dragging something from a listview to an imagebox..  that is when it crashes on mac…
<amigojapan>	s/windorms/winforms/
<amigojapan>	brb, going to get some mcds around hte corner....
<jkbbwr>	hey all
<erste>	hey :p
<erste>	i've seen test driven dev. and api driven dev. .. are any more types of development? would like to checkout
<planckwalk>	boss driven dev
<erste>	planckwalk, thnks :)
<planckwalk>	more seriously, there's hundreds of development methodologies
<ams>	9.223372036854776e18!
<ams>	hmph!
<jkbbwr>	ams: 9.2?
<planckwalk>	erste: https://en.wikipedia.org/wiki/software_development_process
<erste>	planckwalk, oh this is better, i found another .." feature dd .."
<ams>	jkbbwr: more like something 0x43e00000...
<jkbbwr>	ams: eh?
<ams>	jkbbwr: yes ...
<ams>	exaclty!
<quinntezad>	twey, so there is this sourc eon the internet which has "the issue which they are taking on" as an example of a sentence which ends on a praeposition
<quinntezad>	such garbage, obviously it's an adverb
<quinntezad>	"on" is an adverb there
<quinntezad>	even in "they are taking on the issue" it's fundamentally distinct from "they are looking at the issue"
<quinntezad>	"the issue at which they are looking" is fine,  "the issue on which they are taking" is garbage
<quinntezad>	they clearly function grammatically completely differently "on" is an adverb, "at" is an adpositional.
<quinntezad>	and the author who writes for the oed does note lect to leave me an email that i may insult her for this.
<henke37>	adposi-what?
<quinntezad>	how dare you write crap and hide behind not being reachable.
<myrl-chan>	classes were fun.
<myrl-chan>	i let go of the pcb, it started rotating and it flew away, breaking the drill bit.
<myrl-chan>	fun classes are fun.
<myrl-chan>	pyon: ^
<needhelp>	someone please help me with this question https://stackoverflow.com/questions/30165314/unable-to-find-the-ershov-number-of-1-21-21-2
<needhelp>	someone please help me with this question https://stackoverflow.com/questions/30165314/unable-to-find-the-ershov-number-of-1-21-21-2
<needhelp>	someone please help me with this question https://stackoverflow.com/questions/30165314/unable-to-find-the-ershov-number-of-1-21-21-2
<needhelp>	someone please help me with this question https://stackoverflow.com/questions/30165314/unable-to-find-the-ershov-number-of-1-21-21-2
<needhelp>	someone please help me with this question https://stackoverflow.com/questions/30165314/unable-to-find-the-ershov-number-of-1-21-21-2
<needhelp>	someone please help me with this question https://stackoverflow.com/questions/30165314/unable-to-find-the-ershov-number-of-1-21-21-2
<needhelp>	it's urgent
<myrl-chan>	needhelp: please stop spamming.
<needhelp>	stopped
<chris_99>	heh, noones going to help you now
<myrl-chan>	chris_99: ikr?
<^python111>	kek
<needhelp>	chris_99: please do that
<myrl-chan>	i read about ershov numbers.
<myrl-chan>	can't it be "simplified" to `n = max(c1, c2, min(c1, c2) + 1)
<jkbbwr>	needhelp: i vote closed your question.
<gulzar>	which is a good c++ ide with super awesome autocomplete and suggestions? (linux). i know there is clion and netbeans but they are tooooo bloat . codeblocks doesnot play nice with inconsolata and monaco fonts. any other ide?
<needhelp>	is there any alternative to muli in llvm ir
<needhelp>	for immediate multiplication
<miniman10000>	lol
<needhelp>	for example
<jkbbwr>	needhelp: hush please
<miniman10000>	your problem with code blocks is it doesnt like 2 random fonts?
<miniman10000>	oh man thats something else.
<needhelp>	is %t1 = mul 10, %i1 valid?
<miniman10000>	i dont even recognize % sooo idk
<jkbbwr>	miniman10000: if it cannot handle any arbitary font its a crappy editor
<jkbbwr>	miniman10000: and % is a symbol in llvm ir code
<miniman10000>	ah
<miniman10000>	that explains it
<needhelp>	what's the conversion of muli ax, 10 then?
<jkbbwr>	i don't use ir
<needhelp>	ok
<miniman10000>	i hope progress on llvm lld is coming along
<gulzar>	miniman10000: i like good looks. geany, vim, pycharm all play so good with fonts and color schemes except codeblocks
<miniman10000>	i have no experiencewith geany or pycharm... vim isnt for me... are these all text based programs?
<jkbbwr>	miniman10000: use pycharm
<jkbbwr>	its good.
<miniman10000>	the only time i used python was as a wrapped around c
<jkbbwr>	use clion
<miniman10000>	"c++ - why clion doesn't mark class as class?" lol first image of the ide
<jkbbwr>	miniman10000: ?
<miniman10000>	actually 2nd image
<miniman10000>	i did a google searh on clion clicked on the 2nd image cause it had nice spacing and it was a link to a guy on stack overflow asking that question
<jkbbwr>	image? what?
<miniman10000>	google image search*
<jkbbwr>	it isn't marking struct as a class because it isn't
<amigojapan>	what package do i need to have network.h on my system?
<miniman10000>	oh what lol
<miniman10000>	clion costs money welp
<miniman10000>	i don't have money to spend so it's not for me
<jkbbwr>	miniman10000: its worth it
<jkbbwr>	get 30 day trial
<miniman10000>	yeah then it puts me in a situation where im getting accustomed to something that i'll be forced to drop
<jkbbwr>	or just buy it
<jkbbwr>	its worth it
<miniman10000>	like i said i literally have no money
<miniman10000>	i don't use visual studio because of the potential to change os to linux.
<jkbbwr>	are you a student?
<miniman10000>	nope couldn't afford to be a student.
<jkbbwr>	are you working at all?
<miniman10000>	still working on getting a job
<jkbbwr>	well, get a job then get clion
<miniman10000>	oh hey haswell
<haswell>	hey
<gulzar>	jkbbwr: clion is bloat, bloat too big 400mb+
<miniman10000>	well then i'm supporting a program that can't be used in a situation like mine. i want to put myself and my support behind something that free so anyone can experience to same tools that i have.
<miniman10000>	isn't vs like 6 gb?
<miniman10000>	currently i use codeblocks.
<haakon_1>	if you have an arithmetic expression containing both double and int, will the expression then immidiately become double?
<gulzar>	miniman10000: i like codeblocks but feels half baked .
<miniman10000>	i know what you mean but so far it's the best i've got
<teakey>	haakon_1, depends on what you're storing the outcome in
<teakey>	i'm assuming c/c++
<miniman10000>	teakey what it you auto it?
<ams>	teakey: don't assume two completely incompatible languages to be the same.
<miniman10000>	they are slightly compatible
<ams>	no, they aren't.
<teakey>	ams, i'm not, but their behavior is similar in that regard
<ams>	might as well php slightly compatible with c.
<miniman10000>	you can't write php code and have it compile in both php and c
<miniman10000>	you can write c++ code and compile it in both c++ and c
<ams>	miniman10000: you'd be suprised.
<haakon_1>	teakey: well, you can just print it out
<miniman10000>	i would be since php doesn't start with _start
<ams>	miniman10000: and no, even simplest things like sizeof('a') do not work the same.
<teakey>	but auto will store a double if you use a double in the expression
<teakey>	at least in c++11
<miniman10000>	ah i see
<miniman10000>	i figured as much but wasnt sure
<haakon_1>	ok, that was what i was wondering about
<haakon_1>	so double basically has some sort of "higher value" than int. if that makes sense
<miniman10000>	nope.
<teakey>	yes, for auto, if the outcome would be a double, then it will use a double
<teakey>	no, it's just.. if you add 1.2 + 1, then it would be narrowing the value
<miniman10000>	oh now i think it makes some sense.
<teakey>	and auto won't lose informatio nif it can help it
<miniman10000>	lol
<miniman10000>	i just remembered
<teakey>	double doesn't have some property that magically ensures that
<miniman10000>	the last time i used auto didn't go so well.
<teakey>	it would just be wrong to say the result of 1.2 + 1 is an int when it clearly isn't
<miniman10000>	i was like psh ill just auto hardware concurrency. welp it returned 1 when it was supposed to return 2 which it did with an int.
<haakon_1>	right
<wei2912>	ams: must be fun
<haakon_1>	well, if you declare 1.2 +1 as an int, it obviously is :p
<miniman10000>	lol i just imagine you digging in literal shit meticulously
<haakon_1>	but i see
<ams>	wei2912: it is not.
<teakey>	haakon_1, but then it will say it's 2, and it is an int, but it's lost information
<teakey>	it narrows the value. which could be what you want, but in general you don't want to do that, and if you do i wouldn't use auto
<teakey>	explicitness is good when you're coding
<teakey>	if you want to store an int use an int
<haakon_1>	im going to take an exam soon. one of the more cruel questions was to ask for the output of int a = 5.8*2 :p
<haakon_1>	i guessed 10
<miniman10000>	auto is nice when you have no idea what the type is and just want to use it. but just confirm the output is what it should be.
<haakon_1>	but i storing it to int happens after you have multiplied out
<haakon_1>	*i guess
<miniman10000>	or sometimes the types are rediculously long and you just want to shorten it.
<gulzar>	haakon_1: 11
<haakon_1>	gulzar: yes
<gulzar>	haakon_1: just a guess
<teakey>	what?
<miniman10000>	11.6 shouldnt that round up to 12? or does it truncate?
<haakon_1>	well, it makes sense if the logic is so that you get 5.8*2 = 11.6, and then convert it to int
<jkbbwr>	ams: im writing a c emitter :)
<haakon_1>	when you convert to int, it always uses floor
<miniman10000>	ah i see.
<teakey>	i don't understand why you wouldn't assume that's the output
<ams>	jkbbwr: (defun emit-c (str) (print str)) ; undefined behaviour included.
<teakey>	not being mean, i just want to know so i can help people later :p
<teakey>	did you not know it would narrow the value?
<miniman10000>	heh defun
<haakon_1>	teakey: talking to me?
<teakey>	haakon_1, yes, sorry.
<haakon_1>	well, my logic said that int a = 5.8*2 could either be interpreted as converting 5.8 to a int first, or if it would be converted afterwards
<teakey>	oooooooooohhhh
<gulzar>	haakon_1: good question, but i think multiply first then convert
<teakey>	that's the expected behavior, yes
<anj7>	http://pastebin.com/g1acsa4b can you tell why the catch() is not catching the error instead it is not implementing the next line.
<reaga>	i just started my own github stuff :)
<teakey>	what's wrong, ams?
<myrl-chan>	reaga: yay
<lastmanstanding>	how can i programmatically find out if two regular expressions are the same?
<ams>	minimize them.
<ams>	teakey: source code stupidity.
<ams>	does dwarf keep some kind of a crc against source files?
<flonk>	what's your favourite monospace font for coding?
<ams>	flonk: cptfont
<reaga>	but seriously, google is liek 20 years old and i still gcan't serach for symbols
<haakon_1>	they are noobs
<reaga>	search for "?!?"
<reaga>	no results
<teakey>	-_-
<haakon_1>	woah
<reaga>	am i suppsoed to believe that in the whole internet, no one has ever written ?!?
<myrl-chan>	flonk: terminus currently.
<myrl-chan>	reaga: that's because google is supposed to search words and not symbols?
<flonk>	myrl-chan: really?
<flonk>	well, terminus is alright i guess :p
<myrl-chan>	flonk: yes, because i haven't found any alternative yet.
<myrl-chan>	creep is a close second, but it's shittily configured.
<myrl-chan>	i mean, the guy himself admits that he didn't really do a good job at configuring it.
<flonk>	myrl-chan: huh, it sounds interesting though
<flonk>	4px wide
<myrl-chan>	yep.
<jkbbwr>	gosh crash coursing bitcoin is dull
<haakon_1>	looks like google has a upper limit of 25,270,000,000 hits
<jkbbwr>	haakon_1: it probably caps it for sanity reasons
<erste>	hi, with so many types of programming methodologies... is it common in a team, in which each programmer choose a different approach?
<erste>	say like, member a chooses tdd .. and member b .. fdd .. and so on?
<teejay23>	it's usually one guy deciding what to do.
<reaga>	hey
<reaga>	u guys rock
<erste>	i see.. ;p
<the-legend>	is there anyway to try out c++  programs on android
<the-legend>	hey guyz
<rindolf>	hi all. sup?
<teejay23>	is mongodb an alternative to rdbms like mysql ? or is it ideal only for document based?
<reaga>	i want to run haskell in android
<reaga>	is it possible?
<amigojapan>	hmmm, why would it say “you have been banned from ##programming” on my irccloud when i try to join? i think i am registered and all
<kg21>	(c++) can someone tell me why i'm getting 'initial value of reference to non-const must be an lvalue' here: http://pastebin.com/gwrmfeqn
<myrl-chan>	kg21: > thrust. lewd.
<kg21>	myrl-chan: lewd as in ... bad?
<myrl-chan>	kg21: lewd as in lewd.
<kg21>	myrl-chan: i'm not sure what you mean.
<myrl-chan>	kg21: just ignore obvious jokes.
<miniman10000>	lol hilarious
<myrl-chan>	miniman10000: thank you. ;-;
<miniman10000>	reading on dn42. "seeing how you all mention only ipv4 in this thread, looks like it also simulates the real world's lack of adoption of ipv6. :)"
<myrl-chan>	oh wait. :(
<miniman10000>	lol yeah i didnt know you were telling jokes :p
<miniman10000>	im creating a rollercoaster of emotions for you!
<kg21>	myrl-chan: i have no idea how thrust lewd is funny. it means 'cool' or 'bad' where i'm from. can you help me out though?
<pyon>	good morning.
<xqo>	hi
<miniman10000>	mornin
<myrl-chan>	kg21: lewd means perverted.
<miniman10000>	cirno lewd!
<pyon>	myrl-chan: "fun classes are fun" --> ???
<miniman10000>	this isnt mumble so i can't actually post small images.
<miniman10000>	i mean i can link to it brb
<myrl-chan>	pyon: myrl-chan> i let go of the pcb, it started rotating and it flew away, breaking the drill bit.
<kg21>	myrl-chan: ok... and it's funny because...
<pyon>	myrl-chan: what's the pcb?
<myrl-chan>	pyon: printed circuit board.
<pyon>	oh.
<miniman10000>	https://static-cdn.jtvnw.net/emoticons/v1/5614/1.0
<myrl-chan>	pyon: i broke the drill bit, i fucked up a lot of times today, lol.
<miniman10000>	if it makes you feel better
<pyon>	myrl-chan: :-p
<miniman10000>	at least your not miley cyrus
<pyon>	anyway. i have two choices today.
<pyon>	(0) more vb and c#. (1) more rust.
<jkbbwr>	pyon: how about implementing c# in rust
<rindolf>	reaga: hi! you can always use a pastebot that supports executing haskell code.
<pyon>	jkbbwr: errr, no.
<jkbbwr>	pyon: or better yet, implement vb in c# in f# in rust
<jkbbwr>	pyon: :3
<jkbbwr>	implementception
<xqo>	to reverse the endianness of a struct, must you know the type of every member in the struct?
<rindolf>	jkbbwr: implement rust in php!
<rindolf>	xqo: yes, you do.
<xqo>	ok, thank you
<jkbbwr>	rindolf: i have limits.
<jkbbwr>	at least f# and rust are good languages
<jkbbwr>	so are (c# and vb)
<pyon>	my rust is effectively transliterated c.
<jkbbwr>	pyon: transliterated c?
<pyon>	jkbbwr: it reads like c. 80% of the code is marked unsafe.
<jkbbwr>	pyon: thats not good :p
<pyon>	unsafe pointer arithmetic all over the place.
<jkbbwr>	i think
<pyon>	ikr
<rindolf>	jkbbwr: vb is a good language?
<pyon>	i'm trying to make it safer, but i have much tighter constraints than the average rust program.
<jkbbwr>	pyon: what do you use pointer arithmetic for?
<jkbbwr>	rindolf: to be honest yes,
<rindolf>	jkbbwr: vb classic or vb.net?
<pyon>	jkbbwr: a mark-and-compact garbage collector.
<jkbbwr>	pyon: hm
<pyon>	jkbbwr: rust programs can get away with being written in a safe way when you do the c++/rust ownership thingy.
<jkbbwr>	rindolf: vb.net
<rindolf>	jkbbwr: ah, ok.
<jkbbwr>	pyon: but you need mark-compact gc?
<pyon>	jkbbwr: but i'm implementing a garbage collector.
<pyon>	jkbbwr: yes, i need mark-compact gc.
<pyon>	jkbbwr: it's for a language runtime.
<jkbbwr>	what happened to arc? or is that a different concept
<pyon>	jkbbwr: it's a different concept.
<pyon>	mark-compact gc reallocates live objects to "fill the gaps" left behind by dead objects.
<jkbbwr>	pyon: im just plucking keywords out of my non-existant rust knowledge
<jkbbwr>	pyon: isn't that generational?
<pyon>	jkbbwr: it can be generational, although i'm not using generations (for now).
<jkbbwr>	pyon: doesn't mark-compact require a `pause the world`?
<pyon>	yep.
<jkbbwr>	good to know :)
<pyon>	at least, pause whoever is using the heaps being compacted.
<pyon>	also, now i finally understand what read and write barriers are for.
<pyon>	it "only" took me, like, 3 weeks.
<jkbbwr>	pyon: i will need to get round to learning garbage collectors eventually
<pyon>	i wish this goddamned gc book would arrive today.
<pyon>	but i have to wait, like, a month.
<jkbbwr>	pyon: currently i am learning how to emit c as an intermediate language
<pyon>	jkbbwr: :-o
<jkbbwr>	pyon: not really exciting but llvm is a bit out of my grasp at the moment
<pyon>	jkbbwr: yeah, the documentation is a little bit lacking on tutorials.
<jkbbwr>	pyon: and its quite a turse topic to just tear apart code
<pyon>	yep.
<jkbbwr>	pyon: at the moment, i have just stupid translation between my language, implementing chunks in c and then getting the "compiler" to just spit out c then call out to gcc to do the real hard work
<jkbbwr>	hah
<exio4>	output a shinnier language
<exio4>	like dc
<pyon>	i think i'll just emit bytecode.
<pyon>	so that i can keep the implementation simple.
<jkbbwr>	pyon: i want to learn the other side of the coin, the whole native implementation and so on
<pyon>	because i doubt c will be much simpler than llvm assembly could be.
<kidbeta>	c is far simplier
<kidbeta>	the ratio of c lines to asm lines can be huge
<denommus>	hi
<pyon>	kidbeta: i don't measure simplicity by the number of lines of code.
<kidbeta>	asm is far harder to understand too
<pyon>	kidbeta: would you say perl and awk are simple?
<pyon>	kidbeta: they're super-concise!
<jkbbwr>	kidbeta: when you know asm and c you can read asm pretty easily
<kidbeta>	and its confusing as all hell at first
<jkbbwr>	infact you can read chunks of c as asm
<pyon>	denommus: hi.
<kidbeta>	yes and what compiler warnings does asm through at you when you do something stupid ?
<jkbbwr>	kidbeta: ha
<jkbbwr>	kidbeta: nothing?
<kidbeta>	thats the point
<pyon>	kidbeta: as if c gave you useful warnings either.
<kidbeta>	it does
<jkbbwr>	kidbeta: nah.
<pyon>	but, anyway, i'm writing a compiler for a statically typed functional language. the useful warnings will be the ones *i* implement.
<kidbeta>	compared to _nothing_ cs warnings are a god send
<pyon>	although my personal policy is that all warnings are errors.
<pyon>	so i won't have any warnings.
<jkbbwr>	pyon: golang does something similar.
<jkbbwr>	pyon: its "kinda" annoying
<pyon>	jkbbwr: ah.
<denommus>	most programs could be written in a single line of code, provided that we have lambda capability
<denommus>	that's not a smart idea, though
<jkbbwr>	pyon: go doesn't allow unused variables or imports and will refuse to compile
<pyon>	denommus: and provided you think lambda is a good substitute for let! and don't want local type definitions! and...!
<pyon>	jkbbwr: otoh, go happily accepts lots of stuff i would at least flag as warnings, if not outright errors.
<denommus>	jkbbwr: that sucks
<denommus>	jkbbwr: sometimes i need a unused variable only to prevent some value to be garbage collected
<pyon>	denommus: you were right. even unsafe rust is an improvement on c.
<pyon>	(but not because of generics.)
<kidbeta>	and assembly is most certainly not a improvement
<denommus>	pyon: generics, moving semantics, traits
<pyon>	denommus: yes, traits are a very good thing.
<pyon>	denommus: i'm making various kinds of heaps, and using a trait to give them a common interface.
<pyon>	also, even if my code is initially 80% unsafe, i think i can refactor it so that it is "just" 40-50% unsafe.
<denommus>	exactly
<pyon>	it's still a lot of unsafe code, but definitely better than 100% unsafe, as in c or c++.
<reaga>	im learning git now and github
<kidbeta>	you know what else is 100% unsafe? assmbly.
<reaga>	its so sweet
<denommus>	you can make only the lower level code and the extern "c" unsafe
<denommus>	everything in the middle can be safe
<reaga>	rust is the future imo
<reaga>	go doesnt really do anything interesting
<reaga>	its just a slightly different syntax
<denommus>	kidbeta: we get it
<kidbeta>	denommus actually i dont think pyon does yet
<pyon>	kidbeta: in any case, jkbbwr and i were talking about compilation targets.
<pyon>	kidbeta: not languages for direct programmer use.
<kidbeta>	fair enough
<pyon>	kidbeta: i don't think many people here get better than me the importance of type-safe languages for direct programmer use.
<myrl-chan>	any language can probably be unsafe.
<pyon>	myrl-chan: standard ml, as specified in the definition, literally can't
<denommus>	pyon: what about its bottom?
<pyon>	(of course, in practice, implementations add extensions that can break type safety.)
<pyon>	denommus: what do you mean by "its bottom" ?
<denommus>	pyon: the bottom type
<denommus>	pyon: like when you use undefined in haskell
<pyon>	denommus: "undefined" doesn't exist in standard ml.
<pyon>	denommus: if, at runtime, the control of flow reaches a point where a variable is in scope, the variable is bound to a valid value, period.
<denommus>	pyon: hm
<exio4>	sml is strict
<exio4>	undefined is one of those things we get by having lazyness
<pyon>	yep.
<pyon>	actually, undefined is convenient for practical programming.
<exio4>	if you had an explicit lazy datatype, it'd be something like "lazy a"
<pyon>	because it gives you the type-directed equivalent of tdd
<reaga>	rust is the future
<pyon>	just make something undefined, and then refine the definition.
<reaga>	im gonna learn it and skip c++
<pyon>	until yo get a total function.
<exio4>	type holes are really cool at that too
<pyon>	yep.
<exio4>	sometimes i wonder how i wrote code without them
<pyon>	painfully.
<haakon_1>	do compilers in c++ usually recognize c-syntax?
<ams>	nno.
<aawe>	i am losing words again
<exio4>	and that ghc option for defering type errors is also really cool
<ams>	haakon_1: c++ and c are two incompatible languages.
<myrl-chan>	reaga: you're acting like me, saying everything is the future.
<exio4>	myrl-chan: we are the future!
<haakon_1>	ams: a book here says that "well-written  c programs generally will compile and run as c++-programs."
<reaga>	rust is the future
<reaga>	im sure of this
<reaga>	c will die
<aawe>	^
<ams>	haakon_1: that is total bullshit.
<reaga>	c cant last forever
<aawe>	rust is the language of the future
<aawe>	borrowck is god
<haakon_1>	ams: well, maybe
<ams>	haakon_1: no, not maybe.
<haakon_1>	i just wanted to be sure that i interpreted what they meant correctly
<reaga>	unless something new comes along that blows rust out of the water, rust will consume c
<ams>	haakon_1: it is wrong, there is nothing to interpret.
<exio4>	myrl-chan: https://www.youtube.com/watch?v=lchwrsisozm
<ams>	haakon_1: for example, void f(void) { goto z; int i = 123; z: ; } is perfectly valid, and sane c.  it is invalid c++.
<ams>	haakon_1: sizeof does not behave the same way between the two langauges.
<pyon>	sizeof 'a'
<ams>	haakon_1: sizeof('a') is always 1 in c, on c++ is whatever
<pyon>	ams: actually, the other way around.
<pyon>	it's always sizeof (int) in c
<ams>	ah, i always confuse those.
<pyon>	and always 1 in c++.
<ams>	thanks
<haakon_1>	kk
<martinhath>	automatic void* promotion is another thing
<pyon>	martinhath: yep
<pyon>	struct foo *foo = malloc(sizeof (struct foo)); // invalid c++
<exio4>	there's a set of trivial c programs which compile on c++
<ams>	pyon: and that is recommended c ..
<pyon>	yep.
<ams>	there is a set of trivial bash scripts that compile as c
<pyon>	lol
<exio4>	:>
<haakon_1>	btw, is the reason why you think c will die because it doesnt support classes only?
<exio4>	i had an exam that was meant to be c++
<haakon_1>	like, that makes c very tedious to write
<ams>	haakon_1: it does support classes.
<haakon_1>	(i do in fact have c++ in my exam in the upcomming days :p)
<myrl-chan>	ams: wow. how is that invalid c++?
<haakon_1>	ams: i thought the big difference was that
<myrl-chan>	pyon: ^
<exio4>	all my errors were differences between c and c++ :<
<pyon>	myrl-chan: implicit casts from void* to any other t* are illegal c++.
<exio4>	myrl-chan: in c, casting void* to anything* is implicit
<myrl-chan>	pyon: i see.
<exio4>	myrl-chan: you must be explicit in c++
<reaga>	explicit?
<reaga>	yeah
<audioburn>	for those of you who majored in compsci but learned to code long before college
<audioburn>	did you ever feel the professor wasn't teaching enough?
<aawe>	i forgot the word "justifiable" for a second, total panic. i know 0 words relating to it
<aawe>	audioburn: constantly. some professors are complete fools
<audioburn>	damn
<aawe>	your education is your own responsibility
<audioburn>	aawe, i imagine you went to a decent school too
<audioburn>	?
<martinhath>	audioburn: i'm assuming you're talking about theprogramming related courses?
<aawe>	it's decent, not the best
<audioburn>	martinhath, yea
<audioburn>	yea that's the type of school i'd probably end up at
<audioburn>	well, a degree is a degree, opens more doors
<aawe>	it gives you a lot of free time to tinker with programming though
<audioburn>	inexperienced teachers will be frustrating though
<martinhath>	audioburn: it's hard knowing how much is too much, when you already know everything the course teaches. for instance, we spent 2/8 courses in the first year (not in us) learning python and java. i guess that's fine for someone new to programming, but i literaly didn't learn anything in those courses.
<audioburn>	martinhath, that fucking sucks
<audioburn>	i'm not looking forward to that at all
<kidbeta>	martinhath they have to accomodate teaching people with no background unforutantly
<martinhath>	audioburn: well, i guess it depends on how you're looking at it. like aawe says, it gives you a lot of free time to learn whatever you want on your own
<audioburn>	well i have that now
<audioburn>	basically
<aawe>	you won't have that if you get a 9 to 5 job
<martinhath>	kidbeta: of course! i'm not saying it's a bad thing. however, it is unfortunate that people enters compsci at uni without knowing how to program
<aawe>	x3: cool upgrade
<kidbeta>	martinhath it is but you cant expect everyone to have done 1-2-3-x years of pre training to goto uni :p. some people switch majors half way through there degrees!
<reaga>	is now a good time to learn rust
<martinhath>	kidbeta: i guess. the situation here is a little different than in the us - we kinda pick majors when we start at uni, and everyone in stem have at least one programming course. for the most programming intensive majors, that one course (and probably others!) could've easily been taught in hs
<kidbeta>	martinhath where are you at ?
<kidbeta>	and we pick majors where i am too, people still change...
<martinhath>	kidbeta: norway. some people change their major, but it's like one in a hundred, perhaps.
<martinhath>	reaga: a good time as any, i'd say
<reaga>	as good time as any other time?
<haakon_1>	martinhath: same ^^
<haakon_1>	what city?
<martinhath>	reaga: rust is getting released this week(??) friday, i think ?
<martinhath>	haakon_1: trondheim
<haakon_1>	same lol
<martinhath>	lel
<haakon_1>	siv.ing data?
<martinhath>	yep
<haakon_1>	one guy i know got to learn a little bit of c# officially in hs. that was kind of cool, but they went over to javascript after that year
<myrl-chan>	haakon_1: rip.
<aawe>	rip in pisses
<martinhath>	i learned some actionscript 3 in hs. it was .... well ..
<martinhath>	_some_ being the keyword
<plushwork>	js is probably better for kids
<plushwork>	it doesn't take a whole year of classes to show how to set up a project
<pyon>	plushwork: but then it takes forever to teach them how to actually program!
<plushwork>	pyon: do we want to teach them how to program or how to configure visual studio?
<martinhath>	the problem balancing learning people how to program (tm), and keeping it intereseting isn't an easy one
<plushwork>	hell, when i had classes with visual studio we sneaked into the class when the previous class was exiting just to turn that damn thing on, otherwise we would loose half an hour of work waiiting for it to turn on
<pyon>	how to program (tm), to my taste, is about (0) data structures and algorithms, (1) well-factored designs [aka "separation of concerns"].
<jkbbwr>	denommus: you can flag a variable to keep it non collected by using _
<jkbbwr>	_ := something()
<pyon>	neither of which is something javascript will teach you.
<plushwork>	pyon: because you want to teach kids about design patterns?
<pyon>	plushwork: did i say anything about design patterns?
<plushwork>	the first lessons should be about solving problems
<plushwork>	because we all know well you either have it or you don't
<jkbbwr>	plushwork: and how would you teach someone to solve it?
<pyon>	plushwork: that's false. people can learn to solve problems. nobody is born knowing how to do it.
<jkbbwr>	there is often more than one way to solve a problem
<inphase>	jimmycarter: "linux admin" is not one job level.  nor one salary level.  if you are less experienced, you would qualify for the more entry level positions.
<jimmycarter>	some people and on my own i think
<devramen>	i've learned more from working with senior admins than on my own, but you have to be able to teach yourself
<jimmycarter>	i know how to follow google and mezzanines blog on setting up a cms but im not hardcore
<inphase>	jimmycarter: but you should definitely know how to install and configure packages, how to compile and install programs from source on a linux machine, and how to edit and write bash scripts that can automate your administration tasks.
<devramen>	hmm, i think it would be more useful to learn how to set up/configure services: http, ftp, email, etc
<jimmycarter>	yea i can teach myself later but i nèed to work now
<jimmycarter>	i can do that except doing bash
<inphase>	jimmycarter: those would be the sorts of minimum qualifications i would expect for the $30k level positions.
<inphase>	jimmycarter: you should also be able to sit down at a linux system and know how to inspect the logs to figure out what's going wrong.
<inphase>	the bash part is the portion most on topic for this channel.  :)
<jimmycarter>	i not sure how to set up those services but shouldnt be too hard i hope
<jimmycarter>	i can some very minor bash but not scripting
<jimmycarter>	am i good to be paid well or no
<inphase>	jimmycarter: not in this job market, unless you get lucky.
<inphase>	jimmycarter: fortunately linux is free, making it easy to learn.  if you want that career, go resolve those things you don't know.
<jimmycarter>	can i get away with googling my way on work?
<xmppwocky>	in the 30 rock sense?
<jimmycarter>	im very good at googling and can understand man pages
<devramen>	you wont be able to google a difficult troubleshooting problem. solving those quickly and completely is one skill that leads to a high paying job
<titanium17>	guys, im just learning opengl. basics of shading, texture mapping etc. what would be a good starter project to try out now?
<titanium17>	some 3d stuff
<planckwalk>	rotating cubes are the "hello world" of 3d programming
<titanium17>	i am doing a foundations course, and as part of the assignments, i did cubes, spheres etc. tessellating them, shading, texture mapping etc
<titanium17>	but all the time, i was provided a lot of seed code
<titanium17>	is there a good place that details all procedures involved in doing this from scratch?
<dolemite_>	i'm having issues with my brainfuck interpreter, namely the looping ([ and ]). anyone have any thoughts :) http://codepad.org/u2orei1c
<xormebro>	can someone please help me figure out why i'm not finding the key length of a xor encryption correctly? https://gist.github.com/anonymous/9f61c372cc9a123e8d68
<inphase>	jimmycarter: do you use linux exclusively at home?  you should be able to learn the sort of stuff i was talking about in 3-6 months of serious effort.
<travelr>	can i describe architecture and you folks tell me if it has a name because i don't know.:   a "modeler" mutates and keeps a model of the domain. no one has access to this model. they can only ask questions or give commands, and the modeler can give them back answers
<inphase>	xormebro: can you be more specific about the problem?
<planckwalk>	dolemite_: are you keeping a count of how many unmatched "[" you find on the way to a "]"?
<goonsie>	hey guys, quick question. could someone please tell me how to input unicode characters on a windows os? i've read about 5 guides and they're not working... will need an explanation on the level of which proteins to metabolise and which neurons to fire, apparently. on the verge of a meltdown and this is not helping :p
<jimmycarter>	inphase: i do but i dont use it much, and if i go balls out on learning i m8ght only have a week time gap to learn
<xormebro>	inphase: it returns 30 no matter what
<planckwalk>	dolemite_: i've only skimmed your code but it looks like you just have a flag
<inphase>	xormebro: you have no return value at the bottom.  put one.
<dolemite_>	planckwalk: no, should i? i do only have a flag, but i thought it would work, flip-flopping between matched and unmatched
<goonsie>	the unicode character i want to type is u+260e. i tried holding alt and typing 260 and it prints a black diamond, which is not what i wanted.
<jimmycarter>	i just dont know how much i should know u know
<planckwalk>	dolemite_: yes, you do need to
<planckwalk>	e.g. i think your code would match the wrong character in [[[]]]
<inphase>	jimmycarter: i don't follow the "i might only have a week time gap to learn."  what makes administration a valuable job is precisely that it takes a bit of time to learn the necessary skills.  if you want that career, stop thinking in terms of weeks and think in terms of years or decades, and go do it.
<goonsie>	if anyone could answer my question above it'd really mean a lot.
<dolemite_>	planckwalk: hm... i'm mentally stepping through my code and it seems like it would work with [[[]]], unless im missing something.
<dolemite_>	planckwalk: what would the advantage be of counting the amount of loops inside the current loop?
<xormebro>	inphase: alright i changed my code some. here is what i have now: https://gist.github.com/anonymous/0132d88d18cbc1eaa91c
<shovel_boss>	hello
<inphase>	xormebro: now it returns 30 because you told it to return 30.
<shovel_boss>	whats the difference between \n and endl
<xormebro>	inphase: yes but it should never reach that point
<planckwalk>	dolemite_: it looks to me like your code treats any more than 2 '[' characters as being the same as 2.
<shovel_boss>	when using the cout stream
<shovel_boss>	also are they both considered operators
<frankesteinee>	i want to create a custom gui in visual studio for my project in c#. anyone know how i can accomplish this (tutorial/examples)? i am not looking for a plugin that loads in its own gui. i'm wanting to make one entirely on my own
<shovel_boss>	frank google qt
<shovel_boss>	or gtk
<frankesteinee>	shovel_boss: thanks
<inphase>	xormebro: it will never do anything other than reach that point, because your only other return point depends on an integer division result which will never be anything other than 0.
<inphase>	xormebro: in c, 29 / 30 is 0, if both 29 and 30 are integers.
<dolemite_>	planckwalk: so, if i had [[[]]] and started at the 3rd ']', it would only reach the second '[', is that what you mean?
<inphase>	xormebro: 0 is never greater than 0.06
<planckwalk>	dolemite_: i was thinking if you were finding the matching ] for the first [
<dolemite_>	planckwalk: ahh!! that makes sense. if theres adjacent ']'s, it only counts it as one
<xormebro>	inphase: that's what i thought...let's see if that fixes it
<dolemite_>	planckwalk: so i _do_ need a loop counter. thank you :-)
<xormebro>	inphase: typecasting at the division doesn't seem to change anything
<shovel_boss>	help me differentiate endl and \n
<planckwalk>	also yes, probably similar on finding the matching [ for a ]
<inphase>	xormebro: it fixes that bug, but i doubt it's your only bug.
<planckwalk>	though for interpreting brainfuck, i don't think you need to do anything on [.  it's just a marker to go back to when you process a ].
<dolemite_>	planckwalk: so should i just push the location of the [ and pop it on ]?
<planckwalk>	you could do that, or just ignore it until you hit a ']'.  then search back for it.
<planckwalk>	searching would be slower, but heck, it's brainfuck.  who cares? :-)
<dolemite_>	actually planckwalk, "[ : if the value at the current cell is zero, skips to the corresponding ]"
<inphase>	xormebro: your tempsize will likely not go over the value 1, because the first thing you do after incrementing it the first time is erase the tempbuff you are using to increment it.  the entire logic of your program seems to be nonsense to me.
<planckwalk>	dolemite_: oh.  i misremembered :-)
<planckwalk>	it's like a while, not a do until :-)
<dolemite_>	planckwalk: yeah, something like while(*ptr){} i believe hehe
<inphase>	xormebro: i suspect you're trying to do something very different to what you are actually doing.  what you should do, is insert a bunch of printf outputs inside your loop to output the contents of the various variables, and watch them change as your loop runs.  use this to inspect what's actually happening and compare it to what you think is happening.
<inphase>	xormebro: or rather, to what you think should happen.
<xormebro>	inphase: alright, thanks for the help!
<inphase>	xormebro: put lots and lots of printf's.  changing a variable?  print out what it was before and after you changed it.  and you can use the macro value __line__ in your printf's to keep track of where each print is in your source code.
<xormebro>	inphase: kind of hard to do when all these chracters aren't ascii though haha
<dolemite_>	xormebro: if youre in visual studio looking at the vales in debugging mode is easier than printing them
<xormebro>	dolemite_: i'm in linux haha
<dolemite_>	ah.
<_x_c_v_b_>	http://needsmorejquery.com/
<kahrl>	shovel_boss: endl flushes the buffer, '\n' does not
<shovel_boss>	ok
<dolemite_>	shovel_boss: also. if you exclude "using namespace std;" \n is easier to type than << std::endl;
<kg21>	anyone here ever used cuda and knows how to call the math functions explicitly? my program is defaulting to stl.
<shovel_boss>	are both considered operators
<kahrl>	shovel_boss: endl is a manipulator, '\n' is a char
<inphase>	xormebro: print hex values to inspect non-ascii characters.
<autopoiesis>	hello everyone, i'm trying to find an elegant, efficient and simple implementation of the traveler salesman problem on c++ online but i haven't had any luck so far, could somebody help me out? i'm only asking because i've been looking for like an hour now and duckduckgo ain't helping that much.
<dolemite_>	autopoiesis: efficient implementation of traveling salesman problem?
<planckwalk>	there are no efficient, elegant and simple implementations
<autopoiesis>	dolemite_: is that wrong?
<planckwalk>	none known, at least
<dolemite_>	pretty sure its o(n!) no matter what,
<planckwalk>	you can do better than n!, but no polynomial algorithms known.  the most general ones that do pretty well are butt-ugly.
<autopoiesis>	could you show me one of those general ones that do pretty well? i understand now what the whole tsp fuzz is all about, but seriously i have only found horrors so far
<xmppwocky>	also if you assume things about the database
<xmppwocky>	er, dataset
<xmppwocky>	you can get better results in practie
<planckwalk>	concorde is the best i've seen used in practice
<icetooth>	if only we could set up cloning stations along the salesmans path
<autopoiesis>	this: http://www.softwareandfinance.com/visual_cpp/travelling_salesman_solution.html would have been of help if it wasn't for the missing headers... this guy literally uploaded his algorithm without the libraries
<zacts>	isn't there a travelling salesman problem that is impossible to solve in finite time?
<planckwalk>	no
<dolemite_>	pffftt haha
<zacts>	well, perhaps not the original t-s problem, but one based off of it
<zacts>	it was in my outer limits of reason book, by mit press
<zacts>	i'll have to read it
<zacts>	i just skimmed it
<autopoiesis>	would this be the concorde? http://www.math.uwaterloo.ca/tsp/concorde/downloads/downloads.htm
<planckwalk>	that would be it, yes
<autopoiesis>	thank you :)
<autopoiesis>	"concorde for solaris 64-bit" so edgy
<frankesteinee>	is download.qt.io down for anyone else?
<dolemite_>	would it be cheating to write a program to convert brainfuck to c++, and then compile the c++ with gcc and call the program a brainfuck compiler?
<planckwalk>	probably :)
<icetooth>	isn't there some fancy word, like transpiler or something for that
<planckwalk>	if you wanted to say "i wrote a brainfuck compiler" it would, at least :)
<planckwalk>	writing a compiler for it is pretty easy though :)
<dolemite_>	source-to-source compiler icetooth
<planckwalk>	didn't someone write one in like 256 bytes?
<dolemite_>	it's easy?
<planckwalk>	166 bytes for linux, apparently
<planckwalk>	http://www.muppetlabs.com/~breadbox/software/tiny/bf.asm.txt
<dolemite_>	i only see source code for interpreters, not compilers.
<icetooth>	eek i think that compiler does a system call for every character in the brainfuck source file
<planckwalk>	probably.  it was designed to be ridiculously compact, not efficient :)
<kg21>	does anyone know any good sources for datasets to train decision trees? ucla-ml only goes up to 55k for categorical-categorical.
<jadew>	are you guys aware of any c++ gui libraries that don't suck?
<jadew>	paid ones are acceptable too
<jeaye>	jadew: when looking for c++ libraries, always consider skimming https://github.com/fffaraz/awesome-cpp
<jadew>	neat, thanks
<jeaye>	there's a gui section there, just for you.
<jadew>	already checking it out
<dolemite_>	so i'm thinking to generate assembly code from my bf interpreter then run that through nasm. that's not cheating.
<jadew>	can anyone tell me why people bother with that garbage?
<dolemite_>	what garbage?
<jadew>	brainfuck
<jadew>	what's the point?
<dolemite_>	why does there need to be a point?
<jadew>	really?
<planckwalk>	really.
<planckwalk>	the same reason people solve crosswords, puzzles, play games.
<jadew>	so they're finding it challanging?
<planckwalk>	usually, yes
<jadew>	but... it's not
<planckwalk>	it's also an introduction to writing interepreters and compilers, and such
<planckwalk>	using a *very* simple language/.
<jadew>	there's bison and other similar stuff for that
<jadew>	very easy to learn and much more educational
<planckwalk>	anyway, it obviously doesn't interest you, so ignore it.
<vdamewood>	learning bison isn't really as educational as actually writing a parser by hand.
<jadew>	i'm just trying to understand what's the attraction since it has always eluded me
<planckwalk>	it's pretty close to turing machines, which are pretty fundamental notion in computer science.
<jadew>	vdamewood, you only have to write a parser by hand once to understand what it means and why you need a better tool for the job
<vdamewood>	jadew: and you only need to use bison once to learn that bison is not a better tool for the job.
<jadew>	vdamewood, how so?
<exio4>	jadew: the idea of doing this in a simple constrained yet theorically powerful environment is to learn the concepts behind things like compilation
<exio4>	compiling a small "imperative" language to brainfuck is also a fun project
<exio4>	and if you keep that language really simple (not having more variables, and a really limited set of primite operations), it's also relatively easy if you had done it before
<exio4>	more than *
<planckwalk>	anyway, if you don't get the attraction then you probably never will.
<jadew>	most likely
<planckwalk>	de gustibus non disputandum or whatever.
<exio4>	s/primite/primitive/
<math041>	is there any reasonable definition of ai?
<planckwalk>	math041: no
<jentrep>	math041, no, since noone has yet built something that can set a definition
<jadew>	math041, can mean a lot of things
<jentrep>	otherwise you can use any piece of software as a basis for your definition of ai
<jadew>	jentrep, no, they did
<math041>	this looks promosing
<jadew>	the problem is that the term ai is used to describe a lot of things
<jentrep>	jadew, no, "they" haven't
<math041>	why would you have to build something to define it?
<jadew>	jentrep, the ai in games is ai
<jentrep>	see my above comment
<jadew>	jentrep, i don't see how that makes a point
<jentrep>	anyways ...
<jadew>	ai exists, it's limited, but it's real
<math041>	why cant you define it and then try to makesomething that satisfies the definition?
<planckwalk>	math041: been done, many times
<jadew>	math041, i think that anything that can make a decision based on a piece of information can be called ai
<planckwalk>	only it always turns out that the definition is lacking in some respect
<jadew>	human-like intelligence is a whole different story, but it would still fall under the ai definition
<planckwalk>	if (var) { print("this is ai!"; }
<jadew>	precisely
<inphase>	turing test passed!
<math041>	do you guys like the chinese room arguement?
<planckwalk>	no
<math041>	why?
<jadew>	racist
<planckwalk>	why should i?
<math041>	its a pretty good argument
<planckwalk>	i don't think so.
<math041>	why not?
<planckwalk>	it mostly assumes what it purports to conclude.
<inphase>	math041: it's a flimsy argument, missing the forest for the trees.
<math041>	i dont see it, can you explain?
<inphase>	math041: the argument says that if searle is in a room, following a set of rules to translate chinese input into chinese responses, the people will conclude he is a person who understands chinese and can reply.  but this misses the point, because if the people conclude there is an intelligence in the room, the intelligence is actually in the rules.
<inphase>	searle is simply the engine helping the intelligence to operate.
<planckwalk>	searle takes as an *axiom "syntax by itself is neither constitutive of nor sufficient for semantics"
<math041>	but he can just come out of the room and memorize the instructions
<planckwalk>	that's assuming the conclusion.
<inphase>	math041: essentially he's confusing hardware with software.
<planckwalk>	inphase: yep, that too
<jadew>	i'm not familiar with that argument
<jadew>	but a quick read on wiki makes me think the same thing
<math041>	its exactly the same one
<jadew>	he thinks the hardware is an empty shell
<inphase>	math041: if you write an ai, the ai is not the cpu, it's the program.  the same applies to searle being the hardware and his rules being the software.
<planckwalk>	(a heck of a lot of philosophical arguments involve the same fallacy)
<math041>	how about if he memorizes the instructions and comes out of the room
<jadew>	i just read a bit more, that guy was an idiot
<jadew>	for one, why does it have to be chinese?
<inphase>	math041: then the intelligence is in his memorized rules.  this is akin to having a split personality.
<jadew>	the language doesn't even matter, but somehow it's a big part of his resoning
<inphase>	jadew: because searle does not at all understand chinese, so it made a good example.
<math041>	i dont understand, why are you talking about inteligence?
<inphase>	math041: because it's an argument about artificial intelligence?
<math041>	its related in some way but not really
<inphase>	it's entirely about strong ai.
<planckwalk>	math041: it's the entire subject matter of the argument.
<jadew>	ok, i just finished reading the wikipedia article and i realized where the flaw is
<planckwalk>	there are lots of them :-/
<math041>	the argument is meant to show that acting like you are thinking isnt sufficient for thinking
<jadew>	he makes the assumption that the hardware is already smart
<jadew>	or well, that's what needs to be proven
<jadew>	which is stupid
<jadew>	and even so, it doesn't prove anything
<jadew>	you could have an intelligent machine that did the same as he did
<jadew>	ran that program, with out understanding it
<math041>	thats the point
<math041>	it doesnt understand it
<jadew>	math041, neither does he, but that doesn't prove it that he's a rock
<jadew>	it proves nothing
<math041>	its not supposed to
<jadew>	the test is poorly constructed, so it can't prove anything
<jadew>	it's pointless, just like brainfuck
<math041>	the entire point is that he doesnt understand
<inphase>	the test was a worthy attempt, but it doesn't provide the same clarity about defining intelligence as the turing test does.
<math041>	neither does a computer
<math041>	therfore it cant think
<planckwalk>	math041: assumign the conclusion.  2/10.
<math041>	how is it assuming the conclution?
<jadew>	math041, if you can't understand something and i can't understand the same thing, does that mean that one of us is mindless shell?
<planckwalk>	math041: i already said earlier.
<pyon>	math041: if we cut off head, would you say that your head alone understands anything?
<math041>	i didnt understand it
<pyon>	cut off your* head
<inphase>	my individual neurons cannot think either.  yet, i can, when all of it is put together.
<jadew>	here's another thing
<pyon>	in any case, why do programmers care so much about ai? the whole purpose to programming should be developing a more reliable alternative to human thinking - calculation in a formal system!
<jadew>	if the software is true ai and understands chinese
<planckwalk>	do you believe that there is a particle in your head that "understands" things, separate from the rest of your brain?
<jadew>	the program he runs in his head is also true ai
<jadew>	it just runs on a different medium
<exio4>	pyon: there are things like interpolation which are really useful though
<math041>	so you dont believe in free will?
<planckwalk>	math041: that's a totally different can of worms
<math041>	not if you think the mind is a program
<planckwalk>	short answer: yes, but probably not in the same way you're thinking.
<jadew>	math041, i do, but i also believe that you can predict free will
<planckwalk>	math041: nope, different.
<pyon>	math041: it's simply unknowable, at least in the foreseeable future, whether we have free will.
<inphase>	pyon: intelligence has greater capacity than any formal system can calculate.
<planckwalk>	inphase: unproven!
<math041>	in what way then?
<pyon>	inphase: greater capacity for fucking up? yes!
<inphase>	planckwalk: no, it's a natural consequence of gödel's incompleteness theorem.
<pyon>	inphase: greater capacity for reliably making interesting systems, i doubt it!
<planckwalk>	inphase: no, it isn't.
<inphase>	sure it is.
<pyon>	inphase: what the fuck does gödel have to do with this?
<planckwalk>	nothing at all.
<jadew>	hasn't ibm already been able to emulate part of a mouse's brain?
<planckwalk>	yes, jadew
<pyon>	inphase: gödel's result is about our ability to capture the notion of truth by formal means in a sufficiently expessive formal system.
<jadew>	shoulnd't be long until a computer will have the same "free will" we do
<pyon>	inphase: in other words, nothing to do with free well.
<math041>	could you please explain again how searle assumes the comclution? i would really like to understand
<inphase>	pyon: i never said anything about free will.
<jadew>	math041, the experiment proves nothing
<jadew>	in the context of the experiment, he emulates the cpu, not the other way around
<math041>	im not saying it does
<pyon>	inphase: oh, never mind, i misread the backlog.
<jadew>	if the software is true ai, it's  going to be true ai both when it's run by the cpu and when it's run by him
<inphase>	pyon: i'm referring only to the fact that you can contemplate more by throwing out your formal system and choosing a different one, than computing within any one formal system.
<planckwalk>	math041: anyway, such misunderstandings and mistakes are why, as you asked, i do not like the chinese room argument.
<planckwalk>	it leads nowhere except pointlessness.
<planckwalk>	math041: anyway, back to your more recent question: searle *assumes*, as an axiom, that syntax cannot capture semantics.
<math041>	how does he do that?
<planckwalk>	his conclusion is, surprise surprise, that a syntactic system is incapable of producing semantics.
<planckwalk>	math041: it's right on the wiki page.
<planckwalk>	(or in his paper, if you have access to it)
<math041>	the wiki page of the chinese room argument?
<planckwalk>	yes
<planckwalk>	https://en.wikipedia.org/wiki/chinese_room#complete_argument (a3)
<planckwalk>	that's taken as an *axiom*
<planckwalk>	yet it's essentially the same as the conclusion he draws from it (and the other axioms)
<jadew>	it's silly to think that you can't create intelligence
<inphase>	especially since most of your parents did.
<jadew>	hehe
<jadew>	no, especially since we're able to emulate and run simulations of anything we understand
<math041>	searle has produced a more formal version of the argument of which the chinese room forms a part.
<planckwalk>	math041: yes, i read it.
<jadew>	once we understand intelligence, we'll be able to write software that does it
<math041>	the chinese room argument is his reason for adding this as an axiom
<planckwalk>	math041: it's really funny, because the more formal the argument, the more it defeats it's own point ;-)
<akersof>	planckwalk, please dont say it is an axiom
<akersof>	planckwalk, just a theory
<jadew>	akersof, but theories are proven
<planckwalk>	akersof: searle called it an axiom, not me.
<inphase>	jadew: no...
<inphase>	jadew: theories can be proven or not proven, which does not affect their status as theories.
<planckwalk>	anyway, what's wrong with calling it an axiom?
<akersof>	planckwalk, ah ok..
<math041>	this complete arguement is not the same as the chinese room argument
<planckwalk>	axiom just means a starting point for logical deduction.
<planckwalk>	math041: i know.
<jadew>	inphase, a scientific theory is a well-substantiated explanation of some aspect of the natural world that is acquired through the scientific method and repeatedly tested and confirmed through observation and experimentation.[1][2][3] as with most (if not all) forms of scientific knowledge, scientific theories are inductive in nature and aim for predictive power and explanatory capability.[4][5]
<pyon>	planckwalk: i don't see how searle's "axioms" can be called axioms in any meaningful way. how could they be precisely formulated in a sufficiently foundational system? :-p
<math041>	that axiom is not used in the original chinese room argument
<planckwalk>	pyon: they don't need to be.
<jadew>	inphase, theories are proven and testable
<planckwalk>	axiom is a technical term in more than one field, with slightly different meanings between them.
<jadew>	before that they're just ideas
<inphase>	jadew: a scientific theory absolutely does not need to be proven.
<jadew>	inphase, of course it does
<planckwalk>	"proven" in the more archaic system of "tested"
<math041>	searle thinks that from his chinese room argument axiom 3 follows, not the other way around
<planckwalk>	err, more archaic meaning
<planckwalk>	as in the saying "the proof of the pudding is in the eating" -- the word "proof" there means "test".
<planckwalk>	more "mathematical proof"
<planckwalk>	not* "mathematical proof"
<inphase>	jadew: first you should note that the wikipedia page you are quoting from has been affected by an unfortunate political debate, and is less accurate than it should be.
<planckwalk>	so yes, a scientific theory must be provable -- i.e. testable.
<jadew>	inphase, i didn't check the page before replying to you
<jadew>	what planckwalk said
<inphase>	jadew: here is a clearer description:  http://www.livescience.com/21491-what-is-a-scientific-theory-definition-of-theory.html
<planckwalk>	i'd prefer to use the more modern meaning and call it "testable" though, to avoid confusion with the mathematical meaning.
<inphase>	jadew: in particular, please note, "a scientific theory is not the end result of the scientific method; theories can be proven or rejected, just like hypotheses."
<planckwalk>	there is no end result :-)
<jadew>	inphase, i didn't say that's not the case, but theories become theories after they are proven
<jadew>	they can be refuted later by further proof
<jadew>	but that's a different sotry
<jadew>	*story
<inphase>	jadew: that is not how the word "proof" works.
<darkelement>	hey guys, looking to run some phantomjs code with the phantomjs-node package for node.js. here is the file i'm working on, with phantom-node code commented, and phantomjs code as the rest of the file. hope you guys can help!
<planckwalk>	inphase: less o these days, but it's still an accepted meaning
<jadew>	i'm not a native english speaker
<akersof>	but the ai dream is possible, in an atheistic view our intelligence is the consequence of 13.6 billion years of computation in a system based on natural law
<akersof>	why not?
<jadew>	akersof, the problem is that things are never as simple as they appear to be
<math041>	because a program just does what its told
<akersof>	math041, the universe follow law and rules too
<jadew>	we have lots of shortcommings regarding understanding
<math041>	i agree
<math041>	but i dont think its intelligent
<akersof>	we just dont know the law between 0 and 300 000 years
<akersof>	the graal quest, but after 300k years we know the law
<jadew>	and even if a model of intelligence might make sense on paper, mathematically, we might have a hard time understanding it or visualizing it
<inphase>	jadew: it's better to say that a scientific theory is a description which is supported by evidence.  a good theory is supported by more evidence.  a speculative theory can be supported by very weak evidence.  there are also theories most people agree are irrefutable, but this is only a portion.
<math041>	but the universe isnt deterministic
<math041>	well i guess a program doesnt need to be either
<jadew>	inphase, i believe that people are using the word theory wrong
<jadew>	which is where all this confusion comes from
<jadew>	i do it too
<planckwalk>	well, we think we have a pretty good understanding of most of the basic processes after the first 10^-20 seconds of so.
<inphase>	jadew: many people do use it wrong, yes.
<jadew>	but i was tought that theory is the absolute max an idea can achieve
<jadew>	and it gets there only after it can be tested
<inphase>	jadew: "string theory", for example, has never been tested.
<dolemite_>	i was just about to say that.
<jadew>	inphase and it's bollocks
<inphase>	jadew: it has problems.  :)
<jadew>	i think they made theory part of the name to make it more legit :p
<jadew>	interesting, starting to google search for "is string theory" it suggested "... a theory"
<math041>	its pretty sad that einstein was a determinist
<dolemite_>	what does a theory become once you prove it?
<jadew>	dolemite_, that's when it becomes a theory
<inphase>	it's fair to call string theory a scientific theory though, because it is a well-reasoned model.  it is an inadequate theory so far because it has not yet yielded any predictions we can test.
<dolemite_>	then you shouldn't call anything a truth.
<jadew>	inphase, it's not well reasoned
<jadew>	they started out with the conclusion and then changed stuff until it gave the right results
<inphase>	jadew: that's how many scientific theories actually start.
<dolemite_>	so, the theory of evolution is proven?
<jadew>	that model is based on nothing
<jadew>	inphase, not really, most models are based on observation and deduction
<jadew>	string theory is not based on any of that
<akersof>	dolemite_, lol not yet
<jadew>	of course it is
<inphase>	dolemite_: conclusively.  evolution is essentially irrefutable.
<dolemite_>	it still fails to explain consciousness and thought of mind
<dolemite_>	which is a very very large aspect
<math041>	its not supposed to
<jadew>	yeah, it doesn't have to in order for it to be true
<inphase>	dolemite_: the progression of intelligence is explained.  abstractions of psychology such as those are a little hard to contemplate directly in the framework of evolution.  it's a bit outside of the scope.
<jadew>	actually, i tend to think about every behavior people exhibit in terms of evolution
<jadew>	because i believe there's a direct link between survivability of the species and the way we interract
<dolemite_>	inphase: not necessarily. i'm not quite sure that intelligence = consciousness
<jadew>	dolemite_, i think so i am
<math041>	haha
<jadew>	it's definitely not basic itelligence, but that's what gets you there
<inphase>	dolemite_: "consciousness" does not have a clear concrete definition that would allow it to be addressed at that level.
<inphase>	dolemite_: which is why people have made up ideas like the turing test and the chinese room which started us on this conversation.
<jadew>	if by consciousness you mean morality, that's different
<dolemite_>	haha.
<inphase>	jadew: that's "conscience".
<jadew>	so he doesn't mean morality?
<inphase>	no.
<dolemite_>	no..
<jadew>	ok then
<math041>	self awareness
<dolemite_>	self awareness isn't consciousness
<jadew>	some bigger ammount intelligence = self awareness then
<jadew>	dolemite_, then define it
<math041>	whats the difference?
<dolemite_>	it depends on how you define self awareness
<jadew>	being aware that you exist
<math041>	being aware of oneself
<inphase>	now define "aware".  :)
<jadew>	haha
<math041>	have a qualitatative experience of
<inphase>	class a { void foo() { cout << "i am " << this << endl; } };
<darkelement>	 can anyone here help with implementing a phantomjs program into a nodejs file
<dolemite_>	if self-awareness is being aware of oneself then it isn't consciousness. if i recall correctly the "mirror test" confirms this.
<inphase>	math041: does a quantitative experience not count?  :)
<math041>	only if it qualitative as well!
<math041>	what do you mean
<jadew>	lgpl is the one you can use as a library in closed source commercial programs?
<math041>	primapes are concious
<math041>	obviously
<jadew>	math041, i don't think they are
<mortdeus>	the idea of consciousness is misleading to us because we experience it from the highest degree and derivating down from our intellectual capacity to say a spider's or a frog's is not something we can truly experience and therefore understand well enough to make definitive conclusions.
<dolemite_>	how do you know that?
<math041>	thats a pokemno
<darkelement>	i like the ai talks but i am trying to work with phantomjs and node.js
<inphase>	class a { void foo() { cout << "i feel that i am a " << typeid(*this).name() << endl; } };
<math041>	i dont, but im as sure as i am that my neighbour is concious
<darkelement>	can anyone help?
<jadew>	math041, i think kids can't diferentiate between what they observe and what others observe until they're around 3 years old
<math041>	fucking idiots
<dolemite_>	they're unable to recognize themselves in mirrors until 18-24 months old.
<dolemite_>	which would make them not self-aware
<akersof>	dolemite_ even chuck norris?
<math041>	what
<darkelement>	also, turing suggests that "self-awareness" could also be vieweed as the ability to think about itself.
<math041>	thats self recognition
<darkelement>	so in this sense, a debugger or similar program is self-aware.
<math041>	so if im blind im not conscious?
<jadew>	anyway, the point is that monkeys are dumber than 3 yo kids
<jadew>	so odds are that they're not self aware
<inphase>	darkelement: which is why that definition is inadequate.
<darkelement>	math041, you can think about yourself
<dolemite_>	but at the time, adults with prosopagnosia (impairment in facial recognition) do not pass the self-awareness test either
<dolemite_>	math041, thats where some tests fall apart
<jadew>	if they were self aware, they'd probably a lot smarter
<darkelement>	define self awareness
<math041>	done
<math041>	yes i can think of myself, and i postulate that monkeys know that they exist
<math041>	what a sentence
<darkelement>	you still haven't "defined" self awareness, or being self-aware.
<dolemite_>	darkelement, being able to distinguish oneself from another is self-awareness, i think
<math041>	i did earlier
<math041>	but it was bad
<inphase>	to be self-aware, a thinking entity must be able to form abstract models by observing the external environment, and then form an abstract model for itself which properly categorizes itself within this environment.
<math041>	being aware that one exists
<darkelement>	dolemite_, not bad idea
<darkelement>	inphase, yea that sounds about right xd
<akersof>	define define, define self, define awareness and define self awareness, if you can do this with pure irrefutable logic you are up for a nobel prize
<inphase>	whoops, guess i shouldn't have published that on irc then.
<dolemite_>	actually, i think self-awareness is the ability to distinguish your own consciousness from anothers
<jadew>	man... this is depressing
<math041>	monkeys can distinguish themselves from others
<jadew>	i can't find one nice gui library
<mortdeus>	the real question you guys want to understand is not whether a spider is conscious of the fact its a spider and therefore makes conscious decisions to do things like spin a web, etc. but rather, is there instances of life that are born into and experience their life through the eyes of a spider? is the fact that we were born as and experince life as humans just one of the many potential alternative options?
<denommus`>	hi
<inphase>	jadew: qt.
<jadew>	inphase, don't like it
<akersof>	jadew, if it is for serious thing you have no choice
<jadew>	not native enough
<inphase>	jadew: doesn't get much better right now.
<akersof>	jadew, web or qt
<jadew>	too big
<denommus`>	jadew: wxwidgets
<darkelement>	mortdeus, i'm glad i'm not the only person whose thought this
<akersof>	fltk for c++ is nice
<jadew>	denommus`, too dumb
<mortdeus>	i like to think that anything with eyes has a entity behind it that uses them to see.
<denommus`>	jadew: create your own
<darkelement>	mortdeus, it's an awesome thing indeed
<dolemite_>	mortdeus, webcam?
<jadew>	denommus`, in the process, but there's so much work to do
<denommus`>	jadew: or you can create a better api on top of wxwidgets
<akersof>	jadew, you gui have to be cross plateform?
<jadew>	akersof, no, windows only
<jadew>	but absolutely kick ass
<math041>	what even are computers
<denommus`>	but i doubt you'll think about better abstractions than that damn observer pattern
<akersof>	jadew, nice, winapi man
<darkelement>	how can mirrors be real if our eyes aren't real
<jadew>	akersof, yeah, kinda tired of building everything from that level
<math041>	what
<mortdeus>	dolemite_, the operating system can be consider such identity. though a computer isn't necessarily conscious of the fact that its a computer, nor does it make conscious decisions based on "free will".
<denommus`>	darkelement: stop following jaden smith
<darkelement>	 denommus` xd
<math041>	stoner meme
<akersof>	jadew, in what language you want to do this?
<denommus`>	i wish there was someone here to help me
<jadew>	akersof, c++
<denommus`>	jadew: there's lots of windows apis for c++ from microsoft itself. just choose one
<math041>	how do they even design cpus
<inphase>	jadew: if you create a qt replacement, please use size_t and decouple it from all those new's.
<akersof>	jadew, take a look to fltk then it is the lightest the easiest but the ugliest too
<jadew>	inphase, hehe
<jadew>	math041, they write code really
<jadew>	there are hardware abstraction languages
<jadew>	and it looks a lot like programming, except you're programming registers and instructions :)
<akersof>	jadew, you can also use sdl or sfml
<dolemite_>	mortdeus: i think any 'system' able to predict consequences based on internal/external stimuli in a chaotic environment is conscious
<math041>	what wizards made it so that now stuff can be done just in high level languages?
<jadew>	akersof, didn't hear of sfml
<mortdeus>	dolemite_, i assume that forms of life that posess brains far fewer nuerons than mammals, tend to not make conscious decisions and yet are driven by instinctual neural processes.
<dolemite_>	including, maybe some day, computers.
<akersof>	jadew, sdl like but for c++
<jadew>	akersof, got it
<akersof>	better
<akersof>	easy to use
<jadew>	yeah... i'm not looking for anything that graphic, i basically want the native windows experince, but with powerful and modern controls and without the bloat
<dolemite_>	mortdeus: instinct must be related to consciousness, if not the same thing.
<math041>	what
<math041>	why?
<freefull>	there is csfml if you want to use sfml from c or other non-c++ languages
<jadew>	by the looks of it, i can choose either one or the other
<denommus`>	i have the following module in ocaml: https://github.com/denommus/netwireocaml/blob/master/src/netwire.ml
<inphase>	jadew: the windows experience without bloat?
<jadew>	inphase, yeah as in with out the qt runtime
<inphase>	jadew: it's not really that big...
<denommus`>	these are the signatures: https://github.com/denommus/netwireocaml/blob/master/src/netwire.mli
<dolemite_>	saying instinct 'just happens' is a cop out
<jadew>	it's big enough to annoy me + i don't trust it
<jadew>	it has a "heavy" feel to it
<math041>	why?
<jadew>	why it has that feel?
<math041>	complex reflexes
<jadew>	i don't know, maybe that qt creator is slowish - i don't know
<jadew>	the examples aren't snappy enough
<jadew>	can't put my finger on it
<jadew>	i just don't like it
<akersof>	jadew, this is a framework not a library
<denommus`>	i need to create a loop function with the signature as close as i can from val loop: ('a * 'c, 'b * 'c) wire -> ('a, 'b) wire
<jadew>	yeah
<anonpseudo>	how'r y'all doing?
<dolemite_>	complex reflexes?
<denommus`>	i don't understand well enough about fixed point functions, but i guess i need one
<anonpseudo>	reddit's down so i'm just talking.
<denommus`>	does anyone have any idea of how such a function should look like?
<anonpseudo>	what function, denommus?
<jadew>	denommus`, i'd try to help if i understood what that meant
<jadew>	is that pseudocode?
<anonpseudo>	nope, i'm new
<denommus`>	jadew: that is ocaml
<math041>	yes complex reflexes
<denommus`>	jadew: and you don't need to use qt creator to use qt
<jadew>	denommus`, it's the path of least resistance
<anonpseudo>	what is the most complex, shitty way that you guys have ever seen fizzbuzz implemented?
<inphase>	jadew: i don't experience any delays at all with qt, and it's on the scale of tens of megabytes, which is a completely irrelevant amount of space in 2015.
<dolemite_>	so birds flying south is a complex reflex in reaction to.. the warm weather?
<_slade_>	anonpseudo: https://github.com/enterprisequalitycoding/fizzbuzzenterpriseedition
<math041>	yes
<denommus`>	jadew: you can just use qmake, or even cmake. it's not that hard
<inphase>	jadew: for developing, i actually recommend not using qt creator directly if you are an experienced programmer.  generate your gui programmatically so you can use abstraction.
<inphase>	jadew: then use cmake to compile it.
<denommus`>	jadew: look into qml, that may make you excited. i don't know
<anonpseudo>	wtf that is crazy _slade_
<dolemite_>	math041: then isn't thought and mind a complex reflex in reaction to external/internal stimuli too
<math041>	it doesnt seem like it is
<anonpseudo>	does anyone here have experience with the red/rebol programming language/s?
<jadew>	denommus`, thanks
<anonpseudo>	i've heard they have some cool stuff that replaces regex
<jadew>	what's better than regex?
<inphase>	_slade_: i can't even tell if that's supposed to work.  that's impressively obfuscated in corporate style.
<denommus`>	jadew: i work with qt professionally, but i honestly wish for a frp based gui framework since i learned how frp works
<anonpseudo>	apparantly the red programming language has some features that replace regex
<jadew>	denommus`, what is frp?
<dolemite_>	brazen bull is better than regex
<denommus`>	jadew: functional reactive programming
<denommus`>	jadew: it's a programming paradigm where your events are discrete streams of values, and you compose them into other events and signals, which are continuous streams of values
<jadew>	interesting, that would be useful for graphical effects i take it?
<bros>	https://github.com/brandonros/wannabe-mint/blob/master/index.html what practices could i better follow?
<jadew>	ok, you kinda lost me there
<anonpseudo>	regex is needlessly complicated
<jadew>	could you please elaborate?
<denommus`>	jadew: it's useful for interactive systems in general
<dolemite_>	anonpseudo: i agree
<denommus`>	jadew: events are stuff that emit some value in discrete points of time
<anonpseudo>	it surprises me that regex is mostly unrivaled because there are so many better solutions than regex
<bros>	anonpseudo: like what?
<jadew>	denommus`, i didn't get the "composing them into other events and signals" bit
<denommus`>	jadew: ah, that is easier to explain
<anonpseudo>	bros: there has to be a better way than regex
<anonpseudo>	bros: it just doesn't exist/isn't popular yet
<jadew>	regex is as simple as it gets imo
<jadew>	very succint
<denommus`>	jadew: instead of responding to events via observers that call some callbacks whenever an event happens, you combine your events and signals as first class values
<denommus`>	jadew: for instance, imagine you have a upclicked and a downclicked events
<denommus`>	jadew: and you want a counter to go up and down whenever they are clicked
<anonpseudo>	http://www.reddit.com/r/shittyprogramming/comments/35mh4a/a_challenge_to_rshittyprogramming_write_the/ these are some shitty fizzbuzz implementations i asked for on reddit
<inphase>	anonpseudo: there are plenty of better solutions for parsing text formats with convenient forms that obey clean rules.  but any solution which does general purpose pattern matching is going to look something like regex.
<denommus`>	jadew: the normal approach is something akin to on(upclicked, function () { counter++; }); on(downclicked, function () { counter--; });
<anonpseudo>	inphase: yeah, but i still don't like regex :p
<inphase>	anonpseudo: are you new to it?
<denommus`>	jadew: in frp, counter is a signal that depends on the events, instead
<inphase>	anonpseudo: it comes with a learning curve.
<anonpseudo>	inphase: yes, i am super new. i just think that there could be a simpler way to use regex
<dolemite_>	the only time i've ever used it is with grep
<jadew>	denommus`, how can a signal replace a variable?
<inphase>	anonpseudo: the problem is everything with cleaner syntax has to be written out as much more code.  regex lets you express pages of code in a few characters.
<dolemite_>	althought im sure it's very useful for something like a parser
<inphase>	anonpseudo: the price you pay for that is an obscurely dense syntax that takes a while to get used to.
<denommus`>	jadew: like counter = union(upclicked.map(() => 1), downclicked.map(() => 2)).reduce(0, (x, y) => x+y)
<jadew>	dolemite_, definitely not useful for parsers
<anonpseudo>	inphase: i think at some point i'll make a regex library that gets shorthand parsing things done like tags and shit
<denommus`>	jadew: don't conflate the term "signal" from frp with "signal" from qt
<dolemite_>	jadew: why not?
<anonpseudo>	inphase: right now i'm working on a lml that uses a whole lot of regex
<akersof>	denommus`, did you already use any of the frp lib in web dev?
<jadew>	dolemite_, it's slow and hard to maintain
<denommus`>	jadew: they're different things. in qt, signals are stuff that call a bunch of slots whenever it is emitted. in frp, a signal is just a continuous stream of values
<anonpseudo>	inphase: its basically the simplicity of markdown with the features of textile
<jadew>	denommus`, i still don't get it, i'll have to look into it
<akersof>	jadew, yes this is the future of gui :)
<denommus`>	jadew: a signal is similar to a function from the current time to a value
<denommus`>	akersof: i have, but i prefer to avoid javascript like the plague
<anonpseudo>	anyway, i'm off to regex school i guess.
<anonpseudo>	:d see y'all later
<denommus`>	akersof: i'm writing an afrp library for ocaml
<akersof>	denommus`, nice
<denommus`>	akersof: what library are you using?
<akersof>	denommus`, i have tried react js
<akersof>	just playing with it
<denommus`>	akersof: react by itself isn't really reactive  though it is easy to work with a reactive library on top of it
<denommus`>	akersof: you'd need bacon, rxjs, or something similar
<akersof>	sure, i have read a lot on bacon
<akersof>	but i am not really in web dev, it was just for playing
<denommus`>	frp is also interesting for games
<jadew>	denommus`, i just did a bit of reading on frp, i can't see what's different from what we've been doing until now
<jadew>	if not by attaching to various events, posting messages definitely achieves the same result
<jadew>	it's a serialization of messages
<denommus`>	jadew: i don't know what you have been doing, so i can't tell you
<jadew>	well, regular gui programming is just like that
<jadew>	especially plain win32 programming
<jadew>	where "events" are shoved down the pipe and processed by the messange handler on a one by one basis
<pyon>	jadew: the point to frp, at least as originally defined, is time-dependent behaviors are first-class values.
<pyon>	jadew: so, for example, you deal with "the player's health over time" as a primitive notion, rather than "the player's health right now".
<jadew>	i'm not sure i understand that statement
<jadew>	is it about priority levels?
<pyon>	jadew: no.
<pyon>	jadew: it's about abstraction.
<jadew>	"
<jadew>	"time-dependent behaviors are first-class values."
<akersof>	denommus`, why not javascript? my bet is it is going ot be the most beautifull language ever with ecmascript 6
<jadew>	what's a first-class value
<pyon>	jadew: in a language like, say, c++, you could define a `class player` with a member variable `unsigned int _health;`.
<pyon>	jadew: however, `_health` itself won't be a function of time - it's a single `int`.
<denommus`>	akersof: i could spend the whole night explaining and it wouldn't be enough
<pyon>	jadew: so if there's some other variable, say, `_attack_power`, that depends on the current value of `_health`, you need to manually update it every time `_health` changes.
<denommus`>	jadew: a first class value is something you deal with directly
<akersof>	denommus`, ok ok :) i understand
<pyon>	jadew: that is a consequence of time-varying values not being first-class entities.
<denommus`>	jadew: for instance, a first class value is a function that you can pass around as a variable
<denommus`>	jadew: sorry, autocorrection messed everything up
<denommus`>	jadew: a first class function is a function that you can pass around
<jadew>	pyon, so what does frp work in that context?
<jadew>	*how
<denommus`>	jadew: so a first class signal is the abstraction over time-varying value that you pass around
<pyon>	jadew: if you define `_health` and `_attack_power` as reactive values, then the runtime system itself keeps track of the dependency between these variables. so, every time you update `_health`, `_attack_power` is automatically updated.
<denommus`>	jadew: if you're dealing only with the current value of your variable, it's not a signal. it's simply a discrete variable
<pyon>	jadew: more precisely, `_health` itself isn't an `int` anymore. it's a *dynamic behavior* that, at every point in time, assumes an `int` value.
<jadew>	denommus`, "signal" is a very poor term for something like this because it means a lot of things already
<pyon>	jadew: and the key insight of reactive programming (functional or otherwise) is that it is more convenient to deal with dynamic behaviors, rather than the values they assume at discrete points in time.
<akersof>	jadew, this is why they called it event streams
<denommus`>	akersof: i am the kind of person who used to love all this dynamic language hype, but then i realized it's all harder to work with
<pyon>	akersof: it doesn't need to be realized using event streams.
<whitepride>	hey guys what's the difference between <= and <
<pyon>	akersof: reactive programming can be done in a logically time-continuous setting.
<whitepride>	in loops
<denommus`>	jadew: the term comes from actual math, where signal is a continuous stream of values, dependent on time
<jadew>	pyon, so is this different than say... c# properties which make use of getters and setters?
<pyon>	akersof: where the "time-discretization" is left as an implementation detail... possibly one that the programmer can choose.
<jadew>	so when you're modifying _x, _y also gets modified accordingly?
<denommus`>	jadew: but you can also call them behaviors, if you really want
<planckwalk>	jadew: that dependency is invisible at runtime, usually
<jadew>	denommus`, that's why i find it so hard to understand
<jadew>	can you go backwards?
<pyon>	jadew: it won't do much help to try to reason about reactive behaviors by analogy with c# objects, me thinks.
<planckwalk>	it's buried in "black box" code that you wrote and the runtime can't understand
<pyon>	jadew: have you ever solved a system of differential equations in college?
<pyon>	jadew: functional reactive programming is very much like that.
<whitepride_>	what is the difference between <= and < in a loop?
<pyon>	jadew: you deal with dynamic systems, whose independent variables are time and space.
<planckwalk>	whitepride_: the behaviour when they're equal.
<denommus`>	pyon: jadew: except you won't actually solve the equations, just state them
<pyon>	jadew: and whose dependent variables depend on what you're modeling.
<whitepride_>	planckwalk: please explain like i am 5
<jadew>	pyon, but do you have access to them at the now point
<jadew>	or at any point in time?
<jadew>	for example, can i access now - 1?
<denommus`>	whitepride_: 5<=5 is true. 5<5 is false. that's it
<pyon>	jadew: you can do this by introducing delays.
<pyon>	jadew: if f(t) is a function, then so is f(t-1).
<whitepride_>	oh god damn it you guys are making it more complicated
<whitepride_>	sorry for the rant
<pyon>	jadew: where `t` is (the logically current) time.
<denommus`>	whitepride_: a<=b is the same thing as (a<b) || (a==b)
<horny-sama>	denommus: yep
<pyon>	whitepride_: if you don't understand the difference between "less or equal" and "less", chances are you shouldn't have graduated high school. probably not even elementary school.
<planckwalk>	whitepride_: "<=" means "less than or equal to".  "<" means just "less than".
<whitepride_>	why is the output the same when i do a for loop for i = 0; i < 10; 1++ i get the same result as for i = 0; i <= 10; 1++
<pyon>	1++ isn't even legal c (or c++ or java or whatever), me thinks.
<planckwalk>	whitepride_: that's probably supposed to be i++ rather than 1++, but you don't.
<whitepride_>	pyon: i have my ged thank you very much and i haven't studied for the exam and passed it on the first try
<planckwalk>	in the first loop, i is never equal to 10.  in the second, it is.
<whitepride_>	yeah i mean i++
<whitepride_>	whoops
<planckwalk>	the second one loops one more time.
<denommus`>	whitepride_: it shouldn't be the same output
<jadew>	it could be if he has a break
<jadew>	if (i == 9) break;
<jadew>	:)
<denommus`>	jadew: indeed
<whitepride_>	i'm doing this in javascript
<jadew>	pyon and denommus`, thanks for trying to explain that concept to me, it's still foggy but i'll read on it
<denommus`>	jadew: i took some months for it to settle on my mind, but now i wish it was more widely supported
<denommus`>	jadew: it makes a lot more sense to do "property binding" with behaviors than with qt's signal system, for instance
<jadew>	why do i see js being mentioned so much in connection to this topic?
<denommus`>	jadew: because some reactive libraries for js appeared fairly recently
<pyon>	jadew: have you ever been taught about operations on functions? the canonical examples in college are the derivative and antiderivative (w.r.t. a fixed argument). you can think of the "derivative w.r.t. x" as a "big function", whose input is a "function of x", and whose output is another "function of x".
<pyon>	this is an example, in mathematics, of what "treating functions as first-class values" means.
<pyon>	and it is really the same thing in computer programming.
<denommus`>	jadew: but i'd rather work with haskell (using reactive-banana) or ocaml (working with react)
<denommus`>	pyon: speaking of which
<pyon>	denommus`: ...?
<denommus`>	pyon: i'm having a hard time implementing arrowloop for my library
<pyon>	:-o
<jadew>	pyon, yeah, i get that but i still don't get the big picture :)
<denommus`>	pyon: in haskell the implementation is trivial, because of laziness
<denommus`>	pyon: just a mfix solves everything
<denommus`>	pyon: do you have any idea of what should i look for to implement it?
<pyon>	denommus`: no idea!
<denommus`>	damn
<pyon>	denommus`: :-(
<denommus`>	not even #ocaml folks were able to help
<pyon>	jadew: for example, for the sake of simplicity, let's say that, whenever a player takes a hit, his health decreases instantaneously. then, we could say that the derivative of the player's health over time is zero almost everywhere, except for those points in time where he takes a hit -- in those points, it's a shifted dirac's delta (times the amount of health subtracted).
<denommus`>	the only other person who may know how to do something like that might be twey
<pyon>	denommus`: yeah, twey knows a lot more about this stuff.
<pyon>	denommus`: plus i've been working on completely unrelated stuff. (lately, gc.)
<pyon>	jadew: then you integrate, and... voilà!
<denommus`>	pyon: is the gc still in rust?
<pyon>	denommus`: yes, everything will be in rust.
<pyon>	denommus`: i need to manage various kinds of heaps.
<pyon>	deanrock: so a `trait heap` is convenient to give them all a common interface.
<denommus`>	pyon: are you going to contribute by transforming it in a gc<t>?
<pyon>	denommus`: i don't think it will be terribly useful for rust programs themselves.
<denommus`>	oh, well
<aewffwea>	denommus: what's an arrowloop?
<denommus`>	aewffwea: do you know what an arrow is?
<aewffwea>	denommus: the thing you fire with a bow?
<denommus`>	aewffwea: an arrow is something similar to a function. in fact, functions are a specific type of arrows
<pyon>	denommus`: from the description of the `arrowloop` type class, it seems that meaningful `arrowloop` instances depend on some kind of delayed computation.
<denommus`>	aewffwea: you can compose arrows like you compose functions
<denommus`>	aewffwea: an arrowloop is an arrow where you can have an arrow feeding its output as input for itself, producing a new arrow that doesn't depend on this cyclic input
<pyon>	this is very reminiscent of the notion of closed-loop feedback, used when studying lti systems.
<denommus`>	aewffwea: using functions as example, if you have a (a, c) -> (b, c) function, you can produce a a -> b function
<denommus`>	aewffwea: for that, you need to implement the "loop" function, which makes this transformation. its type signature is arrow a => a (b, d) (c, d) -> a b c
<denommus`>	pyon: it does depend on delayed computation. i just have no idea of what i need to delay, or how
<n1cky>	help me name a struct. it's responsible for holding variables that request handlers hand off to each other.
<denommus`>	n1cky: observer
<n1cky>	denommus`: i really like it. anything is better than viewhandoff
<dolemite_>	ha.
<monroe>	what characterizes the state of a turing machine at any given time ?
<n1cky>	the 7 tuple
<monroe>	5tuple
<n1cky>	q, tau, b, eps, delta, q_0, f
<n1cky>	had to look up on wikipedia to remember q_0
<monroe>	:d
<monroe>	;d
<n1cky>	d:
<n1cky>	lol the internet is awesome. i just sent smiley faces with someone ive never met.
<blackpower_>	i hate white people
<blackpower_>	bitch ass crackers
<inphase>	!ops
<blackpower_>	fuck you bitch
<blackpower_>	racist white bitch
<n1cky>	who hurt you man
<n1cky>	how'd you get to be this way?
<blackpower_>	shut the hell up cracker
<blackpower_>	i'm going to fuck yo ass up bitch
<blackpower_>	white piece of shit
<n1cky>	i feel bad for you. this is what you're doing with your life?
<denommus`>	so iconoclastic, so revolutionary
<n1cky>	at what point in the day did you decide, "you know, i'm bored, let's go troll some people wanting to talk about programming"
<n1cky>	do you have no one close to you that you'd prefer to talk with?
<blackpower_>	we must get rid of crackers and kill every one of they babys
<n1cky>	how are your parents doing, have you checked lately?
<n1cky>	that cute girl you saw this morning, i bet you couldn't look at her eyes, could you?
<n1cky>	i bet you masturbate an unhealthy amount.
<n1cky>	i bet your family is embarassed about you.
<n1cky>	it can get better, man.
<n1cky>	i'll keep you in my thoughts.
<blackpower_>	fuck off bitch you is the problem cuz we ain't have no power cuz of racist white crackers like yo racist self bitch ass mofucka
<denommus`>	blackpower_: what a fun monday you're having
<dolemite_>	lol..
<blackpower_>	fuck you racist bitch
<denommus`>	blackpower_: i envy that. doing what you love like that
<dolemite_>	he's bored.
<denommus`>	blackpower_: you must feel very fulfilled, very liberated
<planckwalk>	is reddit still down?
<dolemite_>	no
<blackpower_>	i'm going to kill the next cracker i see
<karstensrage>	troll
<planckwalk>	okay.  i noticed a flood of trolls in a few channels when it was.
<karstensrage>	obvious troll is obviously trolling
<dolemite_>	i just went through a couple hundred comments on reddit just to find my friends account.. haha.
<dolemite_>	what was nasm written in?
<dolemite_>	assembly?
<jrslepak>	dolemite_: looks more like c to me -- http://repo.or.cz/w/nasm.git/tree/4920a0324348716d6ab5106e65508496241dc7a2
<jrslepak>	and a little bit of perl!
<dolemite_>	i'm tempted to ask what that code was compiled with.. but i think i'll end up in a never ending cycle of "well then what was that compiled with?"
<dolemite_>	eventually ending up with the answer of flipping bits on the hard drive manually with a tiny magnet
<jrslepak>	nah, it would take you back to more primitive storage media
<dolemite_>	true.
<dolemite_>	punch cards
<dolemite_>	or abacus
<dolemite_>	interestingly enough the changelog for nasm is larger than the assemble.c + parse.c files
<deerhawk>	is the incompatibility  between ddr2 and ddr3 a way for hardware manufacturers to make more money or is there a technical reason for it?
<denommus`>	deerhawk: por que no los dos?
<deerhawk>	denommus`: bubben, jag hittar inte mina cigaretter :(
<deerhawk>	denommus`: jag blir tokig, jag måste hitta mina cigaretter bubben, kan inte du springa och köpa cigaretter åt mamsi så gör jag ostmackor åt dig?
<denommus`>	deerhawk: dude, that was a reference for a commercial, calm down
<denommus`>	deerhawk: spanish is not even my native language xd
<deerhawk>	denommus`: i just took the opportunity to cite a sketch in some other language :p. i jumped on the train.
<denommus`>	deerhawk: anyway, we can't really know
<denommus`>	deerhawk: they will always claim technical reasons
<aewffwea>	denommus: it's usually more of an economical reason... backwards compatibility tends to be expensive, and it doesn't always add a lot of value...
<deerhawk>	does smart cpu-cache management in programs run on a vps even matter? if you share the actual hardware with other vpss, won't they just screw up the cache way to often? something something. i know that your cache gets flushed on a local pc too in context switches, but in a vps, it must be a mess, no?
<deerhawk>	something something
<woggle>	deerhawk: it's usually possible to actually partition some cpu caches between users/programs/etc.
<woggle>	deerhawk: and avoid full flushes.
<woggle>	probably much harder if you aren't doing virtual machines, though.
<nso95>	time for some arduino fun
<woggle>	deerhawk: oh, and, uh, the time slice a cpu-bound program will run for on a shared system is usually much, much, much, much more than it takes to load up the cpu caches.
<deerhawk>	nso95: what's fun about arduino? :p it's just some avr-chip on a bread board
<nso95>	deerhawk: that exactly whats fun about it
<deerhawk>	woggle: ah yeah, probably
<deerhawk>	nso95: why not have fun with electronics directly? :d
<nso95>	deerhawk: i planned on it, but i haven't bothered ordering anything yet
<znoosey>	why spend time soldering when you can just connect stuff?
<znoosey>	arudino is perfect for prototypes
<nso95>	i mean, breadboards
<deerhawk>	znoosey: you don't have to solder anything with a bread board
<znoosey>	deerhawk: if all an arduino is is an avr chip with a bread board, and you don't want to use an arduino...
<znoosey>	i'm sure you can see the flaw in there
<darkcthulhu>	hi all!!!!
<deerhawk>	darkcthulhu: hi you
<znoosey>	anyway, off to work!
<darkcthulhu>	sup deerhawk?
<rindolf>	darkcthulhu: hi, sup?
<deerhawk>	darkcthulhu: im ok, and you? just woke up, got home from work or what?
<darkcthulhu>	hi rindolf.. studying up for my last exam
<darkcthulhu>	deerhawk: studying up. the semester is coming to an end. i can't wait to work on my own stuff!
<darkcthulhu>	one more day
<rindolf>	darkcthulhu: good luck!
<rindolf>	darkcthulhu: what is this exam in?
<darkcthulhu>	rindolf: ty. it's advanced compiler design. primarily data dependence analysis and loop optimizations.
<darkcthulhu>	what are you up to
<darkcthulhu>	?
<rindolf>	darkcthulhu: i'm thinking about a project euler problem.
<darkcthulhu>	rindolf: ah.. which one today?
<rindolf>	darkcthulhu: and i'm heating up http://en.wikipedia.org/wiki/b%c3%b6rek for breakfast.
<rindolf>	darkcthulhu: https://projecteuler.net/problem=356 - this one.
<rindolf>	darkcthulhu: i'm thinking that maybe i should use logarithms.
<darkcthulhu>	rindolf: whoa.. floating point stuff.
<ovrh>	'morning
<darkcthulhu>	hi ovrh :)
<ovrh>	darkcthulhu, hi!
<darkcthulhu>	what are you working on
<darkcthulhu>	?
<deerhawk>	(working solutions aside.. in reality i'd just use pthread or something.. so i don't need help with how to do it.. this is a theoretical question). semaphores in c, do they work?  you'll have to read variable x, check it.. then increase or decrease it if it's "free". now, what if you get a context switch before x is updated and the other thread read the same value .. then both threads will increase x. typically, if you do this, you do it with
<deerhawk>	atomic machine instructions, ones that you don't have in c?
<woggle>	the 2011 c standard has atomic operations.
<darkcthulhu>	http://lolmythesis.com/
<darkcthulhu>	lol
<deerhawk>	woggle: cool. c++ as well?
<woggle>	yes.
<woggle>	also threads in both.
<deerhawk>	:3
<darkcthulhu>	hi woggle! how's it going? :)
<deerhawk>	woggle: would you use them on a nuclear power plant?
<woggle>	you probably should think twice about using threads in your safety-critical industrial control software.
<woggle>	at least threads that need to do any sort of synchronization.
<zacts>	hi programmers
<deerhawk>	zacts: hi online user 999999999 miles from me but virtually right here
<aidanh>	hello everyone
<rekcah>	hello
<woggle>	deerhawk: note that, without atomics/mutexes/etc., the gaurentees on reading/writing values from multiple threads in c and c++ are really minimal; like it's not even required that you can come up with a set of context switches of the threads on a single processor that would explain the results you get from the reads.
<aidanh>	anyone mind giving feedback on this haskell implementation of split? http://sprunge.us/gdvx?hs
<gas_the_jews>	what's a split?
<zacts>	hehe
<zacts>	lo deerhawk
<zacts>	i'm at a pancake house
<zacts>	but not eating pancakes oddly enough
<aidanh>	gas_the_jews: split is a function that separates a list into two lists
<zacts>	fries and chicken
<zacts>	although, i want to be a vegan eventually
<gas_the_jews>	you're way more advanced than i am
<gas_the_jews>	i just learned javascript!
<gas_the_jews>	=d
<zacts>	gas_the_jews: really dude?
<zacts>	your nick effing sucks man
<gas_the_jews>	no it doesnt
<gas_the_jews>	you know what else effing sucks
<zacts>	i don't care, i just feel sorry for you man
<gas_the_jews>	the palestinian genocide
<aidanh>	it's definitely against freenode rules though
<zacts>	although, it is pretty vulgar man
<zacts>	gas_the_jews: if you don't want to get permbanned from #programming, you probably will want to change your nick to conform to freenode rules
<zacts>	(just sayin)
<gas_the_jews>	oh
<gas_the_jews>	but if i had a nick that said kill terrorists everyone would be okay with it
<gas_the_jews>	oh the hypocrisy
<aidanh>	it's not hypocrisy; one is racist, one isn't
<aidanh>	that's in so far as 'following the rules' goes, anyway; whether people would be okay with it is another matter
<gas_the_jews>	umm calling arabs terrorists is racist
<^python111>	why are you racist?
<aewffwea>	^python111: that's a very interesting question
<gas_the_jews>	it's not racist to hate a religious group...
<aewffwea>	gas_the_jews: i'm not entirely sure :)
<^python111>	(since nobody claimed arabs were terrorists, you assumed we did)
<gas_the_jews>	i should say cult since it's more accurate
<aidanh>	it is, but you didn't state that they were arabs; and jews also qualify as a race
<gas_the_jews>	i don't assume, i know
<aewffwea>	aidanh: do they?
<gas_the_jews>	jews don't qualify as a race, they're scum
<illogicalfix>	lmao
<^python111>	since when are arabs a religious group
<zacts>	another troll
<^python111>	oh, right
<zacts>	sterling: ^
<gas_the_jews>	arabs are not a religious group you fucking troll
<aewffwea>	i don't know why people are racists... but i think to remember that usually it's based on "hating" someone or something, so you can blame it for all your problems...
<gas_the_jews>	hating jews is not racist
<gas_the_jews>	is hating christians racist?
<aewffwea>	i think that in general "sad" people are racist... happy people are more likely to love everyone :)
<karstensrage>	trolls are just sadists
<^python111>	after i asked you are you racist
<aewffwea>	gas_the_jews: technically nor jews nor christians are a race as far as i know... but i'd informally call it racist....
<karstensrage>	they enjoy making people uncomfortable
<nso95>	jewish could probably be more accurately calleda a race than christianity
<gas_the_jews>	aewffwea: did you know that before world war two jews owned all the businesses and discriminated against gentiles
<gas_the_jews>	hitler stepped in and did the right thing
<aewffwea>	nso95: it's a more closed group, but i don't think that biologically they are a different race
<gas_the_jews>	did you know that the word gentile is a racist word
<^python111>	gassy dude, i don't think we learnt from your history books
<illogicalfix>	gas_the_jews:  is mad because a wealthy jew screwed him over
<nso95>	aewffwea: certainly not biologically, maybe "culture" is a better term
<aewffwea>	gas_the_jews: maybe jews are racists too...
<illogicalfix>	hating on the jews for being successful is funny
<aewffwea>	nso95: that's the thing, i consider race to be a biological term...
<gas_the_jews>	gentile is a racist word that is defined as a servant of jews, someone who is subhuman
<aidanh>	aewffwea: i don't know; i'd still lump discrimination against them in with other forms of racism, if only for the sake of convenience
<gas_the_jews>	illogicalfix: if you count genocide and deceit as success then you must be a fucking kike
<aewffwea>	gas_the_jews: i think that hating someone you don't directly know is sad....
<gas_the_jews>	aewffwea: i agree with you... would you say the same thing for hitler?
<gas_the_jews>	if not then you're a fucking hypocrite
<aewffwea>	gas_the_jews: people know hitler directly....
<illogicalfix>	jews genocided no one.
<gas_the_jews>	umm palestinians you stupid fuck
<aewffwea>	gas_the_jews: the idea of "racism" is that if you hate an individual because you know it, it's fine....
<^python111>	fkin troll
<aewffwea>	gas_the_jews: if you hate a group of n people beacuse a subset of those people did something, or do something, that's wrong....
<aewffwea>	gas_the_jews: basically, only hate the people who are directly responsible for the things you hate... don't generalize to include people you don't have knowledge of...
<gas_the_jews>	so it's wrong to hate jews for committing endless thefts and genocides and wars you fucking idiot
<aewffwea>	gas_the_jews: so if you have 20 people you know from school, and they are jews, that's fine... you are not racist only because of that...
<gas_the_jews>	aewffwea: don't tell me what to do you fucking retard
<^python111>	kek
<aewffwea>	gas_the_jews: you can hate specific jews, that you know that they did wrong stuff... you shouldn't just "hate" jews in general....
<aewffwea>	gas_the_jews: don't generalize....
<nso95>	there should be a bot that bans people if so many people ask it to ban someone
<nso95>	like flagging
<^python111>	kick vote
<aewffwea>	nso95: sometimes the majority is wrong
<illogicalfix>	gas_the_jews:  why you so angry? are you palestinian?
<gas_the_jews>	wikipedia is a pro kike forum
<horny-sama>	majority is always wrong nso95
<illogicalfix>	american jews are nice
<gas_the_jews>	illogicalfix: yes i am and i have been held hostage and tortured by jews
<nso95>	sometimes it's wrong, but sometimes it's not
<illogicalfix>	lol
<^python111>	kek
<horny-sama>	if the majority is correct how come only a small number of people can succeed
<illogicalfix>	lies.
<horny-sama>	:p
<gas_the_jews>	i am now taking asylum in hong kong
<illogicalfix>	age?
<aewffwea>	gas_the_jews: you were held hostage and tortured by people.... hate those people... no one more, no one less....
<nso95>	i'm not suggesting democracy is idealogically correct, but in this specific case it could put an end to trolls quite quickly
<rounin>	what happens when a palestinian hurts another palestinian? will you then also support gassing palestinians?
<nso95>	full democracy* rather
<horny-sama>	gas_the_jews: i thought organization der ehemaligen ss-angehörigen only have connection in south america
<icetooth>	laying low with your inconspicuous username i see.
<horny-sama>	:p
<rounin>	of course, palestinians hurt other palestinians all the time, so it's not exactly a theoretical question
<nso95>	##programming needs a constitution
<gas_the_jews>	rounin: that's not true palestinians are murdered by jews every day
<rounin>	in general, the world would be a good bit better if people first tested their policies on themselves
<gas_the_jews>	they change the facts to gain sympathy they are in control of american media
<rounin>	take suicide bombers... what group kills more suicide bombers than them? a brilliant initiative
<horny-sama>	gas_the_jews: true
<horny-sama>	rounin: rothchild
<horny-sama>	*rothschild discuss
<illogicalfix>	gas_the_jews:  then why is your english so good?
<nso95>	do american's actually believe what they're told about israel anyway?
<illogicalfix>	you were taught by a jew
<horny-sama>	illogicalfix: he is a ss officer?
<horny-sama>	nso95: i do
<^python111>	nso95, yep
<nso95>	horny-sama: as in?
<horny-sama>	nso95: rothschild control the financial system
<horny-sama>	and that every rich and powerful ppl in the west has to be a jew
<gas_the_jews>	illogicalfix: you think that just because i'm palestinian i can't speak or learn english... you fucking racist prick
<illogicalfix>	gas_the_jews:  i'm jewish
<nso95>	horny-sama: makes sense
<gas_the_jews>	horny-sama: that's the reason jews were "prosecuted" by nazis in the first place
<nso95>	at least judism is slightly less ridiculous than other abrahamic religions
<horny-sama>	gas_the_jews: teach eternal jew
<horny-sama>	a great doc
<horny-sama>	:p
<horny-sama>	most if not all religion is ridiculous
<nso95>	i agree
<deerhawk>	well, heil hitler, kill all non-black non-nazis. black nazis should rule the world.
<nso95>	but less ridiculousness is always better
<gas_the_jews>	nso95: so cutting off part of a baby's penis and sucking it is not ridiculous?
<nso95>	gas_the_jews: shut up
<aawe>	nso95: nice comeback bro
<deerhawk>	nso95: well, you gotta give him that... that was a really shitty comeback
<nso95>	i wasn't trying to make a good one
<^python111>	who gives a fuck
<^python111>	lol
<nso95>	i don't like circumcision either
<nso95>	but i frankly don't give a fuck about arguging with a moron
<horny-sama>	depends on the type of circumcision
<nso95>	arguing*
<aawe>	ad hominem now
<^python111>	just ban the troll
<horny-sama>	female circumcision is cool
<aawe>	keep lowering the bar, bro!
<horny-sama>	coz your wife can't feel good during sex = no chance of cheating
<horny-sama>	:p
<deerhawk>	yes, i want that
<aawe>	horny-sama: you mean risk?
<nso95>	horny-sama: what if you're ugly?
<deerhawk>	just get a fat and ugly and mentally challanged wife and you're safe
<horny-sama>	deerhawk: i want a hot one
<aawe>	we'll reserve the ugly ones for horny-sama
<deerhawk>	horny-sama: then you've got to share
<aawe>	horny-sama: too bad, reduced risk for cheating is your top priority, so you get ugly ones
<aawe>	the choice is already made
<deerhawk>	wait.. why are we even doing this. usually i'm the one trolling, and now i'm getting trolled.
<horny-sama>	aawe: just remove your clit and she can't cum
<horny-sama>	and i am good
<horny-sama>	:p
<aawe>	horny-sama: not an option. you get ugly
<nso95>	everyone knows vaginas don't exist
<horny-sama>	this is turning into /pol/
<nso95>	i've never seen one, so they can't exist
<deerhawk>	well, vaginas are actually curled-up split-in-half nut sacks.
<^python111>	kek
<horny-sama>	proof you are not a jew or black and make fun of jews and blacks
<aawe>	it feels like the active average age in here is reaching record lows this morning, what's up? american kids just got home from school?
<horny-sama>	 /pol/ in a nutshell
<aidanh>	aawe: mods are asleep
<horny-sama>	more like mods don't want to get involve in some silly stuff
<aawe>	horny-sama: how old are you? 14?
<horny-sama>	bed time
<horny-sama>	aawe: uni student in canada
<gas_the_jews>	yeah tis time for bed
<aawe>	i don't believe that for a second
<horny-sama>	happymerchant.jpg
<aawe>	ah, deerhawk was smurfa. known troll
<aawe>	wonder why he's not banned here
<zacts>	ah not effing gavino
<alfio>	hello
<cun_tlord>	i hate niggers
<txdv>	you are free to hate everyone you want
<cun_tlord>	thank god
<txdv>	god hates you though
<hit_ler>	so who else can i hate?
<txdv>	starting with yourself is always a good step
<aawe>	txdv: what's up
<textmode>	txdv: i löve it when they tidy themselves away like that.
<txdv>	nothing much
<txdv>	just came back from my holidays in italy
<aawe>	did you ingest pasta?
<kikes_suck_dick>	hello again i had to be banned from a few channels to get a kline and come back
<textmode>	i almost feel sorry for this troll. he's really not very good.
<aawe>	textmode: sociopaths can't percieve their own failure
<aj_>	is intellij better than eclipse?
<interop_madness>	yes.
<aj_>	what are its merits?
<adsc>	it costs money
<interop_madness>	the regular programmer is pissed off by nearly every aspect of eclipse. not so much a problem with intellij
<aawe>	it doesn't punch you in the face when you try to use it
<aawe>	adsc: intellij community edition is free of charge
<aj_>	eclipse is user friendly.
<adsc>	aawe: then one of the advantages is gone
<interop_madness>	aj_, no that's objectively false
<aawe>	aj_: so is a spoon, yet i'd rather use a chainsaw for felling trees
<interop_madness>	it's even a hassle to install svn integration
<aj_>	who's gonna use svn than git?
<interop_madness>	a lot of people
<aj_>	i used egit plugin it's fantastic.
<adsc>	people working on projects older than git maybe
<interop_madness>	a lot of people use both actually
<interop_madness>	that's an incredibly stupid statement adsc
<adsc>	is it?
<interop_madness>	yes
<aawe>	i hope i never have to use a java ide again in any case
<aj_>	i agree with adsc.
<interop_madness>	contributors to project xyz don't usually control which source control is used
<adsc>	well, i wasn't trying to imply something, but people working on projects older than git usually do work with svn, you know
<aj_>	well, linus torvalds himself told svn is ancient (stone age) tool.
<pasky>	aj_: i think replies you got here are kind of useless, but what about http://stackoverflow.com/questions/239732/things-possible-in-intellij-that-arent-possible-in-eclipse ?
<adsc>	can also be cvs, mercurial or anything, but svn is more popular than those
<pasky>	adsc: a lot of them converted their projects to use git
<aj_>	svn doesn't provide any security to code modifications.
<interop_madness>	aj_, and as we all know, linux torvalds is the go-to guy for a balanced opinion
<pasky>	adsc: what about people that work on projects older than svn? mostly noone uses cvs anymore
<adsc>	pasky: i know a lot that didn't convert them
<aawe>	i have only seen svn used for 1. old projects started before git/hg existed and 2. projects with a lot of binary files, i.e. an assets repository in svn and main code in git/hg
<aawe>	svn is dead
<adsc>	pasky: cvs is still around
<interop_madness>	i wouldn't use svn for new projects either, but the reality for people working somewhere is that they have to connect to "ancient" svn repositories and eclipse makes things more difficult than necessary due to its shitty plugin system
<aj_>	\join #java
<ams>	morning
<pasky>	adsc: it may be around in various special cases, but i doubt you'll see it anytime often
<aj_>	what are the uses of spring/hibernate?
<aawe>	aj_: laughing stock
<aawe>	java is dead
<aj_>	but, most of the organizations are preferring them for developing web applications.
<aj_>	i don't understand the exact use. jsp is very bulky than php or django.
<aawe>	are you talking about enterprises?
<aj_>	yeah.
<aawe>	you don't want to develop enterprise software anyway, it's where souls come to die
<pasky>	java is not dead even outside of enterprise, of course
<aawe>	use modern languages - ruby, haskell, rust, cl, elixir
<aawe>	languages people use for new projects
<pasky>	e.g. a lot of scientific natural language processing software is in java
<aawe>	pasky: that's because academia is stuck in javaland
<aj_>	java island.
<pasky>	it's not that much about language at all, it's about the combination of ecosystem + performance
<adsc>	aj_: java server applications are usually developed in businesses where they need additional enterprisey-technologies like esb, rule engines., etc.
<pasky>	where ecosystem is amount of existing libraries *and* number of potential collaborators who also know the language
<aj_>	can we do the same using php or django?
<aj_>	enterprise level apps?
<adsc>	yeah, with more effort
<aj_>	more effort?
<pasky>	i agree that developing enterprise software is where souls come to die, please do stay away unless you want to treat programming purely as 9-5 job, in which case what are you doing on irc talking about it?
<adsc>	yes, because you will have to write more code...can't use libraries that don't exist
<aawe>	stay far away from php
<adsc>	pasky: you can program a 9 to 5 job and still be interested in programming in your spare time
<pasky>	which is why i used the word "purely"
<aawe>	php is furiously working towards being an "ok" language in 5 years
<aawe>	and i think they will fail
<adsc>	i doubt it will ever be an okay language
<miniman10000>	adsc, if naruto taught me one thing it is this "believe it!"
<adsc>	miniman10000: yeah, i agree, but at the end of the day, you have to eat something and go to sleep somewhere
<adsc>	miniman10000: and when you live in a place where every programming job is either at a bank, insurance company, or similar "enterprisey" environment, there's not much you can do
<pasky>	you can work over the internet
<miniman10000>	ive heard stories when it comes to banks
<adsc>	pasky: not if you live in the most expensive place in the world
<pasky>	or build your own product
<pasky>	adsc: ok, example?
<pasky>	like, dubai?
<miniman10000>	cali!
<adsc>	yeah, in your spare time
<pasky>	why do you live in dubai as a programmer?
<adsc>	dubai is not a place where you live
<aawe>	california sucks, it's going to be a wasteland after this summer
<pasky>	in cali there is plenty of non-enterprise programming jobs
<adsc>	i don't live in the usa
<pasky>	i wonder about what's an expensive place that has only boring jobs
<adsc>	switzerland
<aawe>	pasky: perhaps london
<rounin>	norway
<pasky>	pleeeenty of fun stuff going on in london
<aj_>	bengaluru.
<aawe>	yeah, at least 3 things
<aawe>	which is more than 2
<aawe>	and thus plenty
<pasky>	in switzerland you can at least work at google if nothing better
<rounin>	well, the "only boring" part isn't entirely true for norway... but it's a place with only 5 million people, so there's a limit to how exciting it is
<pasky>	no clue about norway but i doubt there are only boring things to do there
<rounin>	if you like trees, it's the perfect place, pasky
<rounin>	trees... mountains... snow
<pasky>	really the only bad expensive places for creative programmers that occur to me are the rich emirates
<pasky>	i like trees and mountains
<rounin>	there you go :d
<pasky>	never could ski properly though
<rounin>	then again, switzerland has those too
<pasky>	i lived in switzerland for three months
<pasky>	never more
<pasky>	that really is a boring place
<aj_>	live in india.
<aawe>	wrong caste, forced to clean streets instead of programming
<aawe>	damn
<aawe>	do you roll the dice for a caste when entering india?
<pasky>	can you re-roll if you re-enter?
<aawe>	^
<bocard>	i don't think norway would be boring..i live in denmark and the startup scene is booming
<aj_>	live in bengaluru or hyderabad.
<pasky>	yes i think norway should be fine too, just don't have even second-hand experience to judge
<aawe>	aj_: which caste level do you need to move there? 4+?
<aj_>	what do you mean by caste level?
<pasky>	aj_: it's not just about job but also about quality of life; i'm sure india will be appealing for certain people, but not for most :)
<aawe>	aj_: india uses a caste system to keep poor people poor and rich people rich
<aawe>	you are born into a caste, and you stay there
<aj_>	no. it's not true in the 21st century.
<aawe>	you can't marry across caste levels - if you do, both get the lower caste
<aj_>	nope.
<aawe>	if you try to fake your caste, you get flogged
<aj_>	everything has changed now.
<aj_>	people are becoming more conscious. westernization.
<aawe>	i don't believe that for a second
<pasky>	i'm sure about that, but i've heard from indian friends that there's still a lot of remnants and large inertia.
<pasky>	so i do hope it's changing for the better, but don't get the impression it's changed completely already
<aawe>	"the supreme court of india ruled in 2007 that social organisation based on caste is inherited and cannot be changed"
<pasky>	or maybe it's region-specific
<pasky>	(actually, that's pretty likely)
<aj_>	it depends on how you handle them. india is rich, but indians are poor.
<aj_>	omg, earth quakes all over south asia.
<aawe>	the maltreatment of dalits in india has been described by some authors as "india's hidden apartheid"
<aj_>	yeah, the previous generation is still clinging to that. but, most of the facebook generation is changing.
<rounin>	aawe: as i understand it, some of the government recognition of castes is due to a form of affirmative action
<rounin>	aawe: i.e., some people may want to pretend to be dalit so as to get special benefits
<aawe>	that's bullshit
<rounin>	there was a case recently where people were changing religions back and forth or something like that
<aj_>	i agree with rounin.
<adsc>	pasky: assuming google is a nice place to work at
<rounin>	i take it you're an expert on india, then, aawe?
<aawe>	rounin: yeah, reading the wikipedia page and shit. already quite knowledgeable
<bocard>	aj_: earthquakes happening now in asia?
<rounin>	aawe: hmm... so just from reading the wikipedia page, you can now say with certainty what the current situation in india is like... why do we even bother with actual research?
<aj_>	bocard, : yeah.
<aawe>	rounin: you tell me. it's all on the wikipedia page anyway
<aawe>	i agree with you fully
<bocard>	aj_: got a link?
<adsc>	wikipedia citing circles have happened before
<aj_>	bocard, : northern india, afghanistan, china, nepal, indonesia.
<aj_>	just watching on television.
<adsc>	what was that famous case again?
<rounin>	planckwalk: that would be the only sensible choice, since it doesn't accept primary sources, all of a sudden
<bocard>	aj_: hmm ok, thx
<rounin>	planckwalk: an infinitely indirect source would be the ideal thing!
<rounin>	why bother with "facts" when you can document what's been published!
<aj_>	bocard, : not very lethal. 7.9, 6.2 etc.,
<planckwalk>	7.9 is far from trivial
<planckwalk>	some of the worst earthquake disasters in history have been of that order
<pasky>	adsc: it's better than enterprise job; i'm certainly not a google fanatic, turned down all their offers (though maybe i do have a tingle of regret turning down a deepbrain offer, but i have other plans anyway)
<aj_>	given, the mountaneous plateau himalayas, its lethal for nepal.
<pasky>	i think for most people it's a fine aspiration to work at google and they'll be happier there than at most other places
<adsc>	if people still lived in tents, earthquakes wouldn't be that grave
<pasky>	i hear that in libya they have pretty advanced tents
<pasky>	but then again it's kind of warm there
<planckwalk>	or if they lived in buildings built to handle earthquakes.
<planckwalk>	(especially in quake-prone areas)
<aj_>	tremours were felt for one minute.
<pasky>	planckwalk: which unfortunately cost rather a lot to build
<txdv>	maybe people should just stop living near vulcanos and earth quake regions
<pasky>	planckwalk: and nepal is not known for riches
<pasky>	txdv: and move to...?
<planckwalk>	true
<aj_>	move to india.
<txdv>	siberia
<adsc>	great idea
<aawe>	aj_: how do i achieve maximum caste?
<planckwalk>	that's probably a billion people to move, there.
<adsc>	aawe: you get born into it
<txdv>	there is enough space in siberia
<aawe>	adsc: damn
<aj_>	siberia was unfortunately hit by an asteroid. near tunguska in 19th century.
<planckwalk>	so, cost a hundred trillion dollars probably.
<pasky>	there are some pretty good reasons why not a lot of people live in siberia, but maybe technology could be changing that more quickly than dealing with quakes, i guess
<txdv>	planckwalk: container shipment is very efficient nowadays
<adsc>	aj_: isn't it called a meteorite if it enters atmosphere?
<aj_>	sorry. yeah.
<planckwalk>	establishing civilization infrastructure is still expensive
<pasky>	the main problem in siberia is the climate
<aj_>	move to deccan plateau in india. safe from tsunamis, volcanoes, earth quakes.
<aawe>	aj_: what's the caste requirement for deccan plateau?
<aj_>	human.
<aawe>	also what caste do i get?
<pasky>	what's the current population density of deccan plateau?
<planckwalk>	(deccanplateau)personlocation.  a cast!
<aj_>	237 per square kilometer.
<aawe>	i reckon i am at least level 5 in caste as i own a snowmobile and those are not chea
<aawe>	p
<rounin>	i threw a dice. you get dalit
<rounin>	a die i mean
<planckwalk>	die.
<rounin>	anyway, hope you're happy
<planckwalk>	i'm in good company with the dalit llama
<rounin>	:d
<pasky>	as an example of the problem with siberia, i give you http://en.wikipedia.org/wiki/oymyakon
<pasky>	winter record: -69c; summer record: +30c
<pasky>	that's the trouble with continental climate
<adsc>	yeah, it's a terrible place to live
<pasky>	it's not even consistently cold
<aj_>	india 25-45 degrees celsius.
<rounin>	hm... that's like okonomiyaki, only one is a dish and the other one's a place
<rounin>	so basically not like that at all!
<pasky>	hehe, it reminded me of that too
<aawe>	rounin: damn your loaded die
<aawe>	i want a re-roll
<rounin>	aawe: your only chance is to live a life improving your karma, i'm afraid
<rounin>	then you get to be reborn as a carnival clown
<bocard>	lucky bastard
<adsc>	he might already be a carnival clown
<aj_>	9 people dead in earth quakes. few houses are destroyed in nepal.
<aawe>	adsc: how did you know
<adsc>	i am a psychic
<aawe>	can you read my dogs mind?
<adsc>	magnetopsychological therapy only 250$/h over the internet
<adsc>	guaranteed success
<aawe>	no deal unless you throw in some candy bars
<ilhami>	hey guys
<adsc>	candy bars are not good for your dog
<aawe>	source?
<adsc>	feed him celery instead
<adsc>	www.candybarsarebadforyourdog.com
<ilhami>	tom brady is a cheater.
<aj_>	who's he?
<ilhami>	quarterback for new england patriots.
<ilhami>	cheater team.
<ilhami>	anyway guys what are you missing?
<aj_>	which sport do they play?
<ilhami>	murican football.
<aawe>	ilhami: you like rugby, then?
<aj_>	do anyone like cricket?
<ilhami>	aawe, i don't. :p
<aawe>	amigojapan: who needs winforms when we have qt
<rounin>	that's only to protect you, amigojapan :)
<ilhami>	i like cycling.
<aawe>	ilhami: then why you talk about rugby halfbacks
<ilhami>	has anyone ever taken the drug epo? :p
<vendu>	hello people :)
<amigojapan>	aawe:ok, good point, but i have an app i developed on winforms i want it to run on mac
<vendu>	ilhami, what's drug epo? :p
<ilhami>	hey vendu how is your os going?
<aawe>	os_420 ?
<ilhami>	erythropoietin
<vendu>	ilhami, kinda lazily as of late, but i've put some work into a sub-project, a planned computer game :)
<adsc>	epo is mostly used in bycicling
<vendu>	ilhami, ah, a type of drug - sorry, didn't notice the "the" :p
<vendu>	i don't do stuff like that, mostly i'm good with the good ol' herb :)
<ilhami>	adsc, yeah it is. :p
<vendu>	it's no big secret here i love the herb :p
<ilhami>	if i was ever going to take a drug which i am not i would try that.
<adsc>	i once read an article about a journalist that took it in a self experiment
<ilhami>	increasing red blood cells in the body :p
<vendu>	ilhami, hmm don't know anything about that... but i believe in natural stuff myself :p
<amigojapan>	vendu: dont come to japan, you wont be  able to smoke herb here
<adsc>	he was a hobby byciclist and during the time he took it, he could train with the pros
<aj_>	five earth quakes in one hour. god!!!
<vendu>	amigojapan, hehe yeah :)
<vendu>	hola amigo, btw :)
<aawe>	vendu: arsenic is natural
<ilhami>	nepal is done guys.
<amigojapan>	hola vendu
<vendu>	ilhami, what about nepal?
<vendu>	that's definitely one of the places i'd like to visit :)
<adsc>	vendu: cocaine is natural
<vendu>	aawe, i don't do stuff like that, though =)
<aawe>	opium is very natural
<vendu>	aawe, opium would be very interesting :p
<vendu>	but not h or morphine or that stuff, just raw opium :)
<adsc>	bad idea
<aawe>	opium dependency is not a joke
<vendu>	better not have too much of it, though =)
<vendu>	aawe, i know, but it doesn't build from occasional smoking
<amigojapan>	vendu: many poisons are natural,  natural!= healthy
<vendu>	due to a relatively common belief, you don't get hooked right off
<ilhami>	there was an earthquake in nepal vendu
<aawe>	vendu: so opium isn't nice then?
<vendu>	amigojapan, i was refering to stuff such as the herb, mushrooms, etc. :)
<vendu>	ilhami, argh d'oh :(
<aj_>	epaper.sakshi.com/video
<amigojapan>	ok vendu
<aawe>	if a drug makes you feel like you're in heaven, you get hooked
<koollman>	vendu: there's a natural way to get more epo in your body. but's it's rather tiring. sports
<vendu>	aawe, i think it is/would be
<amigojapan>	ilhami: sorry, i hope everything recovers quickly
<vendu>	only had o once and it wasn't ripe, but the feelings were very mellow :)
<vendu>	but i basically didn't feel like doing anything but laying down =)
<vendu>	whereas the herb makes me wanna do creative stuff etc. :)
<vendu>	listen to music :)
<aawe>	cannabis either makes me anxious or sleepy
<aawe>	seldom creative
<ilhami>	stop taking drugs guys.
<aawe>	ilhami: stop saying stop
<aawe>	say yes, man
<ilhami>	no man
<ilhami>	face your problems
<ilhami>	don't try to forget them.
<aawe>	do i have a problem on my face?
<dnewbie>	why is it that when i try to read input, my program will not print anything until i first enter the value? http://pastebin.com/1dfbbjzb (d language)
<ilhami>	anyway i came here to ask about ideas for a project.
<aawe>	ilhami: if you take some drugs you will get lots of ideas
<dnewbie>	^
<adsc>	ilhami: any project?
<ilhami>	just something that can earn me a whole bunch of money. :p
<aawe>	ilhami: you'll just spend the money
<rounin>	dnewbie: i'm guessing the input operation blocks the execution
<dnewbie>	ilhami: if you cant come up with ideas on your own...you don't deserve to be a programmer
<rounin>	dnewbie: the operating system pauses the program until something happens
<ilhami>	dnewbie, oh really?
<ilhami>	comes from a newbie.
<dnewbie>	rounin: yeah but why? there is info before that.
<aawe>	dnewbie: you can flush the stdio
<dnewbie>	ilhami: newbie to the d language. i know 6 programming languages
<dnewbie>	sooo
<rounin>	dnewbie: so it doesn't write "wuut" first?
<ilhami>	who cares?
<ilhami>	why are you showing off?
<ilhami>	loser.
<aawe>	!ops
<dnewbie>	ilhami: obviously your brilliant mind doesn't
<adsc>	ilhami: make a stock exchange prediction tool that actually works
<aawe>	ilhami: are you high?
<adsc>	ilhami: then use it to get rich
<rounin>	dnewbie: i would have to guess that what aawe said is the solution. seems strange that it wouldn't do the output first, but try anyway
<ilhami>	aawe, nah i don't take drugs.
<aawe>	rounin: indeed, newline usually flushes
<ilhami>	i am not like you.
<dnewbie>	aawe ,  rounin thanks
<aawe>	ilhami: am i like you? do you like me?
<ilhami>	i hate you
<aawe>	i don't think about you at all
<ilhami>	in fact if you were here.. i would want to beat you. :)
<miniman10000>	off?
<aawe>	fite me irl
<ilhami>	sure.
<ilhami>	let's fight.
<ec-not-irccloud>	'allo all
<adsc>	please make a video
<ilhami>	where are you?
<aawe>	umeå, sweden
<bocard>	yes, listen to adsc:
<rounin>	dnewbie: http://www.digitalmars.com/d/archives/digitalmars/d/learn/how_do_i_flush_the_output_of_write_26356.html
<ilhami>	come to denmark tomorrow.
<aawe>	hahaha denmark
<adsc>	we need more comedy videos
<bocard>	oh, lucky me. i live in denmark, i can watch you guys live
<aawe>	the mere existence of denmark is a joke
<rounin>	surely, for such a good cause, you could both meet in malmö?
<ec-not-irccloud>	anybody not involved in the internet fight going on have much experience with algo/data-structure stuff? i'm a programmer with no schooling, and for basically the first time ever, that's turning out to be a direct hinderance.
<ec-not-irccloud>	could use some advice / help.
<dnewbie>	lol ilhami
<ilhami>	aawe, most of sweden was a part of denmark.
<aawe>	https://www.youtube.com/watch?v=s-moy8vuebk
<rindolf>	hi all.
<rindolf>	ec-not-irccloud: with what?
<dnewbie>	watch out. you might be assaulted
<dnewbie>	sexually...
<aawe>	kamelåså?
<adsc>	ec-not-irccloud: just ask your question
<bocard>	fire osme questions away ec-not-irccloud: and you'll probably get some decent answers
<rounin>	depends on what the problem is, ec-not-irccloud
<ilhami>	skåne was a part of denmark
<adsc>	yeah, all countries have some glorious past
<adsc>	greece was once the center of the world
<ec-not-irccloud>	so: i've got a directed-graph (very large, persistent and mutating over the course of the entire program, and with possible cycles)
<adsc>	before they folded to the romans, and then to the ottomans
<ec-not-irccloud>	i'm trying to figure out an even *remotely* efficient way to figure out if a given node n belongs to any subgraph below any other node with property p.
<ilhami>	but i agree denmark is not the most interesting country. :)
<ilhami>	no mountains here.
<adsc>	ec-not-irccloud: a subgraph in a cyclic graph? good luck
<ec-not-irccloud>	the pathologically slow implementation: add backlinks to all the edges, then crawl the graph backwards from node n, checking each node found for p-ness. ick.
<rounin>	ec-not-irccloud: for an arbitrary graph, that just means searching everything doesn't it
<rounin>	it's one thing if you know the graph is a tree or something like that..
<ec-not-irccloud>	perhaps? like i said, i have almost no experience with this kind of thing. what's probable to improve this situation? there may be additional constraints on how the graph is constructed; and i'm kind of assuming the solution will end up involving adding hints of some sort re: p-ness
<rindolf>	ec-not-irccloud: what is a subgraph "below" a point?
<ec-not-irccloud>	(gotta stop typing p-ness.)
<ec-not-irccloud>	k, more context.
<rindolf>	ec-not-irccloud: do you mean the sub-graph of all the points that can be reached from that point?
<adsc>	ec-not-irccloud: maybe you should specify your problem in a general sense, so that we could suggest alternate non-graph based approaches, if any exist?
<ilhami>	anyone who knows mike chang?
<ec-not-irccloud>	rindolf ⑊ this graph's edges are decorated with a property (we'll call it 𝜌); generally-small subgraphs are described by starting with a particular root-node (the one we're searching for the existence of, above) and then decorating edges with 𝜌.
<ec-not-irccloud>	so, we're trying to figure out if any such a subgraph contains the ‘given node’ above.
<rindolf>	ec-not-irccloud: how many sub-graphs are there?
<ec-not-irccloud>	adsc ⑊ unlikely; this is for a programming language's object-graph.
<ec-not-irccloud>	rindolf ⑊ ‘very large’  ... not sure how else to specify.
<rindolf>	ec-not-irccloud: can you keep the nodes of each graph in a set? (a hash table, a balanced binary-search-tree, etc.)
<ec-not-irccloud>	in terms of order-of-magnitude, a program in this system is likely to generate maybe one order-of-magnitude larger a number of nodes than objects would exist in a ruby script of approximately similar to complexity.
<ec-not-irccloud>	(i.e. 100,000 nodes for a ruby program of 10,000 objects, or sth.)
<ec-not-irccloud>	a majority of nodes in such are likely to belong to a subgraph. isolated nodes ‘owned’ by no subgraph are likely rare, and if they exist, are likely to be ephemeral anyway.
<ec-not-irccloud>	rindolf ⑊ yeah, i'm thinking perhaps something like that; i've never implemented a binary tree, i'm sure i can google up some articles
<ec-not-irccloud>	rindolf ⑊ high-leve overview of your thoughts? don't need a solution from you, just the shape of one. (=
<rindolf>	ec\: there are libraries for that. see http://www.shlomifish.org/open-source/portability-libs/
<adsc>	i think rindolf's general direction of thoughts is to store the root nodes of the subgraphs in an easily searchable second datastructure
<ec\>	oh, yes, that's ... exactly what i'm asking. clearly i phrased it badly.
<ec\>	i'm looking for a data-structure to describe a mutable sub-graph, basically.
<rindolf>	ec\: well, you can keep all the nodes of each subgraph in a set of nodes, and lookup through all of them. or maybe have one big set.
<rindolf>	adsc: not the root nodes - all nodes.
<ec\>	for instance, at the moment, i have a naive data-structure called a "mask", a simple array of every node belonging to the root node, ascertained by climing the graph.
<rindolf>	ec\: is it a sorted array?
<ec\>	problem is, that means every extant 'mask' needs to be updated every time any edges are added to any node in that mask. not performant. :p
<rindolf>	ec\: ping!
<adsc>	can't you just assign an index to every node and then store in a plain array which root node in the p-ness subgraph a node belongs to?
<ec\>	sorry, hope i didn't miss any responses there
<rindolf>	ec\: is it a sorted array?
<ec\>	by index, you mean intenger-ordered-by-...something? or just a unique identifier?
<miniman10000>	lol he said p-ness
<ec\>	re-reading that
<ec\>	rindolf ⑊ which?
<adsc>	ec\: an integer can be a unique identifier if you count it internally
<ec\>	oh, the temporary mask type. not sorted in any particular way, no
<rindolf>	ec\: the mask is.
<rindolf>	ec\: ah , then what's the problem in adding elements to it?
<rindolf>	ec\: there's also the union-find data structure for sets.
<ec\>	actually jesus christ, i forgot how i wrote this. no, a mask only *stores* the root node; it actually climbs the graph every time it's asked if it contains a node, and then flattens that into an array.
<ec\>	no wonder it's pathologically slow.
<ec\>	union-find, googling
<ec\>	(if you care to subject yourself to a coffeescript nightmare, here's the mask impl: https://github.com/elliottcable/paws.js/blob/3438199/source/datagraph.coffee#l550-l580)
<ec\>	hm, if i'm reading the wikipedia article on union-find / disjoint-set properly, i don't see how it's useful. i don't need to know *which* subgraph the node in question is a part of; just a boolean of *whether* it belongs to any.
<adsc>	i think it would still help if you explained your problem in a more general way, not focusing on data structures you already have
<ec\>	hm
<ec\>	will do. let me know if i'm getting too verbose:
<rindolf>	ec\: ah, in that case you can keep one gigantic set.
<rindolf>	as a balanced binary tree, a sorted array/etc.
<ec\>	1. programming language with object-graph of homogenous objects (the nodes)
<ec\>	2. each object contains (links to) an ordered set of other objects (the edges)
<ec\>	3. the directed connection from an object to another object is decorated with an ‘ownership’ property (the ρ described above)
<ec\>	4. objects can be ‘locked’, a boolean property (nothing to do with parallelism, btw; this is ordering/concurrency stuff)
<ec\>	5. when any object is locked (boolean property), then the subgraph of other objects reachable by ‘owned’ edges is also considered locked
<ec\>	5b. in various circumstances, there might be multiple objects in such a subgraph locked (i.e.  one such subgraph may be a sub-sub-graph of another); although this should be irrelevant, since i'm only interested in quickly finding out if node n belongs to *any* locked subgraph
<adsc>	i have to go to eat, will take a look afterwards
<ec\>	adsc ⑊ <3
<rindolf>	adsc: bon appetit.
<ec\>	i think that's everything relevant.
<ec\>	`check-node-for-lock`, the operation i'm trying to optimize for here, will almost certainly be the most common by far; by comparison, `add-edge-or-node-to-locked-subgraph` will be much less common (but still relatively so); and `mark-existing-node-as-locked` will be the least common by far.
<twey>	denommus: pong
<twey>	denommus: oo-er, yes, strictness makes that tricky
<twey>	denommus: you'd need to pass around a (unit -> d) instead of a d
<twey>	they're isomorphic, so that's okay
<twey>	(well, in the haskell sense)
<jkbbwr>	morning all
<jkbbwr>	hows everyone doing
<jkbbwr>	twey: nobody wants to be passed the d
<jkbbwr>	heh
<ec\>	jkbbwr ⑊ o7
<jkbbwr>	ec\: o7?
<myrl-chan>	there's always that one person. http://puu.sh/hkqge.png
<myrl-chan>	jkbbwr: salute.
<myrl-chan>	or something like that.
<myrl-chan>	i normally use o/ for waving hands.
<ec\>	yep.
<jkbbwr>	myrl-chan: i have a friend that hotswaps keyboard layout depending on what he is doing
<ec\>	i recently realized that i'd picked up ‘o7’ and ‘fly safe’, which i've been using for yeaaaaaaars in all sorts of contexts, from eve online. :p
<jkbbwr>	ec\: ah, ggwp
<livcd>	can anyone explain a cps to me in a pseudocode ?
<jkbbwr>	livcd: continuation passing?
<livcd>	yes
<jkbbwr>	livcd: do you know javascript?
<livcd>	a bit...i have read about the cps with js but am lost what would be the use case
<livcd>	meaning that i do not understand it very well
<jkbbwr>	okay, imagine i can define a function like this `lambda x: x * 2`
<jkbbwr>	this returns x * 2, right?
<livcd>	yes
<jkbbwr>	lambda x,y: y(x*2)
<jkbbwr>	livcd: so imagine y is a callable function
<jkbbwr>	livcd: that function above returns y(x*2)
<ams>	livcd: you pass a thunk to each call, a thunk being a normal anonymous function.
<livcd>	ok
<jkbbwr>	livcd: so take the above function as fn, i can do fn(2, lambda x: x * 2)
<livcd>	uhm
<ec\>	cps is really, really simple, imho. `fn foo { a = b + c; return a }` becomes `fn foo { a = b + c; caller(a) }`.
<ec\>	that's about it.
<ec\>	forgive the ugly psuedocode, lol.
<ams>	ec\: it gets more interesting when you have more things.
<ec\>	as for the benefits: well, there's peformance consequences, which are a little out of my area-of-expertise; and there's expressivity consequences, which are more up my alley. you gain the ability to *give away* “the ability to return” when you're a cps procedure.
<livcd>	uhm
<ec\>	you can also start to implement poor-mans' coroutines, and even more exotic patterns, easily.
<ec\>	livcd ⑊ did i lose you? (=
<ams>	livcd: i suggest, you look at the wikipedia article.
<ams>	livcd: it contains some simple enough examples
<ec\>	adsc, rindol ⑊ oh, by the way: got any suggestions for a good primer or central reference on various data-structures? (i'm looking for a pretty straightforward listing of common ones, with some of the benefits and constraints of each, tabulated ... or similar. for a neophyte like myself.)
<livcd>	ams: i read this but failed to see the benefits of it :) http://matt.might.net/articles/by-example-continuation-passing-style/
<twey>	cps is just the curry–howard interpretation of the injection a → ¬¬a; what's the problem?  :þ
<livcd>	ec\: kind of :-)
<ams>	livcd: it is quite simple though, every function takes one extra argument, the thunk (also called k or continuation)
<livcd>	ams: i had to look up what "thunk" means :d
<wei2912>	twey: :p
<ams>	livcd: so, if you have a function f, that normally takes two arguments, it now takes three, the conutation
<ec\>	livcd ⑊ what languages do you write or environments do you work int?
<ams>	livcd: continuation.
<jkbbwr>	gosh the type monkeys have taken over this channel.
<ams>	livcd: thunk == countinuation == k
<livcd>	ec\: ruby / js
<ec\>	livcd ⑊ yeah, i'm writing a cps freaking programming language, and i've never heard the word ‘thunk’ in my life. ignore that if you're not into theory. :p
<wei2912>	jkbbwr: condescending phds, that is
<ec\>	livcd ⑊ okay. let's talk ruby.
<ams>	ec\: it is what steele called it.
<reynir>	ec\: in your example you need to pass in the caller as well
<ec\>	ams ⑊ and stallman eats his feet. what of it? :p
<reynir>	(sorry if someone else mentioned this already)
<livcd>	ec\: it's just that i did not know the word :-) as english is not my 1st lang
<ams>	ec\: please refrain from attacking people in this channel.
<ec\>	reynir ⑊ (my psuedocode didn't declare arguments; b nor c were enumerated as well)
<ec\>	ams ⑊ that's an attack? i didn't say anything personal about you ...
<ams>	ec\: completely irrelevant.
<reynir>	ec\: oh, i assumed foo was the argument :p
<ec\>	ams ⑊ unless you meant to direct that at jkbbwr, who's insulting fans of type theory; or wei2912, who doesn't like phds. ;)
<ams>	ec\: care to stop?
<ec\>	...
<ec\>	reynir ⑊ the perils of psuedocode!
<wei2912>	ec\: don't make generalizations
<ams>	livcd: do you understand so far?
<livcd>	btw thanks everyone for a help and time
<livcd>	ams: more than before !
<jkbbwr>	ec\: i wasn't insulting fans of type theory, its a running joke i have with pyon
<wei2912>	ec\: i'm just generalizing type monkeys to condescending phds
<wei2912>	ec\: ironically
<ams>	livcd: f(x,y) = x + y
<ec\>	livcd ⑊ so, in ruby; you're familiar with block-arguments, yes? `foo {|a| a }` and such.
<livcd>	ec\: yes
<ams>	livcd: in cps, f(x,y,k) = k(x+y)
<ec\>	jkbbwr ⑊ oh, i don't care; i just didn't like being singled out by ams for something i didn't do. anyway, past time to talk cps and not pick nits over imagined insults.
<livcd>	ams: this i get :-)
<twey>	wei2912, jkbbwr: i have no phd. ☹
<ec\>	livcd ⑊ imagine if you could never `return` from a function; and instead, the caller *had* to pass a block, which your result would be passed to
<ams>	ec\: you are signled out because you are attacking people, cut it.
<ec\>	...
<wei2912>	lmao
<wei2912>	twey: how is that possible
<ec\>	so, if every single function call became, instead of `bar = do_something(foo)`,
<twey>	wei2912: i'm bad at life :þ
<ec\>	`do_something(foo) {|bar| ... }`
<ec\>	in such a case, as mentioned above, this gives do_something the ability to *pass around* that ‘ability to produce a result’, and takes the stack (series-of-returns) out of consideration in terms of how `bar` gets used.
<ec\>	make sense at all?
<ams>	you are confused.
<ams>	it is better to ignore "why" you pass the thunk around.
<ams>	cps is better to compare to ssa, seeing that ssa is a subset of cps>
<ec\>	ams ⑊ source, or rationale?
<ams>	ec\: ai memo 349
<livcd>	now i am confused :p
<ams>	livcd: about?
<jkbbwr>	livcd: basically, you don't return anything, you insted call a function passed to you
<livcd>	ams: about the ssa not the things that has been said before
<livcd>	jkbbwr: what would be the use case for this ..basically when i should use this
<livcd>	i am sorry for being dumb guys :s
<ams>	livcd: what are you confused abuot?
<ams>	livcd: the use case is for compilers to optimize code
<jkbbwr>	livcd: its also handy for updating ui from a running thread
<livcd>	ams: aha ...so in javascript for example does it have any use case ?
<jkbbwr>	livcd: making web requests async style.
<ams>	livcd: i don't know javascript.
<livcd>	ok ty
<jkbbwr>	livcd: you fire off an async request in the background and give it a function to call when it is done
<livcd>	looks like i need to read read and practice more and more
<ams>	livcd: but as jkbbwr mentions, since you can pass your closure/thunk/k around, you can make cheap async stuff.
<ams>	you don't needs cps for doing this, it is qiute simple to do similar things other means
<livcd>	okay
<livcd>	thanks again
<ams>	actually, here is a nice note from steele/sussman: "that is, in this continuation-passing programming style, a function always "returns" its result by "sending" it to another function. this is the key idea."
<adsc>	ec\: the way you describe it, your edges aren't bidirectional, is that true?
<amigojapan>	hwy guys, i uploaded an mp3 to github,  but it does not seem to want to play for me…     can someone try playing it please? i tried in safari and chrome https://raw.githubusercontent.com/amigojapan/ejspeak/master/momotaro_example.mp3
<adsc>	it says the file is corrupt
<adsc>	maybe a wrong header?
<ams>	amigojapan: contact github?
<amigojapan>	ok adsc
<ec\>	amigojapan ⑊ #github, fyi
<ec\>	(=
<twey>	plays fine for me in mpv
<amigojapan>	ok ec\
<adsc>	amigojapan: the header seems to be good
<amigojapan>	twey: ok, so the file uploaded right, it is just a browser problem, then i guess
<adsc>	yeah
<amigojapan>	twey: by the way, this is my new project that helps espeak speak japanese, which it could not do up to now
<ec\>	amigojapan ⑊ i can't load it either.
<amigojapan>	ec\: it seems to be ok for twey, so it is probably just not good for browsers or something….
<ec\>	no, the headers look good to me, too. just saying that my browser won't load it either.
<amigojapan>	ok
<ec\>	i'd try downloading it and playing it locally for you, but, y'know, strange files in strange irc channels ;)
<ec\>	try wget'ing it on another machine and make sure it plays outside of the browser?
<ec\>	or try loading it locally in your browser from the location you uploaded it from, and see if it plays in the browser when loaded via file:?
<amigojapan>	ok ec\
<ec\>	adsc ⑊ they're directed / unidirectional right now, yes.
<twey>	the headers look sane to me
<ec\>	although to climb the graph in reverse to check membership as i'm trying to do, it might end up becoming bi-directional.
<ec\>	adsc ⑊ why? does that help me somehow? (=
<twey>	don't know why the browsers aren't playing it.  but i don't know why you'd want to play an mp3 in your browser anyway.  :þ
<amigojapan>	yeah ec\    it plays thru file:///
<ec\>	amigojapan ⑊ curious, i'm with twey; what're you trying to do here?
<amigojapan>	twey: i just want it as an example of the output of my speach synthesis program, for people that dont want to dowload before seeing
<amigojapan>	^ ec\
<ec\>	it doesn't seem to be relevant to content loaded through raw.*, but, camo and github's cache-control might come into play if you're trying to load it on pages or something ....
<adsc>	ec\: and the p property can be the same for a whole path in a subtree? e.g. root -> child1 has the same p as child1 -> child2?
<ams>	mooo
<ec\>	although yeah no that wouldn't affect loading it directly as we've been trying to do for you
<ec\>	adsc ⑊ er, re-word that for me; didn't click
<amigojapan>	maybe i will just upload it to youtube or something
<ec\>	(also, brb real quick)
<adsc>	i think whether your system can play the file depends on the codecs that you have installed, because the browsers probably don't have built-in codecs
<adsc>	ec\: you wrote the edges are annotated with a property p (onwership))
<adsc>	ec\: i am asking if the value of this property is the same for a path in the subtree
<adsc>	subgraph
<wlievens>	what's the correct name for ascii + other characters with the high bit set, including the degree sign (0xb0) ?
<frobs>	amigojapan: uhmmm... maybe some library issue, in linux machines you need download some gstreamer libraries to play files...if you are in a linux machine or the server is a linux maybe haven't this complements or maybe is a browser configuration https://support.mozilla.org/es/questions/1025051
<wlievens>	i need to decode a string which i know is 8-bit per character, but it includes the degree sign so i need more than official 7bit ascii - is there an encodign for that?
<rindolf>	wlievens: iso-8859-1?
<amigojapan>	thanks forgot , i am on mac
<adsc>	ec\: e.g. if child2 is an indirect child of root, if it has the same p on the link as root has to the ancestor of child2
<wlievens>	rindolf: will try
<wlievens>	rindolf: works, thanks!
<rindolf>	wlievens: you're welcome .
<rindolf>	amigojapan: hi, sup?
<frobs>	amigojapan: you try to disable blockers and browser plugins?
<adsc>	ec\: in general, it's a bit misleading to use tree terminology in a graph, but you started it :p
<amigojapan>	hi rindolf , trying to get an audiofile online, it seems just uploading an mp3 to github is not good
<rindolf>	amigojapan: ah.
<amigojapan>	forgot: nevermind, i will upload it to youtube
<rindolf>	amigojapan: why not?
<amigojapan>	rindolf: people are having touble playing back hte mp3 file on their browsers
<rindolf>	amigojapan: ah.
<rindolf>	amigojapan: you can also try providing an .ogg version.
<adsc>	that's because naked files use system codecs to play while youtube has a built in player
<amigojapan>	rindolf: i will just make it into a video and upload it onto youtube, problem solved
<rindolf>	amigojapan: ok.
<adsc>	there are services for audio only files like youtube, probably
<adsc>	no need to make it into a video
<adsc>	soundcloud maybe?
<jkbbwr>	gosh i feel bad to be british right now :(
<icetooth>	mp4/aac or that new ogg one are the modern(tm) ways of sharing audio in web browsers
<ec\>	adsc ⑊ sorry; my ssh key bunged up when i shut down. i'm finally back around now. :p
<adsc>	ec\: i'm just trying to understand the p property
<twey>	jkbbwr: don't we all
<ec\>	amigojapan ⑊ maybe use soundcloud
<adsc>	ec\: let's say we have node1 -> node2 -> node3...is the p value the same for both links?
<amigojapan>	ec\: i alsmost got the movie ready to upload to youtube
<ec\>	ah, sorry that's what was confusing me; i'd been typing rho, and wasn't reading your p as rho, and i thought you were naming the ‘locked’ state ‘p’
<ec\>	now we're on the same page. that's my bad for being weird and unicodey.
<ec\>	no, p is a property unique to each link. if we draw p-links as => and non-p links as ->,
<ec\>	then node1 => node2 -> node3 describes a sub-graph, containing [node1, node2], that can be locked by locking [node1].
<ec\>	does that answer your question?
<fiki>	hey guys i'm in a dilema, i have a choice between business informatics and software engineering for my master studies and i am more interested in software engineering, but considering i have done business informatics at an economics university for both of these at the technical university i would have to do quite a lot of additional courses, but for the software engineering one 2 times a much.
<adsc>	ec\: so a subgraph is always only 1 level deep?
<jkbbwr>	twey: are you pro or anti fptp
<ams>	fiki: do what you love.
<ec\>	nah, that was just an example.
<fiki>	now my question is can i acquire that additional knowledge that i would get in software engineering on my own, or is it really something that can only effectively be thaught at university level
<ec\>	node1 => node2 => node3 → node4
<ec\>	you know what, lemme draw it. :p
<adsc>	fiki: you can get it on your own, but if possible, you should always study what interests you
<fiki>	ams well yes, but there are many reasons why it would be problematic for me to do software engineering, one is that i could not get a job while doing the additional courses, and with business infromatics i can, because i'm a foreigner etc.
<adsc>	ec\: no, it's okay, i get it now
<adsc>	ec\: the p value determines which nodes belong together for locking
<fiki>	the main difference is i will miss out on the low level programming stuff
<jeaye>	fiki: it's certainly possible to get into software engineering without attending any university, let alone having a masters in something else.
<ec\>	adsc ⑊ mmhmm!
<ec\>	and a couple other purposes
<fiki>	jeaye yes but some things seem to be better handeled at uni level, for instance mathematics?
<jeaye>	fiki: you'll only miss out on what you choose not to study. _everything_ you'll learn in any university, about compsci, is available online for free.
<ec\>	basically, p-state allows a homogenous graph to describe complex data-structures, without knowledge of them at the level of the graph itself.
<adsc>	yeah, but that's also the problem isn't it?
<fiki>	the it's setteled i will do business informatics and do the extra work on my own!
<ec\>	i.e. a ‘dog’ might be constructed of several levels of nodes, with a name, and an age.
<adsc>	ec\: because that knowledge is not encoded in your data structure, it's hard to use it efficiently
<adsc>	fiki: i hope you won't regret that decision
<ec\>	rephrase?
<twey>	jkbbwr: i don't think there are many people who are *for* it
<ec\>	fiki ⑊ structure is good. leading is also good.
<fiki>	adsc well at least half of the courses are exactly the same
<fiki>	ec\ i don#t follow what you mean?
<ec\>	for instance, i tried to work through the sicp on my own for years; but didn't make much progress until i got involved in a group/class doing it in a structured manner together, with a leader/mentor running it.
<adsc>	fiki: i am of the firm opinion that you should try with great effort to study what interests you and arrange the rest of your life around it
<ec\>	that's not to say that will be your experience; but it's definitely a net benefit to have structure and leading.
<adsc>	fiki: the time you have for studying is limited, so make the most of it, you can fix the rest of your life later
<ec\>	the question isn't really if structure is *good* ... it's if that structure is worth the n-hundred-dollars (or even n-thousand-dollars!) that each of those classes will cost you in a degree program :p
<adsc>	ec\: universities in non-us countries usually aren't that costly
<ec\>	so: do it on your own, which *might* be slightly more difficult (or not, depending on your personality, and how important structure is to you), while saving money ... or spend the time and money to gain that structure.
<jkbbwr>	twey: im writing an av simulator at the moment
<jkbbwr>	twey: gonna re-run the election using av
<ec\>	adsc ⑊ ah, i think i missed part of the conversation. thought he said he was a foreigner attending in us.
<adsc>	maybe i missed a part, then
<fiki>	ec\ the studies themselves are free, this is europe :d
<ec\>	adsc ⑊ re: knowledge not being encoded; that's entirely the purpose of this p-annotation; so you're saying the problems i'm trying to solve now demonstrate that this is an ineffective approach, if i read you correctly?
<ec\>	do you have additional thoughts/opinions?
<adsc>	ec\: would it help you, if upon insertion, you also stored the first node in each p path for a new node?
<adsc>	ec\: no, it's not per se inefficient, just if you need to search/sort/etc. on such detached state, it's going to be slow
<adsc>	ec\: but you can improve that with helper structures
<ec\>	if i read that correctly ... you mean, basically, caching the subgraph on the root node? i think?
<ec\>	no, that doesn't translate. i lost you.
<ec\>	:x
<fiki>	adsc, ec\ i'm torn once again :d
<adsc>	fiki: you should be
<ec\>	fiki ⑊ if they're free, i don't see what you have to lose by enrolling in guided-studies on the subjects you care about. (=
<ec\>	unless i'm missing another trade-off (worrying about the speed at which you'd go through the material yourself, as opposed to time wasted if the group goes slower, i suppose?)
<adsc>	ec\: okay, let's continue the questions....if you lock a node, do you lock any node, or always a node at the beginning of a p path with a certain value?
<ec\>	(if that's the case ... find a harder/better uni? maybe?)
<ams>	fiki: you can always find a job.
<ec\>	adsc ⑊ any node. (in a dog, i could lock the whole dog, which locks the name and thus the first and last names ... or i could just lock name, if i'm not going to touch the rest of dog.)
<ams>	jobs are dime a dozen
<fiki>	ams well not if you are a foreigner because of the law :p
<fiki>	ams my main issue is you can't get a job while doing bachelors, and if i did all the extra courses for se i would be counted as a bachelor
<ams>	move to a sane country
<fiki>	ams heh, not many options if you come from my country
<ec\>	fiki ⑊ ah, i see. so, you're optimizing for minimum-time-spent-legally-as-a-uni-student.
<aidanh>	seems strange that undergraduates would be forbidden from working..
<ams>	fiki: bullshit.
<ec\>	yeah, i think the benefit of structure and leadership in that learning is not enough to compramise that, if i understand your situation correctly. learn the software-eng stuff on the side, later, on your own; go for the business program.
<fiki>	ec\ actually it's not a problem if you are already a master student, though i  could possibly start a masters for business informatics and do the se bachelor stuff too, hmm
<ec\>	hm. any chance anybody in here undertook a programming program at a university in chicago, or knows somebody who did?
<ec\>	(i've been desiring to go back to school; but i don't know anything about the local schools, and i'm not sure where to start, researching which ones might have the best engineering pedigree.)
<ams>	people spend to much time on "what to study" than just studying.
<adsc>	ec\: well, it seems to me if "check node for lock" is the one that has to be fast, it would be easiest to just traverse the whole node path on locking and lock all subsequent nodes as well
<fiki>	ams nah i'm really speeding through my current uni
<ec\>	adsc ⑊ what about the path changing, while it's locked? (i.e. changes to the p-state of one of the edges within the subgraph; or addition of new nodes with new p-edges)
<ec\>	not disagreeing with you, i think i agree, as that's kind of the thought i've arrived at
<adsc>	ec\: yeah, that's gonna be problematic
<ec\>	i mean, no matter what, i'm going to have to run some benchmarks; and also derive some actual relative-commonality data for each of those three operations
<jkbbwr>	ams: only boring people get bored
<ams>	yes.
<ams>	i am boring ..
<adsc>	it's true though
<ec\>	i have an idea of how common each will be within orders of magnitude, but i have other problems preventing me from knowing precise numbers for usual program-shapes right now /=
<adsc>	how can you be bored in this age of entertainment
<ams>	dunno
<fiki>	thank you guys you actually gave me a great idea, which for some reason never came to me before
<ec\>	fiki ⑊ what's that? :d
<adsc>	you could read up about whale sharks, fascinating animals
<ec\>	“i'm bored.” “go read about whale sharks!”
<adsc>	yeah
<ec\>	where's the fav button on irc, plz hlp
<fiki>	ec\ i'll just do business informatics for my mastes and do the difference for another one in software engineering that solves the legal status and my fear of missing out :d, however it will result in quite a few additional courses
<adsc>	you can do it, fiki
<ec\>	fiki ⑊ where do you live? just curious.
<fiki>	ec\ austria, originally from serbia
<fiki>	adsc it's not a question of if, more a question of when :d
<adsc>	now is always the best time
<fiki>	i mean i've already done the hardest stuff i consider and that would definetely be math
<fiki>	*definitely
<jkbbwr>	ams: if you are bored, you should learn golang
<mike802>	are you taunting people?
<ec\>	whale sharks, go, any useless information is a fun pastime when you're bored!
<mike802>	what is wrong with you
<adsc>	most information is useless in the sense you imply
<ams>	jkbbwr: .. no.
<adsc>	hehe
<jkbbwr>	ams: :3
<amigojapan>	vsauce has a good video about “being bored”   why are so against being bored.. it is just a little unconforable...
<ec\>	hrm
<adsc>	it is an old fashoned state
<adsc>	obsolete even
<adsc>	with an internet connection at hands, there is no reason to be ever bored again
<rumpledelf>	oh, sometimes even the internet gets boring
<ec\>	i guess i just don't know data-structures very well. i'm just ... believing there'd be some sort of cache-datastructure other than a flat array, in which i could globally store known-locked nodes.
<mike802>	did you just say gibbersish
<amigojapan>	adsc: the internet gets boring, and it becomes time to go to the beach
<adsc>	the beach also has internet
<ec\>	hm. a quick ‘no’ response is more useful than a quick ‘yes’ one; i wonder if i could invert the structure somehow ... cache known-un-owned nodes? but that'd be really slow to update all the freakin' time
<ec\>	er, known-unlocked*
<jkbbwr>	ec\: are locked nodes unique
<amigojapan>	adsc: you shouldnt be using hte internet at the beach, you should be swimming tanning and what not
<adsc>	no, i hate the sun
<adsc>	it is burning my eyes
<adsc>	and water is not good for me
<adsc>	i don't think i am waterproof
<amigojapan>	adsc: ok, go to a dance club?
<ec\>	i just came back from programming for a week in hawaii, and then two weeks in alaska
<ec\>	can verify that beach-programming is indeed sandy
<amigojapan>	that is not really my thing though
<ec\>	:p
<adsc>	amigojapan: i don't understand rhythm
<jkbbwr>	ec\: are locked nodes unique?
<ec\>	jkbbwr ⑊ (battery dying, i'll be briefly afk in a second when it does)
<mike802>	yeah, here seems like a good place to hustle
<ec\>	jkbbwr ⑊ what do you mean by unique? i think i might have answered that above, depending on how you mean it
<adsc>	amigojapan: i am also too old to be welcome at dance clubs
<amigojapan>	adsc: i dont really like night clubs either….    maybe if i could have a good night dancing wiht my wife, but i dont want everyone wanting to dance with her too
<ams>	jkbbwr: i have no intention of learning a obnsolete language.
<amigojapan>	adsc: how old are you? i am 37
<jkbbwr>	ams: i was joking, notice the /ducks
<adsc>	amigojapan: i guess you mean years?
<jkbbwr>	ec\: could you hash a locked node, and would two locked nodes share the same hash
<amigojapan>	yeah adsc
<adsc>	too many
<ec\>	hash it how? each node already has a unique textual id, but i'm not sure how that's relevant (context from waaaaay earlier: i'm really bad at computer science. i barely even know what a hash is. :p )
<amigojapan>	adsc: anyhow,  being always on the internet is boring for me
<ec\>	but the nodes, as objects, *are* mutable. not sure if relevant.
<adsc>	amigojapan: but the internet is just a network that connects everything
<amigojapan>	adsc: but as vsauce puts it,   bordome is just a slight disconfort
<jkbbwr>	ec\: why not a set or bloom filter
<ec\>	jkbbwr ⑊ will google latter.
<jkbbwr>	ec\: is memory a problem?
<amigojapan>	adsc: when there is teleporting thru the internet, i will agree with you
<adsc>	you humans and your physicality
<ec\>	let's say no. i'd rather be operation-efficient than memory-efficient.
<jkbbwr>	ec\: use a set, store locked node ids in it, if a node is not in the set then its unlocked
<jkbbwr>	sets are more efficient for this than lists.
<ams>	jkbbwr: i wasn't :-
<ams>	)
<amigojapan>	adsc: i am ok with near real vr too…
<ec\>	yeah, that's basically what adsc and i arrived at, i think.
<ams>	:-)
<jkbbwr>	ams: yea you need to take a joke :)
<ec\>	well, hm, nope. ugh.
<ams>	jkbbwr: i'm boring .. remeber.
<amigojapan>	now youtube is taking forever processing my video :(
<jkbbwr>	amigojapan: takes ~30 minutes
<amigojapan>	jkbbwr: usually it works right away for me…  not now it seems
<jkbbwr>	amigojapan: cache miss.
<amigojapan>	ok
<ec\>	amigojapan ⑊ i've been thinking about what you're doing for a few minutes, and i think i've arrived at a good solution for you, that's a little less ... youtube-y / external-website-loading-y
<amigojapan>	what is it ec\
<ec\>	amigojapan ⑊ how about a github pages page for the project (so, a branch), with a soundcloud widget? that solves peoples' browsers and codecs and crap.
<ec\>	and you can just link the project's github page from the readme.
<ec\>	(at least, this is probably how i'd solve it if i had an audio/video-oriented project.)
<amigojapan>	ec\: what would be the difference from the youtube video?
<ec\>	maybe i just have something against youtube. personally, if i saw a video link in a readme, i'd never bother clicking it; i *feel* like most people would do the same? i could be wrong. (=
<ec\>	like, your original solution, a raw.githubusercontent link, i'd click, if i needed to use your project; but i'd never bother to load an entire youtube page? ugh maybe i'm just weird.
<amigojapan>	ec\: apparently i can embed the video using markdown… all you need ot do is click it
<ec\>	amigojapan ⑊ nope, github-flavoured-markdown doesn't support embeds of any type except static images.
<amigojapan>	i see
<ec\>	(and even static images are proxied through camo, which means neat tricks with dynamic server-side rendering or logging won't work right, either, without special effort)
<ec\>	(went through some of this with shields.io)
<amigojapan>	ec\: the embed i saw on this, is a static image https://github.com/adam-p/markdown-here/wiki/markdown-cheatsheet#videos
<ec\>	batterded. hearts all. (i'll be back in a few, jkbbwr)
<ec\>	amigojapan ⑊ oh, i mis-understood you
<ec\>	not a bad idea. would probably be prettier than an opaque youtu.be/deadb33f link.
<amigojapan>	ec\: also, i could deffenetly embed a youtube video on githubpages
<amigojapan>	i have done that already in the past
<mike802>	well, that was helpful
<jkbbwr>	ec\: so what are you building
<jkbbwr>	ec\: and what language
<amigojapan>	ec\: ok, finallyt he video finished processing, this is what i ended up with https://github.com/amigojapan/ejspeak
<jkbbwr>	amigojapan: christ jp does not flow well with speach synth
<jkbbwr>	amigojapan: but good job
<amigojapan>	ty jkbbwr
<amigojapan>	jkbbwr: i still have to improve it a little, it is not a finished product yet
<jkbbwr>	amigojapan: working with a language like jp, you are brave.
<jkbbwr>	ha
<amigojapan>	jkbbwr: but the espeak community had been trying to implement japanese on espeak for a long time, bu they did not know hwo to speperate one word form another since japanese does not use spaces
<jkbbwr>	yea
<jkbbwr>	well over my head
<delphi_gurl>	interesting though.
<planckwalk>	speech doesn't usually really have spaces either
<amigojapan>	jkbbwr: i have lived in japan for 13 years, so i better know alittle about the language :)
<twey>	there are fairly standard algorithms for separating japanese phrases into words, though, right?
<twey>	google does it fairly well, for example
<amigojapan>	planckwalk: ok, i dont know why, but that is what they seemed to be saying on the espeak mailing list before i made this project
<twey>	jkbbwr: espeech's speech synthesis is pretty low-quality
<amigojapan>	twey: i used mecab
<twey>	jkbbwr: japanese is actually great for speech synthesis in the general case
<amigojapan>	espeak*
<twey>	sorry, yes
<suvek>	hi i want to learn web development..do u think javascript is good for my first language?
<jkbbwr>	im not a linguist
<twey>	mecab looks good
<jkbbwr>	suvek: no. learn python or ruby.
<amigojapan>	suvek: is it your first language ever?
<amigojapan>	suvek: i recommend you take my programming 101 course before python or ruby http://amigojapan.github.io/amigojapan-programming-101-course/amigojapanprogramming101.html
<ec\>	hi, all (=
<ams>	any language is good as a first language.
<amigojapan>	ec\: that also looks like an onsen(hot springs) symbol ♨️
<twey>	ams: but malbolge is best, of course.
<jkbbwr>	ams: disagree.
<ams>	i know you do.
<amigojapan>	twey: espeak was the only open source speech synth that i found that supported ipa input
<amigojapan>	ipa phonems*
<twey>	amigojapan: yeah, absolutely
<twey>	espeak is the best-designed of them; it just unfortunately has about the worst output
<twey>	very frustrating
<amigojapan>	twey: also, i would not have done this if i had found an open source japanese speech synth out there
<suvek>	amigojapan, yes first ever
<amigojapan>	suvek: then i strongly recommend you take my free course before you go into real programming
<python111>	why?
<amigojapan>	suvek: feel free to email me any questions you may have
<amigojapan>	python111: becuase it covers the basics of programming
<python111>	so does any programming language
<python111>	any better book
<amigojapan>	python111: but not as spoon fed as my course
<ec\>	amigojapan ⑊ what looks like the hot-springs symbol?
<ec\>	amigojapan ⑊ holy shit, there's a speech-synth that supports ipa!?
<ec\>	i want this in my life. link?
<amigojapan>	ec\: (=   looks like the japanese hot spring symbol
<ec\>	amigojapan ⑊ the smiley-face:  (=  ?
<hotcoder>	if you code java put yo hands up
<hotcoder>	if you code c+ put yo hands up
<ec\>	weird thought. i'd never considered that. to me, i guess it'd be the reverse, since the smiley face is far more common in my country
<hotcoder>	if you code python put yo hands up
<amigojapan>	ec\: http://espeak.sourceforge.net   you need to use special phonems, but it does support  pronouncing eveyrthing that ipa does
<hotcoder>	if you code software put yo hands up
<hotcoder>	yo yo
<ec\>	jkbbwr ⑊ nothing you know of (=
<twey>	amigojapan: not quite everything
<hotcoder>	you know how i go, i got an infinite amount of hoes
<ec\>	jkbbwr ⑊ a language i've been designing for a few years (okay, a lot of years). prospectus: fully-asynchronous language, realized through explicit (instead of implicit) cps.
<amigojapan>	twey: what does it not support?
<hotcoder>	i program the fuck out of some java code
<hotcoder>	and when i need web dev i use node
<hotcoder>	just saying
<hotcoder>	cause you knoww people be paying dough, i aint playin
<ec\>	additionally, big on the homoiconicity / dynamic-syntax (trying to go beyond the lisps in that direction), and trying to enable distributed programming (i.e. shared object-space, dynamically allocated across implementations)
<ec\>	sorry, that's a real quick summary, a bit rushed over here suddenly
<ams>	beyond lisps?
<twey>	it can't distinguish [ɜ] vs. [ɜ˞], for example — it realizes [ɜ] as either [ə] or [ɜ˞] depending on language setting
<hotcoder>	and amigojapan be lookin for support cause he need it
<ec\>	amigojapan ⑊ special phonemes
<amigojapan>	i see twey ,,  sorry, i did not know that
<hotcoder>	fuck apple you think you know how to dev
<hotcoder>	when all the real devs fuck around on android shell
<amigojapan>	ec\: it is trivial to make an ipa to phonem converted
<hotcoder>	yall like my rap?
<adsc>	no
<ec\>	well, isn't ipa already phoenemes? confused
<adsc>	i hate rap
<hotcoder>	nigga fuck yall
<hotcoder>	i was freestylin
<hotcoder>	my mixtape tho
<hotcoder>	its on fire
<amigojapan>	hotcoder: offtopic my friend
<ams>	jeaye: ^^
<hotcoder>	ok ok
<ec\>	i'm just stacking up the ignores in this channel, wow.
<hotcoder>	i'll stop
<hotcoder>	i promise
<hotcoder>	!
<ec\>	nearly as bad as ##c
<adsc>	you know you can write more than three words in a message?
<ams>	hotcoder: you clearly don't.  this isn't the first time.
<ec\>	quoth a friend of mine,
<ec\>	<prophile> that's because ##c is so full of trolls you could give it a dusting of snow and call it norway.
<ec\>	:p
<adsc>	:)
<adsc>	aren't trolls more common in finland, though?
<ams>	norway doesn't exist.
<amigojapan>	twey: well, at least it seems to have everything i need to make it speak japanese…
<adsc>	ams: so? that doesn't mean it can't have snow and trolls
<amigojapan>	twey: but japanese is probably an easy language
<alfatau>	hello all. i'm working on a data structure which substantially is a tree, but where each level is made of a specific node type. is there a conventional/standard name for such a structure?
<ams>	a tree.
<alfatau>	the need is to search for theory about it. thank you in advance.
<twey>	amigojapan: yeah.  can it do pitch accent?
<alfatau>	ams: ok. in a standard tree there's no constraint on relations between child and parent nodes.
<amigojapan>	twey: i think it supports regular accents like in spanish,  but i have not played around with that yet
<hotcoder>	o
<twey>	alfatau: of a finite set of node types?
<adsc>	alfatau: correct...a node can have any number of childrens in a basic tree
<ams>	alfatau: abstract syntax tre?
<amigojapan>	ec\: are you the ecerree guy?
<alfatau>	twey: substantially yes. my data structure can have at least n node types and this implies at least n levels. each node on the k-th level must be of the k-th type.
<ec\>	jkbbwr ⑊ this client doesn't really handle privmsgs well
<jkbbwr>	ec\: what client you using?
<ec\>	jkbbwr ⑊ http://slackin.paws.mu, if you're not hugely anti-slack?
<adsc>	alfatau: so it's some kind of hierarchy?
<ec\>	jkbbwr ⑊ i booted up an ancient server and corresponding irssi instance to talk in here about data-structures
<alfatau>	adsc: exact. a kind of constrainted hierarcy.
<jkbbwr>	e	update time
<ec\>	because, at the substantial risk of getting myself banned for cussing out a channel's ops but jesus i have to say something,
<ec\>	the assholes in here seriously ban all web-clients, and give zero fucking shits if that inconveniences someone.
<ec\>	ಠ_ಠ
<amigojapan>	ec\: i thought you may be the guy that made http://ecere.com
<jkbbwr>	ec\: love slack.
<ec\>	jkbbwr ⑊ i can see your messages easily, it's just difficul to switch to that apane to reply (=
<jkbbwr>	ec\: im in slack
<ec\>	amigojapan ⑊ hahaha, no
<ec\>	amigojapan ⑊ although i'm mildly familiar.
<amigojapan>	ah ok ec\ , he goes by ec sometimes
<ec\>	amigojapan ⑊ not without getting ghosted by nickserv, he doesn't. ;)
<ec\>	but yeah i've talked to him in the past. in this room, i believe, actually.
<amigojapan>	ah ok
<ec\>	(before getting banned for my choice of client, and giving up on it. to beat a dead horse ...)
<ec\>	man, what was his name. i can't recall it
<amigojapan>	ec\: i did not know his name
<adsc>	alfatau: i'm not sure if such a structure has any special properties, at least none are known to me
<adsc>	alfatau: maybe look at the standard tree algorithms relating to depth
<adsc>	alfatau: i guess your structure could be a regular tree and a map that maps node depth to node type
<alfatau>	adsc: ok thanks. it could be useful. the real problem now is i need to implement functions like "getsiblings(node, parent)" where parent can be of different types and this means to give a subset of all nodes in the same level of that node, in relationship with the input parent.
<amigojapan>	alfatau: what do you mean by “level”?
<alfatau>	adsc: so i was looking to some theory for implementing these type of function efficiently, eventually using std libs.
<wei2912>	does anyone know of a good book that talks about data structures in functional programming?
<alfatau>	amigojapan: level? from wikipedia: "the level of a node is defined by 1 + the number of connections between the node and the root."
<delphi_gurl>	you can try open data structures.
<adsc>	it's the same as depth
<amigojapan>	ah ok alfatau
<ams>	release time!
<alfatau>	amigojapan: np
<ams>	jeaye: merci
<adsc>	alfatau: i'm not sure what you mean, but getsiblings is pretty easy...go to the nodes parent all return all children except the one you came from
<adsc>	holy crap my spelling
<adsc>	stupid radicals are penetrating my skin again
<adsc>	why can't i have a lead shell
<wei2912>	adsc: better dead than red skin, i suppose
<alfatau>	adsc: yes, i know. this is true if the parent is the one at level n-1. in my case i could need to get all nodes at the same level which are in relationship with a parent on the level n-2 or n-3 until root.
<alfatau>	adsc: this seems missing in std libs, so before implementing myself i wanted to search if there was a "name" or theory where to find an implementation of that same thing.
<denommus`>	hi
<jkbbwr>	denommus`: hey
<denommus`>	what's up?
<jkbbwr>	denommus`: the sky
<ec\>	adsc ⑊ i think your problem is that it's a generator at all, instead of a table.
<ec\>	adsc ⑊ ;)
<mike802>	who are you talking to random
<audioburn>	gertherb dert kerm
<adsc>	alfatau: are you sure you have a tree? your statements don't make a lot of sense in the context of a tree
<adsc>	jkbbwr: isn't the sky in all directions?
<adsc>	jkbbwr: which doesn't make your statement wrong, of course
<ams>	yay! inetutils 1.9.3 is out.
<protist>	ams: hey :)
<alfatau>	adsc: i know. in fact mine is not a standard data structure (afaik). i was looking for some help to give to my structure a name or a well-known data theory context.
<ams>	protist: hi
<protist>	ams: can you take a look at this and let me know if there is a smarter way to do my `unquoted-symbols' and `subst-unquoted-symbol'? https://github.com/gordiannaught/function-literal
<protist>	ams: right now i have those helper functions with custom behavior for sbcl and clisp
<ams>	protist: not portbale.
<protist>	ams: is there a portable way to do this?
<ams>	protist: what are you trying to do?
<protist>	ams: replace all instances of a variables with a given form with gensyms that indicate their previous name
<protist>	ams: i have to do the gensym replacement for my function literals to nest properly
<mike802>	what would you use that for?
<protist>	mike802: short functions... like (mapcar #f(expt x 2) numbers)
<protist>	mike802: i mean #f(expt % 2)
<ams>	protist: mm.. what do you mean instances?
<protist>	mike802: they have these function literals in clojure
<protist>	ams: in the reame there is an example of an expansion
<protist>	ams: readme*
<ams>	yes, now you explain it again.
<ams>	the examples are aweful.
<protist>	ams: oh sorry
<ams>	clojure is ugly like fuck.
<protist>	ams: this is one thing i thought was cool from it
<protist>	ams: was forced to use it in a class
<jkbbwr>	adsc: technically the sky is not to my immediate left or right, windows and walls are
<protist>	ams: the idea is sometimes you just use lambdas for currying or other tiny things...in those instances it may be clearer to have shorter notation
<protist>	ams: or if you are just lazy
<protist>	ams: so instead of writing out a lambda....you write one of these things....and %,%2,%3,etc are assumed to be arguments of the function
<protist>	ams: no need for an argument list then
<protist>	ams: so i have to walk through and find things that look like variables for the read macro to determine how many arguments i have
<protist>	ams: i don't want variables from other function literals inside the current one to affect my argument count...so they must be changed...i do this by changing them to gensyms at readtime
<ams>	m mmm.
<ams>	thinking
<protist>	ams: ok :)
<protist>	ams: it is a fun recursive brain teaser...take your time ;)
<ams>	why recursive?
<protist>	ams: clojure just doesn't let them nest...i don't like being told i can't
<ams>	basically, you want a reader macro, that expands to lambda.
<ams>	and you want something to replace %'s with arguments.
<ams>	so likle ...
<ams>	http://www.chadbraunduin.com/2011/07/common-lisp-reader-macros.html
<ams>	nothing recursive.
<ams>	i was even to lazy to write it .. that is how stupid it is.
<protist>	ams: if i were to not use gensyms then it works for simple examples like #f(+ % 3) which becomes (lambda (%) (+ % 3))...but it will fail for nested ones like #f(#f(* % %2) % 2)...because the outer #f would think it has two arguments by seeing the symbols of the inner #f
<ams>	no it wouldn't.
<ams>	no clue what you doing ..
<ams>	sorry, couldn't bother reading your code :)
<protist>	ams: that is fine....looking at the thing you linked
<wei2912>	lol
<protist>	ams: asshole ;)
<ams>	yes.
<ams>	i know.
<protist>	ams: his fails on nesting: ([[* %1 %2] % 2] 3)
<protist>	ams: tested it
<protist>	ams: eval/apply: too few arguments (1 instead of at least 2) given to :lambda
<protist>	ams: it things the inner variables belong to the outer lambda ;)
<protist>	ams: thinks*
<ams>	you really are telling me that i need to futz my repl?
<protist>	ams: futz?
<protist>	ams: and was that article by you?
<ams>	no
<adsc>	jkbbwr: are you saying there is no sky beyond your windows?
<jkbbwr>	adsc: beyond yes. infront of no.
<ams>	protist: mm.
<ams>	protist: fix it.
<ams>	protist: better approach than yours.
<adsc>	jkbbwr: well, you seem to be quite the existentialist
<protist>	ams: fix it with a better approach than mine?...or are you asserting that his is a better approach to mine?
<ams>	i think it is.
<protist>	ams: complete sentences help
<protist>	ams: hehe
<ams>	no
<protist>	ams: his is certainly simpler...and i started that route...but it doesn't scale to nested function literals
<adsc>	alfatau: what i meant is: you describe your structure as a tree, but then you seem to indicate a node can have multiple parents, or siblings that have a different parent node, which makes no sense in a tree context
<ams>	protist: sorry, just not feeling the vibe .. why do you want this line noise?
<adsc>	alfatau: maybe you should draw a quick example of an instance of your data structure and upload it to imgur and link it here
<protist>	ams: i will only use it for small things like he is...i just dislike not being able to nest, it feels incorrect
<protist>	ams: correct things nest :)
<ams>	protist: i can agree on that, bu i cannot agree on the sanity of such a macro to begin with.
<protist>	ams: here is a sane example of me using it in a line
<protist>	ams: for below = (remove-if-not #f(<= (feature-of %) boundary) data)
<alfatau>	adsc: ok
<ams>	protist: i'm having issues even reading that.
<ams>	and in what context do you want to filter out <= elements?
<denommus`>	ams: i think his macro is somewhat similar to arc lisp's lambda, if that helps you
<protist>	ams: in my splitting function for forming regression trees http://pastebin.com/e40sda1s
<protist>	ams: that isn't the whole program...but you can see the `split-on' function at the top
<ams>	denommus`: and arc is the pinacle of stupidity.
<denommus`>	ams: indeed it is, but some people may like that sugar
<golynx>	why does chrome delete the web sql database after the page that created it is refreshed ?
<ams>	protist: remote-if-not-<= remove-if-not->
<ams>	protist: or better yet, reverse the words, remove-if->
<protist>	ams: could :)
<ams>	or, since you are testing for featureness, remove-feature-if-...
<ams>	the loop can also be merged into one block.
<ams>	you can do a macro local finish and do the minimum there.
<protist>	ams: ah, thank you :)
<ams>	killing the let, and reducing indent by one
<ams>	making things a bit saner.
<protist>	ams: yes sir, agreed on that :)
<pie_>	im constantly redesigning the api in my program because i cant figure out a flexible powerful way to do it
<pie_>	is there a way to approach api design or do i just have to rely on thought and experience?
<ams>	pie_: do you have an example?
<protist>	ams: and i do know i don't have to have the predictors as a middle man in `make-bagged-predictor'...torn on whether it is more legible this way
<jkbbwr>	golynx: the page might have requested the deletion
<ams>	protist: i think it was fine.
<ams>	protist: i might do a do-partitions kinda function ..
<protist>	ams: hmmm
<ams>	protist: or some collect-partitions whatever functions, since you are using coollecting alot.
<ams>	maybe.
<pie_>	ams: not really, im writing it in python so if done properly i imagine it being easy to add patches/plugins, so i want to make that possible. i.e. put in the effort in writing the core so adding onto it is easy
<ams>	pie_: i don't understand add patches... why do you need to add plugins?
<ams>	pie_: from the looks, you are over designing.
<pie_>	most likely
<protist>	ams: thank you for looking that over :)
<pie_>	its my pet project so i dont mind
<pie_>	i do actually write some code, but then i end up redoing it
<ams>	pie_: there is one rule: get it working.
<protist>	ams: if you do get bored and have a whirl at making my #f compatible while being equally general, let me know
<ams>	pie_: why do you end up "redoing" things, and what do you end up redoing?
<ams>	protist: i doubt it.
<protist>	ams: thought so :)
<ams>	protist: i am really against such hacks ..
<ams>	protist: and i like reader macros.
<pie_>	i'm new to programming so most things are trial and error, i write say 300 lines of code and dont like how it ended up so i do a major refactor
<ams>	protist: but i rule them as "if i can print, i should be able to read"
<denommus`>	ams: do you know how to implement mfix in a strict language such as lisp?
<ams>	pie_: you are saying what you did, not why.
<ams>	why are you refactoring it, why don't you like it?
<ams>	denommus`: mfix?
<protist>	ams: hehe
<jkbbwr>	pie_: what are you writing an api for?
<ams>	protist: so like, hash tables are a good example
<denommus`>	ams: mfix is a function where the result of the action is fed as input for the same action
<ams>	protist: data-types in general...
<pie_>	ams: usually the conceptual separation of components doesnt turn out good, so i have things mixed up
<pie_>	one component here one component there
<ams>	denommus`: got a spec/
<pie_>	the other i
<denommus`>	ams: wait
<ams>	pie_: i'm, sorry, but that is blablabblablabla
<pie_>	ams: esentially yes
<ams>	pie_: if you cannot say _why_ you are refeactoring something, then you shouldn't refacftor it
<denommus`>	ams: http://hackage.haskell.org/package/base-4.7.0.2/docs/control-monad-fix.html
<pie_>	because code that should be simple isnt
<ams>	why is it not simple?
<ams>	examples.
<pie_>	s/simple/easily understandable
<ams>	why is it no..
<ams>	show examples.
<ams>	maybe it is understanable.
<ams>	maybe you are just looking for "perfection"
<pie_>	well, it's pointless for me to argue, i concede, i don't really have any examples i can give. i probably am overdoing it.
<pie_>	the other end of the spectrum is when i say screw scope and start using one letter globals :p
<ams>	understandable is a very personal opinion
<ams>	what you consider easy to understand, i might not.
<ams>	what i might consider easy, you will not.
<jkbbwr>	pie_: i did ask what you are doing
<ams>	so like ... protist had a nice little case of refactoring example..
<ams>	http://pastebin.com/e40sda1s
<ams>	the loop there ..
<ams>	(let ((splits (loop ...))) (when splits ...))
<ams>	this is complicated, and unneeded code .
<ams>	we can simple to (loop ... finally (minium ..))
<pie_>	jkbbwr: i'm writing an image viewer that scrapes the images from websites, so say there is a gallery somewhere, you plug the url into the program and view the gallery
<adsc>	that doesn't sound very nice
<jkbbwr>	pie_: okay so now describe it to me in english
<ams>	pie_: in the above, it is less code, less code is in general good.  there is no extra variable confusing us to what its purpose is either, or an extra conditional that we might wonder about.
<pie_>	adsc: my targets provide apis (well most of them) so i cant say im not supposed to :p
<adsc>	pie_: and you don't use the apis because...
<pie_>	i do
<pie_>	well ok i said scraper
<protist>	adsc: yes `split-on'.... before http://pastebin.com/e40sda1s ... and after http://pastebin.com/4i9p43xm
<pie_>	but thats because the apis are provided as xml, also some of the websites use the same framework but do not provide access to the api(afaict), given that i dont intend to dos them and download their whole database, i feel my work is justified
<ams>	pie_: .. that isn't an api.
<protist>	adsc: can i do better?
<ams>	don't call it api
<pie_>	ams: what should i call it?
<ams>	i have no idea, an xml file.
<ams>	it isn't an api.
<ams>	api has become so diluted by these .. web thingies that it is annoying.
<pie_>	thats true
<pie_>	i manipulate a url like /api.xml?page=number and im returned a list of objects
<ams>	an api is simple a function call, its arguments, its side effects, and return value.  that is it.
<adsc>	protist: i guess that was for ams
<adsc>	a<tab> is a bit risky you lazy sod
<protist>	ams: yes `split-on'.... before http://pastebin.com/e40sda1s ... and after http://pastebin.com/4i9p43xm
<lopx>	question; how do you go from c to binary? and why would you go bin?
<alfatau>	adsc: http://snag.gy/omnet.jpg
<protist>	ams: accidentally sent to adsc the first time
<pie_>	lopx: you mean assembly?
<protist>	ams: can i do better?
<lopx>	yes
<protist>	adsc: thanks :p
<ams>	protist: nod,, much nicer.  still don't like the #fs
<ams>	protist: i wouldn't bother.
<ams>	protist: it is easy enough to read.
<lopx>	do i convert it or is it created automatically? d:
<gedamo>	lopx: are you asking how a compiler works?
<protist>	ams: :) thank you
<aidanh>	lopx: usually because you'd like your computer to actually execute your code
<protist>	ams: if it weren't for you i would still be avoiding loop and clos
<ams>	protist: i might do something differently, if i have to reuse that code, or when i add something .. but as such, it is good enough.
<protist>	ams: glad you take the time to pick at me haha
<alfatau>	adsc: getsiblings(v1, a1) => v1..v3; getsiblings(v2,v1) => v1..v5; getsiblings(v1,a2) => emptyset
<lopx>	gedamo: well, in more techinal terms, maybe. aidanh: ah. pie_: yep i guess it's assembly.
<pie_>	actually, i misread your question like 3 times
<alfatau>	adsc: this is the semantic. on the level v is allowed only type v and so on for the other levels.
<ams>	protist: loop and clos are really nice.
<protist>	ams: yes!
<protist>	ams: i love them both now
<protist>	ams: would be sad to have not experienced them
<protist>	ams: java poisoned me against oop...everyone kept telling me clos was different
<protist>	ams: you linked me to short things and were persistent haha
<lopx>	i make .s files. and i need .bin ;/
<ams>	protist: you might be interested in sequences .. seeing you are working with them.
<ams>	protist: http://www.cs.cmu.edu/groups/ai/html/cltl/clm/node141.html#section001800000000000000000
<protist>	ams: i am very interested in them
<aidanh>	lopx: compilation converts your .c files to object files; linking joins all the object files into a final executable
<protist>	ams: very
<ams>	protist: it was a thing that never got added into cl
<alfatau>	adsc: obviously getsiblings(v1, r) => v1..v17; also getsiblings(a1,v1)=>a1...a3 and getsiblings(a5,r)=>a1...a6
<aidanh>	lopx: oh, there's `as` for that
<lopx>	aidanh: interesting, ty.
<ams>	protist: doh .. i mean series ..
<ams>	protist: sorry
<ams>	http://www.cs.cmu.edu/groups/ai/html/cltl/clm/node347.html#section003400000000000000000
<ams>	or generators/gatherers: http://www.cs.cmu.edu/groups/ai/html/cltl/clm/node362.html#section003500000000000000000
<aidanh>	lopx: to be honest, i'm still not quite sure what you're asking
<protist>	ams: omg! this sounds beautiful
<protist>	ams: are there conformant implementations of these floating about? i assume so
<ams>	http://series.sourceforge.net/
<adsc>	alfatau: v6 and v7 are siblings?
<lopx>	aidanh: i was given a c file in assm. i've never created one, myself.
<protist>	ams: this is something i actually think about every day
<alfatau>	adsc: also, a future requirement is a "split" level (i.e. to switch to a graph) from e.g. level w to a new level u on another "dimension" as parent of w. then we'll have w with 2 parents (a and u).
<protist>	ams: and have spent a lot of time thinking about when implementing array languages
<ams>	protist: ok
<aidanh>	lopx: c files are in c; they can't be in assembly, by definition
<alfatau>	lopx: and adsc: i'm really sorry, i pasted the wrong image: this is the correct image: http://snag.gy/ow5hz.jpg
<protist>	ams: "these functions more or less correspond to the union of the operations provided by the sequence functions, the loop clauses, and the vector operations of apl."
<protist>	ams: apl ;)...exactly
<adsc>	alfatau: are you sure? getsiblings(v2, v1) -> v1..v5 makes no sense with this latest image
<alfatau>	so, adsc: lopx: getsiblings(w1, a1) => w1..w3; getsiblings(w2,v1) => w1..w5; getsiblings(w1,a2) => emptyset
<adsc>	ah, ok
<ams>	protist: it is a pitty that today lispers do not write ... common lisp.
<adsc>	well, it seems the method is not correctly named, as those are not siblings
<ams>	protist: like, idiomatic cl
<adsc>	alfatau: what you want is offspring of the same level
<protist>	ams: what do they write?
<ams>	protist: some kind of scheme ...
<alfatau>	lopx: adsc: obviously getsiblings(w1, r) => w1..w17; also getsiblings(a1,v1)=>a1...a3 and getsiblings(a5,r)=>a1...a6
<protist>	ams: ah...yeah
<adsc>	alfatau: or in more tree-y words, children of x with the same depth as y
<protist>	ams: clojure is the big thing right now i think
<protist>	ams: i found it distasteful
<alfatau>	adsc: ok. however, at the same depth i must have only nodes of the same type, and there's a specific relationship of the type r -> v -> a -> w -> d and so on..
<ams>	protist: well, it is not a lisp.. it by definition is disteful :)
<adsc>	alfatau: i think it would be easiest if you had an additional list of all nodes at a certain depth, so you could simply loop through them and check the parent
<protist>	ams: i think i have heard you say that scheme is not lisp before...can you ellaborate on that?
<alfatau>	adsc: so a cannot have children of type a or v or different from w
<adsc>	alfatau: so those are insertion constraints
<protist>	ams: i tend to think of lisp as an unbrella term...am i missing something?
<lopx>	alfatau: ty
<ams>	protist: write me some trivial code in scheme, and the same code in cl.  now run the cl code in scheme, and the scheme code in cl.
<protist>	ams: umbrella*
<ams>	protist: i can run trivially lisp 1.5 code in cl.
<protist>	ams: well neither is a superset of the other, exactly anyways
<ams>	protist: or maclisp code in cl
<ams>	or vice versa ..
<protist>	ams: ah
<ams>	they are largley compatible.
<ams>	thus, they belong to the same tree.  scheme does not.
<ams>	scheme is a very different language.
<ams>	just cause it uses sexps does not mean it is the same language, like just cause something using {} and ; doesn't mean it is c
<alfatau>	adsc: ok, however this structure seems not a standard structure which i can natively find on a std lib (e.g. requiring templates or generics to specify types) ...
<ams>	protist: or put bluntly, is perl a c?
<adsc>	alfatau: i agree, i don't know any prepared structure for this
<protist>	ams: that would sound more analogous to the question "is common lisp a scheme?"
<ams>	protist: there are more programs in perl that will run without modification in c, than scheme programs in cl.
<alfatau>	adsc: ok thanks, however... in the meantime i implemented that specialized structure...
<ams>	protist: correct, and obvioysly, it isn't.
<adsc>	alfatau: so how did you do the type restriction?
<ams>	protist: even though, i can do (with-scheme-syntax (define foo (x) x)) and what not...
<protist>	ams: hehe
<ams>	but it is not trivial, the two languages are about as far away as cl and c.
<protist>	ams: i don't mind the idea of a lisp-1....i do mine hygene being forced onto my macros
<protist>	ams: and scheme has no coherent standard
<ams>	well, it does.
<ams>	it just sucks.
<protist>	ams: and scheme lacks facilities
<protist>	ams: what i meant by "coherent" haha
<ams>	it is like you get a hammer, and that is all...
<inphase>	alfatau: why don't you use a template with an n+1 depth parameter?
<ams>	you can use the hammer to screw things into wooden planks, and use it to cut them ..
<ams>	i need my saw, i need my screw driver .. in various forms, and various handles.
<ams>	i have shit to write ..
<alfatau>	adsc: not an elegant implementation: no polymorphism.
<alfatau>	inphase: the problem is n is known only at runtime.
<inphase>	alfatau: is the range of possible n's bounded?
<alfatau>	adsc: really, my actual implementation sucks... but i'll improve it if i'll have some better ideas.
<adsc>	so far i don't see what speaks against a simple tree structure with a depth -> type map and some conditions on insertion
<alfatau>	inphase: this is possible, but i think it's not so elegant...
<alfatau>	adsc: i found some discussions about so said "constrainted hierarchies", but seems not exactly my problem...
<alfatau>	adsc: or "constrainted taxonomies"
<inphase>	alfatau: well you can easily use numerical templates to generate types for each depth if you can apply a clean bound to this.  there are even some idioms for dynamically selecting an integral template.  but if you have a very large depth range, then you cannot use separate types, but must simply store the value.
<protist>	ams: hehe :)
<protist>	ams: had never heard of `multiple-value-call' until now
<rindolf>	protist: hi, sup?
<protist>	rindolf: reading on some common lisp things :)
<protist>	rindolf: what about you?
<rindolf>	protist: i sent a message with errata about the perl-5.22.0's perldelta to the perl5-porters forum.
<protist>	rindolf: good work :)
<rindolf>	protist: ok, it arrived now after being blocked by a spam filter, and after i resent it.
<ams>	protist: it is useful.
<illogicalfix>	.
<alleogircal>	if i use virtualbox to boot lubuntu from my usb stick is it possible to delete stuff on my hard drive?
<rindolf>	alleogircal: if you ssh into it.
<alleogircal>	oh ok, and is it any difference whether i set the bios to boot from usb on startup?
<inphase>	rindolf: what?  you don't need to ssh into a hard drive after booting from a usb stick.  that doesn't make sense.
<ams>	sshing into a harddrive ..
<ams>	interesting.
<inphase>	oh.  virtualbox.  i got you now.
<ams>	allegorical: yes, depending on things.  why do you ask?
<ams>	allegorical: if you add file systems that are exported to the vm, you can mount them inside the vm, and remove files that way.
<allegorical>	hmm didn't want to delete anything by accident
<ams>	allegorical: or accessing your local computer via a daemon or some such ..
<jadew>	don't expose the hdd to the vm and you should be fine
<allegorical>	oh k thanks
<ams>	it is possible to do it, but not directly out of the box
<jadew>	by default the vm is isolated from the rest of the system
<jadew>	i bet there are ways to hack your way up if you try :)
<adsc>	alfatau: if you are searching for the term, try using "constrained", because "constrainted" is wrong
<alfatau>	adsc: typo
<ams>	jadew: yes, and no.
<jadew>	ams, i bet it's possible
<ams>	it is.
<ams>	depedning.
<ams>	vmware workstation had such a bug in 2008
<ams>	cve-2008-0923 ..
<jadew>	so what are you basing your "no" on?
<ams>	today there are hardware mechanism that can prevent such things to happen.
<jadew>	yeah, i still think they're breakable
<ams>	very hard to impossible.
<jadew>	definitely not impossible
<ams>	uhm, clearly impossible in some cases.  depending on things.
<jadew>	ams, you put too must trust in hardware
<ams>	16:46 /ignore jadew
<ams>	no, i don't trust hardware.
<adsc>	are you out of work, ams?
<ams>	not doing any work this week.  i gave up for the week on monday.
<adsc>	oh, you are one of those humans who don't know what to do when they have no work?
<ams>	yes.
<adsc>	how did you become like this?
<ams>	no clue!
<jadew>	that's probably it
<adsc>	a shame...that would have been valuable information
<ams>	got any work for me? :)
<adsc>	i have lots of work for everybody, but i'm not sure what i can give you
<adsc>	also, all the work is unpaid
<ams>	then it is not work.
<adsc>	i kind of expected that
<adsc>	what if i pay you the minimal amount of money in your desired currency? is it work, then?
<jkbbwr>	ams: i can offer you a job, but its in go ;)
<ams>	jkbbwr: mm.. if i implement a common lisp to go compiler as part of it, then sure.
<adsc>	i don't think your pit is deep enough to duck into cover many more times over this joke, jkbbwr
<jkbbwr>	ams: https://github.com/zhemao/glisp
<ams>	jkbbwr: oh, i don't want to write lisp in go .. i wanna write lisp programs in lisp.
<ams>	:)
<rantingdude>	ams: do you like clojure?
<protist>	i'm trying to remember what movie a certain scene is from...in the scene a man realizes his family needs food and begins to feed unsafe fish from a contaminated river to his children
<protist>	i can't place this scene
<jkbbwr>	ams: (assert (sucks? 'lisp))
<jadew>	protist, chinese movie
<jadew>	i remember it
<protist>	jadew: might be haha
<jadew>	give me a sec :)
<protist>	jadew: in the scene he is aware it is contaminated
<protist>	jadew: good luck! :)
<jadew>	protist, yeah, everyone was poor in that area, right?
<protist>	jadew: yeah something like that
<protist>	jadew: i think the main character was travelling through the village or something
<jadew>	can't find it in my library, now i want to find out its name too :)
<protist>	jadew: just ate a can of eel from china and it reminded me of this haha
<ams>	rantingdude: no.
<protist>	jadew: yeah i was starting to think maybe the scene was from a book i read...and thought i might never find it hahhaa
<protist>	jadew: i remember the scene was sad and powerful
<vendu>	yo protist, jkbbwr, all of you :d
<jkbbwr>	vendu: hey
<vendu>	protist, i found what looks like a very interesting cave/dungeon generator, so i think i'm gonna look into learning to read c# :)
<protist>	jkbbwr: hey :)
<vendu>	http://www.evilscience.co.uk/a-c-algorithm-to-build-roguelike-cave-systems-part-1/
<protist>	vendu: go for it :d
<vendu>	protist, there ya go, the levels really are much more interesting than plain rectangular rooms :d
<vendu>	isn't c# actually pretty close to c? :)
<vendu>	and c++?
<protist>	vendu: nice :d
<vendu>	something makes me think it won't take long to understand the code :)
<jkbbwr>	protist: sup
<protist>	vendu: well it does have an oop system as well i think
<vendu>	i'm obviously gonna hack some kind of a c module based on it :)
<protist>	vendu: i have used c++ a bit...but not enough to "learn" it
<vendu>	jkbbwr, see the link above, i think i found a decent dungeon generator for my rogue-like :d
<vendu>	protist, same thing here :)
<vendu>	back at the day, i did a little c++ to help the developer of qt nethack :)
<vendu>	i think this was pre-qt-1.0 :d
<jkbbwr>	vendu: not loading
<vendu>	so probably in the middle to late 1990̈́'s :)
<jadew>	protist, can't find it, sorry
<protist>	jadew: nooo!!!!! >:(
<protist>	jadew: haha
<jadew>	yeah... i don't even know if it was chinese, could have been japanese
<vendu>	http://www.evilscience.co.uk/a-c-algorithm-to-build-roguelike-cave-systems-part-1/
<vendu>	there it is again, should load okay :p
<jkbbwr>	vendu: its not loading
<vendu>	hello jadew :p
<vendu>	hey ams :)
<jadew>	hi
<vendu>	what's up people?
<rindolf>	vendu: hi! i'm fine - submitted some errata for the pod/perldelta.pod of the upcoming perl-5.22.
<rantingdude>	cargo rocks. why do lisps, and most other languages have so bad package managers?
<denommus`>	rantingdude: leiningen and quicklisp aren't bad
<rindolf>	vendu: and i submitted a bug too.
<rindolf>	s/bug/bug report/
<aawe>	what do you call a t-intersection where a small road meets a highway? any short word?
<delphi_gurl>	junction
<aawe>	is t-junction valid?
<delphi_gurl>	yes and no. depends.  are you being formal?
<delphi_gurl>	junction would work.
<aawe>	very formal
<delphi_gurl>	then just junction. like "turn left at the junction in the road"
<delphi_gurl>	but this could a be a very cultural use too.
<rantingdude>	denommus`: do you think its an issue, that lots of package manager don't even checksum the stuff that they install on your system?
<delphi_gurl>	i grew up speaking english as one of my two languages. i would use junction in this circumstance as you ask.
<denommus`>	rantingdude: don't know. probably
<aawe>	is there a more terse and formal way of describing a slowly turning road other than "road curve" ?
<henke37>	arc? turn?
<aawe>	"road arc" gives 0 results on google
<aawe>	0 relevant results, rather
<gedamo>	non-linear? :p
<aawe>	haha that's formal to the point of being informal
<aawe>	road curve will have to do
<zuu>	aawe: soft curve?
<aawe>	or.. non-linear road is funnier
<aawe>	i'm going to run with it
<gedamo>	which of these curves is closest? :p https://en.wikipedia.org/wiki/exponential_growth#/media/file:exponential.svg
<aawe>	the exponential one
<aawe>	depends on scale, of course
<aawe>	scale it enough and even the exponential one seems linear locally
<gedamo>	well there you go then, it's an exponential road :p
<delphi_gurl>	:)
<aawe>	just like our technical development, which everyone thinks is linear because we see it locally
<aawe>	i wonder how far away we are from laws regulating vr technology
<jadew>	far
<gedamo>	what sort of regulation?
<jadew>	gedamo, closest to what?
<ams>	.. mm.. cvs
<gedamo>	jadew: closest to aawe's road curve
<aawe>	jadew: we are max 3 years from a vr explosion
<jadew>	aawe, you describe road curves in terms of angles
<jadew>	actually no
<jadew>	soft would just mean a bigger radius
<jadew>	aawe, i sure hope so
<jadew>	i think it's going to be more like ar than vr
<jadew>	but that's fine too
<jadew>	actually, might be a lot better
<jkbbwr>	what would you expect /pkg to be used for on a unix domain
<ams>	packages?
<jkbbwr>	im trying to find a place to keep user defined configs that is *not* /etc/ or /var/
<jkbbwr>	i have /opt/ for installing some programs and /app/ for the application files
<gedamo>	/usr/local/ ?
<jkbbwr>	maybe i could add /conf/
<jkbbwr>	gedamo: i want to stay out of the usual locations
<gedamo>	why?
<jkbbwr>	gedamo: i want to try and segrigate the system config from the hosted applications
<gedamo>	that's what the usual locations are for
<ams>	 /opt/etc/
<ams>	 /usr/local/etc
<ams>	those are the normal places.
<ams>	 /var is not for configuration files
<jkbbwr>	ams: i like /opt/etc
<ams>	 /app and /pkg are non-standard sillyness that should not be used.
<jkbbwr>	ams: i like that alot
<diminoten>	augh
<diminoten>	i've been rate limited in my comments on hn
<aawe>	why is latex so worthless at placing images
<diminoten>	and the jerk mods want me to "promise to change"
<diminoten>	such a west coast nonsense attitude
<aawe>	diminoten: well you're probably coming off as a dick in your comments
<jkbbwr>	ams: what anchors are ou using?
<ams>	anchors?
<diminoten>	i don't care
<diminoten>	grow some skin
<aawe>	diminoten: then why are you complaining of being rate-limited?
<diminoten>	it hinders my ability to use the site
<aawe>	you can still read things
<diminoten>	i can
<jkbbwr>	ams: sorry i meant aawe
<aawe>	they just don't want any content you produce
<jkbbwr>	aawe: what anchors are you using
<aawe>	jkbbwr: ht!
<diminoten>	i don't care about their content
<aawe>	diminoten: then why are you complaining?
<diminoten>	i care about getting answers to my questions and challenging my assumptions
<jkbbwr>	aawe: here is more a suggestion
<diminoten>	i become better at being a person and at my job
<gedamo>	diminoten: you should start your own site then :p
<diminoten>	from a technical standpoint it wouldn't be hard
<diminoten>	the whole "community" thing
<diminoten>	is a bit harder to build
<aawe>	jkbbwr: i thought the bang would make it clear to latex that i'm not fucking around
<jkbbwr>	aawe: !ht
<jkbbwr>	aawe: make ! more important than here
<aawe>	jkbbwr: that made it worse - images leaked into the next chapter
<jkbbwr>	heheh
<jkbbwr>	good luck
<myrl-chan>	i fucking hate this game.
<aidanh>	myrl-chan: which game?
<myrl-chan>	aidanh: osu.
<myrl-chan>	aidanh: http://puu.sh/hkg98.jpg
<myrl-chan>	100 retries.
<myrl-chan>	i've been trying that song for 50 minutes.
<adsc>	why do you play games you hate?
<myrl-chan>	adsc: stockholm syndrome?
<adsc>	haha
<aawe>	you have to play osu to be real asian
<aawe>	it's a standardized test
<adsc>	is the game about healing girls with eye growth syndrome?
<aawe>	it's like guitar hero but you click and drag circles
<adsc>	oh
<adsc>	sounds like a game that is not a game but a test of how well you can repeat a given pattern
<myrl-chan>	aawe: ikr?
<aidanh>	myrl-chan: rhythm game?
<myrl-chan>	yes.
<adsc>	why do people waste time with such things? this is the strength of machines, not humans
<aidanh>	think i've seen my classmates play that
<diminoten>	did i disconnect and reconnect?
<aidanh>	lol, '100 retries and counting'
<adsc>	humans should focus on their own strengths instead of trying to be a machine
<diminoten>	if so, i friggin' hate znc...
<aidanh>	diminoten: doesn't look like it
<diminoten>	ah good
<aawe>	adsc: computers play guitar better than humans. should i stop trying to play guitar?
<aawe>	stop trying to learn other languages?
<adsc>	aawe: that's not true
<adsc>	computers can't play guitars
<jkbbwr>	adsc: yes they can
<diminoten>	depends on what you mean by "play guitar"
<adsc>	jkbbwr: computers have no understanding of music, hence they can't play musical instruments
<jkbbwr>	adsc: again wrong.
<diminoten>	a computer certainly can't compose a song like ozzy osbourne
<protist>	i was just thinking about the gpl...and then was thinking about how android seems to ignore it
<protist>	am i missing something?
<aawe>	do you need understanding in order to produce a waveform?
<gedamo>	diminoten: i had a major lag a couple of minutes ago
<protist>	android does have gpl'd components, right?
<jkbbwr>	https://www.youtube.com/watch?v=o0th_mhxr9c
<adsc>	aawe: a waveform is not immediately music
<adsc>	jkbbwr: what is that, i can't process video
<jkbbwr>	adsc: music composed by a computer
<aawe>	adsc: if i give my computer guitar notes, it will play them to me on guitar
<aawe>	that is what playing guitar means
<aawe>	composing songs for guitar is another matter
<aawe>	and not something i am trying to learn
<diminoten>	you guys are arguing semantics, nerds...
<adsc>	aawe: yes, i understand that, but a computer lacks the emotion and spontanity to bring a song to life...it ist just like listening to a record
<aawe>	please define "bring a song to life"
<adsc>	aawe: do you play guitar?
<aawe>	i am learning
<diminoten>	this is one of the stupider conversations i've read in this channel in a while
<aawe>	diminoten: and you are free to rest your eyes on other things
<diminoten>	aawe: i'm also free to call this conversation stupid
<diminoten>	and to further ridicule you and any other participant until the conversation endsw
<aawe>	which you have done, repeatedly
<diminoten>	indeed
<adsc>	aawe: then you should know what i mean, a guitar note is not just a guitar note...it is interpreted by the player and played differently depending on where in the melody it is
<adsc>	my point is that, yes, a computer can reproduce guitar music, but it can't play the guitar like a human can, which is why you shouldn't stop playing the guitar
<aawe>	as a rule? because computers are good at rules
<aawe>	computers are also good at knowing what "feels right" in a sequence, see hidden markov chains/modes
<aawe>	models*
<adsc>	well, it was you who brought up guitar playing in the context of repeating a given pattern as accurately as possible
<adsc>	if you really think it was a good example, i'm afraid you will never become a good guitar player
<diminoten>	adsc you're terrible at making your point
<aawe>	don't be afraid
<aawe>	i'm here for you
<adsc>	diminoten: that is one of my weaknesses, yes, but i'm getting better
<aawe>	you claimed computers cannot play guitar, you were wrong. you argue that humans are better at it, you may be right
<diminoten>	i mean specificallyin this conversation, i hardly know you in general
<diminoten>	computers can play guitars, they cannot compose guitar music, is what you meant to have said
<adsc>	aawe: okay, you win, i was wrong
<aawe>	do i get a price?
<adsc>	no
<aawe>	dang it
<diffract|>	is there a way to use c for web programming?
<adsc>	yes
<aawe>	diffract|: yes
<diffract|>	how?
<diminoten>	sockets
<aawe>	you use it as a language to describe behaviour and logic
<aawe>	which you then compile to machine code
<diffract|>	isn't that low-level? i meant for websites
<diminoten>	yeah it is
<diminoten>	probably not your easiest bet
<diminoten>	but it's technically possible
<diminoten>	i think there are even a few frameworks
<^python111>	why not do it in asm like everyone else
<aawe>	diffract|: https://github.com/lpereira/lwan
<adsc>	you can also use fastcgi and make simple executables
<diffract|>	aawe: isn't this a webserver like nginx? i want to run something like nginx and "script" pages in c
<aawe>	diffract|: http://lwan.ws/
<aawe>	check the examples
<diffract|>	ok thanks
<adsc>	diffract|: http://stackoverflow.com/questions/2149709/c-language-fastcgi-with-nginx
<aawe>	lwan won the latest web framework benchmark in one of the categories
<zuu>	diffract|: you could basically have a directory of .c-files, and have a webserver just compile those c files whenever it's requested to
<adsc>	or you could precompile them
<zuu>	then the executable is executed, an its output sent to the client
<diffract|>	ok, seems like i have some learning to do.. thanks all
<aawe>	i hate cgi
<zuu>	would be quite easy to make sucha  simpel setup
<aawe>	but i have no idea why as i don't really know what cgi is
<adsc>	the best kind of hate
<zuu>	cgi is just the idea of calling an executable and relaying its output
<zuu>	and fastcgi is the same thing, except the executable is already running, and it's accessed through sockets or pipes
<aawe>	so when i pipe a request from nginx to an app server, i am really facilitating fastcgi?
<zuu>	i dont know what nginx is
<adsc>	a webserver
<aawe>	it's like apache but not ancient
<aawe>	or like iis but not horrible
<txdv>	build on top of async apis
<aawe>	written by russians
<txdv>	like node.js but without javascript
<zuu>	aawe: if you're using the fastcgi protocol, then i suppose you are.
<aawe>	nginx is used by 24.0% of all the websites whose web server is known by w3techs
<zuu>	the entire point is to have a process that doesn't need to care about http, but only to care about delivering content upon requests
<aawe>	zuu: how are headers, paths, query parameters, cookies and request bodies delivered when using cgi then?
<zuu>	look at the protocol
<aawe>	i refuse. i'm going to read some sci-fi instead, and remain gloriously ignorant
<zuu>	just like nearly everyone else :)
<protist>	goodnight ##programming
<rindolf>	protist: night.
<txdv>	environment variables
<vendu>	rindolf, hello, cool - sorry, got lost somewhere else :p
<vendu>	rindolf, how's it going?
<vendu>	sleep tight protist :)
<vendu>	hey zuu :)
<protist>	rindolf: goodnight :)
<vendu>	up aawe :p
<zuu>	hey vendu and rindolfey :d
<protist>	vendu: thanks, i will :)
<protist>	vendu: goodnight
<rindolf>	vendu: i reported a broken water faucet to the municipality.
<rindolf>	vendu: using their android application.
<zuu>	uh uh, i maded up a new nickname for rindolf :d rindolphin :p
<rindolf>	zuu: heh.
<rindolf>	is it also rudolphin and randolphin?
<vendu>	rindolf, wonder if i linked you to this one already...? http://www.evilscience.co.uk/a-c-algorithm-to-build-roguelike-cave-systems-part-1/
<vendu>	i might start reading the c# code and trying to understand it today :)
<rindolf>	vendu: you did , yes.
<vendu>	cool :)
<zuu>	rindolf: almost, just randolphin and rindolphin :>
<rindolf>	vendu: ah, i thought it was c code - not c#.
<vendu>	rindolf, the rooms/caves sure would be much cooler than the usual rectangular ones :p
<vendu>	rindolf, hehe it's c#, but i doubt i'm gonna have much trouble figuring it out =)
<amigojapan>	glowing plants seems awsome….  although a little over hyped… it seems you ownt be able to have plants instead of lights as of yet
<amigojapan>	but it looks really cool
<amigojapan>	oh wow it was made by a hackerspace!
<breakthexor>	can someone please help me find out why i can't seem to find the key length of a xor encryption correctly? i know i'm not returning the right value, but i can't seem to have my temp variable count correctly: https://gist.github.com/anonymous/74068dda30d0d0d32436
<ams>	breakthexor: why would we help you with the impossible?
<breakthexor>	ams: what do you mean impossible?
<monroe>	only decision problems can correspond to languages
<monroe>	what about other problems ?
<aidanh>	ams: it's not impossible; fairly easy to do statistically actually
<denommus>	hi
<akersof>	aidanh, your statistics will be based on what?
<rindolf>	denommus: hi, how are you?
<akersof>	hi
<ams>	akersof: no, it isn't.
<aidanh>	akersof: assuming this is repeating-key xor, you try to minimize edit distance between successive blocks of n bytes
<ams>	aidanh: ^^
<denommus>	rindolf: i'm fine
<ams>	it is statistically impossible to detrmine the length of xor
<ams>	encryption.
<ams>	it is by definition a random set of numbers.
<aidanh>	ams: we're probably interpreting the question completely differently
<ams>	if i have "hello world" xor "192834628376587423652138765832796487213964871263487263487623499876123489762349817263498726349872634" you cannot possibly statistcially figure out that the original message was of some length
<aidanh>	ah, well, that's a one-time pad; repeating-key xor, on the other hand, is easily broken
<ams>	only idiots use that though
<myrl-chan>	repeating-key xor is enough to hide your prawn from your parents.
<ams>	you must have dumb parents.
<aidanh>	the original question was ambiguous, but a one-time pad doesn't make any sense if you're asking about key length
<rindolf>	denommus: nice.
<aktx>	i had a job interview at google last week
<ams>	aktx: our condolences.
<aktx>	ams, why is that?
<ams>	cause it is google?
<reveredge>	anybody doing cryptopals exercises?
<aktx>	ams, in a good way or bad way?
<akersof>	ams, we need information on the plain text data, to find some repition of a pattern or something, and start a brute force else indeed it is impossible
<aidanh>	reveredge: i've done a few
<ams>	akersof: using proper xor you cannot find anything of the sort.
<reveredge>	i am about to start same exercise, which uses repeated key xor
<ams>	akersof: proper xor is impossible to break, or figure out.
<aktx>	anybody else here interviewed at google?
<denommus>	rindolf: i just can't find nobody that can give me directions on how to implement mfix in a strict language
<ams>	aktx: yes ..
<aidanh>	reveredge: set 1, challenge 6?
<reveredge>	aidanh, exactly
<ams>	aktx: i told them to fuck of after they had flown me to switzerland... nice place switzerland.  don't work for google.
<reveredge>	aidanh,  how far have u been?
<aktx>	ams, wait why? you turned google down??
<aidanh>	reveredge: somewhere in the middle of set 4; i stopped when coursework picked up :/
<ams>	aktx: cause google is an organization that is intent on spying.
<denommus>	aktx: dude, work wherever you want
<ams>	aktx: and why would i want to ever work in a black hole?
<aktx>	damn dude
<aktx>	is google really that evil?
<rindolf>	denommus: what is mfix?
<reveredge>	aidanh, what about difficulty level, do they grow very fast
<aktx>	ams, so google gave you an offer?
<ams>	aktx: yes, look at snowdens "revelations"
<aktx>	i flew out to mountain view
<ams>	aktx: yes
<reveredge>	i am trying to go as far as possible
<aktx>	dude, why didnt you accept it?
<aktx>	oh my~
<ams>	aktx: why would i?
<akersof>	aktx, google developpers are not like rock star?
<aktx>	ams, because it looks awesome on your resume
<ams>	aktx: ...
<ams>	aktx: no it doesn't.
<aktx>	akersof, waat, i thought they were
<aktx>	ams, really?
<aidanh>	reveredge: varies; concepts are the most difficult, but none are terribly tricky to implement
<ams>	aktx: can a google employee talk about what they do?
<aktx>	so is google no longer "awesome" or "in vogue?"
<aktx>	hmm
<denommus>	rindolf: it is a function that takes a function `monad m => (a -> m a)` and produces a `monad m => m a` by making a cycle from the output of the parameter to feed itself as input
<aidanh>	reveredge: with the possible exception of the galois field crap for aes
<ams>	aktx: google was never "awesome"
<reveredge>	aidanh, ok... will see as i progress
<aktx>	ams, but i mean, on my way to google, everybody was harping at how awesome i got the opportunity to interview at google..
<reveredge>	ams, did the role not suit you?
<aidanh>	reveredge: which language are you doing this in?
<rindolf>	denommus: hmm... sounds funky.
<reveredge>	aidanh, java or c++ whichever is convenient relative to the problem
<ams>	reveredge: a role of not being able to tell anyone what i am doing, most probobly developing software that spys on people, no.
<denommus>	rindolf: it is weird, but it is useful
<akersof>	ams, you mix ethics and job/money? nice join me in the club of poor programmers
<generalvagueness>	hahah
<ams>	akersof: i'm not poor =)
<generalvagueness>	you also get paid to write open-source
<ams>	aktx: ask them what they do.
<akersof>	ams, you are not so ethical then?
<akersof>	may be
<generalvagueness>	so you're doubly out of the ordinary
<akersof>	just asking :)
<ams>	akersof: i only do free software.
<denommus>	rindolf: imagine that you're defining acceleration as a continuous stream of values (like a function from time to the current value)
<aktx>	ams, i did, the ppl that interviewed me work on different products
<aidanh>	reveredge: ah
<denommus>	rindolf: then, velocity is just an integral of acceleration, right?
<generalvagueness>	you may do what you like and do it comfortably, but that doesn't mean it's an option for everyone
<ams>	aktx: did you sign an nda?
<rindolf>	denommus: yes.
<denommus>	rindolf: and position an integral of velocity
<aktx>	ams, yeah
<aidanh>	wait, what's the integral of position
<aktx>	i had to digitally sign it
<ams>	aktx: so yo're fucked.
<ams>	aktx: just talking baout it might be a violation of it.
<denommus>	rindolf: now, imagine that acceleration has some concept of air resistance
<ams>	aktx: _that_ is how evil google is.
<aktx>	wat??
<reveredge>	aidanh, what? i have worked in c++ or java only . would like to have your suggestions.
<aktx>	i thought it was just common sense stuff
<generalvagueness>	you did read this nda, right?
<ams>	aktx: nda's aren't common sense.
<denommus>	rindolf: so now you need the value of velocity to know what is the acceleration!
<aktx>	generalvagueness, i skimmed through it
<generalvagueness>	>_>
<aidanh>	reveredge: if you're proficient in those languages, there's no reason not to use them
<denommus>	rindolf: how do you take the output of velocity and feed as input to acceleration, if velocity itself depends on acceleration?
<denommus>	rindolf: and the answer is simply "use mfix"
<ams>	aktx: the nda from google also never expiers.
<aktx>	wtf, srsly?
<rindolf>	denommus: i kinda lost you.
<aidanh>	reveredge: on the other hand, it does say on the home page that the challenges are a good way to pick up new languages, if you'd like to
<reveredge>	aidanh, which languages you used?
<ams>	aktx: wtf didn't you read it ...
<aktx>	i mean its common sense that they expire
<aidanh>	reveredge: personally, i used them as an excuse to learn nim
<aktx>	like copyright
<ams>	aktx: no.
<aidanh>	reveredge: but i'm considering getting back into them now and resuming in haskell
<aktx>	doesnt ever company do nda's then?
<aktx>	so it's the same deal?
<denommus>	rindolf: you know how air resistance depends on the current velocity, right?
<aidanh>	aktx: mine doesnt
<ams>	aktx: http://cananian.livejournal.com/46914.html
<denommus>	rindolf: and it affects the acceleration
<rindolf>	denommus: air resistance?
<reveredge>	aidanh, yeah i also thought about using something else, but a lot of time will go on the languages rather than the exercises. that made me drop the idea
<ams>	aktx: and you cannot mention google when you have signed it in public statements.
<ams>	aktx: fun eh?
<denommus>	rindolf: yes. like, the force that the air makes to push you back when you're going too fast
<aktx>	ams, wait what???
<akersof>	nda should be follow by a bonus or money
<aktx>	so i just violated nda by telling ppl i interviewed at google?
<akersof>	else it is totally unethical
<aktx>	wtf!!!
<denommus>	rindolf: ah, it's called "drag" in english, sorry
<rindolf>	denommus: ah, ok, i understand now.
<aidanh>	reveredge: it depends on the language; what were you thinking of using?
<denommus>	rindolf: the faster you go, the harder the air pushes you back
<aidanh>	aktx: you didn't read your nda?
<ams>	aktx: did you read it?
<denommus>	rindolf: so you have a cyclic definition: velocity depends on acceleration, acceleration depends on velocity
<reveredge>	aidanh, among these languages, i don't know even a bit of haskell, scala and golang. so any among these three
<aktx>	i think i read it
<aidanh>	denommus: shouldn't that be the _change_ in acceleration depends on the velocity?
<ams>	think?
<aktx>	well i signed it, digitally
<ams>	... so you did you read it?
<reveredge>	aidanh, and haskell and scala seem to be much trending nowadaya
<aidanh>	reveredge: well, i've been picking up haskell over the past week or two and it's been very enjoyable
<aktx>	the text scrolled in my screen and my eyeballs saw the text
<ams>	so you didn't.
<aktx>	i dunno man, i mean, it should be common sense
<aktx>	i didnt think it would be like selling your soul out
<denommus>	aktx: google is cool, if they offer you an opportunity, take it
<ams>	aktx: nda ...a nd common sense ..
<aktx>	dude
<ams>	google is nothing at all cool.
<denommus>	aktx: if they try to make you break your principles, just quit
<reveredge>	aidanh, is it difficult, which language is it very close to?
<ams>	aktx: http://cananian.livejournal.com/46914.html read that
<denommus>	aktx: it's not like you're being forced to keep working anywhere
<akersof>	ams, cool is defined by the trends
<aidanh>	reveredge: i didn't find it particularly difficult
<aktx>	ams, dude i am reading that and it scares me
<akersof>	and google is cool nowdays
<aktx>	denommus, yeah but i signed some contract that apparently is crazy
<ams>	akersof: nda's are _never_ reasonable.
<denommus>	aktx: an nda? most companies ask for that
<aktx>	denommus, yeah exactly, i thought most companies do ndas
<aidanh>	reveredge: it's a functional language, where functions are first-class objects that can be manipulated in the same way variables can be
<aktx>	its comon sense not to talk about your companies' products and customers
<denommus>	aktx: again, if they ask you to do some hideous work that goes against your principles, you can just leave
<reveredge>	aidanh, then i would love to give a try to it.
<aktx>	ams, what kind of company you work for?
<denommus>	ams: good for you. some of us need to do that to put food on our tables
<ams>	aktx: contractor.
<aktx>	i dont get why you still turned down google offer
<aidanh>	reveredge: it tends to be very concise; so you can write code like "sum [1,2,3,4]", which will give you 10
<ams>	aktx: cause they are evil?
<aktx>	but i do sense that the google interview was kinda on the easy side
<reveredge>	aidanh, something like python?
<aktx>	i read an article lots of developers are leaving google
<aidanh>	reveredge: or filter even [1,2,3,4], which will give you [2,4]
<denommus>	ams: every single company is evil
<rantingdude>	aidanh: what is very concise?
<aktx>	so maybe that's why my interviews were a bit easier than i what i anticipated
<ams>	denommus: not really.
<rantingdude>	denommus: define evil
<rantingdude>	there is no "good" and "evil", just views
<ams>	doing dishes is evil.
<reveredge>	ams, what they asked? how much was algorithms and tech?
<ams>	reveredge: ?
<aidanh>	reveredge: not really like python; concise in the sense that you don't have to write much code to express your ideas
<aktx>	ams, how hard were the google interviews?
<ams>	aktx: i didn't find it very hard ..
<ams>	mostly a waste of time ..
<aktx>	yeah, for being google i thought they would ask me some crazy dp problems..
<aktx>	but it was mostly basic stuff from cs 101 :\
<reveredge>	ams, in google interview?
<denommus>	rantingdude: having a society based on the concept of 1% of the people having almost 50% of the resources, while there are people dying of hunger is pretty evil
<aidanh>	reveredge: there's an online course here https://www.seas.upenn.edu/~cis194/spring13/ ; i'm currently working through the lectures and assignments, and it's very easy to digest
<ams>	if someone contacts me and they want to hire me, then having four phone intervews, two one site interviews, and what not is a waste of my time .. at least they paid for the trip, hotel, and all :)
<diminoten>	people dying of hunger is a logistics issue
<diminoten>	not a wealth issue
<diminoten>	we have the food, it's just hard to get the food to them reliably
<denommus>	diminoten: and what does the current system do to fix this logistic issue?
<ams>	(and i refused to sign an nda)
<aawe>	i wanted to work at google when i was younger
<aktx>	ams, i only had one phone interview and an on-site
<rantingdude>	without poor people there wouldn't be rich people. something needs to force you to produce cheap stuff.
<diminoten>	denommus: we can't force them to not be corrupt
<aawe>	^
<generalvagueness>	rantingdude, that would be ok with me
<aawe>	and rich people is, of course, a good thing
<aawe>	 /s
<diminoten>	we give money to their governments, but they don't put that money towards the people
<ams>	aktx: shurg, depends on what position i supose.
<diminoten>	what else can we do?  invade?
<reveredge>	aidanh, thanks for the link. bookmarked it. what language u generaly work in?
<ams>	reveredge: i didn't take notes ..
<aktx>	yeah, i think mine was mostly front-end, lol
<rantingdude>	only 1% of mankind does the heavy mental lifting which is responsible for the technology we enjoy nowadays.
<denommus>	diminoten: corruption is not the only problem
<aktx>	urs was prolly rly crazy backend stuffs
<diminoten>	it's a biggie though
<diffract|>	i am the 99%
<generalvagueness>	yes, rantingdude, and for the most part those people aren't ceos
<denommus>	rantingdude: do you really believe they have half of earth's resources because they do some kind of mental lifting?
<diminoten>	the folks who are actually starving could easily be fed with the amount of resources the money we already give could buy
<reveredge>	ams, fine it seems it was  long back
<ams>	aktx: it wasn't that interesting actually .. i'd rather be free as a bird, and do fun shit than work for some specific company.
<aidanh>	reveredge: for the past few years i've been mostly working in c, although occasionally using python, lua and similar languages
<rantingdude>	denommus: i don't mean the rich 1%. but the other 1%
<ams>	reveredge: a few years back
<ams>	reveredge: not like google has exactly changed .. see snowden.
<aktx>	ams, yeah but... google! they have nap pods, free food, and goofy fun hats!
<denommus>	i wouldn't work for google myself
<denommus>	but mostly because i dislike their technology stack
<aktx>	i admit, i applied to google just so i can get one of those funny hats with the wheel on top
<denommus>	seriously, go? dart?
<aktx>	denommus, but isnt google rly prestigious?
<ams>	aktx: i work at home. i have a nice sofa to sleep on, awesome food, and i can sit nude infront of the computer.
<rantingdude>	denommus: though its not that easy to maintain hierarchy for years which keeps the money flowing.
<darkelement>	test question?
<ams>	aktx: and .. i get to work on fun shit.
<aktx>	like the lady that booked my rental car, or the other person that booked my travels, they were all like, good luck at google!
<aktx>	many ppl dont care about other companies
<aidanh>	aktx: prestigiousness doesn't matter too much if you know what you're doing
<diminoten>	i would work for google, but i'd hate how they handle source code -- no code on your local machine, must leave code in secure environment
<denommus>	aktx: yes, but their technology stack is still boring
<aawe>	rantingdude: you are not among the intellectual elite. sorry to break it to you
<aktx>	:(
<aktx>	i mean, you could put in 1-2 years, just so you can have google on your resume
<ams>	diminoten: yeah, it is even worse than some telecos :)
<aktx>	and everybody will insta-respect you
<denommus>	aktx: i already told you
<diffract|>	i wouldn't want to work for google, i would want to make a google
<ams>	aktx: i wouldn't respect you.
<denommus>	aktx: if they offer you an opportunity, accept it
<aktx>	ams, lol
<ams>	aktx: mostly sinc eyou cannot tell me what the heck you did at google
<aktx>	i actually lol'd
<ams>	aktx: not that it says google on your cv
<generalvagueness>	ams aside, what do people actually think, nowadays, when you have google on your resume?
<ams>	aktx: like, what is a nice algorithm you designed while at google?
<akersof>	well i am pretty i am not able to pass a google interview.. they know what i do on internet, my browser history cant lie
<diffract|>	i want to work for the google
<ams>	akersof: you can't ansswer that
<reveredge>	google paycheck is very good, that made me want to work there :)
<denommus>	ams: no employer cares about that
<aktx>	denommus, i sense that too many ppl apply to google, so you get those "types" of ppl
<aawe>	having google on your cv means nothing except that you are not overwhelmingly worthless
<aktx>	like they're too ambitious, not care about technology, you know what i mean?
<reveredge>	but i think you would have a good work environment also
<ams>	denommus: _i_ care about it, that is the type of people i work with
<aidanh>	akersof: i wonder if they'd actually trawl through all of that...
<aktx>	i mean, id love to work for let's say, linux foundation, that's be cool hard-knocks technology
<ams>	sounds boring..
<ams>	:)
<aktx>	but not everybody knows about that org
<denommus>	ams: you're far from the only employer (if you're an employer) in the world
<ams>	at least better than google *g*
<bango>	*they* dont need to trawl anything, just have a crawler present concise results
<ams>	denommus: i employe people at time.
<aktx>	ams, i still cant believ you turned down google, you should apply again man...
<aawe>	ams: are you a boss man?
<diffract|>	i will have google on my cv, under "can use google"
<ams>	aawe: no.
<ams>	:)
<aktx>	diffract|, lol
<ams>	aktx: fuck no.
<akersof>	actually the trends is no more google, but startup of course
<ams>	aktx: you should see the rant i wrote to the recruiter last time they bothered wasting my time.
<aidanh>	diffract|: i'd hire you
<zpartw>	i'm trying to figure out how to generate a 2d game world. i need to place out mountains, trees, bushes, roads, swamps, lakes, rivers, etc. i'm using javascript and i have long experience of general gamedev, but i continue to suck at it. generating worlds in a convincing manner seems very difficult.
<aktx>	ams, lolol
<aktx>	id love to see that xd
<aawe>	aidanh: i'd hire you to my hr department for hiring diffract|
<diffract|>	aawe: thanks mate
<aktx>	zpartw, just pure js? or is this in a browser?
<diffract|>	aawe: that made me feel accomplished
<aidanh>	aawe: well, _i'd_ hire _you_ to my hr department for hiring me for hr positions for hiring diffract| !
<ams>	aktx: see pm
<diminoten>	crazy thought: hire folks based on interviews
<diminoten>	not on resumes
<aawe>	aidanh: that's a great example of good leadership. i'd hire you to be assistant regional manager for that
<diminoten>	i'd hire a guy if he's only ever worked at mcdonalds if he can speak intelligently about the knowledge domain i'm interested in
<diffract|>	my life for hire
<aidanh>	zpartw: what's your current strategy?
<monroe>	what does halt mean and how is it defined ?
<monroe>	in computer science literature
<aawe>	it is not defined
<aidanh>	aawe: heheh
<diffract|>	halt means stop i think
<aawe>	it means that execution stops
<monroe>	yes, how is it defined
<aawe>	the program "ends"
<monroe>	how do i know if the execution stops
<monroe>	formally
<aawe>	it does not have a concrete, general definition
<diffract|>	go to google, type define:halt
<aidanh>	because nothing else happens
<diffract|>	see? i can use google
<monroe>	how would i put some machine to verify if some program has halted or not
<monroe>	or some mechanism
<aidanh>	diffract|: promoted.
<monroe>	i put
<aawe>	monroe: the process exits
<bango>	id use bash script monrow
<diffract|>	put print statements
<diffract|>	\o/
<diffract|>	promotions!
<zpartw>	aktx: what do you mean by "just pure js"? yes. js.
<bango>	lol z
<diffract|>	how do you not know if a program halted?
<zpartw>	aidanh: randomly placing out pre-created "chunks" of tiles.
<aawe>	monroe: halting generally means the process/program ends
<monroe>	we define in our program that whenever the program has achieved a certain state it has halted
<monroe>	is that it ?
<diminoten>	no
<monroe>	and then the question is whether it is ever gonna acheive that state ?
<aktx>	zpartw, do you plan on using in a browser environment with html5?
<monroe>	like exit;
<diminoten>	halting is an undefined problem
<bango>	depends if the certain state is "off"
<aktx>	like html5 canvas or svg?
<aidanh>	zpartw: and you're trying to generate terrain?
<zpartw>	aktx: why are you asking this irrelevant stuff?
<zpartw>	aidanh: what i said initially.
<diminoten>	really guys: http://en.wikipedia.org/wiki/halting_problem
<aktx>	because i can
<bango>	the halting problem :-)
<diminoten>	that's like cs 101 stuff
<diffract|>	i would like to halt my problems
<aidanh>	zpartw: i'd go for something like perlin noise; that's the classic solution
<monroe>	i just dont know how to begin talking about halting if halting is not properly defined
<bango>	opsys
<aktx>	zpartw, you're right, i am asking irrelevant questions, disregard me then :p
<monroe>	i know intuitively what it is but i dont precisely what it is
<diffract|>	monroe: why on earth do you want to define it?
<aawe>	i wrote a perl script that can analyze any machine code plus as set of input and then output whether it will halt (without executing it)
<monroe>	what things halt ?
<monroe>	computations ?
<aawe>	but i forgot to back it up, so it's gone now
<monroe>	what are computations ?
<aidanh>	state transitions?
<monroe>	the problem is hard
<diffract|>	what is love?
<aidanh>	baby don't hurt me
<monroe>	aidanh okay how do you define a state transition to halt
<diffract|>	exactly, same can be said of halt
<monroe>	what does it mean for a state transition to halt
<diffract|>	what is halt? baby don't hurt me. you can't explain that
<monroe>	since computation is state transition
<aawe>	try { ... } catch(programhaltedexception) { system.out.println("not so fast"); }
<aawe>	i have solved the halting problem
<aawe>	all programs will halt
<aawe>	because heat death of universe etc
<aawe>	nobel price pls
<aidanh>	monroe: you don't; most computational models with state transitions explicitly define a set of final states
<aktx>	zpartw, i was thinking if you were gonna use html5 canvas to draw out the various elements, then that'd wouldnt just be js
<monroe>	aidanh oh yes
<bango>	given a finite set of inputs, it should be possible to determine the output/termination operation in polynomial time
<monroe>	aidanh that is what i was thinking
<aawe>	aktx: the api is js, what are you talking about
<aidanh>	monroe: the alternative with these models is just the absence of further input
<aidanh>	and often both are used
<pyon>	how do i phrase this less awkwardly? "a plum object is a contiguous memory block that the garbage collector treats as an indivisible unit. that is, the garbage collector can either let an object survive or reclaim it as a whole, but not anywhere in between."
<bango>	that would also help prove np-completeness
<aktx>	aawe, hmm, okay
<monroe>	aidanh i understood what you said in " most computational models with state transitions explicitly define a set of final states" but not in the last sentence
<monroe>	could you clarify ?
<monroe>	"the alternative with these models"
<akersof>	aktx, you mean dom based vs canvas? but they are js both
<aidanh>	pyon: an object will either be entirely reclaimed or will survive in its entirety?
<monroe>	bango blah, but then we are going into vague garbage stuff again
<monroe>	what is input
<monroe>	and how is it formally defined
<bango>	way to get to the heart of the matter monroe
<monroe>	let me create a bash script
<aktx>	akersof, yeah, that's what i was trying to get at
<monroe>	does it have any sense in talking about input
<monroe>	i dont think so
<bango>	what is 'what', and how can i use it to understand what youre trying to say?
<monroe>	but its a computation
<bango>	recognition of langugage isnt even half the battle of computation
<bango>	syntax parsers do their job, but they wont bake me a cake
<aidanh>	it's basically still the same concept of halting
<monroe>	yes i think it all boils down to the idea of problem
<aidanh>	inside the recognizer, you have state changes, and when your input halts, you get a valid answer
<aidanh>	it's still the input that is halting, not the recognizer
<bango>	write me something that generates its own input, takes meaning from it, and reacts accordingly, and ill show you sentience
<monroe>	bango i know, what would be good was to see what kinds of computation there is
<monroe>	one is recognition computations
<aawe>	no sentient being does that
<aidanh>	bango: first, define meaning
<aidanh>	this reminds me of godel escher bach and 'strange loops'
<bango>	right, so we rationalize reality by externalizing it. but we do generate our own inputs
<monroe>	meaning is generated from interaction between two systems
<reynir>	call zeh fire department
<diminoten>	i am the fire department
<reynir>	call the national guard
<bango>	i'm going to open my own fire department.  people will call me when they want me to set things on fire
<reynir>	i dunno
<reynir>	bango: i know an aussie fireman who puts things on fire
<ori_b>	bango: "when i was a kid, i wanted to be a fireman when i grew up. then i got older and learned that the word was 'arsonist'"
<reynir>	something something things only burn once
<bango>	sounds like a great story you should definitely tell me sometime
<bango>	:-)
<xeno_>	reynir: do it the standard way. turn all the water on, shut and bolt the door, and declare the outside as the new office
<aidanh>	ori_b: lol
<bango>	so anyone done any base64 image uri encoding?
<denommus>	xeno_: hey
<xeno_>	hi
<denommus>	xeno_: would you happen to know how to implement mfix in a language strict by default?
<xeno_>	denommus: not out of the top of my head, no :/
<denommus>	xeno_: the person who is more likely to help me is twey, but he disappeared :-/
<xeno_>	he's probably a ghost
<diffract|>	twey.visible = 1;
<diffract|>	that didn't work
<denommus>	diffract|: that's because twey is written in a pure language. hurr
<xeno_>	denommus: so either he's here or he's not here... there's no "he's here now" :)
<denommus>	xeno_: well, his presence could be a behavior, so it would depend on time
<darkelement>	 hey guys, looking to run some phantomjs code with the phantomjs-node package for node.js. here is the file i'm working on, with phantom-node code commented, and phantomjs code as the rest of the file. hope you guys can help:http://paste.pound-python.org/show/o1s5ic1yt6tla3la4njr/
<denommus>	gosh, only boring languages on stack overflow's chats
<bango>	what would you consider the dryest languagte
<diffract|>	english
<darkelement>	well it's definitely not c
<darkelement>	if you know what i mean
<diffract|>	i like my languages wet
<denommus>	bango: as in terse?
<dolemite_>	hi all
<bango>	dry = just not fun to use
<diffract|>	who's all?
<denommus>	bango: ah. i would go with go
<darkelement>	i haven't met this "all" man either, he seems to be stealing all the hellos
<diffract|>	probably php
<denommus>	gosh, i forgot php
<denommus>	definitely php
<darkelement>	i think it's different for everyone
<dolemite_>	you are all
<darkelement>	:3
<diffract|>	he probably even beat "world" with all the hellos
<darkelement>	lmao
<bango>	i love hp
<bango>	php
<bango>	not hp, f hp
<darkelement>	i think you mean hp printers
<dolemite_>	hpp?
<diffract|>	printers of hp
<bango>	got me rockin like an inkjet
<darkelement>	here i am
<denommus>	though php is probably not that boring, just completely fucking crazy
<darkelement>	rocking like an inkjet
<diffract|>	php is batshit insane
<denommus>	java is so boring that i want to kill myself whenever i work with it, too
<bango>	haha its pretty intense but its what i do for a living, so ive nested into it pretty nicely
<darkelement>	there is a reason php is insane
<xeno_>	bango: dryest language? cobol?
<darkelement>	finding link
<xeno_>	bango: maybe fortran
<denommus>	bango: well, i live off c++ and javascript. i dislike both
<bango>	haha assembly for me
<denommus>	bango: (i actually don't dislike c++, but it's below the line of liking)
<xeno_>	bango: ah, the least fun to use... hm.. yeah, probably cobol
<dolemite_>	i think java is very very boring
<xeno_>	bango: if i was sentenced to use cobol for the rest of my life, i would make sure it was a short life
<bango>	haha well ive never got into cobol and now i probably never will
<darkelement>	nvm cant find it
<bango>	darkelement what was it?
<mike802>	did you guys hear about the new app to let you make js programs into desktops apps
<dolemite_>	any language with garbage collection is no fun
<ams>	dolemite_: why do you say that?
<denommus>	mike802: you mean qt?
<dolemite_>	ams
<darkelement>	bango: apparently php started out with some guy just making really easy to remember at the time words for syntax, and never changed it back.
<xeno_>	bango: you likely never would... you would turn away after the first example
<dolemite_>	it keeps you on your toes :)
<ams>	dolemite_: no, it gives you a migrane
<darkelement>	[needs citation]
<bango>	http://en.wikipedia.org/wiki/malbolge
<dolemite_>	it's really not that bad, ams
<ams>	yeah its.
<exio4>	dolemite_: garbage collection allows you to work immutable data and lots of sharing extremely easily
<exio4>	dolemite_: and also, high order functions in a reall nice way
<denommus>	exio4: ownership semantics is better than garbage collection for immutable data and sharing
<diffract|>	garbage collection keeps my room tidy
<denommus>	exio4: but higher order functions are hard without garbage collection, indeed
<exio4>	denommus: given a powerful enough type system...
<darkelement>	bango: this is awesome, however i feel like i've heard about it on elementary.
<ams>	dolemite_: and a language with gc, doesn't nessecerily mean that you loose control over allocation.
<darkelement>	xd
<bango>	what, malbolge?
<darkelement>	bango, yea
<dolemite_>	ams: what language is an example of that?
<bango>	wouldnt doubt it
<darkelement>	bango, may have been referenced as a form of encryption, idk. this is awesome though
<ams>	dolemite_: common lisp
<darkelement>	also, wikipedia has taught me that there are a lot of things named after the 8th circle
<ams>	dolemite_: i have giga bytes of data that is specially not gced ..
<ams>	in memory ..
<dolemite_>	why?
<ams>	here is a good chapter http://www.sbcl.org/1.0/manual/garbage-collection.html
<dolemite_>	sounds like google chrome.
<ams>	prolly exists a newer manual for it .. but you don't care.
<ams>	dolemite_: why? cause i don't need it gc:ed? it is immutable.
<allegorical>	hm, i think i will get a 120gb ssd and run the lubuntu from there on my desktop. i'm planning to focus on python, haskell, sql and github. maybe some game dev and back-end web dev. or something.
<bango>	that sounds about right allegorical
<bango>	ive got those things, i cant decide what kind of server to host
<allegorical>	:)
<literphor>	allegorical you should use vagrant to deploy ubuntu off your desktop
<literphor>	make life a lot easier down the road
<bango>	i was thinking about making a website and backend for an arma 3 game server, they have mods like epoch that use sql database to save the game state
<bango>	a nice ui for users to customize their loadout, maybe pay a couple bucks for more donator options, etc
<allegorical>	literphor: sorry, why? i'm not too familiar with 'virtual development environment'
<allegorical>	i was thinking to use a usb drive to install lubuntu onto ssd and boot desktop from there
<xeno_>	so, anyone coq'y here? http://pastebin.com/nbpnjq8u <- how can this go wrong?
<bango>	this looks like an inductive proof of some sort?
<literphor>	allegorical if you’re familiar with the command line (if you’re not you should be if you’re going to work with ubuntu), then vagrant is a super easy to use fully deployable vm that can be version controlled.
<bango>	literphor what about something like jails
<literphor>	allegorical i switched over to vagrant because my localhost blew up and i didn’t want to go threw the trouble of fixing it. having a vm just makes my life a lot easier than having to keep my laptop up to date and in shape
<literphor>	something goes wrong, i can just redeploy my vm
<allegorical>	oh i see ok
<literphor>	bango i’ve never used it before, but i’d say any vm is better than none
<allegorical_>	so as i gather it is important to use virtual machines.
<allegorical_>	since my desktop is rather capable, perhaps i should just go with ubuntu instead of lubuntu? and then i can ubuntu to launch virtual machines of ubuntu?
<allegorical_>	can use ubuntu*
<thegladiator>	allegorical: what do you use your desktop for normally? if you need a light system lubuntu is fine ... ubuntu is more fancy ... but some people liek it
<maxels>	question: i've seen the whole mutable methods vs immutable discussed ad nauseum, but i was thinking about using it in practice and it becomes much less clear. if i am using good practices and abstracting lots of tiny little routines but am making them immutable and having to potentially copy large collections over, i'm looking at some massive inefficiencies
<ori_b>	allegorical: ...why is it important to use virtual machines?
<ori_b>	maxels: if you're making things immutable, you have to use appropriate data structures...
<thegladiator>	virtual machines are not really required in desktops... its more useful when you have servers
<allegorical>	ori_b: i dont know for sure but something about hosting web sites and a fault occurring; seemingly the vm setup lets you get back 'online' faster?
<allegorical>	web site/web server
<_blizzy_>	memaybe.call();
<allegorical>	my goal is to set up a good environment for working in on my desktop
<maxels>	ori_b, can you explain with an example? i'm not sure what you're getting at
<ori_b>	allegorical: eh. the virtual machines don't really help with that much if you don't have scripted deployments.
<thegladiator>	allegorical: so its not a disktop if you are going to run a web server
<allegorical>	i wouldn't be running a web server there most likely
<ori_b>	maxels: so, for example, if you're adding a value to a list
<inphase>	thegladiator: does my laptop stop becoming a laptop because i have a web server on it?
<ori_b>	with a linked list, 'list prepend(list l) { return new list(.next = l); }'
<thegladiator>	inphase: if you are planning to do a hosting then its more like a server ...
<allegorical>	ok then i don't seek fancy, i will go with lubuntu
<ori_b>	maxels: no copying, no modification -- you have a new list and the rest of the data is unchanged.
<ori_b>	immutable.
<bango>	yeah solid os with a server safe in a repo, sounds like a good bet
<allegorical>	ok ori_b, thanks i will have to look into it some more
<ori_b>	maxels: you can do this with other data types to.
<inphase>	thegladiator: i prefer to keep fuzzy boundaries
<ori_b>	maxels: new root node for a tree with only a few changes, but the old root node stays valid, for example.
<maxels>	ori_b, i see, i guess i don't understand the underlying implementation. since a linkedlist can never have elements in the middle removed you don't have to worry about the integrity of the data in the middle?
<ori_b>	http://www.cs.cmu.edu/~rwh/theses/okasaki.pdf
<ori_b>	maxels: you just structure things so that you don't do that.
<allegorical>	for some reason i was unable to get the system up on my 2gb usb stick. i figure it is a good time to get an ssd anyway.
<ori_b>	maxels: basically, you need to structure your code around immutability if you want to go that way.
<_w_>	maxels: immutable structures is all about /not/ copying
<_w_>	maxels: since things are immutable, they can be reused
<bango>	i got a 480gb intel ssd on newegg for like $190
<bango>	also i got the mushkin chronos and havent had any probs, 120gb for $54
<maxels>	_w_, maybe i'm getting ahead of myself. i'm trying to come up with hypothetical situations where say you need to separate out a loop that has been nested 3 times, where you are modifying the members of each collection you're iterating over. in the interest of readability it'd be nice to abstract each nested loop into a routine of its own
<maxels>	but if you did that, and you wanted to modify each sub-list you iterate over, while using immutable routines, you would need to make copies of that list to modify. maybe i'm way off base here though getting into hypothetical situations
<_w_>	maxels: be more specific. let's say you're adding elements to a red-black tree. a typical add operation will "copy" 1 node. at worst, you "copy" log(n) nodes
<_w_>	you typically never use linked lists
<_w_>	that holds true whether you're doing things immutably or not
<maxels>	right, i usually am iterating over an arraylist at the highest level, doing lookups on separate list, and manipulating some record i ultimately want to return (i'm talking about typical extract transform load type behavior)
<_w_>	also, you're presupposing mutability when yoy say things like "modifying the members of..."
<maxels>	well, doing lookups probably on maps
<maxels>	or dicts
<_w_>	*you
<_w_>	i imagine you've just not tried it enough to get a feel for how you do things
<_w_>	so you're imagining doing things the same way you would if everything was mutable, and not understanding how it fits together
<maxels>	_w_, yes, you are correct
<maxels>	_w_, i need to just practice some things and try em out, share them and have them peer reviewed
<aktx>	im rly tired and i want to go home early
<aktx>	should i?
<autopoiesis>	could anybody here teach me a couple of things about eliminating recursion of a function? (making it iterative instead)
<koollman>	autopoiesis: to eliminate recursion, you must first eliminate recursion :)
<zuu>	hah :d
<aewffwea>	autopoiesis: easyest automatic way? simulate recursion with a stack an a loop :)
<autopoiesis>	haaha
<koollman>	autopoiesis: more seriously, the most general technique is to add a variable to store the state that would end up on the stack
<oleo>	begin from the beginning and move to the end.....
<autopoiesis>	i thought that was to understand recursion
<koollman>	but then it is rarely the most efficient way to do so
<oleo>	but when you see the bunny ask him what time it is!
<oleo>	lol
<aewffwea>	autopoiesis: why do you want to eliminate recursion?
<koollman>	autopoiesis: typically : you build a tree of function calls because you have recursivity. you replace that implicit tree building by an explicit variable containing the useful information (maybe a tree, but rarely the useful case). you then try to think of ways to rearrange operation to make it faster. which is hard.
<autopoiesis>	it's for a homework, but i think i need a little help to get it done
<darkelement>	what would be the simplest implementation of recursion in a program? like to better understand how to implement it, or a depth first search for instance.
<aktx>	why is recursion so important?
<puddlejumper>	what up cs bitches?!
<darkelement>	puddlejumper, hallo
<aktx>	ive never used recursion in real life, only in those dumb coding interviews
<denommus>	darkelement: let rec factorial = function | 0 -> 1 | n -> n * factorial (n-1)
<aewffwea>	aktx: do you know the ackerman function?
<sengoku>	is there a tool i can use to put enums of all variables and have it generate a table of cases
<aktx>	aewffwea, no
<darkelement>	denommus, perhaps a python example or just a problem to be overcome by using said recursion.
<koollman>	aktx: because sometimes it's a simple way to write a function to solve a problem
<darkelement>	^
<aktx>	i never across that "sometimes" moment
<denommus>	aktx: because there are lots and lots of things that are more easily expressed with recursive functions, like trees
<puddlejumper>	repitition
<aktx>	*never came across
<aewffwea>	aktx: please, implement this http://en.wikipedia.org/wiki/ackermann_function without recursion :p
<koollman>	aktx: typically : when dealing with filesystems, or xml, or other tree-like structures
<puddlejumper>	repetition
<aktx>	i see
<puddlejumper>	owls give me the creeps
<aktx>	arent recursive functions always worse perfromance than iterative?
<koollman>	no
<denommus>	aktx: no
<aewffwea>	aktx: it depends on the platform, etc...
<aktx>	because you've got function stacks
<koollman>	you don't have to have stacks. compilers are smart
<denommus>	aktx: 1 - not every language implement function calls with stacks
<autopoiesis>	i would send you the code i have to eliminate recursion to, but most words are in spanish, would that be a problem?
<aktx>	yes, that would be a problem
<aewffwea>	autopoiesis: that sounds a lot like homework
<aktx>	but i like taco bell
<koollman>	it is homework
<denommus>	aktx: 2 - some recursive functions can be understood by the compiler as an iterative call
<autopoiesis>	it is homework
<aewffwea>	autopoiesis: ok, send it and i'll give you a hint
<autopoiesis>	great :)
<aktx>	autopoiesis, are spanish food necessarily the same as mexican food? like burritos and stuff?
<koollman>	autopoiesis: you can try. but since it's homework, hope for a hint rather than a solution
<denommus>	aktx: search for tail call optimization
<koollman>	aktx: no.
<darkelement>	any simple problems that i can try to implement a depth first search algorithm to solve?
<autopoiesis>	i am looking for hints and not solutions
<aktx>	denommus, okay, im gonna go bing that
<aktx>	darkelement, yeah valid point, dfs
<aewffwea>	autopoiesis: btw: do you just need to give an iterative function, or prove that it does the same thing?
<koollman>	aktx: different continent, different food culture, really
<denommus>	aktx: stop trying to make "to bing" a thing. it's not a thing
<aktx>	koollman, i see
<aktx>	denommus, lol
<aktx>	i cant believe microsoft still invests in bing
<autopoiesis>	aewffwea: it has to work if that's what you mean..
<aewffwea>	aktx: why wouldn't they?
<darkelement>	:dude you're trying to make a thing! nah man everyone says it"
<aktx>	aewffwea, because no one uses bing
<darkelement>	aktx: yea it's a good example of recrsion, and i wnat to be able to use it better
<aewffwea>	aktx: yet a lot of people uses yahoo, which uses bing
<denommus>	aktx: there must be enough people using it for it to still exist
<aktx>	yeah, all of microsoft's employees :p
<aktx>	and apparently yahoo's employees too :s
<denommus>	aktx: and windows phone users, possibly
<darkelement>	:|
<darkelement>	why
<aewffwea>	aktx: i'm not sure how much money they spend on it, but they might be on green... there are far less popular search engines out there
<aktx>	lol windows phone
<darkelement>	hey another windows phone user! *changes tally to 3*
<aktx>	i visited the microsof campus, everybody there either has an iphone or android
<koollman>	aktx: microsoft can afford to spend a lot in many failures and failing projets. they have a lot of failed project, but a lot of money, too
<aktx>	yeah, i wonder how ms still makes so much money
<aewffwea>	koollman: everyone has failed projects... what about google+?
<darkelement>	since no one will answer my question, how about this: iphone or android?
<zuu>	werent there some kind of new privacy concerned search engine thing? some two letters, then a capital letter, and then 4-6 more letters
<koollman>	aewffwea: but rarely so many of them :)
<doomlord>	microsoft office bankrolls a lot of experiments, right
<zuu>	i recall that it somehow sounded like some kind of asian thing
<doomlord>	credit to them for experimenting, but of course perhaps no company should have been allowed to get so big
<zuu>	albeit written with latin letters :p
<darkelement>	so when is internet explorer going to be mercy killed?
<koollman>	zuu: cannot think of a similar name.  there's duckduckgo, but that's not the pattern you described
<zuu>	yeah, i think this is much newer than ddg
<koollman>	doomlord: they aren't 'big' anymore. apple is big. :)
<autopoiesis>	alright, this is the header: http://pastebin.com/im4ka4zn
<autopoiesis>	and this is the .c file: http://pastebin.com/qqfwwjmg
<autopoiesis>	for anyone else joining right know what i must do for a homework is to eliminate recursion of the functions and leave them iteratives, i am not looking for someone to do the homework for me, rather than hints and help because i feel a little lost :)
<zuu>	i found it! https://ixquick.com
<doomlord>	koollman i haven't checked stats lately. consumer presence sure , but is microsoft still 'big' by virtue of ms office
<zuu>	not quite a capital letter though, just change of colors :p
<aewffwea>	autopoiesis: what recursion are you trying to eliminate?
<autopoiesis>	aewffwea: all of them d:
<aewffwea>	autopoiesis: choose one
<aktx>	also, why are some programmers rly mean?
<koollman>	doomlord: i was referring to money, mostly.
<darkelement>	aktx, mean people
<gedamo>	aktx: programmers are human
<aktx>	it's so easy to ask a dumb question and they start retorting in a rly offensive manner, as if you're an idiot
<doomlord>	market cap? or cash ?
<autopoiesis>	aewffwea: the one i'm most afraid of is "eliminar"
<aewffwea>	aktx: because they have the same amount of programmers to the right, and to the left xd
<zuu>	btw, i have no idea how good that engine is, i just came to think of it, now that you talked about bing. i found it interresting :>
<aktx>	aewffwea, xd
<darkelement>	autopoiesis, if only it was not c, i would try an dhelp you
<aktx>	i mean, i dont think any other industry is as harsh as this
<koollman>	doomlord: market cap
<doomlord>	"why are some programmers rly mean" ... preistly cult. i beleive we live in a world of surpluss labour, a lot of work is just creating and overcoming artificial barriers.
<darkelement>	idk, perhaps because there are mean people who happen to be programmers, perhaps because communicating on internet instead of physically
<autopoiesis>	darkelement: i think that's it
<aewffwea>	autopoiesis: do you know how to eliminate tail recursion?
<koollman>	doomlord: but it is also true for cash :)
<autopoiesis>	aewffwea: i didn't hear about tail recursion until now o:
<doomlord>	heh ok. i never realised apple was actually bigger than microsoft now
<darkelement>	autopoiesis, just a theory but thanks
<darkelement>	:3
<denommus>	darkelement: ok, i'll answer your question
<darkelement>	ayy, thanks
<denommus>	darkelement: try to implement a factorial function in python with a fixed-point combinator
<darkelement>	denommus, alright
<aewffwea>	autopoiesis: basically if you do return eliminar(something_a, something_b); it's the same as doing a while (!finished) {  and then putting param_1 = something_a; param_2 = something_b; finished = false}
<zuu>	doomlord: when you say bigger, i wonder in what sense you mean that?
<doomlord>	koollman says apple are bigger in market capitalization now
<darkelement>	denommus, just need to figure out how to implement a fixed point combinator, :d
<sir_galahad_ad>	i don't know about bigger but certainly eviler
<doomlord>	i dont know what other awys you could quantify it. does that basically mean iphones are more important to societies than windows pcs
<zuu>	sir_galahad_ad: as can be seen form the bite of that apple :>
<autopoiesis>	aewffwea: i understand, i tried to eliminate recursion just using for loops but i couldn't get it done, this was earlier on a university machine so i don't have the awful code i wrote here right now
<zuu>	*from
<sir_galahad_ad>	heh
<autopoiesis>	i just want to know what am i missing, i mean, look at the "inorden" function
<koollman>	doomlord: cash: http://money.cnn.com/2015/05/11/technology/overseas-cash-tech/ . market: http://americasmarkets.usatoday.com/2015/02/10/apple-just-made-history-again/
<zuu>	i mean, like, that apple in paradise, gotten nommed by adam and eve :p
<aewffwea>	autopoiesis: first thing you should do, is add a node* parent parameter to the eliminar function
<denommus>	darkelement: exactly
<doomlord>	if microsoft is the underdog maybe i should start using windows again
<zuu>	i get hungry now..
<aewffwea>	autopoiesis: so you won't need to return any values from it... you'll just do parent->der = node->der; when you delete something
<autopoiesis>	aewffwea: to use as *temp?
<reynir>	are we still talking about mesn programmers?
<darkelement>	doomlord: just wait until hololens
<aewffwea>	autopoiesis: to actually delete a node from the tree, you need it's parent, and the children, and mix them together kind of...
<zuu>	nothing can kill ms, unless they decide to start makign the same crap as everyone else :p
<doomlord>	i'm guessing hololens is going to take many versions before its' genuinely useful
<darkelement>	doomlord, maybe
<aewffwea>	autopoiesis: you can also change the function to look 2 levels deepth so node* node is actually the parent of the nodes you are searching in...
<autopoiesis>	aewffwea: i know you're trying to help me and i appreciate it, but i'm getting a little confuse, maybe a need some more reading on the subject to fully understand what you mean
<deerhawk>	does finding the lcd(a,b) require you to factorize a & b?
<darkghost>	if i don't want to something to be "comitted/added" to git but i still want it to be changed on my local how do i unstage that file?
<zuu>	deerhawk: nope
<akersof>	just a little tip for your future interview: https://i.imgur.com/icrzyty.jpg
<zuu>	akersof: i almost feel like trying that :d
<zuu>	i wonder if they'll even answer me back, that i didn't get the job :p
<akersof>	zuu, try it really, it works
<zuu>	hehe
<nszceta>	2015/05/12 22:13:43 kid1| fatal: dying from an unhandled exception: static_cast<off_t>(theobject->sharedmemorysize()) == thesegment.size()
<nszceta>	libc++abi.dylib: terminating with uncaught exception of type textexception: static_cast<off_t>(theobject->sharedmemorysize()) == thesegment.size()
<nszceta>	what do
<deerhawk>	omg.. i mean, least common divisor of two numbers. do you have to factorize them?
<aidanh>	no
<aidanh>	the least common divisor is 1
<aidanh>	always
<darkelement>	so you are making a program to findleast common denom. of two numbers other than one, right
<bango>	pretty sure i did something like that in cryptography
<deerhawk>	darkelement: yes
<deerhawk>	bango: yes, that's what this is.
<darkelement>	seems easy
<darkelement>	just use mod
<bango>	modulo yes but you want me to ref you mine?
<inphase>	deerhawk: lcd usually refers to the least common denominator.  check what you're actually wanting to ask.
<deerhawk>	darkelement: well, can you do it in polynomial time?
<bango>	im pretty sure i can find it in like 30 seconds
<darkelement>	and when a number that isnt one gets no remainder on both numbers its the answer
<darkelement>	polynomial time...oh god you mean variables
<darkelement>	like 5x^2y^3?
<deerhawk>	darkelement: no.. i mean that finding the lcd for two very large numbers takes longer time than the age of the universe (literally)
<bango>	oh no sorry mines for finding primitive roots mod p
<darkelement>	deerhawk, must be some large numbers
<bango>	with positive u
<bango>	darkelement yes hundreds of digits long
<darkelement>	deerhawk, send me the problem, i'd like to try this out later
<pyon>	deerhawk: you mean lcm?
<bango>	or discrete log?
<darkelement>	i think he means least common factor.
<darkelement>	other than 1
<darkelement>	this would have to do with similar methods to finding if a number is prime or not
<aewffwea>	deerhawk: adding two very large numbers take longer time than the age of the universe... (literally too)
<zuu>	deerhawk: no, not that either
<pyon>	darkelement: in other words, the least prime factor of gcd(x,y) ?
<aewffwea>	deerhawk: in fact, just reading enough memory, takes longer than the age of the universe....
<pyon>	s/prime/non-one/
<bango>	http://mathworld.wolfram.com/discretelogarithm.html
<zuu>	imagine two even numbers, finding the least common divisor is trivial
<zuu>	i mean, even other than 1
<darkelement>	pyon, i guess so
<deerhawk>	darkelement: rsa-4096
<darkelement>	two big numbers
<darkelement>	deerhawk, wat
<inphase>	least-common non-1 factor is in the worst case as hard as factoring a product of two large primes.
<deerhawk>	inphase: yes, thanks :p.
<darkelement>	yea that's the basis of this encryption type it seems
<bango>	np-hard but should be possible in poly
<darkelement>	yea this seems like another p vs np
<darkelement>	in order to do it that quickly
<darkelement>	i'm unsure, could you find the lcf of two prime numbers in that time, if they are hundreds of digits long?
<inphase>	darkelement: factoring is considered likely to be easier than np complete problems.
<darkelement>	alright, what are np complete problems? ones that will only be solved with p vs np?
<inphase>	factoring is also broken by the existence of quantum computers, so i don't recommend investing much effort in using this "hardness" for new encryption algorithms.
<aewffwea>	darkelement: problems that can be solved in polynomial time with a non deterministic turing machine
<darkelement>	aewffwea, ok...
<darkelement>	so problems that can be solved quickly without a computer that already knows the answer?
<denommus>	pyon: i officially quit implementing arrowloop while i don't find twey online
<denommus>	pyon: i'll play around with reactive-banana in the meantime
<darkelement>	inphase, umm ok
<pyon>	denommus: :-o
<programtheworld>	could someone please help me in finding the key length for xor encrypted text? this is what i have so far: https://gist.github.com/anonymous/9b597efcd80a50e7befc
<darkelement>	aewffwea: am i on the mark?
<zuu>	darkelement: well, more like a turing machine, that for one linear chain of decisions will always happen to guess the right decision, as opposed to backtracking.
<inphase>	programtheworld: be more specific in defining "key length for xor encrypted text".  with a otp?
<darkelement>	zuu: ah, so that is a deterministic turing machine?
<aewffwea>	darkelement: do you know what a non deterministic turing machine is?
<programtheworld>	inphase: what is otp?
<zuu>	no, that is the nondeterministc touring machine
<zuu>	*turing
<darkelement>	zuu, ahh, alright
<darkelement>	i was reading the wikipedia article but didnt quite get it
<zuu>	the deterministic one, is the one having to do all the backgracking :>
<inphase>	programtheworld: http://en.wikipedia.org/wiki/one-time_pad
<aewffwea>	zuu: you tour around random places? :) just like a boat...
<zuu>	aewffwea: adventurous boating :p
<programtheworld>	inphase: i'm trying to find the length of the key used to encrypt some text with xor. i have to use the index of coincidence to determine the length. i can assume it is > 3 but < 30
<zuu>	aewffwea: did we meet before?
<darkelement>	alan touring, the less famous boat tour guy
<inphase>	programtheworld: what "index of coincidence"?
<zacts>	toy boat toy boat toy boot
<aewffwea>	zuu: i don't think so... you would've remembered my charming smile (?)
<zuu>	aewffwea: your nick is sufficiently arbitrary that i dont recognize it :p
<zacts>	and no i'm not canadian
<inphase>	programtheworld: are you attempting to do a correlation analysis?
<zuu>	aewffwea: oh, i just, just now got what you meant.. my spelling mistake :p
<darkelement>	could you make a program that produced and tried for solutions to p vs np?
<darkelement>	just curious.
<bango>	nothing that greater minds than me havent already tried
<programtheworld>	inphase: i'm not sure what that is. basically given the ciphertext, you loop and each time shift it by k. if 6% of the characters match up when compared to the original, then k is the key length
<zuu>	darkelement: while i dont have the necessary insight to quite answer that exactly (and i really doubt anyone here could), id still go out on a limb and say, no, that is not possible.
<darkelement>	zuu: hmm, perhaps not yet :d
<darkelement>	zuu: perhaps an ai could
<zuu>	possibly
<darkelement>	ai solves all problems though xd
<inphase>	programtheworld: why would you expect such an assumption to hold true?
<darkelement>	zuu: anyway, thanks!
<textmode>	darkelement: does ai solve the evil ai problem.
<aidanh>	programtheworld: this sounds like the matasano problem
<zuu>	darkelement: actually, on second thought, i guess an ai could get lucky.
<darkelement>	textmode, hehe
<programtheworld>	inphase: http://crypto.stackexchange.com/questions/8845/finding-a-keylength-in-a-repeating-key-xor-cipher the second answer talks about the logistics of it
<zuu>	but i'm afraid that just reachig and answer to that question, might be an undecidable problem :p
<darkelement>	a non-human-extinction-oriented ai then
<programtheworld>	aidanh: i'm not sure what that is
<darkelement>	"nice" ai
<aidanh>	programtheworld: http://cryptopals.com/sets/1/challenges/6/
<zuu>	darkelement: i really like your question. so many details to be considered :d
<zuu>	could be a topic of fun debates :d
<inphase>	programtheworld: okay, so you're frequency counting letter reuse in english text.
<darkelement>	zuu: indeed, but i think i'll focus on making said ai first :d
<zuu>	hehe
<programtheworld>	aidanh: hmm that seems like a slightly different approach, as i'm not analyzing the bits
<darkelement>	that as well! :d
<aidanh>	programtheworld: you were on earlier, right? asking the same question?
<programtheworld>	aidanh: yes but i had to run
<inphase>	programtheworld: so what's wrong with what you've done?  it looks about right, except you didn't do any of the math.
<inphase>	programtheworld: when you execute it on your test sample, does it produce the desired output?
<aidanh>	programtheworld: this is repeating-key xor and the plaintext is english?
<programtheworld>	inphase: well i know for a certain file that the key length is 10, but i'm getting higher numbers with my code on other keysizes
<inphase>	programtheworld: so the output in a pastebin.
<programtheworld>	aidanh: yeah the key repeats
<inphase>	show the
<darkelement>	nice to meet you zuu, perhaps we can work on an ai someday :d
<programtheworld>	inphase: http://pastebin.com/5rhs4tdj
<aidanh>	programtheworld: then i'd recommend the approach outlined in the page i linked; i've implemented it myself and it's very effective
<inphase>	programtheworld: and what is your text length?
<zuu>	darkelement: i need to do _a lot_ of work, just to begin working on an ai to even make a dent in that p=np question :p
<zuu>	darkelement: if you're at or pre uni, now, you should totally chase that thing :d
<programtheworld>	inphase: here is a better ouput, added a new print statement http://pastebin.com/xkknqqsl
<darkelement>	zuu: perhaps not that big of an ai
<darkelement>	xd
<programtheworld>	inphase: so i'm counting wrong somewhere
<bango>	zuu if youre a glutton for mathematical punishment **
<inphase>	programtheworld: what's the text length?  and show the source code for calculating that floating point value.
<zuu>	who knows, maybe you have a theoretical computer scientist in your heart :p
<zuu>	bango: exactly :p
<darkelement>	i'm gonna work my way up to that, :d
<programtheworld>	inphase: the text length is 3136. and i just added this to the print: (double)temp / (double)textlength
<darkelement>	zuu, perhaps :d
<inphase>	programtheworld: you need to output the contents of buff.  you will find it only contains 2 values, randomly distributed.
<zuu>	darkelement: im sure lesser works might make just as much global fun, albeit less fame :>
<bango>	warning: very nerdy https://www.youtube.com/watch?v=a3ww0gweszo
<darkelement>	zuu: gonna work my way up there xd
<programtheworld>	inphase: what do you mean it will only contain 2 values?
<darkelement>	zuu: one day i'll work on *the* ai
<programtheworld>	inphase: i'm getting this: buff: yfgdon6$ezvfpq^km$xq\
